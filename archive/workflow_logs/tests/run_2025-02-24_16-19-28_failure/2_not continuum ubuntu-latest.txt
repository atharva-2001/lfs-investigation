2025-02-24T16:19:45.1551338Z Requested labels: ubuntu-latest
2025-02-24T16:19:45.1551705Z Job defined at: tardis-sn/tardis/.github/workflows/tests.yml@refs/pull/2993/merge
2025-02-24T16:19:45.1551860Z Waiting for a runner to pick up this job...
2025-02-24T16:19:45.3740906Z Job is waiting for a hosted runner to come online.
2025-02-24T16:19:48.2515432Z Job is about to start running on the hosted runner: GitHub Actions 12 (hosted)
2025-02-24T16:19:49.8125353Z Current runner version: '2.322.0'
2025-02-24T16:19:49.8155416Z ##[group]Operating System
2025-02-24T16:19:49.8156244Z Ubuntu
2025-02-24T16:19:49.8156781Z 24.04.1
2025-02-24T16:19:49.8157486Z LTS
2025-02-24T16:19:49.8157946Z ##[endgroup]
2025-02-24T16:19:49.8158509Z ##[group]Runner Image
2025-02-24T16:19:49.8159118Z Image: ubuntu-24.04
2025-02-24T16:19:49.8159645Z Version: 20250209.1.0
2025-02-24T16:19:49.8160747Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250209.1/images/ubuntu/Ubuntu2404-Readme.md
2025-02-24T16:19:49.8162132Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250209.1
2025-02-24T16:19:49.8163023Z ##[endgroup]
2025-02-24T16:19:49.8163626Z ##[group]Runner Image Provisioner
2025-02-24T16:19:49.8164185Z 2.0.422.1
2025-02-24T16:19:49.8164669Z ##[endgroup]
2025-02-24T16:19:49.8166973Z ##[group]GITHUB_TOKEN Permissions
2025-02-24T16:19:49.8169337Z Actions: write
2025-02-24T16:19:49.8170184Z Attestations: write
2025-02-24T16:19:49.8170842Z Checks: write
2025-02-24T16:19:49.8171360Z Contents: write
2025-02-24T16:19:49.8171903Z Deployments: write
2025-02-24T16:19:49.8172483Z Discussions: write
2025-02-24T16:19:49.8173016Z Issues: write
2025-02-24T16:19:49.8173501Z Metadata: read
2025-02-24T16:19:49.8174071Z Packages: write
2025-02-24T16:19:49.8174563Z Pages: write
2025-02-24T16:19:49.8175061Z PullRequests: write
2025-02-24T16:19:49.8175667Z RepositoryProjects: write
2025-02-24T16:19:49.8176260Z SecurityEvents: write
2025-02-24T16:19:49.8176831Z Statuses: write
2025-02-24T16:19:49.8177602Z ##[endgroup]
2025-02-24T16:19:49.8180467Z Secret source: Actions
2025-02-24T16:19:49.8181225Z Prepare workflow directory
2025-02-24T16:19:49.8808424Z Prepare all required actions
2025-02-24T16:19:49.8844984Z Getting action download info
2025-02-24T16:19:50.0449093Z ##[group]Download immutable action package 'actions/checkout@v4'
2025-02-24T16:19:50.0449967Z Version: 4.2.2
2025-02-24T16:19:50.0450805Z Digest: sha256:ccb2698953eaebd21c7bf6268a94f9c26518a7e38e27e0b83c1fe1ad049819b1
2025-02-24T16:19:50.0451848Z Source commit SHA: 11bd71901bbe5b1630ceea73d27597364c9af683
2025-02-24T16:19:50.0452467Z ##[endgroup]
2025-02-24T16:19:50.1322559Z ##[group]Download immutable action package 'actions/upload-artifact@v4'
2025-02-24T16:19:50.1323313Z Version: 4.6.1
2025-02-24T16:19:50.1323962Z Digest: sha256:3f6a28e7a1e0b5c8e2249e28da121a049fa5b91863b04390a46a82e4f8e2da98
2025-02-24T16:19:50.1324836Z Source commit SHA: 4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1
2025-02-24T16:19:50.1325446Z ##[endgroup]
2025-02-24T16:19:50.4494839Z Complete job name: not continuum ubuntu-latest 
2025-02-24T16:19:50.5146189Z ##[group]Run actions/checkout@v4
2025-02-24T16:19:50.5147034Z with:
2025-02-24T16:19:50.5147619Z   repository: tardis-sn/tardis
2025-02-24T16:19:50.5148267Z   token: ***
2025-02-24T16:19:50.5148657Z   ssh-strict: true
2025-02-24T16:19:50.5149062Z   ssh-user: git
2025-02-24T16:19:50.5149474Z   persist-credentials: true
2025-02-24T16:19:50.5149926Z   clean: true
2025-02-24T16:19:50.5150365Z   sparse-checkout-cone-mode: true
2025-02-24T16:19:50.5150856Z   fetch-depth: 1
2025-02-24T16:19:50.5151256Z   fetch-tags: false
2025-02-24T16:19:50.5151666Z   show-progress: true
2025-02-24T16:19:50.5152078Z   lfs: false
2025-02-24T16:19:50.5152461Z   submodules: false
2025-02-24T16:19:50.5152877Z   set-safe-directory: true
2025-02-24T16:19:50.5153554Z env:
2025-02-24T16:19:50.5153925Z   CACHE_NUMBER: 0
2025-02-24T16:19:50.5155076Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T16:19:50.5156428Z   CODECOV_TOKEN: ***
2025-02-24T16:19:50.5156834Z ##[endgroup]
2025-02-24T16:19:50.7509145Z Syncing repository: tardis-sn/tardis
2025-02-24T16:19:50.7511147Z ##[group]Getting Git version info
2025-02-24T16:19:50.7511894Z Working directory is '/home/runner/work/tardis/tardis'
2025-02-24T16:19:50.7512911Z [command]/usr/bin/git version
2025-02-24T16:19:50.7604513Z git version 2.48.1
2025-02-24T16:19:50.7634022Z ##[endgroup]
2025-02-24T16:19:50.7647590Z Temporarily overriding HOME='/home/runner/work/_temp/00917ee9-2098-4d25-8432-21ccb8d6dc8c' before making global git config changes
2025-02-24T16:19:50.7650255Z Adding repository directory to the temporary git global config as a safe directory
2025-02-24T16:19:50.7652780Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis
2025-02-24T16:19:50.7691413Z Deleting the contents of '/home/runner/work/tardis/tardis'
2025-02-24T16:19:50.7695193Z ##[group]Initializing the repository
2025-02-24T16:19:50.7699278Z [command]/usr/bin/git init /home/runner/work/tardis/tardis
2025-02-24T16:19:50.7775970Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-02-24T16:19:50.7777874Z hint: is subject to change. To configure the initial branch name to use in all
2025-02-24T16:19:50.7778901Z hint: of your new repositories, which will suppress this warning, call:
2025-02-24T16:19:50.7779664Z hint:
2025-02-24T16:19:50.7780228Z hint: 	git config --global init.defaultBranch <name>
2025-02-24T16:19:50.7780979Z hint:
2025-02-24T16:19:50.7781586Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-02-24T16:19:50.7782616Z hint: 'development'. The just-created branch can be renamed via this command:
2025-02-24T16:19:50.7784067Z hint:
2025-02-24T16:19:50.7784533Z hint: 	git branch -m <name>
2025-02-24T16:19:50.7785451Z Initialized empty Git repository in /home/runner/work/tardis/tardis/.git/
2025-02-24T16:19:50.7797768Z [command]/usr/bin/git remote add origin https://github.com/tardis-sn/tardis
2025-02-24T16:19:50.7833437Z ##[endgroup]
2025-02-24T16:19:50.7834334Z ##[group]Disabling automatic garbage collection
2025-02-24T16:19:50.7839870Z [command]/usr/bin/git config --local gc.auto 0
2025-02-24T16:19:50.7875169Z ##[endgroup]
2025-02-24T16:19:50.7876720Z ##[group]Setting up auth
2025-02-24T16:19:50.7882712Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-02-24T16:19:50.7918147Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-02-24T16:19:50.8268520Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-02-24T16:19:50.8303015Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-02-24T16:19:50.8553841Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-02-24T16:19:50.8680341Z ##[endgroup]
2025-02-24T16:19:50.8681946Z ##[group]Fetching the repository
2025-02-24T16:19:50.8684779Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +c490dd5c8aeb348a753d7c86b89d8dafeaef1ce9:refs/remotes/pull/2993/merge
2025-02-24T16:19:51.7051164Z From https://github.com/tardis-sn/tardis
2025-02-24T16:19:51.7053988Z  * [new ref]         c490dd5c8aeb348a753d7c86b89d8dafeaef1ce9 -> pull/2993/merge
2025-02-24T16:19:51.7078251Z ##[endgroup]
2025-02-24T16:19:51.7079412Z ##[group]Determining the checkout info
2025-02-24T16:19:51.7080811Z ##[endgroup]
2025-02-24T16:19:51.7085421Z [command]/usr/bin/git sparse-checkout disable
2025-02-24T16:19:51.7127004Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-02-24T16:19:51.7156430Z ##[group]Checking out the ref
2025-02-24T16:19:51.7160897Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/2993/merge
2025-02-24T16:19:51.9174350Z Note: switching to 'refs/remotes/pull/2993/merge'.
2025-02-24T16:19:51.9176104Z 
2025-02-24T16:19:51.9177170Z You are in 'detached HEAD' state. You can look around, make experimental
2025-02-24T16:19:51.9179998Z changes and commit them, and you can discard any commits you make in this
2025-02-24T16:19:51.9183256Z state without impacting any branches by switching back to a branch.
2025-02-24T16:19:51.9184825Z 
2025-02-24T16:19:51.9185828Z If you want to create a new branch to retain commits you create, you may
2025-02-24T16:19:51.9188439Z do so (now or later) by using -c with the switch command. Example:
2025-02-24T16:19:51.9189825Z 
2025-02-24T16:19:51.9190404Z   git switch -c <new-branch-name>
2025-02-24T16:19:51.9191371Z 
2025-02-24T16:19:51.9191950Z Or undo this operation with:
2025-02-24T16:19:51.9192857Z 
2025-02-24T16:19:51.9193356Z   git switch -
2025-02-24T16:19:51.9194219Z 
2025-02-24T16:19:51.9197170Z Turn off this advice by setting config variable advice.detachedHead to false
2025-02-24T16:19:51.9199316Z 
2025-02-24T16:19:51.9201525Z HEAD is now at c490dd5 Merge 929f02d64eabbd5aa7d7453235b4a12dfa161633 into 6e790c66049717c1a7df370212bf7063c85b7fdd
2025-02-24T16:19:51.9208444Z ##[endgroup]
2025-02-24T16:19:51.9238787Z [command]/usr/bin/git log -1 --format=%H
2025-02-24T16:19:51.9262708Z c490dd5c8aeb348a753d7c86b89d8dafeaef1ce9
2025-02-24T16:19:51.9658711Z Prepare all required actions
2025-02-24T16:19:51.9660088Z Getting action download info
2025-02-24T16:19:52.0992174Z ##[group]Download immutable action package 'actions/cache@v4'
2025-02-24T16:19:52.0993653Z Version: 4.2.1
2025-02-24T16:19:52.0995079Z Digest: sha256:b0404c9628d43aa6855629075b28f32cadf8efc5c26198438149f78500112940
2025-02-24T16:19:52.0996997Z Source commit SHA: 0c907a75c2c80ebcb7f088228285e798b750cf8f
2025-02-24T16:19:52.0998506Z ##[endgroup]
2025-02-24T16:19:52.3745118Z ##[group]Run ./.github/actions/setup_lfs
2025-02-24T16:19:52.3746210Z with:
2025-02-24T16:19:52.3747222Z   regression-data-repo: tardis-sn/tardis-regression-data
2025-02-24T16:19:52.3748668Z   atom-data-sparse: false
2025-02-24T16:19:52.3749582Z env:
2025-02-24T16:19:52.3750338Z   CACHE_NUMBER: 0
2025-02-24T16:19:52.3752675Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T16:19:52.3755494Z   CODECOV_TOKEN: ***
2025-02-24T16:19:52.3756363Z ##[endgroup]
2025-02-24T16:19:52.3960017Z ##[group]Run actions/checkout@v4
2025-02-24T16:19:52.3961021Z with:
2025-02-24T16:19:52.3961901Z   repository: tardis-sn/tardis-regression-data
2025-02-24T16:19:52.3963097Z   path: tardis-regression-data
2025-02-24T16:19:52.3964064Z   lfs: false
2025-02-24T16:19:52.3965084Z   token: ***
2025-02-24T16:19:52.3965883Z   ssh-strict: true
2025-02-24T16:19:52.3966710Z   ssh-user: git
2025-02-24T16:19:52.3967692Z   persist-credentials: true
2025-02-24T16:19:52.3968631Z   clean: true
2025-02-24T16:19:52.3969478Z   sparse-checkout-cone-mode: true
2025-02-24T16:19:52.3970492Z   fetch-depth: 1
2025-02-24T16:19:52.3971320Z   fetch-tags: false
2025-02-24T16:19:52.3972178Z   show-progress: true
2025-02-24T16:19:52.3973054Z   submodules: false
2025-02-24T16:19:52.3973906Z   set-safe-directory: true
2025-02-24T16:19:52.3974831Z env:
2025-02-24T16:19:52.3975568Z   CACHE_NUMBER: 0
2025-02-24T16:19:52.3977986Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T16:19:52.3980840Z   CODECOV_TOKEN: ***
2025-02-24T16:19:52.3981690Z ##[endgroup]
2025-02-24T16:19:52.4929041Z Syncing repository: tardis-sn/tardis-regression-data
2025-02-24T16:19:52.4935213Z ##[group]Getting Git version info
2025-02-24T16:19:52.4936814Z Working directory is '/home/runner/work/tardis/tardis/tardis-regression-data'
2025-02-24T16:19:52.4980447Z [command]/usr/bin/git version
2025-02-24T16:19:52.5022695Z git version 2.48.1
2025-02-24T16:19:52.5048226Z ##[endgroup]
2025-02-24T16:19:52.5061835Z Temporarily overriding HOME='/home/runner/work/_temp/c7913840-975d-4523-a388-2cf9cc344e3d' before making global git config changes
2025-02-24T16:19:52.5064500Z Adding repository directory to the temporary git global config as a safe directory
2025-02-24T16:19:52.5068347Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis/tardis-regression-data
2025-02-24T16:19:52.5098307Z ##[group]Initializing the repository
2025-02-24T16:19:52.5103317Z [command]/usr/bin/git init /home/runner/work/tardis/tardis/tardis-regression-data
2025-02-24T16:19:52.5139393Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-02-24T16:19:52.5142697Z hint: is subject to change. To configure the initial branch name to use in all
2025-02-24T16:19:52.5145841Z hint: of your new repositories, which will suppress this warning, call:
2025-02-24T16:19:52.5148415Z hint:
2025-02-24T16:19:52.5149977Z hint: 	git config --global init.defaultBranch <name>
2025-02-24T16:19:52.5151984Z hint:
2025-02-24T16:19:52.5153943Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-02-24T16:19:52.5156953Z hint: 'development'. The just-created branch can be renamed via this command:
2025-02-24T16:19:52.5159333Z hint:
2025-02-24T16:19:52.5160152Z hint: 	git branch -m <name>
2025-02-24T16:19:52.5162073Z Initialized empty Git repository in /home/runner/work/tardis/tardis/tardis-regression-data/.git/
2025-02-24T16:19:52.5166976Z [command]/usr/bin/git remote add origin https://github.com/tardis-sn/tardis-regression-data
2025-02-24T16:19:52.5185561Z ##[endgroup]
2025-02-24T16:19:52.5188532Z ##[group]Disabling automatic garbage collection
2025-02-24T16:19:52.5190764Z [command]/usr/bin/git config --local gc.auto 0
2025-02-24T16:19:52.5220309Z ##[endgroup]
2025-02-24T16:19:52.5222619Z ##[group]Setting up auth
2025-02-24T16:19:52.5227194Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-02-24T16:19:52.5259654Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-02-24T16:19:52.5489276Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-02-24T16:19:52.5523723Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-02-24T16:19:52.5764747Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-02-24T16:19:52.5801735Z ##[endgroup]
2025-02-24T16:19:52.5804160Z ##[group]Determining the default branch
2025-02-24T16:19:52.5806107Z Retrieving the default branch name
2025-02-24T16:19:52.7701596Z Default branch 'main'
2025-02-24T16:19:52.7703001Z ##[endgroup]
2025-02-24T16:19:52.7704270Z ##[group]Fetching the repository
2025-02-24T16:19:52.7713034Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +refs/heads/main:refs/remotes/origin/main
2025-02-24T16:19:55.1047937Z From https://github.com/tardis-sn/tardis-regression-data
2025-02-24T16:19:55.1048622Z  * [new branch]      main       -> origin/main
2025-02-24T16:19:55.1073552Z ##[endgroup]
2025-02-24T16:19:55.1074181Z ##[group]Determining the checkout info
2025-02-24T16:19:55.1075178Z ##[endgroup]
2025-02-24T16:19:55.1080941Z [command]/usr/bin/git sparse-checkout disable
2025-02-24T16:19:55.1116900Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-02-24T16:19:55.1143584Z ##[group]Checking out the ref
2025-02-24T16:19:55.1148043Z [command]/usr/bin/git checkout --progress --force -B main refs/remotes/origin/main
2025-02-24T16:19:55.2521885Z Switched to a new branch 'main'
2025-02-24T16:19:55.2524075Z branch 'main' set up to track 'origin/main'.
2025-02-24T16:19:55.2788322Z ##[endgroup]
2025-02-24T16:19:55.2830210Z [command]/usr/bin/git log -1 --format=%H
2025-02-24T16:19:55.2853897Z b2fdf418ac1a3631f8c3d2a5f392b6ebfa09ba0b
2025-02-24T16:19:55.2988789Z ##[group]Run if [ "false" == "true" ]; then
2025-02-24T16:19:55.2989166Z [36;1mif [ "false" == "true" ]; then[0m
2025-02-24T16:19:55.2989471Z [36;1m  echo "Using atom data sparse checkout"[0m
2025-02-24T16:19:55.2990143Z [36;1m  echo "atom_data/kurucz_cd23_chianti_H_He.h5" > .lfs-files-list[0m
2025-02-24T16:19:55.2990480Z [36;1melse[0m
2025-02-24T16:19:55.2990690Z [36;1m  echo "Using full repository checkout"[0m
2025-02-24T16:19:55.2991046Z [36;1m  git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-files-list[0m
2025-02-24T16:19:55.2991369Z [36;1mfi[0m
2025-02-24T16:19:55.3162119Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-02-24T16:19:55.3162502Z env:
2025-02-24T16:19:55.3162701Z   CACHE_NUMBER: 0
2025-02-24T16:19:55.3163438Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T16:19:55.3164408Z   CODECOV_TOKEN: ***
2025-02-24T16:19:55.3164646Z ##[endgroup]
2025-02-24T16:19:55.3257889Z Using full repository checkout
2025-02-24T16:19:55.4690727Z ##[group]Run actions/cache/restore@v4
2025-02-24T16:19:55.4691036Z with:
2025-02-24T16:19:55.4691272Z   path: tardis-regression-data/.git/lfs
2025-02-24T16:19:55.4692265Z   key: tardis-regression-full-data-6e3f921411cf0a4e16018f0781785ab8728ab151c8f95ea20b0c8e8609b9a332-tardis-sn/tardis-regression-data-v1
2025-02-24T16:19:55.4693037Z   fail-on-cache-miss: true
2025-02-24T16:19:55.4693314Z   enableCrossOsArchive: false
2025-02-24T16:19:55.4693586Z   lookup-only: false
2025-02-24T16:19:55.4693821Z env:
2025-02-24T16:19:55.4694009Z   CACHE_NUMBER: 0
2025-02-24T16:19:55.4694621Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T16:19:55.4695413Z   CODECOV_TOKEN: ***
2025-02-24T16:19:55.4695615Z ##[endgroup]
2025-02-24T16:19:55.7084799Z Cache hit for: tardis-regression-full-data-6e3f921411cf0a4e16018f0781785ab8728ab151c8f95ea20b0c8e8609b9a332-tardis-sn/tardis-regression-data-v1
2025-02-24T16:19:56.7634667Z Received 146800640 of 2160718086 (6.8%), 139.4 MBs/sec
2025-02-24T16:19:57.7664625Z Received 402653184 of 2160718086 (18.6%), 191.2 MBs/sec
2025-02-24T16:19:58.8022620Z Received 671088640 of 2160718086 (31.1%), 210.3 MBs/sec
2025-02-24T16:19:59.8048881Z Received 935329792 of 2160718086 (43.3%), 220.6 MBs/sec
2025-02-24T16:20:00.8058744Z Received 1145044992 of 2160718086 (53.0%), 216.5 MBs/sec
2025-02-24T16:20:01.8042150Z Received 1396703232 of 2160718086 (64.6%), 220.3 MBs/sec
2025-02-24T16:20:02.8091618Z Received 1639972864 of 2160718086 (75.9%), 221.8 MBs/sec
2025-02-24T16:20:03.8140510Z Received 1887436800 of 2160718086 (87.4%), 223.5 MBs/sec
2025-02-24T16:20:04.8138267Z Received 2156523782 of 2160718086 (99.8%), 227.1 MBs/sec
2025-02-24T16:20:04.8415391Z Received 2160718086 of 2160718086 (100.0%), 226.9 MBs/sec
2025-02-24T16:20:04.8418727Z Cache Size: ~2061 MB (2160718086 B)
2025-02-24T16:20:04.8457037Z [command]/usr/bin/tar -xf /home/runner/work/_temp/ffaa02e6-0826-44ec-ac7f-327bf4883d48/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-02-24T16:20:15.7031077Z Cache restored successfully
2025-02-24T16:20:16.0843571Z Cache restored from key: tardis-regression-full-data-6e3f921411cf0a4e16018f0781785ab8728ab151c8f95ea20b0c8e8609b9a332-tardis-sn/tardis-regression-data-v1
2025-02-24T16:20:16.1001623Z ##[group]Run git lfs checkout
2025-02-24T16:20:16.1001996Z [36;1mgit lfs checkout[0m
2025-02-24T16:20:16.1058137Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-02-24T16:20:16.1058464Z env:
2025-02-24T16:20:16.1058655Z   CACHE_NUMBER: 0
2025-02-24T16:20:16.1059280Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T16:20:16.1060089Z   CODECOV_TOKEN: ***
2025-02-24T16:20:16.1060293Z ##[endgroup]
2025-02-24T16:20:36.2197731Z Checking out LFS objects: 100% (204/204), 5.7 GB | 255 MB/s, done.
2025-02-24T16:20:39.9787001Z Prepare all required actions
2025-02-24T16:20:39.9787644Z Getting action download info
2025-02-24T16:20:40.0799053Z Download action repository 'mamba-org/setup-micromamba@v1' (SHA:4b9113af4fba0e9e1124b252dd6497a419e7396d)
2025-02-24T16:20:40.3064573Z ##[group]Run ./.github/actions/setup_env
2025-02-24T16:20:40.3064840Z with:
2025-02-24T16:20:40.3065033Z   os-label: linux-64
2025-02-24T16:20:40.3065231Z env:
2025-02-24T16:20:40.3065398Z   CACHE_NUMBER: 0
2025-02-24T16:20:40.3066007Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T16:20:40.3066770Z   CODECOV_TOKEN: ***
2025-02-24T16:20:40.3066969Z ##[endgroup]
2025-02-24T16:20:40.3087627Z ##[group]Run file_hash=$(cat conda-linux-64.lock | shasum -a 256 | cut -d' ' -f1)
2025-02-24T16:20:40.3088129Z [36;1mfile_hash=$(cat conda-linux-64.lock | shasum -a 256 | cut -d' ' -f1)[0m
2025-02-24T16:20:40.3088736Z [36;1mecho "file_hash=tardis-conda-env-linux-64-${file_hash}-v1" >> "${GITHUB_OUTPUT}"[0m
2025-02-24T16:20:40.3144635Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-02-24T16:20:40.3144978Z env:
2025-02-24T16:20:40.3145155Z   CACHE_NUMBER: 0
2025-02-24T16:20:40.3145757Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T16:20:40.3146516Z   CODECOV_TOKEN: ***
2025-02-24T16:20:40.3146719Z ##[endgroup]
2025-02-24T16:20:40.3509429Z ##[group]Run mamba-org/setup-micromamba@v1
2025-02-24T16:20:40.3509691Z with:
2025-02-24T16:20:40.3509892Z   environment-file: conda-linux-64.lock
2025-02-24T16:20:40.3510467Z   cache-environment-key: tardis-conda-env-linux-64-d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee-v1
2025-02-24T16:20:40.3511288Z   cache-downloads-key: tardis-conda-env-linux-64-d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee-v1
2025-02-24T16:20:40.3511846Z   environment-name: tardis
2025-02-24T16:20:40.3512078Z   cache-environment: true
2025-02-24T16:20:40.3512296Z   cache-downloads: true
2025-02-24T16:20:40.3512509Z env:
2025-02-24T16:20:40.3512676Z   CACHE_NUMBER: 0
2025-02-24T16:20:40.3513277Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T16:20:40.3514030Z   CODECOV_TOKEN: ***
2025-02-24T16:20:40.3514227Z ##[endgroup]
2025-02-24T16:20:40.4974421Z Will download micromamba to /home/runner/micromamba-bin/micromamba
2025-02-24T16:20:40.4984946Z ##[group]Install micromamba
2025-02-24T16:20:40.7828000Z micromamba installed to /home/runner/micromamba-bin/micromamba
2025-02-24T16:20:40.7828962Z ##[endgroup]
2025-02-24T16:20:40.7829753Z Adding conda-forge to condarc channels ...
2025-02-24T16:20:40.7840102Z ##[group]Initialize micromamba for bash.
2025-02-24T16:20:40.7859509Z [command]/home/runner/micromamba-bin/micromamba shell init -s bash -r /home/runner/micromamba --log-level warning --rc-file /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T16:20:40.7984743Z Modifying RC file "/home/runner/.bashrc"
2025-02-24T16:20:40.7985698Z Generating config for root prefix [1m"/home/runner/micromamba"[0m
2025-02-24T16:20:40.7986281Z Setting mamba executable to: [1m"/home/runner/micromamba-bin/micromamba"[0m
2025-02-24T16:20:40.7986862Z Adding (or replacing) the following in your "/home/runner/.bashrc" file
2025-02-24T16:20:40.7987200Z 
2025-02-24T16:20:40.7987484Z # >>> mamba initialize >>>
2025-02-24T16:20:40.7987806Z # !! Contents within this block are managed by 'mamba init' !!
2025-02-24T16:20:40.7988207Z export MAMBA_EXE='/home/runner/micromamba-bin/micromamba';
2025-02-24T16:20:40.7988559Z export MAMBA_ROOT_PREFIX='/home/runner/micromamba';
2025-02-24T16:20:40.7989053Z __mamba_setup="$("$MAMBA_EXE" shell hook --shell bash --root-prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
2025-02-24T16:20:40.7989490Z if [ $? -eq 0 ]; then
2025-02-24T16:20:40.7990031Z     eval "$__mamba_setup"
2025-02-24T16:20:40.7990262Z else
2025-02-24T16:20:40.7990543Z     alias micromamba="$MAMBA_EXE"  # Fallback on help from mamba activate
2025-02-24T16:20:40.7991035Z fi
2025-02-24T16:20:40.7991198Z unset __mamba_setup
2025-02-24T16:20:40.7991400Z # <<< mamba initialize <<<
2025-02-24T16:20:40.7991544Z 
2025-02-24T16:20:40.8003022Z Moving mamba initialize block to .bash_profile
2025-02-24T16:20:40.8013897Z ##[endgroup]
2025-02-24T16:20:40.8015078Z ##[group]Restoring downloads from `/home/runner/micromamba/pkgs` ...
2025-02-24T16:20:41.9406121Z Received 318767104 of 356815776 (89.3%), 302.5 MBs/sec
2025-02-24T16:20:42.1747548Z Cache Size: ~340 MB (356815776 B)
2025-02-24T16:20:42.1790258Z [command]/usr/bin/tar -xf /home/runner/work/_temp/c6659a11-369f-487f-9c5b-2ed6b4200dbd/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-02-24T16:20:42.6761806Z Cache restored successfully
2025-02-24T16:20:42.7503382Z Restored cache with key `tardis-conda-env-linux-64-d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee-v1-linux-64`
2025-02-24T16:20:42.7504967Z ##[endgroup]
2025-02-24T16:20:42.7516078Z ##[group]Restoring environment `tardis` from `/home/runner/micromamba/envs/tardis` ...
2025-02-24T16:20:42.9428163Z Received 356815776 of 356815776 (100.0%), 169.4 MBs/sec
2025-02-24T16:20:43.8360708Z Received 339738624 of 444032293 (76.5%), 323.0 MBs/sec
2025-02-24T16:20:44.1770695Z Cache Size: ~423 MB (444032293 B)
2025-02-24T16:20:44.1875712Z [command]/usr/bin/tar -xf /home/runner/work/_temp/bb5510c4-7998-463e-9078-6767c70042db/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-02-24T16:20:44.8317504Z Received 444032293 of 444032293 (100.0%), 211.3 MBs/sec
2025-02-24T16:20:49.4585718Z Cache restored successfully
2025-02-24T16:20:49.5362719Z Restored cache with key `tardis-conda-env-linux-64-d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee-v1-linux-64-tardis-args-4f53cda-root-dcc80ee-bin-[object Promise]-file-d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee`
2025-02-24T16:20:49.5365073Z ##[endgroup]
2025-02-24T16:20:49.5365674Z Adding environment tardis to auto-activate bash ...
2025-02-24T16:20:49.5375438Z Generating micromamba run shell.
2025-02-24T16:20:49.5401299Z ##[endgroup]
2025-02-24T16:20:49.5402857Z Set environment variables.
2025-02-24T16:20:49.5404057Z ##[group]micromamba info
2025-02-24T16:20:49.5405693Z [command]/home/runner/micromamba-bin/micromamba info -r /home/runner/micromamba -n tardis
2025-02-24T16:20:49.5629185Z 
2025-02-24T16:20:49.5629398Z        libmamba version : 1.5.10
2025-02-24T16:20:49.5629874Z      micromamba version : 1.5.10
2025-02-24T16:20:49.5630548Z            curl version : libcurl/8.10.1 OpenSSL/3.3.2 zlib/1.3.1 zstd/1.5.6 libssh2/1.11.0 nghttp2/1.58.0
2025-02-24T16:20:49.5631440Z      libarchive version : libarchive 3.7.4 zlib/1.2.13 bz2lib/1.0.8 libzstd/1.5.6
2025-02-24T16:20:49.5632114Z        envs directories : /home/runner/micromamba/envs
2025-02-24T16:20:49.5632677Z           package cache : /home/runner/micromamba/pkgs
2025-02-24T16:20:49.5633006Z                           /home/runner/.mamba/pkgs
2025-02-24T16:20:49.5633296Z             environment : tardis
2025-02-24T16:20:49.5633595Z            env location : /home/runner/micromamba/envs/tardis
2025-02-24T16:20:49.5633918Z       user config files : /home/runner/.mambarc
2025-02-24T16:20:49.5634320Z  populated config files : /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T16:20:49.5634710Z        virtual packages : __unix=0=0
2025-02-24T16:20:49.5634967Z                           __linux=6.8.0=0
2025-02-24T16:20:49.5635341Z                           __glibc=2.39=0
2025-02-24T16:20:49.5635648Z                           __archspec=1=x86_64_v3
2025-02-24T16:20:49.5636025Z                channels : https://conda.anaconda.org/conda-forge/linux-64
2025-02-24T16:20:49.5636430Z                           https://conda.anaconda.org/conda-forge/noarch
2025-02-24T16:20:49.5637123Z        base environment : /home/runner/micromamba
2025-02-24T16:20:49.5637642Z                platform : linux-64
2025-02-24T16:20:49.5644647Z ##[endgroup]
2025-02-24T16:20:49.5645455Z ##[group]micromamba list
2025-02-24T16:20:49.5646387Z [command]/home/runner/micromamba-bin/micromamba list -r /home/runner/micromamba -n tardis
2025-02-24T16:20:49.9504007Z List of packages in environment: "/home/runner/micromamba/envs/tardis"
2025-02-24T16:20:49.9504686Z 
2025-02-24T16:20:49.9505039Z   Name                           Version              Build                    Channel    
2025-02-24T16:20:49.9506461Z ────────────────────────────────────────────────────────────────────────────────────────────
2025-02-24T16:20:49.9507032Z   _libgcc_mutex                  0.1                  conda_forge              conda-forge
2025-02-24T16:20:49.9507780Z   _openmp_mutex                  4.5                  2_gnu                    conda-forge
2025-02-24T16:20:49.9508323Z   alabaster                      0.7.16               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9508782Z   anyio                          4.4.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9509248Z   argon2-cffi                    23.1.0               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9509784Z   argon2-cffi-bindings           21.2.0               py312h98912ed_4          conda-forge
2025-02-24T16:20:49.9510269Z   arrow                          1.3.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9510698Z   astropy                        6.1.1                py312h085067d_0          conda-forge
2025-02-24T16:20:49.9511188Z   astropy-iers-data              0.2024.6.17.0.31.35  pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9511731Z   astropy-sphinx-theme           1.1                  pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9512229Z   asttokens                      2.4.1                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9512686Z   async-lru                      2.0.4                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9513113Z   atk-1.0                        2.38.0               h04ea711_2               conda-forge
2025-02-24T16:20:49.9513527Z   attrs                          23.2.0               pyh71513ae_0             conda-forge
2025-02-24T16:20:49.9513942Z   babel                          2.14.0               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9514405Z   beautifulsoup4                 4.12.3               pyha770c72_0             conda-forge
2025-02-24T16:20:49.9514864Z   bleach                         6.1.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9515281Z   blosc                          1.21.5               hc2324a3_1               conda-forge
2025-02-24T16:20:49.9515763Z   brotli                         1.1.0                hd590300_1               conda-forge
2025-02-24T16:20:49.9516307Z   brotli-bin                     1.1.0                hd590300_1               conda-forge
2025-02-24T16:20:49.9516780Z   brotli-python                  1.1.0                py312h30efb56_1          conda-forge
2025-02-24T16:20:49.9517235Z   bzip2                          1.0.8                hd590300_5               conda-forge
2025-02-24T16:20:49.9517823Z   c-ares                         1.28.1               hd590300_0               conda-forge
2025-02-24T16:20:49.9518179Z   c-blosc2                       2.14.4               hb4ffafa_1               conda-forge
2025-02-24T16:20:49.9518575Z   ca-certificates                2024.6.2             hbcca054_0               conda-forge
2025-02-24T16:20:49.9519002Z   cached-property                1.5.2                hd8ed1ab_1               conda-forge
2025-02-24T16:20:49.9519410Z   cached_property                1.5.2                pyha770c72_1             conda-forge
2025-02-24T16:20:49.9519783Z   cairo                          1.18.0               h3faef2a_0               conda-forge
2025-02-24T16:20:49.9520476Z   certifi                        2024.6.2             pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9520853Z   cffi                           1.16.0               py312hf06ca03_0          conda-forge
2025-02-24T16:20:49.9521370Z   charset-normalizer             3.3.2                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9521756Z   click                          8.1.7                unix_pyh707e725_0        conda-forge
2025-02-24T16:20:49.9522115Z   codespell                      2.3.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9522481Z   colorama                       0.4.6                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9522833Z   comm                           0.2.2                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9523190Z   commonmark                     0.9.1                py_0                     conda-forge
2025-02-24T16:20:49.9523573Z   contourpy                      1.2.1                py312h8572e83_0          conda-forge
2025-02-24T16:20:49.9523934Z   coverage                       7.5.3                py312h9a8786e_0          conda-forge
2025-02-24T16:20:49.9524288Z   cycler                         0.12.1               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9524657Z   dataclasses                    0.8                  pyhc8e2a94_3             conda-forge
2025-02-24T16:20:49.9525025Z   debugpy                        1.8.1                py312h30efb56_0          conda-forge
2025-02-24T16:20:49.9525397Z   decorator                      5.1.1                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9525763Z   defusedxml                     0.7.1                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9526126Z   docutils                       0.20.1               py312h7900ff3_3          conda-forge
2025-02-24T16:20:49.9526484Z   dot2tex                        2.11.3               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9526864Z   entrypoints                    0.4                  pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9527424Z   exceptiongroup                 1.2.0                pyhd8ed1ab_2             conda-forge
2025-02-24T16:20:49.9527851Z   executing                      2.0.1                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9528212Z   expat                          2.6.2                h59595ed_0               conda-forge
2025-02-24T16:20:49.9528608Z   font-ttf-dejavu-sans-mono      2.37                 hab24e00_0               conda-forge
2025-02-24T16:20:49.9529050Z   font-ttf-inconsolata           3.000                h77eed37_0               conda-forge
2025-02-24T16:20:49.9529488Z   font-ttf-source-code-pro       2.038                h77eed37_0               conda-forge
2025-02-24T16:20:49.9529906Z   font-ttf-ubuntu                0.83                 h77eed37_2               conda-forge
2025-02-24T16:20:49.9530290Z   fontconfig                     2.14.2               h14ed4e7_0               conda-forge
2025-02-24T16:20:49.9530693Z   fonts-conda-ecosystem          1                    0                        conda-forge
2025-02-24T16:20:49.9531098Z   fonts-conda-forge              1                    0                        conda-forge
2025-02-24T16:20:49.9531487Z   fonttools                      4.53.0               py312h9a8786e_0          conda-forge
2025-02-24T16:20:49.9531839Z   fqdn                           1.5.1                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9532186Z   freetype                       2.12.1               h267a509_2               conda-forge
2025-02-24T16:20:49.9532540Z   fribidi                        1.0.10               h36c2ea0_0               conda-forge
2025-02-24T16:20:49.9532887Z   future                         1.0.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9533253Z   gdk-pixbuf                     2.42.12              hb9ae30d_0               conda-forge
2025-02-24T16:20:49.9533805Z   giflib                         5.2.2                hd590300_0               conda-forge
2025-02-24T16:20:49.9534179Z   git-lfs                        3.5.1                ha770c72_0               conda-forge
2025-02-24T16:20:49.9534611Z   gmp                            6.3.0                h59595ed_1               conda-forge
2025-02-24T16:20:49.9534940Z   gmpy2                          2.1.5                py312h1d5cde6_1          conda-forge
2025-02-24T16:20:49.9535294Z   graphite2                      1.3.13               h59595ed_1003            conda-forge
2025-02-24T16:20:49.9535651Z   graphviz                       11.0.0               hc68bbd7_0               conda-forge
2025-02-24T16:20:49.9535993Z   gtk2                           2.24.33              h280cfa0_4               conda-forge
2025-02-24T16:20:49.9536315Z   gts                            0.7.6                h977cf35_4               conda-forge
2025-02-24T16:20:49.9536635Z   h11                            0.14.0               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9536959Z   h2                             4.1.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9537693Z   h5py                           3.11.0               nompi_py312hb7ab980_102  conda-forge
2025-02-24T16:20:49.9538296Z   harfbuzz                       8.5.0                hfac3d4d_0               conda-forge
2025-02-24T16:20:49.9538891Z   hdf5                           1.14.3               nompi_hdf9ad27_105       conda-forge
2025-02-24T16:20:49.9539520Z   hpack                          4.0.0                pyh9f0ad1d_0             conda-forge
2025-02-24T16:20:49.9540142Z   httpcore                       1.0.5                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9540930Z   httpx                          0.27.0               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9541536Z   hyperframe                     6.0.1                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9542109Z   icu                            73.2                 h59595ed_0               conda-forge
2025-02-24T16:20:49.9542668Z   idna                           3.7                  pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9543289Z   imagesize                      1.4.1                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9543992Z   importlib-metadata             7.1.0                pyha770c72_0             conda-forge
2025-02-24T16:20:49.9544608Z   importlib_metadata             7.1.0                hd8ed1ab_0               conda-forge
2025-02-24T16:20:49.9546015Z   importlib_resources            6.4.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9546725Z   iniconfig                      2.0.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9547503Z   ipykernel                      6.29.4               pyh3099207_0             conda-forge
2025-02-24T16:20:49.9548128Z   ipython                        8.25.0               pyh707e725_0             conda-forge
2025-02-24T16:20:49.9548713Z   ipython_genutils               0.2.0                pyhd8ed1ab_1             conda-forge
2025-02-24T16:20:49.9549169Z   ipywidgets                     7.8.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9549596Z   isoduration                    20.11.0              pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9549956Z   jedi                           0.19.1               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9550301Z   jinja2                         3.1.4                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9550645Z   json5                          0.9.25               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9551004Z   jsonpointer                    3.0.0                py312h7900ff3_0          conda-forge
2025-02-24T16:20:49.9551384Z   jsonschema                     4.22.0               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9552083Z   jsonschema-specifications      2023.12.1            pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9552642Z   jsonschema-with-format-nongpl  4.22.0               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9553210Z   jupyter-lsp                    2.2.5                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9553606Z   jupyter_client                 8.6.2                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9553989Z   jupyter_core                   5.7.2                py312h7900ff3_0          conda-forge
2025-02-24T16:20:49.9554368Z   jupyter_events                 0.10.0               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9554761Z   jupyter_server                 2.14.1               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9555172Z   jupyter_server_terminals       0.5.3                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9555574Z   jupyterlab                     4.2.2                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9555978Z   jupyterlab_pygments            0.3.0                pyhd8ed1ab_1             conda-forge
2025-02-24T16:20:49.9556392Z   jupyterlab_server              2.27.2               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9556803Z   jupyterlab_widgets             1.1.7                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9557182Z   keyutils                       1.6.1                h166bdaf_0               conda-forge
2025-02-24T16:20:49.9557820Z   kiwisolver                     1.4.5                py312h8572e83_1          conda-forge
2025-02-24T16:20:49.9558169Z   krb5                           1.21.2               h659d440_0               conda-forge
2025-02-24T16:20:49.9558516Z   latexcodec                     2.0.1                pyh9f0ad1d_0             conda-forge
2025-02-24T16:20:49.9558872Z   lcms2                          2.16                 hb7c19ff_0               conda-forge
2025-02-24T16:20:49.9559229Z   ld_impl_linux-64               2.40                 hf3520f5_7               conda-forge
2025-02-24T16:20:49.9559584Z   lerc                           4.0.0                h27087fc_0               conda-forge
2025-02-24T16:20:49.9559916Z   libaec                         1.1.3                h59595ed_0               conda-forge
2025-02-24T16:20:49.9560261Z   libblas                        3.9.0                22_linux64_openblas      conda-forge
2025-02-24T16:20:49.9560638Z   libbrotlicommon                1.1.0                hd590300_1               conda-forge
2025-02-24T16:20:49.9561022Z   libbrotlidec                   1.1.0                hd590300_1               conda-forge
2025-02-24T16:20:49.9561396Z   libbrotlienc                   1.1.0                hd590300_1               conda-forge
2025-02-24T16:20:49.9561764Z   libcblas                       3.9.0                22_linux64_openblas      conda-forge
2025-02-24T16:20:49.9562116Z   libcurl                        8.8.0                hca28451_0               conda-forge
2025-02-24T16:20:49.9562465Z   libdeflate                     1.20                 hd590300_0               conda-forge
2025-02-24T16:20:49.9562830Z   libedit                        3.1.20191231         he28a2e2_2               conda-forge
2025-02-24T16:20:49.9563181Z   libev                          4.33                 hd590300_2               conda-forge
2025-02-24T16:20:49.9563523Z   libexpat                       2.6.2                h59595ed_0               conda-forge
2025-02-24T16:20:49.9563867Z   libffi                         3.4.2                h7f98852_5               conda-forge
2025-02-24T16:20:49.9564208Z   libgcc-ng                      13.2.0               h77fa898_10              conda-forge
2025-02-24T16:20:49.9564550Z   libgd                          2.3.3                h119a65a_9               conda-forge
2025-02-24T16:20:49.9564908Z   libgfortran-ng                 13.2.0               h69a702a_10              conda-forge
2025-02-24T16:20:49.9565460Z   libgfortran5                   13.2.0               h3d2ce59_10              conda-forge
2025-02-24T16:20:49.9565834Z   libglib                        2.80.2               h8a4344b_1               conda-forge
2025-02-24T16:20:49.9566276Z   libgomp                        13.2.0               h77fa898_10              conda-forge
2025-02-24T16:20:49.9566627Z   libiconv                       1.17                 hd590300_2               conda-forge
2025-02-24T16:20:49.9566988Z   libjpeg-turbo                  3.0.0                hd590300_1               conda-forge
2025-02-24T16:20:49.9567571Z   liblapack                      3.9.0                22_linux64_openblas      conda-forge
2025-02-24T16:20:49.9567939Z   libllvm14                      14.0.6               hcd5def8_4               conda-forge
2025-02-24T16:20:49.9568304Z   libnghttp2                     1.58.0               h47da74e_1               conda-forge
2025-02-24T16:20:49.9568675Z   libnsl                         2.0.1                hd590300_0               conda-forge
2025-02-24T16:20:49.9569059Z   libopenblas                    0.3.27               pthreads_h413a1c8_0      conda-forge
2025-02-24T16:20:49.9569429Z   libpng                         1.6.43               h2797004_0               conda-forge
2025-02-24T16:20:49.9569789Z   librsvg                        2.58.1               hadf69e7_0               conda-forge
2025-02-24T16:20:49.9570147Z   libsodium                      1.0.18               h36c2ea0_1               conda-forge
2025-02-24T16:20:49.9570537Z   libsqlite                      3.46.0               hde9e2c9_0               conda-forge
2025-02-24T16:20:49.9570889Z   libssh2                        1.11.0               h0841786_0               conda-forge
2025-02-24T16:20:49.9571250Z   libstdcxx-ng                   13.2.0               hc0a3c3a_10              conda-forge
2025-02-24T16:20:49.9571610Z   libtiff                        4.6.0                h1dd3fc0_3               conda-forge
2025-02-24T16:20:49.9571959Z   libuuid                        2.38.1               h0b41bf4_0               conda-forge
2025-02-24T16:20:49.9572308Z   libwebp                        1.4.0                h2c329e2_0               conda-forge
2025-02-24T16:20:49.9572669Z   libwebp-base                   1.4.0                hd590300_0               conda-forge
2025-02-24T16:20:49.9573019Z   libxcb                         1.15                 h0b41bf4_0               conda-forge
2025-02-24T16:20:49.9573366Z   libxcrypt                      4.4.36               hd590300_1               conda-forge
2025-02-24T16:20:49.9573717Z   libxml2                        2.12.7               hc051c1a_1               conda-forge
2025-02-24T16:20:49.9574086Z   libxslt                        1.1.39               h76b75d6_0               conda-forge
2025-02-24T16:20:49.9574427Z   libzlib                        1.3.1                h4ab18f5_1               conda-forge
2025-02-24T16:20:49.9574784Z   llvmlite                       0.42.0               py312hb06c811_1          conda-forge
2025-02-24T16:20:49.9575130Z   lxml                           5.2.2                py312hb90d8a5_0          conda-forge
2025-02-24T16:20:49.9575457Z   lz4-c                          1.9.4                hcb278e6_0               conda-forge
2025-02-24T16:20:49.9575782Z   lzo                            2.10                 hd590300_1001            conda-forge
2025-02-24T16:20:49.9576123Z   markupsafe                     2.1.5                py312h98912ed_0          conda-forge
2025-02-24T16:20:49.9576726Z   matplotlib-base                3.8.4                py312h20ab3a6_2          conda-forge
2025-02-24T16:20:49.9577583Z   matplotlib-inline              0.1.7                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9577981Z   mistune                        3.0.2                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9578318Z   mpc                            1.3.1                hfe3b2da_0               conda-forge
2025-02-24T16:20:49.9578863Z   mpfr                           4.2.1                h9458935_1               conda-forge
2025-02-24T16:20:49.9579213Z   mpmath                         1.3.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9579563Z   munkres                        1.1.4                pyh9f0ad1d_0             conda-forge
2025-02-24T16:20:49.9580039Z   mypy_extensions                1.0.0                pyha770c72_0             conda-forge
2025-02-24T16:20:49.9580423Z   nbclassic                      1.1.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9580787Z   nbclient                       0.10.0               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9581147Z   nbconvert                      7.16.4               hd8ed1ab_1               conda-forge
2025-02-24T16:20:49.9581523Z   nbconvert-core                 7.16.4               pyhd8ed1ab_1             conda-forge
2025-02-24T16:20:49.9581934Z   nbconvert-pandoc               7.16.4               hd8ed1ab_1               conda-forge
2025-02-24T16:20:49.9582332Z   nbformat                       5.10.4               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9582732Z   nbsphinx                       0.9.4                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9583097Z   ncurses                        6.5                  h59595ed_0               conda-forge
2025-02-24T16:20:49.9583461Z   nest-asyncio                   1.6.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9583838Z   networkx                       3.3                  pyhd8ed1ab_1             conda-forge
2025-02-24T16:20:49.9584183Z   nomkl                          1.0                  h5ca1d4c_0               conda-forge
2025-02-24T16:20:49.9584532Z   notebook                       7.2.1                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9584907Z   notebook-shim                  0.2.4                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9585282Z   numba                          0.59.1               py312hacefee8_0          conda-forge
2025-02-24T16:20:49.9585636Z   numexpr                        2.10.0               py312hf412c99_100        conda-forge
2025-02-24T16:20:49.9585986Z   numpy                          1.26.4               py312heda63a1_0          conda-forge
2025-02-24T16:20:49.9586340Z   numpydoc                       1.7.0                pyhd8ed1ab_1             conda-forge
2025-02-24T16:20:49.9586698Z   openjpeg                       2.5.2                h488ebb8_0               conda-forge
2025-02-24T16:20:49.9587056Z   openssl                        3.3.1                h4ab18f5_0               conda-forge
2025-02-24T16:20:49.9587676Z   overrides                      7.7.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9588111Z   packaging                      24.1                 pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9588468Z   pandas                         2.2.2                py312h1d6d2e6_1          conda-forge
2025-02-24T16:20:49.9588828Z   pandoc                         3.2                  ha770c72_0               conda-forge
2025-02-24T16:20:49.9589206Z   pandocfilters                  1.5.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9589578Z   pango                          1.54.0               h84a9a3c_0               conda-forge
2025-02-24T16:20:49.9589921Z   parso                          0.8.4                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9590281Z   pathspec                       0.12.1               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9590632Z   pbr                            6.0.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9590963Z   pcre2                          10.44                h0f59acf_0               conda-forge
2025-02-24T16:20:49.9591319Z   pexpect                        4.9.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9591685Z   pickleshare                    0.7.5                py_1003                  conda-forge
2025-02-24T16:20:49.9592334Z   pillow                         10.3.0               py312hdcec9eb_0          conda-forge
2025-02-24T16:20:49.9592693Z   pip                            24.0                 pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9593156Z   pixman                         0.43.2               h59595ed_0               conda-forge
2025-02-24T16:20:49.9593549Z   pkgutil-resolve-name           1.3.10               pyhd8ed1ab_1             conda-forge
2025-02-24T16:20:49.9593964Z   platformdirs                   4.2.2                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9594345Z   plotly                         5.22.0               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9594693Z   pluggy                         1.5.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9595076Z   prometheus_client              0.20.0               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9595488Z   prompt-toolkit                 3.0.47               pyha770c72_0             conda-forge
2025-02-24T16:20:49.9595861Z   psutil                         5.9.8                py312h98912ed_0          conda-forge
2025-02-24T16:20:49.9596233Z   pthread-stubs                  0.4                  h36c2ea0_1001            conda-forge
2025-02-24T16:20:49.9596622Z   ptyprocess                     0.7.0                pyhd3deb0d_0             conda-forge
2025-02-24T16:20:49.9596991Z   pure_eval                      0.2.2                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9597555Z   py-cpuinfo                     9.0.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9597921Z   pybtex                         0.24.0               pyhd8ed1ab_2             conda-forge
2025-02-24T16:20:49.9598302Z   pybtex-docutils                1.0.3                py312h7900ff3_1          conda-forge
2025-02-24T16:20:49.9598689Z   pycparser                      2.22                 pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9599053Z   pyerfa                         2.0.1.4              py312h085067d_1          conda-forge
2025-02-24T16:20:49.9599419Z   pygments                       2.18.0               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9599792Z   pygraphviz                     1.13                 py312h4a1d8a7_1          conda-forge
2025-02-24T16:20:49.9600165Z   pyparsing                      3.1.2                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9600531Z   pysocks                        1.7.1                pyha2e5f31_6             conda-forge
2025-02-24T16:20:49.9600885Z   pytables                       3.9.2                py312h96d95ec_2          conda-forge
2025-02-24T16:20:49.9601237Z   pytest                         8.2.2                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9601595Z   pytest-cov                     5.0.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9602008Z   pytest-doctestplus             1.2.1                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9602412Z   pytest-html                    4.1.1                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9602807Z   pytest-metadata                3.1.1                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9603184Z   python                         3.12.4               h194c7f8_0_cpython       conda-forge
2025-02-24T16:20:49.9603566Z   python-dateutil                2.9.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9603995Z   python-fastjsonschema          2.20.0               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9604434Z   python-json-logger             2.0.7                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9604849Z   python-tzdata                  2024.1               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9605235Z   python_abi                     3.12                 4_cp312                  conda-forge
2025-02-24T16:20:49.9605707Z   pytz                           2024.1               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9606059Z   pyyaml                         6.0.1                py312h98912ed_1          conda-forge
2025-02-24T16:20:49.9606586Z   pyzmq                          26.0.3               py312h8fd38d8_0          conda-forge
2025-02-24T16:20:49.9606932Z   qgrid                          1.3.1                pyhd8ed1ab_4             conda-forge
2025-02-24T16:20:49.9607507Z   radioactivedecay               0.5.1                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9607894Z   readline                       8.2                  h8228510_1               conda-forge
2025-02-24T16:20:49.9608264Z   recommonmark                   0.7.1                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9608654Z   referencing                    0.35.1               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9609034Z   requests                       2.32.3               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9609421Z   rfc3339-validator              0.1.4                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9609836Z   rfc3986-validator              0.1.1                pyh9f0ad1d_0             conda-forge
2025-02-24T16:20:49.9610230Z   rpds-py                        0.18.1               py312h4413252_0          conda-forge
2025-02-24T16:20:49.9610570Z   ruff                           0.4.9                py312h5715c7c_0          conda-forge
2025-02-24T16:20:49.9610905Z   scipy                          1.13.1               py312hc2bc53b_0          conda-forge
2025-02-24T16:20:49.9611269Z   send2trash                     1.8.3                pyh0d859eb_0             conda-forge
2025-02-24T16:20:49.9611644Z   setuptools                     70.0.0               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9612030Z   setuptools-scm                 8.1.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9612436Z   setuptools_scm                 8.1.0                hd8ed1ab_0               conda-forge
2025-02-24T16:20:49.9612797Z   six                            1.16.0               pyh6c4a22f_0             conda-forge
2025-02-24T16:20:49.9613146Z   snakeviz                       2.2.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9613507Z   snappy                         1.2.0                hdb0a2a9_1               conda-forge
2025-02-24T16:20:49.9613865Z   sniffio                        1.3.1                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9614248Z   snowballstemmer                2.2.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9614637Z   soupsieve                      2.5                  pyhd8ed1ab_1             conda-forge
2025-02-24T16:20:49.9615001Z   sphinx                         7.3.7                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9615380Z   sphinx-astropy                 1.9.1                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9615796Z   sphinx-automodapi              0.17.0               pyh717bed2_1             conda-forge
2025-02-24T16:20:49.9616210Z   sphinx-gallery                 0.16.0               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9616621Z   sphinx-jsonschema              1.19.1               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9617050Z   sphinx_bootstrap_theme         0.8.1                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9617635Z   sphinx_rtd_theme               2.0.0                pyha770c72_0             conda-forge
2025-02-24T16:20:49.9618046Z   sphinxcontrib-apidoc           0.3.0                py_1                     conda-forge
2025-02-24T16:20:49.9618494Z   sphinxcontrib-applehelp        1.0.8                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9618945Z   sphinxcontrib-bibtex           2.6.2                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9619510Z   sphinxcontrib-devhelp          1.0.6                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9619984Z   sphinxcontrib-htmlhelp         2.0.5                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9620550Z   sphinxcontrib-jquery           4.1                  pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9620990Z   sphinxcontrib-jsmath           1.0.1                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9621431Z   sphinxcontrib-qthelp           1.0.7                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9621915Z   sphinxcontrib-serializinghtml  1.1.10               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9622360Z   stack_data                     0.6.2                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9622716Z   sympy                          1.12.1               pypyh2585a3b_103         conda-forge
2025-02-24T16:20:49.9623084Z   tabulate                       0.9.0                pyhd8ed1ab_1             conda-forge
2025-02-24T16:20:49.9623445Z   tenacity                       8.4.1                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9623814Z   terminado                      0.18.1               pyh0d859eb_0             conda-forge
2025-02-24T16:20:49.9624183Z   tinycss2                       1.3.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9624519Z   tk                             8.6.13               noxft_h4845f30_101       conda-forge
2025-02-24T16:20:49.9624851Z   toml                           0.10.2               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9625192Z   tomli                          2.0.1                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9625541Z   tornado                        6.4.1                py312h9a8786e_0          conda-forge
2025-02-24T16:20:49.9625881Z   tqdm                           4.66.4               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9626234Z   traitlets                      5.14.3               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9626614Z   typed-ast                      1.5.5                py312h98912ed_1          conda-forge
2025-02-24T16:20:49.9627045Z   types-python-dateutil          2.9.0.20240316       pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9627646Z   typing-extensions              4.12.2               hd8ed1ab_0               conda-forge
2025-02-24T16:20:49.9628064Z   typing_extensions              4.12.2               pyha770c72_0             conda-forge
2025-02-24T16:20:49.9628455Z   typing_utils                   0.1.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9628818Z   tzdata                         2024a                h0c530f3_0               conda-forge
2025-02-24T16:20:49.9629190Z   uri-template                   1.3.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9629563Z   urllib3                        2.2.2                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9629917Z   wcwidth                        0.2.13               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9630282Z   webcolors                      24.6.0               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9630667Z   webencodings                   0.5.1                pyhd8ed1ab_2             conda-forge
2025-02-24T16:20:49.9631067Z   websocket-client               1.8.0                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9631449Z   wheel                          0.43.0               pyhd8ed1ab_1             conda-forge
2025-02-24T16:20:49.9631845Z   widgetsnbextension             3.6.6                pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9632251Z   xorg-kbproto                   1.0.7                h7f98852_1002            conda-forge
2025-02-24T16:20:49.9632627Z   xorg-libice                    1.1.1                hd590300_0               conda-forge
2025-02-24T16:20:49.9633110Z   xorg-libsm                     1.2.4                h7391055_0               conda-forge
2025-02-24T16:20:49.9633485Z   xorg-libx11                    1.8.9                h8ee46fc_0               conda-forge
2025-02-24T16:20:49.9633956Z   xorg-libxau                    1.0.11               hd590300_0               conda-forge
2025-02-24T16:20:49.9634335Z   xorg-libxdmcp                  1.1.3                h7f98852_0               conda-forge
2025-02-24T16:20:49.9634719Z   xorg-libxext                   1.3.4                h0b41bf4_2               conda-forge
2025-02-24T16:20:49.9635101Z   xorg-libxrender                0.9.11               hd590300_0               conda-forge
2025-02-24T16:20:49.9635505Z   xorg-renderproto               0.11.1               h7f98852_1002            conda-forge
2025-02-24T16:20:49.9635901Z   xorg-xextproto                 7.3.0                h0b41bf4_1003            conda-forge
2025-02-24T16:20:49.9636285Z   xorg-xproto                    7.0.31               h7f98852_1007            conda-forge
2025-02-24T16:20:49.9636629Z   xz                             5.2.6                h166bdaf_0               conda-forge
2025-02-24T16:20:49.9636958Z   yaml                           0.2.5                h7f98852_2               conda-forge
2025-02-24T16:20:49.9637497Z   zeromq                         4.3.5                h75354e8_4               conda-forge
2025-02-24T16:20:49.9637848Z   zipp                           3.19.2               pyhd8ed1ab_0             conda-forge
2025-02-24T16:20:49.9638185Z   zlib                           1.3.1                h4ab18f5_1               conda-forge
2025-02-24T16:20:49.9638519Z   zlib-ng                        2.0.7                h0b41bf4_0               conda-forge
2025-02-24T16:20:49.9638851Z   zstd                           1.5.6                ha6fb4c9_0               conda-forge
2025-02-24T16:20:49.9639398Z ##[endgroup]
2025-02-24T16:20:49.9692252Z ##[group]Run pip install -e . --user
2025-02-24T16:20:49.9692580Z [36;1mpip install -e . --user[0m
2025-02-24T16:20:49.9749090Z shell: /usr/bin/bash -l {0}
2025-02-24T16:20:49.9749337Z env:
2025-02-24T16:20:49.9749519Z   CACHE_NUMBER: 0
2025-02-24T16:20:49.9750136Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T16:20:49.9750979Z   CODECOV_TOKEN: ***
2025-02-24T16:20:49.9751225Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-02-24T16:20:49.9751538Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-02-24T16:20:49.9751890Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T16:20:49.9752197Z ##[endgroup]
2025-02-24T16:20:50.6964143Z Obtaining file:///home/runner/work/tardis/tardis
2025-02-24T16:20:50.7001784Z   Installing build dependencies: started
2025-02-24T16:20:53.4996695Z   Installing build dependencies: finished with status 'done'
2025-02-24T16:20:53.5002824Z   Checking if build backend supports build_editable: started
2025-02-24T16:20:53.6217667Z   Checking if build backend supports build_editable: finished with status 'done'
2025-02-24T16:20:53.6225382Z   Getting requirements to build editable: started
2025-02-24T16:20:54.1029290Z   Getting requirements to build editable: finished with status 'done'
2025-02-24T16:20:54.1038421Z   Preparing editable metadata (pyproject.toml): started
2025-02-24T16:20:54.5502291Z   Preparing editable metadata (pyproject.toml): finished with status 'done'
2025-02-24T16:20:54.6079517Z Requirement already satisfied: astropy in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from tardis==0.0.0) (6.1.1)
2025-02-24T16:20:54.6470189Z Requirement already satisfied: numpy>=1.23 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (1.26.4)
2025-02-24T16:20:54.6479813Z Requirement already satisfied: pyerfa>=2.0.1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (2.0.1.4)
2025-02-24T16:20:54.6491205Z Requirement already satisfied: astropy-iers-data>=0.2024.5.27.0.30.8 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (0.2024.6.17.0.31.35)
2025-02-24T16:20:54.6500423Z Requirement already satisfied: PyYAML>=3.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (6.0.1)
2025-02-24T16:20:54.6510713Z Requirement already satisfied: packaging>=19.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (24.1)
2025-02-24T16:20:54.6598095Z Building wheels for collected packages: tardis
2025-02-24T16:20:54.6607646Z   Building editable for tardis (pyproject.toml): started
2025-02-24T16:20:55.4119276Z   Building editable for tardis (pyproject.toml): finished with status 'done'
2025-02-24T16:20:55.4125093Z   Created wheel for tardis: filename=tardis-0.0.0-0.editable-py3-none-any.whl size=8879 sha256=ec4c430d722ba2400f2f3503dc5cac70773a94dd7a5f9970403195629d9708ae
2025-02-24T16:20:55.4126736Z   Stored in directory: /tmp/pip-ephem-wheel-cache-ep3j49ca/wheels/6a/c7/ae/89fa6dc2565455898176888ef0e2e475e4e90eb0124afcb995
2025-02-24T16:20:55.4152661Z Successfully built tardis
2025-02-24T16:20:56.1694908Z Installing collected packages: tardis
2025-02-24T16:20:56.1780891Z Successfully installed tardis-0.0.0
2025-02-24T16:20:56.3728108Z ##[group]Run pip install qgridnext
2025-02-24T16:20:56.3728448Z [36;1mpip install qgridnext[0m
2025-02-24T16:20:56.3782950Z shell: /usr/bin/bash -l {0}
2025-02-24T16:20:56.3783195Z env:
2025-02-24T16:20:56.3783379Z   CACHE_NUMBER: 0
2025-02-24T16:20:56.3784006Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T16:20:56.3785025Z   CODECOV_TOKEN: ***
2025-02-24T16:20:56.3785280Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-02-24T16:20:56.3785595Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-02-24T16:20:56.3785952Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T16:20:56.3786263Z ##[endgroup]
2025-02-24T16:20:57.0038976Z Collecting qgridnext
2025-02-24T16:20:57.0324639Z   Downloading qgridnext-2.0.4-py3-none-any.whl.metadata (9.9 kB)
2025-02-24T16:20:57.0409642Z Requirement already satisfied: pandas>=0.20.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (2.2.2)
2025-02-24T16:20:57.0418520Z Requirement already satisfied: ipywidgets>=7.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (7.8.0)
2025-02-24T16:20:57.0426945Z Requirement already satisfied: numpy in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (1.26.4)
2025-02-24T16:20:57.0436638Z Requirement already satisfied: traitlets in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (5.14.3)
2025-02-24T16:20:57.0521392Z Requirement already satisfied: comm>=0.1.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-02-24T16:20:57.0529903Z Requirement already satisfied: ipython-genutils~=0.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.0)
2025-02-24T16:20:57.0542244Z Requirement already satisfied: widgetsnbextension~=3.6.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (3.6.6)
2025-02-24T16:20:57.0559983Z Requirement already satisfied: ipython>=4.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (8.25.0)
2025-02-24T16:20:57.0574631Z Requirement already satisfied: jupyterlab-widgets<3,>=1.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (1.1.7)
2025-02-24T16:20:57.1023953Z Requirement already satisfied: python-dateutil>=2.8.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2.9.0)
2025-02-24T16:20:57.1037502Z Requirement already satisfied: pytz>=2020.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-02-24T16:20:57.1045452Z Requirement already satisfied: tzdata>=2022.7 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-02-24T16:20:57.1361540Z Requirement already satisfied: decorator in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (5.1.1)
2025-02-24T16:20:57.1375652Z Requirement already satisfied: jedi>=0.16 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.19.1)
2025-02-24T16:20:57.1384094Z Requirement already satisfied: matplotlib-inline in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.1.7)
2025-02-24T16:20:57.1394852Z Requirement already satisfied: prompt-toolkit<3.1.0,>=3.0.41 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (3.0.47)
2025-02-24T16:20:57.1404009Z Requirement already satisfied: pygments>=2.4.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.18.0)
2025-02-24T16:20:57.1413210Z Requirement already satisfied: stack-data in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.6.2)
2025-02-24T16:20:57.1431750Z Requirement already satisfied: pexpect>4.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (4.9.0)
2025-02-24T16:20:57.1480671Z Requirement already satisfied: six>=1.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from python-dateutil>=2.8.2->pandas>=0.20.0->qgridnext) (1.16.0)
2025-02-24T16:20:57.1537483Z Requirement already satisfied: notebook>=4.4.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.2.1)
2025-02-24T16:20:57.1728026Z Requirement already satisfied: parso<0.9.0,>=0.8.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jedi>=0.16->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.8.4)
2025-02-24T16:20:57.1872920Z Requirement already satisfied: jupyter-server<3,>=2.4.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.1)
2025-02-24T16:20:57.1886635Z Requirement already satisfied: jupyterlab-server<3,>=2.27.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.27.2)
2025-02-24T16:20:57.1902927Z Requirement already satisfied: jupyterlab<4.3,>=4.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-02-24T16:20:57.1913199Z Requirement already satisfied: notebook-shim<0.3,>=0.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.2.4)
2025-02-24T16:20:57.1921376Z Requirement already satisfied: tornado>=6.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.4.1)
2025-02-24T16:20:57.1950743Z Requirement already satisfied: ptyprocess>=0.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pexpect>4.3->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.7.0)
2025-02-24T16:20:57.1979988Z Requirement already satisfied: wcwidth in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from prompt-toolkit<3.1.0,>=3.0.41->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.13)
2025-02-24T16:20:57.2119515Z Requirement already satisfied: executing>=1.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.0.1)
2025-02-24T16:20:57.2129051Z Requirement already satisfied: asttokens>=2.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.4.1)
2025-02-24T16:20:57.2136321Z Requirement already satisfied: pure-eval in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-02-24T16:20:57.2475785Z Requirement already satisfied: anyio>=3.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.4.0)
2025-02-24T16:20:57.2485887Z Requirement already satisfied: argon2-cffi>=21.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.1.0)
2025-02-24T16:20:57.2494297Z Requirement already satisfied: jinja2>=3.0.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.1.4)
2025-02-24T16:20:57.2505782Z Requirement already satisfied: jupyter-client>=7.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (8.6.2)
2025-02-24T16:20:57.2517428Z Requirement already satisfied: jupyter-core!=5.0.*,>=4.12 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.7.2)
2025-02-24T16:20:57.2528666Z Requirement already satisfied: jupyter-events>=0.9.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-02-24T16:20:57.2539623Z Requirement already satisfied: jupyter-server-terminals>=0.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.3)
2025-02-24T16:20:57.2552863Z Requirement already satisfied: nbconvert>=6.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.16.4)
2025-02-24T16:20:57.2562854Z Requirement already satisfied: nbformat>=5.3.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.10.4)
2025-02-24T16:20:57.2571660Z Requirement already satisfied: overrides>=5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.7.0)
2025-02-24T16:20:57.2581234Z Requirement already satisfied: packaging>=22.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.1)
2025-02-24T16:20:57.2589550Z Requirement already satisfied: prometheus-client>=0.9 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.20.0)
2025-02-24T16:20:57.2600030Z Requirement already satisfied: pyzmq>=24 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (26.0.3)
2025-02-24T16:20:57.2608597Z Requirement already satisfied: send2trash>=1.8.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.3)
2025-02-24T16:20:57.2620098Z Requirement already satisfied: terminado>=0.8.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-02-24T16:20:57.2636667Z Requirement already satisfied: websocket-client>=1.7 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.0)
2025-02-24T16:20:57.2918991Z Requirement already satisfied: async-lru>=1.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.4)
2025-02-24T16:20:57.2930530Z Requirement already satisfied: httpx>=0.25.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.27.0)
2025-02-24T16:20:57.2942166Z Requirement already satisfied: ipykernel>=6.5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.29.4)
2025-02-24T16:20:57.2956058Z Requirement already satisfied: jupyter-lsp>=2.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.5)
2025-02-24T16:20:57.2982116Z Requirement already satisfied: setuptools>=40.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (70.0.0)
2025-02-24T16:20:57.3170644Z Requirement already satisfied: babel>=2.10 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.0)
2025-02-24T16:20:57.3196753Z Requirement already satisfied: json5>=0.9.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.9.25)
2025-02-24T16:20:57.3207138Z Requirement already satisfied: jsonschema>=4.18.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.22.0)
2025-02-24T16:20:57.3225266Z Requirement already satisfied: requests>=2.31 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.32.3)
2025-02-24T16:20:57.3574111Z Requirement already satisfied: idna>=2.8 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.7)
2025-02-24T16:20:57.3582777Z Requirement already satisfied: sniffio>=1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.1)
2025-02-24T16:20:57.3675013Z Requirement already satisfied: argon2-cffi-bindings in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (21.2.0)
2025-02-24T16:20:57.3845562Z Requirement already satisfied: certifi in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2024.6.2)
2025-02-24T16:20:57.3860505Z Requirement already satisfied: httpcore==1.* in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.0.5)
2025-02-24T16:20:57.3938510Z Requirement already satisfied: h11<0.15,>=0.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpcore==1.*->httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.14.0)
2025-02-24T16:20:57.4123491Z Requirement already satisfied: debugpy>=1.6.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.1)
2025-02-24T16:20:57.4144143Z Requirement already satisfied: nest-asyncio in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.6.0)
2025-02-24T16:20:57.4158745Z Requirement already satisfied: psutil in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.9.8)
2025-02-24T16:20:57.4222291Z Requirement already satisfied: MarkupSafe>=2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jinja2>=3.0.3->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.1.5)
2025-02-24T16:20:57.4416035Z Requirement already satisfied: attrs>=22.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.2.0)
2025-02-24T16:20:57.4426457Z Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2023.12.1)
2025-02-24T16:20:57.4434822Z Requirement already satisfied: referencing>=0.28.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.35.1)
2025-02-24T16:20:57.4443801Z Requirement already satisfied: rpds-py>=0.7.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-02-24T16:20:57.4706898Z Requirement already satisfied: platformdirs>=2.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-core!=5.0.*,>=4.12->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-02-24T16:20:57.4856602Z Requirement already satisfied: python-json-logger>=2.0.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.7)
2025-02-24T16:20:57.4864993Z Requirement already satisfied: pyyaml>=5.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.0.1)
2025-02-24T16:20:57.4875306Z Requirement already satisfied: rfc3339-validator in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.4)
2025-02-24T16:20:57.4883875Z Requirement already satisfied: rfc3986-validator>=0.1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.1)
2025-02-24T16:20:57.5379223Z Requirement already satisfied: beautifulsoup4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.12.3)
2025-02-24T16:20:57.5399301Z Requirement already satisfied: bleach!=5.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.1.0)
2025-02-24T16:20:57.5414286Z Requirement already satisfied: defusedxml in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.7.1)
2025-02-24T16:20:57.5429314Z Requirement already satisfied: jupyterlab-pygments in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.3.0)
2025-02-24T16:20:57.5441713Z Requirement already satisfied: mistune<4,>=2.0.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.2)
2025-02-24T16:20:57.5454712Z Requirement already satisfied: nbclient>=0.5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-02-24T16:20:57.5472280Z Requirement already satisfied: pandocfilters>=1.4.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.0)
2025-02-24T16:20:57.5482728Z Requirement already satisfied: tinycss2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-02-24T16:20:57.5597566Z Requirement already satisfied: fastjsonschema>=2.15 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbformat>=5.3.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.20.0)
2025-02-24T16:20:57.5899581Z Requirement already satisfied: charset-normalizer<4,>=2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.3.2)
2025-02-24T16:20:57.5914554Z Requirement already satisfied: urllib3<3,>=1.21.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.2)
2025-02-24T16:20:57.6689851Z Requirement already satisfied: webencodings in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from bleach!=5.0.0->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.1)
2025-02-24T16:20:57.7259571Z Requirement already satisfied: fqdn in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.1)
2025-02-24T16:20:57.7278101Z Requirement already satisfied: isoduration in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (20.11.0)
2025-02-24T16:20:57.7292447Z Requirement already satisfied: jsonpointer>1.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.0)
2025-02-24T16:20:57.7310422Z Requirement already satisfied: uri-template in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-02-24T16:20:57.7325436Z Requirement already satisfied: webcolors>=1.11 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.6.0)
2025-02-24T16:20:57.8340155Z Requirement already satisfied: cffi>=1.0.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.16.0)
2025-02-24T16:20:57.8438281Z Requirement already satisfied: soupsieve>1.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from beautifulsoup4->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.5)
2025-02-24T16:20:57.8967218Z Requirement already satisfied: pycparser in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.22)
2025-02-24T16:20:57.9467633Z Requirement already satisfied: arrow>=0.15.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-02-24T16:20:57.9770790Z Requirement already satisfied: types-python-dateutil>=2.8.10 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from arrow>=0.15.0->isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.9.0.20240316)
2025-02-24T16:20:58.0080757Z Downloading qgridnext-2.0.4-py3-none-any.whl (1.3 MB)
2025-02-24T16:20:58.0414997Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.3/1.3 MB 40.4 MB/s eta 0:00:00
2025-02-24T16:20:58.8405203Z Installing collected packages: qgridnext
2025-02-24T16:20:58.9148532Z Successfully installed qgridnext-2.0.4
2025-02-24T16:20:59.0959677Z ##[group]Run pytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-02-24T16:20:59.0960979Z [36;1mpytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-02-24T16:20:59.1015860Z shell: /usr/bin/bash -l {0}
2025-02-24T16:20:59.1016110Z env:
2025-02-24T16:20:59.1016292Z   CACHE_NUMBER: 0
2025-02-24T16:20:59.1016924Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T16:20:59.1018009Z   CODECOV_TOKEN: ***
2025-02-24T16:20:59.1018263Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-02-24T16:20:59.1018581Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-02-24T16:20:59.1018982Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T16:20:59.1019294Z ##[endgroup]
2025-02-24T16:21:08.2659320Z ============================= test session starts ==============================
2025-02-24T16:21:08.2660000Z platform linux -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-02-24T16:21:08.2660561Z rootdir: /home/runner/work/tardis/tardis
2025-02-24T16:21:08.2661008Z configfile: pyproject.toml
2025-02-24T16:21:08.2661877Z plugins: metadata-3.1.1, anyio-4.4.0, doctestplus-1.2.1, cov-5.0.0, html-4.1.1
2025-02-24T16:21:08.2662492Z collected 1796 items / 2 deselected / 1794 selected
2025-02-24T16:21:08.2662801Z 
2025-02-24T16:21:13.2880239Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-02-24T16:21:16.1493560Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-02-24T16:21:17.7402200Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-02-24T16:21:19.4854259Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-02-24T16:21:19.4946253Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-02-24T16:21:20.8583188Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-02-24T16:21:21.2895666Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-02-24T16:21:21.2910709Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-02-24T16:21:24.8538024Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-02-24T16:21:24.8667026Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-02-24T16:21:24.8938007Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-02-24T16:22:02.4980142Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-02-24T16:22:02.5127821Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-02-24T16:22:02.5237091Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-02-24T16:22:02.5540906Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-02-24T16:22:02.5746548Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-02-24T16:22:02.8796520Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-02-24T16:22:03.1969864Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-02-24T16:22:03.2162130Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-02-24T16:22:03.4107064Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-02-24T16:22:03.4174858Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-02-24T16:23:01.4357657Z tardis/model/tests/test_base.py ........................................ [ 10%]
2025-02-24T16:23:02.4226080Z ............                                                             [ 10%]
2025-02-24T16:23:05.4694983Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-02-24T16:23:05.5174256Z tardis/model/tests/test_density.py ..                                    [ 11%]
2025-02-24T16:23:06.8412522Z tardis/opacities/tests/test_opacity_solver.py .....                      [ 11%]
2025-02-24T16:23:08.1602859Z tardis/opacities/tests/test_opacity_state_numba.py .....                 [ 11%]
2025-02-24T16:23:10.3119051Z tardis/opacities/tests/test_tau_sobolev.py FF                            [ 12%]
2025-02-24T16:23:13.0113466Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-02-24T16:23:58.8805515Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-02-24T16:24:10.8530086Z tardis/plasma/equilibrium/tests/test_rate_matrix.py F                    [ 12%]
2025-02-24T16:24:12.5125593Z tardis/plasma/tests/test_complete_plasmas.py ...........FFFs.FFF..s..... [ 13%]
2025-02-24T16:24:15.9155995Z sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FF [ 18%]
2025-02-24T16:24:18.1760592Z Fs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss.... [ 22%]
2025-02-24T16:24:21.5749060Z ........s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....s [ 26%]
2025-02-24T16:24:24.9768168Z FF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFF [ 30%]
2025-02-24T16:24:26.2065910Z s.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFssFssssss..... [ 34%]
2025-02-24T16:24:30.1930064Z .......s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sF [ 38%]
2025-02-24T16:24:33.5838153Z F.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs [ 42%]
2025-02-24T16:24:37.2629557Z .FFF.ss.....sFF.Fssssss............s...FFFs.FFF.s.....FFFF.Fssssss...... [ 46%]
2025-02-24T16:24:39.7629835Z ......s...FFFs.FFF.s.....FFFF.Fssssss............s...FFFs.FFF.s.....FFFF [ 50%]
2025-02-24T16:24:43.0913192Z .Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs. [ 54%]
2025-02-24T16:24:46.7511231Z FFF.ss.....sFF.Fssssss................FFFs.FFF..s.....sFF.Fssss......... [ 58%]
2025-02-24T16:24:47.3782307Z .........FFFs.FFF..s.....sFF.Fssss.......                                [ 60%]
2025-02-24T16:24:47.6005779Z tardis/plasma/tests/test_hdf_plasma.py ....F..F....F.F..........FFF..... [ 62%]
2025-02-24T16:24:47.6119154Z ......                                                                   [ 62%]
2025-02-24T16:24:47.7575237Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-02-24T16:27:05.1580719Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-02-24T16:27:05.1607635Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-02-24T16:27:28.4515450Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-02-24T16:27:41.5558746Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-02-24T16:27:42.3060396Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-02-24T16:27:51.0017752Z tardis/simulation/tests/test_simulation.py FFF.FFFFFF...                 [ 65%]
2025-02-24T16:27:51.0220434Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-02-24T16:27:51.4979631Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-02-24T16:27:51.5051121Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-02-24T16:27:53.6925619Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-02-24T16:27:53.7117858Z ..........                                                               [ 69%]
2025-02-24T16:27:53.8843983Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-02-24T16:27:53.9173559Z .........                                                                [ 72%]
2025-02-24T16:28:12.4863294Z tardis/spectrum/tests/test_spectrum_solver.py .FFF                       [ 72%]
2025-02-24T16:29:14.5453118Z tardis/tests/test_tardis_full.py .FFF                                    [ 72%]
2025-02-24T16:30:39.2219698Z tardis/tests/test_tardis_full_formal_integral.py .FFF.FFF.FFF.FFF        [ 73%]
2025-02-24T16:30:39.2936738Z tardis/tests/test_util.py .............................................  [ 75%]
2025-02-24T16:30:42.4650640Z tardis/transport/montecarlo/tests/test_base.py x.....................    [ 77%]
2025-02-24T16:30:49.7312133Z tardis/transport/montecarlo/tests/test_interaction.py .......            [ 77%]
2025-02-24T16:30:49.9541720Z tardis/transport/montecarlo/tests/test_macro_atom.py ....                [ 77%]
2025-02-24T16:30:49.9713226Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-02-24T16:30:50.0125376Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-02-24T16:30:58.8305314Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py xFF       [ 81%]
2025-02-24T16:30:58.8370893Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-02-24T16:31:05.1772236Z tardis/transport/montecarlo/tests/test_numba_interface.py .....x.        [ 82%]
2025-02-24T16:31:05.6684812Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-02-24T16:31:06.7216174Z tardis/transport/montecarlo/tests/test_packet.py .................xXXXXX [ 84%]
2025-02-24T16:31:06.8588980Z XX.........                                                              [ 84%]
2025-02-24T16:31:06.8894559Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-02-24T16:31:07.2138180Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-02-24T16:31:07.6291186Z .....                                                                    [ 85%]
2025-02-24T16:31:43.6902465Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py ....F.         [ 85%]
2025-02-24T16:31:43.7186803Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-02-24T16:31:43.7220320Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-02-24T16:31:46.2522157Z tardis/transport/montecarlo/tests/test_vpacket.py ..x.                   [ 86%]
2025-02-24T16:31:46.2696968Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-02-24T16:31:49.6982632Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py F [ 86%]
2025-02-24T16:31:49.6983695Z                                                                          [ 86%]
2025-02-24T16:31:50.4756267Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-02-24T16:31:51.8349378Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-02-24T16:31:54.0491152Z ......                                                                   [ 88%]
2025-02-24T16:31:59.4307702Z tardis/visualization/tools/tests/test_liv_plot.py ...F..F..F..F..F..F..F [ 90%]
2025-02-24T16:32:02.6115016Z ..F..FF..FF..........FF..FF..                                            [ 91%]
2025-02-24T16:32:05.4523085Z tardis/visualization/tools/tests/test_rpacket_plot.py .................. [ 92%]
2025-02-24T16:32:12.4986804Z ....                                                                     [ 92%]
2025-02-24T16:32:18.7693784Z tardis/visualization/tools/tests/test_sdec_plot.py ...FFFFFFFFFFFFFFFFFF [ 94%]
2025-02-24T16:32:27.8871508Z FFFFFFFFFFFFFF................                                           [ 95%]
2025-02-24T16:32:28.3252222Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-02-24T16:32:28.3980969Z ....                                                                     [ 96%]
2025-02-24T16:32:29.4536924Z tardis/visualization/widgets/tests/test_line_info.py ................... [ 97%]
2025-02-24T16:32:30.0822990Z ..................                                                       [ 98%]
2025-02-24T16:33:33.8265800Z tardis/visualization/widgets/tests/test_shell_info.py .................. [ 99%]
2025-02-24T16:33:40.6586678Z ......                                                                   [100%]
2025-02-24T16:33:40.6587551Z 
2025-02-24T16:33:40.6587833Z =================================== FAILURES ===================================
2025-02-24T16:33:40.6588789Z _____________________ test_calculate_sobolev_line_opacity ______________________
2025-02-24T16:33:40.6589447Z 
2025-02-24T16:33:40.6589725Z left = array([13, 13, 13, ..., 19, 19, 19], dtype=int8)
2025-02-24T16:33:40.6590563Z right = array([13, 13, 13, ..., 19, 19, 19], dtype=int8), err_msg = None
2025-02-24T16:33:40.6591022Z 
2025-02-24T16:33:40.6591429Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6592123Z         if err_msg is None:
2025-02-24T16:33:40.6592603Z             if left.shape != right.shape:
2025-02-24T16:33:40.6593052Z                 raise_assert_detail(
2025-02-24T16:33:40.6593543Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6594070Z                 )
2025-02-24T16:33:40.6594384Z     
2025-02-24T16:33:40.6594674Z             diff = 0
2025-02-24T16:33:40.6595109Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6595568Z                 # count up differences
2025-02-24T16:33:40.6596392Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6596920Z                     diff += 1
2025-02-24T16:33:40.6597437Z     
2025-02-24T16:33:40.6597855Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6598269Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6598793Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6599314Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.6599711Z E           
2025-02-24T16:33:40.6600130Z E           numpy array values are different (0.09581 %)
2025-02-24T16:33:40.6600804Z E           [left]:  [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 13, 11, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-02-24T16:33:40.6601835Z E           [right]: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-02-24T16:33:40.6602836Z 
2025-02-24T16:33:40.6603521Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6604307Z 
2025-02-24T16:33:40.6604730Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.6605316Z 
2025-02-24T16:33:40.6605784Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7ff509f257c0>
2025-02-24T16:33:40.6607049Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff509f25d60>
2025-02-24T16:33:40.6607962Z 
2025-02-24T16:33:40.6608357Z     def test_calculate_sobolev_line_opacity(
2025-02-24T16:33:40.6609020Z         nb_simulation_verysimple, regression_data
2025-02-24T16:33:40.6609619Z     ):
2025-02-24T16:33:40.6610199Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-02-24T16:33:40.6610799Z     
2025-02-24T16:33:40.6611258Z         actual = calculate_sobolev_line_opacity(
2025-02-24T16:33:40.6612013Z             legacy_plasma.lines,
2025-02-24T16:33:40.6612845Z             legacy_plasma.level_number_density,
2025-02-24T16:33:40.6613631Z             legacy_plasma.time_explosion,
2025-02-24T16:33:40.6614123Z             legacy_plasma.stimulated_emission_factor,
2025-02-24T16:33:40.6614536Z         )
2025-02-24T16:33:40.6614879Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:33:40.6615320Z >       pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.6615618Z 
2025-02-24T16:33:40.6615786Z tardis/opacities/tests/test_tau_sobolev.py:22: 
2025-02-24T16:33:40.6616211Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6616742Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.6617170Z     ???
2025-02-24T16:33:40.6617685Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6617903Z 
2025-02-24T16:33:40.6618111Z >   ???
2025-02-24T16:33:40.6618461Z E   AssertionError: MultiIndex level [0] are different
2025-02-24T16:33:40.6618815Z E   
2025-02-24T16:33:40.6619206Z E   MultiIndex level [0] values are different (0.09581 %)
2025-02-24T16:33:40.6619634Z E   [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T16:33:40.6620099Z E          ...
2025-02-24T16:33:40.6620392Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T16:33:40.6620851Z E         dtype='int64', name='atomic_number', length=29224)
2025-02-24T16:33:40.6621747Z E   [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T16:33:40.6622186Z E          ...
2025-02-24T16:33:40.6622518Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T16:33:40.6622916Z E         dtype='int64', name='atomic_number', length=29224)
2025-02-24T16:33:40.6623374Z E   At positional index 54, first diff: 14 != 12
2025-02-24T16:33:40.6623651Z 
2025-02-24T16:33:40.6623813Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.6624252Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.6625060Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:33:40.6625896Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:33:40.6626670Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T16:33:40.6626994Z 
2025-02-24T16:33:40.6627638Z Iterations:████████████████████████████████████████████████████████████████                4/5 [00:12<00:02,  2.81s/it]
2025-02-24T16:33:40.6627990Z 
2025-02-24T16:33:40.6628356Z Packets:                                                                                   4030/? [00:12<00:00, 34199.30it/s][A
2025-02-24T16:33:40.6628861Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.6629716Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:33:40.6630613Z _________________________ test_calculate_beta_sobolevs _________________________
2025-02-24T16:33:40.6630918Z 
2025-02-24T16:33:40.6631187Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7ff509f257c0>
2025-02-24T16:33:40.6631956Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff50a073ad0>
2025-02-24T16:33:40.6632369Z 
2025-02-24T16:33:40.6632629Z     def test_calculate_beta_sobolevs(nb_simulation_verysimple, regression_data):
2025-02-24T16:33:40.6633128Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-02-24T16:33:40.6633559Z     
2025-02-24T16:33:40.6633865Z         tau_sobolevs = calculate_sobolev_line_opacity(
2025-02-24T16:33:40.6634228Z             legacy_plasma.lines,
2025-02-24T16:33:40.6634489Z             legacy_plasma.level_number_density,
2025-02-24T16:33:40.6634773Z             legacy_plasma.time_explosion,
2025-02-24T16:33:40.6635225Z             legacy_plasma.stimulated_emission_factor,
2025-02-24T16:33:40.6635496Z         )
2025-02-24T16:33:40.6635707Z         actual = calculate_beta_sobolev(tau_sobolevs)
2025-02-24T16:33:40.6636022Z         expected = regression_data.sync_ndarray(actual)
2025-02-24T16:33:40.6636321Z >       npt.assert_allclose(actual, expected)
2025-02-24T16:33:40.6636502Z 
2025-02-24T16:33:40.6636623Z tardis/opacities/tests/test_tau_sobolev.py:36: 
2025-02-24T16:33:40.6636940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6637150Z 
2025-02-24T16:33:40.6637635Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e923a340>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.6638069Z        [1., 1., .....,
2025-02-24T16:33:40.6638272Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.6638514Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.6638742Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-02-24T16:33:40.6639148Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.6639469Z 
2025-02-24T16:33:40.6639550Z     @wraps(func)
2025-02-24T16:33:40.6639751Z     def inner(*args, **kwds):
2025-02-24T16:33:40.6639982Z         with self._recreate_cm():
2025-02-24T16:33:40.6640225Z >           return func(*args, **kwds)
2025-02-24T16:33:40.6640609Z E           AssertionError: 
2025-02-24T16:33:40.6641207Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.6641485Z E           
2025-02-24T16:33:40.6641697Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T16:33:40.6641984Z E           Max absolute difference: 0.99984222
2025-02-24T16:33:40.6642263Z E           Max relative difference: 6337.12154973
2025-02-24T16:33:40.6642540Z E            x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.6642801Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.6643058Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:33:40.6643323Z E            y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.6643588Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.6643838Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:33:40.6644007Z 
2025-02-24T16:33:40.6644219Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.6644714Z ___ test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0] ___
2025-02-24T16:33:40.6645006Z 
2025-02-24T16:33:40.6645224Z new_chianti_atomic_dataset_si = <Atomic Data UUID=None MD5=None Lines=548387 Levels=26579>
2025-02-24T16:33:40.6646318Z rate_solver_list = [(<tardis.plasma.equilibrium.rates.radiative_rates.RadiativeRatesSolver object at 0x7ff4e9bcce90>, 'radiative'), (<tardis.plasma.equilibrium.rates.collisional_rates.ThermalCollisionalRateSolver object at 0x7ff4d74ee2d0>, 'electron')]
2025-02-24T16:33:40.6647673Z collisional_simulation_state = <tardis.model.base.SimulationState object at 0x7ff50a319850>
2025-02-24T16:33:40.6648290Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff50a319f10>
2025-02-24T16:33:40.6648644Z 
2025-02-24T16:33:40.6648740Z     def test_rate_matrix_solver(
2025-02-24T16:33:40.6648988Z         new_chianti_atomic_dataset_si,
2025-02-24T16:33:40.6649239Z         rate_solver_list,
2025-02-24T16:33:40.6649467Z         collisional_simulation_state,
2025-02-24T16:33:40.6649717Z         regression_data,
2025-02-24T16:33:40.6649918Z     ):
2025-02-24T16:33:40.6650108Z         rate_matrix_solver = RateMatrix(
2025-02-24T16:33:40.6650419Z             rate_solver_list, new_chianti_atomic_dataset_si.levels
2025-02-24T16:33:40.6650709Z         )
2025-02-24T16:33:40.6650873Z     
2025-02-24T16:33:40.6651084Z         rad_field = DilutePlanckianRadiationField(
2025-02-24T16:33:40.6651396Z             collisional_simulation_state.t_radiative,
2025-02-24T16:33:40.6651778Z             dilution_factor=np.zeros_like(collisional_simulation_state.t_radiative),
2025-02-24T16:33:40.6652258Z         )
2025-02-24T16:33:40.6652500Z         electron_dist = ThermalElectronEnergyDistribution(
2025-02-24T16:33:40.6652893Z             0, collisional_simulation_state.t_radiative, 1e6 * u.g / u.cm**3
2025-02-24T16:33:40.6653210Z         )
2025-02-24T16:33:40.6653373Z     
2025-02-24T16:33:40.6653610Z         actual = rate_matrix_solver.solve(rad_field, electron_dist)
2025-02-24T16:33:40.6653913Z     
2025-02-24T16:33:40.6654129Z >       expected = regression_data.sync_dataframe(actual)
2025-02-24T16:33:40.6654336Z 
2025-02-24T16:33:40.6654551Z tardis/plasma/equilibrium/tests/test_rate_matrix.py:34: 
2025-02-24T16:33:40.6654891Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6655263Z tardis/tests/fixtures/regression_data.py:88: in sync_dataframe
2025-02-24T16:33:40.6655608Z     return pd.read_hdf(self.fpath, key=key)
2025-02-24T16:33:40.6656063Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:452: in read_hdf
2025-02-24T16:33:40.6656506Z     return store.select(
2025-02-24T16:33:40.6656895Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:906: in select
2025-02-24T16:33:40.6657526Z     return it.get_result()
2025-02-24T16:33:40.6657942Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:2029: in get_result
2025-02-24T16:33:40.6658557Z     results = self.func(self.start, self.stop, where)
2025-02-24T16:33:40.6659006Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:890: in func
2025-02-24T16:33:40.6659781Z     return s.read(start=_start, stop=_stop, where=_where, columns=columns)
2025-02-24T16:33:40.6660468Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:3292: in read
2025-02-24T16:33:40.6660968Z     values = self.read_array(f"block{i}_values", start=_start, stop=_stop)
2025-02-24T16:33:40.6661499Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:2956: in read_array
2025-02-24T16:33:40.6661940Z     ret = node[0][start:stop]
2025-02-24T16:33:40.6662345Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/vlarray.py:662: in __getitem__
2025-02-24T16:33:40.6662785Z     return self.read(start, stop, step)[0]
2025-02-24T16:33:40.6663194Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/vlarray.py:806: in read
2025-02-24T16:33:40.6663651Z     outlistarr = [atom.fromarray(arr) for arr in listarr]
2025-02-24T16:33:40.6663979Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6664184Z 
2025-02-24T16:33:40.6664264Z self = ObjectAtom()
2025-02-24T16:33:40.6664517Z array = array([128,   5, 149, ..., 148,  98,  46], dtype=uint8)
2025-02-24T16:33:40.6664740Z 
2025-02-24T16:33:40.6664834Z     def fromarray(self, array):
2025-02-24T16:33:40.6665124Z         # We have to check for an empty array because of a possible
2025-02-24T16:33:40.6665481Z         # bug in HDF5 which makes it claim that a dataset has one
2025-02-24T16:33:40.6665788Z         # record when in fact it is empty.
2025-02-24T16:33:40.6666040Z         if array.size == 0:
2025-02-24T16:33:40.6666256Z             return None
2025-02-24T16:33:40.6666482Z >       return pickle.loads(array.tobytes())
2025-02-24T16:33:40.6666824Z E       ModuleNotFoundError: No module named 'numpy._core.numeric'
2025-02-24T16:33:40.6667085Z 
2025-02-24T16:33:40.6667703Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/atom.py:1181: ModuleNotFoundError
2025-02-24T16:33:40.6668222Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.6668753Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:33:40.6669469Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:33:40.6670208Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.6670957Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:33:40.6671736Z _________ TestPlasma.test_plasma_properties[ionization:nebular-lines] __________
2025-02-24T16:33:40.6672018Z 
2025-02-24T16:33:40.6672155Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6672507Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6672824Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6673144Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6673503Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6673817Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6674081Z err_msg = None
2025-02-24T16:33:40.6674194Z 
2025-02-24T16:33:40.6674314Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6674589Z         if err_msg is None:
2025-02-24T16:33:40.6674822Z             if left.shape != right.shape:
2025-02-24T16:33:40.6675083Z                 raise_assert_detail(
2025-02-24T16:33:40.6675389Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6675813Z                 )
2025-02-24T16:33:40.6675997Z     
2025-02-24T16:33:40.6676163Z             diff = 0
2025-02-24T16:33:40.6676402Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6676686Z                 # count up differences
2025-02-24T16:33:40.6677020Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6677668Z                     diff += 1
2025-02-24T16:33:40.6677888Z     
2025-02-24T16:33:40.6678069Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6678612Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6679126Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6679505Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.6679771Z E           
2025-02-24T16:33:40.6679986Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.6680454Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6681067Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6681413Z 
2025-02-24T16:33:40.6681728Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6682117Z 
2025-02-24T16:33:40.6682294Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.6682551Z 
2025-02-24T16:33:40.6682781Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d8650>
2025-02-24T16:33:40.6683260Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a0733b0>
2025-02-24T16:33:40.6683583Z attr = 'lines'
2025-02-24T16:33:40.6683696Z 
2025-02-24T16:33:40.6683836Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6684179Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6684463Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6684686Z         try:
2025-02-24T16:33:40.6685107Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6685434Z         except KeyError:
2025-02-24T16:33:40.6685705Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6685997Z     
2025-02-24T16:33:40.6686179Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6686427Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6686702Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6687010Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6687562Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6687820Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6688103Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6688370Z             else:
2025-02-24T16:33:40.6688579Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.6688860Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.6689056Z 
2025-02-24T16:33:40.6689192Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.6689520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6689871Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.6690170Z     ???
2025-02-24T16:33:40.6690375Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6690739Z 
2025-02-24T16:33:40.6690809Z >   ???
2025-02-24T16:33:40.6691030Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.6691303Z E   
2025-02-24T16:33:40.6691525Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.6691855Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6692120Z E          ...
2025-02-24T16:33:40.6692324Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6692627Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6692962Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6693231Z E          ...
2025-02-24T16:33:40.6693426Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6693724Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6694043Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.6694228Z 
2025-02-24T16:33:40.6694329Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.6694692Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_lower_level_index] _
2025-02-24T16:33:40.6694991Z 
2025-02-24T16:33:40.6695220Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d82f0>
2025-02-24T16:33:40.6695699Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a0733b0>
2025-02-24T16:33:40.6696038Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.6696194Z 
2025-02-24T16:33:40.6696332Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6696804Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6697383Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6697647Z         try:
2025-02-24T16:33:40.6697891Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6698197Z         except KeyError:
2025-02-24T16:33:40.6698465Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6698762Z     
2025-02-24T16:33:40.6698945Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6699236Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6699536Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6699839Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6700145Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6700389Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6700669Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6700866Z 
2025-02-24T16:33:40.6701122Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.6701449Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6701655Z 
2025-02-24T16:33:40.6701798Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.6702108Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.6702386Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6702666Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.6702962Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.6703278Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.6703543Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6703818Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.6704057Z err_msg = None
2025-02-24T16:33:40.6704163Z 
2025-02-24T16:33:40.6704289Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6704562Z         if err_msg is None:
2025-02-24T16:33:40.6704796Z             if left.shape != right.shape:
2025-02-24T16:33:40.6705054Z                 raise_assert_detail(
2025-02-24T16:33:40.6705359Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6705664Z                 )
2025-02-24T16:33:40.6705964Z     
2025-02-24T16:33:40.6706127Z             diff = 0
2025-02-24T16:33:40.6706364Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6706650Z                 # count up differences
2025-02-24T16:33:40.6706985Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6707439Z                     diff += 1
2025-02-24T16:33:40.6707651Z     
2025-02-24T16:33:40.6707827Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6708130Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6708524Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6708888Z E           AssertionError: Series are different
2025-02-24T16:33:40.6709144Z E           
2025-02-24T16:33:40.6709349Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.6709905Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.6710701Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6711441Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6711855Z 
2025-02-24T16:33:40.6712177Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6712783Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_upper_level_index] _
2025-02-24T16:33:40.6713088Z 
2025-02-24T16:33:40.6713311Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d8500>
2025-02-24T16:33:40.6713913Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a0733b0>
2025-02-24T16:33:40.6714260Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.6714414Z 
2025-02-24T16:33:40.6714569Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6715169Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6715493Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6715711Z         try:
2025-02-24T16:33:40.6715961Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6716268Z         except KeyError:
2025-02-24T16:33:40.6716545Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6716836Z     
2025-02-24T16:33:40.6717015Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6717384Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6717656Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6717964Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6718273Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6718526Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6718808Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6719007Z 
2025-02-24T16:33:40.6719138Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.6719461Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6719889Z 
2025-02-24T16:33:40.6720030Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.6720343Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.6720618Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.6720895Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.6721194Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.6721511Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.6721784Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.6722055Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.6722288Z err_msg = None
2025-02-24T16:33:40.6722400Z 
2025-02-24T16:33:40.6722511Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6722782Z         if err_msg is None:
2025-02-24T16:33:40.6723018Z             if left.shape != right.shape:
2025-02-24T16:33:40.6723283Z                 raise_assert_detail(
2025-02-24T16:33:40.6723591Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6723888Z                 )
2025-02-24T16:33:40.6724065Z     
2025-02-24T16:33:40.6724228Z             diff = 0
2025-02-24T16:33:40.6724459Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6724744Z                 # count up differences
2025-02-24T16:33:40.6725077Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6725413Z                     diff += 1
2025-02-24T16:33:40.6725630Z     
2025-02-24T16:33:40.6725813Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6726117Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6726508Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6726868Z E           AssertionError: Series are different
2025-02-24T16:33:40.6727127Z E           
2025-02-24T16:33:40.6727441Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.6728004Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.6728953Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.6729785Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.6730242Z 
2025-02-24T16:33:40.6730557Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6731141Z ___________ TestPlasma.test_plasma_properties[ionization:nebular-nu] ___________
2025-02-24T16:33:40.6731415Z 
2025-02-24T16:33:40.6731550Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6731894Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6732321Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6732633Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6733019Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6733580Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6733839Z err_msg = None
2025-02-24T16:33:40.6733949Z 
2025-02-24T16:33:40.6734065Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6734335Z         if err_msg is None:
2025-02-24T16:33:40.6734578Z             if left.shape != right.shape:
2025-02-24T16:33:40.6734841Z                 raise_assert_detail(
2025-02-24T16:33:40.6735147Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6735448Z                 )
2025-02-24T16:33:40.6735631Z     
2025-02-24T16:33:40.6735791Z             diff = 0
2025-02-24T16:33:40.6736026Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6736309Z                 # count up differences
2025-02-24T16:33:40.6736641Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6736976Z                     diff += 1
2025-02-24T16:33:40.6737188Z     
2025-02-24T16:33:40.6737495Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6737798Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6738194Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6738567Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.6738829Z E           
2025-02-24T16:33:40.6739045Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.6739498Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6740104Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6740450Z 
2025-02-24T16:33:40.6740888Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6741280Z 
2025-02-24T16:33:40.6741457Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.6741715Z 
2025-02-24T16:33:40.6741941Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d9a90>
2025-02-24T16:33:40.6742450Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a0733b0>, attr = 'nu'
2025-02-24T16:33:40.6742745Z 
2025-02-24T16:33:40.6742883Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6743224Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6743506Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6743723Z         try:
2025-02-24T16:33:40.6743967Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6744273Z         except KeyError:
2025-02-24T16:33:40.6744543Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6744836Z     
2025-02-24T16:33:40.6745020Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6745272Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6745544Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6745859Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6746160Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6746546Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6746828Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6747027Z 
2025-02-24T16:33:40.6747151Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.6747573Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6747919Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.6748221Z     ???
2025-02-24T16:33:40.6748427Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6748625Z 
2025-02-24T16:33:40.6748705Z >   ???
2025-02-24T16:33:40.6748924Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.6749198Z E   
2025-02-24T16:33:40.6749417Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.6749741Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6750008Z E          ...
2025-02-24T16:33:40.6750207Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6750515Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6763442Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6764000Z E          ...
2025-02-24T16:33:40.6764352Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6764869Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6765354Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.6765560Z 
2025-02-24T16:33:40.6765656Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.6766047Z _____ TestPlasma.test_plasma_properties[ionization:nebular-wavelength_cm] ______
2025-02-24T16:33:40.6766355Z 
2025-02-24T16:33:40.6766497Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6766861Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6767185Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6767638Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6767984Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6768295Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6768549Z err_msg = None
2025-02-24T16:33:40.6768667Z 
2025-02-24T16:33:40.6768789Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6769078Z         if err_msg is None:
2025-02-24T16:33:40.6769525Z             if left.shape != right.shape:
2025-02-24T16:33:40.6769803Z                 raise_assert_detail(
2025-02-24T16:33:40.6770120Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6770424Z                 )
2025-02-24T16:33:40.6770606Z     
2025-02-24T16:33:40.6770768Z             diff = 0
2025-02-24T16:33:40.6771003Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6771299Z                 # count up differences
2025-02-24T16:33:40.6771637Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6771983Z                     diff += 1
2025-02-24T16:33:40.6772196Z     
2025-02-24T16:33:40.6772383Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6772700Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6773095Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6773481Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.6773753Z E           
2025-02-24T16:33:40.6773976Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.6774434Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6775165Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6775506Z 
2025-02-24T16:33:40.6775830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6776230Z 
2025-02-24T16:33:40.6776402Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.6776659Z 
2025-02-24T16:33:40.6776883Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d9ac0>
2025-02-24T16:33:40.6777574Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a0733b0>
2025-02-24T16:33:40.6777923Z attr = 'wavelength_cm'
2025-02-24T16:33:40.6778051Z 
2025-02-24T16:33:40.6778200Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6778536Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6778838Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6779225Z         try:
2025-02-24T16:33:40.6779656Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6780176Z         except KeyError:
2025-02-24T16:33:40.6780551Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6780857Z     
2025-02-24T16:33:40.6781038Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6781293Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6781564Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6781874Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6782184Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6782436Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6782720Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6782917Z 
2025-02-24T16:33:40.6783049Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.6783374Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6783724Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.6784026Z     ???
2025-02-24T16:33:40.6784238Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6784593Z 
2025-02-24T16:33:40.6784668Z >   ???
2025-02-24T16:33:40.6784894Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.6785176Z E   
2025-02-24T16:33:40.6785400Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.6785721Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6785983Z E          ...
2025-02-24T16:33:40.6786183Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6786485Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6786812Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6787079Z E          ...
2025-02-24T16:33:40.6787413Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6787715Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6788040Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.6788226Z 
2025-02-24T16:33:40.6788327Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.6788666Z __________ TestPlasma.test_plasma_properties[ionization:nebular-f_lu] __________
2025-02-24T16:33:40.6788946Z 
2025-02-24T16:33:40.6789076Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6789421Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6789860Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6790173Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6790517Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6790823Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6791074Z err_msg = None
2025-02-24T16:33:40.6791186Z 
2025-02-24T16:33:40.6791301Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6791575Z         if err_msg is None:
2025-02-24T16:33:40.6791811Z             if left.shape != right.shape:
2025-02-24T16:33:40.6792070Z                 raise_assert_detail(
2025-02-24T16:33:40.6792382Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6792682Z                 )
2025-02-24T16:33:40.6792859Z     
2025-02-24T16:33:40.6793020Z             diff = 0
2025-02-24T16:33:40.6793254Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6793534Z                 # count up differences
2025-02-24T16:33:40.6793868Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6794203Z                     diff += 1
2025-02-24T16:33:40.6794412Z     
2025-02-24T16:33:40.6794593Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6794893Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6795286Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6795662Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.6795924Z E           
2025-02-24T16:33:40.6796139Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.6796592Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6797698Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6798317Z 
2025-02-24T16:33:40.6798843Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6799241Z 
2025-02-24T16:33:40.6799443Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.6799702Z 
2025-02-24T16:33:40.6799924Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123da030>
2025-02-24T16:33:40.6800594Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a0733b0>, attr = 'f_lu'
2025-02-24T16:33:40.6800887Z 
2025-02-24T16:33:40.6801035Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6801367Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6801648Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6801864Z         try:
2025-02-24T16:33:40.6802106Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6802410Z         except KeyError:
2025-02-24T16:33:40.6802678Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6802974Z     
2025-02-24T16:33:40.6803151Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6803395Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6803656Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6803959Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6804259Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6804639Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6804916Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6805112Z 
2025-02-24T16:33:40.6805236Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.6805557Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6805900Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.6806191Z     ???
2025-02-24T16:33:40.6806390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6806588Z 
2025-02-24T16:33:40.6806659Z >   ???
2025-02-24T16:33:40.6806876Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.6807146Z E   
2025-02-24T16:33:40.6807501Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.6807832Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6808096Z E          ...
2025-02-24T16:33:40.6808295Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6808591Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6808914Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6809181Z E          ...
2025-02-24T16:33:40.6809371Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6809675Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6809986Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.6810171Z 
2025-02-24T16:33:40.6810260Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.6810608Z ______ TestPlasma.test_plasma_properties[ionization:nebular-tau_sobolevs] ______
2025-02-24T16:33:40.6810896Z 
2025-02-24T16:33:40.6811023Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6811369Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6811683Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6811988Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6812332Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6812633Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6812877Z err_msg = None
2025-02-24T16:33:40.6812986Z 
2025-02-24T16:33:40.6813096Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6813368Z         if err_msg is None:
2025-02-24T16:33:40.6813745Z             if left.shape != right.shape:
2025-02-24T16:33:40.6814006Z                 raise_assert_detail(
2025-02-24T16:33:40.6814308Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6814607Z                 )
2025-02-24T16:33:40.6814785Z     
2025-02-24T16:33:40.6814945Z             diff = 0
2025-02-24T16:33:40.6815302Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6815805Z                 # count up differences
2025-02-24T16:33:40.6816377Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6816898Z                     diff += 1
2025-02-24T16:33:40.6817109Z     
2025-02-24T16:33:40.6817419Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6817731Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6818120Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6818495Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.6818756Z E           
2025-02-24T16:33:40.6818969Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.6819427Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6820183Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6820531Z 
2025-02-24T16:33:40.6820842Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6821227Z 
2025-02-24T16:33:40.6821394Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.6821655Z 
2025-02-24T16:33:40.6821884Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123db3b0>
2025-02-24T16:33:40.6822360Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a0733b0>
2025-02-24T16:33:40.6822693Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.6822821Z 
2025-02-24T16:33:40.6822959Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6823291Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6823575Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6823791Z         try:
2025-02-24T16:33:40.6824042Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6824346Z         except KeyError:
2025-02-24T16:33:40.6824615Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6824906Z     
2025-02-24T16:33:40.6825084Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6825332Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6825597Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6825897Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6826198Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6826450Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6826729Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6826992Z             else:
2025-02-24T16:33:40.6827197Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.6827612Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.6827804Z 
2025-02-24T16:33:40.6827927Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.6828246Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6828716Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.6829019Z     ???
2025-02-24T16:33:40.6829222Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6829418Z 
2025-02-24T16:33:40.6829491Z >   ???
2025-02-24T16:33:40.6829707Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.6829976Z E   
2025-02-24T16:33:40.6830198Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.6830514Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6830777Z E          ...
2025-02-24T16:33:40.6830978Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6831280Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6831605Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6831873Z E          ...
2025-02-24T16:33:40.6832065Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6832365Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6832677Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.6832868Z 
2025-02-24T16:33:40.6832957Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.6833310Z ______ TestPlasma.test_plasma_properties[ionization:nebular-beta_sobolev] ______
2025-02-24T16:33:40.6833658Z 
2025-02-24T16:33:40.6834089Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6834701Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6835238Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6835560Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6835907Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6836225Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6836482Z err_msg = None
2025-02-24T16:33:40.6836594Z 
2025-02-24T16:33:40.6836710Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6836982Z         if err_msg is None:
2025-02-24T16:33:40.6837216Z             if left.shape != right.shape:
2025-02-24T16:33:40.6837633Z                 raise_assert_detail(
2025-02-24T16:33:40.6837955Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6838255Z                 )
2025-02-24T16:33:40.6838431Z     
2025-02-24T16:33:40.6838592Z             diff = 0
2025-02-24T16:33:40.6838826Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6839103Z                 # count up differences
2025-02-24T16:33:40.6839437Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6839772Z                     diff += 1
2025-02-24T16:33:40.6839981Z     
2025-02-24T16:33:40.6840161Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6840465Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6840853Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6841234Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.6841497Z E           
2025-02-24T16:33:40.6841711Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.6842167Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6842960Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6843328Z 
2025-02-24T16:33:40.6843644Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6844030Z 
2025-02-24T16:33:40.6844202Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.6844458Z 
2025-02-24T16:33:40.6844686Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123db7a0>
2025-02-24T16:33:40.6845163Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a0733b0>
2025-02-24T16:33:40.6845487Z attr = 'beta_sobolev'
2025-02-24T16:33:40.6845619Z 
2025-02-24T16:33:40.6845757Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6846101Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6846384Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6846599Z         try:
2025-02-24T16:33:40.6846844Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6847144Z         except KeyError:
2025-02-24T16:33:40.6847541Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6847830Z     
2025-02-24T16:33:40.6848009Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6848255Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6848647Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6848947Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6849246Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6849486Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6849765Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6850028Z             else:
2025-02-24T16:33:40.6850234Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.6850513Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.6850710Z 
2025-02-24T16:33:40.6850840Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.6851155Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6851500Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.6851794Z     ???
2025-02-24T16:33:40.6851998Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6852204Z 
2025-02-24T16:33:40.6852272Z >   ???
2025-02-24T16:33:40.6852546Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.6853037Z E   
2025-02-24T16:33:40.6853412Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.6853958Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6854277Z E          ...
2025-02-24T16:33:40.6854471Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6854772Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6855101Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6855362Z E          ...
2025-02-24T16:33:40.6855552Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6855843Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6856157Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.6856347Z 
2025-02-24T16:33:40.6856446Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.6856788Z ________ TestPlasma.test_plasma_properties[ionization:nebular-j_blues] _________
2025-02-24T16:33:40.6857066Z 
2025-02-24T16:33:40.6857198Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6857674Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6857986Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6858424Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6858777Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6859079Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6859324Z err_msg = None
2025-02-24T16:33:40.6859430Z 
2025-02-24T16:33:40.6859546Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6859823Z         if err_msg is None:
2025-02-24T16:33:40.6860054Z             if left.shape != right.shape:
2025-02-24T16:33:40.6860313Z                 raise_assert_detail(
2025-02-24T16:33:40.6860613Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6860916Z                 )
2025-02-24T16:33:40.6861100Z     
2025-02-24T16:33:40.6861260Z             diff = 0
2025-02-24T16:33:40.6861487Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6861766Z                 # count up differences
2025-02-24T16:33:40.6862100Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6862441Z                     diff += 1
2025-02-24T16:33:40.6862647Z     
2025-02-24T16:33:40.6862822Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6863131Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6863519Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6864036Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.6864296Z E           
2025-02-24T16:33:40.6864504Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.6864954Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6865555Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6865896Z 
2025-02-24T16:33:40.6866206Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6866594Z 
2025-02-24T16:33:40.6866759Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.6867012Z 
2025-02-24T16:33:40.6867236Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d9130>
2025-02-24T16:33:40.6867809Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a0733b0>
2025-02-24T16:33:40.6868135Z attr = 'j_blues'
2025-02-24T16:33:40.6868249Z 
2025-02-24T16:33:40.6868395Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6868724Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6869002Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6869216Z         try:
2025-02-24T16:33:40.6869453Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6869960Z         except KeyError:
2025-02-24T16:33:40.6870427Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6870918Z     
2025-02-24T16:33:40.6871163Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6871415Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6871673Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6871972Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6872271Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6872510Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6872792Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6873189Z             else:
2025-02-24T16:33:40.6873406Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.6873687Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.6873874Z 
2025-02-24T16:33:40.6874004Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.6874320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6874667Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.6874964Z     ???
2025-02-24T16:33:40.6875166Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6875363Z 
2025-02-24T16:33:40.6875431Z >   ???
2025-02-24T16:33:40.6875653Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.6875925Z E   
2025-02-24T16:33:40.6876142Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.6876460Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6876730Z E          ...
2025-02-24T16:33:40.6876922Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6877221Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6877684Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6877958Z E          ...
2025-02-24T16:33:40.6878152Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6878562Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6878873Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.6879057Z 
2025-02-24T16:33:40.6879151Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.6879487Z ___________ TestPlasma.test_plasma_properties[ionization:lte-lines] ____________
2025-02-24T16:33:40.6879763Z 
2025-02-24T16:33:40.6879889Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6880235Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6880548Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6880911Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6881252Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6881560Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6881805Z err_msg = None
2025-02-24T16:33:40.6881915Z 
2025-02-24T16:33:40.6882025Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6882292Z         if err_msg is None:
2025-02-24T16:33:40.6882525Z             if left.shape != right.shape:
2025-02-24T16:33:40.6882782Z                 raise_assert_detail(
2025-02-24T16:33:40.6883085Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6883383Z                 )
2025-02-24T16:33:40.6883561Z     
2025-02-24T16:33:40.6883723Z             diff = 0
2025-02-24T16:33:40.6883952Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6884232Z                 # count up differences
2025-02-24T16:33:40.6884563Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6884902Z                     diff += 1
2025-02-24T16:33:40.6885116Z     
2025-02-24T16:33:40.6885294Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6885594Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6885983Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6886350Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.6886612Z E           
2025-02-24T16:33:40.6886825Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.6887636Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6888415Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6888765Z 
2025-02-24T16:33:40.6889080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6889472Z 
2025-02-24T16:33:40.6889646Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.6889908Z 
2025-02-24T16:33:40.6890143Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d3560>
2025-02-24T16:33:40.6890624Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8dc6c60>
2025-02-24T16:33:40.6890944Z attr = 'lines'
2025-02-24T16:33:40.6891051Z 
2025-02-24T16:33:40.6891197Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6891536Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6891818Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6892166Z         try:
2025-02-24T16:33:40.6892417Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6892721Z         except KeyError:
2025-02-24T16:33:40.6892987Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6893272Z     
2025-02-24T16:33:40.6893449Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6893697Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6893958Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6894260Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6894565Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6894809Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6895087Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6895354Z             else:
2025-02-24T16:33:40.6895561Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.6895841Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.6896040Z 
2025-02-24T16:33:40.6896165Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.6896483Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6896826Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.6897125Z     ???
2025-02-24T16:33:40.6897464Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6897670Z 
2025-02-24T16:33:40.6897742Z >   ???
2025-02-24T16:33:40.6897962Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.6898234Z E   
2025-02-24T16:33:40.6898454Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.6898771Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6899034Z E          ...
2025-02-24T16:33:40.6899228Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6899559Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6899887Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6900153Z E          ...
2025-02-24T16:33:40.6900339Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6900627Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6900937Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.6901126Z 
2025-02-24T16:33:40.6901215Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.6901695Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_lower_level_index] ___
2025-02-24T16:33:40.6901998Z 
2025-02-24T16:33:40.6902225Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d3b60>
2025-02-24T16:33:40.6902701Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8dc6c60>
2025-02-24T16:33:40.6903039Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.6903195Z 
2025-02-24T16:33:40.6903333Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6903668Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6903943Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6904158Z         try:
2025-02-24T16:33:40.6904407Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6904707Z         except KeyError:
2025-02-24T16:33:40.6904974Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6905262Z     
2025-02-24T16:33:40.6905441Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6905690Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6906015Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6906544Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6906851Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6907097Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6907470Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6907827Z 
2025-02-24T16:33:40.6907958Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.6908281Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6908485Z 
2025-02-24T16:33:40.6908620Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.6908925Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.6909195Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6909472Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.6909770Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.6910076Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.6910339Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6910605Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.6910834Z err_msg = None
2025-02-24T16:33:40.6910951Z 
2025-02-24T16:33:40.6911062Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6911340Z         if err_msg is None:
2025-02-24T16:33:40.6911575Z             if left.shape != right.shape:
2025-02-24T16:33:40.6911828Z                 raise_assert_detail(
2025-02-24T16:33:40.6912130Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6912432Z                 )
2025-02-24T16:33:40.6912609Z     
2025-02-24T16:33:40.6912769Z             diff = 0
2025-02-24T16:33:40.6912996Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6913280Z                 # count up differences
2025-02-24T16:33:40.6913614Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6913954Z                     diff += 1
2025-02-24T16:33:40.6914162Z     
2025-02-24T16:33:40.6914336Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6914638Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6915038Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6915397Z E           AssertionError: Series are different
2025-02-24T16:33:40.6915651Z E           
2025-02-24T16:33:40.6915855Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.6916548Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.6917474Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6918227Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6918638Z 
2025-02-24T16:33:40.6918959Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6919553Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_upper_level_index] ___
2025-02-24T16:33:40.6919842Z 
2025-02-24T16:33:40.6920069Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d3680>
2025-02-24T16:33:40.6920692Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8dc6c60>
2025-02-24T16:33:40.6921035Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.6921191Z 
2025-02-24T16:33:40.6921328Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6921668Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6921947Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6922161Z         try:
2025-02-24T16:33:40.6922406Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6922709Z         except KeyError:
2025-02-24T16:33:40.6922980Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6923267Z     
2025-02-24T16:33:40.6923443Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6923690Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6923957Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6924256Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6924578Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6925012Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6925446Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6925644Z 
2025-02-24T16:33:40.6925772Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.6926091Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6926293Z 
2025-02-24T16:33:40.6926433Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.6926747Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.6927014Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.6927394Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.6927693Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.6928001Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.6928277Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.6928546Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.6928782Z err_msg = None
2025-02-24T16:33:40.6928887Z 
2025-02-24T16:33:40.6929002Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6929271Z         if err_msg is None:
2025-02-24T16:33:40.6929503Z             if left.shape != right.shape:
2025-02-24T16:33:40.6929759Z                 raise_assert_detail(
2025-02-24T16:33:40.6930191Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6930499Z                 )
2025-02-24T16:33:40.6930676Z     
2025-02-24T16:33:40.6930840Z             diff = 0
2025-02-24T16:33:40.6931071Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6931353Z                 # count up differences
2025-02-24T16:33:40.6931691Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6932032Z                     diff += 1
2025-02-24T16:33:40.6932238Z     
2025-02-24T16:33:40.6932412Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6932714Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6933100Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6933463Z E           AssertionError: Series are different
2025-02-24T16:33:40.6933719Z E           
2025-02-24T16:33:40.6933925Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.6934482Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.6935424Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.6936254Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.6936709Z 
2025-02-24T16:33:40.6937015Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6937716Z _____________ TestPlasma.test_plasma_properties[ionization:lte-nu] _____________
2025-02-24T16:33:40.6937991Z 
2025-02-24T16:33:40.6938123Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6938464Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6938774Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6939087Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6939431Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6939733Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6939982Z err_msg = None
2025-02-24T16:33:40.6940095Z 
2025-02-24T16:33:40.6940209Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6940481Z         if err_msg is None:
2025-02-24T16:33:40.6940715Z             if left.shape != right.shape:
2025-02-24T16:33:40.6940972Z                 raise_assert_detail(
2025-02-24T16:33:40.6941277Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6941575Z                 )
2025-02-24T16:33:40.6941752Z     
2025-02-24T16:33:40.6941916Z             diff = 0
2025-02-24T16:33:40.6942143Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6942426Z                 # count up differences
2025-02-24T16:33:40.6942872Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6943244Z                     diff += 1
2025-02-24T16:33:40.6943614Z     
2025-02-24T16:33:40.6943879Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6944185Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6944573Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6944949Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.6945214Z E           
2025-02-24T16:33:40.6945437Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.6945891Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6946490Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6946978Z 
2025-02-24T16:33:40.6947399Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6947791Z 
2025-02-24T16:33:40.6947963Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.6948214Z 
2025-02-24T16:33:40.6948444Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d1ac0>
2025-02-24T16:33:40.6948955Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8dc6c60>, attr = 'nu'
2025-02-24T16:33:40.6949240Z 
2025-02-24T16:33:40.6949384Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6949717Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6950001Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6950216Z         try:
2025-02-24T16:33:40.6950462Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6950762Z         except KeyError:
2025-02-24T16:33:40.6951029Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6951327Z     
2025-02-24T16:33:40.6951503Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6951751Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6952014Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6952317Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6952617Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6952864Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6953142Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6953332Z 
2025-02-24T16:33:40.6953464Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.6953780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6954123Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.6954415Z     ???
2025-02-24T16:33:40.6954616Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6954821Z 
2025-02-24T16:33:40.6954893Z >   ???
2025-02-24T16:33:40.6955110Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.6955381Z E   
2025-02-24T16:33:40.6955597Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.6955915Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6956182Z E          ...
2025-02-24T16:33:40.6956378Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6956675Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6957120Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6957523Z E          ...
2025-02-24T16:33:40.6957714Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6958011Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6958320Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.6958513Z 
2025-02-24T16:33:40.6958603Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.6958948Z _______ TestPlasma.test_plasma_properties[ionization:lte-wavelength_cm] ________
2025-02-24T16:33:40.6959233Z 
2025-02-24T16:33:40.6959362Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6959714Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6960025Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6960343Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6960690Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6961105Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6961516Z err_msg = None
2025-02-24T16:33:40.6961632Z 
2025-02-24T16:33:40.6961744Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6962153Z         if err_msg is None:
2025-02-24T16:33:40.6962384Z             if left.shape != right.shape:
2025-02-24T16:33:40.6962640Z                 raise_assert_detail(
2025-02-24T16:33:40.6962945Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6963244Z                 )
2025-02-24T16:33:40.6963418Z     
2025-02-24T16:33:40.6963580Z             diff = 0
2025-02-24T16:33:40.6963710Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6963799Z                 # count up differences
2025-02-24T16:33:40.6963980Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6964060Z                     diff += 1
2025-02-24T16:33:40.6964136Z     
2025-02-24T16:33:40.6964233Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6964376Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6964551Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6964670Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.6964753Z E           
2025-02-24T16:33:40.6964865Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.6965131Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6965401Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6965407Z 
2025-02-24T16:33:40.6965724Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6965728Z 
2025-02-24T16:33:40.6965899Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.6965903Z 
2025-02-24T16:33:40.6966134Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d3530>
2025-02-24T16:33:40.6966300Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8dc6c60>
2025-02-24T16:33:40.6966388Z attr = 'wavelength_cm'
2025-02-24T16:33:40.6966391Z 
2025-02-24T16:33:40.6966669Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6966791Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6966883Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6966952Z         try:
2025-02-24T16:33:40.6967097Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6967175Z         except KeyError:
2025-02-24T16:33:40.6967429Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6967504Z     
2025-02-24T16:33:40.6967590Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6967687Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6967775Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6967910Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6967996Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6968089Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6968203Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6968212Z 
2025-02-24T16:33:40.6968338Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.6968455Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6968601Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.6968677Z     ???
2025-02-24T16:33:40.6968790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6968911Z 
2025-02-24T16:33:40.6968982Z >   ???
2025-02-24T16:33:40.6982301Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.6982462Z E   
2025-02-24T16:33:40.6982726Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.6982923Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6983006Z E          ...
2025-02-24T16:33:40.6983108Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6983259Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6983393Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6983467Z E          ...
2025-02-24T16:33:40.6983563Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6983702Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6983813Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.6983826Z 
2025-02-24T16:33:40.6983926Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.6984128Z ____________ TestPlasma.test_plasma_properties[ionization:lte-f_lu] ____________
2025-02-24T16:33:40.6984133Z 
2025-02-24T16:33:40.6984273Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6984413Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6984517Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6984666Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6984801Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6984908Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6984987Z err_msg = None
2025-02-24T16:33:40.6984997Z 
2025-02-24T16:33:40.6985116Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6985207Z         if err_msg is None:
2025-02-24T16:33:40.6985308Z             if left.shape != right.shape:
2025-02-24T16:33:40.6985399Z                 raise_assert_detail(
2025-02-24T16:33:40.6985554Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6985629Z                 )
2025-02-24T16:33:40.6985702Z     
2025-02-24T16:33:40.6985775Z             diff = 0
2025-02-24T16:33:40.6985895Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6985984Z                 # count up differences
2025-02-24T16:33:40.6986346Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6986431Z                     diff += 1
2025-02-24T16:33:40.6986506Z     
2025-02-24T16:33:40.6986597Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6986745Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6986930Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6987048Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.6987119Z E           
2025-02-24T16:33:40.6987378Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.6987664Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6987930Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6988052Z 
2025-02-24T16:33:40.6988386Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6988391Z 
2025-02-24T16:33:40.6988569Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.6988574Z 
2025-02-24T16:33:40.6988808Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d2090>
2025-02-24T16:33:40.6989022Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8dc6c60>, attr = 'f_lu'
2025-02-24T16:33:40.6989026Z 
2025-02-24T16:33:40.6989172Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6989297Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6989385Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6989460Z         try:
2025-02-24T16:33:40.6989606Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6989692Z         except KeyError:
2025-02-24T16:33:40.6989842Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6989909Z     
2025-02-24T16:33:40.6989999Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6990093Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6990188Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6990327Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6990415Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6990509Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6990620Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6990628Z 
2025-02-24T16:33:40.6990760Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.6990873Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6991029Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.6991101Z     ???
2025-02-24T16:33:40.6991209Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6991218Z 
2025-02-24T16:33:40.6991292Z >   ???
2025-02-24T16:33:40.6991422Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.6991494Z E   
2025-02-24T16:33:40.6991625Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.6991736Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6991812Z E          ...
2025-02-24T16:33:40.6991902Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6992039Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6992314Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6992393Z E          ...
2025-02-24T16:33:40.6992484Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6992606Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6992715Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.6992724Z 
2025-02-24T16:33:40.6992817Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.6993018Z ________ TestPlasma.test_plasma_properties[ionization:lte-tau_sobolevs] ________
2025-02-24T16:33:40.6993023Z 
2025-02-24T16:33:40.6993159Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6993295Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6993398Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6993536Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6993662Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6993758Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6993833Z err_msg = None
2025-02-24T16:33:40.6993837Z 
2025-02-24T16:33:40.6993959Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6994139Z         if err_msg is None:
2025-02-24T16:33:40.6994240Z             if left.shape != right.shape:
2025-02-24T16:33:40.6994325Z                 raise_assert_detail(
2025-02-24T16:33:40.6994482Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6994557Z                 )
2025-02-24T16:33:40.6994624Z     
2025-02-24T16:33:40.6994700Z             diff = 0
2025-02-24T16:33:40.6994812Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6994906Z                 # count up differences
2025-02-24T16:33:40.6995085Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6995169Z                     diff += 1
2025-02-24T16:33:40.6995241Z     
2025-02-24T16:33:40.6995329Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6995471Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6995646Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6995767Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.6995837Z E           
2025-02-24T16:33:40.6995953Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.6996224Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6996483Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6996492Z 
2025-02-24T16:33:40.6996812Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6996816Z 
2025-02-24T16:33:40.6996992Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.6996996Z 
2025-02-24T16:33:40.6997221Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d3020>
2025-02-24T16:33:40.6997567Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8dc6c60>
2025-02-24T16:33:40.6997646Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.6997655Z 
2025-02-24T16:33:40.6997931Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6998058Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6998142Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6998269Z         try:
2025-02-24T16:33:40.6998521Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6998676Z         except KeyError:
2025-02-24T16:33:40.6998922Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6998993Z     
2025-02-24T16:33:40.6999088Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6999181Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6999275Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6999439Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6999534Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6999627Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6999748Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6999824Z             else:
2025-02-24T16:33:40.6999917Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7000030Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7000035Z 
2025-02-24T16:33:40.7000169Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7000290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7000597Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7000666Z     ???
2025-02-24T16:33:40.7000779Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7000783Z 
2025-02-24T16:33:40.7000849Z >   ???
2025-02-24T16:33:40.7000983Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7001055Z E   
2025-02-24T16:33:40.7001185Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7001305Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7001375Z E          ...
2025-02-24T16:33:40.7001469Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7001600Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7001723Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7001799Z E          ...
2025-02-24T16:33:40.7001893Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7002025Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7002129Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7002133Z 
2025-02-24T16:33:40.7002228Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7002430Z ________ TestPlasma.test_plasma_properties[ionization:lte-beta_sobolev] ________
2025-02-24T16:33:40.7002440Z 
2025-02-24T16:33:40.7002570Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7002714Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7002812Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7002951Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7003075Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7003176Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7003254Z err_msg = None
2025-02-24T16:33:40.7003259Z 
2025-02-24T16:33:40.7003375Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7003460Z         if err_msg is None:
2025-02-24T16:33:40.7003556Z             if left.shape != right.shape:
2025-02-24T16:33:40.7003645Z                 raise_assert_detail(
2025-02-24T16:33:40.7003797Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7003867Z                 )
2025-02-24T16:33:40.7004074Z     
2025-02-24T16:33:40.7004153Z             diff = 0
2025-02-24T16:33:40.7004272Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7004359Z                 # count up differences
2025-02-24T16:33:40.7004536Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7004619Z                     diff += 1
2025-02-24T16:33:40.7004694Z     
2025-02-24T16:33:40.7004787Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7004927Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7005101Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7005213Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7005289Z E           
2025-02-24T16:33:40.7005405Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7005670Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7005931Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7006018Z 
2025-02-24T16:33:40.7006342Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7006346Z 
2025-02-24T16:33:40.7006516Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7006521Z 
2025-02-24T16:33:40.7006755Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d2750>
2025-02-24T16:33:40.7006929Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8dc6c60>
2025-02-24T16:33:40.7007006Z attr = 'beta_sobolev'
2025-02-24T16:33:40.7007010Z 
2025-02-24T16:33:40.7007154Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7007401Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7007501Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7007570Z         try:
2025-02-24T16:33:40.7007711Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7007803Z         except KeyError:
2025-02-24T16:33:40.7007942Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7008018Z     
2025-02-24T16:33:40.7008105Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7008202Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7008290Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7008431Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7008524Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7008612Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7008730Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7008801Z             else:
2025-02-24T16:33:40.7008900Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7009012Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7009016Z 
2025-02-24T16:33:40.7009145Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7009264Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7009410Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7009483Z     ???
2025-02-24T16:33:40.7009591Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7009595Z 
2025-02-24T16:33:40.7009668Z >   ???
2025-02-24T16:33:40.7009923Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7009993Z E   
2025-02-24T16:33:40.7010125Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7010236Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7010311Z E          ...
2025-02-24T16:33:40.7010398Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7010536Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7010652Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7010720Z E          ...
2025-02-24T16:33:40.7010808Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7010930Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7011039Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7011044Z 
2025-02-24T16:33:40.7011135Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7011335Z __________ TestPlasma.test_plasma_properties[ionization:lte-j_blues] ___________
2025-02-24T16:33:40.7011339Z 
2025-02-24T16:33:40.7011472Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7011603Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7011702Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7011988Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7012115Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7012211Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7012283Z err_msg = None
2025-02-24T16:33:40.7012287Z 
2025-02-24T16:33:40.7012402Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7012481Z         if err_msg is None:
2025-02-24T16:33:40.7012579Z             if left.shape != right.shape:
2025-02-24T16:33:40.7012672Z                 raise_assert_detail(
2025-02-24T16:33:40.7012815Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7012889Z                 )
2025-02-24T16:33:40.7012956Z     
2025-02-24T16:33:40.7013032Z             diff = 0
2025-02-24T16:33:40.7013140Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7013239Z                 # count up differences
2025-02-24T16:33:40.7013411Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7013488Z                     diff += 1
2025-02-24T16:33:40.7013561Z     
2025-02-24T16:33:40.7013649Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7013792Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7013962Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7014079Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7014160Z E           
2025-02-24T16:33:40.7014271Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7014534Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7014801Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7014806Z 
2025-02-24T16:33:40.7015108Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7015195Z 
2025-02-24T16:33:40.7015370Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7015374Z 
2025-02-24T16:33:40.7015615Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d2cf0>
2025-02-24T16:33:40.7015782Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8dc6c60>
2025-02-24T16:33:40.7015863Z attr = 'j_blues'
2025-02-24T16:33:40.7015872Z 
2025-02-24T16:33:40.7016016Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7016131Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7016220Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7016291Z         try:
2025-02-24T16:33:40.7016436Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7016521Z         except KeyError:
2025-02-24T16:33:40.7016660Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7016733Z     
2025-02-24T16:33:40.7016823Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7016988Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7017146Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7017507Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7017657Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7017751Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7018008Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7018084Z             else:
2025-02-24T16:33:40.7018183Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7018290Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7018294Z 
2025-02-24T16:33:40.7018422Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7018540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7018683Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7018762Z     ???
2025-02-24T16:33:40.7018870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7018875Z 
2025-02-24T16:33:40.7018945Z >   ???
2025-02-24T16:33:40.7019076Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7019143Z E   
2025-02-24T16:33:40.7019274Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7019394Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7019470Z E          ...
2025-02-24T16:33:40.7019556Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7019688Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7019804Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7019874Z E          ...
2025-02-24T16:33:40.7019963Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7020085Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7020199Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7020204Z 
2025-02-24T16:33:40.7020291Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7020485Z ___________ TestPlasma.test_plasma_properties[excitation:lte-lines] ____________
2025-02-24T16:33:40.7020489Z 
2025-02-24T16:33:40.7020624Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7020755Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7020855Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7020986Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7021114Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7021211Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7021286Z err_msg = None
2025-02-24T16:33:40.7021402Z 
2025-02-24T16:33:40.7021520Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7021601Z         if err_msg is None:
2025-02-24T16:33:40.7021701Z             if left.shape != right.shape:
2025-02-24T16:33:40.7021792Z                 raise_assert_detail(
2025-02-24T16:33:40.7021936Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7022018Z                 )
2025-02-24T16:33:40.7022086Z     
2025-02-24T16:33:40.7022163Z             diff = 0
2025-02-24T16:33:40.7022271Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7022365Z                 # count up differences
2025-02-24T16:33:40.7022540Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7022617Z                     diff += 1
2025-02-24T16:33:40.7022693Z     
2025-02-24T16:33:40.7022782Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7022927Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7023096Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7023216Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7023290Z E           
2025-02-24T16:33:40.7023402Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7023667Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7024033Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7024044Z 
2025-02-24T16:33:40.7024346Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7024350Z 
2025-02-24T16:33:40.7024525Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7024529Z 
2025-02-24T16:33:40.7024755Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d0bc0>
2025-02-24T16:33:40.7024927Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e49da810>
2025-02-24T16:33:40.7025004Z attr = 'lines'
2025-02-24T16:33:40.7025008Z 
2025-02-24T16:33:40.7025143Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7025263Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7025345Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7025421Z         try:
2025-02-24T16:33:40.7025566Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7025651Z         except KeyError:
2025-02-24T16:33:40.7025798Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7025866Z     
2025-02-24T16:33:40.7025962Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7026059Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7026154Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7026299Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7026383Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7026482Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7026591Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7026669Z             else:
2025-02-24T16:33:40.7026766Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7026876Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7026881Z 
2025-02-24T16:33:40.7027012Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7027209Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7027495Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7027567Z     ???
2025-02-24T16:33:40.7027683Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7027687Z 
2025-02-24T16:33:40.7027773Z >   ???
2025-02-24T16:33:40.7027898Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7027970Z E   
2025-02-24T16:33:40.7028096Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7028222Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7028292Z E          ...
2025-02-24T16:33:40.7028385Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7028520Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7028634Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7028713Z E          ...
2025-02-24T16:33:40.7028798Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7028933Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7029038Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7029042Z 
2025-02-24T16:33:40.7029136Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7029473Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_lower_level_index] ___
2025-02-24T16:33:40.7029477Z 
2025-02-24T16:33:40.7029700Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d1730>
2025-02-24T16:33:40.7029872Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e49da810>
2025-02-24T16:33:40.7029961Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.7029965Z 
2025-02-24T16:33:40.7030112Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7030230Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7030318Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7030393Z         try:
2025-02-24T16:33:40.7030534Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7030622Z         except KeyError:
2025-02-24T16:33:40.7030758Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7030832Z     
2025-02-24T16:33:40.7030923Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7031023Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7031119Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7031251Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7031342Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7031431Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7031547Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7031551Z 
2025-02-24T16:33:40.7031681Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7031798Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7031802Z 
2025-02-24T16:33:40.7031944Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7032031Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7032146Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7032236Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7032374Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7032460Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7032566Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7032650Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7032729Z err_msg = None
2025-02-24T16:33:40.7032733Z 
2025-02-24T16:33:40.7032842Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7033041Z         if err_msg is None:
2025-02-24T16:33:40.7033137Z             if left.shape != right.shape:
2025-02-24T16:33:40.7033227Z                 raise_assert_detail(
2025-02-24T16:33:40.7033369Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7033444Z                 )
2025-02-24T16:33:40.7033518Z     
2025-02-24T16:33:40.7033591Z             diff = 0
2025-02-24T16:33:40.7033713Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7033803Z                 # count up differences
2025-02-24T16:33:40.7033979Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7034057Z                     diff += 1
2025-02-24T16:33:40.7034131Z     
2025-02-24T16:33:40.7034222Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7034359Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7034658Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7034842Z E           AssertionError: Series are different
2025-02-24T16:33:40.7034975Z E           
2025-02-24T16:33:40.7035089Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.7035471Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7035902Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7036240Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7036249Z 
2025-02-24T16:33:40.7036562Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7036773Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_upper_level_index] ___
2025-02-24T16:33:40.7036777Z 
2025-02-24T16:33:40.7037011Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d11f0>
2025-02-24T16:33:40.7037178Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e49da810>
2025-02-24T16:33:40.7037400Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.7037408Z 
2025-02-24T16:33:40.7037549Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7037668Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7037752Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7037831Z         try:
2025-02-24T16:33:40.7037980Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7038067Z         except KeyError:
2025-02-24T16:33:40.7038217Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7038287Z     
2025-02-24T16:33:40.7038379Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7038472Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7038565Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7038700Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7038785Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7038881Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7039106Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7039112Z 
2025-02-24T16:33:40.7039248Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7039363Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7039368Z 
2025-02-24T16:33:40.7039503Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7039598Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7039706Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7039792Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7039940Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7040022Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7040131Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7040212Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7040293Z err_msg = None
2025-02-24T16:33:40.7040297Z 
2025-02-24T16:33:40.7040405Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7040493Z         if err_msg is None:
2025-02-24T16:33:40.7040591Z             if left.shape != right.shape:
2025-02-24T16:33:40.7040675Z                 raise_assert_detail(
2025-02-24T16:33:40.7040932Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7041004Z                 )
2025-02-24T16:33:40.7041077Z     
2025-02-24T16:33:40.7041149Z             diff = 0
2025-02-24T16:33:40.7041270Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7041361Z                 # count up differences
2025-02-24T16:33:40.7041529Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7041615Z                     diff += 1
2025-02-24T16:33:40.7041686Z     
2025-02-24T16:33:40.7041779Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7041916Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7042091Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7042200Z E           AssertionError: Series are different
2025-02-24T16:33:40.7042273Z E           
2025-02-24T16:33:40.7042385Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.7042752Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7043139Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7043519Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7043526Z 
2025-02-24T16:33:40.7043840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7044100Z _____________ TestPlasma.test_plasma_properties[excitation:lte-nu] _____________
2025-02-24T16:33:40.7044105Z 
2025-02-24T16:33:40.7044244Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7044379Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7044477Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7044620Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7044742Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7044840Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7044915Z err_msg = None
2025-02-24T16:33:40.7044919Z 
2025-02-24T16:33:40.7045032Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7045118Z         if err_msg is None:
2025-02-24T16:33:40.7045211Z             if left.shape != right.shape:
2025-02-24T16:33:40.7045304Z                 raise_assert_detail(
2025-02-24T16:33:40.7045446Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7045529Z                 )
2025-02-24T16:33:40.7045600Z     
2025-02-24T16:33:40.7045678Z             diff = 0
2025-02-24T16:33:40.7045793Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7045984Z                 # count up differences
2025-02-24T16:33:40.7046156Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7046234Z                     diff += 1
2025-02-24T16:33:40.7046309Z     
2025-02-24T16:33:40.7046395Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7046539Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7046714Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7046830Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7046913Z E           
2025-02-24T16:33:40.7047026Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7047387Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7047659Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7047664Z 
2025-02-24T16:33:40.7047963Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7047976Z 
2025-02-24T16:33:40.7048153Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7048157Z 
2025-02-24T16:33:40.7048388Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d0170>
2025-02-24T16:33:40.7048590Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e49da810>, attr = 'nu'
2025-02-24T16:33:40.7048598Z 
2025-02-24T16:33:40.7048741Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7048861Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7048947Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7049027Z         try:
2025-02-24T16:33:40.7049168Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7049252Z         except KeyError:
2025-02-24T16:33:40.7049387Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7049460Z     
2025-02-24T16:33:40.7049546Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7049767Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7049866Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7049997Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7050090Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7050178Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7050299Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7050303Z 
2025-02-24T16:33:40.7050432Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7050546Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7050700Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7050769Z     ???
2025-02-24T16:33:40.7050888Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7050892Z 
2025-02-24T16:33:40.7050959Z >   ???
2025-02-24T16:33:40.7051097Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7051170Z E   
2025-02-24T16:33:40.7051300Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7051419Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7051490Z E          ...
2025-02-24T16:33:40.7051585Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7051826Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7051946Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7052020Z E          ...
2025-02-24T16:33:40.7052103Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7052232Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7052338Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7052342Z 
2025-02-24T16:33:40.7052438Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7052666Z _______ TestPlasma.test_plasma_properties[excitation:lte-wavelength_cm] ________
2025-02-24T16:33:40.7052673Z 
2025-02-24T16:33:40.7052913Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7053143Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7053309Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7053736Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7053867Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7053960Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7054041Z err_msg = None
2025-02-24T16:33:40.7054045Z 
2025-02-24T16:33:40.7054158Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7054248Z         if err_msg is None:
2025-02-24T16:33:40.7054350Z             if left.shape != right.shape:
2025-02-24T16:33:40.7054438Z                 raise_assert_detail(
2025-02-24T16:33:40.7054587Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7054658Z                 )
2025-02-24T16:33:40.7054732Z     
2025-02-24T16:33:40.7054806Z             diff = 0
2025-02-24T16:33:40.7054923Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7055020Z                 # count up differences
2025-02-24T16:33:40.7055191Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7055276Z                     diff += 1
2025-02-24T16:33:40.7055344Z     
2025-02-24T16:33:40.7055439Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7055576Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7055753Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7055871Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7056039Z E           
2025-02-24T16:33:40.7056162Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7056421Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7056694Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7056699Z 
2025-02-24T16:33:40.7057012Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7057017Z 
2025-02-24T16:33:40.7057192Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7057196Z 
2025-02-24T16:33:40.7057545Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d0080>
2025-02-24T16:33:40.7057721Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e49da810>
2025-02-24T16:33:40.7057804Z attr = 'wavelength_cm'
2025-02-24T16:33:40.7057926Z 
2025-02-24T16:33:40.7058072Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7058187Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7058276Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7058350Z         try:
2025-02-24T16:33:40.7058490Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7058574Z         except KeyError:
2025-02-24T16:33:40.7058710Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7058786Z     
2025-02-24T16:33:40.7058877Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7058975Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7059069Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7059198Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7059291Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7059381Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7059501Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7059504Z 
2025-02-24T16:33:40.7059630Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7059749Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7059899Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7059971Z     ???
2025-02-24T16:33:40.7060084Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7060088Z 
2025-02-24T16:33:40.7060156Z >   ???
2025-02-24T16:33:40.7060293Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7060366Z E   
2025-02-24T16:33:40.7060498Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7060614Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7060685Z E          ...
2025-02-24T16:33:40.7060777Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7060913Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7061031Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7061105Z E          ...
2025-02-24T16:33:40.7061190Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7061319Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7061424Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7061428Z 
2025-02-24T16:33:40.7061527Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7061840Z ____________ TestPlasma.test_plasma_properties[excitation:lte-f_lu] ____________
2025-02-24T16:33:40.7061851Z 
2025-02-24T16:33:40.7061988Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7062127Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7062223Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7062367Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7062496Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7062589Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7062669Z err_msg = None
2025-02-24T16:33:40.7062673Z 
2025-02-24T16:33:40.7062788Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7062874Z         if err_msg is None:
2025-02-24T16:33:40.7062969Z             if left.shape != right.shape:
2025-02-24T16:33:40.7063065Z                 raise_assert_detail(
2025-02-24T16:33:40.7063221Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7063290Z                 )
2025-02-24T16:33:40.7063361Z     
2025-02-24T16:33:40.7063432Z             diff = 0
2025-02-24T16:33:40.7063553Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7063755Z                 # count up differences
2025-02-24T16:33:40.7063942Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7064023Z                     diff += 1
2025-02-24T16:33:40.7064091Z     
2025-02-24T16:33:40.7064183Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7064321Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7064499Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7064618Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7064693Z E           
2025-02-24T16:33:40.7064811Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7065074Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7065347Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7065352Z 
2025-02-24T16:33:40.7065679Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7065686Z 
2025-02-24T16:33:40.7065860Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7065864Z 
2025-02-24T16:33:40.7066103Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d01a0>
2025-02-24T16:33:40.7066319Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e49da810>, attr = 'f_lu'
2025-02-24T16:33:40.7066328Z 
2025-02-24T16:33:40.7066468Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7066588Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7066672Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7066746Z         try:
2025-02-24T16:33:40.7066888Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7066971Z         except KeyError:
2025-02-24T16:33:40.7067117Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7067184Z     
2025-02-24T16:33:40.7067395Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7067646Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7067745Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7067887Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7067978Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7068073Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7068190Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7068194Z 
2025-02-24T16:33:40.7068336Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7068450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7068604Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7068682Z     ???
2025-02-24T16:33:40.7068790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7068794Z 
2025-02-24T16:33:40.7068866Z >   ???
2025-02-24T16:33:40.7068994Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7069066Z E   
2025-02-24T16:33:40.7069196Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7069312Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7069387Z E          ...
2025-02-24T16:33:40.7069475Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7069725Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7069838Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7069911Z E          ...
2025-02-24T16:33:40.7069995Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7070127Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7070237Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7070241Z 
2025-02-24T16:33:40.7070329Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7070542Z ________ TestPlasma.test_plasma_properties[excitation:lte-tau_sobolevs] ________
2025-02-24T16:33:40.7070546Z 
2025-02-24T16:33:40.7070676Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7070814Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7070957Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7071200Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7071420Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7071573Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7071715Z err_msg = None
2025-02-24T16:33:40.7071721Z 
2025-02-24T16:33:40.7071870Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7071952Z         if err_msg is None:
2025-02-24T16:33:40.7072053Z             if left.shape != right.shape:
2025-02-24T16:33:40.7072143Z                 raise_assert_detail(
2025-02-24T16:33:40.7072294Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7072363Z                 )
2025-02-24T16:33:40.7072436Z     
2025-02-24T16:33:40.7072512Z             diff = 0
2025-02-24T16:33:40.7072624Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7072722Z                 # count up differences
2025-02-24T16:33:40.7072898Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7072980Z                     diff += 1
2025-02-24T16:33:40.7073047Z     
2025-02-24T16:33:40.7073142Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7073285Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7073460Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7073580Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7073750Z E           
2025-02-24T16:33:40.7073873Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7074139Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7074403Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7074407Z 
2025-02-24T16:33:40.7074728Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7074736Z 
2025-02-24T16:33:40.7074914Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7074919Z 
2025-02-24T16:33:40.7075154Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d3cb0>
2025-02-24T16:33:40.7075336Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e49da810>
2025-02-24T16:33:40.7075488Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.7075493Z 
2025-02-24T16:33:40.7075637Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7075755Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7075839Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7075919Z         try:
2025-02-24T16:33:40.7076057Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7076142Z         except KeyError:
2025-02-24T16:33:40.7076278Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7076350Z     
2025-02-24T16:33:40.7076445Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7076538Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7076630Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7076760Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7076850Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7076938Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7077061Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7077136Z             else:
2025-02-24T16:33:40.7077231Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7077475Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7077480Z 
2025-02-24T16:33:40.7077605Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7077722Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7077872Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7077947Z     ???
2025-02-24T16:33:40.7078064Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7078068Z 
2025-02-24T16:33:40.7078137Z >   ???
2025-02-24T16:33:40.7078267Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7078334Z E   
2025-02-24T16:33:40.7078469Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7078589Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7078659Z E          ...
2025-02-24T16:33:40.7078751Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7078881Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7078998Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7079067Z E          ...
2025-02-24T16:33:40.7079155Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7079284Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7079510Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7079515Z 
2025-02-24T16:33:40.7079610Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7079806Z ________ TestPlasma.test_plasma_properties[excitation:lte-beta_sobolev] ________
2025-02-24T16:33:40.7079809Z 
2025-02-24T16:33:40.7079942Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7080077Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7080171Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7080307Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7080429Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7080525Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7080603Z err_msg = None
2025-02-24T16:33:40.7080611Z 
2025-02-24T16:33:40.7080720Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7080806Z         if err_msg is None:
2025-02-24T16:33:40.7080903Z             if left.shape != right.shape:
2025-02-24T16:33:40.7080991Z                 raise_assert_detail(
2025-02-24T16:33:40.7081133Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7081319Z                 )
2025-02-24T16:33:40.7081391Z     
2025-02-24T16:33:40.7081463Z             diff = 0
2025-02-24T16:33:40.7081581Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7081667Z                 # count up differences
2025-02-24T16:33:40.7081839Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7081915Z                     diff += 1
2025-02-24T16:33:40.7081989Z     
2025-02-24T16:33:40.7082080Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7082221Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7082395Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7082506Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7082582Z E           
2025-02-24T16:33:40.7082692Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7082961Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7083234Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7083238Z 
2025-02-24T16:33:40.7083554Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7083558Z 
2025-02-24T16:33:40.7083730Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7083734Z 
2025-02-24T16:33:40.7083978Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d3470>
2025-02-24T16:33:40.7084149Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e49da810>
2025-02-24T16:33:40.7084232Z attr = 'beta_sobolev'
2025-02-24T16:33:40.7084236Z 
2025-02-24T16:33:40.7084379Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7084495Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7084584Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7084654Z         try:
2025-02-24T16:33:40.7084887Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7084972Z         except KeyError:
2025-02-24T16:33:40.7085114Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7085186Z     
2025-02-24T16:33:40.7085272Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7085371Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7085458Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7085601Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7085685Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7085778Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7085891Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7085963Z             else:
2025-02-24T16:33:40.7086060Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7086166Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7086170Z 
2025-02-24T16:33:40.7086305Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7086423Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7086570Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7086643Z     ???
2025-02-24T16:33:40.7086753Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7086836Z 
2025-02-24T16:33:40.7086910Z >   ???
2025-02-24T16:33:40.7087040Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7087113Z E   
2025-02-24T16:33:40.7087343Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7087457Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7087533Z E          ...
2025-02-24T16:33:40.7087618Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7087755Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7087872Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7087947Z E          ...
2025-02-24T16:33:40.7088034Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7088170Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7088277Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7088281Z 
2025-02-24T16:33:40.7088369Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7088576Z __________ TestPlasma.test_plasma_properties[excitation:lte-j_blues] ___________
2025-02-24T16:33:40.7088580Z 
2025-02-24T16:33:40.7088714Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7088840Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7088941Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7089074Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7089205Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7089301Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7089374Z err_msg = None
2025-02-24T16:33:40.7089378Z 
2025-02-24T16:33:40.7089497Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7089576Z         if err_msg is None:
2025-02-24T16:33:40.7089679Z             if left.shape != right.shape:
2025-02-24T16:33:40.7089763Z                 raise_assert_detail(
2025-02-24T16:33:40.7089912Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7089987Z                 )
2025-02-24T16:33:40.7090058Z     
2025-02-24T16:33:40.7090133Z             diff = 0
2025-02-24T16:33:40.7090242Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7090332Z                 # count up differences
2025-02-24T16:33:40.7090642Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7090729Z                     diff += 1
2025-02-24T16:33:40.7090802Z     
2025-02-24T16:33:40.7090890Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7091033Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7091207Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7091327Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7091398Z E           
2025-02-24T16:33:40.7091513Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7091774Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7092046Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7092056Z 
2025-02-24T16:33:40.7092366Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7092478Z 
2025-02-24T16:33:40.7092664Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7092669Z 
2025-02-24T16:33:40.7092902Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d2720>
2025-02-24T16:33:40.7093079Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e49da810>
2025-02-24T16:33:40.7093162Z attr = 'j_blues'
2025-02-24T16:33:40.7093165Z 
2025-02-24T16:33:40.7093309Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7093436Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7093523Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7093597Z         try:
2025-02-24T16:33:40.7093742Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7093828Z         except KeyError:
2025-02-24T16:33:40.7093973Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7094045Z     
2025-02-24T16:33:40.7094137Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7094230Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7094324Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7094458Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7094549Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7094642Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7094753Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7094827Z             else:
2025-02-24T16:33:40.7094925Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7095041Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7095045Z 
2025-02-24T16:33:40.7095176Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7095291Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7095451Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7095523Z     ???
2025-02-24T16:33:40.7095639Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7095643Z 
2025-02-24T16:33:40.7095710Z >   ???
2025-02-24T16:33:40.7095846Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7095918Z E   
2025-02-24T16:33:40.7096050Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7096169Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7096239Z E          ...
2025-02-24T16:33:40.7096438Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7096647Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7096874Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7097012Z E          ...
2025-02-24T16:33:40.7097160Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7097401Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7097508Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7097513Z 
2025-02-24T16:33:40.7097611Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7097822Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines] ________
2025-02-24T16:33:40.7097826Z 
2025-02-24T16:33:40.7097958Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7098102Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7098205Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7098345Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7098477Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7098574Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7098782Z err_msg = None
2025-02-24T16:33:40.7098786Z 
2025-02-24T16:33:40.7098899Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7098987Z         if err_msg is None:
2025-02-24T16:33:40.7099083Z             if left.shape != right.shape:
2025-02-24T16:33:40.7099175Z                 raise_assert_detail(
2025-02-24T16:33:40.7099326Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7099396Z                 )
2025-02-24T16:33:40.7099502Z     
2025-02-24T16:33:40.7099575Z             diff = 0
2025-02-24T16:33:40.7099696Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7099784Z                 # count up differences
2025-02-24T16:33:40.7099965Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7100047Z                     diff += 1
2025-02-24T16:33:40.7100115Z     
2025-02-24T16:33:40.7100207Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7100352Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7100530Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7100643Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7100720Z E           
2025-02-24T16:33:40.7100835Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7101098Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7101365Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7101374Z 
2025-02-24T16:33:40.7101692Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7101697Z 
2025-02-24T16:33:40.7101872Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7101876Z 
2025-02-24T16:33:40.7102115Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123b8590>
2025-02-24T16:33:40.7102412Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e214c380>
2025-02-24T16:33:40.7102488Z attr = 'lines'
2025-02-24T16:33:40.7102492Z 
2025-02-24T16:33:40.7102637Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7102754Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7102842Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7102911Z         try:
2025-02-24T16:33:40.7103064Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7103148Z         except KeyError:
2025-02-24T16:33:40.7103286Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7103361Z     
2025-02-24T16:33:40.7103449Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7103545Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7103633Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7103770Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7103860Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7103955Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7104071Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7104141Z             else:
2025-02-24T16:33:40.7104240Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7104345Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7104443Z 
2025-02-24T16:33:40.7104572Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7104690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7104840Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7104914Z     ???
2025-02-24T16:33:40.7105022Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7105026Z 
2025-02-24T16:33:40.7105099Z >   ???
2025-02-24T16:33:40.7105232Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7105299Z E   
2025-02-24T16:33:40.7105442Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7105556Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7105632Z E          ...
2025-02-24T16:33:40.7105719Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7105854Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7105977Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7106048Z E          ...
2025-02-24T16:33:40.7106137Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7106265Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7106378Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7106382Z 
2025-02-24T16:33:40.7106475Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7106712Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] _
2025-02-24T16:33:40.7106717Z 
2025-02-24T16:33:40.7106957Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123ba690>
2025-02-24T16:33:40.7107131Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e214c380>
2025-02-24T16:33:40.7107227Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.7107231Z 
2025-02-24T16:33:40.7107526Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7107651Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7107740Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7107810Z         try:
2025-02-24T16:33:40.7107956Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7108045Z         except KeyError:
2025-02-24T16:33:40.7108189Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7108264Z     
2025-02-24T16:33:40.7108350Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7108447Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7108536Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7108797Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7108890Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7108983Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7109099Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7109103Z 
2025-02-24T16:33:40.7109229Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7109350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7109354Z 
2025-02-24T16:33:40.7109493Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7109583Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7109699Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7109780Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7109930Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7110012Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7110122Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7110199Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7110278Z err_msg = None
2025-02-24T16:33:40.7110282Z 
2025-02-24T16:33:40.7110399Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7110616Z         if err_msg is None:
2025-02-24T16:33:40.7110714Z             if left.shape != right.shape:
2025-02-24T16:33:40.7110798Z                 raise_assert_detail(
2025-02-24T16:33:40.7110949Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7111024Z                 )
2025-02-24T16:33:40.7111092Z     
2025-02-24T16:33:40.7111169Z             diff = 0
2025-02-24T16:33:40.7111281Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7111373Z                 # count up differences
2025-02-24T16:33:40.7111548Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7111633Z                     diff += 1
2025-02-24T16:33:40.7111702Z     
2025-02-24T16:33:40.7111792Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7111934Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7112113Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7112226Z E           AssertionError: Series are different
2025-02-24T16:33:40.7112297Z E           
2025-02-24T16:33:40.7112404Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.7112806Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7113147Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7113497Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7113502Z 
2025-02-24T16:33:40.7113911Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7114149Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] _
2025-02-24T16:33:40.7114154Z 
2025-02-24T16:33:40.7114389Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123b9e20>
2025-02-24T16:33:40.7114566Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e214c380>
2025-02-24T16:33:40.7114661Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.7114666Z 
2025-02-24T16:33:40.7114809Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7114997Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7115163Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7115293Z         try:
2025-02-24T16:33:40.7115500Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7115587Z         except KeyError:
2025-02-24T16:33:40.7115735Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7115809Z     
2025-02-24T16:33:40.7115897Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7115993Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7116087Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7116220Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7116309Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7116510Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7116627Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7116631Z 
2025-02-24T16:33:40.7116756Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7116876Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7116880Z 
2025-02-24T16:33:40.7117023Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7117106Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7117225Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7117453Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7117602Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7117688Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7117794Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7117885Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7117959Z err_msg = None
2025-02-24T16:33:40.7117963Z 
2025-02-24T16:33:40.7118091Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7118177Z         if err_msg is None:
2025-02-24T16:33:40.7118270Z             if left.shape != right.shape:
2025-02-24T16:33:40.7118361Z                 raise_assert_detail(
2025-02-24T16:33:40.7118505Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7118584Z                 )
2025-02-24T16:33:40.7118653Z     
2025-02-24T16:33:40.7118730Z             diff = 0
2025-02-24T16:33:40.7118847Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7118934Z                 # count up differences
2025-02-24T16:33:40.7119112Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7119196Z                     diff += 1
2025-02-24T16:33:40.7119269Z     
2025-02-24T16:33:40.7119356Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7119498Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7119677Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7119780Z E           AssertionError: Series are different
2025-02-24T16:33:40.7119855Z E           
2025-02-24T16:33:40.7119957Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.7120474Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7120883Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7121281Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7121292Z 
2025-02-24T16:33:40.7121605Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7121917Z _________ TestPlasma.test_plasma_properties[excitation:dilute-lte-nu] __________
2025-02-24T16:33:40.7121921Z 
2025-02-24T16:33:40.7122050Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7122182Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7122283Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7122417Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7122551Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7122644Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7122724Z err_msg = None
2025-02-24T16:33:40.7122728Z 
2025-02-24T16:33:40.7122844Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7122924Z         if err_msg is None:
2025-02-24T16:33:40.7123029Z             if left.shape != right.shape:
2025-02-24T16:33:40.7123113Z                 raise_assert_detail(
2025-02-24T16:33:40.7123262Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7123333Z                 )
2025-02-24T16:33:40.7123408Z     
2025-02-24T16:33:40.7123485Z             diff = 0
2025-02-24T16:33:40.7123595Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7123686Z                 # count up differences
2025-02-24T16:33:40.7123864Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7123948Z                     diff += 1
2025-02-24T16:33:40.7124015Z     
2025-02-24T16:33:40.7124109Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7124253Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7124430Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7124553Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7124624Z E           
2025-02-24T16:33:40.7124741Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7125008Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7125381Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7125387Z 
2025-02-24T16:33:40.7125706Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7125713Z 
2025-02-24T16:33:40.7125894Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7125898Z 
2025-02-24T16:33:40.7126129Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123bbc80>
2025-02-24T16:33:40.7126342Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e214c380>, attr = 'nu'
2025-02-24T16:33:40.7126346Z 
2025-02-24T16:33:40.7126485Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7126613Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7126703Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7126774Z         try:
2025-02-24T16:33:40.7126920Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7127000Z         except KeyError:
2025-02-24T16:33:40.7127142Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7127409Z     
2025-02-24T16:33:40.7127504Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7127602Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7127691Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7127829Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7127914Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7128008Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7128117Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7128121Z 
2025-02-24T16:33:40.7128260Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7128377Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7128525Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7128598Z     ???
2025-02-24T16:33:40.7128707Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7128716Z 
2025-02-24T16:33:40.7128791Z >   ???
2025-02-24T16:33:40.7128926Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7128995Z E   
2025-02-24T16:33:40.7129130Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7129242Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7129319Z E          ...
2025-02-24T16:33:40.7129410Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7129548Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7129672Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7129743Z E          ...
2025-02-24T16:33:40.7129833Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7129961Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7130068Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7130072Z 
2025-02-24T16:33:40.7130162Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7130386Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-wavelength_cm] ____
2025-02-24T16:33:40.7130390Z 
2025-02-24T16:33:40.7130526Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7130651Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7130755Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7130886Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7131152Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7131257Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7131331Z err_msg = None
2025-02-24T16:33:40.7131335Z 
2025-02-24T16:33:40.7131448Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7131529Z         if err_msg is None:
2025-02-24T16:33:40.7131637Z             if left.shape != right.shape:
2025-02-24T16:33:40.7131725Z                 raise_assert_detail(
2025-02-24T16:33:40.7131869Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7131944Z                 )
2025-02-24T16:33:40.7132012Z     
2025-02-24T16:33:40.7132087Z             diff = 0
2025-02-24T16:33:40.7132197Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7132288Z                 # count up differences
2025-02-24T16:33:40.7132474Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7132549Z                     diff += 1
2025-02-24T16:33:40.7132622Z     
2025-02-24T16:33:40.7132709Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7132852Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7133027Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7133309Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7133386Z E           
2025-02-24T16:33:40.7133497Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7133761Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7134206Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7134218Z 
2025-02-24T16:33:40.7134670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7134681Z 
2025-02-24T16:33:40.7134860Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7134864Z 
2025-02-24T16:33:40.7135100Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123bbdd0>
2025-02-24T16:33:40.7135269Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e214c380>
2025-02-24T16:33:40.7135352Z attr = 'wavelength_cm'
2025-02-24T16:33:40.7135356Z 
2025-02-24T16:33:40.7135493Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7135620Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7135703Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7135778Z         try:
2025-02-24T16:33:40.7135924Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7136004Z         except KeyError:
2025-02-24T16:33:40.7136148Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7136220Z     
2025-02-24T16:33:40.7136315Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7136406Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7136502Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7136640Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7136727Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7136823Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7136932Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7136936Z 
2025-02-24T16:33:40.7137169Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7137414Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7137566Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7137641Z     ???
2025-02-24T16:33:40.7137748Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7137756Z 
2025-02-24T16:33:40.7137829Z >   ???
2025-02-24T16:33:40.7137968Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7138044Z E   
2025-02-24T16:33:40.7138183Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7138293Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7138369Z E          ...
2025-02-24T16:33:40.7138458Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7138593Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7138709Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7138783Z E          ...
2025-02-24T16:33:40.7138873Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7138998Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7139113Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7139118Z 
2025-02-24T16:33:40.7139338Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7139548Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-f_lu] _________
2025-02-24T16:33:40.7139552Z 
2025-02-24T16:33:40.7139687Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7139814Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7139913Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7140046Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7140179Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7140277Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7140350Z err_msg = None
2025-02-24T16:33:40.7140354Z 
2025-02-24T16:33:40.7140473Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7140559Z         if err_msg is None:
2025-02-24T16:33:40.7140658Z             if left.shape != right.shape:
2025-02-24T16:33:40.7140741Z                 raise_assert_detail(
2025-02-24T16:33:40.7140890Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7140965Z                 )
2025-02-24T16:33:40.7141031Z     
2025-02-24T16:33:40.7141108Z             diff = 0
2025-02-24T16:33:40.7141218Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7141310Z                 # count up differences
2025-02-24T16:33:40.7141489Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7141572Z                     diff += 1
2025-02-24T16:33:40.7141644Z     
2025-02-24T16:33:40.7141731Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7141874Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7142047Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7142170Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7142244Z E           
2025-02-24T16:33:40.7142354Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7142616Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7143023Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7143034Z 
2025-02-24T16:33:40.7143350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7143358Z 
2025-02-24T16:33:40.7143533Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7143537Z 
2025-02-24T16:33:40.7143768Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123bb080>
2025-02-24T16:33:40.7143985Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e214c380>, attr = 'f_lu'
2025-02-24T16:33:40.7143989Z 
2025-02-24T16:33:40.7144131Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7144249Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7144343Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7144413Z         try:
2025-02-24T16:33:40.7144558Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7144644Z         except KeyError:
2025-02-24T16:33:40.7144783Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7144938Z     
2025-02-24T16:33:40.7145025Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7145124Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7145212Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7145350Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7145440Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7145527Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7145641Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7145644Z 
2025-02-24T16:33:40.7145775Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7145888Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7146035Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7146109Z     ???
2025-02-24T16:33:40.7146221Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7146230Z 
2025-02-24T16:33:40.7146298Z >   ???
2025-02-24T16:33:40.7146433Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7146500Z E   
2025-02-24T16:33:40.7146635Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7146754Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7146824Z E          ...
2025-02-24T16:33:40.7146916Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7147045Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7147168Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7159851Z E          ...
2025-02-24T16:33:40.7160069Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7160323Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7160512Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7160519Z 
2025-02-24T16:33:40.7160628Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7160883Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-tau_sobolevs] _____
2025-02-24T16:33:40.7160888Z 
2025-02-24T16:33:40.7161032Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7161182Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7161288Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7161441Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7161748Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7161866Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7161949Z err_msg = None
2025-02-24T16:33:40.7161954Z 
2025-02-24T16:33:40.7162078Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7162168Z         if err_msg is None:
2025-02-24T16:33:40.7162278Z             if left.shape != right.shape:
2025-02-24T16:33:40.7162364Z                 raise_assert_detail(
2025-02-24T16:33:40.7162526Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7162598Z                 )
2025-02-24T16:33:40.7162671Z     
2025-02-24T16:33:40.7162743Z             diff = 0
2025-02-24T16:33:40.7162870Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7162959Z                 # count up differences
2025-02-24T16:33:40.7163148Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7163232Z                     diff += 1
2025-02-24T16:33:40.7163300Z     
2025-02-24T16:33:40.7163395Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7163534Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7163712Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7163967Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7164039Z E           
2025-02-24T16:33:40.7164154Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7164426Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7164695Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7164700Z 
2025-02-24T16:33:40.7165017Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7165026Z 
2025-02-24T16:33:40.7165206Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7165210Z 
2025-02-24T16:33:40.7165444Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123bbb60>
2025-02-24T16:33:40.7165619Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e214c380>
2025-02-24T16:33:40.7165704Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.7165708Z 
2025-02-24T16:33:40.7165850Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7165976Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7166066Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7166137Z         try:
2025-02-24T16:33:40.7166285Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7166364Z         except KeyError:
2025-02-24T16:33:40.7166511Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7166583Z     
2025-02-24T16:33:40.7166675Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7166772Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7166863Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7167004Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7167090Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7167183Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7167440Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7167517Z             else:
2025-02-24T16:33:40.7167766Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7167880Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7167884Z 
2025-02-24T16:33:40.7168017Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7168134Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7168294Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7168368Z     ???
2025-02-24T16:33:40.7168476Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7168481Z 
2025-02-24T16:33:40.7168560Z >   ???
2025-02-24T16:33:40.7168689Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7168762Z E   
2025-02-24T16:33:40.7168890Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7169006Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7169080Z E          ...
2025-02-24T16:33:40.7169176Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7169309Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7169419Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7169496Z E          ...
2025-02-24T16:33:40.7169579Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7169830Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7169940Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7169944Z 
2025-02-24T16:33:40.7170033Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7170245Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-beta_sobolev] _____
2025-02-24T16:33:40.7170249Z 
2025-02-24T16:33:40.7170380Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7170523Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7170627Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7170759Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7170891Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7170983Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7171068Z err_msg = None
2025-02-24T16:33:40.7171073Z 
2025-02-24T16:33:40.7171191Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7171272Z         if err_msg is None:
2025-02-24T16:33:40.7171373Z             if left.shape != right.shape:
2025-02-24T16:33:40.7171459Z                 raise_assert_detail(
2025-02-24T16:33:40.7171612Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7171681Z                 )
2025-02-24T16:33:40.7171754Z     
2025-02-24T16:33:40.7171831Z             diff = 0
2025-02-24T16:33:40.7171981Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7172146Z                 # count up differences
2025-02-24T16:33:40.7172455Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7172592Z                     diff += 1
2025-02-24T16:33:40.7172661Z     
2025-02-24T16:33:40.7172762Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7172909Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7173078Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7173196Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7173266Z E           
2025-02-24T16:33:40.7173381Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7173743Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7174007Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7174015Z 
2025-02-24T16:33:40.7174336Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7174341Z 
2025-02-24T16:33:40.7174516Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7174520Z 
2025-02-24T16:33:40.7174745Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123b8860>
2025-02-24T16:33:40.7174923Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e214c380>
2025-02-24T16:33:40.7175001Z attr = 'beta_sobolev'
2025-02-24T16:33:40.7175005Z 
2025-02-24T16:33:40.7175150Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7175268Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7175350Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7175502Z         try:
2025-02-24T16:33:40.7175645Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7175729Z         except KeyError:
2025-02-24T16:33:40.7175867Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7175939Z     
2025-02-24T16:33:40.7176030Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7176123Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7176216Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7176348Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7176445Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7176535Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7176649Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7176727Z             else:
2025-02-24T16:33:40.7176821Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7176933Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7176942Z 
2025-02-24T16:33:40.7177068Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7177188Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7177473Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7177544Z     ???
2025-02-24T16:33:40.7177662Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7177666Z 
2025-02-24T16:33:40.7177733Z >   ???
2025-02-24T16:33:40.7177865Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7177937Z E   
2025-02-24T16:33:40.7178073Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7178189Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7178260Z E          ...
2025-02-24T16:33:40.7178363Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7178492Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7178613Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7178684Z E          ...
2025-02-24T16:33:40.7178774Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7178907Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7179013Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7179017Z 
2025-02-24T16:33:40.7179111Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7179317Z _______ TestPlasma.test_plasma_properties[excitation:dilute-lte-j_blues] _______
2025-02-24T16:33:40.7179321Z 
2025-02-24T16:33:40.7179590Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7179733Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7179834Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7179975Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7180102Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7180202Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7180283Z err_msg = None
2025-02-24T16:33:40.7180287Z 
2025-02-24T16:33:40.7180401Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7180487Z         if err_msg is None:
2025-02-24T16:33:40.7180584Z             if left.shape != right.shape:
2025-02-24T16:33:40.7180672Z                 raise_assert_detail(
2025-02-24T16:33:40.7180824Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7180900Z                 )
2025-02-24T16:33:40.7180973Z     
2025-02-24T16:33:40.7181044Z             diff = 0
2025-02-24T16:33:40.7181163Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7181250Z                 # count up differences
2025-02-24T16:33:40.7181551Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7181628Z                     diff += 1
2025-02-24T16:33:40.7181702Z     
2025-02-24T16:33:40.7181796Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7181932Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7182110Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7182222Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7182293Z E           
2025-02-24T16:33:40.7182410Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7182679Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7182946Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7182951Z 
2025-02-24T16:33:40.7183270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7183274Z 
2025-02-24T16:33:40.7183447Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7183452Z 
2025-02-24T16:33:40.7183687Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123bb2f0>
2025-02-24T16:33:40.7183858Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e214c380>
2025-02-24T16:33:40.7183939Z attr = 'j_blues'
2025-02-24T16:33:40.7183943Z 
2025-02-24T16:33:40.7184089Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7184207Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7184297Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7184368Z         try:
2025-02-24T16:33:40.7184512Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7184593Z         except KeyError:
2025-02-24T16:33:40.7184735Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7184807Z     
2025-02-24T16:33:40.7184893Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7185079Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7185176Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7185316Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7185400Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7185493Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7185607Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7185684Z             else:
2025-02-24T16:33:40.7185782Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7185887Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7185891Z 
2025-02-24T16:33:40.7186023Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7186141Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7186289Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7186362Z     ???
2025-02-24T16:33:40.7186475Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7186479Z 
2025-02-24T16:33:40.7186551Z >   ???
2025-02-24T16:33:40.7186677Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7186749Z E   
2025-02-24T16:33:40.7186880Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7186989Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7187154Z E          ...
2025-02-24T16:33:40.7187242Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7187519Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7187630Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7187709Z E          ...
2025-02-24T16:33:40.7187802Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7187930Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7188045Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7188054Z 
2025-02-24T16:33:40.7188148Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7188406Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] _
2025-02-24T16:33:40.7188410Z 
2025-02-24T16:33:40.7188547Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7188677Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7188784Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7188915Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7189041Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7189137Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7189212Z err_msg = None
2025-02-24T16:33:40.7189215Z 
2025-02-24T16:33:40.7189333Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7189414Z         if err_msg is None:
2025-02-24T16:33:40.7189518Z             if left.shape != right.shape:
2025-02-24T16:33:40.7189602Z                 raise_assert_detail(
2025-02-24T16:33:40.7189754Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7189829Z                 )
2025-02-24T16:33:40.7189901Z     
2025-02-24T16:33:40.7189977Z             diff = 0
2025-02-24T16:33:40.7190089Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7190182Z                 # count up differences
2025-02-24T16:33:40.7190354Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7190436Z                     diff += 1
2025-02-24T16:33:40.7190507Z     
2025-02-24T16:33:40.7190595Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7190751Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7191267Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7191449Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7191532Z E           
2025-02-24T16:33:40.7191651Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7191915Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7192184Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7192193Z 
2025-02-24T16:33:40.7192501Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7192506Z 
2025-02-24T16:33:40.7192674Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7192678Z 
2025-02-24T16:33:40.7192908Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123b83e0>
2025-02-24T16:33:40.7193221Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4df629dc0>
2025-02-24T16:33:40.7193298Z attr = 'lines'
2025-02-24T16:33:40.7193302Z 
2025-02-24T16:33:40.7193442Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7193557Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7193643Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7193713Z         try:
2025-02-24T16:33:40.7193854Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7193934Z         except KeyError:
2025-02-24T16:33:40.7194081Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7194153Z     
2025-02-24T16:33:40.7194238Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7194336Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7194423Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7194556Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7194645Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7194738Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7194850Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7194920Z             else:
2025-02-24T16:33:40.7195017Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7195122Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7195127Z 
2025-02-24T16:33:40.7195256Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7195376Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7195519Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7195594Z     ???
2025-02-24T16:33:40.7195701Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7195705Z 
2025-02-24T16:33:40.7195775Z >   ???
2025-02-24T16:33:40.7195905Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7195978Z E   
2025-02-24T16:33:40.7196111Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7196220Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7196293Z E          ...
2025-02-24T16:33:40.7196379Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7196511Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7196621Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7196693Z E          ...
2025-02-24T16:33:40.7196870Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7196996Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7197101Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7197105Z 
2025-02-24T16:33:40.7197193Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7197652Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] _
2025-02-24T16:33:40.7197662Z 
2025-02-24T16:33:40.7197891Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123bb1a0>
2025-02-24T16:33:40.7198066Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4df629dc0>
2025-02-24T16:33:40.7198156Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.7198160Z 
2025-02-24T16:33:40.7198294Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7198410Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7198497Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7198574Z         try:
2025-02-24T16:33:40.7198716Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7198795Z         except KeyError:
2025-02-24T16:33:40.7198932Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7198997Z     
2025-02-24T16:33:40.7199087Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7199295Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7199386Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7199555Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7199638Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7199728Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7199833Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7199837Z 
2025-02-24T16:33:40.7199963Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7200082Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7200086Z 
2025-02-24T16:33:40.7200221Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7200309Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7200417Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7200510Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7200652Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7200732Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7200842Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7200919Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7200998Z err_msg = None
2025-02-24T16:33:40.7201003Z 
2025-02-24T16:33:40.7201112Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7201197Z         if err_msg is None:
2025-02-24T16:33:40.7201298Z             if left.shape != right.shape:
2025-02-24T16:33:40.7201382Z                 raise_assert_detail(
2025-02-24T16:33:40.7201530Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7201601Z                 )
2025-02-24T16:33:40.7201674Z     
2025-02-24T16:33:40.7201748Z             diff = 0
2025-02-24T16:33:40.7201869Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7201963Z                 # count up differences
2025-02-24T16:33:40.7202133Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7202215Z                     diff += 1
2025-02-24T16:33:40.7202283Z     
2025-02-24T16:33:40.7202372Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7202506Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7202682Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7202903Z E           AssertionError: Series are different
2025-02-24T16:33:40.7202977Z E           
2025-02-24T16:33:40.7203081Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.7203455Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7203796Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7204128Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7204206Z 
2025-02-24T16:33:40.7204520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7204814Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] _
2025-02-24T16:33:40.7204818Z 
2025-02-24T16:33:40.7205046Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123ba4e0>
2025-02-24T16:33:40.7205213Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4df629dc0>
2025-02-24T16:33:40.7205309Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.7205313Z 
2025-02-24T16:33:40.7205453Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7205565Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7205652Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7205721Z         try:
2025-02-24T16:33:40.7205863Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7205950Z         except KeyError:
2025-02-24T16:33:40.7206087Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7206160Z     
2025-02-24T16:33:40.7206244Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7206341Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7206429Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7206563Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7206651Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7206739Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7206855Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7206859Z 
2025-02-24T16:33:40.7206984Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7207100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7207104Z 
2025-02-24T16:33:40.7207345Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7207441Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7207552Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7207629Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7207773Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7207853Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7207961Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7208157Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7208233Z err_msg = None
2025-02-24T16:33:40.7208237Z 
2025-02-24T16:33:40.7208350Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7208457Z         if err_msg is None:
2025-02-24T16:33:40.7208632Z             if left.shape != right.shape:
2025-02-24T16:33:40.7208787Z                 raise_assert_detail(
2025-02-24T16:33:40.7209024Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7209103Z                 )
2025-02-24T16:33:40.7209170Z     
2025-02-24T16:33:40.7209245Z             diff = 0
2025-02-24T16:33:40.7209355Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7209447Z                 # count up differences
2025-02-24T16:33:40.7209623Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7209698Z                     diff += 1
2025-02-24T16:33:40.7209772Z     
2025-02-24T16:33:40.7209862Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7210000Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7210168Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7210274Z E           AssertionError: Series are different
2025-02-24T16:33:40.7210353Z E           
2025-02-24T16:33:40.7210602Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.7210978Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7211363Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7211732Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7211741Z 
2025-02-24T16:33:40.7212053Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7212292Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] _
2025-02-24T16:33:40.7212297Z 
2025-02-24T16:33:40.7212424Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7212554Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7212653Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7212791Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7212916Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7213007Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7213087Z err_msg = None
2025-02-24T16:33:40.7213091Z 
2025-02-24T16:33:40.7213198Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7213283Z         if err_msg is None:
2025-02-24T16:33:40.7213383Z             if left.shape != right.shape:
2025-02-24T16:33:40.7213569Z                 raise_assert_detail(
2025-02-24T16:33:40.7213722Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7213792Z                 )
2025-02-24T16:33:40.7213863Z     
2025-02-24T16:33:40.7213934Z             diff = 0
2025-02-24T16:33:40.7214049Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7214145Z                 # count up differences
2025-02-24T16:33:40.7214313Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7214393Z                     diff += 1
2025-02-24T16:33:40.7214460Z     
2025-02-24T16:33:40.7214550Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7214685Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7214858Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7214978Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7215047Z E           
2025-02-24T16:33:40.7215164Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7215422Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7215768Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7215774Z 
2025-02-24T16:33:40.7216075Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7216084Z 
2025-02-24T16:33:40.7216250Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7216255Z 
2025-02-24T16:33:40.7216487Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123bac60>
2025-02-24T16:33:40.7216690Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4df629dc0>, attr = 'nu'
2025-02-24T16:33:40.7216701Z 
2025-02-24T16:33:40.7216837Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7216954Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7217036Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7217109Z         try:
2025-02-24T16:33:40.7217355Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7217438Z         except KeyError:
2025-02-24T16:33:40.7217581Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7217647Z     
2025-02-24T16:33:40.7217736Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7217833Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7217925Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7218060Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7218143Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7218234Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7218346Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7218351Z 
2025-02-24T16:33:40.7218476Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7218592Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7218736Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7218814Z     ???
2025-02-24T16:33:40.7218922Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7218926Z 
2025-02-24T16:33:40.7218998Z >   ???
2025-02-24T16:33:40.7219240Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7219314Z E   
2025-02-24T16:33:40.7219447Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7219557Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7219631Z E          ...
2025-02-24T16:33:40.7219717Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7219854Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7219966Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7220042Z E          ...
2025-02-24T16:33:40.7220131Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7220257Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7220365Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7220370Z 
2025-02-24T16:33:40.7220458Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7220738Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] _
2025-02-24T16:33:40.7220743Z 
2025-02-24T16:33:40.7220877Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7221003Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7221104Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7221346Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7221471Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7221568Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7221646Z err_msg = None
2025-02-24T16:33:40.7221650Z 
2025-02-24T16:33:40.7221763Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7221843Z         if err_msg is None:
2025-02-24T16:33:40.7221946Z             if left.shape != right.shape:
2025-02-24T16:33:40.7222029Z                 raise_assert_detail(
2025-02-24T16:33:40.7222177Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7222252Z                 )
2025-02-24T16:33:40.7222320Z     
2025-02-24T16:33:40.7222394Z             diff = 0
2025-02-24T16:33:40.7222504Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7222600Z                 # count up differences
2025-02-24T16:33:40.7222768Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7222850Z                     diff += 1
2025-02-24T16:33:40.7222922Z     
2025-02-24T16:33:40.7223009Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7223148Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7223317Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7223439Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7223509Z E           
2025-02-24T16:33:40.7223624Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7223887Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7224152Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7224162Z 
2025-02-24T16:33:40.7224461Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7224548Z 
2025-02-24T16:33:40.7224724Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7224728Z 
2025-02-24T16:33:40.7224950Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123bac90>
2025-02-24T16:33:40.7225124Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4df629dc0>
2025-02-24T16:33:40.7225212Z attr = 'wavelength_cm'
2025-02-24T16:33:40.7225216Z 
2025-02-24T16:33:40.7225350Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7225468Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7225550Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7225624Z         try:
2025-02-24T16:33:40.7225761Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7225844Z         except KeyError:
2025-02-24T16:33:40.7225984Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7226051Z     
2025-02-24T16:33:40.7226145Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7226238Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7226331Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7226461Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7226549Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7226641Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7226833Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7226837Z 
2025-02-24T16:33:40.7227030Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7227231Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7227628Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7227712Z     ???
2025-02-24T16:33:40.7227823Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7227828Z 
2025-02-24T16:33:40.7227899Z >   ???
2025-02-24T16:33:40.7228030Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7228102Z E   
2025-02-24T16:33:40.7228228Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7228343Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7228418Z E          ...
2025-02-24T16:33:40.7228504Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7228642Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7228753Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7228827Z E          ...
2025-02-24T16:33:40.7228910Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7229038Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7229147Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7229152Z 
2025-02-24T16:33:40.7229241Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7229488Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] _
2025-02-24T16:33:40.7229493Z 
2025-02-24T16:33:40.7229621Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7229753Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7229855Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7229984Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7230109Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7230201Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7230280Z err_msg = None
2025-02-24T16:33:40.7230284Z 
2025-02-24T16:33:40.7230400Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7230479Z         if err_msg is None:
2025-02-24T16:33:40.7230704Z             if left.shape != right.shape:
2025-02-24T16:33:40.7230793Z                 raise_assert_detail(
2025-02-24T16:33:40.7230940Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7231010Z                 )
2025-02-24T16:33:40.7231086Z     
2025-02-24T16:33:40.7231161Z             diff = 0
2025-02-24T16:33:40.7231271Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7231366Z                 # count up differences
2025-02-24T16:33:40.7231535Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7231616Z                     diff += 1
2025-02-24T16:33:40.7231683Z     
2025-02-24T16:33:40.7231775Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7231914Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7232082Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7232201Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7232271Z E           
2025-02-24T16:33:40.7232386Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7232651Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7233041Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7233046Z 
2025-02-24T16:33:40.7233353Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7233357Z 
2025-02-24T16:33:40.7233528Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7233532Z 
2025-02-24T16:33:40.7233755Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123ba930>
2025-02-24T16:33:40.7233960Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4df629dc0>, attr = 'f_lu'
2025-02-24T16:33:40.7233970Z 
2025-02-24T16:33:40.7234106Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7234224Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7234310Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7234379Z         try:
2025-02-24T16:33:40.7234520Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7234599Z         except KeyError:
2025-02-24T16:33:40.7234739Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7234808Z     
2025-02-24T16:33:40.7234900Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7234996Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7235083Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7235218Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7235302Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7235394Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7235506Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7235515Z 
2025-02-24T16:33:40.7235638Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7235751Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7235897Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7235969Z     ???
2025-02-24T16:33:40.7236074Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7236078Z 
2025-02-24T16:33:40.7236149Z >   ???
2025-02-24T16:33:40.7236359Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7236429Z E   
2025-02-24T16:33:40.7236561Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7236670Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7236744Z E          ...
2025-02-24T16:33:40.7236829Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7236965Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7237081Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7237151Z E          ...
2025-02-24T16:33:40.7237239Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7237487Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7237600Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7237604Z 
2025-02-24T16:33:40.7237694Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7237963Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] _
2025-02-24T16:33:40.7237968Z 
2025-02-24T16:33:40.7238101Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7238228Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7238447Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7238582Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7238706Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7238801Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7238874Z err_msg = None
2025-02-24T16:33:40.7238878Z 
2025-02-24T16:33:40.7238993Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7239072Z         if err_msg is None:
2025-02-24T16:33:40.7239173Z             if left.shape != right.shape:
2025-02-24T16:33:40.7239261Z                 raise_assert_detail(
2025-02-24T16:33:40.7239404Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7239477Z                 )
2025-02-24T16:33:40.7239542Z     
2025-02-24T16:33:40.7239617Z             diff = 0
2025-02-24T16:33:40.7239728Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7239823Z                 # count up differences
2025-02-24T16:33:40.7239997Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7240072Z                     diff += 1
2025-02-24T16:33:40.7240142Z     
2025-02-24T16:33:40.7240229Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7240370Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7240545Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7240661Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7240735Z E           
2025-02-24T16:33:40.7240844Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7241105Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7241373Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7241378Z 
2025-02-24T16:33:40.7241804Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7241810Z 
2025-02-24T16:33:40.7241987Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7241991Z 
2025-02-24T16:33:40.7242223Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123bb7d0>
2025-02-24T16:33:40.7242392Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4df629dc0>
2025-02-24T16:33:40.7242479Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.7242483Z 
2025-02-24T16:33:40.7242622Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7242738Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7242820Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7242895Z         try:
2025-02-24T16:33:40.7243036Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7243114Z         except KeyError:
2025-02-24T16:33:40.7243255Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7243327Z     
2025-02-24T16:33:40.7243418Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7243510Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7243603Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7243735Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7243818Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7243994Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7244101Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7244177Z             else:
2025-02-24T16:33:40.7244270Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7244379Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7244383Z 
2025-02-24T16:33:40.7244511Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7244621Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7244775Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7244843Z     ???
2025-02-24T16:33:40.7244956Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7244960Z 
2025-02-24T16:33:40.7245033Z >   ???
2025-02-24T16:33:40.7245156Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7245227Z E   
2025-02-24T16:33:40.7245356Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7245473Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7245603Z E          ...
2025-02-24T16:33:40.7245767Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7245995Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7246155Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7246230Z E          ...
2025-02-24T16:33:40.7246314Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7246446Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7246554Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7246559Z 
2025-02-24T16:33:40.7246646Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7246919Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] _
2025-02-24T16:33:40.7246923Z 
2025-02-24T16:33:40.7247058Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7247189Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7247386Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7247518Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7247642Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7247854Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7247936Z err_msg = None
2025-02-24T16:33:40.7247940Z 
2025-02-24T16:33:40.7248052Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7248132Z         if err_msg is None:
2025-02-24T16:33:40.7248229Z             if left.shape != right.shape:
2025-02-24T16:33:40.7248312Z                 raise_assert_detail(
2025-02-24T16:33:40.7248465Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7248536Z                 )
2025-02-24T16:33:40.7248610Z     
2025-02-24T16:33:40.7248681Z             diff = 0
2025-02-24T16:33:40.7248793Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7248881Z                 # count up differences
2025-02-24T16:33:40.7249049Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7249128Z                     diff += 1
2025-02-24T16:33:40.7249195Z     
2025-02-24T16:33:40.7249291Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7249431Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7249601Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7249715Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7249786Z E           
2025-02-24T16:33:40.7249896Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7250285Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7250550Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7250554Z 
2025-02-24T16:33:40.7250856Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7250860Z 
2025-02-24T16:33:40.7251030Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7251038Z 
2025-02-24T16:33:40.7251260Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123bb9b0>
2025-02-24T16:33:40.7251432Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4df629dc0>
2025-02-24T16:33:40.7251509Z attr = 'beta_sobolev'
2025-02-24T16:33:40.7251513Z 
2025-02-24T16:33:40.7251653Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7251769Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7251850Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7251924Z         try:
2025-02-24T16:33:40.7252065Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7252152Z         except KeyError:
2025-02-24T16:33:40.7252288Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7252361Z     
2025-02-24T16:33:40.7252445Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7252542Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7252638Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7252767Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7252859Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7252945Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7253059Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7253135Z             else:
2025-02-24T16:33:40.7253228Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7253337Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7253443Z 
2025-02-24T16:33:40.7253569Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7253683Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7253827Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7253901Z     ???
2025-02-24T16:33:40.7254012Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7254021Z 
2025-02-24T16:33:40.7254087Z >   ???
2025-02-24T16:33:40.7254213Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7254279Z E   
2025-02-24T16:33:40.7254408Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7254516Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7254594Z E          ...
2025-02-24T16:33:40.7254687Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7254813Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7254934Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7255005Z E          ...
2025-02-24T16:33:40.7255094Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7255222Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7255329Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7255415Z 
2025-02-24T16:33:40.7255510Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7255761Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] _
2025-02-24T16:33:40.7255765Z 
2025-02-24T16:33:40.7255897Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7256026Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7256119Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7256262Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7256382Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7256477Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7256549Z err_msg = None
2025-02-24T16:33:40.7256558Z 
2025-02-24T16:33:40.7256664Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7256753Z         if err_msg is None:
2025-02-24T16:33:40.7256846Z             if left.shape != right.shape:
2025-02-24T16:33:40.7256934Z                 raise_assert_detail(
2025-02-24T16:33:40.7257078Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7257152Z                 )
2025-02-24T16:33:40.7257223Z     
2025-02-24T16:33:40.7257387Z             diff = 0
2025-02-24T16:33:40.7257502Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7257587Z                 # count up differences
2025-02-24T16:33:40.7257762Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7257839Z                     diff += 1
2025-02-24T16:33:40.7257911Z     
2025-02-24T16:33:40.7258005Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7258140Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7258319Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7258428Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7258502Z E           
2025-02-24T16:33:40.7258610Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7258985Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7259253Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7259261Z 
2025-02-24T16:33:40.7259557Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7259566Z 
2025-02-24T16:33:40.7259731Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7259735Z 
2025-02-24T16:33:40.7259962Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123baff0>
2025-02-24T16:33:40.7260130Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4df629dc0>
2025-02-24T16:33:40.7260210Z attr = 'j_blues'
2025-02-24T16:33:40.7260214Z 
2025-02-24T16:33:40.7260358Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7260471Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7260557Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7260625Z         try:
2025-02-24T16:33:40.7260767Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7260844Z         except KeyError:
2025-02-24T16:33:40.7261093Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7261166Z     
2025-02-24T16:33:40.7261250Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7261347Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7261434Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7261570Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7261652Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7261745Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7261861Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7261932Z             else:
2025-02-24T16:33:40.7262030Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7262137Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7262141Z 
2025-02-24T16:33:40.7262268Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7262381Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7262534Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7262607Z     ???
2025-02-24T16:33:40.7262712Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7262716Z 
2025-02-24T16:33:40.7262787Z >   ???
2025-02-24T16:33:40.7262909Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7262981Z E   
2025-02-24T16:33:40.7263107Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7263226Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7263304Z E          ...
2025-02-24T16:33:40.7263389Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7263519Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7263629Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7263705Z E          ...
2025-02-24T16:33:40.7263796Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7263920Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7264025Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7264030Z 
2025-02-24T16:33:40.7264116Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7264436Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines] ____
2025-02-24T16:33:40.7264444Z 
2025-02-24T16:33:40.7264675Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7264962Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7265072Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7265208Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7265332Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7265433Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7265509Z err_msg = None
2025-02-24T16:33:40.7265513Z 
2025-02-24T16:33:40.7265624Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7265704Z         if err_msg is None:
2025-02-24T16:33:40.7265800Z             if left.shape != right.shape:
2025-02-24T16:33:40.7265883Z                 raise_assert_detail(
2025-02-24T16:33:40.7266027Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7266101Z                 )
2025-02-24T16:33:40.7266172Z     
2025-02-24T16:33:40.7266247Z             diff = 0
2025-02-24T16:33:40.7266356Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7266448Z                 # count up differences
2025-02-24T16:33:40.7266621Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7266703Z                     diff += 1
2025-02-24T16:33:40.7266859Z     
2025-02-24T16:33:40.7266946Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7267086Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7267374Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7267495Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7267565Z E           
2025-02-24T16:33:40.7267679Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7267943Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7268198Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7268208Z 
2025-02-24T16:33:40.7268519Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7268524Z 
2025-02-24T16:33:40.7268698Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7268702Z 
2025-02-24T16:33:40.7268929Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512260620>
2025-02-24T16:33:40.7269100Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de92c350>
2025-02-24T16:33:40.7269172Z attr = 'lines'
2025-02-24T16:33:40.7269180Z 
2025-02-24T16:33:40.7269316Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7269436Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7269523Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7269599Z         try:
2025-02-24T16:33:40.7269740Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7269826Z         except KeyError:
2025-02-24T16:33:40.7269969Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7270040Z     
2025-02-24T16:33:40.7270130Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7270222Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7270315Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7270563Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7270657Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7270749Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7270857Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7270931Z             else:
2025-02-24T16:33:40.7271024Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7271140Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7271144Z 
2025-02-24T16:33:40.7271267Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7271382Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7271531Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7271600Z     ???
2025-02-24T16:33:40.7271710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7271715Z 
2025-02-24T16:33:40.7271780Z >   ???
2025-02-24T16:33:40.7271917Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7271988Z E   
2025-02-24T16:33:40.7272113Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7272227Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7272296Z E          ...
2025-02-24T16:33:40.7272386Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7272628Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7272744Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7272821Z E          ...
2025-02-24T16:33:40.7272903Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7273032Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7273134Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7273138Z 
2025-02-24T16:33:40.7273230Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7273489Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] _
2025-02-24T16:33:40.7273498Z 
2025-02-24T16:33:40.7273721Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5122606e0>
2025-02-24T16:33:40.7273892Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de92c350>
2025-02-24T16:33:40.7273980Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.7273984Z 
2025-02-24T16:33:40.7274129Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7274239Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7274326Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7274402Z         try:
2025-02-24T16:33:40.7274540Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7274624Z         except KeyError:
2025-02-24T16:33:40.7274758Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7274830Z     
2025-02-24T16:33:40.7274915Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7275015Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7275108Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7275237Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7275326Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7275415Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7275525Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7275534Z 
2025-02-24T16:33:40.7275662Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7275769Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7275773Z 
2025-02-24T16:33:40.7275915Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7276000Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7276114Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7276299Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7276441Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7276526Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7276629Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7276714Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7276791Z err_msg = None
2025-02-24T16:33:40.7276795Z 
2025-02-24T16:33:40.7276906Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7276990Z         if err_msg is None:
2025-02-24T16:33:40.7277082Z             if left.shape != right.shape:
2025-02-24T16:33:40.7277169Z                 raise_assert_detail(
2025-02-24T16:33:40.7277433Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7277510Z                 )
2025-02-24T16:33:40.7277576Z     
2025-02-24T16:33:40.7277652Z             diff = 0
2025-02-24T16:33:40.7277770Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7277860Z                 # count up differences
2025-02-24T16:33:40.7278035Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7278110Z                     diff += 1
2025-02-24T16:33:40.7278181Z     
2025-02-24T16:33:40.7278266Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7278532Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7278707Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7278810Z E           AssertionError: Series are different
2025-02-24T16:33:40.7278884Z E           
2025-02-24T16:33:40.7278983Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.7279359Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7279694Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7280027Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7280041Z 
2025-02-24T16:33:40.7280343Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7280599Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] _
2025-02-24T16:33:40.7280604Z 
2025-02-24T16:33:40.7280826Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512260c20>
2025-02-24T16:33:40.7281002Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de92c350>
2025-02-24T16:33:40.7281099Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.7281103Z 
2025-02-24T16:33:40.7281240Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7281357Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7281439Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7281515Z         try:
2025-02-24T16:33:40.7281698Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7282056Z         except KeyError:
2025-02-24T16:33:40.7282286Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7282357Z     
2025-02-24T16:33:40.7282449Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7282541Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7282634Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7282771Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7282860Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7282953Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7283060Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7283064Z 
2025-02-24T16:33:40.7283192Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7283303Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7283313Z 
2025-02-24T16:33:40.7283453Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7283540Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7283648Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7283731Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7283870Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7284046Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7284155Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7284232Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7284311Z err_msg = None
2025-02-24T16:33:40.7284315Z 
2025-02-24T16:33:40.7284422Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7284506Z         if err_msg is None:
2025-02-24T16:33:40.7284598Z             if left.shape != right.shape:
2025-02-24T16:33:40.7284687Z                 raise_assert_detail(
2025-02-24T16:33:40.7284837Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7284907Z                 )
2025-02-24T16:33:40.7284979Z     
2025-02-24T16:33:40.7285051Z             diff = 0
2025-02-24T16:33:40.7285168Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7285256Z                 # count up differences
2025-02-24T16:33:40.7285434Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7285521Z                     diff += 1
2025-02-24T16:33:40.7285588Z     
2025-02-24T16:33:40.7285677Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7285811Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7285983Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7286091Z E           AssertionError: Series are different
2025-02-24T16:33:40.7286160Z E           
2025-02-24T16:33:40.7286268Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.7286639Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7287027Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7287625Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7287631Z 
2025-02-24T16:33:40.7287950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7288149Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-nu] ______
2025-02-24T16:33:40.7288153Z 
2025-02-24T16:33:40.7288283Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7288407Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7288507Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7288644Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7288764Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7288855Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7288929Z err_msg = None
2025-02-24T16:33:40.7288933Z 
2025-02-24T16:33:40.7289152Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7289236Z         if err_msg is None:
2025-02-24T16:33:40.7289328Z             if left.shape != right.shape:
2025-02-24T16:33:40.7289415Z                 raise_assert_detail(
2025-02-24T16:33:40.7289554Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7289628Z                 )
2025-02-24T16:33:40.7289694Z     
2025-02-24T16:33:40.7289768Z             diff = 0
2025-02-24T16:33:40.7289877Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7289973Z                 # count up differences
2025-02-24T16:33:40.7290144Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7290218Z                     diff += 1
2025-02-24T16:33:40.7290289Z     
2025-02-24T16:33:40.7290374Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7290511Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7290686Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7290796Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7290873Z E           
2025-02-24T16:33:40.7290982Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7291249Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7291512Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7291521Z 
2025-02-24T16:33:40.7291816Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7291820Z 
2025-02-24T16:33:40.7291994Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7291998Z 
2025-02-24T16:33:40.7292226Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512262240>
2025-02-24T16:33:40.7292427Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de92c350>, attr = 'nu'
2025-02-24T16:33:40.7292431Z 
2025-02-24T16:33:40.7292653Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7292769Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7292857Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7292931Z         try:
2025-02-24T16:33:40.7293070Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7293154Z         except KeyError:
2025-02-24T16:33:40.7293292Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7293364Z     
2025-02-24T16:33:40.7293449Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7293546Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7293638Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7293768Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7293856Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7293944Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7294060Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7294064Z 
2025-02-24T16:33:40.7294188Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7294303Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7294454Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7294523Z     ???
2025-02-24T16:33:40.7294636Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7294740Z 
2025-02-24T16:33:40.7294809Z >   ???
2025-02-24T16:33:40.7294941Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7295013Z E   
2025-02-24T16:33:40.7295138Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7295252Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7295323Z E          ...
2025-02-24T16:33:40.7295413Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7295547Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7295664Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7295737Z E          ...
2025-02-24T16:33:40.7295820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7295947Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7296053Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7296062Z 
2025-02-24T16:33:40.7296158Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7296379Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] _
2025-02-24T16:33:40.7296389Z 
2025-02-24T16:33:40.7296518Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7296648Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7296744Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7296881Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7297005Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7297101Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7297179Z err_msg = None
2025-02-24T16:33:40.7297183Z 
2025-02-24T16:33:40.7297391Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7297482Z         if err_msg is None:
2025-02-24T16:33:40.7297576Z             if left.shape != right.shape:
2025-02-24T16:33:40.7297663Z                 raise_assert_detail(
2025-02-24T16:33:40.7297809Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7297880Z                 )
2025-02-24T16:33:40.7297951Z     
2025-02-24T16:33:40.7298022Z             diff = 0
2025-02-24T16:33:40.7298136Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7298223Z                 # count up differences
2025-02-24T16:33:40.7298532Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7298617Z                     diff += 1
2025-02-24T16:33:40.7298684Z     
2025-02-24T16:33:40.7298775Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7298911Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7299088Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7299200Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7299275Z E           
2025-02-24T16:33:40.7299389Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7299682Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7299948Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7300059Z 
2025-02-24T16:33:40.7300554Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7300567Z 
2025-02-24T16:33:40.7300833Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7300838Z 
2025-02-24T16:33:40.7301069Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512262330>
2025-02-24T16:33:40.7301239Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de92c350>
2025-02-24T16:33:40.7301324Z attr = 'wavelength_cm'
2025-02-24T16:33:40.7301329Z 
2025-02-24T16:33:40.7301479Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7301592Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7301678Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7301748Z         try:
2025-02-24T16:33:40.7301891Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7301975Z         except KeyError:
2025-02-24T16:33:40.7302116Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7302189Z     
2025-02-24T16:33:40.7302273Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7302369Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7302458Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7302593Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7302681Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7302769Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7302885Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7302889Z 
2025-02-24T16:33:40.7303013Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7303130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7303273Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7303347Z     ???
2025-02-24T16:33:40.7303464Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7303468Z 
2025-02-24T16:33:40.7303535Z >   ???
2025-02-24T16:33:40.7303664Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7303730Z E   
2025-02-24T16:33:40.7303861Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7303976Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7304047Z E          ...
2025-02-24T16:33:40.7304138Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7304375Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7304498Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7304568Z E          ...
2025-02-24T16:33:40.7304658Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7304785Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7304892Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7304896Z 
2025-02-24T16:33:40.7304988Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7305188Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-f_lu] _____
2025-02-24T16:33:40.7305191Z 
2025-02-24T16:33:40.7305323Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7305454Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7305550Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7305689Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7305813Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7305909Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7305982Z err_msg = None
2025-02-24T16:33:40.7305991Z 
2025-02-24T16:33:40.7306182Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7306267Z         if err_msg is None:
2025-02-24T16:33:40.7306361Z             if left.shape != right.shape:
2025-02-24T16:33:40.7306451Z                 raise_assert_detail(
2025-02-24T16:33:40.7306592Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7306667Z                 )
2025-02-24T16:33:40.7306737Z     
2025-02-24T16:33:40.7306808Z             diff = 0
2025-02-24T16:33:40.7306922Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7307011Z                 # count up differences
2025-02-24T16:33:40.7307183Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7307358Z                     diff += 1
2025-02-24T16:33:40.7307435Z     
2025-02-24T16:33:40.7307526Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7307659Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7307843Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7307953Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7308028Z E           
2025-02-24T16:33:40.7308138Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7308403Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7308669Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7308678Z 
2025-02-24T16:33:40.7308978Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7308987Z 
2025-02-24T16:33:40.7309154Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7309158Z 
2025-02-24T16:33:40.7309385Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5122623f0>
2025-02-24T16:33:40.7309587Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de92c350>, attr = 'f_lu'
2025-02-24T16:33:40.7309591Z 
2025-02-24T16:33:40.7309847Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7309968Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7310051Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7310124Z         try:
2025-02-24T16:33:40.7310261Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7310344Z         except KeyError:
2025-02-24T16:33:40.7310484Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7310558Z     
2025-02-24T16:33:40.7310648Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7310740Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7310832Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7310963Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7311052Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7311139Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7311255Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7311259Z 
2025-02-24T16:33:40.7311386Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7311495Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7311644Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7311712Z     ???
2025-02-24T16:33:40.7311937Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7311941Z 
2025-02-24T16:33:40.7312012Z >   ???
2025-02-24T16:33:40.7312135Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7312206Z E   
2025-02-24T16:33:40.7312332Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7312443Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7312512Z E          ...
2025-02-24T16:33:40.7312606Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7312743Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7312853Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7312927Z E          ...
2025-02-24T16:33:40.7313010Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7313137Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7313460Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7313476Z 
2025-02-24T16:33:40.7313562Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7313785Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] _
2025-02-24T16:33:40.7313789Z 
2025-02-24T16:33:40.7313914Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7314053Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7314148Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7314289Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7314418Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7314510Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7314590Z err_msg = None
2025-02-24T16:33:40.7314594Z 
2025-02-24T16:33:40.7314707Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7314796Z         if err_msg is None:
2025-02-24T16:33:40.7314897Z             if left.shape != right.shape:
2025-02-24T16:33:40.7314984Z                 raise_assert_detail(
2025-02-24T16:33:40.7315132Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7315204Z                 )
2025-02-24T16:33:40.7315278Z     
2025-02-24T16:33:40.7315350Z             diff = 0
2025-02-24T16:33:40.7315464Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7315640Z                 # count up differences
2025-02-24T16:33:40.7315813Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7315894Z                     diff += 1
2025-02-24T16:33:40.7315961Z     
2025-02-24T16:33:40.7316053Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7316192Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7316369Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7316484Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7316553Z E           
2025-02-24T16:33:40.7316666Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7316925Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7317192Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7317442Z 
2025-02-24T16:33:40.7317763Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7317768Z 
2025-02-24T16:33:40.7317937Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7317946Z 
2025-02-24T16:33:40.7318167Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512262bd0>
2025-02-24T16:33:40.7318343Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de92c350>
2025-02-24T16:33:40.7318421Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.7318425Z 
2025-02-24T16:33:40.7318659Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7318855Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7319000Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7319124Z         try:
2025-02-24T16:33:40.7319356Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7319453Z         except KeyError:
2025-02-24T16:33:40.7319594Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7319669Z     
2025-02-24T16:33:40.7319756Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7319853Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7319947Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7320078Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7320168Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7320256Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7320376Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7320449Z             else:
2025-02-24T16:33:40.7320549Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7320660Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7320665Z 
2025-02-24T16:33:40.7320790Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7320911Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7321055Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7321130Z     ???
2025-02-24T16:33:40.7321246Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7321250Z 
2025-02-24T16:33:40.7321319Z >   ???
2025-02-24T16:33:40.7321449Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7321518Z E   
2025-02-24T16:33:40.7321649Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7321886Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7321968Z E          ...
2025-02-24T16:33:40.7322061Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7322188Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7322307Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7322380Z E          ...
2025-02-24T16:33:40.7322474Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7322597Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7322707Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7322710Z 
2025-02-24T16:33:40.7333406Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7333684Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] _
2025-02-24T16:33:40.7333691Z 
2025-02-24T16:33:40.7333830Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7333978Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7334083Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7334223Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7334348Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7334624Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7334703Z err_msg = None
2025-02-24T16:33:40.7334708Z 
2025-02-24T16:33:40.7334834Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7334924Z         if err_msg is None:
2025-02-24T16:33:40.7335023Z             if left.shape != right.shape:
2025-02-24T16:33:40.7335112Z                 raise_assert_detail(
2025-02-24T16:33:40.7335269Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7335351Z                 )
2025-02-24T16:33:40.7335419Z     
2025-02-24T16:33:40.7335497Z             diff = 0
2025-02-24T16:33:40.7335621Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7335711Z                 # count up differences
2025-02-24T16:33:40.7335896Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7335980Z                     diff += 1
2025-02-24T16:33:40.7336052Z     
2025-02-24T16:33:40.7336143Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7336295Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7336474Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7336592Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7336673Z E           
2025-02-24T16:33:40.7336790Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7337067Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7337466Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7337477Z 
2025-02-24T16:33:40.7337803Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7337808Z 
2025-02-24T16:33:40.7337989Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7337993Z 
2025-02-24T16:33:40.7338347Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512262c90>
2025-02-24T16:33:40.7338523Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de92c350>
2025-02-24T16:33:40.7338616Z attr = 'beta_sobolev'
2025-02-24T16:33:40.7338620Z 
2025-02-24T16:33:40.7338761Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7338886Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7338982Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7339054Z         try:
2025-02-24T16:33:40.7339203Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7339283Z         except KeyError:
2025-02-24T16:33:40.7339422Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7339493Z     
2025-02-24T16:33:40.7339588Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7339687Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7339778Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7339921Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7340008Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7340104Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7340221Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7340298Z             else:
2025-02-24T16:33:40.7340400Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7340627Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7340632Z 
2025-02-24T16:33:40.7340766Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7340885Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7341037Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7341111Z     ???
2025-02-24T16:33:40.7341226Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7341231Z 
2025-02-24T16:33:40.7341303Z >   ???
2025-02-24T16:33:40.7341437Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7341510Z E   
2025-02-24T16:33:40.7341643Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7341765Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7341840Z E          ...
2025-02-24T16:33:40.7341932Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7342074Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7342187Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7342265Z E          ...
2025-02-24T16:33:40.7342349Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7342476Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7342588Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7342593Z 
2025-02-24T16:33:40.7342682Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7342905Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-j_blues] ___
2025-02-24T16:33:40.7342910Z 
2025-02-24T16:33:40.7343040Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7343182Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7343287Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7343425Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7343645Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7343817Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7343955Z err_msg = None
2025-02-24T16:33:40.7343962Z 
2025-02-24T16:33:40.7344165Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7344265Z         if err_msg is None:
2025-02-24T16:33:40.7344462Z             if left.shape != right.shape:
2025-02-24T16:33:40.7344550Z                 raise_assert_detail(
2025-02-24T16:33:40.7344705Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7344774Z                 )
2025-02-24T16:33:40.7344846Z     
2025-02-24T16:33:40.7344921Z             diff = 0
2025-02-24T16:33:40.7345032Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7345130Z                 # count up differences
2025-02-24T16:33:40.7345300Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7345383Z                     diff += 1
2025-02-24T16:33:40.7345451Z     
2025-02-24T16:33:40.7345544Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7345686Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7345858Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7345985Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7346056Z E           
2025-02-24T16:33:40.7346171Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7346441Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7346787Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7346792Z 
2025-02-24T16:33:40.7347111Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7347115Z 
2025-02-24T16:33:40.7347436Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7347444Z 
2025-02-24T16:33:40.7347674Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512262e10>
2025-02-24T16:33:40.7347845Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de92c350>
2025-02-24T16:33:40.7347927Z attr = 'j_blues'
2025-02-24T16:33:40.7347931Z 
2025-02-24T16:33:40.7348075Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7348196Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7348280Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7348355Z         try:
2025-02-24T16:33:40.7348499Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7348585Z         except KeyError:
2025-02-24T16:33:40.7348729Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7348801Z     
2025-02-24T16:33:40.7348899Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7348993Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7349086Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7349217Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7349306Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7349398Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7349510Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7349585Z             else:
2025-02-24T16:33:40.7349681Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7349792Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7349795Z 
2025-02-24T16:33:40.7349921Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7350044Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7350337Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7350410Z     ???
2025-02-24T16:33:40.7350525Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7350529Z 
2025-02-24T16:33:40.7350599Z >   ???
2025-02-24T16:33:40.7350730Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7350798Z E   
2025-02-24T16:33:40.7350929Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7351049Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7351120Z E          ...
2025-02-24T16:33:40.7351211Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7351343Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7351459Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7351529Z E          ...
2025-02-24T16:33:40.7351621Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7351756Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7351861Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7351866Z 
2025-02-24T16:33:40.7351959Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7352174Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines] ____
2025-02-24T16:33:40.7352178Z 
2025-02-24T16:33:40.7352317Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7352566Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7352664Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7352798Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7352920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7353016Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7353099Z err_msg = None
2025-02-24T16:33:40.7353103Z 
2025-02-24T16:33:40.7353213Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7353300Z         if err_msg is None:
2025-02-24T16:33:40.7353395Z             if left.shape != right.shape:
2025-02-24T16:33:40.7353485Z                 raise_assert_detail(
2025-02-24T16:33:40.7353631Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7353711Z                 )
2025-02-24T16:33:40.7353785Z     
2025-02-24T16:33:40.7353856Z             diff = 0
2025-02-24T16:33:40.7353971Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7354058Z                 # count up differences
2025-02-24T16:33:40.7354232Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7354310Z                     diff += 1
2025-02-24T16:33:40.7354382Z     
2025-02-24T16:33:40.7354474Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7354614Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7354788Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7354901Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7354977Z E           
2025-02-24T16:33:40.7355088Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7355358Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7355704Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7355710Z 
2025-02-24T16:33:40.7356024Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7356028Z 
2025-02-24T16:33:40.7356197Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7356205Z 
2025-02-24T16:33:40.7356435Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512263c20>
2025-02-24T16:33:40.7356603Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4fb4c95e0>
2025-02-24T16:33:40.7356681Z attr = 'lines'
2025-02-24T16:33:40.7356685Z 
2025-02-24T16:33:40.7356825Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7356940Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7357030Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7357100Z         try:
2025-02-24T16:33:40.7357359Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7357443Z         except KeyError:
2025-02-24T16:33:40.7357583Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7357656Z     
2025-02-24T16:33:40.7357743Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7357840Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7358045Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7358179Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7358265Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7358357Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7358469Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7358540Z             else:
2025-02-24T16:33:40.7358638Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7358743Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7358752Z 
2025-02-24T16:33:40.7358887Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7359005Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7359153Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7359228Z     ???
2025-02-24T16:33:40.7359334Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7359343Z 
2025-02-24T16:33:40.7359416Z >   ???
2025-02-24T16:33:40.7359543Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7359617Z E   
2025-02-24T16:33:40.7359745Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7359854Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7359930Z E          ...
2025-02-24T16:33:40.7360016Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7360149Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7360264Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7360340Z E          ...
2025-02-24T16:33:40.7360433Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7360562Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7360673Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7360677Z 
2025-02-24T16:33:40.7360766Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7361035Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] _
2025-02-24T16:33:40.7361040Z 
2025-02-24T16:33:40.7361268Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512263ce0>
2025-02-24T16:33:40.7361433Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4fb4c95e0>
2025-02-24T16:33:40.7361527Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.7361531Z 
2025-02-24T16:33:40.7361680Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7362059Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7362227Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7362317Z         try:
2025-02-24T16:33:40.7362468Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7362549Z         except KeyError:
2025-02-24T16:33:40.7362693Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7362764Z     
2025-02-24T16:33:40.7362855Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7362952Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7363041Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7363177Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7363262Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7363355Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7363467Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7363471Z 
2025-02-24T16:33:40.7363607Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7363726Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7363730Z 
2025-02-24T16:33:40.7363868Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7363957Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7364067Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7364241Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7364385Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7364467Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7364576Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7364654Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7364733Z err_msg = None
2025-02-24T16:33:40.7364737Z 
2025-02-24T16:33:40.7364855Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7364936Z         if err_msg is None:
2025-02-24T16:33:40.7365035Z             if left.shape != right.shape:
2025-02-24T16:33:40.7365118Z                 raise_assert_detail(
2025-02-24T16:33:40.7365269Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7365339Z                 )
2025-02-24T16:33:40.7365411Z     
2025-02-24T16:33:40.7365481Z             diff = 0
2025-02-24T16:33:40.7365601Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7365699Z                 # count up differences
2025-02-24T16:33:40.7365877Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7365953Z                     diff += 1
2025-02-24T16:33:40.7366024Z     
2025-02-24T16:33:40.7366111Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7366251Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7366431Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7366534Z E           AssertionError: Series are different
2025-02-24T16:33:40.7366608Z E           
2025-02-24T16:33:40.7366709Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.7367086Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7367655Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7367990Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7368006Z 
2025-02-24T16:33:40.7368318Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7368576Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] _
2025-02-24T16:33:40.7368581Z 
2025-02-24T16:33:40.7368804Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512263da0>
2025-02-24T16:33:40.7368980Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4fb4c95e0>
2025-02-24T16:33:40.7369072Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.7369081Z 
2025-02-24T16:33:40.7369217Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7369333Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7369416Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7369489Z         try:
2025-02-24T16:33:40.7369740Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7369824Z         except KeyError:
2025-02-24T16:33:40.7369965Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7370031Z     
2025-02-24T16:33:40.7370121Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7370216Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7370305Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7370433Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7370521Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7370618Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7370726Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7370730Z 
2025-02-24T16:33:40.7370858Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7370971Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7370980Z 
2025-02-24T16:33:40.7371115Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7371200Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7371304Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7371387Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7371526Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7371611Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7371719Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7371800Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7371878Z err_msg = None
2025-02-24T16:33:40.7371882Z 
2025-02-24T16:33:40.7371987Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7372069Z         if err_msg is None:
2025-02-24T16:33:40.7372161Z             if left.shape != right.shape:
2025-02-24T16:33:40.7372257Z                 raise_assert_detail(
2025-02-24T16:33:40.7372402Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7372472Z                 )
2025-02-24T16:33:40.7372542Z     
2025-02-24T16:33:40.7372614Z             diff = 0
2025-02-24T16:33:40.7372729Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7372816Z                 # count up differences
2025-02-24T16:33:40.7372989Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7373067Z                     diff += 1
2025-02-24T16:33:40.7373259Z     
2025-02-24T16:33:40.7373353Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7373487Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7373658Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7373759Z E           AssertionError: Series are different
2025-02-24T16:33:40.7373837Z E           
2025-02-24T16:33:40.7373943Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.7374313Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7374694Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7375148Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7375153Z 
2025-02-24T16:33:40.7375457Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7375665Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-nu] _____
2025-02-24T16:33:40.7375670Z 
2025-02-24T16:33:40.7375802Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7375929Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7376036Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7376171Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7376298Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7376395Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7376470Z err_msg = None
2025-02-24T16:33:40.7376473Z 
2025-02-24T16:33:40.7376585Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7376664Z         if err_msg is None:
2025-02-24T16:33:40.7376767Z             if left.shape != right.shape:
2025-02-24T16:33:40.7376857Z                 raise_assert_detail(
2025-02-24T16:33:40.7376999Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7377077Z                 )
2025-02-24T16:33:40.7377145Z     
2025-02-24T16:33:40.7377222Z             diff = 0
2025-02-24T16:33:40.7377436Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7377532Z                 # count up differences
2025-02-24T16:33:40.7377708Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7377784Z                     diff += 1
2025-02-24T16:33:40.7377859Z     
2025-02-24T16:33:40.7377946Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7378086Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7378255Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7378501Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7378583Z E           
2025-02-24T16:33:40.7378695Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7378960Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7379232Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7379237Z 
2025-02-24T16:33:40.7379545Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7379550Z 
2025-02-24T16:33:40.7379730Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7379735Z 
2025-02-24T16:33:40.7379959Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512263fe0>
2025-02-24T16:33:40.7380196Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4fb4c95e0>, attr = 'nu'
2025-02-24T16:33:40.7380370Z 
2025-02-24T16:33:40.7380637Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7380817Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7380909Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7380982Z         try:
2025-02-24T16:33:40.7381134Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7381220Z         except KeyError:
2025-02-24T16:33:40.7381363Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7381435Z     
2025-02-24T16:33:40.7381525Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7381624Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7381713Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7381855Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7381946Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7382039Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7382155Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7382159Z 
2025-02-24T16:33:40.7382287Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7382407Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7382561Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7382630Z     ???
2025-02-24T16:33:40.7382743Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7382747Z 
2025-02-24T16:33:40.7382822Z >   ???
2025-02-24T16:33:40.7382954Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7383022Z E   
2025-02-24T16:33:40.7383158Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7383276Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7383349Z E          ...
2025-02-24T16:33:40.7383442Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7383578Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7383699Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7383770Z E          ...
2025-02-24T16:33:40.7383861Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7383996Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7384102Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7384106Z 
2025-02-24T16:33:40.7384200Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7384514Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] _
2025-02-24T16:33:40.7384519Z 
2025-02-24T16:33:40.7384656Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7384788Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7384888Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7385023Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7385145Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7385242Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7385321Z err_msg = None
2025-02-24T16:33:40.7385325Z 
2025-02-24T16:33:40.7385436Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7385523Z         if err_msg is None:
2025-02-24T16:33:40.7385623Z             if left.shape != right.shape:
2025-02-24T16:33:40.7385714Z                 raise_assert_detail(
2025-02-24T16:33:40.7385857Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7385934Z                 )
2025-02-24T16:33:40.7386008Z     
2025-02-24T16:33:40.7386080Z             diff = 0
2025-02-24T16:33:40.7386196Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7386366Z                 # count up differences
2025-02-24T16:33:40.7386540Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7386617Z                     diff += 1
2025-02-24T16:33:40.7386690Z     
2025-02-24T16:33:40.7386783Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7386920Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7387092Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7387210Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7387392Z E           
2025-02-24T16:33:40.7387506Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7387773Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7388048Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7388053Z 
2025-02-24T16:33:40.7388368Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7388372Z 
2025-02-24T16:33:40.7388541Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7388545Z 
2025-02-24T16:33:40.7388780Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123ee390>
2025-02-24T16:33:40.7388948Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4fb4c95e0>
2025-02-24T16:33:40.7389041Z attr = 'wavelength_cm'
2025-02-24T16:33:40.7389045Z 
2025-02-24T16:33:40.7389188Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7389303Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7389394Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7389465Z         try:
2025-02-24T16:33:40.7389611Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7389692Z         except KeyError:
2025-02-24T16:33:40.7389837Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7390027Z     
2025-02-24T16:33:40.7390118Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7390218Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7390307Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7390446Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7390530Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7390629Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7390746Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7390750Z 
2025-02-24T16:33:40.7390877Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7390992Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7391137Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7391213Z     ???
2025-02-24T16:33:40.7391327Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7391335Z 
2025-02-24T16:33:40.7391402Z >   ???
2025-02-24T16:33:40.7391534Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7391603Z E   
2025-02-24T16:33:40.7391735Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7391846Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7391921Z E          ...
2025-02-24T16:33:40.7392141Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7392273Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7392393Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7392463Z E          ...
2025-02-24T16:33:40.7392552Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7392676Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7392788Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7392792Z 
2025-02-24T16:33:40.7392892Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7393099Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-f_lu] ____
2025-02-24T16:33:40.7393103Z 
2025-02-24T16:33:40.7393235Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7393364Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7393472Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7393612Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7393734Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7393830Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7393905Z err_msg = None
2025-02-24T16:33:40.7393909Z 
2025-02-24T16:33:40.7394026Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7394111Z         if err_msg is None:
2025-02-24T16:33:40.7394209Z             if left.shape != right.shape:
2025-02-24T16:33:40.7394298Z                 raise_assert_detail(
2025-02-24T16:33:40.7394440Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7394516Z                 )
2025-02-24T16:33:40.7394584Z     
2025-02-24T16:33:40.7394661Z             diff = 0
2025-02-24T16:33:40.7394781Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7394870Z                 # count up differences
2025-02-24T16:33:40.7395044Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7395122Z                     diff += 1
2025-02-24T16:33:40.7395196Z     
2025-02-24T16:33:40.7395284Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7395429Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7395602Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7395801Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7395881Z E           
2025-02-24T16:33:40.7395990Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7396257Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7396524Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7396529Z 
2025-02-24T16:33:40.7396836Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7396841Z 
2025-02-24T16:33:40.7397017Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7397021Z 
2025-02-24T16:33:40.7397359Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123efda0>
2025-02-24T16:33:40.7397566Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4fb4c95e0>, attr = 'f_lu'
2025-02-24T16:33:40.7397715Z 
2025-02-24T16:33:40.7397858Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7397973Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7398062Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7398139Z         try:
2025-02-24T16:33:40.7398278Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7398366Z         except KeyError:
2025-02-24T16:33:40.7398502Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7398581Z     
2025-02-24T16:33:40.7398710Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7398886Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7399049Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7399265Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7399360Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7399458Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7399603Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7399607Z 
2025-02-24T16:33:40.7399738Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7399848Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7399997Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7400070Z     ???
2025-02-24T16:33:40.7400185Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7400189Z 
2025-02-24T16:33:40.7400259Z >   ???
2025-02-24T16:33:40.7400396Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7400470Z E   
2025-02-24T16:33:40.7400596Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7400712Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7400781Z E          ...
2025-02-24T16:33:40.7400875Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7401001Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7401119Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7401195Z E          ...
2025-02-24T16:33:40.7401277Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7401405Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7401509Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7401512Z 
2025-02-24T16:33:40.7401607Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7401961Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] _
2025-02-24T16:33:40.7401966Z 
2025-02-24T16:33:40.7402098Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7402226Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7402327Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7402464Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7402590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7402682Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7402760Z err_msg = None
2025-02-24T16:33:40.7402764Z 
2025-02-24T16:33:40.7402873Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7402959Z         if err_msg is None:
2025-02-24T16:33:40.7403056Z             if left.shape != right.shape:
2025-02-24T16:33:40.7403144Z                 raise_assert_detail(
2025-02-24T16:33:40.7403292Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7403362Z                 )
2025-02-24T16:33:40.7403434Z     
2025-02-24T16:33:40.7403506Z             diff = 0
2025-02-24T16:33:40.7403702Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7403790Z                 # count up differences
2025-02-24T16:33:40.7403962Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7404043Z                     diff += 1
2025-02-24T16:33:40.7404111Z     
2025-02-24T16:33:40.7404203Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7404340Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7404514Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7404628Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7404704Z E           
2025-02-24T16:33:40.7404817Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7405076Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7405344Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7405349Z 
2025-02-24T16:33:40.7405658Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7405662Z 
2025-02-24T16:33:40.7405829Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7405834Z 
2025-02-24T16:33:40.7406062Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123ee990>
2025-02-24T16:33:40.7406234Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4fb4c95e0>
2025-02-24T16:33:40.7406319Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.7406323Z 
2025-02-24T16:33:40.7406464Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7406578Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7406667Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7406737Z         try:
2025-02-24T16:33:40.7406882Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7406968Z         except KeyError:
2025-02-24T16:33:40.7407109Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7407373Z     
2025-02-24T16:33:40.7407467Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7407566Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7407659Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7407795Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7407886Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7407980Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7408097Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7408168Z             else:
2025-02-24T16:33:40.7408267Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7408374Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7408384Z 
2025-02-24T16:33:40.7408513Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7408628Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7408777Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7408851Z     ???
2025-02-24T16:33:40.7408957Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7408961Z 
2025-02-24T16:33:40.7409036Z >   ???
2025-02-24T16:33:40.7409163Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7409232Z E   
2025-02-24T16:33:40.7409481Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7409590Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7409665Z E          ...
2025-02-24T16:33:40.7409751Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7409883Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7410000Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7410069Z E          ...
2025-02-24T16:33:40.7410156Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7410284Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7410394Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7410398Z 
2025-02-24T16:33:40.7410491Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7410708Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] _
2025-02-24T16:33:40.7410712Z 
2025-02-24T16:33:40.7410848Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7410975Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7411075Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7411211Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7411331Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7411432Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7411506Z err_msg = None
2025-02-24T16:33:40.7411510Z 
2025-02-24T16:33:40.7411624Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7411704Z         if err_msg is None:
2025-02-24T16:33:40.7411803Z             if left.shape != right.shape:
2025-02-24T16:33:40.7411892Z                 raise_assert_detail(
2025-02-24T16:33:40.7412041Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7412117Z                 )
2025-02-24T16:33:40.7412185Z     
2025-02-24T16:33:40.7412260Z             diff = 0
2025-02-24T16:33:40.7412373Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7412465Z                 # count up differences
2025-02-24T16:33:40.7412640Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7412717Z                     diff += 1
2025-02-24T16:33:40.7412789Z     
2025-02-24T16:33:40.7412990Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7413136Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7413305Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7413419Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7413494Z E           
2025-02-24T16:33:40.7413611Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7413875Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7414143Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7414147Z 
2025-02-24T16:33:40.7414450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7414454Z 
2025-02-24T16:33:40.7414629Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7414727Z 
2025-02-24T16:33:40.7414961Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123eed80>
2025-02-24T16:33:40.7415127Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4fb4c95e0>
2025-02-24T16:33:40.7415212Z attr = 'beta_sobolev'
2025-02-24T16:33:40.7415216Z 
2025-02-24T16:33:40.7415351Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7415474Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7415559Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7415636Z         try:
2025-02-24T16:33:40.7415786Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7415865Z         except KeyError:
2025-02-24T16:33:40.7416007Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7416075Z     
2025-02-24T16:33:40.7416164Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7416257Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7416351Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7416483Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7416569Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7416662Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7416771Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7416846Z             else:
2025-02-24T16:33:40.7416939Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7417070Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7417082Z 
2025-02-24T16:33:40.7417440Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7417643Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7417865Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7417937Z     ???
2025-02-24T16:33:40.7418052Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7418063Z 
2025-02-24T16:33:40.7418139Z >   ???
2025-02-24T16:33:40.7418266Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7418341Z E   
2025-02-24T16:33:40.7418468Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7418592Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7418662Z E          ...
2025-02-24T16:33:40.7418754Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7418885Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7419120Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7419202Z E          ...
2025-02-24T16:33:40.7419286Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7419413Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7419516Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7419528Z 
2025-02-24T16:33:40.7419618Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7419828Z __ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-j_blues] ___
2025-02-24T16:33:40.7419832Z 
2025-02-24T16:33:40.7419962Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7420097Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7420201Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7420337Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7420465Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7420555Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7420633Z err_msg = None
2025-02-24T16:33:40.7420637Z 
2025-02-24T16:33:40.7420749Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7420944Z         if err_msg is None:
2025-02-24T16:33:40.7421043Z             if left.shape != right.shape:
2025-02-24T16:33:40.7421126Z                 raise_assert_detail(
2025-02-24T16:33:40.7421274Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7421344Z                 )
2025-02-24T16:33:40.7421415Z     
2025-02-24T16:33:40.7421488Z             diff = 0
2025-02-24T16:33:40.7421603Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7421697Z                 # count up differences
2025-02-24T16:33:40.7421872Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7421953Z                     diff += 1
2025-02-24T16:33:40.7422022Z     
2025-02-24T16:33:40.7422113Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7422248Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7422421Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7422543Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7422615Z E           
2025-02-24T16:33:40.7422731Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7422999Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7423264Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7423272Z 
2025-02-24T16:33:40.7423583Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7423587Z 
2025-02-24T16:33:40.7423754Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7423763Z 
2025-02-24T16:33:40.7423986Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123ef980>
2025-02-24T16:33:40.7424156Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4fb4c95e0>
2025-02-24T16:33:40.7424231Z attr = 'j_blues'
2025-02-24T16:33:40.7424235Z 
2025-02-24T16:33:40.7424457Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7424575Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7424667Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7424745Z         try:
2025-02-24T16:33:40.7424883Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7424968Z         except KeyError:
2025-02-24T16:33:40.7425110Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7425186Z     
2025-02-24T16:33:40.7425270Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7425368Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7425461Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7425589Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7425679Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7425768Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7425881Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7425956Z             else:
2025-02-24T16:33:40.7426055Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7426164Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7426168Z 
2025-02-24T16:33:40.7426292Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7426409Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7426651Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7426722Z     ???
2025-02-24T16:33:40.7426835Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7426839Z 
2025-02-24T16:33:40.7426906Z >   ???
2025-02-24T16:33:40.7427036Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7427101Z E   
2025-02-24T16:33:40.7427231Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7427482Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7427559Z E          ...
2025-02-24T16:33:40.7427649Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7427778Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7427896Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7427966Z E          ...
2025-02-24T16:33:40.7428059Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7428181Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7428290Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7428295Z 
2025-02-24T16:33:40.7428388Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7428610Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] _
2025-02-24T16:33:40.7428614Z 
2025-02-24T16:33:40.7428747Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7428878Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7428982Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7429122Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7429244Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7429342Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7429418Z err_msg = None
2025-02-24T16:33:40.7429422Z 
2025-02-24T16:33:40.7429539Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7429624Z         if err_msg is None:
2025-02-24T16:33:40.7429718Z             if left.shape != right.shape:
2025-02-24T16:33:40.7429807Z                 raise_assert_detail(
2025-02-24T16:33:40.7429949Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7430023Z                 )
2025-02-24T16:33:40.7430091Z     
2025-02-24T16:33:40.7430291Z             diff = 0
2025-02-24T16:33:40.7430409Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7430497Z                 # count up differences
2025-02-24T16:33:40.7430670Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7430747Z                     diff += 1
2025-02-24T16:33:40.7430825Z     
2025-02-24T16:33:40.7430912Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7431051Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7431225Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7431335Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7431411Z E           
2025-02-24T16:33:40.7431521Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7431786Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7432048Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7432159Z 
2025-02-24T16:33:40.7432467Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7432471Z 
2025-02-24T16:33:40.7432642Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7432646Z 
2025-02-24T16:33:40.7432881Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123eebd0>
2025-02-24T16:33:40.7433047Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c16270>
2025-02-24T16:33:40.7433123Z attr = 'lines'
2025-02-24T16:33:40.7433127Z 
2025-02-24T16:33:40.7433261Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7433379Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7433467Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7433541Z         try:
2025-02-24T16:33:40.7433681Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7433761Z         except KeyError:
2025-02-24T16:33:40.7433903Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7433968Z     
2025-02-24T16:33:40.7434059Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7434154Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7434241Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7434377Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7434462Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7434555Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7434700Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7434840Z             else:
2025-02-24T16:33:40.7435007Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7435206Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7435213Z 
2025-02-24T16:33:40.7435375Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7435491Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7435644Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7435716Z     ???
2025-02-24T16:33:40.7435827Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7435832Z 
2025-02-24T16:33:40.7435905Z >   ???
2025-02-24T16:33:40.7436144Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7436218Z E   
2025-02-24T16:33:40.7436351Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7436469Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7436545Z E          ...
2025-02-24T16:33:40.7436632Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7436771Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7436887Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7436959Z E          ...
2025-02-24T16:33:40.7437043Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7437169Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7437408Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7437413Z 
2025-02-24T16:33:40.7437510Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7437805Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] _
2025-02-24T16:33:40.7437809Z 
2025-02-24T16:33:40.7438032Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512338050>
2025-02-24T16:33:40.7438201Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c16270>
2025-02-24T16:33:40.7438295Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.7438299Z 
2025-02-24T16:33:40.7438558Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7438674Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7438756Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7438831Z         try:
2025-02-24T16:33:40.7438975Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7439054Z         except KeyError:
2025-02-24T16:33:40.7439198Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7439265Z     
2025-02-24T16:33:40.7439354Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7439451Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7439543Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7439680Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7439764Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7439856Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7439964Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7439972Z 
2025-02-24T16:33:40.7440102Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7440212Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7440221Z 
2025-02-24T16:33:40.7440356Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7440445Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7440555Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7440643Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7440779Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7440866Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7440976Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7441054Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7441136Z err_msg = None
2025-02-24T16:33:40.7441139Z 
2025-02-24T16:33:40.7441249Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7441335Z         if err_msg is None:
2025-02-24T16:33:40.7441433Z             if left.shape != right.shape:
2025-02-24T16:33:40.7441516Z                 raise_assert_detail(
2025-02-24T16:33:40.7441663Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7441732Z                 )
2025-02-24T16:33:40.7441806Z     
2025-02-24T16:33:40.7441878Z             diff = 0
2025-02-24T16:33:40.7442116Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7442212Z                 # count up differences
2025-02-24T16:33:40.7442383Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7442464Z                     diff += 1
2025-02-24T16:33:40.7442532Z     
2025-02-24T16:33:40.7442622Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7442762Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7442941Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7443051Z E           AssertionError: Series are different
2025-02-24T16:33:40.7443120Z E           
2025-02-24T16:33:40.7443226Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.7443604Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7443941Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7444355Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7444364Z 
2025-02-24T16:33:40.7444683Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7444963Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] _
2025-02-24T16:33:40.7444968Z 
2025-02-24T16:33:40.7445195Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512338110>
2025-02-24T16:33:40.7445366Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c16270>
2025-02-24T16:33:40.7445461Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.7445465Z 
2025-02-24T16:33:40.7445608Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7445723Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7445812Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7445881Z         try:
2025-02-24T16:33:40.7446027Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7446109Z         except KeyError:
2025-02-24T16:33:40.7446251Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7446323Z     
2025-02-24T16:33:40.7446410Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7446507Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7446597Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7446744Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7446828Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7446922Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7447036Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7447040Z 
2025-02-24T16:33:40.7447165Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7447388Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7447393Z 
2025-02-24T16:33:40.7447649Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7447739Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7447851Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7447929Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7448072Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7448163Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7448287Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7448369Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7448444Z err_msg = None
2025-02-24T16:33:40.7448448Z 
2025-02-24T16:33:40.7448560Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7448640Z         if err_msg is None:
2025-02-24T16:33:40.7448738Z             if left.shape != right.shape:
2025-02-24T16:33:40.7448822Z                 raise_assert_detail(
2025-02-24T16:33:40.7448973Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7449049Z                 )
2025-02-24T16:33:40.7449117Z     
2025-02-24T16:33:40.7449193Z             diff = 0
2025-02-24T16:33:40.7449307Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7449399Z                 # count up differences
2025-02-24T16:33:40.7449571Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7449766Z                     diff += 1
2025-02-24T16:33:40.7449840Z     
2025-02-24T16:33:40.7449925Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7450065Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7450233Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7450339Z E           AssertionError: Series are different
2025-02-24T16:33:40.7450409Z E           
2025-02-24T16:33:40.7450519Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.7450896Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7451276Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7451656Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7451661Z 
2025-02-24T16:33:40.7451981Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7452197Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] __
2025-02-24T16:33:40.7452201Z 
2025-02-24T16:33:40.7452329Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7452462Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7452560Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7452776Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7452906Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7452998Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7453077Z err_msg = None
2025-02-24T16:33:40.7453080Z 
2025-02-24T16:33:40.7453192Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7453316Z         if err_msg is None:
2025-02-24T16:33:40.7453483Z             if left.shape != right.shape:
2025-02-24T16:33:40.7453637Z                 raise_assert_detail(
2025-02-24T16:33:40.7453887Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7453958Z                 )
2025-02-24T16:33:40.7454033Z     
2025-02-24T16:33:40.7454103Z             diff = 0
2025-02-24T16:33:40.7454221Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7454314Z                 # count up differences
2025-02-24T16:33:40.7454486Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7454568Z                     diff += 1
2025-02-24T16:33:40.7454637Z     
2025-02-24T16:33:40.7454729Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7454864Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7455216Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7455328Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7455403Z E           
2025-02-24T16:33:40.7455518Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7455783Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7456047Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7456056Z 
2025-02-24T16:33:40.7456366Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7456371Z 
2025-02-24T16:33:40.7456538Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7456542Z 
2025-02-24T16:33:40.7456774Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512338350>
2025-02-24T16:33:40.7456979Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c16270>, attr = 'nu'
2025-02-24T16:33:40.7456983Z 
2025-02-24T16:33:40.7457121Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7457241Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7457432Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7457508Z         try:
2025-02-24T16:33:40.7457647Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7457731Z         except KeyError:
2025-02-24T16:33:40.7457879Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7457946Z     
2025-02-24T16:33:40.7458038Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7458131Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7458224Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7458354Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7458445Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7458537Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7458798Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7458804Z 
2025-02-24T16:33:40.7458936Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7459050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7459202Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7459277Z     ???
2025-02-24T16:33:40.7459391Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7459394Z 
2025-02-24T16:33:40.7459466Z >   ???
2025-02-24T16:33:40.7459593Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7459665Z E   
2025-02-24T16:33:40.7459793Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7459907Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7459982Z E          ...
2025-02-24T16:33:40.7460070Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7460210Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7460321Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7460394Z E          ...
2025-02-24T16:33:40.7460478Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7460606Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7460717Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7460832Z 
2025-02-24T16:33:40.7460923Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7461182Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] _
2025-02-24T16:33:40.7461186Z 
2025-02-24T16:33:40.7461313Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7461447Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7461547Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7461682Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7461809Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7461901Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7461980Z err_msg = None
2025-02-24T16:33:40.7461984Z 
2025-02-24T16:33:40.7462107Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7462189Z         if err_msg is None:
2025-02-24T16:33:40.7462287Z             if left.shape != right.shape:
2025-02-24T16:33:40.7462371Z                 raise_assert_detail(
2025-02-24T16:33:40.7462517Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7462588Z                 )
2025-02-24T16:33:40.7462665Z     
2025-02-24T16:33:40.7462742Z             diff = 0
2025-02-24T16:33:40.7462853Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7462949Z                 # count up differences
2025-02-24T16:33:40.7463121Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7463206Z                     diff += 1
2025-02-24T16:33:40.7463273Z     
2025-02-24T16:33:40.7463368Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7463509Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7463682Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7463797Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7463867Z E           
2025-02-24T16:33:40.7463983Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7464344Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7464605Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7464614Z 
2025-02-24T16:33:40.7464926Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7464931Z 
2025-02-24T16:33:40.7465102Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7465106Z 
2025-02-24T16:33:40.7465328Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512338410>
2025-02-24T16:33:40.7465499Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c16270>
2025-02-24T16:33:40.7465577Z attr = 'wavelength_cm'
2025-02-24T16:33:40.7465581Z 
2025-02-24T16:33:40.7465723Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7465842Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7465925Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7466000Z         try:
2025-02-24T16:33:40.7466137Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7466306Z         except KeyError:
2025-02-24T16:33:40.7466442Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7466515Z     
2025-02-24T16:33:40.7466605Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7466696Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7466787Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7466916Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7467009Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7467096Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7467214Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7467218Z 
2025-02-24T16:33:40.7467455Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7467568Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7467716Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7467796Z     ???
2025-02-24T16:33:40.7467909Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7467913Z 
2025-02-24T16:33:40.7467985Z >   ???
2025-02-24T16:33:40.7468110Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7468182Z E   
2025-02-24T16:33:40.7468310Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7468422Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7468493Z E          ...
2025-02-24T16:33:40.7468587Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7468723Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7468842Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7468917Z E          ...
2025-02-24T16:33:40.7469004Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7469137Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7469251Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7469260Z 
2025-02-24T16:33:40.7469351Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7469579Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] _
2025-02-24T16:33:40.7469583Z 
2025-02-24T16:33:40.7469715Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7469852Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7469956Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7470216Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7470352Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7470445Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7470524Z err_msg = None
2025-02-24T16:33:40.7470531Z 
2025-02-24T16:33:40.7470647Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7470733Z         if err_msg is None:
2025-02-24T16:33:40.7470835Z             if left.shape != right.shape:
2025-02-24T16:33:40.7470920Z                 raise_assert_detail(
2025-02-24T16:33:40.7471075Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7471147Z                 )
2025-02-24T16:33:40.7471220Z     
2025-02-24T16:33:40.7471291Z             diff = 0
2025-02-24T16:33:40.7471410Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7471508Z                 # count up differences
2025-02-24T16:33:40.7471682Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7471766Z                     diff += 1
2025-02-24T16:33:40.7471835Z     
2025-02-24T16:33:40.7471927Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7472143Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7472694Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7472825Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7472899Z E           
2025-02-24T16:33:40.7473020Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7473290Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7473554Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7473565Z 
2025-02-24T16:33:40.7473884Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7473888Z 
2025-02-24T16:33:40.7474059Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7474069Z 
2025-02-24T16:33:40.7474294Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123384d0>
2025-02-24T16:33:40.7474503Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c16270>, attr = 'f_lu'
2025-02-24T16:33:40.7474507Z 
2025-02-24T16:33:40.7474651Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7474775Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7474859Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7474935Z         try:
2025-02-24T16:33:40.7475080Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7475165Z         except KeyError:
2025-02-24T16:33:40.7475314Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7475382Z     
2025-02-24T16:33:40.7475477Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7475570Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7475665Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7475802Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7475888Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7475984Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7476181Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7476186Z 
2025-02-24T16:33:40.7476321Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7476441Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7476588Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7476661Z     ???
2025-02-24T16:33:40.7476774Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7476778Z 
2025-02-24T16:33:40.7476851Z >   ???
2025-02-24T16:33:40.7476978Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7477051Z E   
2025-02-24T16:33:40.7477186Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7477453Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7477532Z E          ...
2025-02-24T16:33:40.7477621Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7477763Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7477877Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7477954Z E          ...
2025-02-24T16:33:40.7478042Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7478164Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7478411Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7478415Z 
2025-02-24T16:33:40.7478505Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7478754Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] _
2025-02-24T16:33:40.7478758Z 
2025-02-24T16:33:40.7478892Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7479032Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7479134Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7479271Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7479403Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7479500Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7479573Z err_msg = None
2025-02-24T16:33:40.7479581Z 
2025-02-24T16:33:40.7479700Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7479782Z         if err_msg is None:
2025-02-24T16:33:40.7479886Z             if left.shape != right.shape:
2025-02-24T16:33:40.7479973Z                 raise_assert_detail(
2025-02-24T16:33:40.7480131Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7480206Z                 )
2025-02-24T16:33:40.7480273Z     
2025-02-24T16:33:40.7480350Z             diff = 0
2025-02-24T16:33:40.7480464Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7480560Z                 # count up differences
2025-02-24T16:33:40.7480733Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7480820Z                     diff += 1
2025-02-24T16:33:40.7480892Z     
2025-02-24T16:33:40.7480980Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7481121Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7481303Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7481421Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7481500Z E           
2025-02-24T16:33:40.7481613Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7481994Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7482259Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7482272Z 
2025-02-24T16:33:40.7482583Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7482587Z 
2025-02-24T16:33:40.7482764Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7482769Z 
2025-02-24T16:33:40.7482996Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512338c50>
2025-02-24T16:33:40.7483167Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c16270>
2025-02-24T16:33:40.7483251Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.7483259Z 
2025-02-24T16:33:40.7483403Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7483524Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7483609Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7483685Z         try:
2025-02-24T16:33:40.7483825Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7484012Z         except KeyError:
2025-02-24T16:33:40.7484157Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7484225Z     
2025-02-24T16:33:40.7484315Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7484408Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7484501Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7484632Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7484725Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7484818Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7484934Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7485009Z             else:
2025-02-24T16:33:40.7485103Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7485219Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7485223Z 
2025-02-24T16:33:40.7485355Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7485476Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7485631Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7485701Z     ???
2025-02-24T16:33:40.7485816Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7485820Z 
2025-02-24T16:33:40.7485888Z >   ???
2025-02-24T16:33:40.7486021Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7486094Z E   
2025-02-24T16:33:40.7486224Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7486344Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7486414Z E          ...
2025-02-24T16:33:40.7486507Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7486638Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7486758Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7486837Z E          ...
2025-02-24T16:33:40.7486924Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7487054Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7487160Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7487164Z 
2025-02-24T16:33:40.7487362Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7487618Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] _
2025-02-24T16:33:40.7487622Z 
2025-02-24T16:33:40.7487867Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7488006Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7488105Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7488243Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7488373Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7488470Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7488549Z err_msg = None
2025-02-24T16:33:40.7488552Z 
2025-02-24T16:33:40.7488665Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7488754Z         if err_msg is None:
2025-02-24T16:33:40.7488854Z             if left.shape != right.shape:
2025-02-24T16:33:40.7488938Z                 raise_assert_detail(
2025-02-24T16:33:40.7489089Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7489163Z                 )
2025-02-24T16:33:40.7489235Z     
2025-02-24T16:33:40.7489307Z             diff = 0
2025-02-24T16:33:40.7489422Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7489509Z                 # count up differences
2025-02-24T16:33:40.7489693Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7489889Z                     diff += 1
2025-02-24T16:33:40.7489958Z     
2025-02-24T16:33:40.7490055Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7490196Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7490370Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7490486Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7490557Z E           
2025-02-24T16:33:40.7490676Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7491174Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7491517Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7491527Z 
2025-02-24T16:33:40.7491843Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7491848Z 
2025-02-24T16:33:40.7492018Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7492022Z 
2025-02-24T16:33:40.7492255Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512338d10>
2025-02-24T16:33:40.7492426Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c16270>
2025-02-24T16:33:40.7492504Z attr = 'beta_sobolev'
2025-02-24T16:33:40.7492508Z 
2025-02-24T16:33:40.7492651Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7492771Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7492861Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7492937Z         try:
2025-02-24T16:33:40.7493075Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7493159Z         except KeyError:
2025-02-24T16:33:40.7493297Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7493369Z     
2025-02-24T16:33:40.7493455Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7493554Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7493647Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7493869Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7493963Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7494051Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7494165Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7494237Z             else:
2025-02-24T16:33:40.7494339Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7494453Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7494457Z 
2025-02-24T16:33:40.7494582Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7494699Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7494844Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7494918Z     ???
2025-02-24T16:33:40.7495025Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7495034Z 
2025-02-24T16:33:40.7495106Z >   ???
2025-02-24T16:33:40.7495240Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7495308Z E   
2025-02-24T16:33:40.7495441Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7495551Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7495626Z E          ...
2025-02-24T16:33:40.7495802Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7495930Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7496047Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7496119Z E          ...
2025-02-24T16:33:40.7496207Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7496329Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7496438Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7496442Z 
2025-02-24T16:33:40.7496535Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7496767Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] _
2025-02-24T16:33:40.7496771Z 
2025-02-24T16:33:40.7496906Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7497036Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7497141Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7497383Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7497510Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7497607Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7497680Z err_msg = None
2025-02-24T16:33:40.7497684Z 
2025-02-24T16:33:40.7497798Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7509661Z         if err_msg is None:
2025-02-24T16:33:40.7509877Z             if left.shape != right.shape:
2025-02-24T16:33:40.7510026Z                 raise_assert_detail(
2025-02-24T16:33:40.7510201Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7510274Z                 )
2025-02-24T16:33:40.7510348Z     
2025-02-24T16:33:40.7510426Z             diff = 0
2025-02-24T16:33:40.7510561Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7510663Z                 # count up differences
2025-02-24T16:33:40.7510845Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7510932Z                     diff += 1
2025-02-24T16:33:40.7510999Z     
2025-02-24T16:33:40.7511097Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7511239Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7511420Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7511721Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7511798Z E           
2025-02-24T16:33:40.7511920Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7512184Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7512460Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7512466Z 
2025-02-24T16:33:40.7512798Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7512803Z 
2025-02-24T16:33:40.7512976Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7512986Z 
2025-02-24T16:33:40.7513214Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512338e90>
2025-02-24T16:33:40.7513389Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c16270>
2025-02-24T16:33:40.7513598Z attr = 'j_blues'
2025-02-24T16:33:40.7513602Z 
2025-02-24T16:33:40.7513745Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7513882Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7513975Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7514046Z         try:
2025-02-24T16:33:40.7514203Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7514284Z         except KeyError:
2025-02-24T16:33:40.7514433Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7514506Z     
2025-02-24T16:33:40.7514600Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7514700Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7514788Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7514929Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7515014Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7515112Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7515228Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7515301Z             else:
2025-02-24T16:33:40.7515403Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7515512Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7515515Z 
2025-02-24T16:33:40.7515651Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7515769Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7515932Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7516008Z     ???
2025-02-24T16:33:40.7516118Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7516122Z 
2025-02-24T16:33:40.7516193Z >   ???
2025-02-24T16:33:40.7516323Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7516396Z E   
2025-02-24T16:33:40.7516532Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7516653Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7516734Z E          ...
2025-02-24T16:33:40.7516825Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7516960Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7517077Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7517153Z E          ...
2025-02-24T16:33:40.7517402Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7517652Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7517767Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7517771Z 
2025-02-24T16:33:40.7517860Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7518075Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines] ____
2025-02-24T16:33:40.7518079Z 
2025-02-24T16:33:40.7518215Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7518353Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7518457Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7518590Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7518725Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7518821Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7518900Z err_msg = None
2025-02-24T16:33:40.7518904Z 
2025-02-24T16:33:40.7519023Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7519105Z         if err_msg is None:
2025-02-24T16:33:40.7519204Z             if left.shape != right.shape:
2025-02-24T16:33:40.7519288Z                 raise_assert_detail(
2025-02-24T16:33:40.7519560Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7519636Z                 )
2025-02-24T16:33:40.7519703Z     
2025-02-24T16:33:40.7519779Z             diff = 0
2025-02-24T16:33:40.7519892Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7519987Z                 # count up differences
2025-02-24T16:33:40.7520165Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7520249Z                     diff += 1
2025-02-24T16:33:40.7520321Z     
2025-02-24T16:33:40.7520418Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7520562Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7520734Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7520853Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7520924Z E           
2025-02-24T16:33:40.7521042Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7521316Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7521579Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7521584Z 
2025-02-24T16:33:40.7521908Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7521912Z 
2025-02-24T16:33:40.7522090Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7522098Z 
2025-02-24T16:33:40.7522323Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512339c10>
2025-02-24T16:33:40.7522498Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8ad1b50>
2025-02-24T16:33:40.7522571Z attr = 'lines'
2025-02-24T16:33:40.7522575Z 
2025-02-24T16:33:40.7522718Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7522838Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7522924Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7522998Z         try:
2025-02-24T16:33:40.7523222Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7523311Z         except KeyError:
2025-02-24T16:33:40.7523455Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7523523Z     
2025-02-24T16:33:40.7523612Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7523710Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7523810Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7523942Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7524032Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7524124Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7524234Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7524311Z             else:
2025-02-24T16:33:40.7524405Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7524518Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7524523Z 
2025-02-24T16:33:40.7524651Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7524771Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7524922Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7524991Z     ???
2025-02-24T16:33:40.7525104Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7525190Z 
2025-02-24T16:33:40.7525259Z >   ???
2025-02-24T16:33:40.7525390Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7525457Z E   
2025-02-24T16:33:40.7525589Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7525705Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7525775Z E          ...
2025-02-24T16:33:40.7525867Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7525996Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7526117Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7526191Z E          ...
2025-02-24T16:33:40.7526275Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7526402Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7526506Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7526514Z 
2025-02-24T16:33:40.7526608Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7526986Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] _
2025-02-24T16:33:40.7526995Z 
2025-02-24T16:33:40.7527498Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512339cd0>
2025-02-24T16:33:40.7527677Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8ad1b50>
2025-02-24T16:33:40.7527766Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.7527770Z 
2025-02-24T16:33:40.7527914Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7528034Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7528122Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7528196Z         try:
2025-02-24T16:33:40.7528337Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7528421Z         except KeyError:
2025-02-24T16:33:40.7528561Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7528637Z     
2025-02-24T16:33:40.7528723Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7528819Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7528922Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7529054Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7529143Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7529230Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7529344Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7529348Z 
2025-02-24T16:33:40.7529607Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7529725Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7529729Z 
2025-02-24T16:33:40.7529868Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7529955Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7530072Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7530151Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7530294Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7530380Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7530483Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7530564Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7530638Z err_msg = None
2025-02-24T16:33:40.7530641Z 
2025-02-24T16:33:40.7530759Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7530843Z         if err_msg is None:
2025-02-24T16:33:40.7530936Z             if left.shape != right.shape:
2025-02-24T16:33:40.7531024Z                 raise_assert_detail(
2025-02-24T16:33:40.7531165Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7531239Z                 )
2025-02-24T16:33:40.7531429Z     
2025-02-24T16:33:40.7531506Z             diff = 0
2025-02-24T16:33:40.7531621Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7531708Z                 # count up differences
2025-02-24T16:33:40.7531884Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7531960Z                     diff += 1
2025-02-24T16:33:40.7532034Z     
2025-02-24T16:33:40.7532119Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7532261Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7532442Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7532546Z E           AssertionError: Series are different
2025-02-24T16:33:40.7532621Z E           
2025-02-24T16:33:40.7532721Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.7533102Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7533438Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7533767Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7533781Z 
2025-02-24T16:33:40.7534095Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7534352Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] _
2025-02-24T16:33:40.7534356Z 
2025-02-24T16:33:40.7534579Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512339d90>
2025-02-24T16:33:40.7534854Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8ad1b50>
2025-02-24T16:33:40.7534956Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.7534960Z 
2025-02-24T16:33:40.7535096Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7535216Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7535299Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7535377Z         try:
2025-02-24T16:33:40.7535518Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7535603Z         except KeyError:
2025-02-24T16:33:40.7535743Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7535812Z     
2025-02-24T16:33:40.7535903Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7535995Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7536088Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7536219Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7536313Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7536401Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7536507Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7536511Z 
2025-02-24T16:33:40.7536636Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7536748Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7536835Z 
2025-02-24T16:33:40.7536974Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7537061Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7537167Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7537371Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7537514Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7537600Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7537713Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7537791Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7537868Z err_msg = None
2025-02-24T16:33:40.7537872Z 
2025-02-24T16:33:40.7537981Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7538066Z         if err_msg is None:
2025-02-24T16:33:40.7538164Z             if left.shape != right.shape:
2025-02-24T16:33:40.7538256Z                 raise_assert_detail(
2025-02-24T16:33:40.7538403Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7538472Z                 )
2025-02-24T16:33:40.7538544Z     
2025-02-24T16:33:40.7538615Z             diff = 0
2025-02-24T16:33:40.7538730Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7538823Z                 # count up differences
2025-02-24T16:33:40.7538997Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7539081Z                     diff += 1
2025-02-24T16:33:40.7539148Z     
2025-02-24T16:33:40.7539238Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7539371Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7539546Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7539648Z E           AssertionError: Series are different
2025-02-24T16:33:40.7539728Z E           
2025-02-24T16:33:40.7539834Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.7540201Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7540693Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7541078Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7541083Z 
2025-02-24T16:33:40.7541404Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7541613Z _____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-nu] ______
2025-02-24T16:33:40.7541618Z 
2025-02-24T16:33:40.7541746Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7541876Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7542082Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7542218Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7542341Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7542433Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7542511Z err_msg = None
2025-02-24T16:33:40.7542515Z 
2025-02-24T16:33:40.7542620Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7542703Z         if err_msg is None:
2025-02-24T16:33:40.7542794Z             if left.shape != right.shape:
2025-02-24T16:33:40.7542879Z                 raise_assert_detail(
2025-02-24T16:33:40.7543023Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7543092Z                 )
2025-02-24T16:33:40.7543163Z     
2025-02-24T16:33:40.7543233Z             diff = 0
2025-02-24T16:33:40.7543349Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7543434Z                 # count up differences
2025-02-24T16:33:40.7543608Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7543692Z                     diff += 1
2025-02-24T16:33:40.7543759Z     
2025-02-24T16:33:40.7543847Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7543978Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7544152Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7544263Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7544335Z E           
2025-02-24T16:33:40.7544448Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7544707Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7544973Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7544978Z 
2025-02-24T16:33:40.7545431Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7545440Z 
2025-02-24T16:33:40.7545754Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7545762Z 
2025-02-24T16:33:40.7546082Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512339fd0>
2025-02-24T16:33:40.7546294Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8ad1b50>, attr = 'nu'
2025-02-24T16:33:40.7546298Z 
2025-02-24T16:33:40.7546437Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7546556Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7546641Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7546713Z         try:
2025-02-24T16:33:40.7546854Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7546936Z         except KeyError:
2025-02-24T16:33:40.7547076Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7547145Z     
2025-02-24T16:33:40.7547234Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7547423Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7547515Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7547646Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7547733Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7547953Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7548062Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7548066Z 
2025-02-24T16:33:40.7548193Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7548304Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7548454Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7548525Z     ???
2025-02-24T16:33:40.7548631Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7548639Z 
2025-02-24T16:33:40.7548708Z >   ???
2025-02-24T16:33:40.7548842Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7548912Z E   
2025-02-24T16:33:40.7549041Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7549155Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7549227Z E          ...
2025-02-24T16:33:40.7549317Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7549451Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7549563Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7549641Z E          ...
2025-02-24T16:33:40.7549726Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7549851Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7549961Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7549965Z 
2025-02-24T16:33:40.7550059Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7550285Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-wavelength_cm] _
2025-02-24T16:33:40.7550290Z 
2025-02-24T16:33:40.7550418Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7550550Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7550656Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7550784Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7550912Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7551003Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7551081Z err_msg = None
2025-02-24T16:33:40.7551085Z 
2025-02-24T16:33:40.7551199Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7551412Z         if err_msg is None:
2025-02-24T16:33:40.7551516Z             if left.shape != right.shape:
2025-02-24T16:33:40.7551600Z                 raise_assert_detail(
2025-02-24T16:33:40.7551746Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7551817Z                 )
2025-02-24T16:33:40.7551889Z     
2025-02-24T16:33:40.7551964Z             diff = 0
2025-02-24T16:33:40.7552077Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7552168Z                 # count up differences
2025-02-24T16:33:40.7552338Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7552421Z                     diff += 1
2025-02-24T16:33:40.7552487Z     
2025-02-24T16:33:40.7552580Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7552720Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7552891Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7553008Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7553078Z E           
2025-02-24T16:33:40.7553195Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7553465Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7553809Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7553814Z 
2025-02-24T16:33:40.7554136Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7554140Z 
2025-02-24T16:33:40.7554315Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7554319Z 
2025-02-24T16:33:40.7554546Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff51233a090>
2025-02-24T16:33:40.7554719Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8ad1b50>
2025-02-24T16:33:40.7554802Z attr = 'wavelength_cm'
2025-02-24T16:33:40.7554806Z 
2025-02-24T16:33:40.7554950Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7555071Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7555155Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7555229Z         try:
2025-02-24T16:33:40.7555369Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7555453Z         except KeyError:
2025-02-24T16:33:40.7555594Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7555666Z     
2025-02-24T16:33:40.7555758Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7555850Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7555943Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7556073Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7556166Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7556253Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7556367Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7556371Z 
2025-02-24T16:33:40.7556500Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7556614Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7556764Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7556834Z     ???
2025-02-24T16:33:40.7557047Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7557053Z 
2025-02-24T16:33:40.7557127Z >   ???
2025-02-24T16:33:40.7557374Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7557448Z E   
2025-02-24T16:33:40.7557574Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7557689Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7557764Z E          ...
2025-02-24T16:33:40.7557857Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7557991Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7558101Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7558177Z E          ...
2025-02-24T16:33:40.7558262Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7558391Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7558495Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7558504Z 
2025-02-24T16:33:40.7558595Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7558801Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-f_lu] _____
2025-02-24T16:33:40.7558806Z 
2025-02-24T16:33:40.7558936Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7559069Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7559288Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7559422Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7559553Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7559645Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7559723Z err_msg = None
2025-02-24T16:33:40.7559727Z 
2025-02-24T16:33:40.7559836Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7559924Z         if err_msg is None:
2025-02-24T16:33:40.7560023Z             if left.shape != right.shape:
2025-02-24T16:33:40.7560107Z                 raise_assert_detail(
2025-02-24T16:33:40.7560253Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7560322Z                 )
2025-02-24T16:33:40.7560394Z     
2025-02-24T16:33:40.7560469Z             diff = 0
2025-02-24T16:33:40.7560586Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7560679Z                 # count up differences
2025-02-24T16:33:40.7560851Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7560932Z                     diff += 1
2025-02-24T16:33:40.7561000Z     
2025-02-24T16:33:40.7561094Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7561230Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7561407Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7561523Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7561593Z E           
2025-02-24T16:33:40.7561709Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7561969Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7562239Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7562243Z 
2025-02-24T16:33:40.7562669Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7562675Z 
2025-02-24T16:33:40.7562847Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7562857Z 
2025-02-24T16:33:40.7563081Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff51233a150>
2025-02-24T16:33:40.7563292Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8ad1b50>, attr = 'f_lu'
2025-02-24T16:33:40.7563295Z 
2025-02-24T16:33:40.7563430Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7563547Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7563631Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7563754Z         try:
2025-02-24T16:33:40.7564007Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7564137Z         except KeyError:
2025-02-24T16:33:40.7564376Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7564486Z     
2025-02-24T16:33:40.7564633Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7564789Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7564948Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7565089Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7565175Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7565357Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7565468Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7565472Z 
2025-02-24T16:33:40.7565603Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7565721Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7565863Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7565936Z     ???
2025-02-24T16:33:40.7566044Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7566051Z 
2025-02-24T16:33:40.7566123Z >   ???
2025-02-24T16:33:40.7566247Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7566319Z E   
2025-02-24T16:33:40.7566696Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7566806Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7566884Z E          ...
2025-02-24T16:33:40.7566969Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7567102Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7567216Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7567392Z E          ...
2025-02-24T16:33:40.7567483Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7567604Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7567712Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7567716Z 
2025-02-24T16:33:40.7567807Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7568025Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] _
2025-02-24T16:33:40.7568029Z 
2025-02-24T16:33:40.7568160Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7568286Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7568388Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7568520Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7568647Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7568746Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7568819Z err_msg = None
2025-02-24T16:33:40.7568823Z 
2025-02-24T16:33:40.7568938Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7569135Z         if err_msg is None:
2025-02-24T16:33:40.7569237Z             if left.shape != right.shape:
2025-02-24T16:33:40.7569326Z                 raise_assert_detail(
2025-02-24T16:33:40.7569468Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7569541Z                 )
2025-02-24T16:33:40.7569608Z     
2025-02-24T16:33:40.7569687Z             diff = 0
2025-02-24T16:33:40.7569797Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7569889Z                 # count up differences
2025-02-24T16:33:40.7570063Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7570139Z                     diff += 1
2025-02-24T16:33:40.7570211Z     
2025-02-24T16:33:40.7570300Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7570439Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7570614Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7570729Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7570804Z E           
2025-02-24T16:33:40.7570913Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7571177Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7571556Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7571561Z 
2025-02-24T16:33:40.7571875Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7571880Z 
2025-02-24T16:33:40.7572054Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7572058Z 
2025-02-24T16:33:40.7572285Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff51233a8d0>
2025-02-24T16:33:40.7572460Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8ad1b50>
2025-02-24T16:33:40.7572542Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.7572546Z 
2025-02-24T16:33:40.7572681Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7572799Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7572880Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7572954Z         try:
2025-02-24T16:33:40.7573097Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7573175Z         except KeyError:
2025-02-24T16:33:40.7573319Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7573387Z     
2025-02-24T16:33:40.7573477Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7573568Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7573661Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7573799Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7573886Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7573979Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7574088Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7574163Z             else:
2025-02-24T16:33:40.7574258Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7574369Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7574373Z 
2025-02-24T16:33:40.7574506Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7574618Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7574845Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7574919Z     ???
2025-02-24T16:33:40.7575034Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7575038Z 
2025-02-24T16:33:40.7575110Z >   ???
2025-02-24T16:33:40.7575235Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7575310Z E   
2025-02-24T16:33:40.7575433Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7575547Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7575617Z E          ...
2025-02-24T16:33:40.7575708Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7575839Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7575948Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7576022Z E          ...
2025-02-24T16:33:40.7576108Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7576236Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7576338Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7576342Z 
2025-02-24T16:33:40.7576434Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7576641Z ___ TestPlasma.test_plasma_properties[line_interaction_type:scatter-j_blues] ___
2025-02-24T16:33:40.7576741Z 
2025-02-24T16:33:40.7576869Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7577000Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7577094Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7577228Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7577451Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7577548Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7577626Z err_msg = None
2025-02-24T16:33:40.7577630Z 
2025-02-24T16:33:40.7577741Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7577827Z         if err_msg is None:
2025-02-24T16:33:40.7577924Z             if left.shape != right.shape:
2025-02-24T16:33:40.7578007Z                 raise_assert_detail(
2025-02-24T16:33:40.7578160Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7578229Z                 )
2025-02-24T16:33:40.7578301Z     
2025-02-24T16:33:40.7578373Z             diff = 0
2025-02-24T16:33:40.7578486Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7578577Z                 # count up differences
2025-02-24T16:33:40.7578746Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7578827Z                     diff += 1
2025-02-24T16:33:40.7578894Z     
2025-02-24T16:33:40.7578988Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7579123Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7579296Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7579411Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7579480Z E           
2025-02-24T16:33:40.7579598Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7579856Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7580234Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7580240Z 
2025-02-24T16:33:40.7580550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7580555Z 
2025-02-24T16:33:40.7580723Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7580728Z 
2025-02-24T16:33:40.7580957Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff51233ab10>
2025-02-24T16:33:40.7581133Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8ad1b50>
2025-02-24T16:33:40.7581208Z attr = 'j_blues'
2025-02-24T16:33:40.7581212Z 
2025-02-24T16:33:40.7581350Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7581464Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7581552Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7581630Z         try:
2025-02-24T16:33:40.7581766Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7581852Z         except KeyError:
2025-02-24T16:33:40.7581988Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7582060Z     
2025-02-24T16:33:40.7582145Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7582483Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7582640Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7582871Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7583030Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7583133Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7583249Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7583322Z             else:
2025-02-24T16:33:40.7583426Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7583544Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7583549Z 
2025-02-24T16:33:40.7583674Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7583793Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7583939Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7584012Z     ???
2025-02-24T16:33:40.7584124Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7584134Z 
2025-02-24T16:33:40.7584200Z >   ???
2025-02-24T16:33:40.7584329Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7584397Z E   
2025-02-24T16:33:40.7584527Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7584637Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7584713Z E          ...
2025-02-24T16:33:40.7584804Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7584935Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7585051Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7585121Z E          ...
2025-02-24T16:33:40.7585209Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7585329Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7585436Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7585444Z 
2025-02-24T16:33:40.7585670Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7585968Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines] ___
2025-02-24T16:33:40.7585973Z 
2025-02-24T16:33:40.7586108Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7586237Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7586338Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7586569Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7586697Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7586793Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7586867Z err_msg = None
2025-02-24T16:33:40.7586871Z 
2025-02-24T16:33:40.7586991Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7587077Z         if err_msg is None:
2025-02-24T16:33:40.7587173Z             if left.shape != right.shape:
2025-02-24T16:33:40.7587395Z                 raise_assert_detail(
2025-02-24T16:33:40.7587542Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7587616Z                 )
2025-02-24T16:33:40.7587683Z     
2025-02-24T16:33:40.7587759Z             diff = 0
2025-02-24T16:33:40.7587874Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7587963Z                 # count up differences
2025-02-24T16:33:40.7588138Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7588217Z                     diff += 1
2025-02-24T16:33:40.7588288Z     
2025-02-24T16:33:40.7588375Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7588515Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7588812Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7588924Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7589000Z E           
2025-02-24T16:33:40.7589110Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7589378Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7589643Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7589651Z 
2025-02-24T16:33:40.7589960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7589964Z 
2025-02-24T16:33:40.7590136Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7590140Z 
2025-02-24T16:33:40.7590370Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff51233b890>
2025-02-24T16:33:40.7590534Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff51233a1e0>
2025-02-24T16:33:40.7590611Z attr = 'lines'
2025-02-24T16:33:40.7590615Z 
2025-02-24T16:33:40.7590753Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7590871Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7590958Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7591028Z         try:
2025-02-24T16:33:40.7591170Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7591252Z         except KeyError:
2025-02-24T16:33:40.7591396Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7591463Z     
2025-02-24T16:33:40.7591556Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7591654Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7591742Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7591878Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7591963Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7592056Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7592300Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7592381Z             else:
2025-02-24T16:33:40.7592480Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7592585Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7592590Z 
2025-02-24T16:33:40.7592717Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7592829Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7592982Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7593050Z     ???
2025-02-24T16:33:40.7593163Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7593167Z 
2025-02-24T16:33:40.7593243Z >   ???
2025-02-24T16:33:40.7593367Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7593442Z E   
2025-02-24T16:33:40.7593566Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7593683Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7593759Z E          ...
2025-02-24T16:33:40.7593845Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7593977Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7594088Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7594160Z E          ...
2025-02-24T16:33:40.7594323Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7594451Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7594558Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7594562Z 
2025-02-24T16:33:40.7594649Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7594909Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] _
2025-02-24T16:33:40.7594914Z 
2025-02-24T16:33:40.7595132Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff51233b950>
2025-02-24T16:33:40.7595306Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff51233a1e0>
2025-02-24T16:33:40.7595399Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.7595403Z 
2025-02-24T16:33:40.7595537Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7595653Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7595735Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7595812Z         try:
2025-02-24T16:33:40.7595949Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7596032Z         except KeyError:
2025-02-24T16:33:40.7596171Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7596239Z     
2025-02-24T16:33:40.7596329Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7596419Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7596510Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7596639Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7596729Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7596822Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7596928Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7596932Z 
2025-02-24T16:33:40.7597058Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7597168Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7597175Z 
2025-02-24T16:33:40.7597438Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7597530Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7597641Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7597725Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7597861Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7597947Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7598178Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7598261Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7598340Z err_msg = None
2025-02-24T16:33:40.7598344Z 
2025-02-24T16:33:40.7598451Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7598536Z         if err_msg is None:
2025-02-24T16:33:40.7598633Z             if left.shape != right.shape:
2025-02-24T16:33:40.7598722Z                 raise_assert_detail(
2025-02-24T16:33:40.7598870Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7598939Z                 )
2025-02-24T16:33:40.7599010Z     
2025-02-24T16:33:40.7599081Z             diff = 0
2025-02-24T16:33:40.7599197Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7599287Z                 # count up differences
2025-02-24T16:33:40.7599461Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7599575Z                     diff += 1
2025-02-24T16:33:40.7599688Z     
2025-02-24T16:33:40.7599853Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7600089Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7600312Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7600565Z E           AssertionError: Series are different
2025-02-24T16:33:40.7600641Z E           
2025-02-24T16:33:40.7600748Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.7601120Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7601455Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7601791Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7601796Z 
2025-02-24T16:33:40.7602102Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7602364Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] _
2025-02-24T16:33:40.7602369Z 
2025-02-24T16:33:40.7602595Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff51233ba10>
2025-02-24T16:33:40.7602764Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff51233a1e0>
2025-02-24T16:33:40.7602861Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.7602868Z 
2025-02-24T16:33:40.7603003Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7603120Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7603211Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7603280Z         try:
2025-02-24T16:33:40.7603422Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7603506Z         except KeyError:
2025-02-24T16:33:40.7603650Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7603717Z     
2025-02-24T16:33:40.7603810Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7604007Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7604098Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7604237Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7604320Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7604412Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7604528Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7604532Z 
2025-02-24T16:33:40.7604654Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7604767Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7604771Z 
2025-02-24T16:33:40.7604905Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7604991Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7605103Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7605185Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7605330Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7605410Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7605519Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7605594Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7605751Z err_msg = None
2025-02-24T16:33:40.7605755Z 
2025-02-24T16:33:40.7605870Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7605948Z         if err_msg is None:
2025-02-24T16:33:40.7606045Z             if left.shape != right.shape:
2025-02-24T16:33:40.7606128Z                 raise_assert_detail(
2025-02-24T16:33:40.7606274Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7606344Z                 )
2025-02-24T16:33:40.7606416Z     
2025-02-24T16:33:40.7606492Z             diff = 0
2025-02-24T16:33:40.7606604Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7606697Z                 # count up differences
2025-02-24T16:33:40.7606864Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7606945Z                     diff += 1
2025-02-24T16:33:40.7607012Z     
2025-02-24T16:33:40.7607102Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7607381Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7607555Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7607662Z E           AssertionError: Series are different
2025-02-24T16:33:40.7607732Z E           
2025-02-24T16:33:40.7607836Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.7608212Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7608584Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7609097Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7609104Z 
2025-02-24T16:33:40.7609415Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7609619Z ____ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-nu] _____
2025-02-24T16:33:40.7609626Z 
2025-02-24T16:33:40.7609756Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7609889Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7609985Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7610118Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7610240Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7610339Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7610418Z err_msg = None
2025-02-24T16:33:40.7610422Z 
2025-02-24T16:33:40.7610527Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7610612Z         if err_msg is None:
2025-02-24T16:33:40.7610705Z             if left.shape != right.shape:
2025-02-24T16:33:40.7610899Z                 raise_assert_detail(
2025-02-24T16:33:40.7611045Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7611114Z                 )
2025-02-24T16:33:40.7611185Z     
2025-02-24T16:33:40.7611256Z             diff = 0
2025-02-24T16:33:40.7611369Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7611456Z                 # count up differences
2025-02-24T16:33:40.7611628Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7611709Z                     diff += 1
2025-02-24T16:33:40.7611782Z     
2025-02-24T16:33:40.7611870Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7612002Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7612174Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7612285Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7612364Z E           
2025-02-24T16:33:40.7612480Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7612741Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7613008Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7613014Z 
2025-02-24T16:33:40.7613317Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7613325Z 
2025-02-24T16:33:40.7613491Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7613495Z 
2025-02-24T16:33:40.7613722Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff51233bc50>
2025-02-24T16:33:40.7613922Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff51233a1e0>, attr = 'nu'
2025-02-24T16:33:40.7613931Z 
2025-02-24T16:33:40.7614067Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7614186Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7614268Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7614425Z         try:
2025-02-24T16:33:40.7614566Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7614650Z         except KeyError:
2025-02-24T16:33:40.7614796Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7614864Z     
2025-02-24T16:33:40.7614955Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7615050Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7615142Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7615271Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7615360Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7615454Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7615563Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7615567Z 
2025-02-24T16:33:40.7615696Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7615810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7615959Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7616030Z     ???
2025-02-24T16:33:40.7616142Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7616146Z 
2025-02-24T16:33:40.7616217Z >   ???
2025-02-24T16:33:40.7616342Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7616494Z E   
2025-02-24T16:33:40.7616622Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7616736Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7616805Z E          ...
2025-02-24T16:33:40.7616896Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7617031Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7617141Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7617214Z E          ...
2025-02-24T16:33:40.7617416Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7617547Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7617657Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7617662Z 
2025-02-24T16:33:40.7617750Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7617978Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] _
2025-02-24T16:33:40.7617986Z 
2025-02-24T16:33:40.7618157Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7618392Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7618564Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7618761Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7618892Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7618991Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7619070Z err_msg = None
2025-02-24T16:33:40.7619074Z 
2025-02-24T16:33:40.7619187Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7619268Z         if err_msg is None:
2025-02-24T16:33:40.7619367Z             if left.shape != right.shape:
2025-02-24T16:33:40.7619455Z                 raise_assert_detail(
2025-02-24T16:33:40.7619604Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7619673Z                 )
2025-02-24T16:33:40.7619744Z     
2025-02-24T16:33:40.7619820Z             diff = 0
2025-02-24T16:33:40.7619931Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7620024Z                 # count up differences
2025-02-24T16:33:40.7620190Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7620275Z                     diff += 1
2025-02-24T16:33:40.7620342Z     
2025-02-24T16:33:40.7620582Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7620728Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7620896Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7621009Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7621082Z E           
2025-02-24T16:33:40.7621196Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7621451Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7621719Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7621723Z 
2025-02-24T16:33:40.7622032Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7622037Z 
2025-02-24T16:33:40.7622314Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7622319Z 
2025-02-24T16:33:40.7622541Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff51233bd10>
2025-02-24T16:33:40.7622718Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff51233a1e0>
2025-02-24T16:33:40.7622796Z attr = 'wavelength_cm'
2025-02-24T16:33:40.7622800Z 
2025-02-24T16:33:40.7622940Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7623058Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7623145Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7623219Z         try:
2025-02-24T16:33:40.7623358Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7623442Z         except KeyError:
2025-02-24T16:33:40.7623577Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7623649Z     
2025-02-24T16:33:40.7623740Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7623837Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7623930Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7624059Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7624150Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7624238Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7624352Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7624356Z 
2025-02-24T16:33:40.7624488Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7624603Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7624751Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7624820Z     ???
2025-02-24T16:33:40.7624932Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7624937Z 
2025-02-24T16:33:40.7625009Z >   ???
2025-02-24T16:33:40.7625139Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7625211Z E   
2025-02-24T16:33:40.7625339Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7625454Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7625524Z E          ...
2025-02-24T16:33:40.7625615Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7625749Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7625859Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7625934Z E          ...
2025-02-24T16:33:40.7626102Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7626232Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7626336Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7626339Z 
2025-02-24T16:33:40.7626432Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7626637Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-f_lu] ____
2025-02-24T16:33:40.7626645Z 
2025-02-24T16:33:40.7626771Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7626900Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7626994Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7627130Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7627371Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7627466Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7627544Z err_msg = None
2025-02-24T16:33:40.7627548Z 
2025-02-24T16:33:40.7627655Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7627740Z         if err_msg is None:
2025-02-24T16:33:40.7627836Z             if left.shape != right.shape:
2025-02-24T16:33:40.7628034Z                 raise_assert_detail(
2025-02-24T16:33:40.7628180Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7628250Z                 )
2025-02-24T16:33:40.7628321Z     
2025-02-24T16:33:40.7628391Z             diff = 0
2025-02-24T16:33:40.7628505Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7628597Z                 # count up differences
2025-02-24T16:33:40.7628767Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7628849Z                     diff += 1
2025-02-24T16:33:40.7628920Z     
2025-02-24T16:33:40.7629011Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7629144Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7629316Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7629430Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7629504Z E           
2025-02-24T16:33:40.7629618Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7629877Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7630146Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7630151Z 
2025-02-24T16:33:40.7630459Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7630467Z 
2025-02-24T16:33:40.7630632Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7630635Z 
2025-02-24T16:33:40.7630859Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff51233bdd0>
2025-02-24T16:33:40.7631066Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff51233a1e0>, attr = 'f_lu'
2025-02-24T16:33:40.7631070Z 
2025-02-24T16:33:40.7631202Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7631317Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7631400Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7631585Z         try:
2025-02-24T16:33:40.7631731Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7631810Z         except KeyError:
2025-02-24T16:33:40.7631948Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7632015Z     
2025-02-24T16:33:40.7632102Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7632196Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7632286Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7632421Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7632505Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7632597Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7632704Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7632707Z 
2025-02-24T16:33:40.7632835Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7632948Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7633095Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7633167Z     ???
2025-02-24T16:33:40.7633277Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7633281Z 
2025-02-24T16:33:40.7633353Z >   ???
2025-02-24T16:33:40.7633477Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7633629Z E   
2025-02-24T16:33:40.7633763Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7633872Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7633946Z E          ...
2025-02-24T16:33:40.7634030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7634163Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7634273Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7634348Z E          ...
2025-02-24T16:33:40.7634440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7634562Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7634669Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7634673Z 
2025-02-24T16:33:40.7634762Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7634989Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] _
2025-02-24T16:33:40.7634996Z 
2025-02-24T16:33:40.7635128Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7635255Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7635353Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7635485Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7635615Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7635713Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7635785Z err_msg = None
2025-02-24T16:33:40.7635789Z 
2025-02-24T16:33:40.7635901Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7635982Z         if err_msg is None:
2025-02-24T16:33:40.7636078Z             if left.shape != right.shape:
2025-02-24T16:33:40.7636200Z                 raise_assert_detail(
2025-02-24T16:33:40.7636457Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7636584Z                 )
2025-02-24T16:33:40.7636704Z     
2025-02-24T16:33:40.7636823Z             diff = 0
2025-02-24T16:33:40.7636937Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7637028Z                 # count up differences
2025-02-24T16:33:40.7637197Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7637440Z                     diff += 1
2025-02-24T16:33:40.7637668Z     
2025-02-24T16:33:40.7637769Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7637920Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7638091Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7638209Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7638286Z E           
2025-02-24T16:33:40.7638401Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7638662Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7638928Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7638932Z 
2025-02-24T16:33:40.7639243Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7639349Z 
2025-02-24T16:33:40.7639529Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7639533Z 
2025-02-24T16:33:40.7639756Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512160590>
2025-02-24T16:33:40.7639929Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff51233a1e0>
2025-02-24T16:33:40.7640012Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.7640016Z 
2025-02-24T16:33:40.7640153Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7640269Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7640355Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7640429Z         try:
2025-02-24T16:33:40.7640567Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7640651Z         except KeyError:
2025-02-24T16:33:40.7640792Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7640859Z     
2025-02-24T16:33:40.7640949Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7641043Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7641134Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7641266Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7641354Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7641445Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7641553Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7641629Z             else:
2025-02-24T16:33:40.7641723Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7641836Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7641840Z 
2025-02-24T16:33:40.7641964Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7642079Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7642227Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7642300Z     ???
2025-02-24T16:33:40.7642412Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7642416Z 
2025-02-24T16:33:40.7642483Z >   ???
2025-02-24T16:33:40.7642613Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7642684Z E   
2025-02-24T16:33:40.7642810Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7642922Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7642992Z E          ...
2025-02-24T16:33:40.7643082Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7643316Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7643437Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7643511Z E          ...
2025-02-24T16:33:40.7643594Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7643723Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7643832Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7643836Z 
2025-02-24T16:33:40.7643928Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7644147Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] _
2025-02-24T16:33:40.7644156Z 
2025-02-24T16:33:40.7644283Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7644415Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7644508Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7644649Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7644769Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7644865Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7644942Z err_msg = None
2025-02-24T16:33:40.7645024Z 
2025-02-24T16:33:40.7645135Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7645223Z         if err_msg is None:
2025-02-24T16:33:40.7645318Z             if left.shape != right.shape:
2025-02-24T16:33:40.7645406Z                 raise_assert_detail(
2025-02-24T16:33:40.7645552Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7645621Z                 )
2025-02-24T16:33:40.7645692Z     
2025-02-24T16:33:40.7645763Z             diff = 0
2025-02-24T16:33:40.7645875Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7645965Z                 # count up differences
2025-02-24T16:33:40.7646139Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7646221Z                     diff += 1
2025-02-24T16:33:40.7646287Z     
2025-02-24T16:33:40.7646378Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7646513Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7646688Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7646797Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7646872Z E           
2025-02-24T16:33:40.7646988Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7647376Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7647644Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7647652Z 
2025-02-24T16:33:40.7647966Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7647970Z 
2025-02-24T16:33:40.7648138Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7648142Z 
2025-02-24T16:33:40.7648372Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512160650>
2025-02-24T16:33:40.7648543Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff51233a1e0>
2025-02-24T16:33:40.7648736Z attr = 'beta_sobolev'
2025-02-24T16:33:40.7648741Z 
2025-02-24T16:33:40.7648886Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7649000Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7649089Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7649157Z         try:
2025-02-24T16:33:40.7649304Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7649394Z         except KeyError:
2025-02-24T16:33:40.7649533Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7649603Z     
2025-02-24T16:33:40.7649690Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7649784Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7649871Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7650004Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7650097Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7650185Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7650300Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7650371Z             else:
2025-02-24T16:33:40.7650472Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7650577Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7650581Z 
2025-02-24T16:33:40.7650711Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7650939Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7651085Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7651161Z     ???
2025-02-24T16:33:40.7651267Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7651271Z 
2025-02-24T16:33:40.7651342Z >   ???
2025-02-24T16:33:40.7651472Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7651539Z E   
2025-02-24T16:33:40.7651669Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7651783Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7651857Z E          ...
2025-02-24T16:33:40.7651942Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7652076Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7652192Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7652265Z E          ...
2025-02-24T16:33:40.7652354Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7652478Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7652587Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7652592Z 
2025-02-24T16:33:40.7652680Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7652890Z __ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-j_blues] __
2025-02-24T16:33:40.7652894Z 
2025-02-24T16:33:40.7653032Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7653160Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7653259Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7653396Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7653524Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7653623Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7653696Z err_msg = None
2025-02-24T16:33:40.7653700Z 
2025-02-24T16:33:40.7653813Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7653893Z         if err_msg is None:
2025-02-24T16:33:40.7653992Z             if left.shape != right.shape:
2025-02-24T16:33:40.7654080Z                 raise_assert_detail(
2025-02-24T16:33:40.7654223Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7654385Z                 )
2025-02-24T16:33:40.7654454Z     
2025-02-24T16:33:40.7654530Z             diff = 0
2025-02-24T16:33:40.7654704Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7654866Z                 # count up differences
2025-02-24T16:33:40.7655177Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7655279Z                     diff += 1
2025-02-24T16:33:40.7655354Z     
2025-02-24T16:33:40.7655442Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7655584Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7655751Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7655866Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7655940Z E           
2025-02-24T16:33:40.7656052Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7656318Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7656582Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7656733Z 
2025-02-24T16:33:40.7657042Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7657046Z 
2025-02-24T16:33:40.7657219Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7657223Z 
2025-02-24T16:33:40.7657588Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121607d0>
2025-02-24T16:33:40.7657759Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff51233a1e0>
2025-02-24T16:33:40.7657836Z attr = 'j_blues'
2025-02-24T16:33:40.7657840Z 
2025-02-24T16:33:40.7657975Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7658093Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7658180Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7658253Z         try:
2025-02-24T16:33:40.7658396Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7658475Z         except KeyError:
2025-02-24T16:33:40.7658617Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7658683Z     
2025-02-24T16:33:40.7658772Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7658864Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7658956Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7659093Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7659178Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7659269Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7659376Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7659451Z             else:
2025-02-24T16:33:40.7659548Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7659659Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7659663Z 
2025-02-24T16:33:40.7659791Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7659900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7660047Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7660116Z     ???
2025-02-24T16:33:40.7660229Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7660233Z 
2025-02-24T16:33:40.7660425Z >   ???
2025-02-24T16:33:40.7660553Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7660625Z E   
2025-02-24T16:33:40.7660753Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7660868Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7660938Z E          ...
2025-02-24T16:33:40.7661032Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7661164Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7661274Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7661347Z E          ...
2025-02-24T16:33:40.7661434Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7661562Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7661665Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7661669Z 
2025-02-24T16:33:40.7661764Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7661980Z __ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines] ___
2025-02-24T16:33:40.7661984Z 
2025-02-24T16:33:40.7662119Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7662260Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7662502Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7662640Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7662770Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7662862Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7662942Z err_msg = None
2025-02-24T16:33:40.7662946Z 
2025-02-24T16:33:40.7663059Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7663145Z         if err_msg is None:
2025-02-24T16:33:40.7663252Z             if left.shape != right.shape:
2025-02-24T16:33:40.7663335Z                 raise_assert_detail(
2025-02-24T16:33:40.7663483Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7663554Z                 )
2025-02-24T16:33:40.7663629Z     
2025-02-24T16:33:40.7663702Z             diff = 0
2025-02-24T16:33:40.7663827Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7663919Z                 # count up differences
2025-02-24T16:33:40.7664090Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7664173Z                     diff += 1
2025-02-24T16:33:40.7664243Z     
2025-02-24T16:33:40.7664337Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7664474Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7664648Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7664765Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7664836Z E           
2025-02-24T16:33:40.7664951Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7665208Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7665479Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7665483Z 
2025-02-24T16:33:40.7665870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7665875Z 
2025-02-24T16:33:40.7666045Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7666049Z 
2025-02-24T16:33:40.7666278Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512161550>
2025-02-24T16:33:40.7666450Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c14a10>
2025-02-24T16:33:40.7666526Z attr = 'lines'
2025-02-24T16:33:40.7666530Z 
2025-02-24T16:33:40.7666669Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7666780Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7666873Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7666946Z         try:
2025-02-24T16:33:40.7667084Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7667167Z         except KeyError:
2025-02-24T16:33:40.7667424Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7667502Z     
2025-02-24T16:33:40.7667589Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7667686Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7667781Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7667911Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7668002Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7668202Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7668315Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7668386Z             else:
2025-02-24T16:33:40.7668486Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7668599Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7668603Z 
2025-02-24T16:33:40.7668726Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7668841Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7668987Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7669063Z     ???
2025-02-24T16:33:40.7669177Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7669181Z 
2025-02-24T16:33:40.7669249Z >   ???
2025-02-24T16:33:40.7669377Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7669445Z E   
2025-02-24T16:33:40.7669579Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7669689Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7669765Z E          ...
2025-02-24T16:33:40.7669855Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7669983Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7670100Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7670170Z E          ...
2025-02-24T16:33:40.7670260Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7670386Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7670496Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7670500Z 
2025-02-24T16:33:40.7670597Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7670859Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] _
2025-02-24T16:33:40.7670863Z 
2025-02-24T16:33:40.7671092Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512161610>
2025-02-24T16:33:40.7671258Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c14a10>
2025-02-24T16:33:40.7671352Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.7671356Z 
2025-02-24T16:33:40.7671494Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7671605Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7671694Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7671763Z         try:
2025-02-24T16:33:40.7683340Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7683523Z         except KeyError:
2025-02-24T16:33:40.7683701Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7683779Z     
2025-02-24T16:33:40.7683872Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7683979Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7684070Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7684228Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7684319Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7684414Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7684537Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7684543Z 
2025-02-24T16:33:40.7684680Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7684806Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7684811Z 
2025-02-24T16:33:40.7684957Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7685051Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7685166Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7685252Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7685400Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7685609Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7685720Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7685802Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7685879Z err_msg = None
2025-02-24T16:33:40.7685884Z 
2025-02-24T16:33:40.7686007Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7686090Z         if err_msg is None:
2025-02-24T16:33:40.7686191Z             if left.shape != right.shape:
2025-02-24T16:33:40.7686275Z                 raise_assert_detail(
2025-02-24T16:33:40.7686437Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7686509Z                 )
2025-02-24T16:33:40.7686584Z     
2025-02-24T16:33:40.7686662Z             diff = 0
2025-02-24T16:33:40.7686782Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7686876Z                 # count up differences
2025-02-24T16:33:40.7687059Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7687143Z                     diff += 1
2025-02-24T16:33:40.7687210Z     
2025-02-24T16:33:40.7687436Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7687588Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7687762Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7687875Z E           AssertionError: Series are different
2025-02-24T16:33:40.7687946Z E           
2025-02-24T16:33:40.7688060Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.7688441Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7688776Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7689229Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7689235Z 
2025-02-24T16:33:40.7689562Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7689833Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] _
2025-02-24T16:33:40.7689837Z 
2025-02-24T16:33:40.7690073Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121616d0>
2025-02-24T16:33:40.7690248Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c14a10>
2025-02-24T16:33:40.7690340Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.7690344Z 
2025-02-24T16:33:40.7690495Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7690617Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7690709Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7690785Z         try:
2025-02-24T16:33:40.7690934Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7691019Z         except KeyError:
2025-02-24T16:33:40.7691158Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7691338Z     
2025-02-24T16:33:40.7691427Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7691526Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7691621Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7691754Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7691846Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7691933Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7692047Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7692051Z 
2025-02-24T16:33:40.7692182Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7692303Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7692307Z 
2025-02-24T16:33:40.7692449Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7692533Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7692649Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7692728Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7692875Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7692966Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7693074Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7693159Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7693234Z err_msg = None
2025-02-24T16:33:40.7693238Z 
2025-02-24T16:33:40.7693359Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7693445Z         if err_msg is None:
2025-02-24T16:33:40.7693542Z             if left.shape != right.shape:
2025-02-24T16:33:40.7693632Z                 raise_assert_detail(
2025-02-24T16:33:40.7693779Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7693858Z                 )
2025-02-24T16:33:40.7693929Z     
2025-02-24T16:33:40.7694007Z             diff = 0
2025-02-24T16:33:40.7694120Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7694214Z                 # count up differences
2025-02-24T16:33:40.7694391Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7694472Z                     diff += 1
2025-02-24T16:33:40.7694544Z     
2025-02-24T16:33:40.7694634Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7694859Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7695041Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7695146Z E           AssertionError: Series are different
2025-02-24T16:33:40.7695221Z E           
2025-02-24T16:33:40.7695324Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.7695702Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7696093Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7696466Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7696577Z 
2025-02-24T16:33:40.7696898Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7697115Z ____ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-nu] ____
2025-02-24T16:33:40.7697119Z 
2025-02-24T16:33:40.7697382Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7697520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7697627Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7697762Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7697949Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7698119Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7698253Z err_msg = None
2025-02-24T16:33:40.7698260Z 
2025-02-24T16:33:40.7698458Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7698550Z         if err_msg is None:
2025-02-24T16:33:40.7698649Z             if left.shape != right.shape:
2025-02-24T16:33:40.7698734Z                 raise_assert_detail(
2025-02-24T16:33:40.7698890Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7698966Z                 )
2025-02-24T16:33:40.7699039Z     
2025-02-24T16:33:40.7699115Z             diff = 0
2025-02-24T16:33:40.7699228Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7699319Z                 # count up differences
2025-02-24T16:33:40.7699491Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7699607Z                     diff += 1
2025-02-24T16:33:40.7699674Z     
2025-02-24T16:33:40.7699767Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7699908Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7700075Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7700192Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7700262Z E           
2025-02-24T16:33:40.7700381Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7700772Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7701034Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7701043Z 
2025-02-24T16:33:40.7701352Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7701356Z 
2025-02-24T16:33:40.7701532Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7701540Z 
2025-02-24T16:33:40.7701766Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512161910>
2025-02-24T16:33:40.7701971Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c14a10>, attr = 'nu'
2025-02-24T16:33:40.7701975Z 
2025-02-24T16:33:40.7702115Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7702235Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7702427Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7702495Z         try:
2025-02-24T16:33:40.7702636Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7702716Z         except KeyError:
2025-02-24T16:33:40.7702859Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7702927Z     
2025-02-24T16:33:40.7703019Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7703115Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7703204Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7703342Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7703426Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7703523Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7703633Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7703637Z 
2025-02-24T16:33:40.7703769Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7703889Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7704036Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7704112Z     ???
2025-02-24T16:33:40.7704221Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7704225Z 
2025-02-24T16:33:40.7704298Z >   ???
2025-02-24T16:33:40.7704429Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7704497Z E   
2025-02-24T16:33:40.7704631Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7704742Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7704818Z E          ...
2025-02-24T16:33:40.7704908Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7705044Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7705158Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7705231Z E          ...
2025-02-24T16:33:40.7705320Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7705442Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7705552Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7705556Z 
2025-02-24T16:33:40.7705643Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7705880Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] _
2025-02-24T16:33:40.7705884Z 
2025-02-24T16:33:40.7706102Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7706236Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7706337Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7706467Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7706602Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7706698Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7706771Z err_msg = None
2025-02-24T16:33:40.7706775Z 
2025-02-24T16:33:40.7706892Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7706972Z         if err_msg is None:
2025-02-24T16:33:40.7707071Z             if left.shape != right.shape:
2025-02-24T16:33:40.7707160Z                 raise_assert_detail(
2025-02-24T16:33:40.7707414Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7707490Z                 )
2025-02-24T16:33:40.7707558Z     
2025-02-24T16:33:40.7707634Z             diff = 0
2025-02-24T16:33:40.7707746Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7707840Z                 # count up differences
2025-02-24T16:33:40.7708014Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7708209Z                     diff += 1
2025-02-24T16:33:40.7708325Z     
2025-02-24T16:33:40.7708483Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7708727Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7708946Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7709065Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7709141Z E           
2025-02-24T16:33:40.7709251Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7709522Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7709785Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7709792Z 
2025-02-24T16:33:40.7710095Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7710099Z 
2025-02-24T16:33:40.7710273Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7710281Z 
2025-02-24T16:33:40.7710512Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121619d0>
2025-02-24T16:33:40.7710679Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c14a10>
2025-02-24T16:33:40.7710764Z attr = 'wavelength_cm'
2025-02-24T16:33:40.7710769Z 
2025-02-24T16:33:40.7710906Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7711028Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7711112Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7711187Z         try:
2025-02-24T16:33:40.7711333Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7711413Z         except KeyError:
2025-02-24T16:33:40.7711562Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7711629Z     
2025-02-24T16:33:40.7711723Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7711817Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7712033Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7712178Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7712262Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7712356Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7712470Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7712474Z 
2025-02-24T16:33:40.7712612Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7712730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7712880Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7712954Z     ???
2025-02-24T16:33:40.7713065Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7713069Z 
2025-02-24T16:33:40.7713143Z >   ???
2025-02-24T16:33:40.7713271Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7713343Z E   
2025-02-24T16:33:40.7713480Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7713591Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7713666Z E          ...
2025-02-24T16:33:40.7713754Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7713889Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7714083Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7714157Z E          ...
2025-02-24T16:33:40.7714245Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7714367Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7714479Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7714483Z 
2025-02-24T16:33:40.7714578Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7714792Z ___ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-f_lu] ___
2025-02-24T16:33:40.7714796Z 
2025-02-24T16:33:40.7714934Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7715062Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7715165Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7715299Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7715428Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7715535Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7715619Z err_msg = None
2025-02-24T16:33:40.7715623Z 
2025-02-24T16:33:40.7715737Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7715827Z         if err_msg is None:
2025-02-24T16:33:40.7715924Z             if left.shape != right.shape:
2025-02-24T16:33:40.7716011Z                 raise_assert_detail(
2025-02-24T16:33:40.7716158Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7716233Z                 )
2025-02-24T16:33:40.7716305Z     
2025-02-24T16:33:40.7716376Z             diff = 0
2025-02-24T16:33:40.7716493Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7716582Z                 # count up differences
2025-02-24T16:33:40.7716759Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7716842Z                     diff += 1
2025-02-24T16:33:40.7716916Z     
2025-02-24T16:33:40.7717011Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7717153Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7717466Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7717581Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7717657Z E           
2025-02-24T16:33:40.7717906Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7718176Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7718446Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7718451Z 
2025-02-24T16:33:40.7718761Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7718772Z 
2025-02-24T16:33:40.7718943Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7718951Z 
2025-02-24T16:33:40.7719178Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512161a90>
2025-02-24T16:33:40.7719380Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c14a10>, attr = 'f_lu'
2025-02-24T16:33:40.7719384Z 
2025-02-24T16:33:40.7719527Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7719757Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7719841Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7719916Z         try:
2025-02-24T16:33:40.7720056Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7720139Z         except KeyError:
2025-02-24T16:33:40.7720279Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7720353Z     
2025-02-24T16:33:40.7720443Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7720535Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7720635Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7720766Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7720855Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7720943Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7721057Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7721061Z 
2025-02-24T16:33:40.7721196Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7721308Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7721458Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7721528Z     ???
2025-02-24T16:33:40.7721642Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7721646Z 
2025-02-24T16:33:40.7721719Z >   ???
2025-02-24T16:33:40.7721845Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7721917Z E   
2025-02-24T16:33:40.7722046Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7722161Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7722231Z E          ...
2025-02-24T16:33:40.7722324Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7722457Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7722568Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7722648Z E          ...
2025-02-24T16:33:40.7722731Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7722859Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7722963Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7722967Z 
2025-02-24T16:33:40.7723060Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7723291Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] _
2025-02-24T16:33:40.7723296Z 
2025-02-24T16:33:40.7723511Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7723647Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7723744Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7723880Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7724011Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7724103Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7724181Z err_msg = None
2025-02-24T16:33:40.7724185Z 
2025-02-24T16:33:40.7724295Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7724380Z         if err_msg is None:
2025-02-24T16:33:40.7724481Z             if left.shape != right.shape:
2025-02-24T16:33:40.7724565Z                 raise_assert_detail(
2025-02-24T16:33:40.7724719Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7724788Z                 )
2025-02-24T16:33:40.7724860Z     
2025-02-24T16:33:40.7724931Z             diff = 0
2025-02-24T16:33:40.7725047Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7725141Z                 # count up differences
2025-02-24T16:33:40.7725327Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7725601Z                     diff += 1
2025-02-24T16:33:40.7725727Z     
2025-02-24T16:33:40.7725891Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7726042Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7726224Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7726345Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7726418Z E           
2025-02-24T16:33:40.7726545Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7726808Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7727079Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7727083Z 
2025-02-24T16:33:40.7727507Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7727512Z 
2025-02-24T16:33:40.7727684Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7727692Z 
2025-02-24T16:33:40.7727924Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512162210>
2025-02-24T16:33:40.7728097Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c14a10>
2025-02-24T16:33:40.7728175Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.7728179Z 
2025-02-24T16:33:40.7728322Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7728442Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7728534Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7728606Z         try:
2025-02-24T16:33:40.7728748Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7728832Z         except KeyError:
2025-02-24T16:33:40.7728974Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7729045Z     
2025-02-24T16:33:40.7729130Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7729229Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7729444Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7729585Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7729674Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7729763Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7729880Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7729954Z             else:
2025-02-24T16:33:40.7730052Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7730163Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7730167Z 
2025-02-24T16:33:40.7730292Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7730409Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7730555Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7730628Z     ???
2025-02-24T16:33:40.7730745Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7730749Z 
2025-02-24T16:33:40.7730817Z >   ???
2025-02-24T16:33:40.7730947Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7731015Z E   
2025-02-24T16:33:40.7731147Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7731258Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7731471Z E          ...
2025-02-24T16:33:40.7731567Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7731695Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7731811Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7731880Z E          ...
2025-02-24T16:33:40.7731971Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7732094Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7732209Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7732214Z 
2025-02-24T16:33:40.7732312Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7732535Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] _
2025-02-24T16:33:40.7732540Z 
2025-02-24T16:33:40.7732678Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7732806Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7732912Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7733050Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7733171Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7733269Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7733342Z err_msg = None
2025-02-24T16:33:40.7733346Z 
2025-02-24T16:33:40.7733465Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7733553Z         if err_msg is None:
2025-02-24T16:33:40.7733649Z             if left.shape != right.shape:
2025-02-24T16:33:40.7733738Z                 raise_assert_detail(
2025-02-24T16:33:40.7733886Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7733963Z                 )
2025-02-24T16:33:40.7734032Z     
2025-02-24T16:33:40.7734112Z             diff = 0
2025-02-24T16:33:40.7734233Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7734321Z                 # count up differences
2025-02-24T16:33:40.7734496Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7734574Z                     diff += 1
2025-02-24T16:33:40.7734648Z     
2025-02-24T16:33:40.7734736Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7734881Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7735140Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7735256Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7735333Z E           
2025-02-24T16:33:40.7735447Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7735713Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7735981Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7735986Z 
2025-02-24T16:33:40.7736300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7736305Z 
2025-02-24T16:33:40.7736479Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7736483Z 
2025-02-24T16:33:40.7736713Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121622d0>
2025-02-24T16:33:40.7736955Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c14a10>
2025-02-24T16:33:40.7737040Z attr = 'beta_sobolev'
2025-02-24T16:33:40.7737044Z 
2025-02-24T16:33:40.7737181Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7737426Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7737521Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7737592Z         try:
2025-02-24T16:33:40.7737739Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7737818Z         except KeyError:
2025-02-24T16:33:40.7737964Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7738032Z     
2025-02-24T16:33:40.7738127Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7738225Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7738314Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7738453Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7738542Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7738634Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7738744Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7738822Z             else:
2025-02-24T16:33:40.7738922Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7739028Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7739033Z 
2025-02-24T16:33:40.7739163Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7739283Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7739433Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7739508Z     ???
2025-02-24T16:33:40.7739616Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7739620Z 
2025-02-24T16:33:40.7739691Z >   ???
2025-02-24T16:33:40.7739817Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7739894Z E   
2025-02-24T16:33:40.7740022Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7740138Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7740211Z E          ...
2025-02-24T16:33:40.7740298Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7740431Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7740543Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7740619Z E          ...
2025-02-24T16:33:40.7740841Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7740979Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7741090Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7741094Z 
2025-02-24T16:33:40.7741183Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7741406Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-j_blues] __
2025-02-24T16:33:40.7741414Z 
2025-02-24T16:33:40.7741546Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7741686Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7741789Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7741921Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7742052Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7742146Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7742226Z err_msg = None
2025-02-24T16:33:40.7742229Z 
2025-02-24T16:33:40.7742345Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7742425Z         if err_msg is None:
2025-02-24T16:33:40.7742525Z             if left.shape != right.shape:
2025-02-24T16:33:40.7742608Z                 raise_assert_detail(
2025-02-24T16:33:40.7742869Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7742939Z                 )
2025-02-24T16:33:40.7743013Z     
2025-02-24T16:33:40.7743089Z             diff = 0
2025-02-24T16:33:40.7743198Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7743290Z                 # count up differences
2025-02-24T16:33:40.7743461Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7743544Z                     diff += 1
2025-02-24T16:33:40.7743610Z     
2025-02-24T16:33:40.7743708Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7743875Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7744184Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7744384Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7744505Z E           
2025-02-24T16:33:40.7744626Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7744896Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7745158Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7745163Z 
2025-02-24T16:33:40.7745476Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7745480Z 
2025-02-24T16:33:40.7745657Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7745661Z 
2025-02-24T16:33:40.7745883Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512162450>
2025-02-24T16:33:40.7746056Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c14a10>
2025-02-24T16:33:40.7746134Z attr = 'j_blues'
2025-02-24T16:33:40.7746138Z 
2025-02-24T16:33:40.7746280Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7746400Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7746483Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7746646Z         try:
2025-02-24T16:33:40.7746790Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7746878Z         except KeyError:
2025-02-24T16:33:40.7747014Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7747088Z     
2025-02-24T16:33:40.7747181Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7747414Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7747515Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7747646Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7747737Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7747826Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7747943Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7748023Z             else:
2025-02-24T16:33:40.7748118Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7748235Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7748239Z 
2025-02-24T16:33:40.7748364Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7748484Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7748631Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7748703Z     ???
2025-02-24T16:33:40.7748939Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7748944Z 
2025-02-24T16:33:40.7749011Z >   ???
2025-02-24T16:33:40.7749149Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7749217Z E   
2025-02-24T16:33:40.7749346Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7749466Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7749537Z E          ...
2025-02-24T16:33:40.7749629Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7749759Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7749877Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7749948Z E          ...
2025-02-24T16:33:40.7750037Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7750165Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7750271Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7750278Z 
2025-02-24T16:33:40.7750375Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7750580Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines] ___
2025-02-24T16:33:40.7750583Z 
2025-02-24T16:33:40.7750718Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7750851Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7750948Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7751092Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7751212Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7751309Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7751387Z err_msg = None
2025-02-24T16:33:40.7751390Z 
2025-02-24T16:33:40.7751504Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7751590Z         if err_msg is None:
2025-02-24T16:33:40.7751684Z             if left.shape != right.shape:
2025-02-24T16:33:40.7751774Z                 raise_assert_detail(
2025-02-24T16:33:40.7751917Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7751994Z                 )
2025-02-24T16:33:40.7752067Z     
2025-02-24T16:33:40.7752141Z             diff = 0
2025-02-24T16:33:40.7752256Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7752456Z                 # count up differences
2025-02-24T16:33:40.7752635Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7752712Z                     diff += 1
2025-02-24T16:33:40.7752785Z     
2025-02-24T16:33:40.7752878Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7753015Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7753194Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7753306Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7753387Z E           
2025-02-24T16:33:40.7753495Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7753765Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7754030Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7754110Z 
2025-02-24T16:33:40.7754419Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7754424Z 
2025-02-24T16:33:40.7754590Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7754595Z 
2025-02-24T16:33:40.7754827Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121631d0>
2025-02-24T16:33:40.7754992Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4d788a9c0>
2025-02-24T16:33:40.7755073Z attr = 'lines'
2025-02-24T16:33:40.7755077Z 
2025-02-24T16:33:40.7755222Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7755337Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7755425Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7755495Z         try:
2025-02-24T16:33:40.7755639Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7755722Z         except KeyError:
2025-02-24T16:33:40.7755864Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7755936Z     
2025-02-24T16:33:40.7756023Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7756125Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7756213Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7756350Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7756434Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7756526Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7756646Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7756717Z             else:
2025-02-24T16:33:40.7756815Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7756919Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7756923Z 
2025-02-24T16:33:40.7757052Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7757172Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7757447Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7757522Z     ???
2025-02-24T16:33:40.7757630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7757634Z 
2025-02-24T16:33:40.7757705Z >   ???
2025-02-24T16:33:40.7757829Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7757905Z E   
2025-02-24T16:33:40.7758036Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7758270Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7758348Z E          ...
2025-02-24T16:33:40.7758434Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7758565Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7758677Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7758750Z E          ...
2025-02-24T16:33:40.7758842Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7758966Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7759073Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7759077Z 
2025-02-24T16:33:40.7759165Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7759440Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] _
2025-02-24T16:33:40.7759445Z 
2025-02-24T16:33:40.7759668Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512163290>
2025-02-24T16:33:40.7759833Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4d788a9c0>
2025-02-24T16:33:40.7759929Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.7759933Z 
2025-02-24T16:33:40.7760068Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7760185Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7760274Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7760475Z         try:
2025-02-24T16:33:40.7760620Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7760698Z         except KeyError:
2025-02-24T16:33:40.7760838Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7760905Z     
2025-02-24T16:33:40.7761091Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7761188Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7761276Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7761507Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7761652Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7761815Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7762325Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7762638Z 
2025-02-24T16:33:40.7762839Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7763339Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7763674Z 
2025-02-24T16:33:40.7763897Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7764385Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7764832Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7765333Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7765875Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7766450Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7766944Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7767640Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7768063Z err_msg = None
2025-02-24T16:33:40.7768269Z 
2025-02-24T16:33:40.7768474Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7768964Z         if err_msg is None:
2025-02-24T16:33:40.7769388Z             if left.shape != right.shape:
2025-02-24T16:33:40.7769854Z                 raise_assert_detail(
2025-02-24T16:33:40.7770419Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7770930Z                 )
2025-02-24T16:33:40.7771233Z     
2025-02-24T16:33:40.7771524Z             diff = 0
2025-02-24T16:33:40.7771810Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7772104Z                 # count up differences
2025-02-24T16:33:40.7772592Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7772940Z                     diff += 1
2025-02-24T16:33:40.7773152Z     
2025-02-24T16:33:40.7773335Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7773643Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7774039Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7774414Z E           AssertionError: Series are different
2025-02-24T16:33:40.7774674Z E           
2025-02-24T16:33:40.7774879Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.7775443Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7776231Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7777090Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7777714Z 
2025-02-24T16:33:40.7778272Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7779189Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] _
2025-02-24T16:33:40.7779545Z 
2025-02-24T16:33:40.7779770Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512163350>
2025-02-24T16:33:40.7780253Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4d788a9c0>
2025-02-24T16:33:40.7780597Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.7780759Z 
2025-02-24T16:33:40.7780905Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7781244Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7781532Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7781750Z         try:
2025-02-24T16:33:40.7782117Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7782634Z         except KeyError:
2025-02-24T16:33:40.7783064Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7783355Z     
2025-02-24T16:33:40.7783540Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7783789Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7784053Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7784359Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7784664Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7784908Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7785199Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7785392Z 
2025-02-24T16:33:40.7785528Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7785858Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7786061Z 
2025-02-24T16:33:40.7786205Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7786519Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7786795Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7787207Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7787697Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7788017Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7788292Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7788571Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7788803Z err_msg = None
2025-02-24T16:33:40.7788916Z 
2025-02-24T16:33:40.7789035Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7789318Z         if err_msg is None:
2025-02-24T16:33:40.7789555Z             if left.shape != right.shape:
2025-02-24T16:33:40.7789822Z                 raise_assert_detail(
2025-02-24T16:33:40.7790128Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7790432Z                 )
2025-02-24T16:33:40.7790611Z     
2025-02-24T16:33:40.7790776Z             diff = 0
2025-02-24T16:33:40.7791012Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7791299Z                 # count up differences
2025-02-24T16:33:40.7791635Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7791978Z                     diff += 1
2025-02-24T16:33:40.7792191Z     
2025-02-24T16:33:40.7792497Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7792804Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7793201Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7793567Z E           AssertionError: Series are different
2025-02-24T16:33:40.7793823Z E           
2025-02-24T16:33:40.7794029Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.7794590Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7795415Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7796246Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7796707Z 
2025-02-24T16:33:40.7797024Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7797749Z ____ TestPlasma.test_plasma_properties[disable_electron_scattering:True-nu] ____
2025-02-24T16:33:40.7798044Z 
2025-02-24T16:33:40.7798179Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7798525Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7798838Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7799159Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7799661Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7799982Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7800237Z err_msg = None
2025-02-24T16:33:40.7800347Z 
2025-02-24T16:33:40.7800530Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7800995Z         if err_msg is None:
2025-02-24T16:33:40.7801381Z             if left.shape != right.shape:
2025-02-24T16:33:40.7801699Z                 raise_assert_detail(
2025-02-24T16:33:40.7802003Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7802311Z                 )
2025-02-24T16:33:40.7802491Z     
2025-02-24T16:33:40.7802653Z             diff = 0
2025-02-24T16:33:40.7802885Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7803167Z                 # count up differences
2025-02-24T16:33:40.7803500Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7803838Z                     diff += 1
2025-02-24T16:33:40.7804051Z     
2025-02-24T16:33:40.7804229Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7804541Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7804931Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7805303Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7805698Z E           
2025-02-24T16:33:40.7805914Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7806368Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7806979Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7807432Z 
2025-02-24T16:33:40.7807751Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7808166Z 
2025-02-24T16:33:40.7808340Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7808597Z 
2025-02-24T16:33:40.7808821Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512163590>
2025-02-24T16:33:40.7809329Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4d788a9c0>, attr = 'nu'
2025-02-24T16:33:40.7809619Z 
2025-02-24T16:33:40.7809763Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7810102Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7810400Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7810618Z         try:
2025-02-24T16:33:40.7810866Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7811172Z         except KeyError:
2025-02-24T16:33:40.7811442Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7811734Z     
2025-02-24T16:33:40.7811913Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7812167Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7812436Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7812738Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7813042Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7813287Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7813570Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7813767Z 
2025-02-24T16:33:40.7813893Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7814334Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7814686Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7814989Z     ???
2025-02-24T16:33:40.7815197Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7815394Z 
2025-02-24T16:33:40.7815467Z >   ???
2025-02-24T16:33:40.7815688Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7815968Z E   
2025-02-24T16:33:40.7816186Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7816511Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7816774Z E          ...
2025-02-24T16:33:40.7816971Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7817383Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7817719Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7817983Z E          ...
2025-02-24T16:33:40.7818178Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7818474Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7818791Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7818982Z 
2025-02-24T16:33:40.7819072Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7819449Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-wavelength_cm] _
2025-02-24T16:33:40.7819915Z 
2025-02-24T16:33:40.7820051Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7820399Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7821334Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7821657Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7822109Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7822425Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7822681Z err_msg = None
2025-02-24T16:33:40.7822886Z 
2025-02-24T16:33:40.7823004Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7823282Z         if err_msg is None:
2025-02-24T16:33:40.7823515Z             if left.shape != right.shape:
2025-02-24T16:33:40.7823784Z                 raise_assert_detail(
2025-02-24T16:33:40.7824093Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7824391Z                 )
2025-02-24T16:33:40.7824573Z     
2025-02-24T16:33:40.7824736Z             diff = 0
2025-02-24T16:33:40.7824996Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7825278Z                 # count up differences
2025-02-24T16:33:40.7825614Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7825952Z                     diff += 1
2025-02-24T16:33:40.7826165Z     
2025-02-24T16:33:40.7826345Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7826652Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7827046Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7827750Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7828114Z E           
2025-02-24T16:33:40.7828478Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7829256Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7830045Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7830402Z 
2025-02-24T16:33:40.7830720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7831112Z 
2025-02-24T16:33:40.7831286Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7831539Z 
2025-02-24T16:33:40.7831767Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512163650>
2025-02-24T16:33:40.7832241Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4d788a9c0>
2025-02-24T16:33:40.7832571Z attr = 'wavelength_cm'
2025-02-24T16:33:40.7832702Z 
2025-02-24T16:33:40.7832841Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7833181Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7833469Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7833688Z         try:
2025-02-24T16:33:40.7833932Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7834239Z         except KeyError:
2025-02-24T16:33:40.7834507Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7834799Z     
2025-02-24T16:33:40.7834982Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7835355Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7835622Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7835925Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7836230Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7836472Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7836755Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7836952Z 
2025-02-24T16:33:40.7837078Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7837621Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7837971Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7838273Z     ???
2025-02-24T16:33:40.7838483Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7838680Z 
2025-02-24T16:33:40.7838753Z >   ???
2025-02-24T16:33:40.7838974Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7839266Z E   
2025-02-24T16:33:40.7839487Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7839808Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7840072Z E          ...
2025-02-24T16:33:40.7840268Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7840575Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7840902Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7841168Z E          ...
2025-02-24T16:33:40.7841366Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7841661Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7841974Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7842164Z 
2025-02-24T16:33:40.7842254Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7842762Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:True-f_lu] ___
2025-02-24T16:33:40.7843290Z 
2025-02-24T16:33:40.7843511Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7843925Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7844243Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7844555Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7845033Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7845346Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7845601Z err_msg = None
2025-02-24T16:33:40.7845708Z 
2025-02-24T16:33:40.7845823Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7846096Z         if err_msg is None:
2025-02-24T16:33:40.7846326Z             if left.shape != right.shape:
2025-02-24T16:33:40.7846593Z                 raise_assert_detail(
2025-02-24T16:33:40.7846900Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7847201Z                 )
2025-02-24T16:33:40.7847502Z     
2025-02-24T16:33:40.7847666Z             diff = 0
2025-02-24T16:33:40.7847904Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7848184Z                 # count up differences
2025-02-24T16:33:40.7848517Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7848859Z                     diff += 1
2025-02-24T16:33:40.7849068Z     
2025-02-24T16:33:40.7849244Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7849549Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7849943Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7850319Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7850705Z E           
2025-02-24T16:33:40.7850920Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7851373Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7851977Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7852322Z 
2025-02-24T16:33:40.7852636Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7853029Z 
2025-02-24T16:33:40.7853205Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7853455Z 
2025-02-24T16:33:40.7853685Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512163710>
2025-02-24T16:33:40.7854201Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4d788a9c0>, attr = 'f_lu'
2025-02-24T16:33:40.7854495Z 
2025-02-24T16:33:40.7854633Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7854968Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7855257Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7855475Z         try:
2025-02-24T16:33:40.7855720Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7856024Z         except KeyError:
2025-02-24T16:33:40.7856292Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7856580Z     
2025-02-24T16:33:40.7856761Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7857014Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7857381Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7857693Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7857992Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7858238Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7858516Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7858707Z 
2025-02-24T16:33:40.7858839Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7859274Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7859622Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7859917Z     ???
2025-02-24T16:33:40.7860127Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7860323Z 
2025-02-24T16:33:40.7860396Z >   ???
2025-02-24T16:33:40.7860616Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7860891Z E   
2025-02-24T16:33:40.7861295Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7861837Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7862214Z E          ...
2025-02-24T16:33:40.7862418Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7862720Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7863052Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7863318Z E          ...
2025-02-24T16:33:40.7863513Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7863812Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7864124Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7864312Z 
2025-02-24T16:33:40.7864402Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7864778Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] _
2025-02-24T16:33:40.7865231Z 
2025-02-24T16:33:40.7865368Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7865719Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7866033Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7866342Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7866690Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7866998Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7867403Z err_msg = None
2025-02-24T16:33:40.7867586Z 
2025-02-24T16:33:40.7867704Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7867974Z         if err_msg is None:
2025-02-24T16:33:40.7868207Z             if left.shape != right.shape:
2025-02-24T16:33:40.7868470Z                 raise_assert_detail(
2025-02-24T16:33:40.7868774Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7869073Z                 )
2025-02-24T16:33:40.7869250Z     
2025-02-24T16:33:40.7869411Z             diff = 0
2025-02-24T16:33:40.7869641Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7869931Z                 # count up differences
2025-02-24T16:33:40.7870266Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7870602Z                     diff += 1
2025-02-24T16:33:40.7870815Z     
2025-02-24T16:33:40.7870995Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7871302Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7871694Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7872065Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7872343Z E           
2025-02-24T16:33:40.7872557Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7873013Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7873760Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7874114Z 
2025-02-24T16:33:40.7874424Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7889104Z 
2025-02-24T16:33:40.7889382Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7889870Z 
2025-02-24T16:33:40.7890256Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512163e90>
2025-02-24T16:33:40.7890900Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4d788a9c0>
2025-02-24T16:33:40.7891231Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.7891358Z 
2025-02-24T16:33:40.7891506Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7891864Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7892160Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7892376Z         try:
2025-02-24T16:33:40.7892621Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7892923Z         except KeyError:
2025-02-24T16:33:40.7893192Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7893477Z     
2025-02-24T16:33:40.7893835Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7894084Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7894343Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7894647Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7894949Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7895191Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7895472Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7895734Z             else:
2025-02-24T16:33:40.7895936Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7896219Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7896408Z 
2025-02-24T16:33:40.7896538Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7896855Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7897514Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7898019Z     ???
2025-02-24T16:33:40.7898322Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7898524Z 
2025-02-24T16:33:40.7898594Z >   ???
2025-02-24T16:33:40.7898807Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7899072Z E   
2025-02-24T16:33:40.7899287Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7899636Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7899895Z E          ...
2025-02-24T16:33:40.7900082Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7900380Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7900711Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7900970Z E          ...
2025-02-24T16:33:40.7901160Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7901456Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7901777Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7901969Z 
2025-02-24T16:33:40.7902060Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7902441Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-beta_sobolev] _
2025-02-24T16:33:40.7902760Z 
2025-02-24T16:33:40.7902899Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7903252Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7903708Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7904032Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7904385Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7904704Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7904974Z err_msg = None
2025-02-24T16:33:40.7905094Z 
2025-02-24T16:33:40.7905218Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7905486Z         if err_msg is None:
2025-02-24T16:33:40.7905727Z             if left.shape != right.shape:
2025-02-24T16:33:40.7905992Z                 raise_assert_detail(
2025-02-24T16:33:40.7906299Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7906601Z                 )
2025-02-24T16:33:40.7906780Z     
2025-02-24T16:33:40.7906941Z             diff = 0
2025-02-24T16:33:40.7907175Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7907603Z                 # count up differences
2025-02-24T16:33:40.7907935Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7908272Z                     diff += 1
2025-02-24T16:33:40.7908483Z     
2025-02-24T16:33:40.7908663Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7908967Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7909480Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7909858Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7910121Z E           
2025-02-24T16:33:40.7910337Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7910799Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7911406Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7911751Z 
2025-02-24T16:33:40.7912065Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7912457Z 
2025-02-24T16:33:40.7912630Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7912889Z 
2025-02-24T16:33:40.7913112Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512163f50>
2025-02-24T16:33:40.7913595Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4d788a9c0>
2025-02-24T16:33:40.7913926Z attr = 'beta_sobolev'
2025-02-24T16:33:40.7914051Z 
2025-02-24T16:33:40.7914197Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7914532Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7914816Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7915038Z         try:
2025-02-24T16:33:40.7915282Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7915654Z         except KeyError:
2025-02-24T16:33:40.7916130Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7916617Z     
2025-02-24T16:33:40.7916860Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7917114Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7917511Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7917828Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7918136Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7918512Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7918798Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7919064Z             else:
2025-02-24T16:33:40.7919271Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7919553Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7919739Z 
2025-02-24T16:33:40.7919875Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7920199Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7920553Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7920849Z     ???
2025-02-24T16:33:40.7921053Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7921254Z 
2025-02-24T16:33:40.7921326Z >   ???
2025-02-24T16:33:40.7921543Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7921820Z E   
2025-02-24T16:33:40.7922045Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7922368Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7922634Z E          ...
2025-02-24T16:33:40.7922826Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7923130Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7923464Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7923849Z E          ...
2025-02-24T16:33:40.7924034Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7924328Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7924639Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7924826Z 
2025-02-24T16:33:40.7924915Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7925272Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-j_blues] __
2025-02-24T16:33:40.7925573Z 
2025-02-24T16:33:40.7925714Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7926060Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7926381Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7926694Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7927046Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7927464Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7927714Z err_msg = None
2025-02-24T16:33:40.7927829Z 
2025-02-24T16:33:40.7927951Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7928220Z         if err_msg is None:
2025-02-24T16:33:40.7928452Z             if left.shape != right.shape:
2025-02-24T16:33:40.7928712Z                 raise_assert_detail(
2025-02-24T16:33:40.7929022Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7929320Z                 )
2025-02-24T16:33:40.7929509Z     
2025-02-24T16:33:40.7929678Z             diff = 0
2025-02-24T16:33:40.7929913Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7930206Z                 # count up differences
2025-02-24T16:33:40.7930548Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7930894Z                     diff += 1
2025-02-24T16:33:40.7931100Z     
2025-02-24T16:33:40.7931284Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7931591Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7931983Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7932358Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7932690Z E           
2025-02-24T16:33:40.7933067Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7933957Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7934570Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7934917Z 
2025-02-24T16:33:40.7935227Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7935620Z 
2025-02-24T16:33:40.7935797Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7936052Z 
2025-02-24T16:33:40.7936284Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512190110>
2025-02-24T16:33:40.7936762Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4d788a9c0>
2025-02-24T16:33:40.7937084Z attr = 'j_blues'
2025-02-24T16:33:40.7937202Z 
2025-02-24T16:33:40.7937468Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7937932Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7938214Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7938433Z         try:
2025-02-24T16:33:40.7938678Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7938982Z         except KeyError:
2025-02-24T16:33:40.7939571Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7939859Z     
2025-02-24T16:33:40.7940039Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7940299Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7940570Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7940876Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7941181Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7941420Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7941698Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7941964Z             else:
2025-02-24T16:33:40.7942177Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7942471Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7942659Z 
2025-02-24T16:33:40.7942791Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7943117Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7943471Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7943768Z     ???
2025-02-24T16:33:40.7943973Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7944173Z 
2025-02-24T16:33:40.7944245Z >   ???
2025-02-24T16:33:40.7944471Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7944743Z E   
2025-02-24T16:33:40.7944961Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7945282Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7945546Z E          ...
2025-02-24T16:33:40.7945743Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7946047Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7946372Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7946633Z E          ...
2025-02-24T16:33:40.7946825Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7947118Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7947221Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7947226Z 
2025-02-24T16:33:40.7947436Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7947794Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines] __
2025-02-24T16:33:40.7947806Z 
2025-02-24T16:33:40.7947939Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7948075Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7948178Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7948313Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7948436Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7948531Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7948609Z err_msg = None
2025-02-24T16:33:40.7948613Z 
2025-02-24T16:33:40.7948724Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7948811Z         if err_msg is None:
2025-02-24T16:33:40.7948908Z             if left.shape != right.shape:
2025-02-24T16:33:40.7948996Z                 raise_assert_detail(
2025-02-24T16:33:40.7949147Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7949217Z                 )
2025-02-24T16:33:40.7949289Z     
2025-02-24T16:33:40.7949360Z             diff = 0
2025-02-24T16:33:40.7949591Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7949678Z                 # count up differences
2025-02-24T16:33:40.7949856Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7949939Z                     diff += 1
2025-02-24T16:33:40.7950006Z     
2025-02-24T16:33:40.7950097Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7950232Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7950406Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7950521Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7950596Z E           
2025-02-24T16:33:40.7950712Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7950977Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7951437Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7951445Z 
2025-02-24T16:33:40.7951988Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7951994Z 
2025-02-24T16:33:40.7952281Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7952289Z 
2025-02-24T16:33:40.7952553Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512190e90>
2025-02-24T16:33:40.7952722Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e741a240>
2025-02-24T16:33:40.7952804Z attr = 'lines'
2025-02-24T16:33:40.7952807Z 
2025-02-24T16:33:40.7952950Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7953065Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7953155Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7953225Z         try:
2025-02-24T16:33:40.7953370Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7953454Z         except KeyError:
2025-02-24T16:33:40.7953593Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7953754Z     
2025-02-24T16:33:40.7953845Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7953943Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7954030Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7954164Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7954254Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7954345Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7954460Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7954531Z             else:
2025-02-24T16:33:40.7954629Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7954736Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7954740Z 
2025-02-24T16:33:40.7954870Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7954988Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7955135Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7955209Z     ???
2025-02-24T16:33:40.7955317Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7955321Z 
2025-02-24T16:33:40.7955393Z >   ???
2025-02-24T16:33:40.7955525Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7955591Z E   
2025-02-24T16:33:40.7955804Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7955913Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7955988Z E          ...
2025-02-24T16:33:40.7956074Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7956215Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7956330Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7956399Z E          ...
2025-02-24T16:33:40.7956486Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7956609Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7956719Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7956723Z 
2025-02-24T16:33:40.7956811Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7957083Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] _
2025-02-24T16:33:40.7957090Z 
2025-02-24T16:33:40.7957469Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512190f50>
2025-02-24T16:33:40.7957639Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e741a240>
2025-02-24T16:33:40.7957733Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.7957737Z 
2025-02-24T16:33:40.7957873Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7957989Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7958076Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7958144Z         try:
2025-02-24T16:33:40.7958291Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7958373Z         except KeyError:
2025-02-24T16:33:40.7958519Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7958586Z     
2025-02-24T16:33:40.7958676Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7958776Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7958863Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7959001Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7959084Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7959178Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7959283Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7959292Z 
2025-02-24T16:33:40.7959415Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7959531Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7959534Z 
2025-02-24T16:33:40.7959791Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7959883Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7959990Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7960075Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7960219Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7960303Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7960411Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7960487Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7960565Z err_msg = None
2025-02-24T16:33:40.7960569Z 
2025-02-24T16:33:40.7960682Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7960762Z         if err_msg is None:
2025-02-24T16:33:40.7960859Z             if left.shape != right.shape:
2025-02-24T16:33:40.7960946Z                 raise_assert_detail(
2025-02-24T16:33:40.7961096Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7961165Z                 )
2025-02-24T16:33:40.7961239Z     
2025-02-24T16:33:40.7961315Z             diff = 0
2025-02-24T16:33:40.7961425Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7961516Z                 # count up differences
2025-02-24T16:33:40.7961799Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7961883Z                     diff += 1
2025-02-24T16:33:40.7961950Z     
2025-02-24T16:33:40.7962039Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7962178Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7962348Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7962455Z E           AssertionError: Series are different
2025-02-24T16:33:40.7962525Z E           
2025-02-24T16:33:40.7962632Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.7963009Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7963341Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7963679Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7963684Z 
2025-02-24T16:33:40.7964000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7964265Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] _
2025-02-24T16:33:40.7964269Z 
2025-02-24T16:33:40.7964497Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512191010>
2025-02-24T16:33:40.7964668Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e741a240>
2025-02-24T16:33:40.7964757Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.7964760Z 
2025-02-24T16:33:40.7965027Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7965141Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7965232Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7965300Z         try:
2025-02-24T16:33:40.7965441Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7965525Z         except KeyError:
2025-02-24T16:33:40.7965661Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7965738Z     
2025-02-24T16:33:40.7965823Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7965919Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7966008Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7966141Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7966231Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7966318Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7966430Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7966438Z 
2025-02-24T16:33:40.7966559Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7966676Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7966680Z 
2025-02-24T16:33:40.7966817Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7966899Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7967131Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7967209Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7967488Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7967574Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7967677Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7967758Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7967833Z err_msg = None
2025-02-24T16:33:40.7967837Z 
2025-02-24T16:33:40.7967963Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7968044Z         if err_msg is None:
2025-02-24T16:33:40.7968148Z             if left.shape != right.shape:
2025-02-24T16:33:40.7968238Z                 raise_assert_detail(
2025-02-24T16:33:40.7968385Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7968465Z                 )
2025-02-24T16:33:40.7968534Z     
2025-02-24T16:33:40.7968610Z             diff = 0
2025-02-24T16:33:40.7968721Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7968812Z                 # count up differences
2025-02-24T16:33:40.7968988Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7969066Z                     diff += 1
2025-02-24T16:33:40.7969139Z     
2025-02-24T16:33:40.7969223Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7969366Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7969534Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7969642Z E           AssertionError: Series are different
2025-02-24T16:33:40.7969716Z E           
2025-02-24T16:33:40.7969890Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.7970589Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7971277Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7971663Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7971677Z 
2025-02-24T16:33:40.7971998Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7972211Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:False-nu] ____
2025-02-24T16:33:40.7972215Z 
2025-02-24T16:33:40.7972347Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7972478Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7972581Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7972712Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7972945Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7973038Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7973118Z err_msg = None
2025-02-24T16:33:40.7973121Z 
2025-02-24T16:33:40.7973232Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7973318Z         if err_msg is None:
2025-02-24T16:33:40.7973416Z             if left.shape != right.shape:
2025-02-24T16:33:40.7973498Z                 raise_assert_detail(
2025-02-24T16:33:40.7973651Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7973721Z                 )
2025-02-24T16:33:40.7973795Z     
2025-02-24T16:33:40.7973868Z             diff = 0
2025-02-24T16:33:40.7973983Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7974073Z                 # count up differences
2025-02-24T16:33:40.7974243Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7974328Z                     diff += 1
2025-02-24T16:33:40.7974396Z     
2025-02-24T16:33:40.7974485Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7974619Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7974791Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7974907Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7974980Z E           
2025-02-24T16:33:40.7975097Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7975359Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7975626Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7975631Z 
2025-02-24T16:33:40.7975937Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7975941Z 
2025-02-24T16:33:40.7976115Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7976209Z 
2025-02-24T16:33:40.7976438Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512191250>
2025-02-24T16:33:40.7976642Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e741a240>, attr = 'nu'
2025-02-24T16:33:40.7976646Z 
2025-02-24T16:33:40.7976784Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7976908Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7976995Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7977064Z         try:
2025-02-24T16:33:40.7977207Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7977415Z         except KeyError:
2025-02-24T16:33:40.7977559Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7977627Z     
2025-02-24T16:33:40.7977716Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7977808Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7977903Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7978041Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7978126Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7978219Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7978326Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7978330Z 
2025-02-24T16:33:40.7978578Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7978697Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7978842Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7978916Z     ???
2025-02-24T16:33:40.7979021Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7979025Z 
2025-02-24T16:33:40.7979097Z >   ???
2025-02-24T16:33:40.7979224Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7979296Z E   
2025-02-24T16:33:40.7979428Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7979546Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7979621Z E          ...
2025-02-24T16:33:40.7979706Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7979840Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7979954Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7980027Z E          ...
2025-02-24T16:33:40.7980116Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7980238Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7980346Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7980350Z 
2025-02-24T16:33:40.7980439Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7980679Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-wavelength_cm] _
2025-02-24T16:33:40.7980683Z 
2025-02-24T16:33:40.7980821Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7980948Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7981049Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7981182Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7981314Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7981409Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7981481Z err_msg = None
2025-02-24T16:33:40.7981485Z 
2025-02-24T16:33:40.7981599Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7981679Z         if err_msg is None:
2025-02-24T16:33:40.7981778Z             if left.shape != right.shape:
2025-02-24T16:33:40.7981865Z                 raise_assert_detail(
2025-02-24T16:33:40.7982124Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7982201Z                 )
2025-02-24T16:33:40.7982268Z     
2025-02-24T16:33:40.7982346Z             diff = 0
2025-02-24T16:33:40.7982456Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7982549Z                 # count up differences
2025-02-24T16:33:40.7982722Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7982803Z                     diff += 1
2025-02-24T16:33:40.7982880Z     
2025-02-24T16:33:40.7982968Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7983109Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7983277Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7983394Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7983473Z E           
2025-02-24T16:33:40.7983586Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7983848Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7984188Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7984198Z 
2025-02-24T16:33:40.7984501Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7984505Z 
2025-02-24T16:33:40.7984681Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7984689Z 
2025-02-24T16:33:40.7984916Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512191310>
2025-02-24T16:33:40.7985086Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e741a240>
2025-02-24T16:33:40.7985171Z attr = 'wavelength_cm'
2025-02-24T16:33:40.7985175Z 
2025-02-24T16:33:40.7985312Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7985436Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7985519Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7985595Z         try:
2025-02-24T16:33:40.7985739Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7985819Z         except KeyError:
2025-02-24T16:33:40.7985959Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7986026Z     
2025-02-24T16:33:40.7986116Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7986209Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7986304Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7986441Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7986525Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7986617Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7986724Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7986731Z 
2025-02-24T16:33:40.7986859Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7986970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7987122Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7987196Z     ???
2025-02-24T16:33:40.7987533Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7987541Z 
2025-02-24T16:33:40.7987679Z >   ???
2025-02-24T16:33:40.7987902Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7988020Z E   
2025-02-24T16:33:40.7988395Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7988580Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7988695Z E          ...
2025-02-24T16:33:40.7988785Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7988924Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7989039Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7989113Z E          ...
2025-02-24T16:33:40.7989201Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7989322Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7989434Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7989438Z 
2025-02-24T16:33:40.7989528Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7989750Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-f_lu] ___
2025-02-24T16:33:40.7989754Z 
2025-02-24T16:33:40.7989892Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7990016Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7990116Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7990248Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7990514Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7990605Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7990683Z err_msg = None
2025-02-24T16:33:40.7990687Z 
2025-02-24T16:33:40.7990802Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7990883Z         if err_msg is None:
2025-02-24T16:33:40.7990983Z             if left.shape != right.shape:
2025-02-24T16:33:40.7991066Z                 raise_assert_detail(
2025-02-24T16:33:40.7991218Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7991292Z                 )
2025-02-24T16:33:40.7991358Z     
2025-02-24T16:33:40.7991432Z             diff = 0
2025-02-24T16:33:40.7991541Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7991634Z                 # count up differences
2025-02-24T16:33:40.7991805Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7991887Z                     diff += 1
2025-02-24T16:33:40.7991958Z     
2025-02-24T16:33:40.7992044Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7992183Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7992352Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7992470Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7992539Z E           
2025-02-24T16:33:40.7992657Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7992919Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7993180Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7993185Z 
2025-02-24T16:33:40.7993491Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7993496Z 
2025-02-24T16:33:40.7993752Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7993757Z 
2025-02-24T16:33:40.7993982Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121913d0>
2025-02-24T16:33:40.7994187Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e741a240>, attr = 'f_lu'
2025-02-24T16:33:40.7994191Z 
2025-02-24T16:33:40.7994332Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7994449Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7994537Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7994606Z         try:
2025-02-24T16:33:40.7994748Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7994827Z         except KeyError:
2025-02-24T16:33:40.7994967Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7995039Z     
2025-02-24T16:33:40.7995123Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7995222Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7995312Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7995446Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7995529Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7995621Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7995735Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7995821Z 
2025-02-24T16:33:40.7995946Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7996061Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7996205Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7996283Z     ???
2025-02-24T16:33:40.7996388Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7996397Z 
2025-02-24T16:33:40.7996463Z >   ???
2025-02-24T16:33:40.7996593Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7996660Z E   
2025-02-24T16:33:40.7996794Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7996902Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7996977Z E          ...
2025-02-24T16:33:40.7997066Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7997194Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7997462Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7997532Z E          ...
2025-02-24T16:33:40.7997621Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7997742Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7997850Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7997854Z 
2025-02-24T16:33:40.7997945Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7998172Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] _
2025-02-24T16:33:40.7998176Z 
2025-02-24T16:33:40.7998317Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7998440Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7998542Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7998675Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7998799Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7998894Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7998967Z err_msg = None
2025-02-24T16:33:40.7998971Z 
2025-02-24T16:33:40.7999085Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7999170Z         if err_msg is None:
2025-02-24T16:33:40.7999262Z             if left.shape != right.shape:
2025-02-24T16:33:40.7999351Z                 raise_assert_detail(
2025-02-24T16:33:40.7999654Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7999734Z                 )
2025-02-24T16:33:40.7999800Z     
2025-02-24T16:33:40.7999879Z             diff = 0
2025-02-24T16:33:40.7999996Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8000082Z                 # count up differences
2025-02-24T16:33:40.8000254Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8000333Z                     diff += 1
2025-02-24T16:33:40.8000404Z     
2025-02-24T16:33:40.8000490Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8000629Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8000803Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8000914Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8000988Z E           
2025-02-24T16:33:40.8001100Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8001362Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8001736Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8001741Z 
2025-02-24T16:33:40.8002042Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8002046Z 
2025-02-24T16:33:40.8002220Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8002224Z 
2025-02-24T16:33:40.8002452Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512191b50>
2025-02-24T16:33:40.8002618Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e741a240>
2025-02-24T16:33:40.8002701Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.8002705Z 
2025-02-24T16:33:40.8002839Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8002961Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8003048Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8003117Z         try:
2025-02-24T16:33:40.8003260Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8003339Z         except KeyError:
2025-02-24T16:33:40.8003480Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8003547Z     
2025-02-24T16:33:40.8003638Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8003737Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8003827Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8003961Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8004045Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8004137Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8004243Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8004322Z             else:
2025-02-24T16:33:40.8004419Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8004524Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8004528Z 
2025-02-24T16:33:40.8004654Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8004765Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8004914Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8004983Z     ???
2025-02-24T16:33:40.8005180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8005185Z 
2025-02-24T16:33:40.8005258Z >   ???
2025-02-24T16:33:40.8005382Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8005455Z E   
2025-02-24T16:33:40.8005581Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8005693Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8005771Z E          ...
2025-02-24T16:33:40.8005855Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8005991Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8006191Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8006321Z E          ...
2025-02-24T16:33:40.8006461Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8006675Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8006849Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8006855Z 
2025-02-24T16:33:40.8007004Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8007430Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-beta_sobolev] _
2025-02-24T16:33:40.8007435Z 
2025-02-24T16:33:40.8007563Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8007696Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8007929Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8008059Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8008186Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8008278Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8008355Z err_msg = None
2025-02-24T16:33:40.8008359Z 
2025-02-24T16:33:40.8008472Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8008556Z         if err_msg is None:
2025-02-24T16:33:40.8008656Z             if left.shape != right.shape:
2025-02-24T16:33:40.8008738Z                 raise_assert_detail(
2025-02-24T16:33:40.8008885Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8008954Z                 )
2025-02-24T16:33:40.8009025Z     
2025-02-24T16:33:40.8009103Z             diff = 0
2025-02-24T16:33:40.8009209Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8009299Z                 # count up differences
2025-02-24T16:33:40.8009469Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8009550Z                     diff += 1
2025-02-24T16:33:40.8009618Z     
2025-02-24T16:33:40.8009710Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8009848Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8010022Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8010138Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8010208Z E           
2025-02-24T16:33:40.8010323Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8010586Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8010848Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8010852Z 
2025-02-24T16:33:40.8011292Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8011297Z 
2025-02-24T16:33:40.8011472Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8011476Z 
2025-02-24T16:33:40.8011701Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512191c10>
2025-02-24T16:33:40.8011875Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e741a240>
2025-02-24T16:33:40.8011954Z attr = 'beta_sobolev'
2025-02-24T16:33:40.8011957Z 
2025-02-24T16:33:40.8012099Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8012217Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8012298Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8012374Z         try:
2025-02-24T16:33:40.8012511Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8012595Z         except KeyError:
2025-02-24T16:33:40.8012737Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8012811Z     
2025-02-24T16:33:40.8012899Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8012990Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8013081Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8013210Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8013378Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8013465Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8013577Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8013652Z             else:
2025-02-24T16:33:40.8013746Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8013857Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8013861Z 
2025-02-24T16:33:40.8013986Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8014106Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8014253Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8014321Z     ???
2025-02-24T16:33:40.8014434Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8014438Z 
2025-02-24T16:33:40.8014505Z >   ???
2025-02-24T16:33:40.8014633Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8014705Z E   
2025-02-24T16:33:40.8014834Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8014950Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8015020Z E          ...
2025-02-24T16:33:40.8015109Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8015237Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8015351Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8015420Z E          ...
2025-02-24T16:33:40.8015510Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8015638Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8015743Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8015747Z 
2025-02-24T16:33:40.8015838Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8016051Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-j_blues] _
2025-02-24T16:33:40.8016058Z 
2025-02-24T16:33:40.8016190Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8016319Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8016413Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8016547Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8016668Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8016850Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8016931Z err_msg = None
2025-02-24T16:33:40.8016934Z 
2025-02-24T16:33:40.8017043Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8017127Z         if err_msg is None:
2025-02-24T16:33:40.8017221Z             if left.shape != right.shape:
2025-02-24T16:33:40.8017423Z                 raise_assert_detail(
2025-02-24T16:33:40.8017568Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8017641Z                 )
2025-02-24T16:33:40.8017712Z     
2025-02-24T16:33:40.8017782Z             diff = 0
2025-02-24T16:33:40.8017893Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8017979Z                 # count up differences
2025-02-24T16:33:40.8018153Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8018230Z                     diff += 1
2025-02-24T16:33:40.8018304Z     
2025-02-24T16:33:40.8018395Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8018530Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8018703Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8018815Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8019050Z E           
2025-02-24T16:33:40.8019158Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8019422Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8019692Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8019697Z 
2025-02-24T16:33:40.8020005Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8020013Z 
2025-02-24T16:33:40.8020180Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8020184Z 
2025-02-24T16:33:40.8020411Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512191d90>
2025-02-24T16:33:40.8020575Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e741a240>
2025-02-24T16:33:40.8020656Z attr = 'j_blues'
2025-02-24T16:33:40.8020660Z 
2025-02-24T16:33:40.8020799Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8020912Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8021002Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8021071Z         try:
2025-02-24T16:33:40.8021215Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8021294Z         except KeyError:
2025-02-24T16:33:40.8021435Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8021506Z     
2025-02-24T16:33:40.8021591Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8021693Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8021780Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8021913Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8021996Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8022088Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8022203Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8022273Z             else:
2025-02-24T16:33:40.8022373Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8022589Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8022594Z 
2025-02-24T16:33:40.8022724Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8022835Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8022983Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8023060Z     ???
2025-02-24T16:33:40.8023172Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8023176Z 
2025-02-24T16:33:40.8023247Z >   ???
2025-02-24T16:33:40.8023372Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8023445Z E   
2025-02-24T16:33:40.8023584Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8023694Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8023769Z E          ...
2025-02-24T16:33:40.8023853Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8023988Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8024097Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8024175Z E          ...
2025-02-24T16:33:40.8024263Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8024387Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8024587Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8024591Z 
2025-02-24T16:33:40.8024679Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8025160Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] _
2025-02-24T16:33:40.8025168Z 
2025-02-24T16:33:40.8025385Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8025592Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8025749Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8025954Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8026083Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8026181Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8026254Z err_msg = None
2025-02-24T16:33:40.8026262Z 
2025-02-24T16:33:40.8026373Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8026452Z         if err_msg is None:
2025-02-24T16:33:40.8026549Z             if left.shape != right.shape:
2025-02-24T16:33:40.8026631Z                 raise_assert_detail(
2025-02-24T16:33:40.8026776Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8026850Z                 )
2025-02-24T16:33:40.8026917Z     
2025-02-24T16:33:40.8026992Z             diff = 0
2025-02-24T16:33:40.8027099Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8027193Z                 # count up differences
2025-02-24T16:33:40.8027484Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8027764Z                     diff += 1
2025-02-24T16:33:40.8027886Z     
2025-02-24T16:33:40.8027981Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8028128Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8028307Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8028427Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8028497Z E           
2025-02-24T16:33:40.8028609Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8029044Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8029321Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8029337Z 
2025-02-24T16:33:40.8029677Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8029681Z 
2025-02-24T16:33:40.8029875Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8029879Z 
2025-02-24T16:33:40.8030106Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512192b10>
2025-02-24T16:33:40.8030275Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e4ec8b30>
2025-02-24T16:33:40.8030352Z attr = 'lines'
2025-02-24T16:33:40.8030359Z 
2025-02-24T16:33:40.8030494Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8030614Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8030697Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8030771Z         try:
2025-02-24T16:33:40.8030909Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8031108Z         except KeyError:
2025-02-24T16:33:40.8031249Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8031317Z     
2025-02-24T16:33:40.8031408Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8031500Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8031592Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8031719Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8031811Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8031903Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8032015Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8032093Z             else:
2025-02-24T16:33:40.8032189Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8032298Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8032302Z 
2025-02-24T16:33:40.8032425Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8032545Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8032693Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8032761Z     ???
2025-02-24T16:33:40.8032875Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8032879Z 
2025-02-24T16:33:40.8032946Z >   ???
2025-02-24T16:33:40.8033076Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8033148Z E   
2025-02-24T16:33:40.8033277Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8033396Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8033467Z E          ...
2025-02-24T16:33:40.8033557Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8033685Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8033798Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8033875Z E          ...
2025-02-24T16:33:40.8033962Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8034088Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8034190Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8034193Z 
2025-02-24T16:33:40.8034284Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8034603Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] _
2025-02-24T16:33:40.8034608Z 
2025-02-24T16:33:40.8034942Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512192bd0>
2025-02-24T16:33:40.8035118Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e4ec8b30>
2025-02-24T16:33:40.8035205Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.8035209Z 
2025-02-24T16:33:40.8035348Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8035465Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8035550Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8035623Z         try:
2025-02-24T16:33:40.8035765Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8035847Z         except KeyError:
2025-02-24T16:33:40.8035981Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8036054Z     
2025-02-24T16:33:40.8036144Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8036234Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8036329Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8036461Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8036550Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8036636Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8036746Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8036750Z 
2025-02-24T16:33:40.8036877Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8037073Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8037077Z 
2025-02-24T16:33:40.8037217Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8037437Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8037553Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8037636Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8037771Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8037859Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8037961Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8038043Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8038117Z err_msg = None
2025-02-24T16:33:40.8038120Z 
2025-02-24T16:33:40.8038234Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8038321Z         if err_msg is None:
2025-02-24T16:33:40.8038417Z             if left.shape != right.shape:
2025-02-24T16:33:40.8038505Z                 raise_assert_detail(
2025-02-24T16:33:40.8038645Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8038720Z                 )
2025-02-24T16:33:40.8038786Z     
2025-02-24T16:33:40.8038861Z             diff = 0
2025-02-24T16:33:40.8038973Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8039060Z                 # count up differences
2025-02-24T16:33:40.8039237Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8039314Z                     diff += 1
2025-02-24T16:33:40.8039385Z     
2025-02-24T16:33:40.8039469Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8039607Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8039780Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8039886Z E           AssertionError: Series are different
2025-02-24T16:33:40.8039960Z E           
2025-02-24T16:33:40.8040059Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.8040552Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8040892Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8041229Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8041233Z 
2025-02-24T16:33:40.8041545Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8041856Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] _
2025-02-24T16:33:40.8041861Z 
2025-02-24T16:33:40.8042081Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512192c90>
2025-02-24T16:33:40.8042250Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e4ec8b30>
2025-02-24T16:33:40.8042444Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.8042448Z 
2025-02-24T16:33:40.8042583Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8042701Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8042783Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8042857Z         try:
2025-02-24T16:33:40.8043003Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8043082Z         except KeyError:
2025-02-24T16:33:40.8043223Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8043289Z     
2025-02-24T16:33:40.8043378Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8043470Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8043560Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8043791Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8043939Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8044100Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8044278Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8044284Z 
2025-02-24T16:33:40.8044494Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8044681Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8044694Z 
2025-02-24T16:33:40.8044880Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8044969Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8045081Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8045165Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8045301Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8045386Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8045495Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8045574Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8045652Z err_msg = None
2025-02-24T16:33:40.8045655Z 
2025-02-24T16:33:40.8045764Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8045848Z         if err_msg is None:
2025-02-24T16:33:40.8045948Z             if left.shape != right.shape:
2025-02-24T16:33:40.8046032Z                 raise_assert_detail(
2025-02-24T16:33:40.8046181Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8046250Z                 )
2025-02-24T16:33:40.8046417Z     
2025-02-24T16:33:40.8046491Z             diff = 0
2025-02-24T16:33:40.8046607Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8046699Z                 # count up differences
2025-02-24T16:33:40.8046867Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8046951Z                     diff += 1
2025-02-24T16:33:40.8047018Z     
2025-02-24T16:33:40.8047107Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8047240Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8047546Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8047652Z E           AssertionError: Series are different
2025-02-24T16:33:40.8047721Z E           
2025-02-24T16:33:40.8047824Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.8048195Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8048694Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8049073Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8049078Z 
2025-02-24T16:33:40.8049391Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8049650Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] _
2025-02-24T16:33:40.8049654Z 
2025-02-24T16:33:40.8049785Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8049911Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8050012Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8050147Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8050270Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8050366Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8050439Z err_msg = None
2025-02-24T16:33:40.8050442Z 
2025-02-24T16:33:40.8050554Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8050641Z         if err_msg is None:
2025-02-24T16:33:40.8050733Z             if left.shape != right.shape:
2025-02-24T16:33:40.8050820Z                 raise_assert_detail(
2025-02-24T16:33:40.8050961Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8051035Z                 )
2025-02-24T16:33:40.8051101Z     
2025-02-24T16:33:40.8051177Z             diff = 0
2025-02-24T16:33:40.8051292Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8051377Z                 # count up differences
2025-02-24T16:33:40.8051656Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8051734Z                     diff += 1
2025-02-24T16:33:40.8051806Z     
2025-02-24T16:33:40.8051891Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8052028Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8052198Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8052312Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8052389Z E           
2025-02-24T16:33:40.8052498Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8052761Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8053028Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8053032Z 
2025-02-24T16:33:40.8053330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8053429Z 
2025-02-24T16:33:40.8053601Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8053605Z 
2025-02-24T16:33:40.8053834Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512192ed0>
2025-02-24T16:33:40.8054034Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e4ec8b30>, attr = 'nu'
2025-02-24T16:33:40.8054038Z 
2025-02-24T16:33:40.8054179Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8054296Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8054383Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8054457Z         try:
2025-02-24T16:33:40.8054596Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8054678Z         except KeyError:
2025-02-24T16:33:40.8054814Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8054890Z     
2025-02-24T16:33:40.8054974Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8055072Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8055164Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8055293Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8055381Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8055469Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8055580Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8055584Z 
2025-02-24T16:33:40.8055716Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8055827Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8055978Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8056045Z     ???
2025-02-24T16:33:40.8056156Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8056163Z 
2025-02-24T16:33:40.8056230Z >   ???
2025-02-24T16:33:40.8056360Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8056431Z E   
2025-02-24T16:33:40.8056556Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8056672Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8056742Z E          ...
2025-02-24T16:33:40.8056834Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8056964Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8057162Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8057239Z E          ...
2025-02-24T16:33:40.8057432Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8057560Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8057667Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8057671Z 
2025-02-24T16:33:40.8057765Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8058053Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] _
2025-02-24T16:33:40.8058057Z 
2025-02-24T16:33:40.8058186Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8058316Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8058411Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8058545Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8058674Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8058767Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8058846Z err_msg = None
2025-02-24T16:33:40.8058849Z 
2025-02-24T16:33:40.8058958Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8059175Z         if err_msg is None:
2025-02-24T16:33:40.8059268Z             if left.shape != right.shape:
2025-02-24T16:33:40.8059355Z                 raise_assert_detail(
2025-02-24T16:33:40.8059501Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8059571Z                 )
2025-02-24T16:33:40.8059642Z     
2025-02-24T16:33:40.8059713Z             diff = 0
2025-02-24T16:33:40.8059826Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8059911Z                 # count up differences
2025-02-24T16:33:40.8060087Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8060168Z                     diff += 1
2025-02-24T16:33:40.8060236Z     
2025-02-24T16:33:40.8060326Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8060459Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8060631Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8060746Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8060820Z E           
2025-02-24T16:33:40.8060934Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8061190Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8061457Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8061462Z 
2025-02-24T16:33:40.8061771Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8061775Z 
2025-02-24T16:33:40.8061942Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8061946Z 
2025-02-24T16:33:40.8062333Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512192f90>
2025-02-24T16:33:40.8062621Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e4ec8b30>
2025-02-24T16:33:40.8062755Z attr = 'wavelength_cm'
2025-02-24T16:33:40.8062761Z 
2025-02-24T16:33:40.8063153Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8063300Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8063391Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8063463Z         try:
2025-02-24T16:33:40.8063608Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8063693Z         except KeyError:
2025-02-24T16:33:40.8063830Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8063906Z     
2025-02-24T16:33:40.8063990Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8064085Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8064172Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8064305Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8064393Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8064482Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8064594Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8064602Z 
2025-02-24T16:33:40.8064725Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8064841Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8064990Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8065058Z     ???
2025-02-24T16:33:40.8065171Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8065258Z 
2025-02-24T16:33:40.8065325Z >   ???
2025-02-24T16:33:40.8065458Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8065524Z E   
2025-02-24T16:33:40.8065656Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8065771Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8065849Z E          ...
2025-02-24T16:33:40.8076439Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8076622Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8076770Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8076847Z E          ...
2025-02-24T16:33:40.8076952Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8077090Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8077203Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8077213Z 
2025-02-24T16:33:40.8077463Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8077745Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] _
2025-02-24T16:33:40.8077749Z 
2025-02-24T16:33:40.8077901Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8078042Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8078147Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8078294Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8078422Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8078527Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8078612Z err_msg = None
2025-02-24T16:33:40.8078616Z 
2025-02-24T16:33:40.8078736Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8078831Z         if err_msg is None:
2025-02-24T16:33:40.8078930Z             if left.shape != right.shape:
2025-02-24T16:33:40.8079024Z                 raise_assert_detail(
2025-02-24T16:33:40.8079176Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8079252Z                 )
2025-02-24T16:33:40.8079327Z     
2025-02-24T16:33:40.8079399Z             diff = 0
2025-02-24T16:33:40.8079520Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8079610Z                 # count up differences
2025-02-24T16:33:40.8079980Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8080138Z                     diff += 1
2025-02-24T16:33:40.8080267Z     
2025-02-24T16:33:40.8080421Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8080645Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8080947Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8081138Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8081266Z E           
2025-02-24T16:33:40.8081385Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8081662Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8081930Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8082063Z 
2025-02-24T16:33:40.8082380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8082391Z 
2025-02-24T16:33:40.8082563Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8082567Z 
2025-02-24T16:33:40.8082802Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512193050>
2025-02-24T16:33:40.8083015Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e4ec8b30>, attr = 'f_lu'
2025-02-24T16:33:40.8083019Z 
2025-02-24T16:33:40.8083171Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8083297Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8083386Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8083462Z         try:
2025-02-24T16:33:40.8083604Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8083692Z         except KeyError:
2025-02-24T16:33:40.8083836Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8083912Z     
2025-02-24T16:33:40.8084003Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8084099Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8084194Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8084329Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8084424Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8084513Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8084632Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8084639Z 
2025-02-24T16:33:40.8084776Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8084892Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8085049Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8085120Z     ???
2025-02-24T16:33:40.8085234Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8085241Z 
2025-02-24T16:33:40.8085316Z >   ???
2025-02-24T16:33:40.8085450Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8085526Z E   
2025-02-24T16:33:40.8085659Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8085779Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8085850Z E          ...
2025-02-24T16:33:40.8085945Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8086169Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8086286Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8086362Z E          ...
2025-02-24T16:33:40.8086448Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8086579Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8086687Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8086695Z 
2025-02-24T16:33:40.8086792Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8087143Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] _
2025-02-24T16:33:40.8087147Z 
2025-02-24T16:33:40.8087508Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512193650>
2025-02-24T16:33:40.8087694Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e4ec8b30>
2025-02-24T16:33:40.8087787Z attr = 'stimulated_emission_factor'
2025-02-24T16:33:40.8087797Z 
2025-02-24T16:33:40.8087940Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8088065Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8088146Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8088224Z         try:
2025-02-24T16:33:40.8088368Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8088455Z         except KeyError:
2025-02-24T16:33:40.8088773Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8088841Z     
2025-02-24T16:33:40.8088930Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8089021Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8089113Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8089247Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8089336Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8089431Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8089538Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8089616Z             else:
2025-02-24T16:33:40.8089711Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8089823Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8089828Z 
2025-02-24T16:33:40.8089969Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8090079Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8090233Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8090301Z     ???
2025-02-24T16:33:40.8090412Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8090416Z 
2025-02-24T16:33:40.8090483Z >   ???
2025-02-24T16:33:40.8090672Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:33:40.8090744Z E   
2025-02-24T16:33:40.8090915Z E   DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-02-24T16:33:40.8091319Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8096262Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T16:33:40.8101821Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T16:33:40.8102156Z E   At positional index 124, first diff: 0.9929028359129612 != 0.9928779361771577
2025-02-24T16:33:40.8102162Z 
2025-02-24T16:33:40.8102260Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8102585Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] _
2025-02-24T16:33:40.8102589Z 
2025-02-24T16:33:40.8102721Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8102865Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8102966Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8103107Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8103235Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8103326Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8103406Z err_msg = None
2025-02-24T16:33:40.8103526Z 
2025-02-24T16:33:40.8103645Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8103733Z         if err_msg is None:
2025-02-24T16:33:40.8103833Z             if left.shape != right.shape:
2025-02-24T16:33:40.8103919Z                 raise_assert_detail(
2025-02-24T16:33:40.8104075Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8104148Z                 )
2025-02-24T16:33:40.8104220Z     
2025-02-24T16:33:40.8104291Z             diff = 0
2025-02-24T16:33:40.8104410Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8104499Z                 # count up differences
2025-02-24T16:33:40.8104688Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8104771Z                     diff += 1
2025-02-24T16:33:40.8104839Z     
2025-02-24T16:33:40.8104932Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8105074Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8105253Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8105373Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8105442Z E           
2025-02-24T16:33:40.8105558Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8105905Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8106173Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8106178Z 
2025-02-24T16:33:40.8106504Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8106509Z 
2025-02-24T16:33:40.8106685Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8106692Z 
2025-02-24T16:33:40.8106933Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512193710>
2025-02-24T16:33:40.8107112Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e4ec8b30>
2025-02-24T16:33:40.8107201Z attr = 'previous_beta_sobolev'
2025-02-24T16:33:40.8107205Z 
2025-02-24T16:33:40.8107476Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8107595Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8107682Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8107755Z         try:
2025-02-24T16:33:40.8107901Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8107986Z         except KeyError:
2025-02-24T16:33:40.8108128Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8108200Z     
2025-02-24T16:33:40.8108288Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8108385Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8108478Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8108614Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8108703Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8108791Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8108905Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8108975Z             else:
2025-02-24T16:33:40.8109074Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8109184Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8109188Z 
2025-02-24T16:33:40.8109433Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8109557Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8109715Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8109788Z     ???
2025-02-24T16:33:40.8109898Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8109910Z 
2025-02-24T16:33:40.8109977Z >   ???
2025-02-24T16:33:40.8110114Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8110181Z E   
2025-02-24T16:33:40.8110315Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8110426Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8110502Z E          ...
2025-02-24T16:33:40.8110594Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8110725Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8110849Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8110917Z E          ...
2025-02-24T16:33:40.8111008Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8111131Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8111240Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8111244Z 
2025-02-24T16:33:40.8111336Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8111739Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] _
2025-02-24T16:33:40.8111742Z 
2025-02-24T16:33:40.8111878Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8112004Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8112108Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8112249Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8112374Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8112472Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8112545Z err_msg = None
2025-02-24T16:33:40.8112549Z 
2025-02-24T16:33:40.8112664Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8112754Z         if err_msg is None:
2025-02-24T16:33:40.8112849Z             if left.shape != right.shape:
2025-02-24T16:33:40.8112936Z                 raise_assert_detail(
2025-02-24T16:33:40.8113085Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8113159Z                 )
2025-02-24T16:33:40.8113226Z     
2025-02-24T16:33:40.8113301Z             diff = 0
2025-02-24T16:33:40.8113420Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8113507Z                 # count up differences
2025-02-24T16:33:40.8113689Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8113766Z                     diff += 1
2025-02-24T16:33:40.8113838Z     
2025-02-24T16:33:40.8113925Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8114070Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8114252Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8114367Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8114441Z E           
2025-02-24T16:33:40.8114551Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8114818Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8115189Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8115195Z 
2025-02-24T16:33:40.8115512Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8115517Z 
2025-02-24T16:33:40.8115689Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8115693Z 
2025-02-24T16:33:40.8115923Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121937d0>
2025-02-24T16:33:40.8116091Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e4ec8b30>
2025-02-24T16:33:40.8116172Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.8116176Z 
2025-02-24T16:33:40.8116315Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8116431Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8116518Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8116627Z         try:
2025-02-24T16:33:40.8116883Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8117013Z         except KeyError:
2025-02-24T16:33:40.8117377Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8117652Z     
2025-02-24T16:33:40.8117810Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8117963Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8118055Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8118199Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8118286Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8118378Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8118490Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8118570Z             else:
2025-02-24T16:33:40.8118670Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8118777Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8118782Z 
2025-02-24T16:33:40.8118917Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8119029Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8119187Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8119255Z     ???
2025-02-24T16:33:40.8119367Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8119371Z 
2025-02-24T16:33:40.8119442Z >   ???
2025-02-24T16:33:40.8119571Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8119643Z E   
2025-02-24T16:33:40.8119772Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8119888Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8119966Z E          ...
2025-02-24T16:33:40.8120055Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8120189Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8120300Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8120373Z E          ...
2025-02-24T16:33:40.8120456Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8120587Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8120696Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8120701Z 
2025-02-24T16:33:40.8120789Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8121082Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] _
2025-02-24T16:33:40.8121087Z 
2025-02-24T16:33:40.8121216Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8121485Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8121593Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8121728Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8121857Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8121953Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8122032Z err_msg = None
2025-02-24T16:33:40.8122036Z 
2025-02-24T16:33:40.8122152Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8122232Z         if err_msg is None:
2025-02-24T16:33:40.8122331Z             if left.shape != right.shape:
2025-02-24T16:33:40.8122413Z                 raise_assert_detail(
2025-02-24T16:33:40.8122567Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8122636Z                 )
2025-02-24T16:33:40.8122708Z     
2025-02-24T16:33:40.8122786Z             diff = 0
2025-02-24T16:33:40.8122898Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8122991Z                 # count up differences
2025-02-24T16:33:40.8123166Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8123248Z                     diff += 1
2025-02-24T16:33:40.8123397Z     
2025-02-24T16:33:40.8123489Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8123631Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8123805Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8123923Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8123992Z E           
2025-02-24T16:33:40.8124108Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8124380Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8124643Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8124650Z 
2025-02-24T16:33:40.8124971Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8124975Z 
2025-02-24T16:33:40.8125147Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8125151Z 
2025-02-24T16:33:40.8125383Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512193890>
2025-02-24T16:33:40.8125561Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e4ec8b30>
2025-02-24T16:33:40.8125638Z attr = 'beta_sobolev'
2025-02-24T16:33:40.8125642Z 
2025-02-24T16:33:40.8125786Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8125910Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8125997Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8126070Z         try:
2025-02-24T16:33:40.8126210Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8126301Z         except KeyError:
2025-02-24T16:33:40.8126448Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8126518Z     
2025-02-24T16:33:40.8126610Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8126712Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8126804Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8127029Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8127121Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8127216Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8127469Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8127551Z             else:
2025-02-24T16:33:40.8127652Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8127762Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8127766Z 
2025-02-24T16:33:40.8127902Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8128015Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8128167Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8128238Z     ???
2025-02-24T16:33:40.8128352Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8128355Z 
2025-02-24T16:33:40.8128431Z >   ???
2025-02-24T16:33:40.8128561Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8128634Z E   
2025-02-24T16:33:40.8128761Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8128875Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8128950Z E          ...
2025-02-24T16:33:40.8129037Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8129289Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8129399Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8129473Z E          ...
2025-02-24T16:33:40.8129554Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8129682Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8129790Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8129794Z 
2025-02-24T16:33:40.8129884Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8130163Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] _
2025-02-24T16:33:40.8130168Z 
2025-02-24T16:33:40.8130294Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8130424Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8130525Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8130658Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8130784Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8130879Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8130963Z err_msg = None
2025-02-24T16:33:40.8130967Z 
2025-02-24T16:33:40.8131088Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8131171Z         if err_msg is None:
2025-02-24T16:33:40.8131274Z             if left.shape != right.shape:
2025-02-24T16:33:40.8131363Z                 raise_assert_detail(
2025-02-24T16:33:40.8131516Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8131588Z                 )
2025-02-24T16:33:40.8131662Z     
2025-02-24T16:33:40.8131744Z             diff = 0
2025-02-24T16:33:40.8131860Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8131957Z                 # count up differences
2025-02-24T16:33:40.8132136Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8132219Z                     diff += 1
2025-02-24T16:33:40.8132286Z     
2025-02-24T16:33:40.8132381Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8132526Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8132702Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8132940Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8133014Z E           
2025-02-24T16:33:40.8133135Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8133404Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8133670Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8133674Z 
2025-02-24T16:33:40.8134000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8134006Z 
2025-02-24T16:33:40.8134188Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8134192Z 
2025-02-24T16:33:40.8134424Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512193a10>
2025-02-24T16:33:40.8134606Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e4ec8b30>
2025-02-24T16:33:40.8134756Z attr = 'j_blues'
2025-02-24T16:33:40.8134760Z 
2025-02-24T16:33:40.8134908Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8135032Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8135116Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8135207Z         try:
2025-02-24T16:33:40.8135458Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8135601Z         except KeyError:
2025-02-24T16:33:40.8135834Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8135952Z     
2025-02-24T16:33:40.8136107Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8136261Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8136420Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8136560Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8136654Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8136744Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8136866Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8136944Z             else:
2025-02-24T16:33:40.8137039Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8137153Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8137156Z 
2025-02-24T16:33:40.8137424Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8137549Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8137704Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8137785Z     ???
2025-02-24T16:33:40.8137900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8137904Z 
2025-02-24T16:33:40.8137972Z >   ???
2025-02-24T16:33:40.8138108Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8138178Z E   
2025-02-24T16:33:40.8138315Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8138437Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8138508Z E          ...
2025-02-24T16:33:40.8138602Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8138736Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8138855Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8138926Z E          ...
2025-02-24T16:33:40.8139016Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8139145Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8139397Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8139402Z 
2025-02-24T16:33:40.8139502Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8139770Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] _
2025-02-24T16:33:40.8139775Z 
2025-02-24T16:33:40.8139913Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8140054Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8140152Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8140290Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8140413Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8140509Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8140589Z err_msg = None
2025-02-24T16:33:40.8140593Z 
2025-02-24T16:33:40.8140705Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8140790Z         if err_msg is None:
2025-02-24T16:33:40.8140886Z             if left.shape != right.shape:
2025-02-24T16:33:40.8140977Z                 raise_assert_detail(
2025-02-24T16:33:40.8141124Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8141308Z                 )
2025-02-24T16:33:40.8141380Z     
2025-02-24T16:33:40.8141452Z             diff = 0
2025-02-24T16:33:40.8141569Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8141656Z                 # count up differences
2025-02-24T16:33:40.8141835Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8141915Z                     diff += 1
2025-02-24T16:33:40.8141988Z     
2025-02-24T16:33:40.8142081Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8142222Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8142403Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8142515Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8142591Z E           
2025-02-24T16:33:40.8142704Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8142972Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8143242Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8143247Z 
2025-02-24T16:33:40.8143566Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8143570Z 
2025-02-24T16:33:40.8143742Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8143749Z 
2025-02-24T16:33:40.8143988Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121b87d0>
2025-02-24T16:33:40.8144160Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a25f380>
2025-02-24T16:33:40.8144239Z attr = 'lines'
2025-02-24T16:33:40.8144243Z 
2025-02-24T16:33:40.8144388Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8144502Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8144591Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8144662Z         try:
2025-02-24T16:33:40.8144896Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8144978Z         except KeyError:
2025-02-24T16:33:40.8145124Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8145197Z     
2025-02-24T16:33:40.8145285Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8145382Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8145472Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8145613Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8145699Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8145793Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8145907Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8145979Z             else:
2025-02-24T16:33:40.8146079Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8146184Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8146188Z 
2025-02-24T16:33:40.8146321Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8146434Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8146588Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8146662Z     ???
2025-02-24T16:33:40.8146769Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8146852Z 
2025-02-24T16:33:40.8146928Z >   ???
2025-02-24T16:33:40.8147060Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8147133Z E   
2025-02-24T16:33:40.8147405Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8147522Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8147598Z E          ...
2025-02-24T16:33:40.8147684Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8147819Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8147938Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8148015Z E          ...
2025-02-24T16:33:40.8148106Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8148228Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8148337Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8148340Z 
2025-02-24T16:33:40.8148429Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8148738Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] _
2025-02-24T16:33:40.8148742Z 
2025-02-24T16:33:40.8148972Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121b8890>
2025-02-24T16:33:40.8149140Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a25f380>
2025-02-24T16:33:40.8149235Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.8149239Z 
2025-02-24T16:33:40.8149373Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8149495Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8149583Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8149652Z         try:
2025-02-24T16:33:40.8149793Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8149873Z         except KeyError:
2025-02-24T16:33:40.8150013Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8150086Z     
2025-02-24T16:33:40.8150177Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8150267Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8150361Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8150494Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8150577Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8150670Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8150777Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8150781Z 
2025-02-24T16:33:40.8151048Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8151167Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8151172Z 
2025-02-24T16:33:40.8151305Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8151394Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8151501Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8151590Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8151736Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8151816Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8151924Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8152002Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8152081Z err_msg = None
2025-02-24T16:33:40.8152085Z 
2025-02-24T16:33:40.8152196Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8152281Z         if err_msg is None:
2025-02-24T16:33:40.8152383Z             if left.shape != right.shape:
2025-02-24T16:33:40.8152466Z                 raise_assert_detail(
2025-02-24T16:33:40.8152650Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8152777Z                 )
2025-02-24T16:33:40.8153057Z     
2025-02-24T16:33:40.8153180Z             diff = 0
2025-02-24T16:33:40.8153373Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8153521Z                 # count up differences
2025-02-24T16:33:40.8153798Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8153885Z                     diff += 1
2025-02-24T16:33:40.8153953Z     
2025-02-24T16:33:40.8154048Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8154183Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8154364Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8154472Z E           AssertionError: Series are different
2025-02-24T16:33:40.8154543Z E           
2025-02-24T16:33:40.8154648Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.8155020Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8155360Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8155693Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8155701Z 
2025-02-24T16:33:40.8156016Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8156310Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] _
2025-02-24T16:33:40.8156314Z 
2025-02-24T16:33:40.8156544Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121b8950>
2025-02-24T16:33:40.8156798Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a25f380>
2025-02-24T16:33:40.8156896Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.8156900Z 
2025-02-24T16:33:40.8157040Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8157152Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8157239Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8157451Z         try:
2025-02-24T16:33:40.8157595Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8157681Z         except KeyError:
2025-02-24T16:33:40.8157817Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8157896Z     
2025-02-24T16:33:40.8157981Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8158080Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8158167Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8158305Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8158403Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8158492Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8158606Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8158610Z 
2025-02-24T16:33:40.8158736Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8158856Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8158997Z 
2025-02-24T16:33:40.8159141Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8159226Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8159338Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8159417Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8159558Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8159641Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8159753Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8159836Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8159910Z err_msg = None
2025-02-24T16:33:40.8159914Z 
2025-02-24T16:33:40.8160027Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8160107Z         if err_msg is None:
2025-02-24T16:33:40.8160208Z             if left.shape != right.shape:
2025-02-24T16:33:40.8160296Z                 raise_assert_detail(
2025-02-24T16:33:40.8160436Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8160511Z                 )
2025-02-24T16:33:40.8160578Z     
2025-02-24T16:33:40.8160654Z             diff = 0
2025-02-24T16:33:40.8160767Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8160859Z                 # count up differences
2025-02-24T16:33:40.8161036Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8161116Z                     diff += 1
2025-02-24T16:33:40.8161188Z     
2025-02-24T16:33:40.8161275Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8161415Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8161593Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8161704Z E           AssertionError: Series are different
2025-02-24T16:33:40.8161779Z E           
2025-02-24T16:33:40.8161880Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.8162277Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8162788Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8163172Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8163177Z 
2025-02-24T16:33:40.8163493Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8163752Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] _
2025-02-24T16:33:40.8163757Z 
2025-02-24T16:33:40.8163883Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8164016Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8164189Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8164326Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8164459Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8164559Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8164637Z err_msg = None
2025-02-24T16:33:40.8164641Z 
2025-02-24T16:33:40.8164751Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8164840Z         if err_msg is None:
2025-02-24T16:33:40.8164939Z             if left.shape != right.shape:
2025-02-24T16:33:40.8165022Z                 raise_assert_detail(
2025-02-24T16:33:40.8165175Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8165245Z                 )
2025-02-24T16:33:40.8165320Z     
2025-02-24T16:33:40.8165393Z             diff = 0
2025-02-24T16:33:40.8165512Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8165607Z                 # count up differences
2025-02-24T16:33:40.8165782Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8165865Z                     diff += 1
2025-02-24T16:33:40.8165934Z     
2025-02-24T16:33:40.8166028Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8166168Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8166352Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8166472Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8166542Z E           
2025-02-24T16:33:40.8166661Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8166926Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8167195Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8167200Z 
2025-02-24T16:33:40.8167742Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8167748Z 
2025-02-24T16:33:40.8167923Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8167927Z 
2025-02-24T16:33:40.8168156Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121b8b90>
2025-02-24T16:33:40.8168368Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a25f380>, attr = 'nu'
2025-02-24T16:33:40.8168372Z 
2025-02-24T16:33:40.8168510Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8168633Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8168717Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8168793Z         try:
2025-02-24T16:33:40.8168940Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8169019Z         except KeyError:
2025-02-24T16:33:40.8169164Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8169231Z     
2025-02-24T16:33:40.8169325Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8169418Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8169511Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8169647Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8169731Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8169934Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8170041Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8170045Z 
2025-02-24T16:33:40.8170174Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8170286Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8170437Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8170510Z     ???
2025-02-24T16:33:40.8170615Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8170622Z 
2025-02-24T16:33:40.8170693Z >   ???
2025-02-24T16:33:40.8170821Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8170895Z E   
2025-02-24T16:33:40.8171029Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8171138Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8171249Z E          ...
2025-02-24T16:33:40.8171403Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8171632Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8171816Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8171938Z E          ...
2025-02-24T16:33:40.8172083Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8172293Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8172470Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8172474Z 
2025-02-24T16:33:40.8172570Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8172852Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] _
2025-02-24T16:33:40.8172857Z 
2025-02-24T16:33:40.8172992Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8173120Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8173221Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8173352Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8173480Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8173579Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8173651Z err_msg = None
2025-02-24T16:33:40.8173655Z 
2025-02-24T16:33:40.8173768Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8173940Z         if err_msg is None:
2025-02-24T16:33:40.8174041Z             if left.shape != right.shape:
2025-02-24T16:33:40.8174125Z                 raise_assert_detail(
2025-02-24T16:33:40.8174273Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8174347Z                 )
2025-02-24T16:33:40.8174415Z     
2025-02-24T16:33:40.8174493Z             diff = 0
2025-02-24T16:33:40.8174603Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8174695Z                 # count up differences
2025-02-24T16:33:40.8174870Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8174951Z                     diff += 1
2025-02-24T16:33:40.8175024Z     
2025-02-24T16:33:40.8175111Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8175253Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8175431Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8175547Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8175616Z E           
2025-02-24T16:33:40.8175731Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8175992Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8176332Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8176341Z 
2025-02-24T16:33:40.8176651Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8176655Z 
2025-02-24T16:33:40.8176828Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8176832Z 
2025-02-24T16:33:40.8177055Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121b8c50>
2025-02-24T16:33:40.8177229Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a25f380>
2025-02-24T16:33:40.8177469Z attr = 'wavelength_cm'
2025-02-24T16:33:40.8177474Z 
2025-02-24T16:33:40.8177610Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8177732Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8177815Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8177888Z         try:
2025-02-24T16:33:40.8178026Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8178111Z         except KeyError:
2025-02-24T16:33:40.8178254Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8178321Z     
2025-02-24T16:33:40.8178411Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8178502Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8178595Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8178724Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8178817Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8178912Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8179020Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8179024Z 
2025-02-24T16:33:40.8179155Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8179267Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8179415Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8179487Z     ???
2025-02-24T16:33:40.8179714Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8179719Z 
2025-02-24T16:33:40.8179793Z >   ???
2025-02-24T16:33:40.8179920Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8179991Z E   
2025-02-24T16:33:40.8180117Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8180231Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8180308Z E          ...
2025-02-24T16:33:40.8180393Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8180527Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8180638Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8180711Z E          ...
2025-02-24T16:33:40.8180795Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8180926Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8181034Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8181041Z 
2025-02-24T16:33:40.8181129Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8181388Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] _
2025-02-24T16:33:40.8181392Z 
2025-02-24T16:33:40.8181522Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8181654Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8181886Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8182018Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8182145Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8182236Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8182315Z err_msg = None
2025-02-24T16:33:40.8182318Z 
2025-02-24T16:33:40.8182434Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8182513Z         if err_msg is None:
2025-02-24T16:33:40.8182611Z             if left.shape != right.shape:
2025-02-24T16:33:40.8182692Z                 raise_assert_detail(
2025-02-24T16:33:40.8182841Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8182910Z                 )
2025-02-24T16:33:40.8182988Z     
2025-02-24T16:33:40.8183064Z             diff = 0
2025-02-24T16:33:40.8183173Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8183263Z                 # count up differences
2025-02-24T16:33:40.8183437Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8183518Z                     diff += 1
2025-02-24T16:33:40.8183584Z     
2025-02-24T16:33:40.8183678Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8183818Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8183994Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8184111Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8184179Z E           
2025-02-24T16:33:40.8184295Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8184558Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8184823Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8184915Z 
2025-02-24T16:33:40.8185237Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8185241Z 
2025-02-24T16:33:40.8185416Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8185420Z 
2025-02-24T16:33:40.8185650Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121b8d10>
2025-02-24T16:33:40.8185867Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a25f380>, attr = 'f_lu'
2025-02-24T16:33:40.8185871Z 
2025-02-24T16:33:40.8186007Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8186128Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8186215Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8186284Z         try:
2025-02-24T16:33:40.8186427Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8186505Z         except KeyError:
2025-02-24T16:33:40.8186652Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8186718Z     
2025-02-24T16:33:40.8186808Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8186904Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8186994Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8187129Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8187418Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8187513Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8187622Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8187634Z 
2025-02-24T16:33:40.8187758Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8187875Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8188023Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8188094Z     ???
2025-02-24T16:33:40.8188202Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8188206Z 
2025-02-24T16:33:40.8188278Z >   ???
2025-02-24T16:33:40.8188410Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8188476Z E   
2025-02-24T16:33:40.8188610Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8188718Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8188796Z E          ...
2025-02-24T16:33:40.8188882Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8189018Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8189136Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8189205Z E          ...
2025-02-24T16:33:40.8189295Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8189421Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8189533Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8189540Z 
2025-02-24T16:33:40.8189633Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8190056Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] _
2025-02-24T16:33:40.8190065Z 
2025-02-24T16:33:40.8190458Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121b9310>
2025-02-24T16:33:40.8190744Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a25f380>
2025-02-24T16:33:40.8190899Z attr = 'stimulated_emission_factor'
2025-02-24T16:33:40.8190906Z 
2025-02-24T16:33:40.8191090Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8191204Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8191290Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8191361Z         try:
2025-02-24T16:33:40.8191506Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8191584Z         except KeyError:
2025-02-24T16:33:40.8191871Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8191945Z     
2025-02-24T16:33:40.8192030Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8192125Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8192211Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8192348Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8192435Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8192529Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8192641Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8192711Z             else:
2025-02-24T16:33:40.8192809Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8192914Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8192918Z 
2025-02-24T16:33:40.8193047Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8193159Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8193310Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8193383Z     ???
2025-02-24T16:33:40.8193488Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8193491Z 
2025-02-24T16:33:40.8193562Z >   ???
2025-02-24T16:33:40.8193745Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:33:40.8193929Z E   
2025-02-24T16:33:40.8194106Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T16:33:40.8194494Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8199823Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:33:40.8205115Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:33:40.8205392Z E   At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T16:33:40.8205397Z 
2025-02-24T16:33:40.8205484Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8205790Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] _
2025-02-24T16:33:40.8205795Z 
2025-02-24T16:33:40.8205931Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8206063Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8206166Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8206302Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8206430Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8206525Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8206600Z err_msg = None
2025-02-24T16:33:40.8206604Z 
2025-02-24T16:33:40.8206720Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8206800Z         if err_msg is None:
2025-02-24T16:33:40.8206902Z             if left.shape != right.shape:
2025-02-24T16:33:40.8206990Z                 raise_assert_detail(
2025-02-24T16:33:40.8207135Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8207210Z                 )
2025-02-24T16:33:40.8207383Z     
2025-02-24T16:33:40.8207460Z             diff = 0
2025-02-24T16:33:40.8207571Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8207667Z                 # count up differences
2025-02-24T16:33:40.8207848Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8207927Z                     diff += 1
2025-02-24T16:33:40.8208001Z     
2025-02-24T16:33:40.8208088Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8208231Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8208502Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8208877Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8209003Z E           
2025-02-24T16:33:40.8209188Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8209595Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8209871Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8209876Z 
2025-02-24T16:33:40.8210195Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8210200Z 
2025-02-24T16:33:40.8210376Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8210380Z 
2025-02-24T16:33:40.8210612Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121b93d0>
2025-02-24T16:33:40.8210788Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a25f380>
2025-02-24T16:33:40.8210992Z attr = 'previous_beta_sobolev'
2025-02-24T16:33:40.8210996Z 
2025-02-24T16:33:40.8211135Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8211256Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8211336Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8211409Z         try:
2025-02-24T16:33:40.8211553Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8211632Z         except KeyError:
2025-02-24T16:33:40.8211775Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8211846Z     
2025-02-24T16:33:40.8211936Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8212029Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8212122Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8212258Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8212342Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8212437Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8212547Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8212627Z             else:
2025-02-24T16:33:40.8212719Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8212828Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8212832Z 
2025-02-24T16:33:40.8212961Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8213075Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8213229Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8213298Z     ???
2025-02-24T16:33:40.8213410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8213414Z 
2025-02-24T16:33:40.8213485Z >   ???
2025-02-24T16:33:40.8213613Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8213684Z E   
2025-02-24T16:33:40.8213818Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8213933Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8214002Z E          ...
2025-02-24T16:33:40.8214097Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8214233Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8214346Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8214420Z E          ...
2025-02-24T16:33:40.8214504Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8214735Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8214844Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8214848Z 
2025-02-24T16:33:40.8214938Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8215220Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] _
2025-02-24T16:33:40.8215225Z 
2025-02-24T16:33:40.8215358Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8215491Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8215587Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8215725Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8215851Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8215944Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8216022Z err_msg = None
2025-02-24T16:33:40.8216026Z 
2025-02-24T16:33:40.8216135Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8216220Z         if err_msg is None:
2025-02-24T16:33:40.8216319Z             if left.shape != right.shape:
2025-02-24T16:33:40.8216402Z                 raise_assert_detail(
2025-02-24T16:33:40.8216630Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8216702Z                 )
2025-02-24T16:33:40.8216774Z     
2025-02-24T16:33:40.8216844Z             diff = 0
2025-02-24T16:33:40.8216957Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8217048Z                 # count up differences
2025-02-24T16:33:40.8217222Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8217443Z                     diff += 1
2025-02-24T16:33:40.8217512Z     
2025-02-24T16:33:40.8217608Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8217746Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8217925Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8218041Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8218110Z E           
2025-02-24T16:33:40.8218225Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8218488Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8218757Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8218762Z 
2025-02-24T16:33:40.8219080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8219085Z 
2025-02-24T16:33:40.8219254Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8219266Z 
2025-02-24T16:33:40.8219496Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121b9490>
2025-02-24T16:33:40.8219671Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a25f380>
2025-02-24T16:33:40.8219750Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.8219753Z 
2025-02-24T16:33:40.8219894Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8220009Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8220095Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8220170Z         try:
2025-02-24T16:33:40.8220428Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8220515Z         except KeyError:
2025-02-24T16:33:40.8220653Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8220730Z     
2025-02-24T16:33:40.8220815Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8220915Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8221009Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8221142Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8221230Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8221319Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8221428Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8221497Z             else:
2025-02-24T16:33:40.8221594Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8221702Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8221708Z 
2025-02-24T16:33:40.8221835Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8221951Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8222101Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8222175Z     ???
2025-02-24T16:33:40.8222286Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8222398Z 
2025-02-24T16:33:40.8222467Z >   ???
2025-02-24T16:33:40.8222598Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8222665Z E   
2025-02-24T16:33:40.8222797Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8222906Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8222979Z E          ...
2025-02-24T16:33:40.8223068Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8223196Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8223314Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8223382Z E          ...
2025-02-24T16:33:40.8223470Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8223594Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8223701Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8223709Z 
2025-02-24T16:33:40.8223800Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8224074Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] _
2025-02-24T16:33:40.8224078Z 
2025-02-24T16:33:40.8224211Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8224336Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8224435Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8224578Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8224697Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8224793Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8224866Z err_msg = None
2025-02-24T16:33:40.8224870Z 
2025-02-24T16:33:40.8224989Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8225075Z         if err_msg is None:
2025-02-24T16:33:40.8225170Z             if left.shape != right.shape:
2025-02-24T16:33:40.8225257Z                 raise_assert_detail(
2025-02-24T16:33:40.8225399Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8225474Z                 )
2025-02-24T16:33:40.8225540Z     
2025-02-24T16:33:40.8225616Z             diff = 0
2025-02-24T16:33:40.8225730Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8225816Z                 # count up differences
2025-02-24T16:33:40.8226081Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8226160Z                     diff += 1
2025-02-24T16:33:40.8226231Z     
2025-02-24T16:33:40.8226318Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8226460Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8226641Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8226753Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8226828Z E           
2025-02-24T16:33:40.8226938Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8227203Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8227597Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8227714Z 
2025-02-24T16:33:40.8228027Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8228031Z 
2025-02-24T16:33:40.8228209Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8228212Z 
2025-02-24T16:33:40.8228447Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121b9550>
2025-02-24T16:33:40.8228618Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a25f380>
2025-02-24T16:33:40.8228701Z attr = 'beta_sobolev'
2025-02-24T16:33:40.8228704Z 
2025-02-24T16:33:40.8228845Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8228967Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8229054Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8229124Z         try:
2025-02-24T16:33:40.8229267Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8229346Z         except KeyError:
2025-02-24T16:33:40.8229494Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8229560Z     
2025-02-24T16:33:40.8229653Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8229750Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8229837Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8229975Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8230057Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8230150Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8230261Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8230338Z             else:
2025-02-24T16:33:40.8230438Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8230542Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8230546Z 
2025-02-24T16:33:40.8230676Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8230789Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8230944Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8231019Z     ???
2025-02-24T16:33:40.8231127Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8231131Z 
2025-02-24T16:33:40.8231204Z >   ???
2025-02-24T16:33:40.8231331Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8231406Z E   
2025-02-24T16:33:40.8231537Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8231811Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8231890Z E          ...
2025-02-24T16:33:40.8231976Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8232111Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8232223Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8232298Z E          ...
2025-02-24T16:33:40.8232387Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8232520Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8232629Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8232633Z 
2025-02-24T16:33:40.8232720Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8232990Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] _
2025-02-24T16:33:40.8232995Z 
2025-02-24T16:33:40.8233153Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8233400Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8233562Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8233782Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8233990Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8234261Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8234347Z err_msg = None
2025-02-24T16:33:40.8234351Z 
2025-02-24T16:33:40.8234468Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8234547Z         if err_msg is None:
2025-02-24T16:33:40.8234646Z             if left.shape != right.shape:
2025-02-24T16:33:40.8234729Z                 raise_assert_detail(
2025-02-24T16:33:40.8234880Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8234958Z                 )
2025-02-24T16:33:40.8235026Z     
2025-02-24T16:33:40.8235103Z             diff = 0
2025-02-24T16:33:40.8235214Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8235305Z                 # count up differences
2025-02-24T16:33:40.8235478Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8235562Z                     diff += 1
2025-02-24T16:33:40.8235633Z     
2025-02-24T16:33:40.8235720Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8235860Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8236033Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8236148Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8236218Z E           
2025-02-24T16:33:40.8236333Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8236600Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8236858Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8236866Z 
2025-02-24T16:33:40.8237184Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8237188Z 
2025-02-24T16:33:40.8237534Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8237539Z 
2025-02-24T16:33:40.8237893Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121b96d0>
2025-02-24T16:33:40.8238072Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a25f380>
2025-02-24T16:33:40.8238145Z attr = 'j_blues'
2025-02-24T16:33:40.8238149Z 
2025-02-24T16:33:40.8238291Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8238408Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8238496Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8238569Z         try:
2025-02-24T16:33:40.8238707Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8238791Z         except KeyError:
2025-02-24T16:33:40.8238935Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8239002Z     
2025-02-24T16:33:40.8239091Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8239182Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8239273Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8239407Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8239497Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8239591Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8239698Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8239773Z             else:
2025-02-24T16:33:40.8239866Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8240097Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8240102Z 
2025-02-24T16:33:40.8240226Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8240341Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8240494Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8240561Z     ???
2025-02-24T16:33:40.8240676Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8240680Z 
2025-02-24T16:33:40.8240747Z >   ???
2025-02-24T16:33:40.8240883Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8240951Z E   
2025-02-24T16:33:40.8241086Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8241202Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8241271Z E          ...
2025-02-24T16:33:40.8241364Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8241494Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8241610Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8241683Z E          ...
2025-02-24T16:33:40.8241767Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8241897Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8242000Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8242004Z 
2025-02-24T16:33:40.8242097Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8242302Z _____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines] ______
2025-02-24T16:33:40.8242305Z 
2025-02-24T16:33:40.8242439Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8242574Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8242670Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8242815Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8242936Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8243032Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8243110Z err_msg = None
2025-02-24T16:33:40.8243114Z 
2025-02-24T16:33:40.8243223Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8243307Z         if err_msg is None:
2025-02-24T16:33:40.8243484Z             if left.shape != right.shape:
2025-02-24T16:33:40.8243576Z                 raise_assert_detail(
2025-02-24T16:33:40.8243726Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8243797Z                 )
2025-02-24T16:33:40.8243868Z     
2025-02-24T16:33:40.8243938Z             diff = 0
2025-02-24T16:33:40.8244051Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8244139Z                 # count up differences
2025-02-24T16:33:40.8244318Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8244400Z                     diff += 1
2025-02-24T16:33:40.8244467Z     
2025-02-24T16:33:40.8244560Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8244694Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8244874Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8244990Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8245065Z E           
2025-02-24T16:33:40.8245181Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8245443Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8245792Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8245797Z 
2025-02-24T16:33:40.8246117Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8246121Z 
2025-02-24T16:33:40.8246293Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8246296Z 
2025-02-24T16:33:40.8246534Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121ba450>
2025-02-24T16:33:40.8246704Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff5121b8e30>
2025-02-24T16:33:40.8246787Z attr = 'lines'
2025-02-24T16:33:40.8246791Z 
2025-02-24T16:33:40.8246932Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8247048Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8247140Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8247211Z         try:
2025-02-24T16:33:40.8247471Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8247553Z         except KeyError:
2025-02-24T16:33:40.8247697Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8247769Z     
2025-02-24T16:33:40.8247858Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8247957Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8248046Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8248183Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8248272Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8248361Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8248477Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8248548Z             else:
2025-02-24T16:33:40.8248648Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8248752Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8248756Z 
2025-02-24T16:33:40.8248887Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8249005Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8249149Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8249339Z     ???
2025-02-24T16:33:40.8249450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8249454Z 
2025-02-24T16:33:40.8249527Z >   ???
2025-02-24T16:33:40.8249654Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8249727Z E   
2025-02-24T16:33:40.8249859Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8249975Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8250050Z E          ...
2025-02-24T16:33:40.8250140Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8250277Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8250396Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8250465Z E          ...
2025-02-24T16:33:40.8250555Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8250683Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8250793Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8250798Z 
2025-02-24T16:33:40.8250886Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8251140Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] _
2025-02-24T16:33:40.8251144Z 
2025-02-24T16:33:40.8251381Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121ba510>
2025-02-24T16:33:40.8251834Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff5121b8e30>
2025-02-24T16:33:40.8251987Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.8251994Z 
2025-02-24T16:33:40.8252220Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8252415Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8252557Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8252681Z         try:
2025-02-24T16:33:40.8252840Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8252925Z         except KeyError:
2025-02-24T16:33:40.8253066Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8253134Z     
2025-02-24T16:33:40.8253226Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8253321Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8253407Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8253549Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8253633Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8253726Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8253837Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8253846Z 
2025-02-24T16:33:40.8253971Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8254089Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8254093Z 
2025-02-24T16:33:40.8254237Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8254330Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8254439Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8254522Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8254669Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8254755Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8254865Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8254943Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8255022Z err_msg = None
2025-02-24T16:33:40.8255026Z 
2025-02-24T16:33:40.8255141Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8255221Z         if err_msg is None:
2025-02-24T16:33:40.8255318Z             if left.shape != right.shape:
2025-02-24T16:33:40.8255401Z                 raise_assert_detail(
2025-02-24T16:33:40.8255644Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8255716Z                 )
2025-02-24T16:33:40.8255788Z     
2025-02-24T16:33:40.8255865Z             diff = 0
2025-02-24T16:33:40.8255976Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8256069Z                 # count up differences
2025-02-24T16:33:40.8256244Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8256328Z                     diff += 1
2025-02-24T16:33:40.8256396Z     
2025-02-24T16:33:40.8256487Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8256630Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8256804Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8256912Z E           AssertionError: Series are different
2025-02-24T16:33:40.8256982Z E           
2025-02-24T16:33:40.8257091Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.8257634Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8258095Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8258446Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8258449Z 
2025-02-24T16:33:40.8258761Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8259003Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] _
2025-02-24T16:33:40.8259007Z 
2025-02-24T16:33:40.8259242Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121ba5d0>
2025-02-24T16:33:40.8259416Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff5121b8e30>
2025-02-24T16:33:40.8259505Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.8259508Z 
2025-02-24T16:33:40.8259651Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8259771Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8259859Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8259928Z         try:
2025-02-24T16:33:40.8260072Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8260155Z         except KeyError:
2025-02-24T16:33:40.8260292Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8260367Z     
2025-02-24T16:33:40.8260452Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8260546Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8260634Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8260769Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8260858Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8260945Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8261058Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8261062Z 
2025-02-24T16:33:40.8261298Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8261419Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8261423Z 
2025-02-24T16:33:40.8261569Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8261655Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8261767Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8261848Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8261994Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8262079Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8262183Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8262269Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8262342Z err_msg = None
2025-02-24T16:33:40.8262346Z 
2025-02-24T16:33:40.8262461Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8262540Z         if err_msg is None:
2025-02-24T16:33:40.8262637Z             if left.shape != right.shape:
2025-02-24T16:33:40.8262725Z                 raise_assert_detail(
2025-02-24T16:33:40.8262870Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8262945Z                 )
2025-02-24T16:33:40.8263093Z     
2025-02-24T16:33:40.8263170Z             diff = 0
2025-02-24T16:33:40.8263282Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8263372Z                 # count up differences
2025-02-24T16:33:40.8263551Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8263626Z                     diff += 1
2025-02-24T16:33:40.8272909Z     
2025-02-24T16:33:40.8273047Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8273294Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8273633Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8273816Z E           AssertionError: Series are different
2025-02-24T16:33:40.8273934Z E           
2025-02-24T16:33:40.8274111Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.8274621Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8275014Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8275389Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8275398Z 
2025-02-24T16:33:40.8275726Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8275930Z _______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-nu] _______
2025-02-24T16:33:40.8275934Z 
2025-02-24T16:33:40.8276068Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8276369Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8276486Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8276628Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8276750Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8276855Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8276933Z err_msg = None
2025-02-24T16:33:40.8276938Z 
2025-02-24T16:33:40.8277061Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8277152Z         if err_msg is None:
2025-02-24T16:33:40.8277409Z             if left.shape != right.shape:
2025-02-24T16:33:40.8277505Z                 raise_assert_detail(
2025-02-24T16:33:40.8277657Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8277737Z                 )
2025-02-24T16:33:40.8277807Z     
2025-02-24T16:33:40.8277888Z             diff = 0
2025-02-24T16:33:40.8278008Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8278097Z                 # count up differences
2025-02-24T16:33:40.8278276Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8278506Z                     diff += 1
2025-02-24T16:33:40.8278580Z     
2025-02-24T16:33:40.8278670Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8278816Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8278994Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8279111Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8279188Z E           
2025-02-24T16:33:40.8279301Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8279574Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8279838Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8279846Z 
2025-02-24T16:33:40.8280159Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8280163Z 
2025-02-24T16:33:40.8280344Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8280348Z 
2025-02-24T16:33:40.8280597Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121ba810>
2025-02-24T16:33:40.8280799Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff5121b8e30>, attr = 'nu'
2025-02-24T16:33:40.8280803Z 
2025-02-24T16:33:40.8280951Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8281070Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8281165Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8281240Z         try:
2025-02-24T16:33:40.8281385Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8281471Z         except KeyError:
2025-02-24T16:33:40.8281612Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8281689Z     
2025-02-24T16:33:40.8281776Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8281877Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8281973Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8282219Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8282315Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8282404Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8282523Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8282528Z 
2025-02-24T16:33:40.8282658Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8282784Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8282939Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8283010Z     ???
2025-02-24T16:33:40.8283124Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8283128Z 
2025-02-24T16:33:40.8283196Z >   ???
2025-02-24T16:33:40.8283330Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8283404Z E   
2025-02-24T16:33:40.8283533Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8283651Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8283723Z E          ...
2025-02-24T16:33:40.8283817Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8283952Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8284062Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8284240Z E          ...
2025-02-24T16:33:40.8284323Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8284449Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8284555Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8284559Z 
2025-02-24T16:33:40.8284655Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8284867Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] __
2025-02-24T16:33:40.8284870Z 
2025-02-24T16:33:40.8285000Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8285137Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8285235Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8285373Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8285500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8285594Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8285676Z err_msg = None
2025-02-24T16:33:40.8285680Z 
2025-02-24T16:33:40.8285792Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8285877Z         if err_msg is None:
2025-02-24T16:33:40.8285978Z             if left.shape != right.shape:
2025-02-24T16:33:40.8286062Z                 raise_assert_detail(
2025-02-24T16:33:40.8286212Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8286287Z                 )
2025-02-24T16:33:40.8286359Z     
2025-02-24T16:33:40.8286428Z             diff = 0
2025-02-24T16:33:40.8286540Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8286630Z                 # count up differences
2025-02-24T16:33:40.8286800Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8286885Z                     diff += 1
2025-02-24T16:33:40.8286953Z     
2025-02-24T16:33:40.8287046Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8287188Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8287475Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8287593Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8287663Z E           
2025-02-24T16:33:40.8287782Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8288157Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8288424Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8288432Z 
2025-02-24T16:33:40.8288945Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8288952Z 
2025-02-24T16:33:40.8289243Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8289249Z 
2025-02-24T16:33:40.8289643Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121ba8d0>
2025-02-24T16:33:40.8289853Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff5121b8e30>
2025-02-24T16:33:40.8289933Z attr = 'wavelength_cm'
2025-02-24T16:33:40.8289937Z 
2025-02-24T16:33:40.8290087Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8290204Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8290421Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8290495Z         try:
2025-02-24T16:33:40.8290641Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8290726Z         except KeyError:
2025-02-24T16:33:40.8290865Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8290938Z     
2025-02-24T16:33:40.8291025Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8291123Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8291217Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8291353Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8291443Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8291532Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8291649Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8291653Z 
2025-02-24T16:33:40.8291780Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8291906Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8292060Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8292129Z     ???
2025-02-24T16:33:40.8292244Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8292248Z 
2025-02-24T16:33:40.8292316Z >   ???
2025-02-24T16:33:40.8292449Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8292522Z E   
2025-02-24T16:33:40.8292650Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8292768Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8292839Z E          ...
2025-02-24T16:33:40.8292932Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8293061Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8293176Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8293255Z E          ...
2025-02-24T16:33:40.8293339Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8293466Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8293572Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8293575Z 
2025-02-24T16:33:40.8293669Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8293864Z ______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-f_lu] ______
2025-02-24T16:33:40.8293873Z 
2025-02-24T16:33:40.8294085Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8294224Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8294323Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8294459Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8294582Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8294685Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8294763Z err_msg = None
2025-02-24T16:33:40.8294767Z 
2025-02-24T16:33:40.8294878Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8294964Z         if err_msg is None:
2025-02-24T16:33:40.8295059Z             if left.shape != right.shape:
2025-02-24T16:33:40.8295148Z                 raise_assert_detail(
2025-02-24T16:33:40.8295302Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8295379Z                 )
2025-02-24T16:33:40.8295450Z     
2025-02-24T16:33:40.8295521Z             diff = 0
2025-02-24T16:33:40.8295640Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8295727Z                 # count up differences
2025-02-24T16:33:40.8295905Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8296077Z                     diff += 1
2025-02-24T16:33:40.8296144Z     
2025-02-24T16:33:40.8296236Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8296375Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8296549Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8296664Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8296740Z E           
2025-02-24T16:33:40.8296856Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8297120Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8297533Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8297542Z 
2025-02-24T16:33:40.8297867Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8297871Z 
2025-02-24T16:33:40.8298045Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8298050Z 
2025-02-24T16:33:40.8298282Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121ba990>
2025-02-24T16:33:40.8298487Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff5121b8e30>, attr = 'f_lu'
2025-02-24T16:33:40.8298496Z 
2025-02-24T16:33:40.8298636Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8298756Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8298843Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8298920Z         try:
2025-02-24T16:33:40.8299063Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8299148Z         except KeyError:
2025-02-24T16:33:40.8299293Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8299362Z     
2025-02-24T16:33:40.8299454Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8299547Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8299672Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8299922Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8300017Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8300112Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8300225Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8300230Z 
2025-02-24T16:33:40.8300362Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8300479Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8300632Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8300708Z     ???
2025-02-24T16:33:40.8300819Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8300823Z 
2025-02-24T16:33:40.8300895Z >   ???
2025-02-24T16:33:40.8301025Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8301096Z E   
2025-02-24T16:33:40.8301223Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8301341Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8301417Z E          ...
2025-02-24T16:33:40.8301503Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8301635Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8301743Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8301925Z E          ...
2025-02-24T16:33:40.8302009Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8302138Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8302248Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8302252Z 
2025-02-24T16:33:40.8302342Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8302590Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] _
2025-02-24T16:33:40.8302594Z 
2025-02-24T16:33:40.8302821Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121baf90>
2025-02-24T16:33:40.8302997Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff5121b8e30>
2025-02-24T16:33:40.8303091Z attr = 'stimulated_emission_factor'
2025-02-24T16:33:40.8303096Z 
2025-02-24T16:33:40.8303230Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8303347Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8303433Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8303507Z         try:
2025-02-24T16:33:40.8303644Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8303728Z         except KeyError:
2025-02-24T16:33:40.8303867Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8303935Z     
2025-02-24T16:33:40.8304027Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8304119Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8304211Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8304345Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8304434Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8304526Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8304632Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8304707Z             else:
2025-02-24T16:33:40.8304801Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8304916Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8304920Z 
2025-02-24T16:33:40.8305049Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8305159Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8305311Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8305378Z     ???
2025-02-24T16:33:40.8305489Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8305493Z 
2025-02-24T16:33:40.8305559Z >   ???
2025-02-24T16:33:40.8305844Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:33:40.8305918Z E   
2025-02-24T16:33:40.8306085Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T16:33:40.8306458Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8311466Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:33:40.8316556Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:33:40.8316740Z E   At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T16:33:40.8316750Z 
2025-02-24T16:33:40.8316838Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8317072Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] _
2025-02-24T16:33:40.8317076Z 
2025-02-24T16:33:40.8317206Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8317461Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8317574Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8317706Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8317836Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8317929Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8318120Z err_msg = None
2025-02-24T16:33:40.8318125Z 
2025-02-24T16:33:40.8318238Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8318323Z         if err_msg is None:
2025-02-24T16:33:40.8318424Z             if left.shape != right.shape:
2025-02-24T16:33:40.8318508Z                 raise_assert_detail(
2025-02-24T16:33:40.8318660Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8318730Z                 )
2025-02-24T16:33:40.8318803Z     
2025-02-24T16:33:40.8318874Z             diff = 0
2025-02-24T16:33:40.8318991Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8319084Z                 # count up differences
2025-02-24T16:33:40.8319254Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8319339Z                     diff += 1
2025-02-24T16:33:40.8319408Z     
2025-02-24T16:33:40.8319500Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8319642Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8319814Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8319933Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8320005Z E           
2025-02-24T16:33:40.8320125Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8320387Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8320651Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8320659Z 
2025-02-24T16:33:40.8320973Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8320978Z 
2025-02-24T16:33:40.8321158Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8321162Z 
2025-02-24T16:33:40.8321393Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121bb050>
2025-02-24T16:33:40.8321625Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff5121b8e30>
2025-02-24T16:33:40.8321947Z attr = 'previous_beta_sobolev'
2025-02-24T16:33:40.8321955Z 
2025-02-24T16:33:40.8322189Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8322386Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8322520Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8322645Z         try:
2025-02-24T16:33:40.8322825Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8322909Z         except KeyError:
2025-02-24T16:33:40.8323050Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8323116Z     
2025-02-24T16:33:40.8323206Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8323300Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8323392Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8323525Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8323609Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8323704Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8323813Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8323893Z             else:
2025-02-24T16:33:40.8323988Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8324097Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8324102Z 
2025-02-24T16:33:40.8324323Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8324438Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8324591Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8324659Z     ???
2025-02-24T16:33:40.8324772Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8324776Z 
2025-02-24T16:33:40.8324848Z >   ???
2025-02-24T16:33:40.8324975Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8325046Z E   
2025-02-24T16:33:40.8325175Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8325291Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8325361Z E          ...
2025-02-24T16:33:40.8325453Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8325586Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8325705Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8325778Z E          ...
2025-02-24T16:33:40.8325863Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8325995Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8326100Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8326109Z 
2025-02-24T16:33:40.8326198Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8326403Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] __
2025-02-24T16:33:40.8326407Z 
2025-02-24T16:33:40.8326860Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8326996Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8327099Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8327229Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8327492Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8327589Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8327667Z err_msg = None
2025-02-24T16:33:40.8327671Z 
2025-02-24T16:33:40.8327781Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8327868Z         if err_msg is None:
2025-02-24T16:33:40.8327967Z             if left.shape != right.shape:
2025-02-24T16:33:40.8328052Z                 raise_assert_detail(
2025-02-24T16:33:40.8328328Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8328401Z                 )
2025-02-24T16:33:40.8328472Z     
2025-02-24T16:33:40.8328543Z             diff = 0
2025-02-24T16:33:40.8328660Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8328752Z                 # count up differences
2025-02-24T16:33:40.8328919Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8329007Z                     diff += 1
2025-02-24T16:33:40.8329074Z     
2025-02-24T16:33:40.8329167Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8329303Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8329478Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8329596Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8329666Z E           
2025-02-24T16:33:40.8329784Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8330043Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8330415Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8330420Z 
2025-02-24T16:33:40.8330734Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8330737Z 
2025-02-24T16:33:40.8330915Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8330922Z 
2025-02-24T16:33:40.8331147Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121bb110>
2025-02-24T16:33:40.8331320Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff5121b8e30>
2025-02-24T16:33:40.8331399Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.8331403Z 
2025-02-24T16:33:40.8331545Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8331669Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8331752Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8331826Z         try:
2025-02-24T16:33:40.8331964Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8332049Z         except KeyError:
2025-02-24T16:33:40.8332183Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8332255Z     
2025-02-24T16:33:40.8332341Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8332442Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8332539Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8332670Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8332759Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8332848Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8332962Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8333045Z             else:
2025-02-24T16:33:40.8333142Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8333252Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8333256Z 
2025-02-24T16:33:40.8333381Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8333499Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8333641Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8333715Z     ???
2025-02-24T16:33:40.8333935Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8333940Z 
2025-02-24T16:33:40.8334009Z >   ???
2025-02-24T16:33:40.8334140Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8334207Z E   
2025-02-24T16:33:40.8334339Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8334450Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8334527Z E          ...
2025-02-24T16:33:40.8334619Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8334747Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8334862Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8334931Z E          ...
2025-02-24T16:33:40.8335020Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8335149Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8335255Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8335259Z 
2025-02-24T16:33:40.8335354Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8335553Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] __
2025-02-24T16:33:40.8335557Z 
2025-02-24T16:33:40.8335689Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8335819Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8335995Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8336130Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8336252Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8336348Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8336421Z err_msg = None
2025-02-24T16:33:40.8336430Z 
2025-02-24T16:33:40.8336538Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8336626Z         if err_msg is None:
2025-02-24T16:33:40.8336720Z             if left.shape != right.shape:
2025-02-24T16:33:40.8336809Z                 raise_assert_detail(
2025-02-24T16:33:40.8336953Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8337028Z                 )
2025-02-24T16:33:40.8337099Z     
2025-02-24T16:33:40.8337174Z             diff = 0
2025-02-24T16:33:40.8337415Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8337505Z                 # count up differences
2025-02-24T16:33:40.8337681Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8337757Z                     diff += 1
2025-02-24T16:33:40.8337830Z     
2025-02-24T16:33:40.8337918Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8338059Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8338233Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8338345Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8338420Z E           
2025-02-24T16:33:40.8338529Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8338793Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8339059Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8339064Z 
2025-02-24T16:33:40.8339485Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8339496Z 
2025-02-24T16:33:40.8339668Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8339672Z 
2025-02-24T16:33:40.8339900Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121bb1d0>
2025-02-24T16:33:40.8340071Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff5121b8e30>
2025-02-24T16:33:40.8340154Z attr = 'beta_sobolev'
2025-02-24T16:33:40.8340158Z 
2025-02-24T16:33:40.8340293Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8340412Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8340500Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8340572Z         try:
2025-02-24T16:33:40.8340715Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8340794Z         except KeyError:
2025-02-24T16:33:40.8340937Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8341010Z     
2025-02-24T16:33:40.8341096Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8341193Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8341280Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8341414Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8341624Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8341719Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8341833Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8341903Z             else:
2025-02-24T16:33:40.8342001Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8342105Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8342109Z 
2025-02-24T16:33:40.8342236Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8342351Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8342501Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8342575Z     ???
2025-02-24T16:33:40.8342680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8342684Z 
2025-02-24T16:33:40.8342754Z >   ???
2025-02-24T16:33:40.8342879Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8342955Z E   
2025-02-24T16:33:40.8343080Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8343192Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8343269Z E          ...
2025-02-24T16:33:40.8343354Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8343486Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8343595Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8343670Z E          ...
2025-02-24T16:33:40.8343762Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8343884Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8343993Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8343997Z 
2025-02-24T16:33:40.8344085Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8344286Z ____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-j_blues] _____
2025-02-24T16:33:40.8344293Z 
2025-02-24T16:33:40.8344420Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8344549Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8344648Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8344781Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8344905Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8345088Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8345169Z err_msg = None
2025-02-24T16:33:40.8345173Z 
2025-02-24T16:33:40.8345287Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8345367Z         if err_msg is None:
2025-02-24T16:33:40.8345466Z             if left.shape != right.shape:
2025-02-24T16:33:40.8345549Z                 raise_assert_detail(
2025-02-24T16:33:40.8345703Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8345777Z                 )
2025-02-24T16:33:40.8345843Z     
2025-02-24T16:33:40.8345918Z             diff = 0
2025-02-24T16:33:40.8346026Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8346117Z                 # count up differences
2025-02-24T16:33:40.8346288Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8346373Z                     diff += 1
2025-02-24T16:33:40.8346446Z     
2025-02-24T16:33:40.8346536Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8346678Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8346846Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8347030Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8347152Z E           
2025-02-24T16:33:40.8347595Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8348069Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8348523Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8348529Z 
2025-02-24T16:33:40.8348848Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8348853Z 
2025-02-24T16:33:40.8349036Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8349040Z 
2025-02-24T16:33:40.8349266Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121bb350>
2025-02-24T16:33:40.8349438Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff5121b8e30>
2025-02-24T16:33:40.8349515Z attr = 'j_blues'
2025-02-24T16:33:40.8349524Z 
2025-02-24T16:33:40.8349666Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8349787Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8349870Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8349947Z         try:
2025-02-24T16:33:40.8350089Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8350173Z         except KeyError:
2025-02-24T16:33:40.8350315Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8350383Z     
2025-02-24T16:33:40.8350474Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8350570Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8350662Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8350794Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8350884Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8350979Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8351091Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8351167Z             else:
2025-02-24T16:33:40.8351262Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8351498Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8351503Z 
2025-02-24T16:33:40.8351632Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8351752Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8351903Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8351972Z     ???
2025-02-24T16:33:40.8352092Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8352096Z 
2025-02-24T16:33:40.8352164Z >   ???
2025-02-24T16:33:40.8352297Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8352368Z E   
2025-02-24T16:33:40.8352496Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8352610Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8352680Z E          ...
2025-02-24T16:33:40.8352772Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8352906Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8353023Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8353097Z E          ...
2025-02-24T16:33:40.8353181Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8353309Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8353415Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8353545Z 
2025-02-24T16:33:40.8353641Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8353864Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines] _______
2025-02-24T16:33:40.8353873Z 
2025-02-24T16:33:40.8354003Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8354137Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8354232Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8354372Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8354494Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8354591Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8354668Z err_msg = None
2025-02-24T16:33:40.8354671Z 
2025-02-24T16:33:40.8354785Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8354870Z         if err_msg is None:
2025-02-24T16:33:40.8354964Z             if left.shape != right.shape:
2025-02-24T16:33:40.8355053Z                 raise_assert_detail(
2025-02-24T16:33:40.8355202Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8355271Z                 )
2025-02-24T16:33:40.8355342Z     
2025-02-24T16:33:40.8355412Z             diff = 0
2025-02-24T16:33:40.8355530Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8355621Z                 # count up differences
2025-02-24T16:33:40.8355797Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8355878Z                     diff += 1
2025-02-24T16:33:40.8355946Z     
2025-02-24T16:33:40.8356040Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8356176Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8356355Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8356467Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8356542Z E           
2025-02-24T16:33:40.8356658Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8357001Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8357410Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8357419Z 
2025-02-24T16:33:40.8357729Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8357734Z 
2025-02-24T16:33:40.8357904Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8357908Z 
2025-02-24T16:33:40.8358137Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e0110>
2025-02-24T16:33:40.8358304Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e7534980>
2025-02-24T16:33:40.8358383Z attr = 'lines'
2025-02-24T16:33:40.8358387Z 
2025-02-24T16:33:40.8358531Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8358644Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8358733Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8358804Z         try:
2025-02-24T16:33:40.8358948Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8359033Z         except KeyError:
2025-02-24T16:33:40.8359289Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8359361Z     
2025-02-24T16:33:40.8359448Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8359548Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8359636Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8359771Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8359860Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8359948Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8360064Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8360134Z             else:
2025-02-24T16:33:40.8360232Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8360339Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8360343Z 
2025-02-24T16:33:40.8360473Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8360592Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8360740Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8360813Z     ???
2025-02-24T16:33:40.8360922Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8360926Z 
2025-02-24T16:33:40.8361003Z >   ???
2025-02-24T16:33:40.8361138Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8361204Z E   
2025-02-24T16:33:40.8361335Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8361447Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8361522Z E          ...
2025-02-24T16:33:40.8361608Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8361743Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8361859Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8361929Z E          ...
2025-02-24T16:33:40.8362021Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8362149Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8362260Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8362264Z 
2025-02-24T16:33:40.8362352Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8362584Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] _
2025-02-24T16:33:40.8362588Z 
2025-02-24T16:33:40.8362815Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e01d0>
2025-02-24T16:33:40.8363097Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e7534980>
2025-02-24T16:33:40.8363193Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.8363197Z 
2025-02-24T16:33:40.8363338Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8363458Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8363545Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8363617Z         try:
2025-02-24T16:33:40.8363762Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8363842Z         except KeyError:
2025-02-24T16:33:40.8363985Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8364052Z     
2025-02-24T16:33:40.8364141Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8364238Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8364330Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8364472Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8364559Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8364651Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8364759Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8364768Z 
2025-02-24T16:33:40.8364894Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8365007Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8365095Z 
2025-02-24T16:33:40.8365234Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8365321Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8365429Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8365512Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8365654Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8365737Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8365850Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8365925Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8366004Z err_msg = None
2025-02-24T16:33:40.8366008Z 
2025-02-24T16:33:40.8366123Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8366205Z         if err_msg is None:
2025-02-24T16:33:40.8366308Z             if left.shape != right.shape:
2025-02-24T16:33:40.8366391Z                 raise_assert_detail(
2025-02-24T16:33:40.8366541Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8366611Z                 )
2025-02-24T16:33:40.8366682Z     
2025-02-24T16:33:40.8366757Z             diff = 0
2025-02-24T16:33:40.8366866Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8366957Z                 # count up differences
2025-02-24T16:33:40.8367127Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8367213Z                     diff += 1
2025-02-24T16:33:40.8367385Z     
2025-02-24T16:33:40.8367478Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8367617Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8367787Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8367898Z E           AssertionError: Series are different
2025-02-24T16:33:40.8367969Z E           
2025-02-24T16:33:40.8368073Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.8368449Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8368891Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8369232Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8369237Z 
2025-02-24T16:33:40.8369552Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8369777Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] _
2025-02-24T16:33:40.8369781Z 
2025-02-24T16:33:40.8370008Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e0290>
2025-02-24T16:33:40.8370181Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e7534980>
2025-02-24T16:33:40.8370271Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.8370377Z 
2025-02-24T16:33:40.8370521Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8370635Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8370721Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8370791Z         try:
2025-02-24T16:33:40.8370935Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8371018Z         except KeyError:
2025-02-24T16:33:40.8371155Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8371230Z     
2025-02-24T16:33:40.8371314Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8371416Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8371503Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8371639Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8371727Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8371822Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8372028Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8372035Z 
2025-02-24T16:33:40.8372253Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8372446Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8372451Z 
2025-02-24T16:33:40.8372681Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8372817Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8373005Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8373112Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8373259Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8373346Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8373454Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8373536Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8373614Z err_msg = None
2025-02-24T16:33:40.8373619Z 
2025-02-24T16:33:40.8373736Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8373816Z         if err_msg is None:
2025-02-24T16:33:40.8373919Z             if left.shape != right.shape:
2025-02-24T16:33:40.8374007Z                 raise_assert_detail(
2025-02-24T16:33:40.8374153Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8374223Z                 )
2025-02-24T16:33:40.8374287Z     
2025-02-24T16:33:40.8374359Z             diff = 0
2025-02-24T16:33:40.8374557Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8374652Z                 # count up differences
2025-02-24T16:33:40.8374826Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8374902Z                     diff += 1
2025-02-24T16:33:40.8374973Z     
2025-02-24T16:33:40.8375057Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8375200Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8375368Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8375476Z E           AssertionError: Series are different
2025-02-24T16:33:40.8375549Z E           
2025-02-24T16:33:40.8375649Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.8376028Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8376405Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8376897Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8376907Z 
2025-02-24T16:33:40.8377219Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8377565Z ________ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-nu] _________
2025-02-24T16:33:40.8377574Z 
2025-02-24T16:33:40.8377704Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8377836Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8377939Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8378068Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8378194Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8378290Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8378368Z err_msg = None
2025-02-24T16:33:40.8378372Z 
2025-02-24T16:33:40.8378478Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8378562Z         if err_msg is None:
2025-02-24T16:33:40.8378660Z             if left.shape != right.shape:
2025-02-24T16:33:40.8378745Z                 raise_assert_detail(
2025-02-24T16:33:40.8378890Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8378960Z                 )
2025-02-24T16:33:40.8379034Z     
2025-02-24T16:33:40.8379104Z             diff = 0
2025-02-24T16:33:40.8379220Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8379309Z                 # count up differences
2025-02-24T16:33:40.8379477Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8379557Z                     diff += 1
2025-02-24T16:33:40.8379624Z     
2025-02-24T16:33:40.8379839Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8379979Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8380152Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8380269Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8380343Z E           
2025-02-24T16:33:40.8380459Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8380717Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8380983Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8380988Z 
2025-02-24T16:33:40.8381298Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8381302Z 
2025-02-24T16:33:40.8381583Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8381587Z 
2025-02-24T16:33:40.8381815Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e04d0>
2025-02-24T16:33:40.8382024Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e7534980>, attr = 'nu'
2025-02-24T16:33:40.8382028Z 
2025-02-24T16:33:40.8382164Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8382284Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8382372Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8382445Z         try:
2025-02-24T16:33:40.8382591Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8382670Z         except KeyError:
2025-02-24T16:33:40.8382812Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8382880Z     
2025-02-24T16:33:40.8382972Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8383065Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8383162Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8383297Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8383384Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8383477Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8383588Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8383592Z 
2025-02-24T16:33:40.8383724Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8383844Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8383992Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8384066Z     ???
2025-02-24T16:33:40.8384174Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8384178Z 
2025-02-24T16:33:40.8384250Z >   ???
2025-02-24T16:33:40.8384378Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8384456Z E   
2025-02-24T16:33:40.8384588Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8384699Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8384775Z E          ...
2025-02-24T16:33:40.8384862Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8385000Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8385120Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8385188Z E          ...
2025-02-24T16:33:40.8385368Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8385495Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8385604Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8385608Z 
2025-02-24T16:33:40.8385697Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8385904Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] ___
2025-02-24T16:33:40.8385911Z 
2025-02-24T16:33:40.8386042Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8386170Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8386269Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8386399Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8386525Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8386626Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8386699Z err_msg = None
2025-02-24T16:33:40.8386702Z 
2025-02-24T16:33:40.8386817Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8386897Z         if err_msg is None:
2025-02-24T16:33:40.8386997Z             if left.shape != right.shape:
2025-02-24T16:33:40.8387085Z                 raise_assert_detail(
2025-02-24T16:33:40.8387458Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8387533Z                 )
2025-02-24T16:33:40.8387604Z     
2025-02-24T16:33:40.8387678Z             diff = 0
2025-02-24T16:33:40.8387790Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8387881Z                 # count up differences
2025-02-24T16:33:40.8388057Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8388135Z                     diff += 1
2025-02-24T16:33:40.8388207Z     
2025-02-24T16:33:40.8388298Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8388439Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8388609Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8388725Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8388804Z E           
2025-02-24T16:33:40.8388916Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8389179Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8389441Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8389453Z 
2025-02-24T16:33:40.8389755Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8389759Z 
2025-02-24T16:33:40.8389936Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8389940Z 
2025-02-24T16:33:40.8390163Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e0590>
2025-02-24T16:33:40.8390338Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e7534980>
2025-02-24T16:33:40.8390422Z attr = 'wavelength_cm'
2025-02-24T16:33:40.8390426Z 
2025-02-24T16:33:40.8390561Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8390683Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8390766Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8390969Z         try:
2025-02-24T16:33:40.8391116Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8391196Z         except KeyError:
2025-02-24T16:33:40.8391339Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8391407Z     
2025-02-24T16:33:40.8391499Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8391595Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8391689Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8391824Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8391908Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8392002Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8392111Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8392115Z 
2025-02-24T16:33:40.8392245Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8392360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8392513Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8392586Z     ???
2025-02-24T16:33:40.8392696Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8392700Z 
2025-02-24T16:33:40.8392773Z >   ???
2025-02-24T16:33:40.8392899Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8393088Z E   
2025-02-24T16:33:40.8393216Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8393333Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8393406Z E          ...
2025-02-24T16:33:40.8393492Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8393624Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8393735Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8393810Z E          ...
2025-02-24T16:33:40.8393904Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8394030Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8394137Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8394141Z 
2025-02-24T16:33:40.8394231Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8394430Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-f_lu] ________
2025-02-24T16:33:40.8394437Z 
2025-02-24T16:33:40.8394565Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8394696Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8394799Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8394932Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8395059Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8395152Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8395230Z err_msg = None
2025-02-24T16:33:40.8395234Z 
2025-02-24T16:33:40.8395347Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8395427Z         if err_msg is None:
2025-02-24T16:33:40.8395527Z             if left.shape != right.shape:
2025-02-24T16:33:40.8395613Z                 raise_assert_detail(
2025-02-24T16:33:40.8395759Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8395834Z                 )
2025-02-24T16:33:40.8395902Z     
2025-02-24T16:33:40.8395977Z             diff = 0
2025-02-24T16:33:40.8396087Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8396179Z                 # count up differences
2025-02-24T16:33:40.8396350Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8396432Z                     diff += 1
2025-02-24T16:33:40.8396642Z     
2025-02-24T16:33:40.8396732Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8396873Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8397043Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8397160Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8397232Z E           
2025-02-24T16:33:40.8397510Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8397772Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8398039Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8398044Z 
2025-02-24T16:33:40.8398385Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8398611Z 
2025-02-24T16:33:40.8398924Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8398930Z 
2025-02-24T16:33:40.8399313Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e0650>
2025-02-24T16:33:40.8399627Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e7534980>, attr = 'f_lu'
2025-02-24T16:33:40.8399632Z 
2025-02-24T16:33:40.8399810Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8399926Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8400018Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8400094Z         try:
2025-02-24T16:33:40.8400240Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8400322Z         except KeyError:
2025-02-24T16:33:40.8400467Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8400541Z     
2025-02-24T16:33:40.8400627Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8400731Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8400819Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8400956Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8401039Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8401135Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8401249Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8401253Z 
2025-02-24T16:33:40.8401380Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8401499Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8401645Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8401721Z     ???
2025-02-24T16:33:40.8401828Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8401837Z 
2025-02-24T16:33:40.8401904Z >   ???
2025-02-24T16:33:40.8402034Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8402105Z E   
2025-02-24T16:33:40.8402238Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8402348Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8402425Z E          ...
2025-02-24T16:33:40.8402516Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8402645Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8402764Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8402834Z E          ...
2025-02-24T16:33:40.8403053Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8403182Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8403292Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8403296Z 
2025-02-24T16:33:40.8403389Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8403589Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] ____
2025-02-24T16:33:40.8403597Z 
2025-02-24T16:33:40.8403729Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8403854Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8403956Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8404092Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8404213Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8404313Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8404386Z err_msg = None
2025-02-24T16:33:40.8404389Z 
2025-02-24T16:33:40.8404505Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8404590Z         if err_msg is None:
2025-02-24T16:33:40.8404684Z             if left.shape != right.shape:
2025-02-24T16:33:40.8404854Z                 raise_assert_detail(
2025-02-24T16:33:40.8404998Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8405072Z                 )
2025-02-24T16:33:40.8405139Z     
2025-02-24T16:33:40.8405215Z             diff = 0
2025-02-24T16:33:40.8405329Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8405416Z                 # count up differences
2025-02-24T16:33:40.8405587Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8405663Z                     diff += 1
2025-02-24T16:33:40.8405740Z     
2025-02-24T16:33:40.8405828Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8405969Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8406142Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8406253Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8406331Z E           
2025-02-24T16:33:40.8406442Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8406704Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8406972Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8406976Z 
2025-02-24T16:33:40.8407390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8407399Z 
2025-02-24T16:33:40.8407575Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8407579Z 
2025-02-24T16:33:40.8407810Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e0dd0>
2025-02-24T16:33:40.8407977Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e7534980>
2025-02-24T16:33:40.8408059Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.8408064Z 
2025-02-24T16:33:40.8408306Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8408506Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8408795Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8408913Z         try:
2025-02-24T16:33:40.8409159Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8409248Z         except KeyError:
2025-02-24T16:33:40.8409391Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8409459Z     
2025-02-24T16:33:40.8409551Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8409654Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8409741Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8409875Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8409959Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8410051Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8410160Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8410235Z             else:
2025-02-24T16:33:40.8410333Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8410442Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8410447Z 
2025-02-24T16:33:40.8410576Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8410689Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8410838Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8410909Z     ???
2025-02-24T16:33:40.8411142Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8411145Z 
2025-02-24T16:33:40.8411217Z >   ???
2025-02-24T16:33:40.8411341Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8411412Z E   
2025-02-24T16:33:40.8411541Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8411655Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8411728Z E          ...
2025-02-24T16:33:40.8411814Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8411956Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8412067Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8412140Z E          ...
2025-02-24T16:33:40.8412223Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8412353Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8412465Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8412469Z 
2025-02-24T16:33:40.8412556Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8412763Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] ____
2025-02-24T16:33:40.8412767Z 
2025-02-24T16:33:40.8412896Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8413027Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8413127Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8413262Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8413388Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8413480Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8413558Z err_msg = None
2025-02-24T16:33:40.8413565Z 
2025-02-24T16:33:40.8413680Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8413759Z         if err_msg is None:
2025-02-24T16:33:40.8413859Z             if left.shape != right.shape:
2025-02-24T16:33:40.8413943Z                 raise_assert_detail(
2025-02-24T16:33:40.8414089Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8414158Z                 )
2025-02-24T16:33:40.8414229Z     
2025-02-24T16:33:40.8414306Z             diff = 0
2025-02-24T16:33:40.8414417Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8414590Z                 # count up differences
2025-02-24T16:33:40.8414763Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8414843Z                     diff += 1
2025-02-24T16:33:40.8414911Z     
2025-02-24T16:33:40.8415003Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8415143Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8415315Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8415432Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8415502Z E           
2025-02-24T16:33:40.8415616Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8415878Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8416140Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8416221Z 
2025-02-24T16:33:40.8416532Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8416536Z 
2025-02-24T16:33:40.8416710Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8416714Z 
2025-02-24T16:33:40.8417098Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e0e90>
2025-02-24T16:33:40.8417510Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e7534980>
2025-02-24T16:33:40.8417639Z attr = 'beta_sobolev'
2025-02-24T16:33:40.8417651Z 
2025-02-24T16:33:40.8417888Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8418051Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8418136Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8418210Z         try:
2025-02-24T16:33:40.8418350Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8418436Z         except KeyError:
2025-02-24T16:33:40.8418571Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8418643Z     
2025-02-24T16:33:40.8418733Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8418826Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8418918Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8419048Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8419136Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8419224Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8419339Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8419414Z             else:
2025-02-24T16:33:40.8419508Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8419619Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8419623Z 
2025-02-24T16:33:40.8419748Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8419867Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8420018Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8420086Z     ???
2025-02-24T16:33:40.8420197Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8420201Z 
2025-02-24T16:33:40.8420270Z >   ???
2025-02-24T16:33:40.8420397Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8420464Z E   
2025-02-24T16:33:40.8420594Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8420860Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8420934Z E          ...
2025-02-24T16:33:40.8421025Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8421153Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8421271Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8421345Z E          ...
2025-02-24T16:33:40.8421434Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8421563Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8421666Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8421670Z 
2025-02-24T16:33:40.8421762Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8421959Z ______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-j_blues] ______
2025-02-24T16:33:40.8421962Z 
2025-02-24T16:33:40.8422095Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8422228Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8422322Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8422458Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8422579Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8422784Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8422862Z err_msg = None
2025-02-24T16:33:40.8422866Z 
2025-02-24T16:33:40.8422974Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8423057Z         if err_msg is None:
2025-02-24T16:33:40.8423151Z             if left.shape != right.shape:
2025-02-24T16:33:40.8423238Z                 raise_assert_detail(
2025-02-24T16:33:40.8423379Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8423456Z                 )
2025-02-24T16:33:40.8423528Z     
2025-02-24T16:33:40.8423599Z             diff = 0
2025-02-24T16:33:40.8423714Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8423800Z                 # count up differences
2025-02-24T16:33:40.8423972Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8424051Z                     diff += 1
2025-02-24T16:33:40.8424124Z     
2025-02-24T16:33:40.8424214Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8424348Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8424525Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8424637Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8424715Z E           
2025-02-24T16:33:40.8424825Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8425090Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8425354Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8425362Z 
2025-02-24T16:33:40.8425668Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8425673Z 
2025-02-24T16:33:40.8425840Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8425844Z 
2025-02-24T16:33:40.8426150Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e1010>
2025-02-24T16:33:40.8426319Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e7534980>
2025-02-24T16:33:40.8426400Z attr = 'j_blues'
2025-02-24T16:33:40.8426404Z 
2025-02-24T16:33:40.8426545Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8426658Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8426751Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8426820Z         try:
2025-02-24T16:33:40.8426962Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8427042Z         except KeyError:
2025-02-24T16:33:40.8427183Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8427443Z     
2025-02-24T16:33:40.8427537Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8427638Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8427725Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8427865Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8427949Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8428043Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8428157Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8428228Z             else:
2025-02-24T16:33:40.8428327Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8428557Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8428561Z 
2025-02-24T16:33:40.8428691Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8428809Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8428959Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8429033Z     ???
2025-02-24T16:33:40.8429140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8429144Z 
2025-02-24T16:33:40.8429219Z >   ???
2025-02-24T16:33:40.8429345Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8429418Z E   
2025-02-24T16:33:40.8429550Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8429661Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8429736Z E          ...
2025-02-24T16:33:40.8429821Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8429957Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8430068Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8430143Z E          ...
2025-02-24T16:33:40.8430232Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8430358Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8430464Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8430468Z 
2025-02-24T16:33:40.8430555Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8430755Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines] ________
2025-02-24T16:33:40.8430759Z 
2025-02-24T16:33:40.8430891Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8431017Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8431122Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8431253Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8431379Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8431477Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8431551Z err_msg = None
2025-02-24T16:33:40.8431555Z 
2025-02-24T16:33:40.8431668Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8431749Z         if err_msg is None:
2025-02-24T16:33:40.8431963Z             if left.shape != right.shape:
2025-02-24T16:33:40.8432050Z                 raise_assert_detail(
2025-02-24T16:33:40.8432198Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8432272Z                 )
2025-02-24T16:33:40.8432339Z     
2025-02-24T16:33:40.8432415Z             diff = 0
2025-02-24T16:33:40.8432526Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8432619Z                 # count up differences
2025-02-24T16:33:40.8432788Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8432869Z                     diff += 1
2025-02-24T16:33:40.8432945Z     
2025-02-24T16:33:40.8433032Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8433172Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8433348Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8433468Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8433538Z E           
2025-02-24T16:33:40.8433653Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8433915Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8434263Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8434268Z 
2025-02-24T16:33:40.8434577Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8434581Z 
2025-02-24T16:33:40.8434754Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8434758Z 
2025-02-24T16:33:40.8434980Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e1d90>
2025-02-24T16:33:40.8435153Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff502ebbb30>
2025-02-24T16:33:40.8435234Z attr = 'lines'
2025-02-24T16:33:40.8435238Z 
2025-02-24T16:33:40.8435374Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8435491Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8435574Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8435649Z         try:
2025-02-24T16:33:40.8435787Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8435871Z         except KeyError:
2025-02-24T16:33:40.8436011Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8436078Z     
2025-02-24T16:33:40.8436172Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8436264Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8436355Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8436483Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8436573Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8436669Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8436779Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8436853Z             else:
2025-02-24T16:33:40.8436947Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8437056Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8437060Z 
2025-02-24T16:33:40.8437185Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8437428Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8437692Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8437763Z     ???
2025-02-24T16:33:40.8437876Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8437880Z 
2025-02-24T16:33:40.8437947Z >   ???
2025-02-24T16:33:40.8438076Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8438147Z E   
2025-02-24T16:33:40.8438273Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8438393Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8438462Z E          ...
2025-02-24T16:33:40.8438552Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8438681Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8438801Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8438873Z E          ...
2025-02-24T16:33:40.8438957Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8439089Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8439191Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8439195Z 
2025-02-24T16:33:40.8439289Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8439510Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] _
2025-02-24T16:33:40.8439518Z 
2025-02-24T16:33:40.8439738Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e1e50>
2025-02-24T16:33:40.8440038Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff502ebbb30>
2025-02-24T16:33:40.8440126Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.8440130Z 
2025-02-24T16:33:40.8440270Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8440386Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8440474Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8440546Z         try:
2025-02-24T16:33:40.8440688Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8440777Z         except KeyError:
2025-02-24T16:33:40.8440912Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8440986Z     
2025-02-24T16:33:40.8441071Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8441168Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8441260Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8441393Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8441481Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8441570Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8441684Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8441688Z 
2025-02-24T16:33:40.8441818Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8441931Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8441934Z 
2025-02-24T16:33:40.8442094Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8442244Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8442435Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8442570Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8442805Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8442951Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8443124Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8443267Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8443349Z err_msg = None
2025-02-24T16:33:40.8443353Z 
2025-02-24T16:33:40.8443471Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8443560Z         if err_msg is None:
2025-02-24T16:33:40.8443657Z             if left.shape != right.shape:
2025-02-24T16:33:40.8443747Z                 raise_assert_detail(
2025-02-24T16:33:40.8443982Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8444062Z                 )
2025-02-24T16:33:40.8444130Z     
2025-02-24T16:33:40.8444210Z             diff = 0
2025-02-24T16:33:40.8444329Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8444419Z                 # count up differences
2025-02-24T16:33:40.8444599Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8444677Z                     diff += 1
2025-02-24T16:33:40.8444750Z     
2025-02-24T16:33:40.8444840Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8444983Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8445158Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8445261Z E           AssertionError: Series are different
2025-02-24T16:33:40.8445339Z E           
2025-02-24T16:33:40.8445445Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.8445833Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8446247Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8446580Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8446590Z 
2025-02-24T16:33:40.8446901Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8447130Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] _
2025-02-24T16:33:40.8447134Z 
2025-02-24T16:33:40.8447470Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e1f10>
2025-02-24T16:33:40.8447645Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff502ebbb30>
2025-02-24T16:33:40.8447739Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.8447743Z 
2025-02-24T16:33:40.8447877Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8448001Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8448084Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8448160Z         try:
2025-02-24T16:33:40.8448303Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8448382Z         except KeyError:
2025-02-24T16:33:40.8448520Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8457640Z     
2025-02-24T16:33:40.8457774Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8457963Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8458124Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8458373Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8458528Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8458682Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8458879Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8458887Z 
2025-02-24T16:33:40.8459312Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8459532Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8459539Z 
2025-02-24T16:33:40.8459776Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8459916Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8460098Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8460240Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8460449Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8460542Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8460647Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8460730Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8460810Z err_msg = None
2025-02-24T16:33:40.8460814Z 
2025-02-24T16:33:40.8460944Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8461029Z         if err_msg is None:
2025-02-24T16:33:40.8461137Z             if left.shape != right.shape:
2025-02-24T16:33:40.8461229Z                 raise_assert_detail(
2025-02-24T16:33:40.8461384Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8461461Z                 )
2025-02-24T16:33:40.8461648Z     
2025-02-24T16:33:40.8461727Z             diff = 0
2025-02-24T16:33:40.8461845Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8461941Z                 # count up differences
2025-02-24T16:33:40.8462128Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8462208Z                     diff += 1
2025-02-24T16:33:40.8462280Z     
2025-02-24T16:33:40.8462372Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8462521Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8462706Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8462820Z E           AssertionError: Series are different
2025-02-24T16:33:40.8462896Z E           
2025-02-24T16:33:40.8463002Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.8463379Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8463763Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8464134Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8464142Z 
2025-02-24T16:33:40.8464475Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8464681Z _________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-nu] __________
2025-02-24T16:33:40.8464685Z 
2025-02-24T16:33:40.8464820Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8465058Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8465164Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8465305Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8465430Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8465528Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8465608Z err_msg = None
2025-02-24T16:33:40.8465613Z 
2025-02-24T16:33:40.8465727Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8465815Z         if err_msg is None:
2025-02-24T16:33:40.8465914Z             if left.shape != right.shape:
2025-02-24T16:33:40.8466005Z                 raise_assert_detail(
2025-02-24T16:33:40.8466154Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8466232Z                 )
2025-02-24T16:33:40.8466300Z     
2025-02-24T16:33:40.8466375Z             diff = 0
2025-02-24T16:33:40.8466493Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8466581Z                 # count up differences
2025-02-24T16:33:40.8466756Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8466914Z                     diff += 1
2025-02-24T16:33:40.8466991Z     
2025-02-24T16:33:40.8467078Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8467219Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8467552Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8467669Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8467743Z E           
2025-02-24T16:33:40.8467856Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8468126Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8468393Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8468401Z 
2025-02-24T16:33:40.8468717Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8468721Z 
2025-02-24T16:33:40.8468896Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8468901Z 
2025-02-24T16:33:40.8469135Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e2150>
2025-02-24T16:33:40.8469337Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff502ebbb30>, attr = 'nu'
2025-02-24T16:33:40.8469341Z 
2025-02-24T16:33:40.8469488Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8469666Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8469828Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8469957Z         try:
2025-02-24T16:33:40.8470193Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8470329Z         except KeyError:
2025-02-24T16:33:40.8470558Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8470678Z     
2025-02-24T16:33:40.8470811Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8470913Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8471010Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8471273Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8471368Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8471462Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8471577Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8471581Z 
2025-02-24T16:33:40.8471712Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8471828Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8471986Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8472057Z     ???
2025-02-24T16:33:40.8472170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8472174Z 
2025-02-24T16:33:40.8472242Z >   ???
2025-02-24T16:33:40.8472378Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8472452Z E   
2025-02-24T16:33:40.8472579Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8472702Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8472773Z E          ...
2025-02-24T16:33:40.8472867Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8472997Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8473114Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8473321Z E          ...
2025-02-24T16:33:40.8473406Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8473534Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8473639Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8473643Z 
2025-02-24T16:33:40.8473738Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8473951Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] ____
2025-02-24T16:33:40.8473955Z 
2025-02-24T16:33:40.8474083Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8474219Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8474314Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8474450Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8474578Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8474672Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8474748Z err_msg = None
2025-02-24T16:33:40.8474752Z 
2025-02-24T16:33:40.8474864Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8474950Z         if err_msg is None:
2025-02-24T16:33:40.8475046Z             if left.shape != right.shape:
2025-02-24T16:33:40.8475136Z                 raise_assert_detail(
2025-02-24T16:33:40.8475288Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8475361Z                 )
2025-02-24T16:33:40.8475432Z     
2025-02-24T16:33:40.8475503Z             diff = 0
2025-02-24T16:33:40.8475621Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8475709Z                 # count up differences
2025-02-24T16:33:40.8475884Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8475972Z                     diff += 1
2025-02-24T16:33:40.8476040Z     
2025-02-24T16:33:40.8476133Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8476269Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8476443Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8476560Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8476630Z E           
2025-02-24T16:33:40.8476743Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8477087Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8477506Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8477515Z 
2025-02-24T16:33:40.8477831Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8477835Z 
2025-02-24T16:33:40.8478003Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8478007Z 
2025-02-24T16:33:40.8478243Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e2210>
2025-02-24T16:33:40.8478417Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff502ebbb30>
2025-02-24T16:33:40.8478496Z attr = 'wavelength_cm'
2025-02-24T16:33:40.8478500Z 
2025-02-24T16:33:40.8478639Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8478754Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8478958Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8479028Z         try:
2025-02-24T16:33:40.8479172Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8479256Z         except KeyError:
2025-02-24T16:33:40.8479393Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8479465Z     
2025-02-24T16:33:40.8479550Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8479647Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8479735Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8479874Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8479963Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8480053Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8480165Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8480169Z 
2025-02-24T16:33:40.8480297Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8480419Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8480568Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8480637Z     ???
2025-02-24T16:33:40.8480748Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8480751Z 
2025-02-24T16:33:40.8480818Z >   ???
2025-02-24T16:33:40.8480947Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8481015Z E   
2025-02-24T16:33:40.8481147Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8481261Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8481332Z E          ...
2025-02-24T16:33:40.8481426Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8481554Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8481669Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8481748Z E          ...
2025-02-24T16:33:40.8481832Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8481958Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8482061Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8482066Z 
2025-02-24T16:33:40.8482158Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8482351Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-f_lu] _________
2025-02-24T16:33:40.8482355Z 
2025-02-24T16:33:40.8482600Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8482737Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8482831Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8482967Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8483089Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8483190Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8483270Z err_msg = None
2025-02-24T16:33:40.8483273Z 
2025-02-24T16:33:40.8483383Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8483468Z         if err_msg is None:
2025-02-24T16:33:40.8483563Z             if left.shape != right.shape:
2025-02-24T16:33:40.8483652Z                 raise_assert_detail(
2025-02-24T16:33:40.8483805Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8483874Z                 )
2025-02-24T16:33:40.8483947Z     
2025-02-24T16:33:40.8484017Z             diff = 0
2025-02-24T16:33:40.8484132Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8484222Z                 # count up differences
2025-02-24T16:33:40.8484396Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8484559Z                     diff += 1
2025-02-24T16:33:40.8484626Z     
2025-02-24T16:33:40.8484719Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8484853Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8485025Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8485136Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8485212Z E           
2025-02-24T16:33:40.8485328Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8485590Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8485855Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8485862Z 
2025-02-24T16:33:40.8486172Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8486176Z 
2025-02-24T16:33:40.8486345Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8486349Z 
2025-02-24T16:33:40.8486578Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e22d0>
2025-02-24T16:33:40.8486781Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff502ebbb30>, attr = 'f_lu'
2025-02-24T16:33:40.8486791Z 
2025-02-24T16:33:40.8486925Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8487043Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8487131Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8487208Z         try:
2025-02-24T16:33:40.8487459Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8487545Z         except KeyError:
2025-02-24T16:33:40.8487686Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8487754Z     
2025-02-24T16:33:40.8487844Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8487936Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8488031Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8488276Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8488368Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8488462Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8488568Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8488572Z 
2025-02-24T16:33:40.8488700Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8488813Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8488963Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8489031Z     ???
2025-02-24T16:33:40.8489141Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8489145Z 
2025-02-24T16:33:40.8489216Z >   ???
2025-02-24T16:33:40.8489340Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8489411Z E   
2025-02-24T16:33:40.8489539Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8489656Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8489731Z E          ...
2025-02-24T16:33:40.8489816Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8489951Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8490060Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8490246Z E          ...
2025-02-24T16:33:40.8490329Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8490461Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8490569Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8490573Z 
2025-02-24T16:33:40.8490661Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8490866Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] _____
2025-02-24T16:33:40.8490870Z 
2025-02-24T16:33:40.8491000Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8491129Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8491227Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8491356Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8491484Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8491578Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8491656Z err_msg = None
2025-02-24T16:33:40.8491659Z 
2025-02-24T16:33:40.8491773Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8491854Z         if err_msg is None:
2025-02-24T16:33:40.8491954Z             if left.shape != right.shape:
2025-02-24T16:33:40.8492040Z                 raise_assert_detail(
2025-02-24T16:33:40.8492186Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8492259Z                 )
2025-02-24T16:33:40.8492333Z     
2025-02-24T16:33:40.8492409Z             diff = 0
2025-02-24T16:33:40.8492519Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8492609Z                 # count up differences
2025-02-24T16:33:40.8492779Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8492862Z                     diff += 1
2025-02-24T16:33:40.8492930Z     
2025-02-24T16:33:40.8493021Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8493167Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8493340Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8493451Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8493525Z E           
2025-02-24T16:33:40.8493635Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8493997Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8494263Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8494270Z 
2025-02-24T16:33:40.8494571Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8494576Z 
2025-02-24T16:33:40.8494745Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8494749Z 
2025-02-24T16:33:40.8494978Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e2a50>
2025-02-24T16:33:40.8495145Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff502ebbb30>
2025-02-24T16:33:40.8495227Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.8495231Z 
2025-02-24T16:33:40.8495365Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8495556Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8495639Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8495713Z         try:
2025-02-24T16:33:40.8495851Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8495930Z         except KeyError:
2025-02-24T16:33:40.8496067Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8496133Z     
2025-02-24T16:33:40.8496222Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8496313Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8496402Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8496536Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8496618Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8496709Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8496815Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8496891Z             else:
2025-02-24T16:33:40.8496989Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8497096Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8497100Z 
2025-02-24T16:33:40.8497230Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8497446Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8497596Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8497663Z     ???
2025-02-24T16:33:40.8497774Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8497778Z 
2025-02-24T16:33:40.8497855Z >   ???
2025-02-24T16:33:40.8497980Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8498053Z E   
2025-02-24T16:33:40.8498178Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8498292Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8498362Z E          ...
2025-02-24T16:33:40.8498456Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8498588Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8498698Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8498776Z E          ...
2025-02-24T16:33:40.8498859Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8498990Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8499099Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8499103Z 
2025-02-24T16:33:40.8499191Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8499512Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] _____
2025-02-24T16:33:40.8499517Z 
2025-02-24T16:33:40.8499647Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8499809Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8499915Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8500045Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8500174Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8500270Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8500352Z err_msg = None
2025-02-24T16:33:40.8500356Z 
2025-02-24T16:33:40.8500467Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8500555Z         if err_msg is None:
2025-02-24T16:33:40.8500659Z             if left.shape != right.shape:
2025-02-24T16:33:40.8500743Z                 raise_assert_detail(
2025-02-24T16:33:40.8500892Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8500962Z                 )
2025-02-24T16:33:40.8501036Z     
2025-02-24T16:33:40.8501108Z             diff = 0
2025-02-24T16:33:40.8501337Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8501432Z                 # count up differences
2025-02-24T16:33:40.8501600Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8501683Z                     diff += 1
2025-02-24T16:33:40.8501750Z     
2025-02-24T16:33:40.8501843Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8501979Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8502158Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8502279Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8502351Z E           
2025-02-24T16:33:40.8502469Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8502867Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8503356Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8503363Z 
2025-02-24T16:33:40.8503862Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8503867Z 
2025-02-24T16:33:40.8504045Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8504049Z 
2025-02-24T16:33:40.8504273Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e2b10>
2025-02-24T16:33:40.8504448Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff502ebbb30>
2025-02-24T16:33:40.8504531Z attr = 'beta_sobolev'
2025-02-24T16:33:40.8504535Z 
2025-02-24T16:33:40.8504680Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8504803Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8504887Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8504965Z         try:
2025-02-24T16:33:40.8505105Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8505191Z         except KeyError:
2025-02-24T16:33:40.8505328Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8505491Z     
2025-02-24T16:33:40.8505587Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8505681Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8505773Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8505904Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8505993Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8506086Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8506200Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8506275Z             else:
2025-02-24T16:33:40.8506369Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8506483Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8506488Z 
2025-02-24T16:33:40.8506612Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8506730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8506878Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8506954Z     ???
2025-02-24T16:33:40.8507067Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8507071Z 
2025-02-24T16:33:40.8507137Z >   ???
2025-02-24T16:33:40.8507381Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8507450Z E   
2025-02-24T16:33:40.8507700Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8507815Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8507885Z E          ...
2025-02-24T16:33:40.8507975Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8508102Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8508221Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8508293Z E          ...
2025-02-24T16:33:40.8508383Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8508513Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8508615Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8508619Z 
2025-02-24T16:33:40.8508713Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8508907Z _______ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-j_blues] _______
2025-02-24T16:33:40.8508910Z 
2025-02-24T16:33:40.8509047Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8509181Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8509276Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8509412Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8509535Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8509633Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8509709Z err_msg = None
2025-02-24T16:33:40.8509718Z 
2025-02-24T16:33:40.8509829Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8509914Z         if err_msg is None:
2025-02-24T16:33:40.8510008Z             if left.shape != right.shape:
2025-02-24T16:33:40.8510098Z                 raise_assert_detail(
2025-02-24T16:33:40.8510247Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8510323Z                 )
2025-02-24T16:33:40.8510396Z     
2025-02-24T16:33:40.8510471Z             diff = 0
2025-02-24T16:33:40.8510584Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8510671Z                 # count up differences
2025-02-24T16:33:40.8510846Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8510922Z                     diff += 1
2025-02-24T16:33:40.8510995Z     
2025-02-24T16:33:40.8511200Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8511339Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8511512Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8511624Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8511699Z E           
2025-02-24T16:33:40.8511813Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8512081Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8512350Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8512354Z 
2025-02-24T16:33:40.8512655Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8512666Z 
2025-02-24T16:33:40.8512832Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8512911Z 
2025-02-24T16:33:40.8513139Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e2c90>
2025-02-24T16:33:40.8513306Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff502ebbb30>
2025-02-24T16:33:40.8513383Z attr = 'j_blues'
2025-02-24T16:33:40.8513387Z 
2025-02-24T16:33:40.8513528Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8513640Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8513729Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8513799Z         try:
2025-02-24T16:33:40.8513946Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8514028Z         except KeyError:
2025-02-24T16:33:40.8514173Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8514248Z     
2025-02-24T16:33:40.8514335Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8514434Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8514525Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8514660Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8514743Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8514841Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8514954Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8515025Z             else:
2025-02-24T16:33:40.8515127Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8515231Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8515235Z 
2025-02-24T16:33:40.8515370Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8515481Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8515635Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8515710Z     ???
2025-02-24T16:33:40.8515818Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8515826Z 
2025-02-24T16:33:40.8515900Z >   ???
2025-02-24T16:33:40.8516023Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8516097Z E   
2025-02-24T16:33:40.8516226Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8516336Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8516409Z E          ...
2025-02-24T16:33:40.8516496Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8516627Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8516844Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8516922Z E          ...
2025-02-24T16:33:40.8517011Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8517134Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8517240Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8517375Z 
2025-02-24T16:33:40.8517466Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8517676Z ____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines] _____
2025-02-24T16:33:40.8517679Z 
2025-02-24T16:33:40.8517811Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8517935Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8518034Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8518168Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8518293Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8518385Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8518465Z err_msg = None
2025-02-24T16:33:40.8518469Z 
2025-02-24T16:33:40.8518585Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8518800Z         if err_msg is None:
2025-02-24T16:33:40.8518898Z             if left.shape != right.shape:
2025-02-24T16:33:40.8518983Z                 raise_assert_detail(
2025-02-24T16:33:40.8519129Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8519204Z                 )
2025-02-24T16:33:40.8519271Z     
2025-02-24T16:33:40.8519347Z             diff = 0
2025-02-24T16:33:40.8519455Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8519551Z                 # count up differences
2025-02-24T16:33:40.8519723Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8519805Z                     diff += 1
2025-02-24T16:33:40.8519878Z     
2025-02-24T16:33:40.8519964Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8520102Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8520272Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8520391Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8520465Z E           
2025-02-24T16:33:40.8520582Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8520845Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8521109Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8521113Z 
2025-02-24T16:33:40.8521422Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8521426Z 
2025-02-24T16:33:40.8521599Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8521604Z 
2025-02-24T16:33:40.8521825Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e3a10>
2025-02-24T16:33:40.8521998Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4cec4af00>
2025-02-24T16:33:40.8522072Z attr = 'lines'
2025-02-24T16:33:40.8522082Z 
2025-02-24T16:33:40.8522354Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8522474Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8522558Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8522633Z         try:
2025-02-24T16:33:40.8522770Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8522856Z         except KeyError:
2025-02-24T16:33:40.8523002Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8523069Z     
2025-02-24T16:33:40.8523160Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8523256Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8523350Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8523479Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8523569Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8523663Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8523772Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8523853Z             else:
2025-02-24T16:33:40.8523948Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8524061Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8524065Z 
2025-02-24T16:33:40.8524190Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8524307Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8524538Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8524607Z     ???
2025-02-24T16:33:40.8524721Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8524725Z 
2025-02-24T16:33:40.8524793Z >   ???
2025-02-24T16:33:40.8524923Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8524998Z E   
2025-02-24T16:33:40.8525124Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8525240Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8525314Z E          ...
2025-02-24T16:33:40.8525406Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8525535Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8525651Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8525727Z E          ...
2025-02-24T16:33:40.8525811Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8525944Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8526044Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8526048Z 
2025-02-24T16:33:40.8526142Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8526396Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] _
2025-02-24T16:33:40.8526406Z 
2025-02-24T16:33:40.8526629Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e3ad0>
2025-02-24T16:33:40.8526801Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4cec4af00>
2025-02-24T16:33:40.8526890Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.8526894Z 
2025-02-24T16:33:40.8527037Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8527147Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8527235Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8527416Z         try:
2025-02-24T16:33:40.8527558Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8527643Z         except KeyError:
2025-02-24T16:33:40.8527778Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8527850Z     
2025-02-24T16:33:40.8527934Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8528032Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8528124Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8528251Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8528340Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8528543Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8528659Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8528663Z 
2025-02-24T16:33:40.8528791Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8528900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8528907Z 
2025-02-24T16:33:40.8529046Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8529131Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8529245Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8529325Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8529466Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8529554Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8529660Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8529745Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8529821Z err_msg = None
2025-02-24T16:33:40.8529824Z 
2025-02-24T16:33:40.8529938Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8530023Z         if err_msg is None:
2025-02-24T16:33:40.8530117Z             if left.shape != right.shape:
2025-02-24T16:33:40.8530315Z                 raise_assert_detail(
2025-02-24T16:33:40.8530459Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8530535Z                 )
2025-02-24T16:33:40.8530602Z     
2025-02-24T16:33:40.8530678Z             diff = 0
2025-02-24T16:33:40.8530796Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8530885Z                 # count up differences
2025-02-24T16:33:40.8531060Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8531139Z                     diff += 1
2025-02-24T16:33:40.8531212Z     
2025-02-24T16:33:40.8531297Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8531438Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8531614Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8531719Z E           AssertionError: Series are different
2025-02-24T16:33:40.8531799Z E           
2025-02-24T16:33:40.8531900Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.8532275Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8532613Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8532945Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8532957Z 
2025-02-24T16:33:40.8533263Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8533606Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] _
2025-02-24T16:33:40.8533611Z 
2025-02-24T16:33:40.8533838Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e3b90>
2025-02-24T16:33:40.8534011Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4cec4af00>
2025-02-24T16:33:40.8534110Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.8534114Z 
2025-02-24T16:33:40.8534253Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8534372Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8534455Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8534530Z         try:
2025-02-24T16:33:40.8534669Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8534758Z         except KeyError:
2025-02-24T16:33:40.8534898Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8534966Z     
2025-02-24T16:33:40.8535056Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8535151Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8535242Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8535372Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8535463Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8535592Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8535786Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8535928Z 
2025-02-24T16:33:40.8536149Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8536339Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8536344Z 
2025-02-24T16:33:40.8536575Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8536727Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8536851Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8536940Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8537079Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8537169Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8537381Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8537461Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8537545Z err_msg = None
2025-02-24T16:33:40.8537548Z 
2025-02-24T16:33:40.8537658Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8537744Z         if err_msg is None:
2025-02-24T16:33:40.8537838Z             if left.shape != right.shape:
2025-02-24T16:33:40.8537927Z                 raise_assert_detail(
2025-02-24T16:33:40.8538074Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8538144Z                 )
2025-02-24T16:33:40.8538215Z     
2025-02-24T16:33:40.8538286Z             diff = 0
2025-02-24T16:33:40.8538406Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8538491Z                 # count up differences
2025-02-24T16:33:40.8538663Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8538744Z                     diff += 1
2025-02-24T16:33:40.8538811Z     
2025-02-24T16:33:40.8538900Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8539038Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8539211Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8539314Z E           AssertionError: Series are different
2025-02-24T16:33:40.8539388Z E           
2025-02-24T16:33:40.8539495Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.8539989Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8540369Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8540752Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8540757Z 
2025-02-24T16:33:40.8541073Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8541275Z ______ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-nu] ______
2025-02-24T16:33:40.8541378Z 
2025-02-24T16:33:40.8541515Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8541642Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8541747Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8541884Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8542004Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8542105Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8542178Z err_msg = None
2025-02-24T16:33:40.8542183Z 
2025-02-24T16:33:40.8542299Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8542378Z         if err_msg is None:
2025-02-24T16:33:40.8542479Z             if left.shape != right.shape:
2025-02-24T16:33:40.8542566Z                 raise_assert_detail(
2025-02-24T16:33:40.8542711Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8542785Z                 )
2025-02-24T16:33:40.8542852Z     
2025-02-24T16:33:40.8542928Z             diff = 0
2025-02-24T16:33:40.8543038Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8543130Z                 # count up differences
2025-02-24T16:33:40.8543303Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8543379Z                     diff += 1
2025-02-24T16:33:40.8543452Z     
2025-02-24T16:33:40.8543542Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8543680Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8543852Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8543964Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8544039Z E           
2025-02-24T16:33:40.8544152Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8544417Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8544764Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8544769Z 
2025-02-24T16:33:40.8545069Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8545073Z 
2025-02-24T16:33:40.8545250Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8545258Z 
2025-02-24T16:33:40.8545488Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e3dd0>
2025-02-24T16:33:40.8545692Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4cec4af00>, attr = 'nu'
2025-02-24T16:33:40.8545696Z 
2025-02-24T16:33:40.8545839Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8545956Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8546044Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8546118Z         try:
2025-02-24T16:33:40.8546259Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8546343Z         except KeyError:
2025-02-24T16:33:40.8546481Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8546554Z     
2025-02-24T16:33:40.8546644Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8546743Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8546914Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8547044Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8547135Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8547223Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8547464Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8547469Z 
2025-02-24T16:33:40.8547596Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8547713Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8547871Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8547941Z     ???
2025-02-24T16:33:40.8548054Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8548058Z 
2025-02-24T16:33:40.8548126Z >   ???
2025-02-24T16:33:40.8548258Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8548327Z E   
2025-02-24T16:33:40.8548455Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8548568Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8548638Z E          ...
2025-02-24T16:33:40.8548730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8548861Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8548977Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8549052Z E          ...
2025-02-24T16:33:40.8549139Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8549270Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8549378Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8549382Z 
2025-02-24T16:33:40.8549476Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8549703Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] _
2025-02-24T16:33:40.8549707Z 
2025-02-24T16:33:40.8549842Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8549971Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8550069Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8550206Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8550328Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8550541Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8550621Z err_msg = None
2025-02-24T16:33:40.8550625Z 
2025-02-24T16:33:40.8550736Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8550821Z         if err_msg is None:
2025-02-24T16:33:40.8550915Z             if left.shape != right.shape:
2025-02-24T16:33:40.8551006Z                 raise_assert_detail(
2025-02-24T16:33:40.8551157Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8551226Z                 )
2025-02-24T16:33:40.8551298Z     
2025-02-24T16:33:40.8551368Z             diff = 0
2025-02-24T16:33:40.8551482Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8551570Z                 # count up differences
2025-02-24T16:33:40.8551746Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8551828Z                     diff += 1
2025-02-24T16:33:40.8551895Z     
2025-02-24T16:33:40.8551989Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8552125Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8552299Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8552413Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8552491Z E           
2025-02-24T16:33:40.8552720Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8552979Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8553246Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8553250Z 
2025-02-24T16:33:40.8553557Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8553561Z 
2025-02-24T16:33:40.8553728Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8553736Z 
2025-02-24T16:33:40.8553964Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e3e90>
2025-02-24T16:33:40.8554131Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4cec4af00>
2025-02-24T16:33:40.8554214Z attr = 'wavelength_cm'
2025-02-24T16:33:40.8554218Z 
2025-02-24T16:33:40.8554361Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8554475Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8554563Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8554631Z         try:
2025-02-24T16:33:40.8554776Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8554862Z         except KeyError:
2025-02-24T16:33:40.8555000Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8555072Z     
2025-02-24T16:33:40.8555161Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8555259Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8555351Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8555486Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8555575Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8555664Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8555776Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8555780Z 
2025-02-24T16:33:40.8555904Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8556020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8556248Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8556326Z     ???
2025-02-24T16:33:40.8556440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8556444Z 
2025-02-24T16:33:40.8556511Z >   ???
2025-02-24T16:33:40.8556642Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8556711Z E   
2025-02-24T16:33:40.8556843Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8556958Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8557029Z E          ...
2025-02-24T16:33:40.8557119Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8557375Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8557495Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8557564Z E          ...
2025-02-24T16:33:40.8557656Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8557788Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8557891Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8557896Z 
2025-02-24T16:33:40.8557989Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8558191Z _____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-f_lu] _____
2025-02-24T16:33:40.8558327Z 
2025-02-24T16:33:40.8558462Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8558592Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8558685Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8558820Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8558942Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8559042Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8559117Z err_msg = None
2025-02-24T16:33:40.8559125Z 
2025-02-24T16:33:40.8559234Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8559321Z         if err_msg is None:
2025-02-24T16:33:40.8559416Z             if left.shape != right.shape:
2025-02-24T16:33:40.8559504Z                 raise_assert_detail(
2025-02-24T16:33:40.8559650Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8559725Z                 )
2025-02-24T16:33:40.8559796Z     
2025-02-24T16:33:40.8559866Z             diff = 0
2025-02-24T16:33:40.8559982Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8560069Z                 # count up differences
2025-02-24T16:33:40.8560243Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8560322Z                     diff += 1
2025-02-24T16:33:40.8560393Z     
2025-02-24T16:33:40.8560490Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8560627Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8560800Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8560911Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8560986Z E           
2025-02-24T16:33:40.8561098Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8561362Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8561743Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8561749Z 
2025-02-24T16:33:40.8562053Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8562062Z 
2025-02-24T16:33:40.8562233Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8562236Z 
2025-02-24T16:33:40.8562462Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e3f50>
2025-02-24T16:33:40.8562668Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4cec4af00>, attr = 'f_lu'
2025-02-24T16:33:40.8562672Z 
2025-02-24T16:33:40.8562811Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8562929Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8563011Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8563083Z         try:
2025-02-24T16:33:40.8563223Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8563307Z         except KeyError:
2025-02-24T16:33:40.8563446Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8563519Z     
2025-02-24T16:33:40.8563608Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8563700Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8563873Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8564000Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8564088Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8564175Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8564287Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8564291Z 
2025-02-24T16:33:40.8564420Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8564528Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8564681Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8564750Z     ???
2025-02-24T16:33:40.8564861Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8564864Z 
2025-02-24T16:33:40.8564940Z >   ???
2025-02-24T16:33:40.8565066Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8565140Z E   
2025-02-24T16:33:40.8565265Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8565378Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8565447Z E          ...
2025-02-24T16:33:40.8565537Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8565671Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8565781Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8565855Z E          ...
2025-02-24T16:33:40.8565937Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8566068Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8566171Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8566174Z 
2025-02-24T16:33:40.8566272Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8566489Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] _
2025-02-24T16:33:40.8566496Z 
2025-02-24T16:33:40.8566621Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8566753Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8566846Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8566981Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8567106Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8567415Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8567505Z err_msg = None
2025-02-24T16:33:40.8567509Z 
2025-02-24T16:33:40.8567617Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8567701Z         if err_msg is None:
2025-02-24T16:33:40.8567798Z             if left.shape != right.shape:
2025-02-24T16:33:40.8567881Z                 raise_assert_detail(
2025-02-24T16:33:40.8568031Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8568100Z                 )
2025-02-24T16:33:40.8568173Z     
2025-02-24T16:33:40.8568244Z             diff = 0
2025-02-24T16:33:40.8568357Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8568447Z                 # count up differences
2025-02-24T16:33:40.8568753Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8568888Z                     diff += 1
2025-02-24T16:33:40.8569000Z     
2025-02-24T16:33:40.8569151Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8569375Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8569667Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8569786Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8569856Z E           
2025-02-24T16:33:40.8570099Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8570357Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8570623Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8570627Z 
2025-02-24T16:33:40.8570933Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8570936Z 
2025-02-24T16:33:40.8571105Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8571111Z 
2025-02-24T16:33:40.8571336Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512204710>
2025-02-24T16:33:40.8571510Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4cec4af00>
2025-02-24T16:33:40.8571589Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.8571593Z 
2025-02-24T16:33:40.8571734Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8571847Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8571935Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8572011Z         try:
2025-02-24T16:33:40.8572147Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8572230Z         except KeyError:
2025-02-24T16:33:40.8572366Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8572438Z     
2025-02-24T16:33:40.8572523Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8572625Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8572717Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8572846Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8572937Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8573025Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8573139Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8573211Z             else:
2025-02-24T16:33:40.8573309Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8573420Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8573523Z 
2025-02-24T16:33:40.8573652Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8573772Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8573918Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8573991Z     ???
2025-02-24T16:33:40.8574098Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8574110Z 
2025-02-24T16:33:40.8574175Z >   ???
2025-02-24T16:33:40.8574305Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8574371Z E   
2025-02-24T16:33:40.8574504Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8574614Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8574689Z E          ...
2025-02-24T16:33:40.8574780Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8574912Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8575031Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8575101Z E          ...
2025-02-24T16:33:40.8575190Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8575312Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8575421Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8575586Z 
2025-02-24T16:33:40.8575681Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8575892Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] _
2025-02-24T16:33:40.8575895Z 
2025-02-24T16:33:40.8576028Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8576154Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8576253Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8576390Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8576515Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8576611Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8576685Z err_msg = None
2025-02-24T16:33:40.8576689Z 
2025-02-24T16:33:40.8576803Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8576889Z         if err_msg is None:
2025-02-24T16:33:40.8576982Z             if left.shape != right.shape:
2025-02-24T16:33:40.8577071Z                 raise_assert_detail(
2025-02-24T16:33:40.8577212Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8577402Z                 )
2025-02-24T16:33:40.8577472Z     
2025-02-24T16:33:40.8577547Z             diff = 0
2025-02-24T16:33:40.8577664Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8577750Z                 # count up differences
2025-02-24T16:33:40.8577926Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8578003Z                     diff += 1
2025-02-24T16:33:40.8578075Z     
2025-02-24T16:33:40.8578163Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8578305Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8578481Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8578593Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8578667Z E           
2025-02-24T16:33:40.8578822Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8579478Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8579926Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8579935Z 
2025-02-24T16:33:40.8580242Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8580245Z 
2025-02-24T16:33:40.8580421Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8580425Z 
2025-02-24T16:33:40.8580654Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5122047d0>
2025-02-24T16:33:40.8580823Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4cec4af00>
2025-02-24T16:33:40.8580904Z attr = 'beta_sobolev'
2025-02-24T16:33:40.8580907Z 
2025-02-24T16:33:40.8581046Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8581164Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8581253Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8581322Z         try:
2025-02-24T16:33:40.8581465Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8581544Z         except KeyError:
2025-02-24T16:33:40.8581800Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8581868Z     
2025-02-24T16:33:40.8581960Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8582057Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8582143Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8582279Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8582363Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8582456Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8582567Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8582646Z             else:
2025-02-24T16:33:40.8582744Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8582850Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8582854Z 
2025-02-24T16:33:40.8582985Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8583097Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8583248Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8583320Z     ???
2025-02-24T16:33:40.8583432Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8583437Z 
2025-02-24T16:33:40.8583508Z >   ???
2025-02-24T16:33:40.8583633Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8583705Z E   
2025-02-24T16:33:40.8583832Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8583948Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8584022Z E          ...
2025-02-24T16:33:40.8584108Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8584238Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8584349Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8584423Z E          ...
2025-02-24T16:33:40.8584508Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8584637Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8584745Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8584749Z 
2025-02-24T16:33:40.8584837Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8585047Z ___ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-j_blues] ____
2025-02-24T16:33:40.8585051Z 
2025-02-24T16:33:40.8585179Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8585392Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8585496Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8585625Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8585751Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8585846Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8585923Z err_msg = None
2025-02-24T16:33:40.8585927Z 
2025-02-24T16:33:40.8586041Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8586121Z         if err_msg is None:
2025-02-24T16:33:40.8586220Z             if left.shape != right.shape:
2025-02-24T16:33:40.8586361Z                 raise_assert_detail(
2025-02-24T16:33:40.8586589Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8586694Z                 )
2025-02-24T16:33:40.8586808Z     
2025-02-24T16:33:40.8586920Z             diff = 0
2025-02-24T16:33:40.8587089Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8587228Z                 # count up differences
2025-02-24T16:33:40.8587665Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8587792Z                     diff += 1
2025-02-24T16:33:40.8588093Z     
2025-02-24T16:33:40.8588243Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8588465Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8588751Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8588940Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8589054Z E           
2025-02-24T16:33:40.8589231Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8589716Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8590180Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8590193Z 
2025-02-24T16:33:40.8590712Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8590720Z 
2025-02-24T16:33:40.8591011Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8591018Z 
2025-02-24T16:33:40.8591372Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512204950>
2025-02-24T16:33:40.8591641Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4cec4af00>
2025-02-24T16:33:40.8591762Z attr = 'j_blues'
2025-02-24T16:33:40.8591768Z 
2025-02-24T16:33:40.8592000Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8592216Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8592380Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8592508Z         try:
2025-02-24T16:33:40.8592763Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8592905Z         except KeyError:
2025-02-24T16:33:40.8593051Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8593124Z     
2025-02-24T16:33:40.8593217Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8593312Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8593408Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8593726Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8593824Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8593915Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8594036Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8594111Z             else:
2025-02-24T16:33:40.8594206Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8594324Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8594329Z 
2025-02-24T16:33:40.8594458Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8594582Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8594731Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8594806Z     ???
2025-02-24T16:33:40.8594923Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8594927Z 
2025-02-24T16:33:40.8594994Z >   ???
2025-02-24T16:33:40.8595131Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8595199Z E   
2025-02-24T16:33:40.8595332Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8595450Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8595521Z E          ...
2025-02-24T16:33:40.8595615Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8595829Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8595950Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8596019Z E          ...
2025-02-24T16:33:40.8596110Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8596243Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8596347Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8596351Z 
2025-02-24T16:33:40.8596448Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8596712Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] _
2025-02-24T16:33:40.8596716Z 
2025-02-24T16:33:40.8596853Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8596992Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8597091Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8597237Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8597517Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8597617Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8597695Z err_msg = None
2025-02-24T16:33:40.8597700Z 
2025-02-24T16:33:40.8597815Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8597902Z         if err_msg is None:
2025-02-24T16:33:40.8598002Z             if left.shape != right.shape:
2025-02-24T16:33:40.8598094Z                 raise_assert_detail(
2025-02-24T16:33:40.8598243Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8598318Z                 )
2025-02-24T16:33:40.8598391Z     
2025-02-24T16:33:40.8598462Z             diff = 0
2025-02-24T16:33:40.8598581Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8598672Z                 # count up differences
2025-02-24T16:33:40.8598851Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8598931Z                     diff += 1
2025-02-24T16:33:40.8599003Z     
2025-02-24T16:33:40.8599098Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8599236Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8599414Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8599647Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8599760Z E           
2025-02-24T16:33:40.8599876Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8600143Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8600411Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8600416Z 
2025-02-24T16:33:40.8600735Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8600745Z 
2025-02-24T16:33:40.8600918Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8600922Z 
2025-02-24T16:33:40.8601154Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5122056d0>
2025-02-24T16:33:40.8601324Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de9e0530>
2025-02-24T16:33:40.8601510Z attr = 'lines'
2025-02-24T16:33:40.8601514Z 
2025-02-24T16:33:40.8601658Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8601773Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8601861Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8601930Z         try:
2025-02-24T16:33:40.8602074Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8602154Z         except KeyError:
2025-02-24T16:33:40.8602295Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8602368Z     
2025-02-24T16:33:40.8602457Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8602555Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8602645Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8602784Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8602869Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8602963Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8603080Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8603152Z             else:
2025-02-24T16:33:40.8603250Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8603356Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8603360Z 
2025-02-24T16:33:40.8603491Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8603605Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8603756Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8603833Z     ???
2025-02-24T16:33:40.8603942Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8603947Z 
2025-02-24T16:33:40.8604019Z >   ???
2025-02-24T16:33:40.8604145Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8604218Z E   
2025-02-24T16:33:40.8604348Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8604464Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8604539Z E          ...
2025-02-24T16:33:40.8604626Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8604759Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8604874Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8604948Z E          ...
2025-02-24T16:33:40.8605039Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8605163Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8605381Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8605386Z 
2025-02-24T16:33:40.8605547Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8606118Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] _
2025-02-24T16:33:40.8606125Z 
2025-02-24T16:33:40.8606508Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512205790>
2025-02-24T16:33:40.8606747Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de9e0530>
2025-02-24T16:33:40.8606845Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.8606850Z 
2025-02-24T16:33:40.8606987Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8607108Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8607191Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8607372Z         try:
2025-02-24T16:33:40.8607518Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8607603Z         except KeyError:
2025-02-24T16:33:40.8607746Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8607814Z     
2025-02-24T16:33:40.8607903Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8607994Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8608088Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8608360Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8608445Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8608540Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8608648Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8608652Z 
2025-02-24T16:33:40.8608785Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8608902Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8608906Z 
2025-02-24T16:33:40.8609047Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8609135Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8609244Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8609329Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8609475Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8609560Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8609669Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8609747Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8609825Z err_msg = None
2025-02-24T16:33:40.8609828Z 
2025-02-24T16:33:40.8609938Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8610022Z         if err_msg is None:
2025-02-24T16:33:40.8610120Z             if left.shape != right.shape:
2025-02-24T16:33:40.8610204Z                 raise_assert_detail(
2025-02-24T16:33:40.8610357Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8610428Z                 )
2025-02-24T16:33:40.8610500Z     
2025-02-24T16:33:40.8610572Z             diff = 0
2025-02-24T16:33:40.8610687Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8610779Z                 # count up differences
2025-02-24T16:33:40.8610953Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8611034Z                     diff += 1
2025-02-24T16:33:40.8611101Z     
2025-02-24T16:33:40.8611191Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8611327Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8611503Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8611609Z E           AssertionError: Series are different
2025-02-24T16:33:40.8611680Z E           
2025-02-24T16:33:40.8611904Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.8612277Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8612611Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8612945Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8612950Z 
2025-02-24T16:33:40.8613266Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8613650Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] _
2025-02-24T16:33:40.8613654Z 
2025-02-24T16:33:40.8613882Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512205850>
2025-02-24T16:33:40.8614050Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de9e0530>
2025-02-24T16:33:40.8614144Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.8614148Z 
2025-02-24T16:33:40.8614288Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8614404Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8614493Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8614562Z         try:
2025-02-24T16:33:40.8614704Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8614785Z         except KeyError:
2025-02-24T16:33:40.8614920Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8614997Z     
2025-02-24T16:33:40.8615083Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8615183Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8615320Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8615566Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8615711Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8615858Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8616045Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8616052Z 
2025-02-24T16:33:40.8616263Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8616451Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8616455Z 
2025-02-24T16:33:40.8616597Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8616682Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8616798Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8616876Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8617019Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8617100Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8617208Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8617395Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8617472Z err_msg = None
2025-02-24T16:33:40.8617475Z 
2025-02-24T16:33:40.8617713Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8617796Z         if err_msg is None:
2025-02-24T16:33:40.8617894Z             if left.shape != right.shape:
2025-02-24T16:33:40.8617986Z                 raise_assert_detail(
2025-02-24T16:33:40.8618128Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8618207Z                 )
2025-02-24T16:33:40.8618275Z     
2025-02-24T16:33:40.8618350Z             diff = 0
2025-02-24T16:33:40.8618461Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8618552Z                 # count up differences
2025-02-24T16:33:40.8618726Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8618809Z                     diff += 1
2025-02-24T16:33:40.8618882Z     
2025-02-24T16:33:40.8618965Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8619104Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8619276Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8619382Z E           AssertionError: Series are different
2025-02-24T16:33:40.8619456Z E           
2025-02-24T16:33:40.8619558Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.8619934Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8620430Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8620801Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8620808Z 
2025-02-24T16:33:40.8621122Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8621371Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] _
2025-02-24T16:33:40.8621376Z 
2025-02-24T16:33:40.8621507Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8621640Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8621737Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8621874Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8622006Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8622099Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8622178Z err_msg = None
2025-02-24T16:33:40.8622182Z 
2025-02-24T16:33:40.8622290Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8622377Z         if err_msg is None:
2025-02-24T16:33:40.8622474Z             if left.shape != right.shape:
2025-02-24T16:33:40.8622557Z                 raise_assert_detail(
2025-02-24T16:33:40.8622783Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8622855Z                 )
2025-02-24T16:33:40.8622926Z     
2025-02-24T16:33:40.8622999Z             diff = 0
2025-02-24T16:33:40.8623115Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8623206Z                 # count up differences
2025-02-24T16:33:40.8623375Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8623460Z                     diff += 1
2025-02-24T16:33:40.8623527Z     
2025-02-24T16:33:40.8623616Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8623749Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8623924Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8624041Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8624112Z E           
2025-02-24T16:33:40.8624229Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8624491Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8624754Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8624858Z 
2025-02-24T16:33:40.8625169Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8625173Z 
2025-02-24T16:33:40.8644214Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8644257Z 
2025-02-24T16:33:40.8644711Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512205a90>
2025-02-24T16:33:40.8645085Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de9e0530>, attr = 'nu'
2025-02-24T16:33:40.8645092Z 
2025-02-24T16:33:40.8645328Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8645529Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8645686Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8645779Z         try:
2025-02-24T16:33:40.8645939Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8646021Z         except KeyError:
2025-02-24T16:33:40.8646172Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8646239Z     
2025-02-24T16:33:40.8646328Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8646421Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8646514Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8646658Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8646743Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8646834Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8646944Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8646948Z 
2025-02-24T16:33:40.8647080Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8647202Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8647497Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8647570Z     ???
2025-02-24T16:33:40.8647681Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8647686Z 
2025-02-24T16:33:40.8647755Z >   ???
2025-02-24T16:33:40.8647886Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8647958Z E   
2025-02-24T16:33:40.8648260Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8648377Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8648453Z E          ...
2025-02-24T16:33:40.8648540Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8648673Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8648789Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8648865Z E          ...
2025-02-24T16:33:40.8648954Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8649079Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8649187Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8649192Z 
2025-02-24T16:33:40.8649282Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8649575Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] _
2025-02-24T16:33:40.8649579Z 
2025-02-24T16:33:40.8649717Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8649850Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8649956Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8650094Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8650361Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8650457Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8650532Z err_msg = None
2025-02-24T16:33:40.8650536Z 
2025-02-24T16:33:40.8650659Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8650744Z         if err_msg is None:
2025-02-24T16:33:40.8650847Z             if left.shape != right.shape:
2025-02-24T16:33:40.8650932Z                 raise_assert_detail(
2025-02-24T16:33:40.8651091Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8651166Z                 )
2025-02-24T16:33:40.8651232Z     
2025-02-24T16:33:40.8651309Z             diff = 0
2025-02-24T16:33:40.8651425Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8651518Z                 # count up differences
2025-02-24T16:33:40.8651693Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8651779Z                     diff += 1
2025-02-24T16:33:40.8651851Z     
2025-02-24T16:33:40.8651940Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8652082Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8652251Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8652372Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8652447Z E           
2025-02-24T16:33:40.8652559Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8652828Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8653090Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8653100Z 
2025-02-24T16:33:40.8653412Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8653417Z 
2025-02-24T16:33:40.8653594Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8653703Z 
2025-02-24T16:33:40.8653931Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512205b50>
2025-02-24T16:33:40.8654109Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de9e0530>
2025-02-24T16:33:40.8654194Z attr = 'wavelength_cm'
2025-02-24T16:33:40.8654198Z 
2025-02-24T16:33:40.8654338Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8654464Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8654550Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8654625Z         try:
2025-02-24T16:33:40.8654767Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8654856Z         except KeyError:
2025-02-24T16:33:40.8655000Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8655067Z     
2025-02-24T16:33:40.8655162Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8655259Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8655361Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8655494Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8655586Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8655683Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8655796Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8655880Z 
2025-02-24T16:33:40.8656016Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8656131Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8656285Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8656361Z     ???
2025-02-24T16:33:40.8656469Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8656473Z 
2025-02-24T16:33:40.8656544Z >   ???
2025-02-24T16:33:40.8656673Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8656744Z E   
2025-02-24T16:33:40.8656876Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8656992Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8657067Z E          ...
2025-02-24T16:33:40.8657155Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8657400Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8657518Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8657594Z E          ...
2025-02-24T16:33:40.8657679Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8657809Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8657919Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8657923Z 
2025-02-24T16:33:40.8658014Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8658276Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] _
2025-02-24T16:33:40.8658280Z 
2025-02-24T16:33:40.8658414Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8658552Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8658655Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8658791Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8658925Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8659020Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8659100Z err_msg = None
2025-02-24T16:33:40.8659104Z 
2025-02-24T16:33:40.8659226Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8659305Z         if err_msg is None:
2025-02-24T16:33:40.8659408Z             if left.shape != right.shape:
2025-02-24T16:33:40.8659493Z                 raise_assert_detail(
2025-02-24T16:33:40.8659769Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8659843Z                 )
2025-02-24T16:33:40.8659914Z     
2025-02-24T16:33:40.8659991Z             diff = 0
2025-02-24T16:33:40.8660104Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8660250Z                 # count up differences
2025-02-24T16:33:40.8660574Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8660714Z                     diff += 1
2025-02-24T16:33:40.8660824Z     
2025-02-24T16:33:40.8660921Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8661067Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8661237Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8661357Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8661427Z E           
2025-02-24T16:33:40.8661546Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8661814Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8662202Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8662207Z 
2025-02-24T16:33:40.8662526Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8662530Z 
2025-02-24T16:33:40.8662710Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8662714Z 
2025-02-24T16:33:40.8662940Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512205c10>
2025-02-24T16:33:40.8663146Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de9e0530>, attr = 'f_lu'
2025-02-24T16:33:40.8663150Z 
2025-02-24T16:33:40.8663288Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8663415Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8663504Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8663574Z         try:
2025-02-24T16:33:40.8663719Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8663799Z         except KeyError:
2025-02-24T16:33:40.8663943Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8664009Z     
2025-02-24T16:33:40.8664104Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8664203Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8664293Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8664431Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8664520Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8664612Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8664726Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8664733Z 
2025-02-24T16:33:40.8664857Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8664976Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8665126Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8665200Z     ???
2025-02-24T16:33:40.8665306Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8665316Z 
2025-02-24T16:33:40.8665384Z >   ???
2025-02-24T16:33:40.8665514Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8665586Z E   
2025-02-24T16:33:40.8665800Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8665912Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8665987Z E          ...
2025-02-24T16:33:40.8666074Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8666209Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8666328Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8666398Z E          ...
2025-02-24T16:33:40.8666486Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8666610Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8666721Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8666725Z 
2025-02-24T16:33:40.8666820Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8667107Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] _
2025-02-24T16:33:40.8667111Z 
2025-02-24T16:33:40.8667365Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8667498Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8667601Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8667738Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8667975Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8668072Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8668146Z err_msg = None
2025-02-24T16:33:40.8668150Z 
2025-02-24T16:33:40.8668268Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8668352Z         if err_msg is None:
2025-02-24T16:33:40.8668448Z             if left.shape != right.shape:
2025-02-24T16:33:40.8668538Z                 raise_assert_detail(
2025-02-24T16:33:40.8668688Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8668761Z                 )
2025-02-24T16:33:40.8668827Z     
2025-02-24T16:33:40.8668902Z             diff = 0
2025-02-24T16:33:40.8669012Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8669104Z                 # count up differences
2025-02-24T16:33:40.8669281Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8669358Z                     diff += 1
2025-02-24T16:33:40.8669430Z     
2025-02-24T16:33:40.8669520Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8669660Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8669836Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8669948Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8670025Z E           
2025-02-24T16:33:40.8670139Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8670402Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8670664Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8670669Z 
2025-02-24T16:33:40.8670978Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8670983Z 
2025-02-24T16:33:40.8671335Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8671341Z 
2025-02-24T16:33:40.8671572Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512206390>
2025-02-24T16:33:40.8671740Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de9e0530>
2025-02-24T16:33:40.8671824Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.8671828Z 
2025-02-24T16:33:40.8671968Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8672087Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8672175Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8672244Z         try:
2025-02-24T16:33:40.8672389Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8672468Z         except KeyError:
2025-02-24T16:33:40.8672610Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8672678Z     
2025-02-24T16:33:40.8672770Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8672868Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8672961Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8673097Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8673181Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8673275Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8673383Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8673560Z             else:
2025-02-24T16:33:40.8673660Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8673765Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8673769Z 
2025-02-24T16:33:40.8673899Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8674011Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8674159Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8674226Z     ???
2025-02-24T16:33:40.8674341Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8674345Z 
2025-02-24T16:33:40.8674416Z >   ???
2025-02-24T16:33:40.8674542Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8674614Z E   
2025-02-24T16:33:40.8674738Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8674856Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8674929Z E          ...
2025-02-24T16:33:40.8675020Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8675153Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8675265Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8675339Z E          ...
2025-02-24T16:33:40.8675424Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8675551Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8675663Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8675671Z 
2025-02-24T16:33:40.8675762Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8676046Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] _
2025-02-24T16:33:40.8676051Z 
2025-02-24T16:33:40.8676180Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8676310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8676414Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8676549Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8676675Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8676766Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8676848Z err_msg = None
2025-02-24T16:33:40.8676852Z 
2025-02-24T16:33:40.8677051Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8677134Z         if err_msg is None:
2025-02-24T16:33:40.8677232Z             if left.shape != right.shape:
2025-02-24T16:33:40.8677560Z                 raise_assert_detail(
2025-02-24T16:33:40.8677743Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8677813Z                 )
2025-02-24T16:33:40.8677890Z     
2025-02-24T16:33:40.8677969Z             diff = 0
2025-02-24T16:33:40.8678078Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8678170Z                 # count up differences
2025-02-24T16:33:40.8678339Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8678420Z                     diff += 1
2025-02-24T16:33:40.8678486Z     
2025-02-24T16:33:40.8678580Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8678720Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8678894Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8679010Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8679080Z E           
2025-02-24T16:33:40.8679194Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8679451Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8679846Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8679855Z 
2025-02-24T16:33:40.8680163Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8680166Z 
2025-02-24T16:33:40.8680341Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8680346Z 
2025-02-24T16:33:40.8680567Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512206450>
2025-02-24T16:33:40.8680742Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de9e0530>
2025-02-24T16:33:40.8680817Z attr = 'beta_sobolev'
2025-02-24T16:33:40.8680821Z 
2025-02-24T16:33:40.8680961Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8681080Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8681163Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8681236Z         try:
2025-02-24T16:33:40.8681373Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8681460Z         except KeyError:
2025-02-24T16:33:40.8681596Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8681668Z     
2025-02-24T16:33:40.8681760Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8681852Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8681945Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8682075Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8682167Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8682254Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8682366Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8682440Z             else:
2025-02-24T16:33:40.8682533Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8682641Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8682646Z 
2025-02-24T16:33:40.8682770Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8682997Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8683144Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8683217Z     ???
2025-02-24T16:33:40.8683329Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8683333Z 
2025-02-24T16:33:40.8683400Z >   ???
2025-02-24T16:33:40.8683533Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8683599Z E   
2025-02-24T16:33:40.8683730Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8683842Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8683912Z E          ...
2025-02-24T16:33:40.8684002Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8684127Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8684241Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8684310Z E          ...
2025-02-24T16:33:40.8684401Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8684528Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8684632Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8684635Z 
2025-02-24T16:33:40.8684727Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8684987Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] _
2025-02-24T16:33:40.8685070Z 
2025-02-24T16:33:40.8685206Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8685341Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8685434Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8685568Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8685691Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8685786Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8685858Z err_msg = None
2025-02-24T16:33:40.8685873Z 
2025-02-24T16:33:40.8686071Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8686223Z         if err_msg is None:
2025-02-24T16:33:40.8686385Z             if left.shape != right.shape:
2025-02-24T16:33:40.8686517Z                 raise_assert_detail(
2025-02-24T16:33:40.8686667Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8686742Z                 )
2025-02-24T16:33:40.8686811Z     
2025-02-24T16:33:40.8686882Z             diff = 0
2025-02-24T16:33:40.8686999Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8687086Z                 # count up differences
2025-02-24T16:33:40.8687431Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8687515Z                     diff += 1
2025-02-24T16:33:40.8687587Z     
2025-02-24T16:33:40.8687680Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8687815Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8687991Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8688103Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8688181Z E           
2025-02-24T16:33:40.8688293Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8688557Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8688950Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8688957Z 
2025-02-24T16:33:40.8689269Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8689281Z 
2025-02-24T16:33:40.8689451Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8689454Z 
2025-02-24T16:33:40.8689680Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5122065d0>
2025-02-24T16:33:40.8689844Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de9e0530>
2025-02-24T16:33:40.8689919Z attr = 'j_blues'
2025-02-24T16:33:40.8689923Z 
2025-02-24T16:33:40.8690065Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8690181Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8690272Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8690342Z         try:
2025-02-24T16:33:40.8690487Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8690567Z         except KeyError:
2025-02-24T16:33:40.8690706Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8690776Z     
2025-02-24T16:33:40.8690972Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8691073Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8691165Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8691300Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8691383Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8691476Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8691591Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8691662Z             else:
2025-02-24T16:33:40.8691764Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8691871Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8691875Z 
2025-02-24T16:33:40.8692006Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8692119Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8692270Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8692345Z     ???
2025-02-24T16:33:40.8692453Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8692456Z 
2025-02-24T16:33:40.8692528Z >   ???
2025-02-24T16:33:40.8692659Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8692730Z E   
2025-02-24T16:33:40.8692863Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8692973Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8693048Z E          ...
2025-02-24T16:33:40.8693139Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8693273Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8693384Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8693458Z E          ...
2025-02-24T16:33:40.8693547Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8693667Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8693780Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8693784Z 
2025-02-24T16:33:40.8693872Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8694044Z _________________ test_hdf_plasma[stimulated_emission_factor] __________________
2025-02-24T16:33:40.8694047Z 
2025-02-24T16:33:40.8694282Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7ff50fd6b620>
2025-02-24T16:33:40.8694371Z attr = 'stimulated_emission_factor'
2025-02-24T16:33:40.8694647Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff4de92c320>
2025-02-24T16:33:40.8694754Z 
2025-02-24T16:33:40.8694903Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:33:40.8695075Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:33:40.8695204Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:33:40.8695337Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:33:40.8695461Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:33:40.8695549Z             if hasattr(actual, "cgs"):
2025-02-24T16:33:40.8695643Z                 actual = actual.cgs.value
2025-02-24T16:33:40.8695745Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:33:40.8695749Z 
2025-02-24T16:33:40.8695855Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:33:40.8695967Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8695971Z 
2025-02-24T16:33:40.8696290Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e4303a60>, array([[0.        , 0.        , 0.        , ..., 0.   ...1,
2025-02-24T16:33:40.8696368Z         0.01476858],
2025-02-24T16:33:40.8696501Z        [0.01433244, 0.01435378, 0.01437513, ..., 0.0146952 , 0.01471653,
2025-02-24T16:33:40.8696577Z         0.01473787]]))
2025-02-24T16:33:40.8696828Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8696912Z 
2025-02-24T16:33:40.8696987Z     @wraps(func)
2025-02-24T16:33:40.8697075Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8697158Z         with self._recreate_cm():
2025-02-24T16:33:40.8697358Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8697447Z E           AssertionError: 
2025-02-24T16:33:40.8697559Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8697631Z E           
2025-02-24T16:33:40.8697734Z E           Mismatched elements: 120 / 584480 (0.0205%)
2025-02-24T16:33:40.8697832Z E           Max absolute difference: 1.
2025-02-24T16:33:40.8697920Z E           Max relative difference: 1.
2025-02-24T16:33:40.8698054Z E            x: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:33:40.8698157Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:33:40.8698260Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T16:33:40.8698381Z E            y: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:33:40.8698478Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:33:40.8698580Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T16:33:40.8698584Z 
2025-02-24T16:33:40.8698792Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8698955Z ___________________ test_hdf_plasma[lines_lower_level_index] ___________________
2025-02-24T16:33:40.8698958Z 
2025-02-24T16:33:40.8699185Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7ff50fd6b620>
2025-02-24T16:33:40.8699272Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.8699548Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff4d709c080>
2025-02-24T16:33:40.8699552Z 
2025-02-24T16:33:40.8699734Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:33:40.8699901Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:33:40.8700025Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:33:40.8700155Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:33:40.8700276Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:33:40.8700362Z             if hasattr(actual, "cgs"):
2025-02-24T16:33:40.8700455Z                 actual = actual.cgs.value
2025-02-24T16:33:40.8700677Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:33:40.8700682Z 
2025-02-24T16:33:40.8700787Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:33:40.8700898Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8700902Z 
2025-02-24T16:33:40.8701306Z args = (<function assert_allclose.<locals>.compare at 0x7ff4fb4e7d80>, array([2577, 2577, 2577, ..., 3886, 3846, 3885]), array([2577, 2577, 2577, ..., 3886, 3846, 3885]))
2025-02-24T16:33:40.8701558Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8701562Z 
2025-02-24T16:33:40.8701639Z     @wraps(func)
2025-02-24T16:33:40.8701721Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8701808Z         with self._recreate_cm():
2025-02-24T16:33:40.8701892Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8701981Z E           AssertionError: 
2025-02-24T16:33:40.8702091Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8702164Z E           
2025-02-24T16:33:40.8702269Z E           Mismatched elements: 748 / 29224 (2.56%)
2025-02-24T16:33:40.8702360Z E           Max absolute difference: 4005
2025-02-24T16:33:40.8702463Z E           Max relative difference: 26.00649351
2025-02-24T16:33:40.8702570Z E            x: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T16:33:40.8702786Z E            y: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T16:33:40.8702790Z 
2025-02-24T16:33:40.8703001Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8703160Z ___________________ test_hdf_plasma[lines_upper_level_index] ___________________
2025-02-24T16:33:40.8703164Z 
2025-02-24T16:33:40.8703394Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7ff50fd6b620>
2025-02-24T16:33:40.8703482Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.8703757Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff50245e540>
2025-02-24T16:33:40.8703761Z 
2025-02-24T16:33:40.8703910Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:33:40.8704072Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:33:40.8704193Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:33:40.8704319Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:33:40.8704445Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:33:40.8704533Z             if hasattr(actual, "cgs"):
2025-02-24T16:33:40.8704620Z                 actual = actual.cgs.value
2025-02-24T16:33:40.8704724Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:33:40.8704729Z 
2025-02-24T16:33:40.8704831Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:33:40.8705009Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8705016Z 
2025-02-24T16:33:40.8705641Z args = (<function assert_allclose.<locals>.compare at 0x7ff4fb4e5a80>, array([2613, 2612, 2611, ..., 3899, 3852, 3898]), array([2613, 2612, 2611, ..., 3899, 3852, 3898]))
2025-02-24T16:33:40.8705885Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8705889Z 
2025-02-24T16:33:40.8705966Z     @wraps(func)
2025-02-24T16:33:40.8706052Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8706140Z         with self._recreate_cm():
2025-02-24T16:33:40.8706227Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8706310Z E           AssertionError: 
2025-02-24T16:33:40.8706419Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8706488Z E           
2025-02-24T16:33:40.8706591Z E           Mismatched elements: 1847 / 29224 (6.32%)
2025-02-24T16:33:40.8706681Z E           Max absolute difference: 4046
2025-02-24T16:33:40.8706781Z E           Max relative difference: 24.82208589
2025-02-24T16:33:40.8706984Z E            x: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T16:33:40.8707090Z E            y: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T16:33:40.8707094Z 
2025-02-24T16:33:40.8707409Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8707568Z ________________________ test_hdf_plasma[beta_sobolev] _________________________
2025-02-24T16:33:40.8707577Z 
2025-02-24T16:33:40.8707809Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7ff50fd6b620>
2025-02-24T16:33:40.8707890Z attr = 'beta_sobolev'
2025-02-24T16:33:40.8708158Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff512069f10>
2025-02-24T16:33:40.8708162Z 
2025-02-24T16:33:40.8708312Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:33:40.8708478Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:33:40.8708605Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:33:40.8708743Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:33:40.8708864Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:33:40.8708957Z             if hasattr(actual, "cgs"):
2025-02-24T16:33:40.8709047Z                 actual = actual.cgs.value
2025-02-24T16:33:40.8709153Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:33:40.8709273Z 
2025-02-24T16:33:40.8709379Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:33:40.8709495Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8709499Z 
2025-02-24T16:33:40.8709772Z args = (<function assert_allclose.<locals>.compare at 0x7ff4fb4e65c0>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.8709843Z        [1., 1., .....,
2025-02-24T16:33:40.8709929Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.8710002Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.8710084Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-02-24T16:33:40.8710334Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8710338Z 
2025-02-24T16:33:40.8710411Z     @wraps(func)
2025-02-24T16:33:40.8710498Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8710582Z         with self._recreate_cm():
2025-02-24T16:33:40.8710672Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8710759Z E           AssertionError: 
2025-02-24T16:33:40.8710872Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8710946Z E           
2025-02-24T16:33:40.8711051Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T16:33:40.8711152Z E           Max absolute difference: 0.99984222
2025-02-24T16:33:40.8711250Z E           Max relative difference: 6337.12154973
2025-02-24T16:33:40.8711345Z E            x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.8711430Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.8711525Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:33:40.8711617Z E            y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.8711700Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.8711789Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:33:40.8711793Z 
2025-02-24T16:33:40.8711994Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8712142Z ____________________________ test_hdf_plasma[lines] ____________________________
2025-02-24T16:33:40.8712146Z 
2025-02-24T16:33:40.8712380Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7ff50fd6b620>
2025-02-24T16:33:40.8712452Z attr = 'lines'
2025-02-24T16:33:40.8712724Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff4e4323b00>
2025-02-24T16:33:40.8712728Z 
2025-02-24T16:33:40.8712872Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:33:40.8713179Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:33:40.8713308Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:33:40.8713437Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:33:40.8713561Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:33:40.8713649Z             if hasattr(actual, "cgs"):
2025-02-24T16:33:40.8713748Z                 actual = actual.cgs.value
2025-02-24T16:33:40.8713847Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:33:40.8713856Z 
2025-02-24T16:33:40.8713961Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:33:40.8714073Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8714077Z 
2025-02-24T16:33:40.8714531Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e4309bc0>, array([[6.78130000e+04, 6.67720000e+01, 2.70301683e-02...       [1.04462000e+05, 9.99900019e+05, 2.64868307e-04, ...,
2025-02-24T16:33:40.8714646Z         4.44653904e+09, 1.76709163e+00, 9.99900019e-03]]))
2025-02-24T16:33:40.8714890Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8714894Z 
2025-02-24T16:33:40.8714967Z     @wraps(func)
2025-02-24T16:33:40.8715050Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8715138Z         with self._recreate_cm():
2025-02-24T16:33:40.8715305Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8715712Z E           AssertionError: 
2025-02-24T16:33:40.8715823Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8715897Z E           
2025-02-24T16:33:40.8715998Z E           Mismatched elements: 13335 / 263016 (5.07%)
2025-02-24T16:33:40.8716104Z E           Max absolute difference: 4.25260542e+12
2025-02-24T16:33:40.8716202Z E           Max relative difference: 18196.0085861
2025-02-24T16:33:40.8716358Z E            x: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T16:33:40.8716455Z E                   4.043917e+10, 6.677200e-07],
2025-02-24T16:33:40.8716594Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T16:33:40.8716743Z E            y: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T16:33:40.8716827Z E                   4.043917e+10, 6.677200e-07],
2025-02-24T16:33:40.8716967Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T16:33:40.8716971Z 
2025-02-24T16:33:40.8717174Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8717553Z ____________________________ test_hdf_plasma[f_lu] _____________________________
2025-02-24T16:33:40.8717561Z 
2025-02-24T16:33:40.8717875Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7ff50fd6b620>
2025-02-24T16:33:40.8717950Z attr = 'f_lu'
2025-02-24T16:33:40.8718227Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff4e4320140>
2025-02-24T16:33:40.8718232Z 
2025-02-24T16:33:40.8718381Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:33:40.8718551Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:33:40.8718681Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:33:40.8718815Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:33:40.8718942Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:33:40.8719030Z             if hasattr(actual, "cgs"):
2025-02-24T16:33:40.8719125Z                 actual = actual.cgs.value
2025-02-24T16:33:40.8719231Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:33:40.8719235Z 
2025-02-24T16:33:40.8719341Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:33:40.8719455Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8719459Z 
2025-02-24T16:33:40.8720079Z args = (<function assert_allclose.<locals>.compare at 0x7ff4fb4e42c0>, array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02,...), array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02, ...,
2025-02-24T16:33:40.8720195Z        9.93184643e-04, 1.12688279e+00, 4.41447178e-04]))
2025-02-24T16:33:40.8720444Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8720453Z 
2025-02-24T16:33:40.8720525Z     @wraps(func)
2025-02-24T16:33:40.8720613Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8720697Z         with self._recreate_cm():
2025-02-24T16:33:40.8720787Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8720876Z E           AssertionError: 
2025-02-24T16:33:40.8720989Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8721063Z E           
2025-02-24T16:33:40.8721164Z E           Mismatched elements: 2221 / 29224 (7.6%)
2025-02-24T16:33:40.8721266Z E           Max absolute difference: 2.92713618
2025-02-24T16:33:40.8721365Z E           Max relative difference: 18196.0085861
2025-02-24T16:33:40.8721518Z E            x: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T16:33:40.8721609Z E                  1.126883e+00, 4.414472e-04])
2025-02-24T16:33:40.8721751Z E            y: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T16:33:40.8721949Z E                  1.126883e+00, 4.414472e-04])
2025-02-24T16:33:40.8721954Z 
2025-02-24T16:33:40.8722161Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8722317Z ________________________ test_hdf_plasma[tau_sobolevs] _________________________
2025-02-24T16:33:40.8722321Z 
2025-02-24T16:33:40.8722555Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7ff50fd6b620>
2025-02-24T16:33:40.8722632Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.8722903Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff4e4db62a0>
2025-02-24T16:33:40.8722910Z 
2025-02-24T16:33:40.8723056Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:33:40.8723227Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:33:40.8723351Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:33:40.8723481Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:33:40.8723605Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:33:40.8723691Z             if hasattr(actual, "cgs"):
2025-02-24T16:33:40.8723853Z                 actual = actual.cgs.value
2025-02-24T16:33:40.8724024Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:33:40.8724030Z 
2025-02-24T16:33:40.8724214Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:33:40.8724404Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8724411Z 
2025-02-24T16:33:40.8724916Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e4309620>, array([[0.00000000e+00, 0.00000000e+00, 0.00000000e+00...       [7.57366002e-14, 3.42661945e-14, 1.59795775e-14, ...,
2025-02-24T16:33:40.8725027Z         2.25618458e-18, 1.41426559e-18, 8.96636158e-19]]))
2025-02-24T16:33:40.8725273Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8725281Z 
2025-02-24T16:33:40.8725353Z     @wraps(func)
2025-02-24T16:33:40.8725438Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8725521Z         with self._recreate_cm():
2025-02-24T16:33:40.8725609Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8725693Z E           AssertionError: 
2025-02-24T16:33:40.8725801Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8725875Z E           
2025-02-24T16:33:40.8725976Z E           Mismatched elements: 39620 / 584480 (6.78%)
2025-02-24T16:33:40.8726081Z E           Max absolute difference: 282815.33818472
2025-02-24T16:33:40.8726276Z E           Max relative difference: 4.12352828e+47
2025-02-24T16:33:40.8726433Z E            x: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T16:33:40.8726520Z E                   0.000000e+00, 0.000000e+00],
2025-02-24T16:33:40.8726656Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T16:33:40.8726802Z E            y: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T16:33:40.8726890Z E                   0.000000e+00, 0.000000e+00],
2025-02-24T16:33:40.8727024Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T16:33:40.8727028Z 
2025-02-24T16:33:40.8727225Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8727614Z __________________ test_plasma_state_iterations[iterations_w] __________________
2025-02-24T16:33:40.8727620Z 
2025-02-24T16:33:40.8727844Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7ff4d73980e0>
2025-02-24T16:33:40.8727922Z attr = 'iterations_w'
2025-02-24T16:33:40.8728194Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff4df799280>
2025-02-24T16:33:40.8728198Z 
2025-02-24T16:33:40.8728287Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.8728361Z         "attr",
2025-02-24T16:33:40.8728432Z         [
2025-02-24T16:33:40.8728634Z             "iterations_w",
2025-02-24T16:33:40.8728723Z             "iterations_t_rad",
2025-02-24T16:33:40.8728821Z             "iterations_electron_densities",
2025-02-24T16:33:40.8728909Z             "iterations_t_inner",
2025-02-24T16:33:40.8728976Z         ],
2025-02-24T16:33:40.8729050Z     )
2025-02-24T16:33:40.8729252Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T16:33:40.8729360Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T16:33:40.8729452Z         if hasattr(actual, "value"):
2025-02-24T16:33:40.8729535Z             actual = actual.value
2025-02-24T16:33:40.8729634Z         actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8729757Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:33:40.8729937Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:33:40.8729942Z 
2025-02-24T16:33:40.8730063Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T16:33:40.8730173Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8730325Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8730396Z     ???
2025-02-24T16:33:40.8730504Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8730508Z 
2025-02-24T16:33:40.8730577Z >   ???
2025-02-24T16:33:40.8730756Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:33:40.8730828Z E   
2025-02-24T16:33:40.8730989Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:33:40.8731078Z E   [index]: [0, 1]
2025-02-24T16:33:40.8731180Z E   [left]:  [0.40039163797855976, 0.45006901732183335]
2025-02-24T16:33:40.8731284Z E   [right]: [0.40039163797855976, 0.45013644671958974]
2025-02-24T16:33:40.8731460Z E   At positional index 1, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-24T16:33:40.8731464Z 
2025-02-24T16:33:40.8731552Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8731712Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.8732127Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:33:40.8732586Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:33:40.8732740Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T16:33:40.8732745Z 
2025-02-24T16:33:40.8732748Z 
2025-02-24T16:33:40.8733099Z Packets:                                                                                   4031/? [04:47<00:00, 10.44it/s]   [A
2025-02-24T16:33:40.8733104Z 
2025-02-24T16:33:40.8733335Z Packets:                                                                                   14557/? [04:48<00:00, 62.63it/s][A
2025-02-24T16:33:40.8733340Z 
2025-02-24T16:33:40.8733566Z Packets:                                                                                   25347/? [04:48<00:00, 138.98it/s][A
2025-02-24T16:33:40.8733574Z 
2025-02-24T16:33:40.8733788Z Packets:                                                                                   36160/? [04:48<00:00, 248.09it/s][A
2025-02-24T16:33:40.8734490Z Iterations:████████████████████████████████████████████████████████████████████████████████5/5 [04:48<00:00, 101.34s/it]
2025-02-24T16:33:40.8734500Z 
2025-02-24T16:33:40.8734752Z Packets:                                                                                   44030/? [04:48<00:00, 248.09it/s][A
2025-02-24T16:33:40.8734761Z 
2025-02-24T16:33:40.8734992Z Packets:                                                                                   0/40000 [00:00<?, ?it/s]         [A
2025-02-24T16:33:40.8734997Z 
2025-02-24T16:33:40.8735258Z Packets:   ███████████████████▌                                                            9750/40000 [00:00<00:00, 35103.69it/s][A
2025-02-24T16:33:40.8735263Z 
2025-02-24T16:33:40.8735635Z Packets:   ██████████████████████████▌                                                     13261/40000 [00:00<00:00, 35057.89it/s][A
2025-02-24T16:33:40.8735644Z 
2025-02-24T16:33:40.8735905Z Packets:   █████████████████████████████████▌                                              16765/40000 [00:00<00:00, 35047.10it/s][A
2025-02-24T16:33:40.8735910Z 
2025-02-24T16:33:40.8736183Z Packets:   ████████████████████████████████████████▌                                       20280/40000 [00:00<00:00, 35078.63it/s][A
2025-02-24T16:33:40.8736187Z 
2025-02-24T16:33:40.8736476Z Packets:   ███████████████████████████████████████████████▋                                23813/40000 [00:00<00:00, 35156.50it/s][A
2025-02-24T16:33:40.8736485Z 
2025-02-24T16:33:40.8736768Z Packets:   ██████████████████████████████████████████████████████▋                         27354/40000 [00:00<00:00, 35234.67it/s][A
2025-02-24T16:33:40.8736772Z 
2025-02-24T16:33:40.8737067Z Packets:   █████████████████████████████████████████████████████████████▊                  30879/40000 [00:00<00:00, 35233.49it/s][A
2025-02-24T16:33:40.8737084Z 
2025-02-24T16:33:40.8737510Z Packets:   ████████████████████████████████████████████████████████████████████▊           34404/40000 [00:00<00:00, 35237.57it/s][A
2025-02-24T16:33:40.8737520Z 
2025-02-24T16:33:40.8737827Z Packets:   ███████████████████████████████████████████████████████████████████████████▉    37969/40000 [00:01<00:00, 35361.18it/s][A
2025-02-24T16:33:40.8737980Z Iterations:                                                                                6/? [04:50<00:00, 67.68s/it] 
2025-02-24T16:33:40.8738118Z 
2025-02-24T16:33:40.8738435Z Packets:   ████████████████████████████████████████████████████████████████████████████████40000/40000 [00:01<00:00, 35361.18it/s][A
2025-02-24T16:33:40.8738603Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.8739116Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:33:40.8739298Z ________________ test_plasma_state_iterations[iterations_t_rad] ________________
2025-02-24T16:33:40.8739303Z 
2025-02-24T16:33:40.8739528Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7ff4d73980e0>
2025-02-24T16:33:40.8739613Z attr = 'iterations_t_rad'
2025-02-24T16:33:40.8739887Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff5039b5130>
2025-02-24T16:33:40.8739891Z 
2025-02-24T16:33:40.8739990Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.8740068Z         "attr",
2025-02-24T16:33:40.8740141Z         [
2025-02-24T16:33:40.8740220Z             "iterations_w",
2025-02-24T16:33:40.8740309Z             "iterations_t_rad",
2025-02-24T16:33:40.8740410Z             "iterations_electron_densities",
2025-02-24T16:33:40.8740501Z             "iterations_t_inner",
2025-02-24T16:33:40.8740574Z         ],
2025-02-24T16:33:40.8740778Z     )
2025-02-24T16:33:40.8740982Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T16:33:40.8741092Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T16:33:40.8741184Z         if hasattr(actual, "value"):
2025-02-24T16:33:40.8741267Z             actual = actual.value
2025-02-24T16:33:40.8741363Z         actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8741492Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:33:40.8741669Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:33:40.8741673Z 
2025-02-24T16:33:40.8741800Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T16:33:40.8741913Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8742066Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8742140Z     ???
2025-02-24T16:33:40.8742249Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8742257Z 
2025-02-24T16:33:40.8742327Z >   ???
2025-02-24T16:33:40.8742636Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:33:40.8742762Z E   
2025-02-24T16:33:40.8743027Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:33:40.8743110Z E   [index]: [0, 1]
2025-02-24T16:33:40.8743218Z E   [left]:  [9967.488442185557, 10091.396322818857]
2025-02-24T16:33:40.8743317Z E   [right]: [9967.488442185557, 10090.925208074616]
2025-02-24T16:33:40.8743498Z E   At positional index 1, first diff: 10091.396322818857 != 10090.925208074616
2025-02-24T16:33:40.8743503Z 
2025-02-24T16:33:40.8743592Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8743779Z _________ test_plasma_state_iterations[iterations_electron_densities] __________
2025-02-24T16:33:40.8743783Z 
2025-02-24T16:33:40.8744005Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7ff4d73980e0>
2025-02-24T16:33:40.8744104Z attr = 'iterations_electron_densities'
2025-02-24T16:33:40.8744379Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff503271400>
2025-02-24T16:33:40.8744383Z 
2025-02-24T16:33:40.8744473Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.8744549Z         "attr",
2025-02-24T16:33:40.8744621Z         [
2025-02-24T16:33:40.8744700Z             "iterations_w",
2025-02-24T16:33:40.8744784Z             "iterations_t_rad",
2025-02-24T16:33:40.8744881Z             "iterations_electron_densities",
2025-02-24T16:33:40.8744972Z             "iterations_t_inner",
2025-02-24T16:33:40.8745040Z         ],
2025-02-24T16:33:40.8745208Z     )
2025-02-24T16:33:40.8745405Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T16:33:40.8745518Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T16:33:40.8745609Z         if hasattr(actual, "value"):
2025-02-24T16:33:40.8745695Z             actual = actual.value
2025-02-24T16:33:40.8745796Z         actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8745918Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:33:40.8746095Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:33:40.8746100Z 
2025-02-24T16:33:40.8746219Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T16:33:40.8746325Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8746473Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8746541Z     ???
2025-02-24T16:33:40.8746654Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8746658Z 
2025-02-24T16:33:40.8746724Z >   ???
2025-02-24T16:33:40.8746904Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:33:40.8746975Z E   
2025-02-24T16:33:40.8747133Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:33:40.8747211Z E   [index]: [0, 1]
2025-02-24T16:33:40.8747546Z E   [left]:  [2869544645.3209715, 2881024886.0882797]
2025-02-24T16:33:40.8747649Z E   [right]: [2869544645.3209715, 2880986026.9779425]
2025-02-24T16:33:40.8747821Z E   At positional index 1, first diff: 2881024886.0882797 != 2880986026.9779425
2025-02-24T16:33:40.8747825Z 
2025-02-24T16:33:40.8747912Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8748076Z ___________________ test_plasma_estimates[nu_bar_estimator] ____________________
2025-02-24T16:33:40.8748080Z 
2025-02-24T16:33:40.8748291Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7ff4d73980e0>
2025-02-24T16:33:40.8748381Z attr = 'nu_bar_estimator'
2025-02-24T16:33:40.8748651Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff503279370>
2025-02-24T16:33:40.8748655Z 
2025-02-24T16:33:40.8748745Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.8748820Z         "attr",
2025-02-24T16:33:40.8748887Z         [
2025-02-24T16:33:40.8748972Z             "nu_bar_estimator",
2025-02-24T16:33:40.8749053Z             "j_estimator",
2025-02-24T16:33:40.8749134Z             "t_radiative",
2025-02-24T16:33:40.8749222Z             "dilution_factor",
2025-02-24T16:33:40.8749299Z             "output_nus",
2025-02-24T16:33:40.8749385Z             "output_energies",
2025-02-24T16:33:40.8749454Z         ],
2025-02-24T16:33:40.8749525Z     )
2025-02-24T16:33:40.8749701Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:33:40.8749820Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:33:40.8749902Z             actual = getattr(
2025-02-24T16:33:40.8750095Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:33:40.8750172Z                 attr,
2025-02-24T16:33:40.8750240Z             )
2025-02-24T16:33:40.8750360Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:33:40.8750508Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:33:40.8750631Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:33:40.8750715Z             actual = getattr(
2025-02-24T16:33:40.8750885Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:33:40.8750960Z                 attr,
2025-02-24T16:33:40.8751029Z             )
2025-02-24T16:33:40.8751102Z         else:
2025-02-24T16:33:40.8751236Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:33:40.8751317Z     
2025-02-24T16:33:40.8751408Z         if hasattr(actual, "value"):
2025-02-24T16:33:40.8751608Z             actual = actual.value
2025-02-24T16:33:40.8751702Z         actual = pd.Series(actual)
2025-02-24T16:33:40.8751825Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:33:40.8752011Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:33:40.8752015Z 
2025-02-24T16:33:40.8752130Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:33:40.8752247Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8752398Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8752466Z     ???
2025-02-24T16:33:40.8752578Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8752582Z 
2025-02-24T16:33:40.8752652Z >   ???
2025-02-24T16:33:40.8752754Z E   AssertionError: Series are different
2025-02-24T16:33:40.8752825Z E   
2025-02-24T16:33:40.8752919Z E   Series values are different (100.0 %)
2025-02-24T16:33:40.8753053Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:33:40.8754268Z E   [left]:  [1.020204277799175e+29, 8.604643039338653e+28, 7.621843612415334e+28, 6.887796775939623e+28, 6.338143063845976e+28, 5.9617708329702514e+28, 5.583215038688496e+28, 5.2621420110438605e+28, 5.007194689998156e+28, 4.79514420355033e+28, 4.630537292368222e+28, 4.4256902590810215e+28, 4.270865369572798e+28, 4.0945442836573385e+28, 3.972280940559009e+28, 3.88415238527491e+28, 3.7498225331847816e+28, 3.6666118688506595e+28, 3.5319738797726317e+28, 3.4372707153252074e+28]
2025-02-24T16:33:40.8755581Z E   [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-02-24T16:33:40.8755773Z E   At positional index 0, first diff: 1.020204277799175e+29 != 1.0190851489144414e+29
2025-02-24T16:33:40.8755777Z 
2025-02-24T16:33:40.8755866Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8756027Z ______________________ test_plasma_estimates[j_estimator] ______________________
2025-02-24T16:33:40.8756034Z 
2025-02-24T16:33:40.8756252Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7ff4d73980e0>
2025-02-24T16:33:40.8756328Z attr = 'j_estimator'
2025-02-24T16:33:40.8756598Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff503242510>
2025-02-24T16:33:40.8756602Z 
2025-02-24T16:33:40.8756691Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.8756766Z         "attr",
2025-02-24T16:33:40.8756839Z         [
2025-02-24T16:33:40.8756918Z             "nu_bar_estimator",
2025-02-24T16:33:40.8756998Z             "j_estimator",
2025-02-24T16:33:40.8757076Z             "t_radiative",
2025-02-24T16:33:40.8757160Z             "dilution_factor",
2025-02-24T16:33:40.8757236Z             "output_nus",
2025-02-24T16:33:40.8757460Z             "output_energies",
2025-02-24T16:33:40.8757532Z         ],
2025-02-24T16:33:40.8757599Z     )
2025-02-24T16:33:40.8757781Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:33:40.8757898Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:33:40.8757980Z             actual = getattr(
2025-02-24T16:33:40.8758169Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:33:40.8758246Z                 attr,
2025-02-24T16:33:40.8758318Z             )
2025-02-24T16:33:40.8758434Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:33:40.8758587Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:33:40.8758698Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:33:40.8758896Z             actual = getattr(
2025-02-24T16:33:40.8759070Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:33:40.8759146Z                 attr,
2025-02-24T16:33:40.8759218Z             )
2025-02-24T16:33:40.8759288Z         else:
2025-02-24T16:33:40.8759431Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:33:40.8759501Z     
2025-02-24T16:33:40.8759592Z         if hasattr(actual, "value"):
2025-02-24T16:33:40.8759676Z             actual = actual.value
2025-02-24T16:33:40.8759768Z         actual = pd.Series(actual)
2025-02-24T16:33:40.8759895Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:33:40.8760074Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:33:40.8760078Z 
2025-02-24T16:33:40.8760197Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:33:40.8760305Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8760458Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8760527Z     ???
2025-02-24T16:33:40.8760637Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8760641Z 
2025-02-24T16:33:40.8760712Z >   ???
2025-02-24T16:33:40.8760808Z E   AssertionError: Series are different
2025-02-24T16:33:40.8760880Z E   
2025-02-24T16:33:40.8761092Z E   Series values are different (100.0 %)
2025-02-24T16:33:40.8761220Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:33:40.8762497Z E   [left]:  [116635492761989.14, 98171051632121.9, 86872515261187.03, 78289696965689.94, 72209193315676.52, 67743848273202.75, 63510940656107.945, 60117004438842.41, 57572723670164.85, 55316097836075.21, 53398108009568.72, 51391839595543.516, 49914799926154.26, 48252386019894.586, 46984233483222.11, 46076787175987.375, 45005288890715.836, 44179675761282.96, 43040066710169.75, 42141149121109.805]
2025-02-24T16:33:40.8763465Z E   [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-02-24T16:33:40.8763645Z E   At positional index 0, first diff: 116635492761989.14 != 116548101693134.0
2025-02-24T16:33:40.8763649Z 
2025-02-24T16:33:40.8763741Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8763894Z ______________________ test_plasma_estimates[t_radiative] ______________________
2025-02-24T16:33:40.8763898Z 
2025-02-24T16:33:40.8764117Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7ff4d73980e0>
2025-02-24T16:33:40.8764194Z attr = 't_radiative'
2025-02-24T16:33:40.8764466Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff503241400>
2025-02-24T16:33:40.8764473Z 
2025-02-24T16:33:40.8764566Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.8764637Z         "attr",
2025-02-24T16:33:40.8764709Z         [
2025-02-24T16:33:40.8764789Z             "nu_bar_estimator",
2025-02-24T16:33:40.8764871Z             "j_estimator",
2025-02-24T16:33:40.8764946Z             "t_radiative",
2025-02-24T16:33:40.8765031Z             "dilution_factor",
2025-02-24T16:33:40.8765117Z             "output_nus",
2025-02-24T16:33:40.8765198Z             "output_energies",
2025-02-24T16:33:40.8765270Z         ],
2025-02-24T16:33:40.8765337Z     )
2025-02-24T16:33:40.8765518Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:33:40.8765634Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:33:40.8765719Z             actual = getattr(
2025-02-24T16:33:40.8765916Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:33:40.8765989Z                 attr,
2025-02-24T16:33:40.8766154Z             )
2025-02-24T16:33:40.8766276Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:33:40.8766428Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:33:40.8766540Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:33:40.8766623Z             actual = getattr(
2025-02-24T16:33:40.8766801Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:33:40.8766872Z                 attr,
2025-02-24T16:33:40.8766945Z             )
2025-02-24T16:33:40.8767013Z         else:
2025-02-24T16:33:40.8767152Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:33:40.8767220Z     
2025-02-24T16:33:40.8767434Z         if hasattr(actual, "value"):
2025-02-24T16:33:40.8767525Z             actual = actual.value
2025-02-24T16:33:40.8767611Z         actual = pd.Series(actual)
2025-02-24T16:33:40.8767738Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:33:40.8767921Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:33:40.8767925Z 
2025-02-24T16:33:40.8768045Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:33:40.8768160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8768305Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8768516Z     ???
2025-02-24T16:33:40.8768622Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8768626Z 
2025-02-24T16:33:40.8768697Z >   ???
2025-02-24T16:33:40.8768794Z E   AssertionError: Series are different
2025-02-24T16:33:40.8768866Z E   
2025-02-24T16:33:40.8768962Z E   Series values are different (90.0 %)
2025-02-24T16:33:40.8769085Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:33:40.8770104Z E   [left]:  [10091.396322818857, 10113.672762424394, 10138.572146470884, 10142.407829541042, 10149.471061360666, 10124.731447668684, 10084.96501000204, 10057.884801342841, 10073.983914823792, 10031.92450183089, 10029.890159447663, 9982.658841271634, 9943.375727608094, 9914.259749796103, 9893.924180562473, 9854.860600288928, 9802.891513260804, 9774.848565783679, 9735.162327402864, 9698.91109582603]
2025-02-24T16:33:40.8771125Z E   [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-02-24T16:33:40.8771296Z E   At positional index 0, first diff: 10091.396322818857 != 10090.925208074616
2025-02-24T16:33:40.8771300Z 
2025-02-24T16:33:40.8771390Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8771551Z ____________________ test_plasma_estimates[dilution_factor] ____________________
2025-02-24T16:33:40.8771558Z 
2025-02-24T16:33:40.8771771Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7ff4d73980e0>
2025-02-24T16:33:40.8771857Z attr = 'dilution_factor'
2025-02-24T16:33:40.8772123Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff503236030>
2025-02-24T16:33:40.8772130Z 
2025-02-24T16:33:40.8772226Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.8772295Z         "attr",
2025-02-24T16:33:40.8772368Z         [
2025-02-24T16:33:40.8772453Z             "nu_bar_estimator",
2025-02-24T16:33:40.8772529Z             "j_estimator",
2025-02-24T16:33:40.8772609Z             "t_radiative",
2025-02-24T16:33:40.8772688Z             "dilution_factor",
2025-02-24T16:33:40.8772770Z             "output_nus",
2025-02-24T16:33:40.8772849Z             "output_energies",
2025-02-24T16:33:40.8772921Z         ],
2025-02-24T16:33:40.8772992Z     )
2025-02-24T16:33:40.8773281Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:33:40.8773399Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:33:40.8773477Z             actual = getattr(
2025-02-24T16:33:40.8773669Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:33:40.8773740Z                 attr,
2025-02-24T16:33:40.8773813Z             )
2025-02-24T16:33:40.8773937Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:33:40.8774084Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:33:40.8774201Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:33:40.8774279Z             actual = getattr(
2025-02-24T16:33:40.8774452Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:33:40.8774523Z                 attr,
2025-02-24T16:33:40.8774596Z             )
2025-02-24T16:33:40.8774669Z         else:
2025-02-24T16:33:40.8774805Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:33:40.8774878Z     
2025-02-24T16:33:40.8774962Z         if hasattr(actual, "value"):
2025-02-24T16:33:40.8775053Z             actual = actual.value
2025-02-24T16:33:40.8775137Z         actual = pd.Series(actual)
2025-02-24T16:33:40.8775264Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:33:40.8775448Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:33:40.8775552Z 
2025-02-24T16:33:40.8775671Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:33:40.8775787Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8775932Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8776005Z     ???
2025-02-24T16:33:40.8776113Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8776117Z 
2025-02-24T16:33:40.8776183Z >   ???
2025-02-24T16:33:40.8776284Z E   AssertionError: Series are different
2025-02-24T16:33:40.8776351Z E   
2025-02-24T16:33:40.8776447Z E   Series values are different (95.0 %)
2025-02-24T16:33:40.8776571Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:33:40.8777770Z E   [left]:  [0.45006901732183335, 0.3591778672440068, 0.2993157944909688, 0.2578615845098733, 0.22544220327867867, 0.2010999763061898, 0.18257381854718469, 0.16658101749462778, 0.15049754388199085, 0.13975435818105253, 0.1286220608480736, 0.12092168181342128, 0.11342334056954673, 0.10650389106044367, 0.10016109465785494, 0.09484390983006774, 0.09052533757303853, 0.0858591268281399, 0.08203028321765116, 0.07824287530618096]
2025-02-24T16:33:40.8778862Z E   [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-02-24T16:33:40.8779048Z E   At positional index 0, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-24T16:33:40.8779052Z 
2025-02-24T16:33:40.8779140Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8779303Z ______________________ test_plasma_estimates[output_nus] _______________________
2025-02-24T16:33:40.8779310Z 
2025-02-24T16:33:40.8779525Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7ff4d73980e0>
2025-02-24T16:33:40.8779610Z attr = 'output_nus'
2025-02-24T16:33:40.8779882Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff503236e10>
2025-02-24T16:33:40.8779887Z 
2025-02-24T16:33:40.8779977Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.8780054Z         "attr",
2025-02-24T16:33:40.8780123Z         [
2025-02-24T16:33:40.8780211Z             "nu_bar_estimator",
2025-02-24T16:33:40.8780404Z             "j_estimator",
2025-02-24T16:33:40.8780492Z             "t_radiative",
2025-02-24T16:33:40.8780580Z             "dilution_factor",
2025-02-24T16:33:40.8780657Z             "output_nus",
2025-02-24T16:33:40.8780745Z             "output_energies",
2025-02-24T16:33:40.8780814Z         ],
2025-02-24T16:33:40.8780887Z     )
2025-02-24T16:33:40.8781064Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:33:40.8781185Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:33:40.8781269Z             actual = getattr(
2025-02-24T16:33:40.8781458Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:33:40.8781544Z                 attr,
2025-02-24T16:33:40.8781611Z             )
2025-02-24T16:33:40.8781731Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:33:40.8781876Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:33:40.8781994Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:33:40.8782078Z             actual = getattr(
2025-02-24T16:33:40.8782244Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:33:40.8782319Z                 attr,
2025-02-24T16:33:40.8782387Z             )
2025-02-24T16:33:40.8782461Z         else:
2025-02-24T16:33:40.8782595Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:33:40.8782780Z     
2025-02-24T16:33:40.8782872Z         if hasattr(actual, "value"):
2025-02-24T16:33:40.8782954Z             actual = actual.value
2025-02-24T16:33:40.8783044Z         actual = pd.Series(actual)
2025-02-24T16:33:40.8783165Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:33:40.8783346Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:33:40.8783350Z 
2025-02-24T16:33:40.8783465Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:33:40.8783581Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8783733Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8783801Z     ???
2025-02-24T16:33:40.8783914Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8783918Z 
2025-02-24T16:33:40.8783986Z >   ???
2025-02-24T16:33:40.8784093Z E   AssertionError: Series are different
2025-02-24T16:33:40.8784167Z E   
2025-02-24T16:33:40.8784265Z E   Series values are different (5.1125 %)
2025-02-24T16:33:40.8784639Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8790471Z E   [left]:  [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.8, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.4, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313315.0, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-02-24T16:33:40.8795596Z E   [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-02-24T16:33:40.8795907Z E   At positional index 56, first diff: 657003154645147.8 != 657025184715239.1
2025-02-24T16:33:40.8795921Z 
2025-02-24T16:33:40.8796018Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8796192Z ____________________ test_plasma_estimates[output_energies] ____________________
2025-02-24T16:33:40.8796196Z 
2025-02-24T16:33:40.8796421Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7ff4d73980e0>
2025-02-24T16:33:40.8796510Z attr = 'output_energies'
2025-02-24T16:33:40.8796781Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff503237d70>
2025-02-24T16:33:40.8796793Z 
2025-02-24T16:33:40.8796886Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.8796964Z         "attr",
2025-02-24T16:33:40.8797032Z         [
2025-02-24T16:33:40.8797120Z             "nu_bar_estimator",
2025-02-24T16:33:40.8797199Z             "j_estimator",
2025-02-24T16:33:40.8797388Z             "t_radiative",
2025-02-24T16:33:40.8797474Z             "dilution_factor",
2025-02-24T16:33:40.8797557Z             "output_nus",
2025-02-24T16:33:40.8797643Z             "output_energies",
2025-02-24T16:33:40.8797843Z         ],
2025-02-24T16:33:40.8797919Z     )
2025-02-24T16:33:40.8798104Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:33:40.8798226Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:33:40.8798378Z             actual = getattr(
2025-02-24T16:33:40.8798702Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:33:40.8798830Z                 attr,
2025-02-24T16:33:40.8798900Z             )
2025-02-24T16:33:40.8799027Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:33:40.8799180Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:33:40.8799300Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:33:40.8799378Z             actual = getattr(
2025-02-24T16:33:40.8799559Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:33:40.8799638Z                 attr,
2025-02-24T16:33:40.8799710Z             )
2025-02-24T16:33:40.8799818Z         else:
2025-02-24T16:33:40.8799960Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:33:40.8800038Z     
2025-02-24T16:33:40.8800126Z         if hasattr(actual, "value"):
2025-02-24T16:33:40.8800218Z             actual = actual.value
2025-02-24T16:33:40.8800312Z         actual = pd.Series(actual)
2025-02-24T16:33:40.8800567Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:33:40.8800755Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:33:40.8800760Z 
2025-02-24T16:33:40.8800881Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:33:40.8801002Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8801156Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8801225Z     ???
2025-02-24T16:33:40.8801341Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8801348Z 
2025-02-24T16:33:40.8801417Z >   ???
2025-02-24T16:33:40.8801523Z E   AssertionError: Series are different
2025-02-24T16:33:40.8801592Z E   
2025-02-24T16:33:40.8801694Z E   Series values are different (1.3025 %)
2025-02-24T16:33:40.8802068Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8808534Z E   [left]:  [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503756e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.558071221185956e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.2709056323648205e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544446e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.5337925181007677e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T16:33:40.8815112Z E   [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T16:33:40.8815458Z E   At positional index 414, first diff: 2.5657552576608082e-05 != 2.5347525852067693e-05
2025-02-24T16:33:40.8815464Z 
2025-02-24T16:33:40.8815557Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8815752Z ________________ TestSpectrumSolver.test_spectrum_real_packets _________________
2025-02-24T16:33:40.8815756Z 
2025-02-24T16:33:40.8816024Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7ff512138e00>
2025-02-24T16:33:40.8816297Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4e467aa80>
2025-02-24T16:33:40.8816301Z 
2025-02-24T16:33:40.8816434Z     def test_spectrum_real_packets(self, simulation):
2025-02-24T16:33:40.8816581Z         transport_state = simulation.transport.transport_state
2025-02-24T16:33:40.8816779Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T16:33:40.8816851Z     
2025-02-24T16:33:40.8817042Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T16:33:40.8817171Z         result = solver.spectrum_real_packets.luminosity
2025-02-24T16:33:40.8817461Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T16:33:40.8817570Z         expected = self.get_expected_data(key)
2025-02-24T16:33:40.8817638Z     
2025-02-24T16:33:40.8817751Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T16:33:40.8817825Z     
2025-02-24T16:33:40.8817912Z >       assert_quantity_allclose(
2025-02-24T16:33:40.8817989Z             result,
2025-02-24T16:33:40.8818071Z             luminosity,
2025-02-24T16:33:40.8818145Z         )
2025-02-24T16:33:40.8818149Z 
2025-02-24T16:33:40.8818275Z tardis/spectrum/tests/test_spectrum_solver.py:71: 
2025-02-24T16:33:40.8818392Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8818744Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:33:40.8818959Z     np.testing.assert_allclose(
2025-02-24T16:33:40.8819073Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8819077Z 
2025-02-24T16:33:40.8819560Z args = (<function assert_allclose.<locals>.compare at 0x7ff510da6fc0>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-02-24T16:33:40.8819664Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.8819925Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8819929Z 
2025-02-24T16:33:40.8820004Z     @wraps(func)
2025-02-24T16:33:40.8820093Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8820179Z         with self._recreate_cm():
2025-02-24T16:33:40.8820275Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8820369Z E           AssertionError: 
2025-02-24T16:33:40.8820481Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8820556Z E           
2025-02-24T16:33:40.8820659Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T16:33:40.8820765Z E           Max absolute difference: 4.30543741e+37
2025-02-24T16:33:40.8820857Z E           Max relative difference: 1.
2025-02-24T16:33:40.8821016Z E            x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.8821113Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8821261Z E            y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.8821350Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8821354Z 
2025-02-24T16:33:40.8821559Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8821762Z ___________ TestSpectrumSolver.test_spectrum_real_packets_reabsorbed ___________
2025-02-24T16:33:40.8821765Z 
2025-02-24T16:33:40.8822034Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7ff512138dd0>
2025-02-24T16:33:40.8822229Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4e467aa80>
2025-02-24T16:33:40.8822233Z 
2025-02-24T16:33:40.8822392Z     def test_spectrum_real_packets_reabsorbed(self, simulation):
2025-02-24T16:33:40.8822540Z         transport_state = simulation.transport.transport_state
2025-02-24T16:33:40.8822732Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T16:33:40.8822806Z     
2025-02-24T16:33:40.8823105Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T16:33:40.8823267Z         result = solver.spectrum_real_packets_reabsorbed.luminosity
2025-02-24T16:33:40.8823472Z         key = "simulation/spectrum_solver/spectrum_real_packets_reabsorbed/luminosity"
2025-02-24T16:33:40.8823580Z         expected = self.get_expected_data(key)
2025-02-24T16:33:40.8823653Z     
2025-02-24T16:33:40.8823767Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T16:33:40.8823841Z     
2025-02-24T16:33:40.8823928Z >       assert_quantity_allclose(
2025-02-24T16:33:40.8824011Z             result,
2025-02-24T16:33:40.8824087Z             luminosity,
2025-02-24T16:33:40.8824163Z         )
2025-02-24T16:33:40.8824167Z 
2025-02-24T16:33:40.8824299Z tardis/spectrum/tests/test_spectrum_solver.py:87: 
2025-02-24T16:33:40.8824414Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8824759Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:33:40.8824848Z     np.testing.assert_allclose(
2025-02-24T16:33:40.8824963Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8824966Z 
2025-02-24T16:33:40.8825444Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e4e2aca0>, array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38,...), array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38, ...,
2025-02-24T16:33:40.8825629Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.8825880Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8825885Z 
2025-02-24T16:33:40.8825958Z     @wraps(func)
2025-02-24T16:33:40.8826048Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8826138Z         with self._recreate_cm():
2025-02-24T16:33:40.8826227Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8826318Z E           AssertionError: 
2025-02-24T16:33:40.8826430Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8826505Z E           
2025-02-24T16:33:40.8826606Z E           Mismatched elements: 252 / 10000 (2.52%)
2025-02-24T16:33:40.8826710Z E           Max absolute difference: 4.15247374e+37
2025-02-24T16:33:40.8826805Z E           Max relative difference: 1.
2025-02-24T16:33:40.8826957Z E            x: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.8827052Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8827193Z E            y: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.8827383Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8827387Z 
2025-02-24T16:33:40.8827590Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8827760Z ________________________ TestSpectrumSolver.test_solve _________________________
2025-02-24T16:33:40.8827763Z 
2025-02-24T16:33:40.8828028Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7ff5121386b0>
2025-02-24T16:33:40.8828223Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4e467aa80>
2025-02-24T16:33:40.8828226Z 
2025-02-24T16:33:40.8828324Z     def test_solve(self, simulation):
2025-02-24T16:33:40.8828473Z         transport_state = simulation.transport.transport_state
2025-02-24T16:33:40.8828669Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T16:33:40.8828739Z     
2025-02-24T16:33:40.8828923Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T16:33:40.8829084Z         result_real, result_virtual, result_integrated = solver.solve(
2025-02-24T16:33:40.8829167Z             transport_state
2025-02-24T16:33:40.8829242Z         )
2025-02-24T16:33:40.8829428Z         key_real = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T16:33:40.8829682Z         expected_real = self.get_expected_data(key_real)
2025-02-24T16:33:40.8829758Z     
2025-02-24T16:33:40.8829893Z         luminosity_real = u.Quantity(expected_real, "erg /s")
2025-02-24T16:33:40.8829965Z     
2025-02-24T16:33:40.8830050Z >       assert_quantity_allclose(
2025-02-24T16:33:40.8830142Z             result_real.luminosity,
2025-02-24T16:33:40.8830231Z             luminosity_real,
2025-02-24T16:33:40.8830301Z         )
2025-02-24T16:33:40.8830308Z 
2025-02-24T16:33:40.8830440Z tardis/spectrum/tests/test_spectrum_solver.py:105: 
2025-02-24T16:33:40.8830548Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8830886Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:33:40.8830976Z     np.testing.assert_allclose(
2025-02-24T16:33:40.8831091Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8831095Z 
2025-02-24T16:33:40.8831571Z args = (<function assert_allclose.<locals>.compare at 0x7ff50242c400>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-02-24T16:33:40.8831676Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.8831923Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8832035Z 
2025-02-24T16:33:40.8832116Z     @wraps(func)
2025-02-24T16:33:40.8832199Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8832290Z         with self._recreate_cm():
2025-02-24T16:33:40.8832379Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8832470Z E           AssertionError: 
2025-02-24T16:33:40.8832578Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8832654Z E           
2025-02-24T16:33:40.8832763Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T16:33:40.8832861Z E           Max absolute difference: 4.30543741e+37
2025-02-24T16:33:40.8832962Z E           Max relative difference: 1.
2025-02-24T16:33:40.8833111Z E            x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.8833203Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8833346Z E            y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.8833437Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8833444Z 
2025-02-24T16:33:40.8833647Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8833830Z __________________ TestTransportSimple.test_j_blue_estimators __________________
2025-02-24T16:33:40.8833833Z 
2025-02-24T16:33:40.8834050Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7ff512139ee0>
2025-02-24T16:33:40.8834246Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4df75c440>
2025-02-24T16:33:40.8834257Z 
2025-02-24T16:33:40.8834368Z     def test_j_blue_estimators(self, simulation):
2025-02-24T16:33:40.8834530Z         key = "simulation/transport/transport_state/j_blue_estimator"
2025-02-24T16:33:40.8834632Z         expected = self.get_expected_data(key)
2025-02-24T16:33:40.8834706Z     
2025-02-24T16:33:40.8834791Z >       npt.assert_allclose(
2025-02-24T16:33:40.8835023Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator,
2025-02-24T16:33:40.8835118Z             expected.values,
2025-02-24T16:33:40.8835188Z         )
2025-02-24T16:33:40.8835192Z 
2025-02-24T16:33:40.8835293Z tardis/tests/test_tardis_full.py:70: 
2025-02-24T16:33:40.8835403Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8835407Z 
2025-02-24T16:33:40.8835680Z args = (<function assert_allclose.<locals>.compare at 0x7ff4d70dd4e0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8835753Z        [0., 0., .....,
2025-02-24T16:33:40.8835841Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8836006Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8836087Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:33:40.8836329Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8836334Z 
2025-02-24T16:33:40.8836408Z     @wraps(func)
2025-02-24T16:33:40.8836502Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8836596Z         with self._recreate_cm():
2025-02-24T16:33:40.8836685Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8836774Z E           AssertionError: 
2025-02-24T16:33:40.8836881Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8836959Z E           
2025-02-24T16:33:40.8837065Z E           Mismatched elements: 491895 / 584480 (84.2%)
2025-02-24T16:33:40.8837171Z E           Max absolute difference: 5.32418652e-19
2025-02-24T16:33:40.8837404Z E           Max relative difference: 12.23359055
2025-02-24T16:33:40.8837496Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8837593Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8837683Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.8837775Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8837855Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8837947Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.8838068Z 
2025-02-24T16:33:40.8838285Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8838439Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.8838694Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8838765Z 	
2025-02-24T16:33:40.8839618Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-02-24T16:33:40.8839820Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8840247Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-02-24T16:33:40.8840420Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8840901Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-02-24T16:33:40.8841155Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:33:40.8841601Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:33:40.8841780Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8841998Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T16:33:40.8842163Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8842241Z 	
2025-02-24T16:33:40.8842398Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-02-24T16:33:40.8842565Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8842637Z 	
2025-02-24T16:33:40.8842732Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-02-24T16:33:40.8842829Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-02-24T16:33:40.8842922Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.8843034Z  ([1mbase.py[0m:657)
2025-02-24T16:33:40.8843193Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8843267Z 	
2025-02-24T16:33:40.8843423Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T16:33:40.8843581Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8843652Z 	
2025-02-24T16:33:40.8843757Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-02-24T16:33:40.8843848Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-02-24T16:33:40.8843930Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-02-24T16:33:40.8844148Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-02-24T16:33:40.8844241Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-02-24T16:33:40.8844346Z  ([1mbase.py[0m:650)
2025-02-24T16:33:40.8844510Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8844577Z 	
2025-02-24T16:33:40.8844665Z 	Current t_inner = 9974.969 K
2025-02-24T16:33:40.8844783Z 	Expected t_inner for next iteration = 10736.790 K
2025-02-24T16:33:40.8844894Z  ([1mbase.py[0m:652)
2025-02-24T16:33:40.8845057Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8845124Z 	
2025-02-24T16:33:40.8845279Z 	Starting iteration 2 of 5 ([1mbase.py[0m:444)
2025-02-24T16:33:40.8845435Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8845508Z 	
2025-02-24T16:33:40.8845599Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-02-24T16:33:40.8845693Z 	Luminosity absorbed  = 3.623e+42 erg / s
2025-02-24T16:33:40.8845788Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.8845889Z  ([1mbase.py[0m:657)
2025-02-24T16:33:40.8846055Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8846122Z 	
2025-02-24T16:33:40.8846271Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T16:33:40.8846428Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8853125Z 	
2025-02-24T16:33:40.8853281Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:33:40.8853567Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-02-24T16:33:40.8853661Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-02-24T16:33:40.8853746Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-02-24T16:33:40.8853834Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-02-24T16:33:40.8853989Z  ([1mbase.py[0m:650)
2025-02-24T16:33:40.8854175Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8854247Z 	
2025-02-24T16:33:40.8854333Z 	Current t_inner = 10736.790 K
2025-02-24T16:33:40.8854457Z 	Expected t_inner for next iteration = 10718.574 K
2025-02-24T16:33:40.8854571Z  ([1mbase.py[0m:652)
2025-02-24T16:33:40.8854746Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8854813Z 	
2025-02-24T16:33:40.8854975Z 	Starting iteration 3 of 5 ([1mbase.py[0m:444)
2025-02-24T16:33:40.8855143Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8855210Z 	
2025-02-24T16:33:40.8855306Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-02-24T16:33:40.8855399Z 	Luminosity absorbed  = 3.512e+42 erg / s
2025-02-24T16:33:40.8855491Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.8855595Z  ([1mbase.py[0m:657)
2025-02-24T16:33:40.8855758Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8855984Z 	Iteration converged 1/4 consecutive times. ([1mbase.py[0m:260)
2025-02-24T16:33:40.8856145Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8856219Z 	
2025-02-24T16:33:40.8856367Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T16:33:40.8856531Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8856598Z 	
2025-02-24T16:33:40.8856710Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:33:40.8856804Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-02-24T16:33:40.8856884Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-02-24T16:33:40.8856973Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-02-24T16:33:40.8857058Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0922
2025-02-24T16:33:40.8857168Z  ([1mbase.py[0m:650)
2025-02-24T16:33:40.8857534Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8857611Z 	
2025-02-24T16:33:40.8857704Z 	Current t_inner = 10718.574 K
2025-02-24T16:33:40.8857822Z 	Expected t_inner for next iteration = 10696.150 K
2025-02-24T16:33:40.8857933Z  ([1mbase.py[0m:652)
2025-02-24T16:33:40.8858086Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8858158Z 	
2025-02-24T16:33:40.8858305Z 	Starting iteration 4 of 5 ([1mbase.py[0m:444)
2025-02-24T16:33:40.8858618Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8858694Z 	
2025-02-24T16:33:40.8858785Z 	Luminosity emitted   = 1.083e+43 erg / s
2025-02-24T16:33:40.8858885Z 	Luminosity absorbed  = 3.426e+42 erg / s
2025-02-24T16:33:40.8858975Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.8859088Z  ([1mbase.py[0m:657)
2025-02-24T16:33:40.8859248Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8859466Z 	Iteration converged 2/4 consecutive times. ([1mbase.py[0m:260)
2025-02-24T16:33:40.8859627Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8859694Z 	
2025-02-24T16:33:40.8859840Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T16:33:40.8859994Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8860065Z 	
2025-02-24T16:33:40.8860166Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:33:40.8860256Z 	0         1.07e+04 K  1.09e+04 K  0.491   0.489
2025-02-24T16:33:40.8860345Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-02-24T16:33:40.8860428Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-02-24T16:33:40.8860514Z 	15        1.04e+04 K  1.05e+04 K 0.0922  0.0902
2025-02-24T16:33:40.8860618Z  ([1mbase.py[0m:650)
2025-02-24T16:33:40.8860781Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8860849Z 	
2025-02-24T16:33:40.8861112Z 	Current t_inner = 10696.150 K
2025-02-24T16:33:40.8861231Z 	Expected t_inner for next iteration = 10681.168 K
2025-02-24T16:33:40.8861337Z  ([1mbase.py[0m:652)
2025-02-24T16:33:40.8861506Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8861572Z 	
2025-02-24T16:33:40.8861675Z 	Simulation finished in 4 iterations 
2025-02-24T16:33:40.8861757Z 	Simulation took 12.73 s
2025-02-24T16:33:40.8861863Z  ([1mbase.py[0m:542)
2025-02-24T16:33:40.8862023Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8862090Z 	
2025-02-24T16:33:40.8862244Z 	Starting iteration 5 of 5 ([1mbase.py[0m:444)
2025-02-24T16:33:40.8862399Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8862471Z 	
2025-02-24T16:33:40.8862559Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-02-24T16:33:40.8862656Z 	Luminosity absorbed  = 3.438e+42 erg / s
2025-02-24T16:33:40.8862751Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.8862852Z  ([1mbase.py[0m:657)
2025-02-24T16:33:40.8863034Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T16:33:40.8863041Z 
2025-02-24T16:33:40.8863045Z 
2025-02-24T16:33:40.8863296Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                [A
2025-02-24T16:33:40.8863301Z 
2025-02-24T16:33:40.8863530Z Packets:                                                                                   0/200000 [00:00<?, ?it/s][A
2025-02-24T16:33:40.8863534Z 
2025-02-24T16:33:40.8863804Z Packets:   ████▏                                                                           10582/200000 [00:00<00:01, 105812.28it/s][A
2025-02-24T16:33:40.8863809Z 
2025-02-24T16:33:40.8864049Z Packets:   ████████▌                                                                       21451/200000 [00:00<00:01, 107499.34it/s][A
2025-02-24T16:33:40.8864053Z 
2025-02-24T16:33:40.8864298Z Packets:   ████████████▉                                                                   32390/200000 [00:00<00:01, 108359.95it/s][A
2025-02-24T16:33:40.8864310Z 
2025-02-24T16:33:40.8864575Z Packets:   █████████████████▎                                                              43253/200000 [00:00<00:01, 108464.66it/s][A
2025-02-24T16:33:40.8864581Z 
2025-02-24T16:33:40.8865087Z Packets:   █████████████████████▋                                                          54195/200000 [00:00<00:01, 108808.72it/s][A
2025-02-24T16:33:40.8865096Z 
2025-02-24T16:33:40.8865584Z Packets:   ██████████████████████████                                                      65076/200000 [00:00<00:01, 108222.39it/s][A
2025-02-24T16:33:40.8865590Z 
2025-02-24T16:33:40.8865866Z Packets:   ██████████████████████████████▍                                                 76076/200000 [00:00<00:01, 108800.77it/s][A
2025-02-24T16:33:40.8865870Z 
2025-02-24T16:33:40.8866135Z Packets:   ██████████████████████████████████▊                                             86957/200000 [00:00<00:01, 108586.61it/s][A
2025-02-24T16:33:40.8866151Z 
2025-02-24T16:33:40.8866425Z Packets:   ███████████████████████████████████████▏                                        97930/200000 [00:00<00:00, 108942.33it/s][A
2025-02-24T16:33:40.8866430Z 
2025-02-24T16:33:40.8866717Z Packets:   ███████████████████████████████████████████▌                                    108825/200000 [00:01<00:00, 108836.89it/s][A
2025-02-24T16:33:40.8866721Z 
2025-02-24T16:33:40.8867003Z Packets:   ███████████████████████████████████████████████▉                                119709/200000 [00:01<00:00, 105042.56it/s][A
2025-02-24T16:33:40.8867019Z 
2025-02-24T16:33:40.8867492Z Packets:   ████████████████████████████████████████████████████▏                           130594/200000 [00:01<00:00, 106168.47it/s][A
2025-02-24T16:33:40.8867497Z 
2025-02-24T16:33:40.8867809Z Packets:   ████████████████████████████████████████████████████████▌                       141551/200000 [00:01<00:00, 107177.28it/s][A
2025-02-24T16:33:40.8867949Z 
2025-02-24T16:33:40.8868256Z Packets:   ████████████████████████████████████████████████████████████▉                   152433/200000 [00:01<00:00, 107665.89it/s][A
2025-02-24T16:33:40.8868260Z 
2025-02-24T16:33:40.8868567Z Packets:   █████████████████████████████████████████████████████████████████▎              163237/200000 [00:01<00:00, 107776.75it/s][A
2025-02-24T16:33:40.8868571Z 
2025-02-24T16:33:40.8868883Z Packets:   █████████████████████████████████████████████████████████████████████▋          174071/200000 [00:01<00:00, 107944.79it/s][A
2025-02-24T16:33:40.8868886Z 
2025-02-24T16:33:40.8869214Z Packets:   █████████████████████████████████████████████████████████████████████████▉      184872/200000 [00:01<00:00, 107816.82it/s][A
2025-02-24T16:33:40.8869218Z 
2025-02-24T16:33:40.8869537Z Packets:   ██████████████████████████████████████████████████████████████████████████████▎ 195749/200000 [00:01<00:00, 108101.64it/s][A
2025-02-24T16:33:40.8869688Z Iterations:                                                                                13/? [05:51<00:00, 12.12s/it]
2025-02-24T16:33:40.8869713Z 
2025-02-24T16:33:40.8870039Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉199999/200000 [00:01<00:00, 108101.64it/s][A
2025-02-24T16:33:40.8870043Z 
2025-02-24T16:33:40.8870280Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-24T16:33:40.8870285Z 
2025-02-24T16:33:40.8870638Z Packets:   ████▎                                                                           10814/200000 [00:00<00:01, 107158.02it/s][A
2025-02-24T16:33:40.8870647Z 
2025-02-24T16:33:40.8870887Z Packets:   ████████▋                                                                       21621/200000 [00:00<00:01, 107689.21it/s][A
2025-02-24T16:33:40.8870891Z 
2025-02-24T16:33:40.8871132Z Packets:   ████████████▉                                                                   32391/200000 [00:00<00:01, 107629.39it/s][A
2025-02-24T16:33:40.8871220Z 
2025-02-24T16:33:40.8871477Z Packets:   █████████████████▎                                                              43171/200000 [00:00<00:01, 107693.85it/s][A
2025-02-24T16:33:40.8871485Z 
2025-02-24T16:33:40.8871734Z Packets:   █████████████████████▌                                                          53974/200000 [00:00<00:01, 107814.23it/s][A
2025-02-24T16:33:40.8871738Z 
2025-02-24T16:33:40.8871998Z Packets:   █████████████████████████▉                                                      64816/200000 [00:00<00:01, 108019.56it/s][A
2025-02-24T16:33:40.8872012Z 
2025-02-24T16:33:40.8872271Z Packets:   ██████████████████████████████▎                                                 75672/200000 [00:00<00:01, 108193.75it/s][A
2025-02-24T16:33:40.8872282Z 
2025-02-24T16:33:40.8872546Z Packets:   ██████████████████████████████████▌                                             86492/200000 [00:00<00:01, 108112.84it/s][A
2025-02-24T16:33:40.8872561Z 
2025-02-24T16:33:40.8872837Z Packets:   ██████████████████████████████████████▉                                         97316/200000 [00:00<00:00, 108151.95it/s][A
2025-02-24T16:33:40.8872841Z 
2025-02-24T16:33:40.8873119Z Packets:   ███████████████████████████████████████████▎                                    108132/200000 [00:01<00:00, 106404.42it/s][A
2025-02-24T16:33:40.8873123Z 
2025-02-24T16:33:40.8873412Z Packets:   ███████████████████████████████████████████████▌                                118926/200000 [00:01<00:00, 106868.63it/s][A
2025-02-24T16:33:40.8873416Z 
2025-02-24T16:33:40.8873723Z Packets:   ███████████████████████████████████████████████████▉                            129755/200000 [00:01<00:00, 107297.16it/s][A
2025-02-24T16:33:40.8873727Z 
2025-02-24T16:33:40.8874019Z Packets:   ████████████████████████████████████████████████████████▎                       140704/200000 [00:01<00:00, 107956.54it/s][A
2025-02-24T16:33:40.8874023Z 
2025-02-24T16:33:40.8874337Z Packets:   ████████████████████████████████████████████████████████████▋                   151565/200000 [00:01<00:00, 108150.13it/s][A
2025-02-24T16:33:40.8874341Z 
2025-02-24T16:33:40.8874647Z Packets:   ████████████████████████████████████████████████████████████████▉               162391/200000 [00:01<00:00, 108182.34it/s][A
2025-02-24T16:33:40.8874650Z 
2025-02-24T16:33:40.8874966Z Packets:   █████████████████████████████████████████████████████████████████████▎          173249/200000 [00:01<00:00, 108298.96it/s][A
2025-02-24T16:33:40.8874970Z 
2025-02-24T16:33:40.8875393Z Packets:   █████████████████████████████████████████████████████████████████████████▋      184114/200000 [00:01<00:00, 108403.00it/s][A
2025-02-24T16:33:40.8875398Z 
2025-02-24T16:33:40.8875722Z Packets:   ██████████████████████████████████████████████████████████████████████████████  195104/200000 [00:01<00:00, 108850.71it/s][A
2025-02-24T16:33:40.8875873Z Iterations:                                                                                14/? [05:54<00:00,  9.41s/it]
2025-02-24T16:33:40.8875961Z 
2025-02-24T16:33:40.8876290Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 108850.71it/s][A
2025-02-24T16:33:40.8876294Z 
2025-02-24T16:33:40.8876530Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-24T16:33:40.8876534Z 
2025-02-24T16:33:40.8876782Z Packets:   ████▎                                                                           10886/200000 [00:00<00:01, 108496.92it/s][A
2025-02-24T16:33:40.8876786Z 
2025-02-24T16:33:40.8877028Z Packets:   ████████▋                                                                       21760/200000 [00:00<00:01, 108635.51it/s][A
2025-02-24T16:33:40.8877032Z 
2025-02-24T16:33:40.8877460Z Packets:   █████████████                                                                   32624/200000 [00:00<00:01, 108184.51it/s][A
2025-02-24T16:33:40.8877475Z 
2025-02-24T16:33:40.8877736Z Packets:   █████████████████▍                                                              43443/200000 [00:00<00:01, 107734.89it/s][A
2025-02-24T16:33:40.8877739Z 
2025-02-24T16:33:40.8877994Z Packets:   █████████████████████▋                                                          54284/200000 [00:00<00:01, 107975.13it/s][A
2025-02-24T16:33:40.8877998Z 
2025-02-24T16:33:40.8878257Z Packets:   ██████████████████████████                                                      65110/200000 [00:00<00:01, 108070.07it/s][A
2025-02-24T16:33:40.8878261Z 
2025-02-24T16:33:40.8878529Z Packets:   ██████████████████████████████▍                                                 75989/200000 [00:00<00:01, 108302.79it/s][A
2025-02-24T16:33:40.8878533Z 
2025-02-24T16:33:40.8878803Z Packets:   ██████████████████████████████████▊                                             86876/200000 [00:00<00:01, 108483.06it/s][A
2025-02-24T16:33:40.8878818Z 
2025-02-24T16:33:40.8879090Z Packets:   ███████████████████████████████████████                                         97739/200000 [00:00<00:00, 108526.72it/s][A
2025-02-24T16:33:40.8879095Z 
2025-02-24T16:33:40.8879375Z Packets:   ███████████████████████████████████████████▍                                    108666/200000 [00:01<00:00, 108755.02it/s][A
2025-02-24T16:33:40.8879379Z 
2025-02-24T16:33:40.8879665Z Packets:   ███████████████████████████████████████████████▊                                119542/200000 [00:01<00:00, 108230.47it/s][A
2025-02-24T16:33:40.8879669Z 
2025-02-24T16:33:40.8880118Z Packets:   ████████████████████████████████████████████████████▏                           130366/200000 [00:01<00:00, 107681.86it/s][A
2025-02-24T16:33:40.8880123Z 
2025-02-24T16:33:40.8880420Z Packets:   ████████████████████████████████████████████████████████▍                       141171/200000 [00:01<00:00, 107791.95it/s][A
2025-02-24T16:33:40.8880424Z 
2025-02-24T16:33:40.8880730Z Packets:   ████████████████████████████████████████████████████████████▊                   151951/200000 [00:01<00:00, 107719.95it/s][A
2025-02-24T16:33:40.8880846Z 
2025-02-24T16:33:40.8881156Z Packets:   █████████████████████████████████████████████████████████████████               162724/200000 [00:01<00:00, 107605.63it/s][A
2025-02-24T16:33:40.8881160Z 
2025-02-24T16:33:40.8881468Z Packets:   █████████████████████████████████████████████████████████████████████▍          173485/200000 [00:01<00:00, 107440.73it/s][A
2025-02-24T16:33:40.8881472Z 
2025-02-24T16:33:40.8881801Z Packets:   █████████████████████████████████████████████████████████████████████████▋      184230/200000 [00:01<00:00, 107275.29it/s][A
2025-02-24T16:33:40.8881806Z 
2025-02-24T16:33:40.8882123Z Packets:   █████████████████████████████████████████████████████████████████████████████▉  194970/200000 [00:01<00:00, 107312.05it/s][A
2025-02-24T16:33:40.8882269Z Iterations:                                                                                15/? [05:57<00:00,  7.53s/it]
2025-02-24T16:33:40.8882288Z 
2025-02-24T16:33:40.8882616Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 107312.05it/s][A
2025-02-24T16:33:40.8882619Z 
2025-02-24T16:33:40.8882853Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-24T16:33:40.8882862Z 
2025-02-24T16:33:40.8883099Z Packets:   ████▎                                                                           10732/200000 [00:00<00:01, 104412.49it/s][A
2025-02-24T16:33:40.8883188Z 
2025-02-24T16:33:40.8883437Z Packets:   ████████▌                                                                       21292/200000 [00:00<00:01, 105100.98it/s][A
2025-02-24T16:33:40.8883441Z 
2025-02-24T16:33:40.8883682Z Packets:   ████████████▊                                                                   32068/200000 [00:00<00:01, 106304.78it/s][A
2025-02-24T16:33:40.8883699Z 
2025-02-24T16:33:40.8883944Z Packets:   █████████████████                                                               42803/200000 [00:00<00:01, 106712.30it/s][A
2025-02-24T16:33:40.8883947Z 
2025-02-24T16:33:40.8884203Z Packets:   █████████████████████▍                                                          53515/200000 [00:00<00:01, 106857.07it/s][A
2025-02-24T16:33:40.8884207Z 
2025-02-24T16:33:40.8884460Z Packets:   █████████████████████████▋                                                      64249/200000 [00:00<00:01, 107020.95it/s][A
2025-02-24T16:33:40.8884464Z 
2025-02-24T16:33:40.8884736Z Packets:   █████████████████████████████▉                                                  74952/200000 [00:00<00:01, 107014.11it/s][A
2025-02-24T16:33:40.8884740Z 
2025-02-24T16:33:40.8885009Z Packets:   ██████████████████████████████████▎                                             85654/200000 [00:00<00:01, 105451.72it/s][A
2025-02-24T16:33:40.8885013Z 
2025-02-24T16:33:40.8885284Z Packets:   ██████████████████████████████████████▌                                         96328/200000 [00:00<00:00, 105849.96it/s][A
2025-02-24T16:33:40.8885369Z 
2025-02-24T16:33:40.8885655Z Packets:   ██████████████████████████████████████████▊                                     107019/200000 [00:01<00:00, 106173.82it/s][A
2025-02-24T16:33:40.8885659Z 
2025-02-24T16:33:40.8885946Z Packets:   ███████████████████████████████████████████████                                 117653/200000 [00:01<00:00, 106221.98it/s][A
2025-02-24T16:33:40.8885950Z 
2025-02-24T16:33:40.8886249Z Packets:   ███████████████████████████████████████████████████▎                            128300/200000 [00:01<00:00, 106296.27it/s][A
2025-02-24T16:33:40.8886253Z 
2025-02-24T16:33:40.8886549Z Packets:   ███████████████████████████████████████████████████████▌                        138932/200000 [00:01<00:00, 106119.37it/s][A
2025-02-24T16:33:40.8886553Z 
2025-02-24T16:33:40.8886851Z Packets:   ███████████████████████████████████████████████████████████▉                    149695/200000 [00:01<00:00, 106573.26it/s][A
2025-02-24T16:33:40.8886869Z 
2025-02-24T16:33:40.8887168Z Packets:   ████████████████████████████████████████████████████████████████▏               160381/200000 [00:01<00:00, 106657.33it/s][A
2025-02-24T16:33:40.8887172Z 
2025-02-24T16:33:40.8887762Z Packets:   ████████████████████████████████████████████████████████████████████▍           171080/200000 [00:01<00:00, 106756.58it/s][A
2025-02-24T16:33:40.8887769Z 
2025-02-24T16:33:40.8888239Z Packets:   ████████████████████████████████████████████████████████████████████████▋       181757/200000 [00:01<00:00, 106685.08it/s][A
2025-02-24T16:33:40.8888245Z 
2025-02-24T16:33:40.8888568Z Packets:   ████████████████████████████████████████████████████████████████████████████▉   192426/200000 [00:01<00:00, 106154.27it/s][A
2025-02-24T16:33:40.8888720Z Iterations:                                                                                16/? [06:00<00:00,  6.23s/it]
2025-02-24T16:33:40.8888740Z 
2025-02-24T16:33:40.8889064Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 106154.27it/s][A
2025-02-24T16:33:40.8889068Z 
2025-02-24T16:33:40.8889297Z Packets:                                                                                   0/500000 [00:00<?, ?it/s]                 [A
2025-02-24T16:33:40.8889301Z 
2025-02-24T16:33:40.8889540Z Packets:   █▋                                                                              10617/500000 [00:00<00:13, 35994.62it/s][A
2025-02-24T16:33:40.8889544Z 
2025-02-24T16:33:40.8889789Z Packets:   ██▎                                                                             14217/500000 [00:00<00:13, 35730.68it/s][A
2025-02-24T16:33:40.8889792Z 
2025-02-24T16:33:40.8890019Z Packets:   ██▊                                                                             17820/500000 [00:00<00:13, 35823.97it/s][A
2025-02-24T16:33:40.8890023Z 
2025-02-24T16:33:40.8890373Z Packets:   ███▍                                                                            21396/500000 [00:00<00:13, 35796.85it/s][A
2025-02-24T16:33:40.8890377Z 
2025-02-24T16:33:40.8890611Z Packets:   ███▉                                                                            24971/500000 [00:00<00:13, 35755.71it/s][A
2025-02-24T16:33:40.8890615Z 
2025-02-24T16:33:40.8890843Z Packets:   ████▌                                                                           28543/500000 [00:00<00:13, 35620.37it/s][A
2025-02-24T16:33:40.8890847Z 
2025-02-24T16:33:40.8891087Z Packets:   █████▏                                                                          32102/500000 [00:00<00:13, 35608.59it/s][A
2025-02-24T16:33:40.8891091Z 
2025-02-24T16:33:40.8891325Z Packets:   █████▋                                                                          35661/500000 [00:00<00:13, 35522.31it/s][A
2025-02-24T16:33:40.8891328Z 
2025-02-24T16:33:40.8891557Z Packets:   ██████▎                                                                         39251/500000 [00:01<00:12, 35634.96it/s][A
2025-02-24T16:33:40.8891568Z 
2025-02-24T16:33:40.8891801Z Packets:   ██████▊                                                                         42843/500000 [00:01<00:12, 35716.44it/s][A
2025-02-24T16:33:40.8891805Z 
2025-02-24T16:33:40.8892041Z Packets:   ███████▍                                                                        46443/500000 [00:01<00:12, 35798.82it/s][A
2025-02-24T16:33:40.8892045Z 
2025-02-24T16:33:40.8892282Z Packets:   ████████                                                                        50023/500000 [00:01<00:12, 35781.99it/s][A
2025-02-24T16:33:40.8892286Z 
2025-02-24T16:33:40.8892522Z Packets:   ████████▌                                                                       53623/500000 [00:01<00:12, 35847.30it/s][A
2025-02-24T16:33:40.8892526Z 
2025-02-24T16:33:40.8892764Z Packets:   █████████▏                                                                      57208/500000 [00:01<00:12, 35829.84it/s][A
2025-02-24T16:33:40.8892775Z 
2025-02-24T16:33:40.8893014Z Packets:   █████████▋                                                                      60791/500000 [00:01<00:12, 35705.93it/s][A
2025-02-24T16:33:40.8893018Z 
2025-02-24T16:33:40.8893256Z Packets:   ██████████▎                                                                     64408/500000 [00:01<00:12, 35841.92it/s][A
2025-02-24T16:33:40.8893260Z 
2025-02-24T16:33:40.8893502Z Packets:   ██████████▉                                                                     67993/500000 [00:01<00:12, 35775.49it/s][A
2025-02-24T16:33:40.8893589Z 
2025-02-24T16:33:40.8893832Z Packets:   ███████████▍                                                                    71571/500000 [00:02<00:12, 35544.86it/s][A
2025-02-24T16:33:40.8893836Z 
2025-02-24T16:33:40.8894076Z Packets:   ████████████                                                                    75172/500000 [00:02<00:11, 35683.42it/s][A
2025-02-24T16:33:40.8894157Z 
2025-02-24T16:33:40.8894396Z Packets:   ████████████▌                                                                   78741/500000 [00:02<00:11, 35672.90it/s][A
2025-02-24T16:33:40.8894405Z 
2025-02-24T16:33:40.8894644Z Packets:   █████████████▏                                                                  82309/500000 [00:02<00:11, 35643.27it/s][A
2025-02-24T16:33:40.8894648Z 
2025-02-24T16:33:40.8894892Z Packets:   █████████████▋                                                                  85874/500000 [00:02<00:11, 35623.50it/s][A
2025-02-24T16:33:40.8894896Z 
2025-02-24T16:33:40.8895147Z Packets:   ██████████████▎                                                                 89441/500000 [00:02<00:11, 35633.81it/s][A
2025-02-24T16:33:40.8895156Z 
2025-02-24T16:33:40.8895396Z Packets:   ██████████████▉                                                                 93005/500000 [00:02<00:11, 34588.33it/s][A
2025-02-24T16:33:40.8895400Z 
2025-02-24T16:33:40.8895644Z Packets:   ███████████████▍                                                                96563/500000 [00:02<00:11, 34878.51it/s][A
2025-02-24T16:33:40.8895657Z 
2025-02-24T16:33:40.8895902Z Packets:   ████████████████                                                                100057/500000 [00:02<00:11, 34801.04it/s][A
2025-02-24T16:33:40.8895911Z 
2025-02-24T16:33:40.8896156Z Packets:   ████████████████▌                                                               103586/500000 [00:02<00:11, 34942.99it/s][A
2025-02-24T16:33:40.8896160Z 
2025-02-24T16:33:40.8896420Z Packets:   █████████████████▏                                                              107181/500000 [00:03<00:11, 35240.91it/s][A
2025-02-24T16:33:40.8896424Z 
2025-02-24T16:33:40.8896670Z Packets:   █████████████████▋                                                              110758/500000 [00:03<00:10, 35394.28it/s][A
2025-02-24T16:33:40.8896679Z 
2025-02-24T16:33:40.8896924Z Packets:   ██████████████████▎                                                             114300/500000 [00:03<00:10, 35393.66it/s][A
2025-02-24T16:33:40.8896937Z 
2025-02-24T16:33:40.8897188Z Packets:   ██████████████████▊                                                             117841/500000 [00:03<00:10, 35373.87it/s][A
2025-02-24T16:33:40.8897192Z 
2025-02-24T16:33:40.8897614Z Packets:   ███████████████████▍                                                            121385/500000 [00:03<00:10, 35391.97it/s][A
2025-02-24T16:33:40.8897619Z 
2025-02-24T16:33:40.8898026Z Packets:   ███████████████████▉                                                            124945/500000 [00:03<00:10, 35451.55it/s][A
2025-02-24T16:33:40.8898035Z 
2025-02-24T16:33:40.8898564Z Packets:   ████████████████████▌                                                           128491/500000 [00:03<00:10, 35100.18it/s][A
2025-02-24T16:33:40.8898579Z 
2025-02-24T16:33:40.8898885Z Packets:   █████████████████████                                                           132003/500000 [00:03<00:10, 35102.57it/s][A
2025-02-24T16:33:40.8898903Z 
2025-02-24T16:33:40.8899161Z Packets:   █████████████████████▋                                                          135550/500000 [00:03<00:10, 35207.85it/s][A
2025-02-24T16:33:40.8899165Z 
2025-02-24T16:33:40.8899421Z Packets:   ██████████████████████▎                                                         139103/500000 [00:03<00:10, 35300.11it/s][A
2025-02-24T16:33:40.8899425Z 
2025-02-24T16:33:40.8899676Z Packets:   ██████████████████████▊                                                         142636/500000 [00:04<00:10, 35308.08it/s][A
2025-02-24T16:33:40.8899680Z 
2025-02-24T16:33:40.8899982Z Packets:   ███████████████████████▍                                                        146177/500000 [00:04<00:10, 35338.15it/s][A
2025-02-24T16:33:40.8899986Z 
2025-02-24T16:33:40.8900246Z Packets:   ███████████████████████▉                                                        149712/500000 [00:04<00:09, 35235.81it/s][A
2025-02-24T16:33:40.8900385Z 
2025-02-24T16:33:40.8900645Z Packets:   ████████████████████████▌                                                       153236/500000 [00:04<00:09, 35228.66it/s][A
2025-02-24T16:33:40.8900649Z 
2025-02-24T16:33:40.8900908Z Packets:   █████████████████████████                                                       156760/500000 [00:04<00:09, 35174.89it/s][A
2025-02-24T16:33:40.8900912Z 
2025-02-24T16:33:40.8901171Z Packets:   █████████████████████████▋                                                      160278/500000 [00:04<00:09, 35153.63it/s][A
2025-02-24T16:33:40.8901175Z 
2025-02-24T16:33:40.8901441Z Packets:   ██████████████████████████▏                                                     163794/500000 [00:04<00:09, 33768.70it/s][A
2025-02-24T16:33:40.8901445Z 
2025-02-24T16:33:40.8901706Z Packets:   ██████████████████████████▊                                                     167268/500000 [00:04<00:09, 34046.77it/s][A
2025-02-24T16:33:40.8901710Z 
2025-02-24T16:33:40.8901972Z Packets:   ███████████████████████████▎                                                    170818/500000 [00:04<00:09, 34473.16it/s][A
2025-02-24T16:33:40.8901986Z 
2025-02-24T16:33:40.8902242Z Packets:   ███████████████████████████▉                                                    174311/500000 [00:04<00:09, 34607.32it/s][A
2025-02-24T16:33:40.8902246Z 
2025-02-24T16:33:40.8902507Z Packets:   ████████████████████████████▍                                                   177808/500000 [00:05<00:09, 34714.58it/s][A
2025-02-24T16:33:40.8902511Z 
2025-02-24T16:33:40.8902857Z Packets:   █████████████████████████████                                                   181284/500000 [00:05<00:09, 34706.26it/s][A
2025-02-24T16:33:40.8902861Z 
2025-02-24T16:33:40.8903124Z Packets:   █████████████████████████████▌                                                  184758/500000 [00:05<00:09, 34703.15it/s][A
2025-02-24T16:33:40.8903128Z 
2025-02-24T16:33:40.8903392Z Packets:   ██████████████████████████████                                                  188231/500000 [00:05<00:08, 34688.18it/s][A
2025-02-24T16:33:40.8903406Z 
2025-02-24T16:33:40.8903671Z Packets:   ██████████████████████████████▋                                                 191746/500000 [00:05<00:08, 34821.60it/s][A
2025-02-24T16:33:40.8903675Z 
2025-02-24T16:33:40.8903935Z Packets:   ███████████████████████████████▏                                                195230/500000 [00:05<00:08, 34710.94it/s][A
2025-02-24T16:33:40.8903938Z 
2025-02-24T16:33:40.8904216Z Packets:   ███████████████████████████████▊                                                198702/500000 [00:05<00:08, 33594.31it/s][A
2025-02-24T16:33:40.8904220Z 
2025-02-24T16:33:40.8904486Z Packets:   ████████████████████████████████▎                                               202135/500000 [00:05<00:08, 33807.80it/s][A
2025-02-24T16:33:40.8904490Z 
2025-02-24T16:33:40.8904751Z Packets:   ████████████████████████████████▉                                               205627/500000 [00:05<00:08, 34134.76it/s][A
2025-02-24T16:33:40.8904839Z 
2025-02-24T16:33:40.8905110Z Packets:   █████████████████████████████████▍                                              209101/500000 [00:05<00:08, 34313.25it/s][A
2025-02-24T16:33:40.8905114Z 
2025-02-24T16:33:40.8905381Z Packets:   ██████████████████████████████████                                              212575/500000 [00:06<00:08, 34438.77it/s][A
2025-02-24T16:33:40.8905385Z 
2025-02-24T16:33:40.8905647Z Packets:   ██████████████████████████████████▌                                             216066/500000 [00:06<00:08, 34579.21it/s][A
2025-02-24T16:33:40.8905651Z 
2025-02-24T16:33:40.8905931Z Packets:   ███████████████████████████████████▏                                            219566/500000 [00:06<00:08, 34703.51it/s][A
2025-02-24T16:33:40.8905935Z 
2025-02-24T16:33:40.8906204Z Packets:   ███████████████████████████████████▋                                            223038/500000 [00:06<00:07, 34630.77it/s][A
2025-02-24T16:33:40.8906219Z 
2025-02-24T16:33:40.8906485Z Packets:   ████████████████████████████████████▏                                           226504/500000 [00:06<00:07, 34638.92it/s][A
2025-02-24T16:33:40.8906489Z 
2025-02-24T16:33:40.8906761Z Packets:   ████████████████████████████████████▊                                           229969/500000 [00:06<00:07, 34458.97it/s][A
2025-02-24T16:33:40.8906765Z 
2025-02-24T16:33:40.8907036Z Packets:   █████████████████████████████████████▎                                          233416/500000 [00:06<00:07, 33502.55it/s][A
2025-02-24T16:33:40.8907040Z 
2025-02-24T16:33:40.8907751Z Packets:   █████████████████████████████████████▉                                          236898/500000 [00:06<00:07, 33887.75it/s][A
2025-02-24T16:33:40.8907759Z 
2025-02-24T16:33:40.8908079Z Packets:   ██████████████████████████████████████▍                                         240317/500000 [00:06<00:07, 33975.57it/s][A
2025-02-24T16:33:40.8908083Z 
2025-02-24T16:33:40.8908361Z Packets:   ███████████████████████████████████████                                         243793/500000 [00:06<00:07, 34206.65it/s][A
2025-02-24T16:33:40.8908377Z 
2025-02-24T16:33:40.8908648Z Packets:   ███████████████████████████████████████▌                                        247219/500000 [00:07<00:07, 34221.76it/s][A
2025-02-24T16:33:40.8908652Z 
2025-02-24T16:33:40.8908928Z Packets:   ████████████████████████████████████████                                        250709/500000 [00:07<00:07, 34422.91it/s][A
2025-02-24T16:33:40.8908932Z 
2025-02-24T16:33:40.8909219Z Packets:   ████████████████████████████████████████▋                                       254168/500000 [00:07<00:07, 34472.18it/s][A
2025-02-24T16:33:40.8909223Z 
2025-02-24T16:33:40.8909493Z Packets:   █████████████████████████████████████████▏                                      257626/500000 [00:07<00:07, 34503.04it/s][A
2025-02-24T16:33:40.8909497Z 
2025-02-24T16:33:40.8909773Z Packets:   █████████████████████████████████████████▊                                      261078/500000 [00:07<00:06, 34500.81it/s][A
2025-02-24T16:33:40.8909894Z 
2025-02-24T16:33:40.8910172Z Packets:   ██████████████████████████████████████████▎                                     264529/500000 [00:07<00:06, 34421.72it/s][A
2025-02-24T16:33:40.8910181Z 
2025-02-24T16:33:40.8910458Z Packets:   ██████████████████████████████████████████▉                                     267972/500000 [00:07<00:07, 32596.52it/s][A
2025-02-24T16:33:40.8910462Z 
2025-02-24T16:33:40.8910753Z Packets:   ███████████████████████████████████████████▍                                    271315/500000 [00:07<00:06, 32835.62it/s][A
2025-02-24T16:33:40.8910758Z 
2025-02-24T16:33:40.8911032Z Packets:   ███████████████████████████████████████████▉                                    274746/500000 [00:07<00:06, 33264.79it/s][A
2025-02-24T16:33:40.8911041Z 
2025-02-24T16:33:40.8911318Z Packets:   ████████████████████████████████████████████▌                                   278153/500000 [00:07<00:06, 33498.67it/s][A
2025-02-24T16:33:40.8911334Z 
2025-02-24T16:33:40.8911615Z Packets:   █████████████████████████████████████████████                                   281657/500000 [00:08<00:06, 33946.09it/s][A
2025-02-24T16:33:40.8911619Z 
2025-02-24T16:33:40.8911896Z Packets:   █████████████████████████████████████████████▌                                  285108/500000 [00:08<00:06, 34113.04it/s][A
2025-02-24T16:33:40.8911905Z 
2025-02-24T16:33:40.8912181Z Packets:   ██████████████████████████████████████████████▏                                 288566/500000 [00:08<00:06, 34250.95it/s][A
2025-02-24T16:33:40.8912185Z 
2025-02-24T16:33:40.8912557Z Packets:   ██████████████████████████████████████████████▋                                 292021/500000 [00:08<00:06, 34339.99it/s][A
2025-02-24T16:33:40.8912562Z 
2025-02-24T16:33:40.8912843Z Packets:   ███████████████████████████████████████████████▎                                295487/500000 [00:08<00:05, 34434.54it/s][A
2025-02-24T16:33:40.8912953Z 
2025-02-24T16:33:40.8913234Z Packets:   ███████████████████████████████████████████████▊                                299004/500000 [00:08<00:05, 34652.81it/s][A
2025-02-24T16:33:40.8913238Z 
2025-02-24T16:33:40.8913521Z Packets:   ████████████████████████████████████████████████▍                               302471/500000 [00:08<00:05, 34255.70it/s][A
2025-02-24T16:33:40.8913525Z 
2025-02-24T16:33:40.8913804Z Packets:   ████████████████████████████████████████████████▉                               305899/500000 [00:08<00:05, 33896.98it/s][A
2025-02-24T16:33:40.8913807Z 
2025-02-24T16:33:40.8914104Z Packets:   █████████████████████████████████████████████████▍                              309358/500000 [00:08<00:05, 34099.66it/s][A
2025-02-24T16:33:40.8914108Z 
2025-02-24T16:33:40.8914393Z Packets:   ██████████████████████████████████████████████████                              312827/500000 [00:08<00:05, 34274.87it/s][A
2025-02-24T16:33:40.8914397Z 
2025-02-24T16:33:40.8914678Z Packets:   ██████████████████████████████████████████████████▌                             316325/500000 [00:09<00:05, 34483.23it/s][A
2025-02-24T16:33:40.8914694Z 
2025-02-24T16:33:40.8914982Z Packets:   ███████████████████████████████████████████████████▏                            319843/500000 [00:09<00:05, 34689.68it/s][A
2025-02-24T16:33:40.8914987Z 
2025-02-24T16:33:40.8915275Z Packets:   ███████████████████████████████████████████████████▋                            323341/500000 [00:09<00:05, 34772.15it/s][A
2025-02-24T16:33:40.8915279Z 
2025-02-24T16:33:40.8915576Z Packets:   ████████████████████████████████████████████████████▎                           326819/500000 [00:09<00:04, 34768.26it/s][A
2025-02-24T16:33:40.8915580Z 
2025-02-24T16:33:40.8915869Z Packets:   ████████████████████████████████████████████████████▊                           330297/500000 [00:09<00:04, 34713.52it/s][A
2025-02-24T16:33:40.8915873Z 
2025-02-24T16:33:40.8916163Z Packets:   █████████████████████████████████████████████████████▍                          333811/500000 [00:09<00:04, 34839.54it/s][A
2025-02-24T16:33:40.8916180Z 
2025-02-24T16:33:40.8916466Z Packets:   █████████████████████████████████████████████████████▉                          337302/500000 [00:09<00:04, 34859.58it/s][A
2025-02-24T16:33:40.8916470Z 
2025-02-24T16:33:40.8916841Z Packets:   ██████████████████████████████████████████████████████▌                         340789/500000 [00:09<00:04, 33600.89it/s][A
2025-02-24T16:33:40.8916849Z 
2025-02-24T16:33:40.8917694Z Packets:   ███████████████████████████████████████████████████████                         344300/500000 [00:09<00:04, 34040.50it/s][A
2025-02-24T16:33:40.8917701Z 
2025-02-24T16:33:40.8918023Z Packets:   ███████████████████████████████████████████████████████▋                        347757/500000 [00:10<00:04, 34195.96it/s][A
2025-02-24T16:33:40.8918027Z 
2025-02-24T16:33:40.8918324Z Packets:   ████████████████████████████████████████████████████████▏                       351269/500000 [00:10<00:04, 34469.28it/s][A
2025-02-24T16:33:40.8918444Z 
2025-02-24T16:33:40.8918741Z Packets:   ████████████████████████████████████████████████████████▊                       354731/500000 [00:10<00:04, 34510.52it/s][A
2025-02-24T16:33:40.8918745Z 
2025-02-24T16:33:40.8919036Z Packets:   █████████████████████████████████████████████████████████▎                      358204/500000 [00:10<00:04, 34574.00it/s][A
2025-02-24T16:33:40.8919040Z 
2025-02-24T16:33:40.8919333Z Packets:   █████████████████████████████████████████████████████████▉                      361723/500000 [00:10<00:03, 34757.87it/s][A
2025-02-24T16:33:40.8919336Z 
2025-02-24T16:33:40.8919649Z Packets:   ██████████████████████████████████████████████████████████▍                     365201/500000 [00:10<00:03, 34705.54it/s][A
2025-02-24T16:33:40.8919652Z 
2025-02-24T16:33:40.8919942Z Packets:   ██████████████████████████████████████████████████████████▉                     368692/500000 [00:10<00:03, 34764.77it/s][A
2025-02-24T16:33:40.8919959Z 
2025-02-24T16:33:40.8920257Z Packets:   ███████████████████████████████████████████████████████████▌                    372223/500000 [00:10<00:03, 34921.39it/s][A
2025-02-24T16:33:40.8920261Z 
2025-02-24T16:33:40.8920559Z Packets:   ████████████████████████████████████████████████████████████                    375716/500000 [00:10<00:03, 33648.74it/s][A
2025-02-24T16:33:40.8920562Z 
2025-02-24T16:33:40.8920859Z Packets:   ████████████████████████████████████████████████████████████▋                   379174/500000 [00:10<00:03, 33919.70it/s][A
2025-02-24T16:33:40.8920863Z 
2025-02-24T16:33:40.8921248Z Packets:   █████████████████████████████████████████████████████████████▏                  382596/500000 [00:11<00:03, 34007.04it/s][A
2025-02-24T16:33:40.8921253Z 
2025-02-24T16:33:40.8921556Z Packets:   █████████████████████████████████████████████████████████████▊                  386039/500000 [00:11<00:03, 34131.96it/s][A
2025-02-24T16:33:40.8921560Z 
2025-02-24T16:33:40.8921853Z Packets:   ██████████████████████████████████████████████████████████████▎                 389541/500000 [00:11<00:03, 34394.00it/s][A
2025-02-24T16:33:40.8921871Z 
2025-02-24T16:33:40.8922174Z Packets:   ██████████████████████████████████████████████████████████████▉                 393052/500000 [00:11<00:03, 34603.90it/s][A
2025-02-24T16:33:40.8922178Z 
2025-02-24T16:33:40.8922477Z Packets:   ███████████████████████████████████████████████████████████████▍                396555/500000 [00:11<00:02, 34730.78it/s][A
2025-02-24T16:33:40.8922481Z 
2025-02-24T16:33:40.8922789Z Packets:   ████████████████████████████████████████████████████████████████                400039/500000 [00:11<00:02, 34760.65it/s][A
2025-02-24T16:33:40.8922792Z 
2025-02-24T16:33:40.8923093Z Packets:   ████████████████████████████████████████████████████████████████▌               403517/500000 [00:11<00:02, 34686.06it/s][A
2025-02-24T16:33:40.8923097Z 
2025-02-24T16:33:40.8923398Z Packets:   █████████████████████████████████████████████████████████████████▏              407039/500000 [00:11<00:02, 34844.81it/s][A
2025-02-24T16:33:40.8923489Z 
2025-02-24T16:33:40.8923789Z Packets:   █████████████████████████████████████████████████████████████████▋              410525/500000 [00:11<00:02, 33125.45it/s][A
2025-02-24T16:33:40.8923793Z 
2025-02-24T16:33:40.8924096Z Packets:   ██████████████████████████████████████████████████████████████████▏             413989/500000 [00:11<00:02, 33562.50it/s][A
2025-02-24T16:33:40.8924100Z 
2025-02-24T16:33:40.8924416Z Packets:   ██████████████████████████████████████████████████████████████████▊             417458/500000 [00:12<00:02, 33888.87it/s][A
2025-02-24T16:33:40.8924420Z 
2025-02-24T16:33:40.8924720Z Packets:   ███████████████████████████████████████████████████████████████████▎            420957/500000 [00:12<00:02, 34211.57it/s][A
2025-02-24T16:33:40.8924723Z 
2025-02-24T16:33:40.8925027Z Packets:   ███████████████████████████████████████████████████████████████████▉            424510/500000 [00:12<00:02, 34599.26it/s][A
2025-02-24T16:33:40.8925046Z 
2025-02-24T16:33:40.8925349Z Packets:   ████████████████████████████████████████████████████████████████████▍           427977/500000 [00:12<00:02, 34616.25it/s][A
2025-02-24T16:33:40.8925353Z 
2025-02-24T16:33:40.8925669Z Packets:   █████████████████████████████████████████████████████████████████████           431443/500000 [00:12<00:01, 34596.60it/s][A
2025-02-24T16:33:40.8925673Z 
2025-02-24T16:33:40.8925978Z Packets:   █████████████████████████████████████████████████████████████████████▌          434951/500000 [00:12<00:01, 34739.44it/s][A
2025-02-24T16:33:40.8925989Z 
2025-02-24T16:33:40.8926382Z Packets:   ██████████████████████████████████████████████████████████████████████▏         438428/500000 [00:12<00:01, 34679.06it/s][A
2025-02-24T16:33:40.8926387Z 
2025-02-24T16:33:40.8926699Z Packets:   ██████████████████████████████████████████████████████████████████████▋         441903/500000 [00:12<00:01, 34697.75it/s][A
2025-02-24T16:33:40.8926785Z 
2025-02-24T16:33:40.8927094Z Packets:   ███████████████████████████████████████████████████████████████████████▎        445374/500000 [00:12<00:01, 32927.70it/s][A
2025-02-24T16:33:40.8927104Z 
2025-02-24T16:33:40.8927552Z Packets:   ███████████████████████████████████████████████████████████████████████▊        448796/500000 [00:12<00:01, 33299.94it/s][A
2025-02-24T16:33:40.8927558Z 
2025-02-24T16:33:40.8927873Z Packets:   ████████████████████████████████████████████████████████████████████████▎       452284/500000 [00:13<00:01, 33757.37it/s][A
2025-02-24T16:33:40.8927877Z 
2025-02-24T16:33:40.8928198Z Packets:   ████████████████████████████████████████████████████████████████████████▉       455811/500000 [00:13<00:01, 34202.30it/s][A
2025-02-24T16:33:40.8928208Z 
2025-02-24T16:33:40.8928516Z Packets:   █████████████████████████████████████████████████████████████████████████▍      459279/500000 [00:13<00:01, 34343.05it/s][A
2025-02-24T16:33:40.8928520Z 
2025-02-24T16:33:40.8928833Z Packets:   ██████████████████████████████████████████████████████████████████████████      462724/500000 [00:13<00:01, 34373.82it/s][A
2025-02-24T16:33:40.8928853Z 
2025-02-24T16:33:40.8929160Z Packets:   ██████████████████████████████████████████████████████████████████████████▌     466213/500000 [00:13<00:00, 34526.88it/s][A
2025-02-24T16:33:40.8929164Z 
2025-02-24T16:33:40.8929478Z Packets:   ███████████████████████████████████████████████████████████████████████████▏    469744/500000 [00:13<00:00, 34756.22it/s][A
2025-02-24T16:33:40.8929482Z 
2025-02-24T16:33:40.8929923Z Packets:   ███████████████████████████████████████████████████████████████████████████▋    473223/500000 [00:13<00:00, 34522.58it/s][A
2025-02-24T16:33:40.8929928Z 
2025-02-24T16:33:40.8930244Z Packets:   ████████████████████████████████████████████████████████████████████████████▎   476678/500000 [00:13<00:00, 34491.79it/s][A
2025-02-24T16:33:40.8930248Z 
2025-02-24T16:33:40.8930563Z Packets:   ████████████████████████████████████████████████████████████████████████████▊   480129/500000 [00:13<00:00, 33330.43it/s][A
2025-02-24T16:33:40.8930697Z 
2025-02-24T16:33:40.8931016Z Packets:   █████████████████████████████████████████████████████████████████████████████▍  483625/500000 [00:13<00:00, 33792.77it/s][A
2025-02-24T16:33:40.8931020Z 
2025-02-24T16:33:40.8931330Z Packets:   █████████████████████████████████████████████████████████████████████████████▉  487039/500000 [00:14<00:00, 33893.60it/s][A
2025-02-24T16:33:40.8931334Z 
2025-02-24T16:33:40.8931667Z Packets:   ██████████████████████████████████████████████████████████████████████████████▍ 490528/500000 [00:14<00:00, 34185.68it/s][A
2025-02-24T16:33:40.8931670Z 
2025-02-24T16:33:40.8931986Z Packets:   ███████████████████████████████████████████████████████████████████████████████ 494008/500000 [00:14<00:00, 34366.35it/s][A
2025-02-24T16:33:40.8931989Z 
2025-02-24T16:33:40.8932302Z Packets:   ███████████████████████████████████████████████████████████████████████████████▌497467/500000 [00:14<00:00, 34432.00it/s][A
2025-02-24T16:33:40.8932474Z Iterations:                                                                                17/? [06:17<00:00,  9.31s/it]
2025-02-24T16:33:40.8932479Z 
2025-02-24T16:33:40.8932801Z Packets:   ████████████████████████████████████████████████████████████████████████████████500000/500000 [00:15<00:00, 34432.00it/s][A
2025-02-24T16:33:40.8932966Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.8933136Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-02-24T16:33:40.8933587Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-02-24T16:33:40.8933986Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-02-24T16:33:40.8934438Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-02-24T16:33:40.8934945Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:33:40.8935174Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T16:33:40.8935293Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:33:40.8935381Z 	Starting iteration 1 of 5
2025-02-24T16:33:40.8935492Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:33:40.8935591Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-02-24T16:33:40.8935688Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-02-24T16:33:40.8935777Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.8935781Z 
2025-02-24T16:33:40.8935890Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T16:33:40.8935983Z 	Plasma stratification:
2025-02-24T16:33:40.8936086Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T16:33:40.8936280Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-02-24T16:33:40.8936367Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-02-24T16:33:40.8936455Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-02-24T16:33:40.8936540Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-02-24T16:33:40.8936627Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-02-24T16:33:40.8936631Z 
2025-02-24T16:33:40.8936741Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T16:33:40.8936827Z 	Current t_inner = 9974.969 K
2025-02-24T16:33:40.8936948Z 	Expected t_inner for next iteration = 10736.790 K
2025-02-24T16:33:40.8936956Z 
2025-02-24T16:33:40.8937058Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:33:40.8937145Z 	Starting iteration 2 of 5
2025-02-24T16:33:40.8937379Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:33:40.8937474Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-02-24T16:33:40.8937568Z 	Luminosity absorbed  = 3.623e+42 erg / s
2025-02-24T16:33:40.8937661Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.8937666Z 
2025-02-24T16:33:40.8937773Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T16:33:40.8937859Z 	Plasma stratification:
2025-02-24T16:33:40.8937973Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T16:33:40.8938086Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:33:40.8938174Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-02-24T16:33:40.8938263Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-02-24T16:33:40.8938347Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-02-24T16:33:40.8938441Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-02-24T16:33:40.8938445Z 
2025-02-24T16:33:40.8938550Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T16:33:40.8938642Z 	Current t_inner = 10736.790 K
2025-02-24T16:33:40.8938763Z 	Expected t_inner for next iteration = 10718.574 K
2025-02-24T16:33:40.8938767Z 
2025-02-24T16:33:40.8938868Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:33:40.8938963Z 	Starting iteration 3 of 5
2025-02-24T16:33:40.8939065Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:33:40.8939162Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-02-24T16:33:40.8939257Z 	Luminosity absorbed  = 3.512e+42 erg / s
2025-02-24T16:33:40.8939346Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.8939349Z 
2025-02-24T16:33:40.8939577Z INFO     tardis.simulation.base:base.py:260 Iteration converged 1/4 consecutive times.
2025-02-24T16:33:40.8939686Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T16:33:40.8939779Z 	Plasma stratification:
2025-02-24T16:33:40.8940001Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T16:33:40.8940116Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:33:40.8940206Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-02-24T16:33:40.8940294Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-02-24T16:33:40.8940383Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-02-24T16:33:40.8940472Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0922
2025-02-24T16:33:40.8940476Z 
2025-02-24T16:33:40.8940585Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T16:33:40.8940679Z 	Current t_inner = 10718.574 K
2025-02-24T16:33:40.8940794Z 	Expected t_inner for next iteration = 10696.150 K
2025-02-24T16:33:40.8940798Z 
2025-02-24T16:33:40.8940907Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:33:40.8940992Z 	Starting iteration 4 of 5
2025-02-24T16:33:40.8941100Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:33:40.8941189Z 	Luminosity emitted   = 1.083e+43 erg / s
2025-02-24T16:33:40.8941290Z 	Luminosity absorbed  = 3.426e+42 erg / s
2025-02-24T16:33:40.8941387Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.8941390Z 
2025-02-24T16:33:40.8941602Z INFO     tardis.simulation.base:base.py:260 Iteration converged 2/4 consecutive times.
2025-02-24T16:33:40.8941713Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T16:33:40.8941797Z 	Plasma stratification:
2025-02-24T16:33:40.8942019Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T16:33:40.8942121Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:33:40.8942210Z 	0         1.07e+04 K  1.09e+04 K  0.491   0.489
2025-02-24T16:33:40.8942300Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-02-24T16:33:40.8942383Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-02-24T16:33:40.8942473Z 	15        1.04e+04 K  1.05e+04 K 0.0922  0.0902
2025-02-24T16:33:40.8942477Z 
2025-02-24T16:33:40.8942621Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T16:33:40.8942784Z 	Current t_inner = 10696.150 K
2025-02-24T16:33:40.8943000Z 	Expected t_inner for next iteration = 10681.168 K
2025-02-24T16:33:40.8943007Z 
2025-02-24T16:33:40.8943178Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T16:33:40.8943282Z 	Simulation finished in 4 iterations 
2025-02-24T16:33:40.8943366Z 	Simulation took 12.73 s
2025-02-24T16:33:40.8943371Z 
2025-02-24T16:33:40.8943481Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:33:40.8943575Z 	Starting iteration 5 of 5
2025-02-24T16:33:40.8943677Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:33:40.8943772Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-02-24T16:33:40.8943861Z 	Luminosity absorbed  = 3.438e+42 erg / s
2025-02-24T16:33:40.8943953Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.8944131Z ______________________ TestTransportSimple.test_spectrum _______________________
2025-02-24T16:33:40.8944136Z 
2025-02-24T16:33:40.8944354Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7ff51213a390>
2025-02-24T16:33:40.8944562Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4df75c440>
2025-02-24T16:33:40.8944566Z 
2025-02-24T16:33:40.8944662Z     def test_spectrum(self, simulation):
2025-02-24T16:33:40.8944840Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T16:33:40.8944945Z         expected = self.get_expected_data(key)
2025-02-24T16:33:40.8945022Z     
2025-02-24T16:33:40.8945138Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T16:33:40.8945207Z     
2025-02-24T16:33:40.8945299Z >       assert_quantity_allclose(
2025-02-24T16:33:40.8945475Z             simulation.spectrum_solver.spectrum_real_packets.luminosity,
2025-02-24T16:33:40.8945559Z             luminosity,
2025-02-24T16:33:40.8945631Z         )
2025-02-24T16:33:40.8945635Z 
2025-02-24T16:33:40.8945738Z tardis/tests/test_tardis_full.py:81: 
2025-02-24T16:33:40.8945865Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8946303Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:33:40.8946403Z     np.testing.assert_allclose(
2025-02-24T16:33:40.8946514Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8946518Z 
2025-02-24T16:33:40.8947004Z args = (<function assert_allclose.<locals>.compare at 0x7ff50bcf1760>, array([1.47119190e+39, 1.69564189e+39, 1.35368464e+39,...), array([1.41445923e+39, 1.75365002e+39, 1.41304405e+39, ...,
2025-02-24T16:33:40.8947120Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.8947479Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8947484Z 
2025-02-24T16:33:40.8947566Z     @wraps(func)
2025-02-24T16:33:40.8947651Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8947746Z         with self._recreate_cm():
2025-02-24T16:33:40.8947843Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8947933Z E           AssertionError: 
2025-02-24T16:33:40.8948052Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8948125Z E           
2025-02-24T16:33:40.8948230Z E           Mismatched elements: 4832 / 10000 (48.3%)
2025-02-24T16:33:40.8948331Z E           Max absolute difference: 1.38672909e+39
2025-02-24T16:33:40.8948438Z E           Max relative difference: 5.25284451
2025-02-24T16:33:40.8948720Z E            x: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.8948806Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8948955Z E            y: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.8949039Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8949043Z 
2025-02-24T16:33:40.8949255Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8949449Z __________________ TestTransportSimple.test_virtual_spectrum ___________________
2025-02-24T16:33:40.8949453Z 
2025-02-24T16:33:40.8949662Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7ff51213a5d0>
2025-02-24T16:33:40.8949867Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4df75c440>
2025-02-24T16:33:40.8949871Z 
2025-02-24T16:33:40.8949983Z     def test_virtual_spectrum(self, simulation):
2025-02-24T16:33:40.8950173Z         key = "simulation/spectrum_solver/spectrum_virtual_packets/luminosity"
2025-02-24T16:33:40.8950278Z         expected = self.get_expected_data(key)
2025-02-24T16:33:40.8950348Z     
2025-02-24T16:33:40.8950459Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T16:33:40.8950526Z     
2025-02-24T16:33:40.8950615Z >       assert_quantity_allclose(
2025-02-24T16:33:40.8950794Z             simulation.spectrum_solver.spectrum_virtual_packets.luminosity,
2025-02-24T16:33:40.8950876Z             luminosity,
2025-02-24T16:33:40.8950947Z         )
2025-02-24T16:33:40.8950957Z 
2025-02-24T16:33:40.8951055Z tardis/tests/test_tardis_full.py:92: 
2025-02-24T16:33:40.8951175Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8951513Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:33:40.8951621Z     np.testing.assert_allclose(
2025-02-24T16:33:40.8951734Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8951744Z 
2025-02-24T16:33:40.8952209Z args = (<function assert_allclose.<locals>.compare at 0x7ff50f832660>, array([1.44033177e+39, 1.35611403e+39, 1.39755698e+39,...), array([1.45484259e+39, 1.36306291e+39, 1.38939833e+39, ...,
2025-02-24T16:33:40.8952320Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.8952564Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8952568Z 
2025-02-24T16:33:40.8952650Z     @wraps(func)
2025-02-24T16:33:40.8952871Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8952960Z         with self._recreate_cm():
2025-02-24T16:33:40.8953055Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8953141Z E           AssertionError: 
2025-02-24T16:33:40.8953256Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8953328Z E           
2025-02-24T16:33:40.8953440Z E           Mismatched elements: 5933 / 10000 (59.3%)
2025-02-24T16:33:40.8953545Z E           Max absolute difference: 5.26760031e+38
2025-02-24T16:33:40.8953641Z E           Max relative difference: 35562.41947434
2025-02-24T16:33:40.8953797Z E            x: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.8953883Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8954035Z E            y: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.8954117Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8954121Z 
2025-02-24T16:33:40.8954328Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8954585Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-downbranch] ____
2025-02-24T16:33:40.8954589Z 
2025-02-24T16:33:40.8954918Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7ff51213afc0>
2025-02-24T16:33:40.8955199Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4ea308bc0>
2025-02-24T16:33:40.8955406Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-downbranch]>>
2025-02-24T16:33:40.8955415Z 
2025-02-24T16:33:40.8955549Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T16:33:40.8955662Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.8955744Z         j_blue_estimator = (
2025-02-24T16:33:40.8955967Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T16:33:40.8956036Z         )
2025-02-24T16:33:40.8956194Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T16:33:40.8956321Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T16:33:40.8956325Z 
2025-02-24T16:33:40.8956459Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T16:33:40.8956582Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8956590Z 
2025-02-24T16:33:40.8956859Z args = (<function assert_allclose.<locals>.compare at 0x7ff510dcd6c0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8956939Z        [0., 0., .....,
2025-02-24T16:33:40.8957024Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8957102Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8957187Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:33:40.8957562Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8957567Z 
2025-02-24T16:33:40.8957651Z     @wraps(func)
2025-02-24T16:33:40.8957736Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8957826Z         with self._recreate_cm():
2025-02-24T16:33:40.8957919Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8958004Z E           AssertionError: 
2025-02-24T16:33:40.8958121Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8958194Z E           
2025-02-24T16:33:40.8958313Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T16:33:40.8958417Z E           Max absolute difference: 7.03072887e-19
2025-02-24T16:33:40.8958523Z E           Max relative difference: 7.72237896
2025-02-24T16:33:40.8958622Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8958710Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8958805Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.8958894Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8959121Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8959214Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.8959218Z 
2025-02-24T16:33:40.8959429Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8959653Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-downbranch] ________
2025-02-24T16:33:40.8959657Z 
2025-02-24T16:33:40.8959985Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7ff51213b620>
2025-02-24T16:33:40.8960187Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4ea308bc0>
2025-02-24T16:33:40.8960370Z request = <FixtureRequest for <Function test_spectrum[-1-downbranch]>>
2025-02-24T16:33:40.8960374Z 
2025-02-24T16:33:40.8960482Z     def test_spectrum(self, simulation, request):
2025-02-24T16:33:40.8960590Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.8960787Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T16:33:40.8960958Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:33:40.8961064Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:33:40.8961211Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:33:40.8961217Z 
2025-02-24T16:33:40.8961462Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T16:33:40.8961818Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8962173Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:33:40.8962274Z     np.testing.assert_allclose(
2025-02-24T16:33:40.8962382Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8962387Z 
2025-02-24T16:33:40.8962862Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e9282d40>, array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39,...), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-02-24T16:33:40.8962968Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.8963215Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8963219Z 
2025-02-24T16:33:40.8963300Z     @wraps(func)
2025-02-24T16:33:40.8963385Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8963486Z         with self._recreate_cm():
2025-02-24T16:33:40.8963575Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8963668Z E           AssertionError: 
2025-02-24T16:33:40.8963776Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8963859Z E           
2025-02-24T16:33:40.8963965Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T16:33:40.8964070Z E           Max absolute difference: 2.09719426e+39
2025-02-24T16:33:40.8964175Z E           Max relative difference: 4.0036592
2025-02-24T16:33:40.8964333Z E            x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.8964429Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8964574Z E            y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.8964664Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8964668Z 
2025-02-24T16:33:40.8964880Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8965116Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-downbranch] ___
2025-02-24T16:33:40.8965120Z 
2025-02-24T16:33:40.8965451Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7ff511f70320>
2025-02-24T16:33:40.8965656Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4ea308bc0>
2025-02-24T16:33:40.8965863Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-downbranch]>>
2025-02-24T16:33:40.8965867Z 
2025-02-24T16:33:40.8966100Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T16:33:40.8966211Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.8966407Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T16:33:40.8966576Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:33:40.8966678Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:33:40.8966804Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:33:40.8966808Z 
2025-02-24T16:33:40.8966939Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T16:33:40.8967055Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8967514Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:33:40.8967613Z     np.testing.assert_allclose(
2025-02-24T16:33:40.8967729Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8967736Z 
2025-02-24T16:33:40.8968206Z args = (<function assert_allclose.<locals>.compare at 0x7ff509f2f240>, array([1.55114238e+39, 1.55522613e+39, 1.54887955e+39,...), array([1.54178275e+39, 1.54564497e+39, 1.54031038e+39, ...,
2025-02-24T16:33:40.8968317Z        2.27470694e+31, 2.29290738e+31, 2.25720643e+31]))
2025-02-24T16:33:40.8968560Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8968678Z 
2025-02-24T16:33:40.8968754Z     @wraps(func)
2025-02-24T16:33:40.8968844Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8968929Z         with self._recreate_cm():
2025-02-24T16:33:40.8969021Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8969105Z E           AssertionError: 
2025-02-24T16:33:40.8969213Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8969290Z E           
2025-02-24T16:33:40.8969389Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:33:40.8969496Z E           Max absolute difference: 5.00661745e+37
2025-02-24T16:33:40.8969594Z E           Max relative difference: 17.51202125
2025-02-24T16:33:40.8969748Z E            x: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-02-24T16:33:40.8969834Z E                  2.279436e+31, 2.243943e+31])
2025-02-24T16:33:40.8969984Z E            y: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-02-24T16:33:40.8970077Z E                  2.292907e+31, 2.257206e+31])
2025-02-24T16:33:40.8970080Z 
2025-02-24T16:33:40.8970279Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8970437Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T16:33:40.8970441Z 
2025-02-24T16:33:40.8970444Z 
2025-02-24T16:33:40.8970827Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:11<00:00, 108100.55it/s][A
2025-02-24T16:33:40.8971061Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-macroatom] ____
2025-02-24T16:33:40.8971065Z 
2025-02-24T16:33:40.8971389Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7ff51213b7d0>
2025-02-24T16:33:40.8971582Z simulation = <tardis.simulation.base.Simulation object at 0x7ff50257b200>
2025-02-24T16:33:40.8971791Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-macroatom]>>
2025-02-24T16:33:40.8971795Z 
2025-02-24T16:33:40.8971932Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T16:33:40.8972039Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.8972128Z         j_blue_estimator = (
2025-02-24T16:33:40.8972346Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T16:33:40.8972420Z         )
2025-02-24T16:33:40.8972564Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T16:33:40.8972806Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T16:33:40.8972811Z 
2025-02-24T16:33:40.8972951Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T16:33:40.8973061Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8973064Z 
2025-02-24T16:33:40.8973332Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e9ca0220>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8973409Z        [0., 0., .....,
2025-02-24T16:33:40.8973495Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8973578Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8973658Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:33:40.8973904Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8973908Z 
2025-02-24T16:33:40.8973982Z     @wraps(func)
2025-02-24T16:33:40.8974071Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8974163Z         with self._recreate_cm():
2025-02-24T16:33:40.8974254Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8974349Z E           AssertionError: 
2025-02-24T16:33:40.8974451Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8974528Z E           
2025-02-24T16:33:40.8974635Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T16:33:40.8974741Z E           Max absolute difference: 4.67863561e-19
2025-02-24T16:33:40.8974923Z E           Max relative difference: 3.25828651
2025-02-24T16:33:40.8975012Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8975103Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8975196Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.8975290Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8975377Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8975466Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.8975470Z 
2025-02-24T16:33:40.8975677Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8975891Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-macroatom] _________
2025-02-24T16:33:40.8975895Z 
2025-02-24T16:33:40.8976217Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7ff51213bf20>
2025-02-24T16:33:40.8976413Z simulation = <tardis.simulation.base.Simulation object at 0x7ff50257b200>
2025-02-24T16:33:40.8976588Z request = <FixtureRequest for <Function test_spectrum[-1-macroatom]>>
2025-02-24T16:33:40.8976592Z 
2025-02-24T16:33:40.8976705Z     def test_spectrum(self, simulation, request):
2025-02-24T16:33:40.8976810Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.8977007Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T16:33:40.8977163Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:33:40.8977412Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:33:40.8977540Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:33:40.8977544Z 
2025-02-24T16:33:40.8977672Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T16:33:40.8977784Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8978116Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:33:40.8978215Z     np.testing.assert_allclose(
2025-02-24T16:33:40.8978327Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8978330Z 
2025-02-24T16:33:40.8978794Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e6235bc0>, array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39,...), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-02-24T16:33:40.8978904Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.8979276Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8979286Z 
2025-02-24T16:33:40.8979363Z     @wraps(func)
2025-02-24T16:33:40.8979450Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8979534Z         with self._recreate_cm():
2025-02-24T16:33:40.8979627Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8979714Z E           AssertionError: 
2025-02-24T16:33:40.8979879Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8980012Z E           
2025-02-24T16:33:40.8980192Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T16:33:40.8980369Z E           Max absolute difference: 8.5486318e+38
2025-02-24T16:33:40.8980468Z E           Max relative difference: 1.86186015
2025-02-24T16:33:40.8980625Z E            x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.8980710Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8980867Z E            y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.8980955Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8980959Z 
2025-02-24T16:33:40.8981157Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8981390Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-macroatom] ___
2025-02-24T16:33:40.8981518Z 
2025-02-24T16:33:40.8981839Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7ff511f704d0>
2025-02-24T16:33:40.8982038Z simulation = <tardis.simulation.base.Simulation object at 0x7ff50257b200>
2025-02-24T16:33:40.8982243Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-macroatom]>>
2025-02-24T16:33:40.8982247Z 
2025-02-24T16:33:40.8982386Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T16:33:40.8982498Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.8982833Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T16:33:40.8983115Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:33:40.8983296Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:33:40.8983493Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:33:40.8983500Z 
2025-02-24T16:33:40.8983739Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T16:33:40.8983861Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8984204Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:33:40.8984303Z     np.testing.assert_allclose(
2025-02-24T16:33:40.8984413Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8984417Z 
2025-02-24T16:33:40.8984888Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e62353a0>, array([1.54556181e+39, 1.55660766e+39, 1.54591210e+39,...), array([1.54634964e+39, 1.55739996e+39, 1.54657082e+39, ...,
2025-02-24T16:33:40.8984993Z        1.40040337e+31, 1.37514142e+31, 1.33792800e+31]))
2025-02-24T16:33:40.8985243Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8985247Z 
2025-02-24T16:33:40.8985330Z     @wraps(func)
2025-02-24T16:33:40.8985417Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8985511Z         with self._recreate_cm():
2025-02-24T16:33:40.8985602Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8985690Z E           AssertionError: 
2025-02-24T16:33:40.8985798Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8985874Z E           
2025-02-24T16:33:40.8985979Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:33:40.8986081Z E           Max absolute difference: 2.90101642e+37
2025-02-24T16:33:40.8986184Z E           Max relative difference: 0.98973757
2025-02-24T16:33:40.8986434Z E            x: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-02-24T16:33:40.8986528Z E                  1.330497e+31, 1.294462e+31])
2025-02-24T16:33:40.8986685Z E            y: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-02-24T16:33:40.8986774Z E                  1.375141e+31, 1.337928e+31])
2025-02-24T16:33:40.8986782Z 
2025-02-24T16:33:40.8986990Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8987223Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-macroatom] ____
2025-02-24T16:33:40.8987227Z 
2025-02-24T16:33:40.8987685Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7ff51213baa0>
2025-02-24T16:33:40.8987886Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4e21494f0>
2025-02-24T16:33:40.8988082Z request = <FixtureRequest for <Function test_j_blue_estimators[30-macroatom]>>
2025-02-24T16:33:40.8988090Z 
2025-02-24T16:33:40.8988224Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T16:33:40.8988331Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.8988425Z         j_blue_estimator = (
2025-02-24T16:33:40.8988643Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T16:33:40.8988843Z         )
2025-02-24T16:33:40.8988992Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T16:33:40.8989114Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T16:33:40.8989118Z 
2025-02-24T16:33:40.8989254Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T16:33:40.8989368Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8989371Z 
2025-02-24T16:33:40.8989643Z args = (<function assert_allclose.<locals>.compare at 0x7ff4cece1940>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8989721Z        [0., 0., .....,
2025-02-24T16:33:40.8989805Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8989885Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8989963Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:33:40.8990207Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8990211Z 
2025-02-24T16:33:40.8990293Z     @wraps(func)
2025-02-24T16:33:40.8990376Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8990466Z         with self._recreate_cm():
2025-02-24T16:33:40.8990553Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8990641Z E           AssertionError: 
2025-02-24T16:33:40.8990748Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8990825Z E           
2025-02-24T16:33:40.8990938Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T16:33:40.8991039Z E           Max absolute difference: 4.67863561e-19
2025-02-24T16:33:40.8991144Z E           Max relative difference: 3.25828651
2025-02-24T16:33:40.8991235Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8991325Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8991417Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.8991510Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8991598Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8991686Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.8991690Z 
2025-02-24T16:33:40.8991899Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8992117Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-macroatom] _________
2025-02-24T16:33:40.8992121Z 
2025-02-24T16:33:40.8992445Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7ff511f700e0>
2025-02-24T16:33:40.8992643Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4e21494f0>
2025-02-24T16:33:40.8992929Z request = <FixtureRequest for <Function test_spectrum[30-macroatom]>>
2025-02-24T16:33:40.8992934Z 
2025-02-24T16:33:40.8993050Z     def test_spectrum(self, simulation, request):
2025-02-24T16:33:40.8993153Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.8993354Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T16:33:40.8993517Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:33:40.8993616Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:33:40.8993741Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:33:40.8993745Z 
2025-02-24T16:33:40.8993874Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T16:33:40.8993987Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8994329Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:33:40.8994420Z     np.testing.assert_allclose(
2025-02-24T16:33:40.8994532Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8994535Z 
2025-02-24T16:33:40.8995004Z args = (<function assert_allclose.<locals>.compare at 0x7ff4cece2ca0>, array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39,...), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-02-24T16:33:40.8995191Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.8995437Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8995442Z 
2025-02-24T16:33:40.8995516Z     @wraps(func)
2025-02-24T16:33:40.8995603Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8995687Z         with self._recreate_cm():
2025-02-24T16:33:40.8995780Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8995868Z E           AssertionError: 
2025-02-24T16:33:40.8995974Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8996049Z E           
2025-02-24T16:33:40.8996145Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T16:33:40.8996251Z E           Max absolute difference: 8.5486318e+38
2025-02-24T16:33:40.8996346Z E           Max relative difference: 1.86186015
2025-02-24T16:33:40.8996502Z E            x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.8996593Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8996736Z E            y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.8996824Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8996828Z 
2025-02-24T16:33:40.8997026Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8997388Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-macroatom] ___
2025-02-24T16:33:40.8997392Z 
2025-02-24T16:33:40.8997725Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7ff511f706e0>
2025-02-24T16:33:40.8997920Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4e21494f0>
2025-02-24T16:33:40.8998125Z request = <FixtureRequest for <Function test_spectrum_integrated[30-macroatom]>>
2025-02-24T16:33:40.8998129Z 
2025-02-24T16:33:40.8998268Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T16:33:40.8998380Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.8998574Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T16:33:40.8998729Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:33:40.8998835Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:33:40.8998951Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:33:40.8998955Z 
2025-02-24T16:33:40.8999089Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T16:33:40.8999318Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8999658Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:33:40.8999783Z     np.testing.assert_allclose(
2025-02-24T16:33:40.8999893Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8999901Z 
2025-02-24T16:33:40.9000368Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e6246c00>, array([1.54421084e+39, 1.55253343e+39, 1.54295780e+39,...), array([1.54506418e+39, 1.55336544e+39, 1.54364274e+39, ...,
2025-02-24T16:33:40.9000477Z        1.22296100e+31, 1.19300497e+31, 1.16485419e+31]))
2025-02-24T16:33:40.9000715Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9000719Z 
2025-02-24T16:33:40.9000798Z     @wraps(func)
2025-02-24T16:33:40.9000881Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9000975Z         with self._recreate_cm():
2025-02-24T16:33:40.9001064Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9001153Z E           AssertionError: 
2025-02-24T16:33:40.9001264Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9001334Z E           
2025-02-24T16:33:40.9001437Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:33:40.9001676Z E           Max absolute difference: 2.99183385e+37
2025-02-24T16:33:40.9001776Z E           Max relative difference: 0.98992197
2025-02-24T16:33:40.9001932Z E            x: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-02-24T16:33:40.9002016Z E                  1.260980e+31, 1.222587e+31])
2025-02-24T16:33:40.9002162Z E            y: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-02-24T16:33:40.9002245Z E                  1.193005e+31, 1.164854e+31])
2025-02-24T16:33:40.9002248Z 
2025-02-24T16:33:40.9002455Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9002684Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-downbranch] ____
2025-02-24T16:33:40.9002692Z 
2025-02-24T16:33:40.9003009Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7ff51213b9b0>
2025-02-24T16:33:40.9003204Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4e82c27e0>
2025-02-24T16:33:40.9003404Z request = <FixtureRequest for <Function test_j_blue_estimators[30-downbranch]>>
2025-02-24T16:33:40.9003408Z 
2025-02-24T16:33:40.9003542Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T16:33:40.9003655Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9003738Z         j_blue_estimator = (
2025-02-24T16:33:40.9003960Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T16:33:40.9004030Z         )
2025-02-24T16:33:40.9004184Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T16:33:40.9004307Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T16:33:40.9004310Z 
2025-02-24T16:33:40.9004447Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T16:33:40.9004561Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9004565Z 
2025-02-24T16:33:40.9004832Z args = (<function assert_allclose.<locals>.compare at 0x7ff4fc302e80>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9004911Z        [0., 0., .....,
2025-02-24T16:33:40.9004990Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9005072Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9005155Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:33:40.9005388Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9005392Z 
2025-02-24T16:33:40.9005469Z     @wraps(func)
2025-02-24T16:33:40.9005553Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9005813Z         with self._recreate_cm():
2025-02-24T16:33:40.9005985Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9006142Z E           AssertionError: 
2025-02-24T16:33:40.9006295Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9006368Z E           
2025-02-24T16:33:40.9006485Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T16:33:40.9006594Z E           Max absolute difference: 7.03072887e-19
2025-02-24T16:33:40.9006695Z E           Max relative difference: 7.72237896
2025-02-24T16:33:40.9006789Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9006880Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9006972Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.9007062Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9007149Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9007237Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.9007344Z 
2025-02-24T16:33:40.9007559Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9007781Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-downbranch] ________
2025-02-24T16:33:40.9007784Z 
2025-02-24T16:33:40.9008106Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7ff511f71a60>
2025-02-24T16:33:40.9008441Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4e82c27e0>
2025-02-24T16:33:40.9008617Z request = <FixtureRequest for <Function test_spectrum[30-downbranch]>>
2025-02-24T16:33:40.9008621Z 
2025-02-24T16:33:40.9008736Z     def test_spectrum(self, simulation, request):
2025-02-24T16:33:40.9008843Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9009037Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T16:33:40.9009202Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:33:40.9009304Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:33:40.9009429Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:33:40.9009433Z 
2025-02-24T16:33:40.9009566Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T16:33:40.9009678Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9010020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:33:40.9010111Z     np.testing.assert_allclose(
2025-02-24T16:33:40.9010224Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9010227Z 
2025-02-24T16:33:40.9010696Z args = (<function assert_allclose.<locals>.compare at 0x7ff502585300>, array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39,...), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-02-24T16:33:40.9010803Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9011049Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9011053Z 
2025-02-24T16:33:40.9011126Z     @wraps(func)
2025-02-24T16:33:40.9011214Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9011304Z         with self._recreate_cm():
2025-02-24T16:33:40.9011395Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9011485Z E           AssertionError: 
2025-02-24T16:33:40.9011597Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9011672Z E           
2025-02-24T16:33:40.9011770Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T16:33:40.9011876Z E           Max absolute difference: 2.09719426e+39
2025-02-24T16:33:40.9011978Z E           Max relative difference: 4.0036592
2025-02-24T16:33:40.9012129Z E            x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.9012332Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9012480Z E            y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.9012569Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9012572Z 
2025-02-24T16:33:40.9012777Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9013011Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-downbranch] ___
2025-02-24T16:33:40.9013015Z 
2025-02-24T16:33:40.9013339Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7ff511f70620>
2025-02-24T16:33:40.9013531Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4e82c27e0>
2025-02-24T16:33:40.9013739Z request = <FixtureRequest for <Function test_spectrum_integrated[30-downbranch]>>
2025-02-24T16:33:40.9013744Z 
2025-02-24T16:33:40.9013888Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T16:33:40.9013998Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9014194Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T16:33:40.9014351Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:33:40.9014458Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:33:40.9014575Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:33:40.9014661Z 
2025-02-24T16:33:40.9014793Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T16:33:40.9014907Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9015236Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:33:40.9015330Z     np.testing.assert_allclose(
2025-02-24T16:33:40.9015439Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9015447Z 
2025-02-24T16:33:40.9015913Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e6359260>, array([1.54917411e+39, 1.55043938e+39, 1.54507053e+39,...), array([1.54059874e+39, 1.54119479e+39, 1.53707604e+39, ...,
2025-02-24T16:33:40.9016023Z        2.12049684e+31, 2.12430514e+31, 2.10108056e+31]))
2025-02-24T16:33:40.9016259Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9016266Z 
2025-02-24T16:33:40.9016345Z     @wraps(func)
2025-02-24T16:33:40.9016433Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9016518Z         with self._recreate_cm():
2025-02-24T16:33:40.9016611Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9016695Z E           AssertionError: 
2025-02-24T16:33:40.9016803Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9016873Z E           
2025-02-24T16:33:40.9016977Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:33:40.9017082Z E           Max absolute difference: 5.0153284e+37
2025-02-24T16:33:40.9017181Z E           Max relative difference: 4.90769503
2025-02-24T16:33:40.9017464Z E            x: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-02-24T16:33:40.9017550Z E                  2.088676e+31, 2.060278e+31])
2025-02-24T16:33:40.9017697Z E            y: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-02-24T16:33:40.9017784Z E                  2.124305e+31, 2.101081e+31])
2025-02-24T16:33:40.9017787Z 
2025-02-24T16:33:40.9017992Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9018144Z __________________________ test_montecarlo_main_loop ___________________________
2025-02-24T16:33:40.9018148Z 
2025-02-24T16:33:40.9018837Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T16:33:40.9019230Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff4e8d38620>
2025-02-24T16:33:40.9019591Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T16:33:40.9019595Z 
2025-02-24T16:33:40.9019688Z     def test_montecarlo_main_loop(
2025-02-24T16:33:40.9019787Z         montecarlo_main_loop_config,
2025-02-24T16:33:40.9019867Z         regression_data,
2025-02-24T16:33:40.9019948Z         atomic_dataset,
2025-02-24T16:33:40.9020018Z     ):
2025-02-24T16:33:40.9020127Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T16:33:40.9020283Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-02-24T16:33:40.9020375Z             montecarlo_main_loop_config,
2025-02-24T16:33:40.9020465Z             atom_data=atomic_dataset,
2025-02-24T16:33:40.9020557Z             virtual_packet_logging=False,
2025-02-24T16:33:40.9020652Z             legacy_mode_enabled=True,
2025-02-24T16:33:40.9020720Z         )
2025-02-24T16:33:40.9020853Z         montecarlo_main_loop_simulation.run_convergence()
2025-02-24T16:33:40.9020966Z         montecarlo_main_loop_simulation.run_final()
2025-02-24T16:33:40.9021033Z     
2025-02-24T16:33:40.9021168Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-02-24T16:33:40.9021262Z             montecarlo_main_loop_simulation
2025-02-24T16:33:40.9021478Z         )
2025-02-24T16:33:40.9021546Z     
2025-02-24T16:33:40.9021640Z         # Load compare data from refdata
2025-02-24T16:33:40.9021711Z     
2025-02-24T16:33:40.9021802Z         expected_nu = expected_hdf_store[
2025-02-24T16:33:40.9021940Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T16:33:40.9022008Z         ]
2025-02-24T16:33:40.9022112Z         expected_energy = expected_hdf_store[
2025-02-24T16:33:40.9022246Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T16:33:40.9022319Z         ]
2025-02-24T16:33:40.9022446Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T16:33:40.9022590Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T16:33:40.9022666Z         ]
2025-02-24T16:33:40.9022772Z         expected_j_estimator = expected_hdf_store[
2025-02-24T16:33:40.9022911Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T16:33:40.9022984Z         ]
2025-02-24T16:33:40.9023077Z         expected_hdf_store.close()
2025-02-24T16:33:40.9023284Z         transport_state = montecarlo_main_loop_simulation.transport.transport_state
2025-02-24T16:33:40.9023454Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T16:33:40.9023605Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T16:33:40.9023693Z         actual_nu_bar_estimator = (
2025-02-24T16:33:40.9023845Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-02-24T16:33:40.9023919Z         )
2025-02-24T16:33:40.9024103Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-02-24T16:33:40.9024175Z     
2025-02-24T16:33:40.9024247Z         # Compare
2025-02-24T16:33:40.9024337Z >       npt.assert_allclose(
2025-02-24T16:33:40.9024566Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-13
2025-02-24T16:33:40.9024700Z         )
2025-02-24T16:33:40.9024713Z 
2025-02-24T16:33:40.9025042Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:57: 
2025-02-24T16:33:40.9025159Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9025163Z 
2025-02-24T16:33:40.9025613Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e9cfcea0>, array([9.40870445e+28, 8.06711783e+28, 7.20241369e+28,....88346865e+28, 3.76096031e+28, 3.64350318e+28,
2025-02-24T16:33:40.9025751Z        3.53452939e+28, 3.45323083e+28, 3.34513540e+28, 3.26811629e+28]))
2025-02-24T16:33:40.9026087Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-13, atol=0', 'verbose': True}
2025-02-24T16:33:40.9026092Z 
2025-02-24T16:33:40.9026173Z     @wraps(func)
2025-02-24T16:33:40.9026257Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9026347Z         with self._recreate_cm():
2025-02-24T16:33:40.9026435Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9026524Z E           AssertionError: 
2025-02-24T16:33:40.9026635Z E           Not equal to tolerance rtol=1e-13, atol=0
2025-02-24T16:33:40.9026713Z E           
2025-02-24T16:33:40.9026814Z E           Mismatched elements: 20 / 20 (100%)
2025-02-24T16:33:40.9026914Z E           Max absolute difference: 2.25821059e+25
2025-02-24T16:33:40.9027012Z E           Max relative difference: 0.00054426
2025-02-24T16:33:40.9027153Z E            x: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-02-24T16:33:40.9027395Z E                  6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-02-24T16:33:40.9027527Z E                  4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-02-24T16:33:40.9027659Z E            y: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-02-24T16:33:40.9027777Z E                  6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-02-24T16:33:40.9027895Z E                  4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-02-24T16:33:40.9027899Z 
2025-02-24T16:33:40.9028248Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9028406Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T16:33:40.9028707Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:33:40.9029168Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:33:40.9029352Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9029572Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T16:33:40.9029738Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9029818Z 	
2025-02-24T16:33:40.9029919Z 	Simulation finished in 0 iterations 
2025-02-24T16:33:40.9030000Z 	Simulation took 0.00 s
2025-02-24T16:33:40.9030111Z  ([1mbase.py[0m:542)
2025-02-24T16:33:40.9030274Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9030350Z 	
2025-02-24T16:33:40.9030502Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T16:33:40.9030663Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9030735Z 	
2025-02-24T16:33:40.9030828Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T16:33:40.9030923Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T16:33:40.9031012Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.9031119Z  ([1mbase.py[0m:657)
2025-02-24T16:33:40.9031276Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T16:33:40.9031284Z 
2025-02-24T16:33:40.9031290Z 
2025-02-24T16:33:40.9031524Z Packets:                                                                                   11129/? [00:10<00:00, 1068.62it/s][A
2025-02-24T16:33:40.9031529Z 
2025-02-24T16:33:40.9031755Z Packets:                                                                                   21785/? [00:10<00:00, 2496.09it/s][A
2025-02-24T16:33:40.9031763Z 
2025-02-24T16:33:40.9031979Z Packets:                                                                                   32786/? [00:10<00:00, 4535.01it/s][A
2025-02-24T16:33:40.9031987Z 
2025-02-24T16:33:40.9032201Z Packets:                                                                                   43645/? [00:10<00:00, 7278.90it/s][A
2025-02-24T16:33:40.9032206Z 
2025-02-24T16:33:40.9032432Z Packets:                                                                                   54484/? [00:10<00:00, 10945.18it/s][A
2025-02-24T16:33:40.9032436Z 
2025-02-24T16:33:40.9032771Z Packets:                                                                                   65440/? [00:10<00:00, 15806.05it/s][A
2025-02-24T16:33:40.9032781Z 
2025-02-24T16:33:40.9033002Z Packets:                                                                                   76348/? [00:11<00:00, 21941.94it/s][A
2025-02-24T16:33:40.9033006Z 
2025-02-24T16:33:40.9033228Z Packets:                                                                                   87330/? [00:11<00:00, 29490.62it/s][A
2025-02-24T16:33:40.9033235Z 
2025-02-24T16:33:40.9033449Z Packets:                                                                                   98235/? [00:11<00:00, 38164.52it/s][A
2025-02-24T16:33:40.9033602Z Iterations:                                                                                40/? [07:56<00:00,  5.59s/it]
2025-02-24T16:33:40.9033606Z 
2025-02-24T16:33:40.9033834Z Packets:                                                                                   104009/? [00:11<00:00, 38164.52it/s][A
2025-02-24T16:33:40.9033989Z ------------------------------ Captured log call -------------------------------
2025-02-24T16:33:40.9034498Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:33:40.9034727Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T16:33:40.9034914Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T16:33:40.9035015Z 	Simulation finished in 0 iterations 
2025-02-24T16:33:40.9035095Z 	Simulation took 0.00 s
2025-02-24T16:33:40.9035099Z 
2025-02-24T16:33:40.9035207Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:33:40.9035293Z 	Starting iteration 1 of 1
2025-02-24T16:33:40.9035401Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:33:40.9035496Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T16:33:40.9035585Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T16:33:40.9035684Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.9035846Z ____________________ test_montecarlo_main_loop_vpacket_log _____________________
2025-02-24T16:33:40.9035850Z 
2025-02-24T16:33:40.9036530Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T16:33:40.9036818Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff50bd1f380>
2025-02-24T16:33:40.9037166Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T16:33:40.9037170Z 
2025-02-24T16:33:40.9037408Z     def test_montecarlo_main_loop_vpacket_log(
2025-02-24T16:33:40.9037501Z         montecarlo_main_loop_config,
2025-02-24T16:33:40.9037586Z         regression_data,
2025-02-24T16:33:40.9037672Z         atomic_dataset,
2025-02-24T16:33:40.9037742Z     ):
2025-02-24T16:33:40.9037855Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T16:33:40.9038027Z         montecarlo_main_loop_config.montecarlo.no_of_virtual_packets = 5
2025-02-24T16:33:40.9038099Z     
2025-02-24T16:33:40.9038245Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-02-24T16:33:40.9038345Z             montecarlo_main_loop_config,
2025-02-24T16:33:40.9038437Z             atom_data=atomic_dataset,
2025-02-24T16:33:40.9038529Z             virtual_packet_logging=True,
2025-02-24T16:33:40.9038621Z             legacy_mode_enabled=True,
2025-02-24T16:33:40.9038690Z         )
2025-02-24T16:33:40.9038821Z         montecarlo_main_loop_simulation.run_convergence()
2025-02-24T16:33:40.9038932Z         montecarlo_main_loop_simulation.run_final()
2025-02-24T16:33:40.9039003Z     
2025-02-24T16:33:40.9039143Z         transport = montecarlo_main_loop_simulation.transport
2025-02-24T16:33:40.9039209Z     
2025-02-24T16:33:40.9039530Z         assert transport.montecarlo_configuration.ENABLE_VPACKET_TRACKING is True
2025-02-24T16:33:40.9039600Z     
2025-02-24T16:33:40.9039737Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-02-24T16:33:40.9039832Z             montecarlo_main_loop_simulation
2025-02-24T16:33:40.9039905Z         )
2025-02-24T16:33:40.9039975Z     
2025-02-24T16:33:40.9040069Z         expected_nu = expected_hdf_store[
2025-02-24T16:33:40.9040199Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T16:33:40.9040267Z         ]
2025-02-24T16:33:40.9040369Z         expected_energy = expected_hdf_store[
2025-02-24T16:33:40.9040501Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T16:33:40.9040574Z         ]
2025-02-24T16:33:40.9040696Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T16:33:40.9040839Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T16:33:40.9040912Z         ]
2025-02-24T16:33:40.9041021Z         expected_j_estimator = expected_hdf_store[
2025-02-24T16:33:40.9041153Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T16:33:40.9041222Z         ]
2025-02-24T16:33:40.9041343Z         expected_vpacket_log_nus = expected_hdf_store[
2025-02-24T16:33:40.9041488Z             "/simulation/transport/transport_state/virt_packet_nus"
2025-02-24T16:33:40.9041666Z         ]
2025-02-24T16:33:40.9041795Z         expected_vpacket_log_energies = expected_hdf_store[
2025-02-24T16:33:40.9041949Z             "/simulation/transport/transport_state/virt_packet_energies"
2025-02-24T16:33:40.9042023Z         ]
2025-02-24T16:33:40.9042089Z     
2025-02-24T16:33:40.9042203Z         transport_state = transport.transport_state
2025-02-24T16:33:40.9042275Z     
2025-02-24T16:33:40.9042444Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T16:33:40.9042590Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T16:33:40.9042734Z         actual_nu_bar_estimator = transport_state.nu_bar_estimator
2025-02-24T16:33:40.9042862Z         actual_j_estimator = transport_state.j_estimator
2025-02-24T16:33:40.9043012Z         actual_vpacket_log_nus = transport_state.vpacket_tracker.nus
2025-02-24T16:33:40.9043193Z         actual_vpacket_log_energies = transport_state.vpacket_tracker.energies
2025-02-24T16:33:40.9043265Z     
2025-02-24T16:33:40.9043359Z         expected_hdf_store.close()
2025-02-24T16:33:40.9043440Z         # Compare
2025-02-24T16:33:40.9043524Z >       npt.assert_allclose(
2025-02-24T16:33:40.9043615Z             actual_nu_bar_estimator,
2025-02-24T16:33:40.9043706Z             expected_nu_bar_estimator,
2025-02-24T16:33:40.9043788Z             rtol=1e-12,
2025-02-24T16:33:40.9043868Z             atol=1e-15,
2025-02-24T16:33:40.9043937Z         )
2025-02-24T16:33:40.9043941Z 
2025-02-24T16:33:40.9044133Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:120: 
2025-02-24T16:33:40.9044251Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9044255Z 
2025-02-24T16:33:40.9044696Z args = (<function assert_allclose.<locals>.compare at 0x7ff509f2b6a0>, array([9.39734166e+28, 8.06437183e+28, 7.18947883e+28,....86533431e+28, 3.76643623e+28, 3.65210990e+28,
2025-02-24T16:33:40.9044843Z        3.55628656e+28, 3.45781813e+28, 3.35045159e+28, 3.25557336e+28]))
2025-02-24T16:33:40.9045104Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-12, atol=1e-15', 'verbose': True}
2025-02-24T16:33:40.9045108Z 
2025-02-24T16:33:40.9045187Z     @wraps(func)
2025-02-24T16:33:40.9045272Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9045362Z         with self._recreate_cm():
2025-02-24T16:33:40.9045455Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9045537Z E           AssertionError: 
2025-02-24T16:33:40.9045658Z E           Not equal to tolerance rtol=1e-12, atol=1e-15
2025-02-24T16:33:40.9045729Z E           
2025-02-24T16:33:40.9045917Z E           Mismatched elements: 20 / 20 (100%)
2025-02-24T16:33:40.9046020Z E           Max absolute difference: 1.93283629e+25
2025-02-24T16:33:40.9046120Z E           Max relative difference: 0.00029148
2025-02-24T16:33:40.9046265Z E            x: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-02-24T16:33:40.9046385Z E                  6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-02-24T16:33:40.9046515Z E                  4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-02-24T16:33:40.9046647Z E            y: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-02-24T16:33:40.9046767Z E                  6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-02-24T16:33:40.9046891Z E                  4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-02-24T16:33:40.9046895Z 
2025-02-24T16:33:40.9047098Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9047361Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T16:33:40.9047761Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:33:40.9048357Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:33:40.9048546Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9048893Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T16:33:40.9049064Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9049134Z 	
2025-02-24T16:33:40.9049234Z 	Simulation finished in 0 iterations 
2025-02-24T16:33:40.9049319Z 	Simulation took 0.00 s
2025-02-24T16:33:40.9049428Z  ([1mbase.py[0m:542)
2025-02-24T16:33:40.9049597Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9049664Z 	
2025-02-24T16:33:40.9049822Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T16:33:40.9049983Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9050054Z 	
2025-02-24T16:33:40.9050146Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-02-24T16:33:40.9050244Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-02-24T16:33:40.9050340Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.9050444Z  ([1mbase.py[0m:657)
2025-02-24T16:33:40.9050601Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T16:33:40.9050609Z 
2025-02-24T16:33:40.9050613Z 
2025-02-24T16:33:40.9050848Z Packets:                                                                                   109122/? [00:13<00:00, 10591.54it/s][A
2025-02-24T16:33:40.9050852Z 
2025-02-24T16:33:40.9051082Z Packets:                                                                                   116732/? [00:14<00:00, 12673.28it/s][A
2025-02-24T16:33:40.9051086Z 
2025-02-24T16:33:40.9051314Z Packets:                                                                                   123076/? [00:14<00:00, 14735.67it/s][A
2025-02-24T16:33:40.9051318Z 
2025-02-24T16:33:40.9051538Z Packets:                                                                                   128555/? [00:14<00:00, 16811.08it/s][A
2025-02-24T16:33:40.9051542Z 
2025-02-24T16:33:40.9051767Z Packets:                                                                                   133436/? [00:14<00:00, 18873.09it/s][A
2025-02-24T16:33:40.9051774Z 
2025-02-24T16:33:40.9051996Z Packets:                                                                                   137885/? [00:14<00:00, 20976.68it/s][A
2025-02-24T16:33:40.9051999Z 
2025-02-24T16:33:40.9052218Z Packets:                                                                                   142049/? [00:14<00:00, 22804.24it/s][A
2025-02-24T16:33:40.9052222Z 
2025-02-24T16:33:40.9052446Z Packets:                                                                                   145941/? [00:14<00:00, 24809.22it/s][A
2025-02-24T16:33:40.9052450Z 
2025-02-24T16:33:40.9052806Z Packets:                                                                                   149717/? [00:15<00:00, 26712.79it/s][A
2025-02-24T16:33:40.9052810Z 
2025-02-24T16:33:40.9053035Z Packets:                                                                                   153414/? [00:15<00:00, 28437.20it/s][A
2025-02-24T16:33:40.9053039Z 
2025-02-24T16:33:40.9053268Z Packets:                                                                                   157056/? [00:15<00:00, 29886.12it/s][A
2025-02-24T16:33:40.9053272Z 
2025-02-24T16:33:40.9053496Z Packets:                                                                                   160651/? [00:15<00:00, 31120.53it/s][A
2025-02-24T16:33:40.9053500Z 
2025-02-24T16:33:40.9053717Z Packets:                                                                                   164219/? [00:15<00:00, 32138.73it/s][A
2025-02-24T16:33:40.9053721Z 
2025-02-24T16:33:40.9053946Z Packets:                                                                                   167787/? [00:15<00:00, 33067.99it/s][A
2025-02-24T16:33:40.9053950Z 
2025-02-24T16:33:40.9054173Z Packets:                                                                                   171344/? [00:15<00:00, 33580.65it/s][A
2025-02-24T16:33:40.9054176Z 
2025-02-24T16:33:40.9054393Z Packets:                                                                                   174881/? [00:15<00:00, 33918.08it/s][A
2025-02-24T16:33:40.9054473Z 
2025-02-24T16:33:40.9054700Z Packets:                                                                                   178403/? [00:15<00:00, 34287.78it/s][A
2025-02-24T16:33:40.9054704Z 
2025-02-24T16:33:40.9054929Z Packets:                                                                                   181948/? [00:15<00:00, 34621.40it/s][A
2025-02-24T16:33:40.9054933Z 
2025-02-24T16:33:40.9055152Z Packets:                                                                                   185476/? [00:16<00:00, 34753.99it/s][A
2025-02-24T16:33:40.9055159Z 
2025-02-24T16:33:40.9055382Z Packets:                                                                                   188998/? [00:16<00:00, 34871.10it/s][A
2025-02-24T16:33:40.9055386Z 
2025-02-24T16:33:40.9055608Z Packets:                                                                                   192542/? [00:16<00:00, 35038.01it/s][A
2025-02-24T16:33:40.9055615Z 
2025-02-24T16:33:40.9055833Z Packets:                                                                                   196069/? [00:16<00:00, 34924.52it/s][A
2025-02-24T16:33:40.9055836Z 
2025-02-24T16:33:40.9056060Z Packets:                                                                                   199578/? [00:16<00:00, 34902.14it/s][A
2025-02-24T16:33:40.9056063Z 
2025-02-24T16:33:40.9056286Z Packets:                                                                                   203095/? [00:16<00:00, 34980.58it/s][A
2025-02-24T16:33:40.9056435Z Iterations:                                                                                41/? [08:01<00:00,  5.54s/it]
2025-02-24T16:33:40.9056439Z 
2025-02-24T16:33:40.9056666Z Packets:                                                                                   204009/? [00:16<00:00, 34980.58it/s][A
2025-02-24T16:33:40.9056817Z ------------------------------ Captured log call -------------------------------
2025-02-24T16:33:40.9057472Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:33:40.9057702Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T16:33:40.9057812Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T16:33:40.9057911Z 	Simulation finished in 0 iterations 
2025-02-24T16:33:40.9057995Z 	Simulation took 0.00 s
2025-02-24T16:33:40.9057999Z 
2025-02-24T16:33:40.9058110Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:33:40.9058319Z 	Starting iteration 1 of 1
2025-02-24T16:33:40.9058429Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:33:40.9058526Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-02-24T16:33:40.9058616Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-02-24T16:33:40.9058712Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.9058864Z __________________________ test_boundary_interactions __________________________
2025-02-24T16:33:40.9058871Z 
2025-02-24T16:33:40.9059669Z rpacket_tracker = ListType[instance.jitclass.RPacketTracker#7ff51c6cbf50<seed:int64,index:int64,status:array(int64, 1d, A),r:array(float...PacketTracker object at 0x7ff4ea3f0490>, <numba.experimental.jitclass.boxing.RPacketTracker object at 0x7ff50f9d6a40>])
2025-02-24T16:33:40.9059943Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff4e57122d0>
2025-02-24T16:33:40.9059948Z 
2025-02-24T16:33:40.9060111Z     def test_boundary_interactions(rpacket_tracker, regression_data):
2025-02-24T16:33:40.9060216Z         no_of_packets = len(rpacket_tracker)
2025-02-24T16:33:40.9060283Z     
2025-02-24T16:33:40.9060382Z         # Hard coding the number of columns
2025-02-24T16:33:40.9060533Z         # Based on the largest size of boundary_interaction array (60)
2025-02-24T16:33:40.9060638Z         obtained_boundary_interaction = np.full(
2025-02-24T16:33:40.9060729Z             (no_of_packets, 64),
2025-02-24T16:33:40.9060910Z             [-1],
2025-02-24T16:33:40.9061051Z             dtype=rpacket_tracker[0].boundary_interaction.dtype,
2025-02-24T16:33:40.9061123Z         )
2025-02-24T16:33:40.9061195Z     
2025-02-24T16:33:40.9061313Z         for i, tracker in enumerate(rpacket_tracker):
2025-02-24T16:33:40.9061409Z             obtained_boundary_interaction[
2025-02-24T16:33:40.9061520Z                 i, : tracker.boundary_interaction.size
2025-02-24T16:33:40.9061613Z             ] = tracker.boundary_interaction
2025-02-24T16:33:40.9061685Z     
2025-02-24T16:33:40.9061845Z         expected_boundary_interaction = regression_data.sync_ndarray(
2025-02-24T16:33:40.9061944Z             obtained_boundary_interaction
2025-02-24T16:33:40.9062017Z         )
2025-02-24T16:33:40.9062104Z >       npt.assert_array_equal(
2025-02-24T16:33:40.9062269Z             obtained_boundary_interaction, expected_boundary_interaction
2025-02-24T16:33:40.9062338Z         )
2025-02-24T16:33:40.9062341Z 
2025-02-24T16:33:40.9062523Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:154: 
2025-02-24T16:33:40.9062645Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9062649Z 
2025-02-24T16:33:40.9062875Z args = (<built-in function eq>, array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:33:40.9062982Z         (-1, -1, -1), (-...-1, -1, -1), (-1, -1, -1)]],
2025-02-24T16:33:40.9063162Z       dtype=[('event_id', '<i8'), ('current_shell_id', '<i8'), ('next_shell_id', '<i8')]))
2025-02-24T16:33:40.9063364Z kwds = {'err_msg': '', 'header': 'Arrays are not equal', 'strict': False, 'verbose': True}
2025-02-24T16:33:40.9063367Z 
2025-02-24T16:33:40.9063447Z     @wraps(func)
2025-02-24T16:33:40.9063532Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9063623Z         with self._recreate_cm():
2025-02-24T16:33:40.9063712Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9063802Z E           AssertionError: 
2025-02-24T16:33:40.9063883Z E           Arrays are not equal
2025-02-24T16:33:40.9063961Z E           
2025-02-24T16:33:40.9064067Z E           (shapes (4000, 64), (4000, 62) mismatch)
2025-02-24T16:33:40.9064200Z E            x: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:33:40.9064296Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-02-24T16:33:40.9064404Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T16:33:40.9064532Z E            y: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:33:40.9064707Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-02-24T16:33:40.9064816Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T16:33:40.9064820Z 
2025-02-24T16:33:40.9065032Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9065196Z ______________________ test_montecarlo_main_loop_weighted ______________________
2025-02-24T16:33:40.9065203Z 
2025-02-24T16:33:40.9065886Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T16:33:40.9066168Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff4ff46a2d0>
2025-02-24T16:33:40.9066517Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T16:33:40.9066919Z simple_weighted_packet_source = <tardis.transport.montecarlo.weighted_packet_source.BlackBodyWeightedSource object at 0x7ff5121e0a70>
2025-02-24T16:33:40.9066923Z 
2025-02-24T16:33:40.9067024Z     def test_montecarlo_main_loop_weighted(
2025-02-24T16:33:40.9067119Z         montecarlo_main_loop_config,
2025-02-24T16:33:40.9067210Z         regression_data,
2025-02-24T16:33:40.9067389Z         atomic_dataset,
2025-02-24T16:33:40.9067605Z         simple_weighted_packet_source,
2025-02-24T16:33:40.9067673Z     ):
2025-02-24T16:33:40.9067782Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T16:33:40.9067955Z         montecarlo_main_loop_simulation_weighted = Simulation.from_config(
2025-02-24T16:33:40.9068053Z             montecarlo_main_loop_config,
2025-02-24T16:33:40.9068148Z             atom_data=atomic_dataset,
2025-02-24T16:33:40.9068240Z             virtual_packet_logging=False,
2025-02-24T16:33:40.9068329Z             legacy_mode_enabled=True,
2025-02-24T16:33:40.9068397Z         )
2025-02-24T16:33:40.9068563Z         montecarlo_main_loop_simulation_weighted.packet_source = (
2025-02-24T16:33:40.9068654Z             simple_weighted_packet_source
2025-02-24T16:33:40.9068727Z         )
2025-02-24T16:33:40.9068881Z         montecarlo_main_loop_simulation_weighted.run_convergence()
2025-02-24T16:33:40.9069015Z         montecarlo_main_loop_simulation_weighted.run_final()
2025-02-24T16:33:40.9069092Z     
2025-02-24T16:33:40.9069199Z         # Get the montecarlo simple regression data
2025-02-24T16:33:40.9069287Z         regression_data_dir = (
2025-02-24T16:33:40.9069464Z             regression_data.absolute_regression_data_dir.absolute().parents[0]
2025-02-24T16:33:40.9069612Z             / "test_montecarlo_main_loop/test_montecarlo_main_loop.h5"
2025-02-24T16:33:40.9069685Z         )
2025-02-24T16:33:40.9069844Z         expected_hdf_store = pd.HDFStore(regression_data_dir, mode="r")
2025-02-24T16:33:40.9069915Z     
2025-02-24T16:33:40.9070008Z         # Load compare data from refdata
2025-02-24T16:33:40.9070083Z     
2025-02-24T16:33:40.9070174Z         expected_nu = expected_hdf_store[
2025-02-24T16:33:40.9070305Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T16:33:40.9070379Z         ]
2025-02-24T16:33:40.9070479Z         expected_energy = expected_hdf_store[
2025-02-24T16:33:40.9070615Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T16:33:40.9070687Z         ]
2025-02-24T16:33:40.9070809Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T16:33:40.9070950Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T16:33:40.9071024Z         ]
2025-02-24T16:33:40.9071136Z         expected_j_estimator = expected_hdf_store[
2025-02-24T16:33:40.9071261Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T16:33:40.9071334Z         ]
2025-02-24T16:33:40.9071423Z         expected_hdf_store.close()
2025-02-24T16:33:40.9071512Z         transport_state = (
2025-02-24T16:33:40.9071804Z             montecarlo_main_loop_simulation_weighted.transport.transport_state
2025-02-24T16:33:40.9071881Z         )
2025-02-24T16:33:40.9072059Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T16:33:40.9072532Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T16:33:40.9072669Z         actual_nu_bar_estimator = (
2025-02-24T16:33:40.9072883Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-02-24T16:33:40.9072984Z         )
2025-02-24T16:33:40.9073231Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-02-24T16:33:40.9073421Z     
2025-02-24T16:33:40.9073540Z         # Compare
2025-02-24T16:33:40.9073689Z         npt.assert_allclose(
2025-02-24T16:33:40.9073873Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-2
2025-02-24T16:33:40.9074008Z         )
2025-02-24T16:33:40.9074302Z         npt.assert_allclose(actual_j_estimator, expected_j_estimator, rtol=1e-2)
2025-02-24T16:33:40.9074504Z >       npt.assert_allclose(actual_energy, expected_energy, rtol=1e-2)
2025-02-24T16:33:40.9074509Z 
2025-02-24T16:33:40.9074804Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py:65: 
2025-02-24T16:33:40.9074949Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9074953Z 
2025-02-24T16:33:40.9075594Z args = (<function assert_allclose.<locals>.compare at 0x7ff50fa907c0>, array([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-...ay([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-05, ...,
2025-02-24T16:33:40.9075805Z         1.03375439e-05, -9.75713585e-06,  1.01976360e-05]))
2025-02-24T16:33:40.9076097Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.01, atol=0', 'verbose': True}
2025-02-24T16:33:40.9076101Z 
2025-02-24T16:33:40.9076240Z     @wraps(func)
2025-02-24T16:33:40.9083753Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9083887Z         with self._recreate_cm():
2025-02-24T16:33:40.9083997Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9084092Z E           AssertionError: 
2025-02-24T16:33:40.9084213Z E           Not equal to tolerance rtol=0.01, atol=0
2025-02-24T16:33:40.9084291Z E           
2025-02-24T16:33:40.9084405Z E           Mismatched elements: 33 / 100000 (0.033%)
2025-02-24T16:33:40.9084509Z E           Max absolute difference: 2.00640487e-05
2025-02-24T16:33:40.9084617Z E           Max relative difference: 2.06329455
2025-02-24T16:33:40.9084793Z E            x: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T16:33:40.9084896Z E                  -9.757136e-06,  1.019764e-05])
2025-02-24T16:33:40.9085065Z E            y: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T16:33:40.9085153Z E                  -9.757136e-06,  1.019764e-05])
2025-02-24T16:33:40.9085158Z 
2025-02-24T16:33:40.9085381Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9085543Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T16:33:40.9085839Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:33:40.9086293Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:33:40.9086476Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9086698Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T16:33:40.9086863Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9086937Z 	
2025-02-24T16:33:40.9087034Z 	Simulation finished in 0 iterations 
2025-02-24T16:33:40.9087120Z 	Simulation took 0.00 s
2025-02-24T16:33:40.9087235Z  ([1mbase.py[0m:542)
2025-02-24T16:33:40.9087547Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9087619Z 	
2025-02-24T16:33:40.9087773Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T16:33:40.9088109Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9088180Z 	
2025-02-24T16:33:40.9088281Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T16:33:40.9088378Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T16:33:40.9088468Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.9088579Z  ([1mbase.py[0m:657)
2025-02-24T16:33:40.9088742Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T16:33:40.9088747Z 
2025-02-24T16:33:40.9088750Z 
2025-02-24T16:33:40.9088999Z Packets:                                                                                   0/100000 [00:00<?, ?it/s]            [A
2025-02-24T16:33:40.9089003Z 
2025-02-24T16:33:40.9089229Z Packets:                                                                                   0/100000 [00:00<?, ?it/s][A
2025-02-24T16:33:40.9089234Z 
2025-02-24T16:33:40.9089509Z Packets:   ████████▎                                                                       10409/100000 [00:00<00:00, 104085.63it/s][A
2025-02-24T16:33:40.9089514Z 
2025-02-24T16:33:40.9089771Z Packets:   █████████████████                                                               21273/100000 [00:00<00:00, 106763.04it/s][A
2025-02-24T16:33:40.9089775Z 
2025-02-24T16:33:40.9090041Z Packets:   █████████████████████████▋                                                      32099/100000 [00:00<00:00, 107442.64it/s][A
2025-02-24T16:33:40.9090182Z 
2025-02-24T16:33:40.9090457Z Packets:   ██████████████████████████████████▍                                             42989/100000 [00:00<00:00, 108016.08it/s][A
2025-02-24T16:33:40.9090461Z 
2025-02-24T16:33:40.9090740Z Packets:   ███████████████████████████████████████████                                     53791/100000 [00:00<00:00, 106674.33it/s][A
2025-02-24T16:33:40.9090744Z 
2025-02-24T16:33:40.9091031Z Packets:   ███████████████████████████████████████████████████▊                            64758/100000 [00:00<00:00, 107682.32it/s][A
2025-02-24T16:33:40.9091047Z 
2025-02-24T16:33:40.9091340Z Packets:   ████████████████████████████████████████████████████████████▌                   75687/100000 [00:00<00:00, 108204.33it/s][A
2025-02-24T16:33:40.9091344Z 
2025-02-24T16:33:40.9091651Z Packets:   █████████████████████████████████████████████████████████████████████▍          86746/100000 [00:00<00:00, 108960.12it/s][A
2025-02-24T16:33:40.9091668Z 
2025-02-24T16:33:40.9091983Z Packets:   ██████████████████████████████████████████████████████████████████████████████▏ 97698/100000 [00:00<00:00, 109131.47it/s][A
2025-02-24T16:33:40.9092146Z Iterations:                                                                                45/? [08:52<00:00,  8.04s/it]
2025-02-24T16:33:40.9092150Z 
2025-02-24T16:33:40.9092478Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉99999/100000 [00:00<00:00, 109131.47it/s][A
2025-02-24T16:33:40.9092722Z ------------------------------ Captured log call -------------------------------
2025-02-24T16:33:40.9093241Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:33:40.9093471Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T16:33:40.9093581Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T16:33:40.9093783Z 	Simulation finished in 0 iterations 
2025-02-24T16:33:40.9093935Z 	Simulation took 0.00 s
2025-02-24T16:33:40.9093943Z 
2025-02-24T16:33:40.9094133Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:33:40.9094290Z 	Starting iteration 1 of 1
2025-02-24T16:33:40.9094476Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:33:40.9094654Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T16:33:40.9094829Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T16:33:40.9094998Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.9095384Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] __
2025-02-24T16:33:40.9095392Z 
2025-02-24T16:33:40.9095870Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f30ad0>
2025-02-24T16:33:40.9096387Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>
2025-02-24T16:33:40.9097055Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data0-plot_data]>>
2025-02-24T16:33:40.9097211Z attribute = 'plot_data'
2025-02-24T16:33:40.9097219Z 
2025-02-24T16:33:40.9097521Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.9097676Z         "attribute",
2025-02-24T16:33:40.9097800Z         [
2025-02-24T16:33:40.9097937Z             "plot_data",
2025-02-24T16:33:40.9098084Z             "plot_colors",
2025-02-24T16:33:40.9098234Z             "new_bin_edges",
2025-02-24T16:33:40.9098362Z         ],
2025-02-24T16:33:40.9098478Z     )
2025-02-24T16:33:40.9098640Z     def test_prepare_plot_data(
2025-02-24T16:33:40.9098779Z         self,
2025-02-24T16:33:40.9098936Z         plotter_prepare_plot_data,
2025-02-24T16:33:40.9099067Z         request,
2025-02-24T16:33:40.9099193Z         attribute,
2025-02-24T16:33:40.9099315Z     ):
2025-02-24T16:33:40.9099436Z         """
2025-02-24T16:33:40.9099680Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:33:40.9099859Z     
2025-02-24T16:33:40.9099994Z         Parameters:
2025-02-24T16:33:40.9100129Z         -----------
2025-02-24T16:33:40.9100456Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:33:40.9100630Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9100914Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:33:40.9101046Z         """
2025-02-24T16:33:40.9101237Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9101480Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:33:40.9101767Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:33:40.9102050Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:33:40.9102309Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:33:40.9102531Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:33:40.9102704Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:33:40.9102835Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:33:40.9102840Z 
2025-02-24T16:33:40.9102988Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:33:40.9103111Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9103116Z 
2025-02-24T16:33:40.9103741Z args = (<function assert_allclose.<locals>.compare at 0x7ff502fef880>, array([12955.14169787, 12955.14169787, 12955.14169787,...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-02-24T16:33:40.9103848Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-02-24T16:33:40.9104098Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9104103Z 
2025-02-24T16:33:40.9104184Z     @wraps(func)
2025-02-24T16:33:40.9104275Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9104365Z         with self._recreate_cm():
2025-02-24T16:33:40.9104460Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9104550Z E           AssertionError: 
2025-02-24T16:33:40.9104659Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9104734Z E           
2025-02-24T16:33:40.9104826Z E           (shapes (508,), (515,) mismatch)
2025-02-24T16:33:40.9104970Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:33:40.9105095Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:33:40.9105222Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:33:40.9105357Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:33:40.9105468Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:33:40.9105593Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:33:40.9105705Z 
2025-02-24T16:33:40.9105947Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9106118Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.9106405Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9106672Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:33:40.9106825Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.9107131Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:33:40.9107558Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] __
2025-02-24T16:33:40.9107564Z 
2025-02-24T16:33:40.9107836Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f30f50>
2025-02-24T16:33:40.9108116Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>
2025-02-24T16:33:40.9108392Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data1-plot_data]>>
2025-02-24T16:33:40.9108474Z attribute = 'plot_data'
2025-02-24T16:33:40.9108484Z 
2025-02-24T16:33:40.9108576Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.9108656Z         "attribute",
2025-02-24T16:33:40.9108727Z         [
2025-02-24T16:33:40.9108811Z             "plot_data",
2025-02-24T16:33:40.9108888Z             "plot_colors",
2025-02-24T16:33:40.9108973Z             "new_bin_edges",
2025-02-24T16:33:40.9109044Z         ],
2025-02-24T16:33:40.9109118Z     )
2025-02-24T16:33:40.9109210Z     def test_prepare_plot_data(
2025-02-24T16:33:40.9109279Z         self,
2025-02-24T16:33:40.9109373Z         plotter_prepare_plot_data,
2025-02-24T16:33:40.9109445Z         request,
2025-02-24T16:33:40.9109518Z         attribute,
2025-02-24T16:33:40.9109583Z     ):
2025-02-24T16:33:40.9109653Z         """
2025-02-24T16:33:40.9109796Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:33:40.9109864Z     
2025-02-24T16:33:40.9109943Z         Parameters:
2025-02-24T16:33:40.9110017Z         -----------
2025-02-24T16:33:40.9110199Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:33:40.9110295Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9110465Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:33:40.9110539Z         """
2025-02-24T16:33:40.9110646Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9111063Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:33:40.9111230Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:33:40.9111394Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:33:40.9111541Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:33:40.9111670Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:33:40.9111805Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:33:40.9111923Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:33:40.9111927Z 
2025-02-24T16:33:40.9112076Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:33:40.9112189Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9112193Z 
2025-02-24T16:33:40.9112637Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e0684cc0>, array([12955.14169787, 12955.14169787, 12955.14169787,...2507.1391254 , 12507.1391254 , 11042.97481792,
2025-02-24T16:33:40.9112776Z        13068.12089331, 13068.12089331, 11398.23786534, 11111.20486813]))
2025-02-24T16:33:40.9113023Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9113027Z 
2025-02-24T16:33:40.9113218Z     @wraps(func)
2025-02-24T16:33:40.9113302Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9113392Z         with self._recreate_cm():
2025-02-24T16:33:40.9113486Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9113570Z E           AssertionError: 
2025-02-24T16:33:40.9113683Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9113753Z E           
2025-02-24T16:33:40.9113852Z E           (shapes (558,), (560,) mismatch)
2025-02-24T16:33:40.9113987Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:33:40.9114113Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:33:40.9114237Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:33:40.9114365Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:33:40.9114482Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:33:40.9114603Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:33:40.9114607Z 
2025-02-24T16:33:40.9114812Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9115022Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] __
2025-02-24T16:33:40.9115026Z 
2025-02-24T16:33:40.9115285Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f31190>
2025-02-24T16:33:40.9115565Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>
2025-02-24T16:33:40.9115834Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data2-plot_data]>>
2025-02-24T16:33:40.9115920Z attribute = 'plot_data'
2025-02-24T16:33:40.9115924Z 
2025-02-24T16:33:40.9116032Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.9116159Z         "attribute",
2025-02-24T16:33:40.9116289Z         [
2025-02-24T16:33:40.9116395Z             "plot_data",
2025-02-24T16:33:40.9116480Z             "plot_colors",
2025-02-24T16:33:40.9116564Z             "new_bin_edges",
2025-02-24T16:33:40.9116633Z         ],
2025-02-24T16:33:40.9116706Z     )
2025-02-24T16:33:40.9116792Z     def test_prepare_plot_data(
2025-02-24T16:33:40.9116867Z         self,
2025-02-24T16:33:40.9116956Z         plotter_prepare_plot_data,
2025-02-24T16:33:40.9117031Z         request,
2025-02-24T16:33:40.9117103Z         attribute,
2025-02-24T16:33:40.9117176Z     ):
2025-02-24T16:33:40.9117396Z         """
2025-02-24T16:33:40.9117596Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:33:40.9117816Z     
2025-02-24T16:33:40.9117898Z         Parameters:
2025-02-24T16:33:40.9117977Z         -----------
2025-02-24T16:33:40.9118157Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:33:40.9118259Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9118424Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:33:40.9118494Z         """
2025-02-24T16:33:40.9118600Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9118736Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:33:40.9118887Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:33:40.9119044Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:33:40.9119198Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:33:40.9119327Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:33:40.9119446Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:33:40.9119567Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:33:40.9119572Z 
2025-02-24T16:33:40.9119714Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:33:40.9119828Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9119942Z 
2025-02-24T16:33:40.9120388Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e0684e00>, array([12079.52986884, 11966.99134279, 11263.63770779,...1064.78967159, 11163.13661084, 11172.32922889,
2025-02-24T16:33:40.9120522Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-02-24T16:33:40.9120769Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9120774Z 
2025-02-24T16:33:40.9120849Z     @wraps(func)
2025-02-24T16:33:40.9120940Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9121031Z         with self._recreate_cm():
2025-02-24T16:33:40.9121119Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9121209Z E           AssertionError: 
2025-02-24T16:33:40.9121319Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9121394Z E           
2025-02-24T16:33:40.9121487Z E           (shapes (147,), (136,) mismatch)
2025-02-24T16:33:40.9121630Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:33:40.9121749Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:33:40.9121867Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:33:40.9122010Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:33:40.9122120Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:33:40.9122247Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:33:40.9122251Z 
2025-02-24T16:33:40.9122451Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9122614Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.9122870Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9123126Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:33:40.9123279Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.9123647Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:33:40.9123941Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] __
2025-02-24T16:33:40.9123946Z 
2025-02-24T16:33:40.9124209Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f313d0>
2025-02-24T16:33:40.9124579Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>
2025-02-24T16:33:40.9124849Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data3-plot_data]>>
2025-02-24T16:33:40.9124930Z attribute = 'plot_data'
2025-02-24T16:33:40.9124934Z 
2025-02-24T16:33:40.9125027Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.9125107Z         "attribute",
2025-02-24T16:33:40.9125175Z         [
2025-02-24T16:33:40.9125256Z             "plot_data",
2025-02-24T16:33:40.9125334Z             "plot_colors",
2025-02-24T16:33:40.9125415Z             "new_bin_edges",
2025-02-24T16:33:40.9125482Z         ],
2025-02-24T16:33:40.9125553Z     )
2025-02-24T16:33:40.9125643Z     def test_prepare_plot_data(
2025-02-24T16:33:40.9125712Z         self,
2025-02-24T16:33:40.9125805Z         plotter_prepare_plot_data,
2025-02-24T16:33:40.9125876Z         request,
2025-02-24T16:33:40.9125952Z         attribute,
2025-02-24T16:33:40.9126019Z     ):
2025-02-24T16:33:40.9126094Z         """
2025-02-24T16:33:40.9126230Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:33:40.9126309Z     
2025-02-24T16:33:40.9126388Z         Parameters:
2025-02-24T16:33:40.9126460Z         -----------
2025-02-24T16:33:40.9126644Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:33:40.9126741Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9126994Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:33:40.9127063Z         """
2025-02-24T16:33:40.9127175Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9127521Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:33:40.9127671Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:33:40.9127839Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:33:40.9127990Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:33:40.9128117Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:33:40.9128240Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:33:40.9128360Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:33:40.9128364Z 
2025-02-24T16:33:40.9128509Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:33:40.9128624Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9128628Z 
2025-02-24T16:33:40.9129007Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e0685120>, array([12079.52986884, 11966.99134279, 11263.63770779,...210447, 12126.50399598,
2025-02-24T16:33:40.9129142Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-02-24T16:33:40.9129215Z        11042.97481792]))
2025-02-24T16:33:40.9129493Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9129500Z 
2025-02-24T16:33:40.9129630Z     @wraps(func)
2025-02-24T16:33:40.9129751Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9129846Z         with self._recreate_cm():
2025-02-24T16:33:40.9129936Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9130023Z E           AssertionError: 
2025-02-24T16:33:40.9130129Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9130208Z E           
2025-02-24T16:33:40.9130298Z E           (shapes (159,), (153,) mismatch)
2025-02-24T16:33:40.9130439Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:33:40.9130558Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:33:40.9130677Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:33:40.9130810Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:33:40.9131051Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:33:40.9131178Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:33:40.9131182Z 
2025-02-24T16:33:40.9131387Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9131597Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] __
2025-02-24T16:33:40.9131604Z 
2025-02-24T16:33:40.9131874Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f31640>
2025-02-24T16:33:40.9132154Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>
2025-02-24T16:33:40.9132421Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data4-plot_data]>>
2025-02-24T16:33:40.9132505Z attribute = 'plot_data'
2025-02-24T16:33:40.9132509Z 
2025-02-24T16:33:40.9132599Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.9132676Z         "attribute",
2025-02-24T16:33:40.9132747Z         [
2025-02-24T16:33:40.9132828Z             "plot_data",
2025-02-24T16:33:40.9132905Z             "plot_colors",
2025-02-24T16:33:40.9132987Z             "new_bin_edges",
2025-02-24T16:33:40.9133059Z         ],
2025-02-24T16:33:40.9133126Z     )
2025-02-24T16:33:40.9133215Z     def test_prepare_plot_data(
2025-02-24T16:33:40.9133284Z         self,
2025-02-24T16:33:40.9133490Z         plotter_prepare_plot_data,
2025-02-24T16:33:40.9133561Z         request,
2025-02-24T16:33:40.9133638Z         attribute,
2025-02-24T16:33:40.9133752Z     ):
2025-02-24T16:33:40.9133885Z         """
2025-02-24T16:33:40.9134049Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:33:40.9134115Z     
2025-02-24T16:33:40.9134193Z         Parameters:
2025-02-24T16:33:40.9134267Z         -----------
2025-02-24T16:33:40.9134447Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:33:40.9134542Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9134712Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:33:40.9134785Z         """
2025-02-24T16:33:40.9134890Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9135031Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:33:40.9135175Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:33:40.9135344Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:33:40.9135496Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:33:40.9135615Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:33:40.9135737Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:33:40.9135854Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:33:40.9135858Z 
2025-02-24T16:33:40.9136005Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:33:40.9136121Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9136130Z 
2025-02-24T16:33:40.9136599Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e0684e00>, array([12955.14169787, 12955.14169787, 12955.14169787,...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-02-24T16:33:40.9136703Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-02-24T16:33:40.9136954Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9136958Z 
2025-02-24T16:33:40.9137039Z     @wraps(func)
2025-02-24T16:33:40.9137125Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9137210Z         with self._recreate_cm():
2025-02-24T16:33:40.9137466Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9137555Z E           AssertionError: 
2025-02-24T16:33:40.9137668Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9137737Z E           
2025-02-24T16:33:40.9137954Z E           (shapes (508,), (515,) mismatch)
2025-02-24T16:33:40.9138098Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:33:40.9138214Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:33:40.9138334Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:33:40.9138466Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:33:40.9138584Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:33:40.9138700Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:33:40.9138710Z 
2025-02-24T16:33:40.9138911Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9139068Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.9139324Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9139672Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:33:40.9139848Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.9140154Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:33:40.9140499Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] __
2025-02-24T16:33:40.9140503Z 
2025-02-24T16:33:40.9140762Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f31880>
2025-02-24T16:33:40.9141043Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>
2025-02-24T16:33:40.9141315Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data5-plot_data]>>
2025-02-24T16:33:40.9141397Z attribute = 'plot_data'
2025-02-24T16:33:40.9141400Z 
2025-02-24T16:33:40.9141496Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.9141570Z         "attribute",
2025-02-24T16:33:40.9141642Z         [
2025-02-24T16:33:40.9141716Z             "plot_data",
2025-02-24T16:33:40.9141797Z             "plot_colors",
2025-02-24T16:33:40.9141879Z             "new_bin_edges",
2025-02-24T16:33:40.9141947Z         ],
2025-02-24T16:33:40.9142021Z     )
2025-02-24T16:33:40.9142110Z     def test_prepare_plot_data(
2025-02-24T16:33:40.9142184Z         self,
2025-02-24T16:33:40.9142271Z         plotter_prepare_plot_data,
2025-02-24T16:33:40.9142346Z         request,
2025-02-24T16:33:40.9142417Z         attribute,
2025-02-24T16:33:40.9142489Z     ):
2025-02-24T16:33:40.9142563Z         """
2025-02-24T16:33:40.9142695Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:33:40.9142768Z     
2025-02-24T16:33:40.9142841Z         Parameters:
2025-02-24T16:33:40.9142918Z         -----------
2025-02-24T16:33:40.9143096Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:33:40.9143197Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9143363Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:33:40.9143432Z         """
2025-02-24T16:33:40.9143540Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9143711Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:33:40.9143950Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:33:40.9144111Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:33:40.9144262Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:33:40.9144386Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:33:40.9144502Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:33:40.9144624Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:33:40.9144628Z 
2025-02-24T16:33:40.9144876Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:33:40.9144995Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9144999Z 
2025-02-24T16:33:40.9145475Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e06877e0>, array([13692.75973672, 11362.93720064, 12466.53861691,...), array([12467.89648692, 12467.89648692, 12357.74827994, ...,
2025-02-24T16:33:40.9145579Z        13068.12089331, 11398.23786534, 11111.20486813]))
2025-02-24T16:33:40.9145824Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9145828Z 
2025-02-24T16:33:40.9145906Z     @wraps(func)
2025-02-24T16:33:40.9145987Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9146073Z         with self._recreate_cm():
2025-02-24T16:33:40.9146158Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9146245Z E           AssertionError: 
2025-02-24T16:33:40.9146354Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9146430Z E           
2025-02-24T16:33:40.9146527Z E           (shapes (1466,), (1481,) mismatch)
2025-02-24T16:33:40.9146677Z E            x: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-02-24T16:33:40.9146766Z E                  11152.962595, 11172.044815])
2025-02-24T16:33:40.9146989Z E            y: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-02-24T16:33:40.9147075Z E                  11398.237865, 11111.204868])
2025-02-24T16:33:40.9147079Z 
2025-02-24T16:33:40.9147447Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9147615Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.9147864Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9148302Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:33:40.9148463Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.9148811Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T16:33:40.9149022Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] __
2025-02-24T16:33:40.9149030Z 
2025-02-24T16:33:40.9149292Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f31ac0>
2025-02-24T16:33:40.9149570Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>
2025-02-24T16:33:40.9149837Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data6-plot_data]>>
2025-02-24T16:33:40.9149922Z attribute = 'plot_data'
2025-02-24T16:33:40.9149926Z 
2025-02-24T16:33:40.9150016Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.9150098Z         "attribute",
2025-02-24T16:33:40.9150166Z         [
2025-02-24T16:33:40.9150248Z             "plot_data",
2025-02-24T16:33:40.9150325Z             "plot_colors",
2025-02-24T16:33:40.9150407Z             "new_bin_edges",
2025-02-24T16:33:40.9150475Z         ],
2025-02-24T16:33:40.9150547Z     )
2025-02-24T16:33:40.9150636Z     def test_prepare_plot_data(
2025-02-24T16:33:40.9150708Z         self,
2025-02-24T16:33:40.9150801Z         plotter_prepare_plot_data,
2025-02-24T16:33:40.9150871Z         request,
2025-02-24T16:33:40.9150947Z         attribute,
2025-02-24T16:33:40.9151015Z     ):
2025-02-24T16:33:40.9151089Z         """
2025-02-24T16:33:40.9151226Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:33:40.9151293Z     
2025-02-24T16:33:40.9151372Z         Parameters:
2025-02-24T16:33:40.9151446Z         -----------
2025-02-24T16:33:40.9151626Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:33:40.9151862Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9152141Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:33:40.9152221Z         """
2025-02-24T16:33:40.9152332Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9152475Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:33:40.9152620Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:33:40.9152785Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:33:40.9152931Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:33:40.9153056Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:33:40.9153177Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:33:40.9153295Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:33:40.9153300Z 
2025-02-24T16:33:40.9153451Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:33:40.9153562Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9153566Z 
2025-02-24T16:33:40.9154009Z args = (<function assert_allclose.<locals>.compare at 0x7ff502fec040>, array([12079.52986884, 11966.99134279, 11263.63770779,...1064.78967159, 11163.13661084, 11172.32922889,
2025-02-24T16:33:40.9154265Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-02-24T16:33:40.9154507Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9154511Z 
2025-02-24T16:33:40.9154587Z     @wraps(func)
2025-02-24T16:33:40.9154673Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9154762Z         with self._recreate_cm():
2025-02-24T16:33:40.9154852Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9154936Z E           AssertionError: 
2025-02-24T16:33:40.9155050Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9155122Z E           
2025-02-24T16:33:40.9155218Z E           (shapes (147,), (136,) mismatch)
2025-02-24T16:33:40.9155353Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:33:40.9155473Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:33:40.9155595Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:33:40.9155729Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:33:40.9155845Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:33:40.9155962Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:33:40.9155965Z 
2025-02-24T16:33:40.9156168Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9156323Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.9156563Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9156813Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:33:40.9156961Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.9157438Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:33:40.9157701Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] __
2025-02-24T16:33:40.9157706Z 
2025-02-24T16:33:40.9158142Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f31ca0>
2025-02-24T16:33:40.9158634Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>
2025-02-24T16:33:40.9158937Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data7-plot_data]>>
2025-02-24T16:33:40.9159024Z attribute = 'plot_data'
2025-02-24T16:33:40.9159158Z 
2025-02-24T16:33:40.9159257Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.9159332Z         "attribute",
2025-02-24T16:33:40.9159404Z         [
2025-02-24T16:33:40.9159480Z             "plot_data",
2025-02-24T16:33:40.9159564Z             "plot_colors",
2025-02-24T16:33:40.9159641Z             "new_bin_edges",
2025-02-24T16:33:40.9159714Z         ],
2025-02-24T16:33:40.9159787Z     )
2025-02-24T16:33:40.9159872Z     def test_prepare_plot_data(
2025-02-24T16:33:40.9159946Z         self,
2025-02-24T16:33:40.9160036Z         plotter_prepare_plot_data,
2025-02-24T16:33:40.9160113Z         request,
2025-02-24T16:33:40.9160185Z         attribute,
2025-02-24T16:33:40.9160255Z     ):
2025-02-24T16:33:40.9160327Z         """
2025-02-24T16:33:40.9160464Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:33:40.9160535Z     
2025-02-24T16:33:40.9160610Z         Parameters:
2025-02-24T16:33:40.9160687Z         -----------
2025-02-24T16:33:40.9160863Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:33:40.9160965Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9161129Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:33:40.9161197Z         """
2025-02-24T16:33:40.9161307Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9161566Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:33:40.9161715Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:33:40.9161870Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:33:40.9162024Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:33:40.9162147Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:33:40.9162266Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:33:40.9162390Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:33:40.9162395Z 
2025-02-24T16:33:40.9162535Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:33:40.9162650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9162654Z 
2025-02-24T16:33:40.9163030Z args = (<function assert_allclose.<locals>.compare at 0x7ff502fec400>, array([12466.53861691, 14269.7609746 , 11910.79400472,...210447, 12126.50399598,
2025-02-24T16:33:40.9163207Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-02-24T16:33:40.9163339Z        11042.97481792]))
2025-02-24T16:33:40.9163750Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9163756Z 
2025-02-24T16:33:40.9163883Z     @wraps(func)
2025-02-24T16:33:40.9164027Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9164127Z         with self._recreate_cm():
2025-02-24T16:33:40.9164220Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9164307Z E           AssertionError: 
2025-02-24T16:33:40.9164419Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9164489Z E           
2025-02-24T16:33:40.9164585Z E           (shapes (379,), (381,) mismatch)
2025-02-24T16:33:40.9164725Z E            x: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-02-24T16:33:40.9164842Z E                  11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-02-24T16:33:40.9164969Z E                  14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-02-24T16:33:40.9165099Z E            y: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-02-24T16:33:40.9165211Z E                  13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-02-24T16:33:40.9165334Z E                  11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-02-24T16:33:40.9165338Z 
2025-02-24T16:33:40.9165536Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9165797Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.9166041Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9166313Z 	['O III', 'Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:33:40.9166464Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.9166780Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV'] were not found in the provided wavelength range.
2025-02-24T16:33:40.9167120Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _______
2025-02-24T16:33:40.9167128Z 
2025-02-24T16:33:40.9167705Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f30800>
2025-02-24T16:33:40.9168124Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7ff502fae840>
2025-02-24T16:33:40.9168619Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>)
2025-02-24T16:33:40.9168861Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl0]>>
2025-02-24T16:33:40.9168865Z 
2025-02-24T16:33:40.9168956Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9169272Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T16:33:40.9169343Z     ):
2025-02-24T16:33:40.9169415Z         """
2025-02-24T16:33:40.9169543Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:33:40.9169614Z     
2025-02-24T16:33:40.9169738Z         Compares generated plot data with regression data.
2025-02-24T16:33:40.9169807Z     
2025-02-24T16:33:40.9169881Z         Parameters:
2025-02-24T16:33:40.9169957Z         -----------
2025-02-24T16:33:40.9170118Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T16:33:40.9170278Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T16:33:40.9170378Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9170448Z         """
2025-02-24T16:33:40.9170594Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T16:33:40.9170775Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9171064Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T16:33:40.9171315Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:33:40.9171478Z             expected_values = expected.get(
2025-02-24T16:33:40.9171592Z                 "plot_data_hdf/" + item
2025-02-24T16:33:40.9171678Z             ).values.flatten()
2025-02-24T16:33:40.9171816Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T16:33:40.9171884Z     
2025-02-24T16:33:40.9172020Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:33:40.9172121Z                 np.testing.assert_allclose(
2025-02-24T16:33:40.9172205Z                     expected_values,
2025-02-24T16:33:40.9172293Z                     actual_values,
2025-02-24T16:33:40.9172369Z                     rtol=0.3,
2025-02-24T16:33:40.9172451Z                     atol=3,
2025-02-24T16:33:40.9172519Z                 )
2025-02-24T16:33:40.9172594Z             else:
2025-02-24T16:33:40.9172736Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:33:40.9172803Z     
2025-02-24T16:33:40.9172914Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T16:33:40.9173034Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T16:33:40.9173137Z             if isinstance(data.get_label(), str):
2025-02-24T16:33:40.9173214Z                 assert (
2025-02-24T16:33:40.9173337Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T16:33:40.9173427Z                     == data.get_label()
2025-02-24T16:33:40.9173495Z                 )
2025-02-24T16:33:40.9173709Z             if isinstance(data, Line2D):
2025-02-24T16:33:40.9173803Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9173894Z                     data.get_xydata(),
2025-02-24T16:33:40.9174030Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T16:33:40.9174109Z                     rtol=0.3,
2025-02-24T16:33:40.9174191Z                     atol=3,
2025-02-24T16:33:40.9174259Z                 )
2025-02-24T16:33:40.9174263Z 
2025-02-24T16:33:40.9174411Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T16:33:40.9174524Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9174528Z 
2025-02-24T16:33:40.9174781Z args = (<function assert_allclose.<locals>.compare at 0x7ff4de914d60>, array([[1.10e+04, 1.67e+02],
2025-02-24T16:33:40.9174863Z        [1.19e+04, 1.67e+0...,
2025-02-24T16:33:40.9174939Z        [1.82e+04, 0.00e+00],
2025-02-24T16:33:40.9175020Z        [1.91e+04, 0.00e+00],
2025-02-24T16:33:40.9175094Z        [1.91e+04, 0.00e+00],
2025-02-24T16:33:40.9175174Z        [2.00e+04, 0.00e+00]]))
2025-02-24T16:33:40.9175412Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:33:40.9175416Z 
2025-02-24T16:33:40.9175505Z     @wraps(func)
2025-02-24T16:33:40.9175661Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9175915Z         with self._recreate_cm():
2025-02-24T16:33:40.9176067Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9176205Z E           AssertionError: 
2025-02-24T16:33:40.9176381Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:40.9176503Z E           
2025-02-24T16:33:40.9176612Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T16:33:40.9176710Z E           Max absolute difference: 22.
2025-02-24T16:33:40.9176799Z E           Max relative difference: 0.8
2025-02-24T16:33:40.9176891Z E            x: array([[1.10e+04, 1.67e+02],
2025-02-24T16:33:40.9176972Z E                  [1.19e+04, 1.67e+02],
2025-02-24T16:33:40.9177060Z E                  [1.19e+04, 7.60e+01],...
2025-02-24T16:33:40.9177145Z E            y: array([[1.10e+04, 1.89e+02],
2025-02-24T16:33:40.9177229Z E                  [1.19e+04, 1.89e+02],
2025-02-24T16:33:40.9177462Z E                  [1.19e+04, 8.20e+01],...
2025-02-24T16:33:40.9177467Z 
2025-02-24T16:33:40.9177680Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9177840Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.9178089Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9178525Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:420)
2025-02-24T16:33:40.9178683Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.9179121Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:420 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-02-24T16:33:40.9179482Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _______
2025-02-24T16:33:40.9179489Z 
2025-02-24T16:33:40.9179936Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f321e0>
2025-02-24T16:33:40.9180344Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7ff4ea4586b0>
2025-02-24T16:33:40.9180832Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>)
2025-02-24T16:33:40.9181072Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl1]>>
2025-02-24T16:33:40.9181076Z 
2025-02-24T16:33:40.9181169Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9181457Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T16:33:40.9181530Z     ):
2025-02-24T16:33:40.9181608Z         """
2025-02-24T16:33:40.9181737Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:33:40.9181809Z     
2025-02-24T16:33:40.9181934Z         Compares generated plot data with regression data.
2025-02-24T16:33:40.9182005Z     
2025-02-24T16:33:40.9182080Z         Parameters:
2025-02-24T16:33:40.9182166Z         -----------
2025-02-24T16:33:40.9182326Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T16:33:40.9182476Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T16:33:40.9182608Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9182733Z         """
2025-02-24T16:33:40.9182897Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T16:33:40.9183075Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9183363Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T16:33:40.9183608Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:33:40.9183708Z             expected_values = expected.get(
2025-02-24T16:33:40.9183802Z                 "plot_data_hdf/" + item
2025-02-24T16:33:40.9183886Z             ).values.flatten()
2025-02-24T16:33:40.9184021Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T16:33:40.9184213Z     
2025-02-24T16:33:40.9184344Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:33:40.9184441Z                 np.testing.assert_allclose(
2025-02-24T16:33:40.9184524Z                     expected_values,
2025-02-24T16:33:40.9184609Z                     actual_values,
2025-02-24T16:33:40.9184686Z                     rtol=0.3,
2025-02-24T16:33:40.9184767Z                     atol=3,
2025-02-24T16:33:40.9184842Z                 )
2025-02-24T16:33:40.9184912Z             else:
2025-02-24T16:33:40.9185049Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:33:40.9185119Z     
2025-02-24T16:33:40.9185231Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T16:33:40.9185350Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T16:33:40.9185453Z             if isinstance(data.get_label(), str):
2025-02-24T16:33:40.9185533Z                 assert (
2025-02-24T16:33:40.9185652Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T16:33:40.9185747Z                     == data.get_label()
2025-02-24T16:33:40.9185815Z                 )
2025-02-24T16:33:40.9185910Z             if isinstance(data, Line2D):
2025-02-24T16:33:40.9186000Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9186089Z                     data.get_xydata(),
2025-02-24T16:33:40.9186228Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T16:33:40.9186303Z                     rtol=0.3,
2025-02-24T16:33:40.9186380Z                     atol=3,
2025-02-24T16:33:40.9186449Z                 )
2025-02-24T16:33:40.9186456Z 
2025-02-24T16:33:40.9186605Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T16:33:40.9186721Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9186730Z 
2025-02-24T16:33:40.9186975Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e4303240>, array([[1.10e+04, 1.67e+02],
2025-02-24T16:33:40.9187059Z        [1.19e+04, 1.67e+0...,
2025-02-24T16:33:40.9187136Z        [1.82e+04, 0.00e+00],
2025-02-24T16:33:40.9187214Z        [1.91e+04, 0.00e+00],
2025-02-24T16:33:40.9187439Z        [1.91e+04, 0.00e+00],
2025-02-24T16:33:40.9187526Z        [2.00e+04, 0.00e+00]]))
2025-02-24T16:33:40.9187773Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:33:40.9187777Z 
2025-02-24T16:33:40.9187850Z     @wraps(func)
2025-02-24T16:33:40.9187938Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9188023Z         with self._recreate_cm():
2025-02-24T16:33:40.9188230Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9188314Z E           AssertionError: 
2025-02-24T16:33:40.9188424Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:40.9188498Z E           
2025-02-24T16:33:40.9188593Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T16:33:40.9188688Z E           Max absolute difference: 22.
2025-02-24T16:33:40.9188781Z E           Max relative difference: 0.8
2025-02-24T16:33:40.9188873Z E            x: array([[1.10e+04, 1.67e+02],
2025-02-24T16:33:40.9188952Z E                  [1.19e+04, 1.67e+02],
2025-02-24T16:33:40.9189039Z E                  [1.19e+04, 7.60e+01],...
2025-02-24T16:33:40.9189129Z E            y: array([[1.10e+04, 1.89e+02],
2025-02-24T16:33:40.9189207Z E                  [1.19e+04, 1.89e+02],
2025-02-24T16:33:40.9189291Z E                  [1.19e+04, 8.20e+01],...
2025-02-24T16:33:40.9189294Z 
2025-02-24T16:33:40.9189499Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9189708Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _______
2025-02-24T16:33:40.9189712Z 
2025-02-24T16:33:40.9189975Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f325d0>
2025-02-24T16:33:40.9190274Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7ff4ff49e900>
2025-02-24T16:33:40.9191248Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>)
2025-02-24T16:33:40.9191562Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl4]>>
2025-02-24T16:33:40.9191567Z 
2025-02-24T16:33:40.9192571Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9192576Z 
2025-02-24T16:33:40.9193248Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply3__.h5
2025-02-24T16:33:40.9193252Z 
2025-02-24T16:33:40.9193575Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9193580Z 
2025-02-24T16:33:40.9194229Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply8__.h5
2025-02-24T16:33:40.9194237Z 
2025-02-24T16:33:40.9194553Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9194557Z 
2025-02-24T16:33:40.9195254Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data14__.h5
2025-02-24T16:33:40.9195261Z 
2025-02-24T16:33:40.9195649Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9195656Z 
2025-02-24T16:33:40.9196664Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply10__.h5
2025-02-24T16:33:40.9196672Z 
2025-02-24T16:33:40.9196981Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9196985Z 
2025-02-24T16:33:40.9197872Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/plasma/equilibrium/tests/test_rate_matrix/test_rate_matrix_solver__collisional_rate_solver0-radiative_transitions0__.h5
2025-02-24T16:33:40.9197878Z 
2025-02-24T16:33:40.9198195Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9198335Z 
2025-02-24T16:33:40.9199034Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data2__.h5
2025-02-24T16:33:40.9199038Z 
2025-02-24T16:33:40.9199550Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9199561Z 
2025-02-24T16:33:40.9200548Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data15__.h5
2025-02-24T16:33:40.9200554Z 
2025-02-24T16:33:40.9200861Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9200865Z 
2025-02-24T16:33:40.9201517Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply2__.h5
2025-02-24T16:33:40.9201522Z 
2025-02-24T16:33:40.9201836Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9201840Z 
2025-02-24T16:33:40.9202489Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply6__.h5
2025-02-24T16:33:40.9202633Z 
2025-02-24T16:33:40.9202943Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9202947Z 
2025-02-24T16:33:40.9203633Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data4__.h5
2025-02-24T16:33:40.9203638Z 
2025-02-24T16:33:40.9203952Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9203956Z 
2025-02-24T16:33:40.9205047Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data6__.h5
2025-02-24T16:33:40.9205060Z 
2025-02-24T16:33:40.9205430Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9205434Z 
2025-02-24T16:33:40.9206080Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply1__.h5
2025-02-24T16:33:40.9206084Z 
2025-02-24T16:33:40.9206385Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9206393Z 
2025-02-24T16:33:40.9207083Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data12__.h5
2025-02-24T16:33:40.9207088Z 
2025-02-24T16:33:40.9207502Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9207510Z 
2025-02-24T16:33:40.9208192Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data13__.h5
2025-02-24T16:33:40.9208196Z 
2025-02-24T16:33:40.9208508Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9208511Z 
2025-02-24T16:33:40.9209528Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl0__.h5
2025-02-24T16:33:40.9209537Z 
2025-02-24T16:33:40.9210011Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9210016Z 
2025-02-24T16:33:40.9210668Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply15__.h5
2025-02-24T16:33:40.9210677Z 
2025-02-24T16:33:40.9210772Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9210933Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T16:33:40.9211007Z     ):
2025-02-24T16:33:40.9211076Z         """
2025-02-24T16:33:40.9211211Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:33:40.9211282Z     
2025-02-24T16:33:40.9211409Z         Compares generated plot data with regression data.
2025-02-24T16:33:40.9211480Z     
2025-02-24T16:33:40.9211557Z         Parameters:
2025-02-24T16:33:40.9211635Z         -----------
2025-02-24T16:33:40.9211794Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T16:33:40.9211957Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T16:33:40.9212058Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9212244Z         """
2025-02-24T16:33:40.9212340Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T16:33:40.9212447Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9212616Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T16:33:40.9212761Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:33:40.9212861Z             expected_values = expected.get(
2025-02-24T16:33:40.9212951Z                 "plot_data_hdf/" + item
2025-02-24T16:33:40.9213035Z             ).values.flatten()
2025-02-24T16:33:40.9213174Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T16:33:40.9213241Z     
2025-02-24T16:33:40.9213374Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:33:40.9213466Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9213552Z                     expected_values,
2025-02-24T16:33:40.9213638Z                     actual_values,
2025-02-24T16:33:40.9213719Z                     rtol=0.3,
2025-02-24T16:33:40.9213798Z                     atol=3,
2025-02-24T16:33:40.9213893Z                 )
2025-02-24T16:33:40.9213899Z 
2025-02-24T16:33:40.9214158Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-02-24T16:33:40.9214354Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9214361Z 
2025-02-24T16:33:40.9215003Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e46da660>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  1...]), array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:33:40.9215093Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T16:33:40.9215332Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:33:40.9215336Z 
2025-02-24T16:33:40.9215412Z     @wraps(func)
2025-02-24T16:33:40.9215499Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9215588Z         with self._recreate_cm():
2025-02-24T16:33:40.9215681Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9215763Z E           AssertionError: 
2025-02-24T16:33:40.9215870Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:40.9215941Z E           
2025-02-24T16:33:40.9216042Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:33:40.9216135Z E           Max absolute difference: 34
2025-02-24T16:33:40.9216233Z E           Max relative difference: 0.71428571
2025-02-24T16:33:40.9216380Z E            x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:33:40.9216560Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:33:40.9216706Z E            y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:33:40.9216793Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:33:40.9216802Z 
2025-02-24T16:33:40.9217008Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9217170Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.9217543Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9217799Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:33:40.9217949Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.9218259Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:33:40.9218465Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _______
2025-02-24T16:33:40.9218469Z 
2025-02-24T16:33:40.9218811Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f32690>
2025-02-24T16:33:40.9219345Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7ff4e82a9880>
2025-02-24T16:33:40.9220074Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>)
2025-02-24T16:33:40.9220319Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl5]>>
2025-02-24T16:33:40.9220323Z 
2025-02-24T16:33:40.9220414Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9220575Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T16:33:40.9220650Z     ):
2025-02-24T16:33:40.9220719Z         """
2025-02-24T16:33:40.9220856Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:33:40.9220927Z     
2025-02-24T16:33:40.9221052Z         Compares generated plot data with regression data.
2025-02-24T16:33:40.9221123Z     
2025-02-24T16:33:40.9221197Z         Parameters:
2025-02-24T16:33:40.9221275Z         -----------
2025-02-24T16:33:40.9221431Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T16:33:40.9221589Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T16:33:40.9221689Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9221758Z         """
2025-02-24T16:33:40.9221864Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T16:33:40.9221971Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9222140Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T16:33:40.9222288Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:33:40.9222390Z             expected_values = expected.get(
2025-02-24T16:33:40.9222482Z                 "plot_data_hdf/" + item
2025-02-24T16:33:40.9222566Z             ).values.flatten()
2025-02-24T16:33:40.9222699Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T16:33:40.9222766Z     
2025-02-24T16:33:40.9222900Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:33:40.9223004Z                 np.testing.assert_allclose(
2025-02-24T16:33:40.9223087Z                     expected_values,
2025-02-24T16:33:40.9223171Z                     actual_values,
2025-02-24T16:33:40.9223248Z                     rtol=0.3,
2025-02-24T16:33:40.9223329Z                     atol=3,
2025-02-24T16:33:40.9223399Z                 )
2025-02-24T16:33:40.9223473Z             else:
2025-02-24T16:33:40.9223606Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:33:40.9223679Z     
2025-02-24T16:33:40.9223792Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T16:33:40.9224030Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T16:33:40.9224136Z             if isinstance(data.get_label(), str):
2025-02-24T16:33:40.9224211Z                 assert (
2025-02-24T16:33:40.9224335Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T16:33:40.9224421Z                     == data.get_label()
2025-02-24T16:33:40.9224497Z                 )
2025-02-24T16:33:40.9224675Z             if isinstance(data, Line2D):
2025-02-24T16:33:40.9224829Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9224973Z                     data.get_xydata(),
2025-02-24T16:33:40.9225201Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T16:33:40.9225335Z                     rtol=0.3,
2025-02-24T16:33:40.9225473Z                     atol=3,
2025-02-24T16:33:40.9225559Z                 )
2025-02-24T16:33:40.9225564Z 
2025-02-24T16:33:40.9225719Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T16:33:40.9225837Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9225841Z 
2025-02-24T16:33:40.9226094Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e750b560>, array([[1.10e+04, 2.72e+02],
2025-02-24T16:33:40.9226169Z        [1.19e+04, 2.72e+0...,
2025-02-24T16:33:40.9226251Z        [1.82e+04, 5.00e+00],
2025-02-24T16:33:40.9226330Z        [1.91e+04, 5.00e+00],
2025-02-24T16:33:40.9226510Z        [1.91e+04, 0.00e+00],
2025-02-24T16:33:40.9226591Z        [2.00e+04, 0.00e+00]]))
2025-02-24T16:33:40.9226830Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:33:40.9226835Z 
2025-02-24T16:33:40.9226914Z     @wraps(func)
2025-02-24T16:33:40.9226998Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9227081Z         with self._recreate_cm():
2025-02-24T16:33:40.9227171Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9227399Z E           AssertionError: 
2025-02-24T16:33:40.9227519Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:40.9227591Z E           
2025-02-24T16:33:40.9227692Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T16:33:40.9227790Z E           Max absolute difference: 34.
2025-02-24T16:33:40.9227884Z E           Max relative difference: 0.65
2025-02-24T16:33:40.9227977Z E            x: array([[1.10e+04, 2.72e+02],
2025-02-24T16:33:40.9228061Z E                  [1.19e+04, 2.72e+02],
2025-02-24T16:33:40.9228156Z E                  [1.19e+04, 1.10e+02],...
2025-02-24T16:33:40.9228242Z E            y: array([[1.10e+04, 3.06e+02],
2025-02-24T16:33:40.9228328Z E                  [1.19e+04, 3.06e+02],
2025-02-24T16:33:40.9228410Z E                  [1.19e+04, 1.18e+02],...
2025-02-24T16:33:40.9228419Z 
2025-02-24T16:33:40.9228630Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9228793Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.9229043Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9229381Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:33:40.9229540Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.9230171Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T16:33:40.9230537Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _______
2025-02-24T16:33:40.9230542Z 
2025-02-24T16:33:40.9230806Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f32b10>
2025-02-24T16:33:40.9231127Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7ff4fb1887a0>
2025-02-24T16:33:40.9231232Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9231530Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T16:33:40.9231682Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T16:33:40.9231886Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>)
2025-02-24T16:33:40.9232143Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply0]>>
2025-02-24T16:33:40.9232150Z 
2025-02-24T16:33:40.9232248Z     def test_generate_plot_ply(
2025-02-24T16:33:40.9232415Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9232493Z     ):
2025-02-24T16:33:40.9232563Z         """
2025-02-24T16:33:40.9232698Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:33:40.9232766Z     
2025-02-24T16:33:40.9232896Z         Compares generated plot data with regression data.
2025-02-24T16:33:40.9232968Z     
2025-02-24T16:33:40.9233047Z         Parameters:
2025-02-24T16:33:40.9233126Z         ----------
2025-02-24T16:33:40.9233288Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T16:33:40.9233430Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T16:33:40.9233527Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9233602Z         """
2025-02-24T16:33:40.9233700Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9233917Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9234099Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9234165Z     
2025-02-24T16:33:40.9234315Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:33:40.9234411Z             expected_values = expected.get(
2025-02-24T16:33:40.9234504Z                 "plot_data_hdf/" + item
2025-02-24T16:33:40.9234597Z             ).values.flatten()
2025-02-24T16:33:40.9234735Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T16:33:40.9234812Z     
2025-02-24T16:33:40.9234949Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:33:40.9235047Z                 np.testing.assert_allclose(
2025-02-24T16:33:40.9235132Z                     expected_values,
2025-02-24T16:33:40.9235218Z                     actual_values,
2025-02-24T16:33:40.9235368Z                     rtol=0.3,
2025-02-24T16:33:40.9235499Z                     atol=3,
2025-02-24T16:33:40.9235620Z                 )
2025-02-24T16:33:40.9235734Z             else:
2025-02-24T16:33:40.9235965Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:33:40.9236136Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9236264Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9236356Z             if data.stackgroup:
2025-02-24T16:33:40.9236432Z                 assert (
2025-02-24T16:33:40.9236522Z                     data.stackgroup
2025-02-24T16:33:40.9236598Z                     == getattr(
2025-02-24T16:33:40.9236716Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9236817Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9236899Z                     ).decode()
2025-02-24T16:33:40.9236974Z                 )
2025-02-24T16:33:40.9237054Z             if data.name:
2025-02-24T16:33:40.9237136Z                 assert (
2025-02-24T16:33:40.9237216Z                     data.name
2025-02-24T16:33:40.9237479Z                     == getattr(
2025-02-24T16:33:40.9237600Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9237699Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9237781Z                     ).decode()
2025-02-24T16:33:40.9237851Z                 )
2025-02-24T16:33:40.9237949Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9238022Z                 data.x,
2025-02-24T16:33:40.9238136Z                 expected.get(group + "x").values.flatten(),
2025-02-24T16:33:40.9238340Z                 rtol=0.3,
2025-02-24T16:33:40.9238423Z                 atol=3,
2025-02-24T16:33:40.9238493Z             )
2025-02-24T16:33:40.9238588Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9238665Z                 data.y,
2025-02-24T16:33:40.9238769Z                 expected.get(group + "y").values.flatten(),
2025-02-24T16:33:40.9238849Z                 rtol=0.3,
2025-02-24T16:33:40.9238924Z                 atol=3,
2025-02-24T16:33:40.9238999Z             )
2025-02-24T16:33:40.9239003Z 
2025-02-24T16:33:40.9239155Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T16:33:40.9239270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9239274Z 
2025-02-24T16:33:40.9239686Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e07db6a0>, array([167, 167,  76,  76,  34,  34,  18,  18,   3,   ...]), array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:33:40.9239772Z          0,   0,   0,   0,   0,   0,   0]))
2025-02-24T16:33:40.9240022Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:33:40.9240026Z 
2025-02-24T16:33:40.9240105Z     @wraps(func)
2025-02-24T16:33:40.9240188Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9240280Z         with self._recreate_cm():
2025-02-24T16:33:40.9240369Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9240578Z E           AssertionError: 
2025-02-24T16:33:40.9240684Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:40.9240761Z E           
2025-02-24T16:33:40.9240864Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:33:40.9240956Z E           Max absolute difference: 22
2025-02-24T16:33:40.9241053Z E           Max relative difference: 0.8
2025-02-24T16:33:40.9241192Z E            x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T16:33:40.9241291Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:33:40.9241425Z E            y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:33:40.9241517Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:33:40.9241521Z 
2025-02-24T16:33:40.9241730Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9241883Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.9242322Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9243013Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:522)
2025-02-24T16:33:40.9243174Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.9243611Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:522 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-02-24T16:33:40.9243813Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _______
2025-02-24T16:33:40.9243817Z 
2025-02-24T16:33:40.9244085Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f335f0>
2025-02-24T16:33:40.9244407Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7ff4fb1adee0>
2025-02-24T16:33:40.9244507Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9244666Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T16:33:40.9244802Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T16:33:40.9245010Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>)
2025-02-24T16:33:40.9245253Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply1]>>
2025-02-24T16:33:40.9245263Z 
2025-02-24T16:33:40.9245360Z     def test_generate_plot_ply(
2025-02-24T16:33:40.9245793Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9245912Z     ):
2025-02-24T16:33:40.9246037Z         """
2025-02-24T16:33:40.9246257Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:33:40.9246346Z     
2025-02-24T16:33:40.9246485Z         Compares generated plot data with regression data.
2025-02-24T16:33:40.9246553Z     
2025-02-24T16:33:40.9246639Z         Parameters:
2025-02-24T16:33:40.9246713Z         ----------
2025-02-24T16:33:40.9246878Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T16:33:40.9247015Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T16:33:40.9247119Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9247195Z         """
2025-02-24T16:33:40.9247474Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9247601Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9247781Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9247854Z     
2025-02-24T16:33:40.9247999Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:33:40.9248103Z             expected_values = expected.get(
2025-02-24T16:33:40.9248196Z                 "plot_data_hdf/" + item
2025-02-24T16:33:40.9248281Z             ).values.flatten()
2025-02-24T16:33:40.9248426Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T16:33:40.9248622Z     
2025-02-24T16:33:40.9248763Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:33:40.9248856Z                 np.testing.assert_allclose(
2025-02-24T16:33:40.9248946Z                     expected_values,
2025-02-24T16:33:40.9249032Z                     actual_values,
2025-02-24T16:33:40.9249110Z                     rtol=0.3,
2025-02-24T16:33:40.9249252Z                     atol=3,
2025-02-24T16:33:40.9249371Z                 )
2025-02-24T16:33:40.9249493Z             else:
2025-02-24T16:33:40.9249724Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:33:40.9249896Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9250085Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9250197Z             if data.stackgroup:
2025-02-24T16:33:40.9250280Z                 assert (
2025-02-24T16:33:40.9250367Z                     data.stackgroup
2025-02-24T16:33:40.9250453Z                     == getattr(
2025-02-24T16:33:40.9250562Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9250667Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9250752Z                     ).decode()
2025-02-24T16:33:40.9250822Z                 )
2025-02-24T16:33:40.9250905Z             if data.name:
2025-02-24T16:33:40.9250979Z                 assert (
2025-02-24T16:33:40.9251061Z                     data.name
2025-02-24T16:33:40.9251137Z                     == getattr(
2025-02-24T16:33:40.9251255Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9251356Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9251436Z                     ).decode()
2025-02-24T16:33:40.9251512Z                 )
2025-02-24T16:33:40.9251606Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9251687Z                 data.x,
2025-02-24T16:33:40.9251797Z                 expected.get(group + "x").values.flatten(),
2025-02-24T16:33:40.9251886Z                 rtol=0.3,
2025-02-24T16:33:40.9251959Z                 atol=3,
2025-02-24T16:33:40.9252038Z             )
2025-02-24T16:33:40.9252141Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9252213Z                 data.y,
2025-02-24T16:33:40.9252325Z                 expected.get(group + "y").values.flatten(),
2025-02-24T16:33:40.9252400Z                 rtol=0.3,
2025-02-24T16:33:40.9252483Z                 atol=3,
2025-02-24T16:33:40.9252552Z             )
2025-02-24T16:33:40.9252562Z 
2025-02-24T16:33:40.9252830Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T16:33:40.9252962Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9252966Z 
2025-02-24T16:33:40.9253369Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e5723c40>, array([167, 167,  76,  76,  34,  34,  18,  18,   3,   ...]), array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:33:40.9253463Z          0,   0,   0,   0,   0,   0,   0]))
2025-02-24T16:33:40.9253713Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:33:40.9253717Z 
2025-02-24T16:33:40.9253791Z     @wraps(func)
2025-02-24T16:33:40.9253877Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9253963Z         with self._recreate_cm():
2025-02-24T16:33:40.9254086Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9254230Z E           AssertionError: 
2025-02-24T16:33:40.9254418Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:40.9254542Z E           
2025-02-24T16:33:40.9254701Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:33:40.9254855Z E           Max absolute difference: 22
2025-02-24T16:33:40.9255013Z E           Max relative difference: 0.8
2025-02-24T16:33:40.9255166Z E            x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T16:33:40.9255346Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:33:40.9255483Z E            y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:33:40.9255574Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:33:40.9255578Z 
2025-02-24T16:33:40.9255782Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9255991Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _______
2025-02-24T16:33:40.9255994Z 
2025-02-24T16:33:40.9256258Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f33a40>
2025-02-24T16:33:40.9256581Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7ff4fe6f5fd0>
2025-02-24T16:33:40.9256681Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9256832Z     'data': [{'line': {'color': 'rgb(127, 0, 0)', 'shape': 'hv', 'width': 2.5},
2025-02-24T16:33:40.9256974Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T16:33:40.9257178Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>)
2025-02-24T16:33:40.9257544Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply4]>>
2025-02-24T16:33:40.9257549Z 
2025-02-24T16:33:40.9257643Z     def test_generate_plot_ply(
2025-02-24T16:33:40.9257808Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9257882Z     ):
2025-02-24T16:33:40.9257951Z         """
2025-02-24T16:33:40.9258089Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:33:40.9258156Z     
2025-02-24T16:33:40.9258291Z         Compares generated plot data with regression data.
2025-02-24T16:33:40.9258365Z     
2025-02-24T16:33:40.9258441Z         Parameters:
2025-02-24T16:33:40.9258521Z         ----------
2025-02-24T16:33:40.9258680Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T16:33:40.9258829Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T16:33:40.9258928Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9259004Z         """
2025-02-24T16:33:40.9259103Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9259209Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9259388Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9259456Z     
2025-02-24T16:33:40.9259610Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:33:40.9259851Z             expected_values = expected.get(
2025-02-24T16:33:40.9259943Z                 "plot_data_hdf/" + item
2025-02-24T16:33:40.9260035Z             ).values.flatten()
2025-02-24T16:33:40.9260175Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T16:33:40.9260248Z     
2025-02-24T16:33:40.9260380Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:33:40.9260513Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9260668Z                     expected_values,
2025-02-24T16:33:40.9260801Z                     actual_values,
2025-02-24T16:33:40.9260933Z                     rtol=0.3,
2025-02-24T16:33:40.9261057Z                     atol=3,
2025-02-24T16:33:40.9261178Z                 )
2025-02-24T16:33:40.9261184Z 
2025-02-24T16:33:40.9261430Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-02-24T16:33:40.9261567Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9261571Z 
2025-02-24T16:33:40.9261996Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e5722f20>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  1...]), array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:33:40.9262077Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T16:33:40.9262321Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:33:40.9262451Z 
2025-02-24T16:33:40.9262528Z     @wraps(func)
2025-02-24T16:33:40.9262618Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9262711Z         with self._recreate_cm():
2025-02-24T16:33:40.9262801Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9262892Z E           AssertionError: 
2025-02-24T16:33:40.9262996Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:40.9263074Z E           
2025-02-24T16:33:40.9263171Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:33:40.9263268Z E           Max absolute difference: 34
2025-02-24T16:33:40.9263376Z E           Max relative difference: 0.71428571
2025-02-24T16:33:40.9263518Z E            x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:33:40.9263615Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:33:40.9263749Z E            y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:33:40.9263844Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:33:40.9263848Z 
2025-02-24T16:33:40.9264056Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9264208Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.9264463Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9264841Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:33:40.9265111Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.9265612Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:33:40.9265819Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _______
2025-02-24T16:33:40.9265823Z 
2025-02-24T16:33:40.9266086Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f33b00>
2025-02-24T16:33:40.9266399Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7ff50a2c5370>
2025-02-24T16:33:40.9266501Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9266655Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T16:33:40.9266787Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T16:33:40.9266994Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>)
2025-02-24T16:33:40.9267495Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply5]>>
2025-02-24T16:33:40.9267501Z 
2025-02-24T16:33:40.9267606Z     def test_generate_plot_ply(
2025-02-24T16:33:40.9267780Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9267849Z     ):
2025-02-24T16:33:40.9267926Z         """
2025-02-24T16:33:40.9268054Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:33:40.9268131Z     
2025-02-24T16:33:40.9268255Z         Compares generated plot data with regression data.
2025-02-24T16:33:40.9268329Z     
2025-02-24T16:33:40.9268403Z         Parameters:
2025-02-24T16:33:40.9268482Z         ----------
2025-02-24T16:33:40.9268645Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T16:33:40.9268782Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T16:33:40.9268886Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9268955Z         """
2025-02-24T16:33:40.9269058Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9269165Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9269342Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9269415Z     
2025-02-24T16:33:40.9269559Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:33:40.9269661Z             expected_values = expected.get(
2025-02-24T16:33:40.9269920Z                 "plot_data_hdf/" + item
2025-02-24T16:33:40.9270068Z             ).values.flatten()
2025-02-24T16:33:40.9270304Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T16:33:40.9270419Z     
2025-02-24T16:33:40.9270638Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:33:40.9270798Z                 np.testing.assert_allclose(
2025-02-24T16:33:40.9270903Z                     expected_values,
2025-02-24T16:33:40.9270985Z                     actual_values,
2025-02-24T16:33:40.9271078Z                     rtol=0.3,
2025-02-24T16:33:40.9271165Z                     atol=3,
2025-02-24T16:33:40.9271235Z                 )
2025-02-24T16:33:40.9271311Z             else:
2025-02-24T16:33:40.9271448Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:33:40.9271554Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9271660Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9271755Z             if data.stackgroup:
2025-02-24T16:33:40.9271836Z                 assert (
2025-02-24T16:33:40.9271921Z                     data.stackgroup
2025-02-24T16:33:40.9272003Z                     == getattr(
2025-02-24T16:33:40.9272111Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9272216Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9272292Z                     ).decode()
2025-02-24T16:33:40.9272369Z                 )
2025-02-24T16:33:40.9272454Z             if data.name:
2025-02-24T16:33:40.9272534Z                 assert (
2025-02-24T16:33:40.9272620Z                     data.name
2025-02-24T16:33:40.9272695Z                     == getattr(
2025-02-24T16:33:40.9272804Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9272896Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9272978Z                     ).decode()
2025-02-24T16:33:40.9273052Z                 )
2025-02-24T16:33:40.9273150Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9273240Z                 data.x,
2025-02-24T16:33:40.9273436Z                 expected.get(group + "x").values.flatten(),
2025-02-24T16:33:40.9273567Z                 rtol=0.3,
2025-02-24T16:33:40.9273686Z                 atol=3,
2025-02-24T16:33:40.9273807Z             )
2025-02-24T16:33:40.9273960Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9274089Z                 data.y,
2025-02-24T16:33:40.9274258Z                 expected.get(group + "y").values.flatten(),
2025-02-24T16:33:40.9274424Z                 rtol=0.3,
2025-02-24T16:33:40.9274506Z                 atol=3,
2025-02-24T16:33:40.9274576Z             )
2025-02-24T16:33:40.9274581Z 
2025-02-24T16:33:40.9274733Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T16:33:40.9274856Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9274860Z 
2025-02-24T16:33:40.9275280Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e07db560>, array([272, 272, 110, 110,  62,  62,  33,  33,   7,   ...]), array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:33:40.9275366Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T16:33:40.9275604Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:33:40.9275608Z 
2025-02-24T16:33:40.9275688Z     @wraps(func)
2025-02-24T16:33:40.9275778Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9275867Z         with self._recreate_cm():
2025-02-24T16:33:40.9276060Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9276177Z E           AssertionError: 
2025-02-24T16:33:40.9276334Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:40.9276617Z E           
2025-02-24T16:33:40.9276785Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:33:40.9276991Z E           Max absolute difference: 34
2025-02-24T16:33:40.9277543Z E           Max relative difference: 0.65
2025-02-24T16:33:40.9277812Z E            x: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:33:40.9278108Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:33:40.9278321Z E            y: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:33:40.9278457Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:33:40.9278462Z 
2025-02-24T16:33:40.9278738Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9278913Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.9279312Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9288916Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:33:40.9289152Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.9289804Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T16:33:40.9290210Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-02-24T16:33:40.9290219Z 
2025-02-24T16:33:40.9290505Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f373b0>
2025-02-24T16:33:40.9290946Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9291525Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4de6bc2f0>
2025-02-24T16:33:40.9291869Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data0]>>
2025-02-24T16:33:40.9291874Z 
2025-02-24T16:33:40.9291977Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9292059Z         self,
2025-02-24T16:33:40.9292158Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9292263Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9292335Z         request,
2025-02-24T16:33:40.9292411Z     ):
2025-02-24T16:33:40.9292519Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9292707Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9292798Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9292971Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9293229Z             plot_object = getattr(
2025-02-24T16:33:40.9293361Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9293432Z             )
2025-02-24T16:33:40.9293533Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9293698Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9293813Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9293907Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9294040Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9294109Z                 )
2025-02-24T16:33:40.9294113Z 
2025-02-24T16:33:40.9294268Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9294383Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9294390Z 
2025-02-24T16:33:40.9294860Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e72ae3e0>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T16:33:40.9294968Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9295215Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9295349Z 
2025-02-24T16:33:40.9295428Z     @wraps(func)
2025-02-24T16:33:40.9295515Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9295598Z         with self._recreate_cm():
2025-02-24T16:33:40.9295686Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9295769Z E           AssertionError: 
2025-02-24T16:33:40.9295936Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9296055Z E           
2025-02-24T16:33:40.9296223Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:40.9296390Z E           Max absolute difference: 4.3299331e-05
2025-02-24T16:33:40.9296553Z E           Max relative difference: 4.76021355
2025-02-24T16:33:40.9296820Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9296913Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9297064Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9297144Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9297155Z 
2025-02-24T16:33:40.9297496Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9297730Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-02-24T16:33:40.9297734Z 
2025-02-24T16:33:40.9298003Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f37aa0>
2025-02-24T16:33:40.9298313Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9298647Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff500bcd7f0>
2025-02-24T16:33:40.9298923Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data1]>>
2025-02-24T16:33:40.9298927Z 
2025-02-24T16:33:40.9299024Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9299092Z         self,
2025-02-24T16:33:40.9299194Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9299283Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9299355Z         request,
2025-02-24T16:33:40.9299425Z     ):
2025-02-24T16:33:40.9299607Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9299964Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9300104Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9300403Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9300525Z             plot_object = getattr(
2025-02-24T16:33:40.9300790Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9300867Z             )
2025-02-24T16:33:40.9300965Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9301128Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9301233Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9301336Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9301469Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9301538Z                 )
2025-02-24T16:33:40.9301543Z 
2025-02-24T16:33:40.9301692Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9301806Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9301810Z 
2025-02-24T16:33:40.9302289Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e72439c0>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T16:33:40.9302393Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9302631Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9302635Z 
2025-02-24T16:33:40.9302710Z     @wraps(func)
2025-02-24T16:33:40.9302901Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9302987Z         with self._recreate_cm():
2025-02-24T16:33:40.9303073Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9303159Z E           AssertionError: 
2025-02-24T16:33:40.9303339Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9303456Z E           
2025-02-24T16:33:40.9303624Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:40.9303785Z E           Max absolute difference: 4.3299331e-05
2025-02-24T16:33:40.9303944Z E           Max relative difference: 4.76021355
2025-02-24T16:33:40.9304201Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9304287Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9304434Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9304515Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9304519Z 
2025-02-24T16:33:40.9304725Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9304947Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-02-24T16:33:40.9304954Z 
2025-02-24T16:33:40.9305216Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f37f80>
2025-02-24T16:33:40.9305521Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9305842Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff500bcd910>
2025-02-24T16:33:40.9306120Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data2]>>
2025-02-24T16:33:40.9306124Z 
2025-02-24T16:33:40.9306222Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9306291Z         self,
2025-02-24T16:33:40.9306427Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9306580Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9306705Z         request,
2025-02-24T16:33:40.9306814Z     ):
2025-02-24T16:33:40.9306991Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9307486Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9307632Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9307859Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9307944Z             plot_object = getattr(
2025-02-24T16:33:40.9308074Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9308279Z             )
2025-02-24T16:33:40.9308386Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9308548Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9308653Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9308754Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9308885Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9308963Z                 )
2025-02-24T16:33:40.9308967Z 
2025-02-24T16:33:40.9309119Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9309233Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9309237Z 
2025-02-24T16:33:40.9309705Z args = (<function assert_allclose.<locals>.compare at 0x7ff5038fbc40>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T16:33:40.9309812Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9310058Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9310062Z 
2025-02-24T16:33:40.9310140Z     @wraps(func)
2025-02-24T16:33:40.9310223Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9310312Z         with self._recreate_cm():
2025-02-24T16:33:40.9310511Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9310601Z E           AssertionError: 
2025-02-24T16:33:40.9310708Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9310783Z E           
2025-02-24T16:33:40.9310886Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:40.9310986Z E           Max absolute difference: 4.3299331e-05
2025-02-24T16:33:40.9311087Z E           Max relative difference: 4.76021355
2025-02-24T16:33:40.9311236Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9311328Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9311470Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9311556Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9311561Z 
2025-02-24T16:33:40.9311768Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9311999Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-02-24T16:33:40.9312004Z 
2025-02-24T16:33:40.9312273Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f28740>
2025-02-24T16:33:40.9312586Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9312914Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff50fec57c0>
2025-02-24T16:33:40.9313198Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data3]>>
2025-02-24T16:33:40.9313202Z 
2025-02-24T16:33:40.9313295Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9313371Z         self,
2025-02-24T16:33:40.9313465Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9313560Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9313635Z         request,
2025-02-24T16:33:40.9313703Z     ):
2025-02-24T16:33:40.9313818Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9314000Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9314091Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9314268Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9314359Z             plot_object = getattr(
2025-02-24T16:33:40.9314490Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9314562Z             )
2025-02-24T16:33:40.9314669Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9314921Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9315035Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9315133Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9315265Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9315342Z                 )
2025-02-24T16:33:40.9315346Z 
2025-02-24T16:33:40.9315498Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9315620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9315623Z 
2025-02-24T16:33:40.9316100Z args = (<function assert_allclose.<locals>.compare at 0x7ff5038fa3e0>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T16:33:40.9316205Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9316459Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9316463Z 
2025-02-24T16:33:40.9316536Z     @wraps(func)
2025-02-24T16:33:40.9316625Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9316719Z         with self._recreate_cm():
2025-02-24T16:33:40.9316807Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9316972Z E           AssertionError: 
2025-02-24T16:33:40.9317081Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9317157Z E           
2025-02-24T16:33:40.9317415Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:40.9317529Z E           Max absolute difference: 4.3299331e-05
2025-02-24T16:33:40.9317630Z E           Max relative difference: 4.76021355
2025-02-24T16:33:40.9317787Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9317877Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9318022Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9318112Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9318115Z 
2025-02-24T16:33:40.9318325Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9318557Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-02-24T16:33:40.9318565Z 
2025-02-24T16:33:40.9318842Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f29fa0>
2025-02-24T16:33:40.9319148Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9319479Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e62b5d00>
2025-02-24T16:33:40.9319760Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data4]>>
2025-02-24T16:33:40.9319764Z 
2025-02-24T16:33:40.9319860Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9319937Z         self,
2025-02-24T16:33:40.9320033Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9320126Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9320196Z         request,
2025-02-24T16:33:40.9320268Z     ):
2025-02-24T16:33:40.9320379Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9320563Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9320653Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9320829Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9320919Z             plot_object = getattr(
2025-02-24T16:33:40.9321046Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9321120Z             )
2025-02-24T16:33:40.9321223Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9321513Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9321628Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9321724Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9321855Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9321923Z                 )
2025-02-24T16:33:40.9321931Z 
2025-02-24T16:33:40.9322075Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9322195Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9322199Z 
2025-02-24T16:33:40.9322672Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e7262d40>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T16:33:40.9322782Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9323029Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9323036Z 
2025-02-24T16:33:40.9323110Z     @wraps(func)
2025-02-24T16:33:40.9323200Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9323284Z         with self._recreate_cm():
2025-02-24T16:33:40.9323379Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9323464Z E           AssertionError: 
2025-02-24T16:33:40.9323574Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9323991Z E           
2025-02-24T16:33:40.9324170Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:40.9324345Z E           Max absolute difference: 3.16368526e-05
2025-02-24T16:33:40.9324511Z E           Max relative difference: 178.93768705
2025-02-24T16:33:40.9324750Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9324887Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9325075Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9325171Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9325175Z 
2025-02-24T16:33:40.9325379Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9325606Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-02-24T16:33:40.9325609Z 
2025-02-24T16:33:40.9325879Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f2be30>
2025-02-24T16:33:40.9326193Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9326525Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e86fa9f0>
2025-02-24T16:33:40.9326801Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data5]>>
2025-02-24T16:33:40.9326806Z 
2025-02-24T16:33:40.9326905Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9326983Z         self,
2025-02-24T16:33:40.9327084Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9327177Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9327458Z         request,
2025-02-24T16:33:40.9327545Z     ):
2025-02-24T16:33:40.9327653Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9327840Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9327935Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9328106Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9328196Z             plot_object = getattr(
2025-02-24T16:33:40.9328321Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9328394Z             )
2025-02-24T16:33:40.9328492Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9328657Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9328766Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9329021Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9329160Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9329230Z                 )
2025-02-24T16:33:40.9329234Z 
2025-02-24T16:33:40.9329383Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9329495Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9329508Z 
2025-02-24T16:33:40.9329974Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e07db6a0>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T16:33:40.9330080Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9330336Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9330341Z 
2025-02-24T16:33:40.9330415Z     @wraps(func)
2025-02-24T16:33:40.9330512Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9330597Z         with self._recreate_cm():
2025-02-24T16:33:40.9330693Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9330784Z E           AssertionError: 
2025-02-24T16:33:40.9330893Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9330969Z E           
2025-02-24T16:33:40.9331068Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:40.9331284Z E           Max absolute difference: 3.16368526e-05
2025-02-24T16:33:40.9331383Z E           Max relative difference: 178.93768705
2025-02-24T16:33:40.9331541Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9331634Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9331776Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9331866Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9331870Z 
2025-02-24T16:33:40.9332074Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9332305Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-02-24T16:33:40.9332309Z 
2025-02-24T16:33:40.9332592Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f292e0>
2025-02-24T16:33:40.9332903Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9333235Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff503dd4d70>
2025-02-24T16:33:40.9333513Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data6]>>
2025-02-24T16:33:40.9333517Z 
2025-02-24T16:33:40.9333630Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9333704Z         self,
2025-02-24T16:33:40.9333800Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9333896Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9333968Z         request,
2025-02-24T16:33:40.9334045Z     ):
2025-02-24T16:33:40.9334147Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9334332Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9334422Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9334597Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9334686Z             plot_object = getattr(
2025-02-24T16:33:40.9334812Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9334885Z             )
2025-02-24T16:33:40.9334982Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9335146Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9335256Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9335354Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9335569Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9335642Z                 )
2025-02-24T16:33:40.9335646Z 
2025-02-24T16:33:40.9335795Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9335911Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9335919Z 
2025-02-24T16:33:40.9336377Z args = (<function assert_allclose.<locals>.compare at 0x7ff5038fa8e0>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T16:33:40.9336483Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9336721Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9336726Z 
2025-02-24T16:33:40.9336805Z     @wraps(func)
2025-02-24T16:33:40.9336892Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9336980Z         with self._recreate_cm():
2025-02-24T16:33:40.9337074Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9337159Z E           AssertionError: 
2025-02-24T16:33:40.9337441Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9337514Z E           
2025-02-24T16:33:40.9337619Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:40.9337723Z E           Max absolute difference: 3.16368526e-05
2025-02-24T16:33:40.9337940Z E           Max relative difference: 178.93768705
2025-02-24T16:33:40.9338095Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9338180Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9338329Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9338420Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9338423Z 
2025-02-24T16:33:40.9338621Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9338852Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-02-24T16:33:40.9338855Z 
2025-02-24T16:33:40.9339118Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f29280>
2025-02-24T16:33:40.9339432Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9339770Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e75ae240>
2025-02-24T16:33:40.9340045Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data7]>>
2025-02-24T16:33:40.9340049Z 
2025-02-24T16:33:40.9340148Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9340222Z         self,
2025-02-24T16:33:40.9340323Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9340417Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9340488Z         request,
2025-02-24T16:33:40.9340564Z     ):
2025-02-24T16:33:40.9340668Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9340850Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9340935Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9341111Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9341204Z             plot_object = getattr(
2025-02-24T16:33:40.9341327Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9341400Z             )
2025-02-24T16:33:40.9341498Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9341662Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9341766Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9341868Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9341999Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9342182Z                 )
2025-02-24T16:33:40.9342187Z 
2025-02-24T16:33:40.9342339Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9342450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9342454Z 
2025-02-24T16:33:40.9342922Z args = (<function assert_allclose.<locals>.compare at 0x7ff5038fa160>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T16:33:40.9343033Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9343272Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9343276Z 
2025-02-24T16:33:40.9343356Z     @wraps(func)
2025-02-24T16:33:40.9343439Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9343533Z         with self._recreate_cm():
2025-02-24T16:33:40.9343626Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9343716Z E           AssertionError: 
2025-02-24T16:33:40.9343828Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9343899Z E           
2025-02-24T16:33:40.9344004Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:40.9344101Z E           Max absolute difference: 3.16368526e-05
2025-02-24T16:33:40.9344204Z E           Max relative difference: 178.93768705
2025-02-24T16:33:40.9344440Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9344523Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9344672Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9344754Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9344758Z 
2025-02-24T16:33:40.9344957Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9345186Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-02-24T16:33:40.9345190Z 
2025-02-24T16:33:40.9345456Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f280b0>
2025-02-24T16:33:40.9345767Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9346094Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4df74ddc0>
2025-02-24T16:33:40.9346375Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data8]>>
2025-02-24T16:33:40.9346379Z 
2025-02-24T16:33:40.9346476Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9346549Z         self,
2025-02-24T16:33:40.9346650Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9346736Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9346815Z         request,
2025-02-24T16:33:40.9346882Z     ):
2025-02-24T16:33:40.9346988Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9347173Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9347411Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9347605Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9347690Z             plot_object = getattr(
2025-02-24T16:33:40.9347819Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9347891Z             )
2025-02-24T16:33:40.9347994Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9348157Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9348262Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9348362Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9348487Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9348564Z                 )
2025-02-24T16:33:40.9348568Z 
2025-02-24T16:33:40.9348850Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9348964Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9348968Z 
2025-02-24T16:33:40.9349436Z args = (<function assert_allclose.<locals>.compare at 0x7ff5038fbf60>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T16:33:40.9349540Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9349786Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9349790Z 
2025-02-24T16:33:40.9349870Z     @wraps(func)
2025-02-24T16:33:40.9349952Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9350043Z         with self._recreate_cm():
2025-02-24T16:33:40.9350132Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9350222Z E           AssertionError: 
2025-02-24T16:33:40.9350332Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9350408Z E           
2025-02-24T16:33:40.9350513Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:40.9350613Z E           Max absolute difference: 5.1807441e+47
2025-02-24T16:33:40.9350713Z E           Max relative difference: 4.76021355
2025-02-24T16:33:40.9350863Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9351069Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9351217Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9351301Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9351304Z 
2025-02-24T16:33:40.9351510Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9351727Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-02-24T16:33:40.9351731Z 
2025-02-24T16:33:40.9352003Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f28170>
2025-02-24T16:33:40.9352323Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9352651Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4df7d71d0>
2025-02-24T16:33:40.9352935Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data9]>>
2025-02-24T16:33:40.9352938Z 
2025-02-24T16:33:40.9353032Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9353114Z         self,
2025-02-24T16:33:40.9353216Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9353303Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9353378Z         request,
2025-02-24T16:33:40.9353447Z     ):
2025-02-24T16:33:40.9353561Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9353742Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9353835Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9354015Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9354101Z             plot_object = getattr(
2025-02-24T16:33:40.9354231Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9354300Z             )
2025-02-24T16:33:40.9354410Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9354569Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9354681Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9354784Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9354909Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9354986Z                 )
2025-02-24T16:33:40.9354990Z 
2025-02-24T16:33:40.9355134Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9355336Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9355340Z 
2025-02-24T16:33:40.9355814Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e07db600>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T16:33:40.9355915Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9356167Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9356171Z 
2025-02-24T16:33:40.9356247Z     @wraps(func)
2025-02-24T16:33:40.9356336Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9356432Z         with self._recreate_cm():
2025-02-24T16:33:40.9356521Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9356610Z E           AssertionError: 
2025-02-24T16:33:40.9356715Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9356791Z E           
2025-02-24T16:33:40.9356891Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:40.9356996Z E           Max absolute difference: 5.1807441e+47
2025-02-24T16:33:40.9357097Z E           Max relative difference: 4.76021355
2025-02-24T16:33:40.9357392Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9357514Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9357785Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9357878Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9357882Z 
2025-02-24T16:33:40.9358088Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9358309Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-02-24T16:33:40.9358312Z 
2025-02-24T16:33:40.9358584Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f28230>
2025-02-24T16:33:40.9358893Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9359221Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e217bd10>
2025-02-24T16:33:40.9359505Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data10]>>
2025-02-24T16:33:40.9359512Z 
2025-02-24T16:33:40.9359603Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9359682Z         self,
2025-02-24T16:33:40.9359776Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9359869Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9359940Z         request,
2025-02-24T16:33:40.9360013Z     ):
2025-02-24T16:33:40.9360122Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9360303Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9360394Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9360569Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9360662Z             plot_object = getattr(
2025-02-24T16:33:40.9360789Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9360857Z             )
2025-02-24T16:33:40.9360960Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9361121Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9361230Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9361323Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9361458Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9361533Z                 )
2025-02-24T16:33:40.9361537Z 
2025-02-24T16:33:40.9361681Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9361796Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9362062Z 
2025-02-24T16:33:40.9362532Z args = (<function assert_allclose.<locals>.compare at 0x7ff5038fa8e0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T16:33:40.9362640Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9362886Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9362894Z 
2025-02-24T16:33:40.9362968Z     @wraps(func)
2025-02-24T16:33:40.9363057Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9363141Z         with self._recreate_cm():
2025-02-24T16:33:40.9363234Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9363328Z E           AssertionError: 
2025-02-24T16:33:40.9363434Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9363511Z E           
2025-02-24T16:33:40.9363610Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:40.9363717Z E           Max absolute difference: 5.1807441e+47
2025-02-24T16:33:40.9363811Z E           Max relative difference: 4.76021355
2025-02-24T16:33:40.9363962Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9364051Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9364197Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9364368Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9364372Z 
2025-02-24T16:33:40.9364570Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9364798Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-02-24T16:33:40.9364802Z 
2025-02-24T16:33:40.9365073Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f282f0>
2025-02-24T16:33:40.9365387Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9365720Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff5025d2ed0>
2025-02-24T16:33:40.9365996Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data11]>>
2025-02-24T16:33:40.9366000Z 
2025-02-24T16:33:40.9366098Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9366182Z         self,
2025-02-24T16:33:40.9366275Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9366371Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9366442Z         request,
2025-02-24T16:33:40.9366516Z     ):
2025-02-24T16:33:40.9366625Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9366812Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9366904Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9367075Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9367169Z             plot_object = getattr(
2025-02-24T16:33:40.9367464Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9367545Z             )
2025-02-24T16:33:40.9367645Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9367809Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9367926Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9368024Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9368156Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9368227Z                 )
2025-02-24T16:33:40.9368231Z 
2025-02-24T16:33:40.9368385Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9368502Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9368506Z 
2025-02-24T16:33:40.9369095Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e72834c0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T16:33:40.9369206Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9369451Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9369459Z 
2025-02-24T16:33:40.9369537Z     @wraps(func)
2025-02-24T16:33:40.9369623Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9369707Z         with self._recreate_cm():
2025-02-24T16:33:40.9369799Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9369883Z E           AssertionError: 
2025-02-24T16:33:40.9369995Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9370063Z E           
2025-02-24T16:33:40.9370166Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:40.9370270Z E           Max absolute difference: 5.1807441e+47
2025-02-24T16:33:40.9370370Z E           Max relative difference: 4.76021355
2025-02-24T16:33:40.9370522Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9370605Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9370750Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9370837Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9370948Z 
2025-02-24T16:33:40.9371156Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9371382Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-02-24T16:33:40.9371386Z 
2025-02-24T16:33:40.9371655Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f283b0>
2025-02-24T16:33:40.9371970Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9372301Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff50fd4ec60>
2025-02-24T16:33:40.9372579Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data12]>>
2025-02-24T16:33:40.9372583Z 
2025-02-24T16:33:40.9372680Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9372752Z         self,
2025-02-24T16:33:40.9372858Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9372951Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9373021Z         request,
2025-02-24T16:33:40.9373094Z     ):
2025-02-24T16:33:40.9373199Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9373383Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9373468Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9373648Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9373738Z             plot_object = getattr(
2025-02-24T16:33:40.9373865Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9373941Z             )
2025-02-24T16:33:40.9374042Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9374209Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9374313Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9374416Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9374549Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9374620Z                 )
2025-02-24T16:33:40.9374624Z 
2025-02-24T16:33:40.9374777Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9374887Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9374891Z 
2025-02-24T16:33:40.9375463Z args = (<function assert_allclose.<locals>.compare at 0x7ff503813060>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T16:33:40.9375574Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9375815Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9375819Z 
2025-02-24T16:33:40.9375901Z     @wraps(func)
2025-02-24T16:33:40.9375982Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9376076Z         with self._recreate_cm():
2025-02-24T16:33:40.9376169Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9376253Z E           AssertionError: 
2025-02-24T16:33:40.9376365Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9376434Z E           
2025-02-24T16:33:40.9376538Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:40.9376636Z E           Max absolute difference: 3.78533417e+47
2025-02-24T16:33:40.9376737Z E           Max relative difference: 178.93768705
2025-02-24T16:33:40.9376893Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9376979Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9377126Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9377214Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9377218Z 
2025-02-24T16:33:40.9377611Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9377958Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-02-24T16:33:40.9377962Z 
2025-02-24T16:33:40.9378226Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f28470>
2025-02-24T16:33:40.9378537Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9378861Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4ea367dd0>
2025-02-24T16:33:40.9379149Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data13]>>
2025-02-24T16:33:40.9379154Z 
2025-02-24T16:33:40.9379250Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9379320Z         self,
2025-02-24T16:33:40.9379416Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9379503Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9379581Z         request,
2025-02-24T16:33:40.9379648Z     ):
2025-02-24T16:33:40.9379758Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9379941Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9380024Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9380198Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9380282Z             plot_object = getattr(
2025-02-24T16:33:40.9380409Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9380481Z             )
2025-02-24T16:33:40.9380583Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9380747Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9380851Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9380951Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9381078Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9381153Z                 )
2025-02-24T16:33:40.9381156Z 
2025-02-24T16:33:40.9381303Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9381414Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9381418Z 
2025-02-24T16:33:40.9381880Z args = (<function assert_allclose.<locals>.compare at 0x7ff503813100>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T16:33:40.9382093Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9382340Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9382344Z 
2025-02-24T16:33:40.9382421Z     @wraps(func)
2025-02-24T16:33:40.9382503Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9382592Z         with self._recreate_cm():
2025-02-24T16:33:40.9382682Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9382771Z E           AssertionError: 
2025-02-24T16:33:40.9382875Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9382949Z E           
2025-02-24T16:33:40.9383052Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:40.9383148Z E           Max absolute difference: 3.78533417e+47
2025-02-24T16:33:40.9383246Z E           Max relative difference: 178.93768705
2025-02-24T16:33:40.9383390Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9383483Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9383629Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9383713Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9383717Z 
2025-02-24T16:33:40.9383921Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9384224Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-02-24T16:33:40.9384227Z 
2025-02-24T16:33:40.9384491Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f28560>
2025-02-24T16:33:40.9384800Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9385126Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4ff1c4e30>
2025-02-24T16:33:40.9385409Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data14]>>
2025-02-24T16:33:40.9385413Z 
2025-02-24T16:33:40.9385503Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9385577Z         self,
2025-02-24T16:33:40.9385676Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9385763Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9385840Z         request,
2025-02-24T16:33:40.9385910Z     ):
2025-02-24T16:33:40.9386017Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9386195Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9386281Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9386455Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9386541Z             plot_object = getattr(
2025-02-24T16:33:40.9386669Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9386737Z             )
2025-02-24T16:33:40.9386843Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9387001Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9387109Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9387208Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9387489Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9387572Z                 )
2025-02-24T16:33:40.9387576Z 
2025-02-24T16:33:40.9387720Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9387834Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9387838Z 
2025-02-24T16:33:40.9388304Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e07db6a0>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T16:33:40.9388402Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9388762Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9388767Z 
2025-02-24T16:33:40.9388842Z     @wraps(func)
2025-02-24T16:33:40.9388929Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9389017Z         with self._recreate_cm():
2025-02-24T16:33:40.9389102Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9389195Z E           AssertionError: 
2025-02-24T16:33:40.9389305Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9389382Z E           
2025-02-24T16:33:40.9389479Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:40.9389583Z E           Max absolute difference: 3.78533417e+47
2025-02-24T16:33:40.9389682Z E           Max relative difference: 178.93768705
2025-02-24T16:33:40.9389826Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9389916Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9390061Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9390149Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9390152Z 
2025-02-24T16:33:40.9390356Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9390574Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-02-24T16:33:40.9390714Z 
2025-02-24T16:33:40.9390988Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f286b0>
2025-02-24T16:33:40.9391289Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9391619Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff50bdd21e0>
2025-02-24T16:33:40.9391899Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data15]>>
2025-02-24T16:33:40.9391903Z 
2025-02-24T16:33:40.9391995Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9392069Z         self,
2025-02-24T16:33:40.9392162Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9392262Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9392338Z         request,
2025-02-24T16:33:40.9392405Z     ):
2025-02-24T16:33:40.9392511Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9392690Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9392780Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9392948Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9393038Z             plot_object = getattr(
2025-02-24T16:33:40.9393165Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9393234Z             )
2025-02-24T16:33:40.9393334Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9393492Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9393599Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9393693Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9393823Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9393896Z                 )
2025-02-24T16:33:40.9393900Z 
2025-02-24T16:33:40.9394046Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9394160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9394163Z 
2025-02-24T16:33:40.9394626Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e7242a20>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T16:33:40.9394730Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9395060Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9395065Z 
2025-02-24T16:33:40.9395142Z     @wraps(func)
2025-02-24T16:33:40.9395228Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9395311Z         with self._recreate_cm():
2025-02-24T16:33:40.9395402Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9395488Z E           AssertionError: 
2025-02-24T16:33:40.9395592Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9395670Z E           
2025-02-24T16:33:40.9395766Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:40.9395867Z E           Max absolute difference: 3.78533417e+47
2025-02-24T16:33:40.9395962Z E           Max relative difference: 178.93768705
2025-02-24T16:33:40.9396113Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9396202Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9396345Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9396440Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9396444Z 
2025-02-24T16:33:40.9396647Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9396853Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] ______
2025-02-24T16:33:40.9396857Z 
2025-02-24T16:33:40.9397127Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f28a10>
2025-02-24T16:33:40.9397738Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e4e4a4b0>
2025-02-24T16:33:40.9397846Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9397932Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9398043Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9398182Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:33:40.9398397Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9398647Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply0]>>
2025-02-24T16:33:40.9398651Z 
2025-02-24T16:33:40.9398742Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9398918Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9398986Z     ):
2025-02-24T16:33:40.9399088Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9399204Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9399379Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9399451Z     
2025-02-24T16:33:40.9399562Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9399662Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9399803Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9399946Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9400019Z             )
2025-02-24T16:33:40.9400087Z     
2025-02-24T16:33:40.9400193Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9400297Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9400386Z             if data.stackgroup:
2025-02-24T16:33:40.9400462Z                 assert (
2025-02-24T16:33:40.9400551Z                     data.stackgroup
2025-02-24T16:33:40.9400635Z                     == getattr(
2025-02-24T16:33:40.9400745Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9400849Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9400927Z                     ).decode()
2025-02-24T16:33:40.9401002Z                 )
2025-02-24T16:33:40.9401079Z             if data.name:
2025-02-24T16:33:40.9401158Z                 assert (
2025-02-24T16:33:40.9401242Z                     data.name
2025-02-24T16:33:40.9401316Z                     == getattr(
2025-02-24T16:33:40.9401560Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9401657Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9401737Z                     ).decode()
2025-02-24T16:33:40.9401807Z                 )
2025-02-24T16:33:40.9401909Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9402047Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9402119Z             )
2025-02-24T16:33:40.9402221Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9402344Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9402418Z             )
2025-02-24T16:33:40.9402422Z 
2025-02-24T16:33:40.9402577Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9402693Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9402697Z 
2025-02-24T16:33:40.9403177Z args = (<function assert_allclose.<locals>.compare at 0x7ff50385e8e0>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T16:33:40.9403277Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9403527Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9403530Z 
2025-02-24T16:33:40.9403608Z     @wraps(func)
2025-02-24T16:33:40.9403801Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9403891Z         with self._recreate_cm():
2025-02-24T16:33:40.9403980Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9404068Z E           AssertionError: 
2025-02-24T16:33:40.9404176Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9404251Z E           
2025-02-24T16:33:40.9404352Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:40.9404453Z E           Max absolute difference: 2.08771842e-13
2025-02-24T16:33:40.9404554Z E           Max relative difference: 3.01858991
2025-02-24T16:33:40.9404710Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9404800Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9404943Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9405031Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9405035Z 
2025-02-24T16:33:40.9405252Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9405458Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] ______
2025-02-24T16:33:40.9405462Z 
2025-02-24T16:33:40.9405735Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f28b00>
2025-02-24T16:33:40.9406055Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e750cfe0>
2025-02-24T16:33:40.9406155Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9406247Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9406354Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9406458Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:33:40.9406666Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9406916Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply1]>>
2025-02-24T16:33:40.9406923Z 
2025-02-24T16:33:40.9407014Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9407179Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9407405Z     ):
2025-02-24T16:33:40.9407556Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9407705Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9407884Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9407952Z     
2025-02-24T16:33:40.9408067Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9408284Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9408435Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9408542Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9408618Z             )
2025-02-24T16:33:40.9408689Z     
2025-02-24T16:33:40.9408787Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9408901Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9408986Z             if data.stackgroup:
2025-02-24T16:33:40.9409069Z                 assert (
2025-02-24T16:33:40.9409153Z                     data.stackgroup
2025-02-24T16:33:40.9409236Z                     == getattr(
2025-02-24T16:33:40.9409346Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9409441Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9409523Z                     ).decode()
2025-02-24T16:33:40.9409596Z                 )
2025-02-24T16:33:40.9409681Z             if data.name:
2025-02-24T16:33:40.9409759Z                 assert (
2025-02-24T16:33:40.9409840Z                     data.name
2025-02-24T16:33:40.9409918Z                     == getattr(
2025-02-24T16:33:40.9410025Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9410124Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9410314Z                     ).decode()
2025-02-24T16:33:40.9410388Z                 )
2025-02-24T16:33:40.9410482Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9410616Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9410691Z             )
2025-02-24T16:33:40.9410784Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9410908Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9410978Z             )
2025-02-24T16:33:40.9410982Z 
2025-02-24T16:33:40.9411136Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9411254Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9411258Z 
2025-02-24T16:33:40.9411729Z args = (<function assert_allclose.<locals>.compare at 0x7ff50385f420>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T16:33:40.9411834Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9412079Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9412083Z 
2025-02-24T16:33:40.9412162Z     @wraps(func)
2025-02-24T16:33:40.9412244Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9412333Z         with self._recreate_cm():
2025-02-24T16:33:40.9412425Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9412509Z E           AssertionError: 
2025-02-24T16:33:40.9412618Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9412687Z E           
2025-02-24T16:33:40.9412794Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:40.9412895Z E           Max absolute difference: 2.08771842e-13
2025-02-24T16:33:40.9412996Z E           Max relative difference: 3.01858991
2025-02-24T16:33:40.9413152Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9413236Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9413389Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9413471Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9413475Z 
2025-02-24T16:33:40.9413683Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9413892Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] ______
2025-02-24T16:33:40.9413896Z 
2025-02-24T16:33:40.9414166Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f28f50>
2025-02-24T16:33:40.9414568Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e4e49370>
2025-02-24T16:33:40.9414666Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9414758Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9414866Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9414965Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:33:40.9415175Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9415416Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply2]>>
2025-02-24T16:33:40.9415421Z 
2025-02-24T16:33:40.9415511Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9415681Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9415749Z     ):
2025-02-24T16:33:40.9415850Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9415957Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9416134Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9416201Z     
2025-02-24T16:33:40.9416314Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9416414Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9416556Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9416748Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9416818Z             )
2025-02-24T16:33:40.9416889Z     
2025-02-24T16:33:40.9416986Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9417096Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9417185Z             if data.stackgroup:
2025-02-24T16:33:40.9417365Z                 assert (
2025-02-24T16:33:40.9417454Z                     data.stackgroup
2025-02-24T16:33:40.9417529Z                     == getattr(
2025-02-24T16:33:40.9417642Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9417737Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9417819Z                     ).decode()
2025-02-24T16:33:40.9417893Z                 )
2025-02-24T16:33:40.9417970Z             if data.name:
2025-02-24T16:33:40.9418048Z                 assert (
2025-02-24T16:33:40.9418129Z                     data.name
2025-02-24T16:33:40.9418208Z                     == getattr(
2025-02-24T16:33:40.9418310Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9418405Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9418486Z                     ).decode()
2025-02-24T16:33:40.9418555Z                 )
2025-02-24T16:33:40.9418650Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9418774Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9418848Z             )
2025-02-24T16:33:40.9418940Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9419068Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9419141Z             )
2025-02-24T16:33:40.9419145Z 
2025-02-24T16:33:40.9419291Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9419407Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9419414Z 
2025-02-24T16:33:40.9419878Z args = (<function assert_allclose.<locals>.compare at 0x7ff50385e980>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T16:33:40.9419983Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9420232Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9420237Z 
2025-02-24T16:33:40.9420311Z     @wraps(func)
2025-02-24T16:33:40.9420399Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9420604Z         with self._recreate_cm():
2025-02-24T16:33:40.9420705Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9420794Z E           AssertionError: 
2025-02-24T16:33:40.9420904Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9420979Z E           
2025-02-24T16:33:40.9421075Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:40.9421183Z E           Max absolute difference: 2.08771842e-13
2025-02-24T16:33:40.9421279Z E           Max relative difference: 3.01858991
2025-02-24T16:33:40.9421433Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9421522Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9421664Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9421754Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9421758Z 
2025-02-24T16:33:40.9421964Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9422170Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] ______
2025-02-24T16:33:40.9422174Z 
2025-02-24T16:33:40.9422451Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f29010>
2025-02-24T16:33:40.9422765Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4df7d4e00>
2025-02-24T16:33:40.9422997Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9423084Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9423190Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9423286Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:33:40.9423493Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9423740Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply3]>>
2025-02-24T16:33:40.9423744Z 
2025-02-24T16:33:40.9423832Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9424003Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9424072Z     ):
2025-02-24T16:33:40.9424172Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9424281Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9424454Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9424528Z     
2025-02-24T16:33:40.9424635Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9424735Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9424876Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9424987Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9425060Z             )
2025-02-24T16:33:40.9425126Z     
2025-02-24T16:33:40.9425230Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9425339Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9425428Z             if data.stackgroup:
2025-02-24T16:33:40.9425503Z                 assert (
2025-02-24T16:33:40.9425593Z                     data.stackgroup
2025-02-24T16:33:40.9425673Z                     == getattr(
2025-02-24T16:33:40.9425778Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9425877Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9425957Z                     ).decode()
2025-02-24T16:33:40.9426031Z                 )
2025-02-24T16:33:40.9426108Z             if data.name:
2025-02-24T16:33:40.9426187Z                 assert (
2025-02-24T16:33:40.9426270Z                     data.name
2025-02-24T16:33:40.9426344Z                     == getattr(
2025-02-24T16:33:40.9426450Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9426539Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9426620Z                     ).decode()
2025-02-24T16:33:40.9426774Z                 )
2025-02-24T16:33:40.9426873Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9427003Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9427072Z             )
2025-02-24T16:33:40.9427167Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9427387Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9427465Z             )
2025-02-24T16:33:40.9427469Z 
2025-02-24T16:33:40.9427615Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9427731Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9427735Z 
2025-02-24T16:33:40.9428209Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e7242a20>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T16:33:40.9428310Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9428562Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9428566Z 
2025-02-24T16:33:40.9428645Z     @wraps(func)
2025-02-24T16:33:40.9428726Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9428815Z         with self._recreate_cm():
2025-02-24T16:33:40.9428904Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9429106Z E           AssertionError: 
2025-02-24T16:33:40.9429212Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9429287Z E           
2025-02-24T16:33:40.9429390Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:40.9429489Z E           Max absolute difference: 2.08771842e-13
2025-02-24T16:33:40.9429589Z E           Max relative difference: 3.01858991
2025-02-24T16:33:40.9429737Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9429826Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9429974Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9430066Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9430071Z 
2025-02-24T16:33:40.9430278Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9430478Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] ______
2025-02-24T16:33:40.9430486Z 
2025-02-24T16:33:40.9430756Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f37800>
2025-02-24T16:33:40.9431075Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4fc4fb200>
2025-02-24T16:33:40.9431170Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9431261Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9431362Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9431466Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:33:40.9431673Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9431919Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply4]>>
2025-02-24T16:33:40.9431924Z 
2025-02-24T16:33:40.9432013Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9432183Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9432259Z     ):
2025-02-24T16:33:40.9432353Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9432471Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9432643Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9432715Z     
2025-02-24T16:33:40.9432827Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9432921Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9433066Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9433283Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9433360Z             )
2025-02-24T16:33:40.9433432Z     
2025-02-24T16:33:40.9433531Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9433640Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9433723Z             if data.stackgroup:
2025-02-24T16:33:40.9433808Z                 assert (
2025-02-24T16:33:40.9433891Z                     data.stackgroup
2025-02-24T16:33:40.9433970Z                     == getattr(
2025-02-24T16:33:40.9434075Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9434174Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9434254Z                     ).decode()
2025-02-24T16:33:40.9434324Z                 )
2025-02-24T16:33:40.9434406Z             if data.name:
2025-02-24T16:33:40.9434478Z                 assert (
2025-02-24T16:33:40.9434563Z                     data.name
2025-02-24T16:33:40.9434640Z                     == getattr(
2025-02-24T16:33:40.9434746Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9434840Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9434919Z                     ).decode()
2025-02-24T16:33:40.9434993Z                 )
2025-02-24T16:33:40.9435084Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9435300Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9435369Z             )
2025-02-24T16:33:40.9435463Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9435586Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9435655Z             )
2025-02-24T16:33:40.9435659Z 
2025-02-24T16:33:40.9435810Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9435922Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9435926Z 
2025-02-24T16:33:40.9436400Z args = (<function assert_allclose.<locals>.compare at 0x7ff50384dd00>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T16:33:40.9436507Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9436750Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9436757Z 
2025-02-24T16:33:40.9436835Z     @wraps(func)
2025-02-24T16:33:40.9436917Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9437006Z         with self._recreate_cm():
2025-02-24T16:33:40.9437098Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9437183Z E           AssertionError: 
2025-02-24T16:33:40.9437395Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9437467Z E           
2025-02-24T16:33:40.9437570Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:40.9437668Z E           Max absolute difference: 3.02728422e-13
2025-02-24T16:33:40.9437776Z E           Max relative difference: 15766.1580412
2025-02-24T16:33:40.9437930Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9438015Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9438165Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9438253Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9438257Z 
2025-02-24T16:33:40.9438464Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9438672Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] ______
2025-02-24T16:33:40.9438675Z 
2025-02-24T16:33:40.9438940Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f36d20>
2025-02-24T16:33:40.9439258Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e2141700>
2025-02-24T16:33:40.9439468Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9439564Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9439670Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9439765Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:33:40.9439973Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9440222Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply5]>>
2025-02-24T16:33:40.9440226Z 
2025-02-24T16:33:40.9440317Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9440489Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9440557Z     ):
2025-02-24T16:33:40.9440656Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9440760Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9440937Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9441003Z     
2025-02-24T16:33:40.9441117Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9441217Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9441356Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9441466Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9441535Z             )
2025-02-24T16:33:40.9441717Z     
2025-02-24T16:33:40.9441815Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9441925Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9442014Z             if data.stackgroup:
2025-02-24T16:33:40.9442089Z                 assert (
2025-02-24T16:33:40.9442178Z                     data.stackgroup
2025-02-24T16:33:40.9442253Z                     == getattr(
2025-02-24T16:33:40.9442362Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9442457Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9442543Z                     ).decode()
2025-02-24T16:33:40.9442618Z                 )
2025-02-24T16:33:40.9442697Z             if data.name:
2025-02-24T16:33:40.9442775Z                 assert (
2025-02-24T16:33:40.9442851Z                     data.name
2025-02-24T16:33:40.9442932Z                     == getattr(
2025-02-24T16:33:40.9443032Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9443132Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9443211Z                     ).decode()
2025-02-24T16:33:40.9443282Z                 )
2025-02-24T16:33:40.9443383Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9443510Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9443584Z             )
2025-02-24T16:33:40.9443676Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9443800Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9443874Z             )
2025-02-24T16:33:40.9443880Z 
2025-02-24T16:33:40.9444024Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9444142Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9444146Z 
2025-02-24T16:33:40.9444612Z args = (<function assert_allclose.<locals>.compare at 0x7ff50384c400>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T16:33:40.9444720Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9444966Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9444970Z 
2025-02-24T16:33:40.9445044Z     @wraps(func)
2025-02-24T16:33:40.9445133Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9445217Z         with self._recreate_cm():
2025-02-24T16:33:40.9445309Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9445391Z E           AssertionError: 
2025-02-24T16:33:40.9445601Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9445682Z E           
2025-02-24T16:33:40.9445783Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:40.9445888Z E           Max absolute difference: 3.02728422e-13
2025-02-24T16:33:40.9445985Z E           Max relative difference: 15766.1580412
2025-02-24T16:33:40.9446138Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9446232Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9446374Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9446465Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9446469Z 
2025-02-24T16:33:40.9446671Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9446875Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] ______
2025-02-24T16:33:40.9446879Z 
2025-02-24T16:33:40.9447152Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f29310>
2025-02-24T16:33:40.9447564Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e21431d0>
2025-02-24T16:33:40.9447666Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9447752Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9447973Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9448069Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:33:40.9448278Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9448523Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply6]>>
2025-02-24T16:33:40.9448527Z 
2025-02-24T16:33:40.9448612Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9448784Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9448853Z     ):
2025-02-24T16:33:40.9448955Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9449067Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9449237Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9449309Z     
2025-02-24T16:33:40.9449417Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9449520Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9449659Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9449769Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9449842Z             )
2025-02-24T16:33:40.9449908Z     
2025-02-24T16:33:40.9450010Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9450115Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9450202Z             if data.stackgroup:
2025-02-24T16:33:40.9450277Z                 assert (
2025-02-24T16:33:40.9450369Z                     data.stackgroup
2025-02-24T16:33:40.9450449Z                     == getattr(
2025-02-24T16:33:40.9450554Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9450654Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9450731Z                     ).decode()
2025-02-24T16:33:40.9450810Z                 )
2025-02-24T16:33:40.9450892Z             if data.name:
2025-02-24T16:33:40.9450972Z                 assert (
2025-02-24T16:33:40.9451054Z                     data.name
2025-02-24T16:33:40.9451128Z                     == getattr(
2025-02-24T16:33:40.9451234Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9451325Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9451404Z                     ).decode()
2025-02-24T16:33:40.9451473Z                 )
2025-02-24T16:33:40.9451569Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9451841Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9451913Z             )
2025-02-24T16:33:40.9452008Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9452128Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9452202Z             )
2025-02-24T16:33:40.9452205Z 
2025-02-24T16:33:40.9452350Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9452473Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9452476Z 
2025-02-24T16:33:40.9452944Z args = (<function assert_allclose.<locals>.compare at 0x7ff503813560>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T16:33:40.9453044Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9453290Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9453294Z 
2025-02-24T16:33:40.9453375Z     @wraps(func)
2025-02-24T16:33:40.9453459Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9453548Z         with self._recreate_cm():
2025-02-24T16:33:40.9453636Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9453725Z E           AssertionError: 
2025-02-24T16:33:40.9453829Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9453905Z E           
2025-02-24T16:33:40.9454090Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:40.9454188Z E           Max absolute difference: 3.02728422e-13
2025-02-24T16:33:40.9454289Z E           Max relative difference: 15766.1580412
2025-02-24T16:33:40.9454438Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9454528Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9454673Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9454763Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9454770Z 
2025-02-24T16:33:40.9454976Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9455174Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] ______
2025-02-24T16:33:40.9455177Z 
2025-02-24T16:33:40.9455451Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f293d0>
2025-02-24T16:33:40.9455765Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4fdd6be60>
2025-02-24T16:33:40.9455865Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9455955Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9456056Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9456158Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:33:40.9456363Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9456611Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply7]>>
2025-02-24T16:33:40.9456615Z 
2025-02-24T16:33:40.9456705Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9456872Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9456946Z     ):
2025-02-24T16:33:40.9457041Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9457153Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9457427Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9457501Z     
2025-02-24T16:33:40.9457615Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9457709Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9457855Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9457959Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9458032Z             )
2025-02-24T16:33:40.9458098Z     
2025-02-24T16:33:40.9458317Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9458429Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9458513Z             if data.stackgroup:
2025-02-24T16:33:40.9458592Z                 assert (
2025-02-24T16:33:40.9458675Z                     data.stackgroup
2025-02-24T16:33:40.9458753Z                     == getattr(
2025-02-24T16:33:40.9458861Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9458959Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9459040Z                     ).decode()
2025-02-24T16:33:40.9459108Z                 )
2025-02-24T16:33:40.9459190Z             if data.name:
2025-02-24T16:33:40.9459264Z                 assert (
2025-02-24T16:33:40.9459344Z                     data.name
2025-02-24T16:33:40.9459418Z                     == getattr(
2025-02-24T16:33:40.9459522Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9459620Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9459696Z                     ).decode()
2025-02-24T16:33:40.9459773Z                 )
2025-02-24T16:33:40.9459866Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9459996Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9460066Z             )
2025-02-24T16:33:40.9460162Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9460475Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9460545Z             )
2025-02-24T16:33:40.9460548Z 
2025-02-24T16:33:40.9460697Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9460808Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9460811Z 
2025-02-24T16:33:40.9461277Z args = (<function assert_allclose.<locals>.compare at 0x7ff50385ef20>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T16:33:40.9461397Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9461637Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9461641Z 
2025-02-24T16:33:40.9461722Z     @wraps(func)
2025-02-24T16:33:40.9461808Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9461905Z         with self._recreate_cm():
2025-02-24T16:33:40.9462000Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9462083Z E           AssertionError: 
2025-02-24T16:33:40.9462196Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9462269Z E           
2025-02-24T16:33:40.9462373Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:40.9462472Z E           Max absolute difference: 3.02728422e-13
2025-02-24T16:33:40.9462577Z E           Max relative difference: 15766.1580412
2025-02-24T16:33:40.9462735Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9462822Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9462971Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9463057Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9463060Z 
2025-02-24T16:33:40.9463266Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9463477Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] ______
2025-02-24T16:33:40.9463481Z 
2025-02-24T16:33:40.9463750Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f29490>
2025-02-24T16:33:40.9464068Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e753adb0>
2025-02-24T16:33:40.9464163Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9464255Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9464446Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9464551Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:33:40.9464761Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9465002Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply8]>>
2025-02-24T16:33:40.9465006Z 
2025-02-24T16:33:40.9465100Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9465273Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9465342Z     ):
2025-02-24T16:33:40.9465442Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9465546Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9465725Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9465890Z     
2025-02-24T16:33:40.9466085Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9466246Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9466594Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9466749Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9466906Z             )
2025-02-24T16:33:40.9467039Z     
2025-02-24T16:33:40.9467168Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9467633Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9467939Z             if data.stackgroup:
2025-02-24T16:33:40.9468084Z                 assert (
2025-02-24T16:33:40.9468202Z                     data.stackgroup
2025-02-24T16:33:40.9468343Z                     == getattr(
2025-02-24T16:33:40.9468576Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9468743Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9468887Z                     ).decode()
2025-02-24T16:33:40.9468988Z                 )
2025-02-24T16:33:40.9469133Z             if data.name:
2025-02-24T16:33:40.9469227Z                 assert (
2025-02-24T16:33:40.9469458Z                     data.name
2025-02-24T16:33:40.9469600Z                     == getattr(
2025-02-24T16:33:40.9469741Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9469901Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9469993Z                     ).decode()
2025-02-24T16:33:40.9470212Z                 )
2025-02-24T16:33:40.9470373Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9470541Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9470676Z             )
2025-02-24T16:33:40.9470783Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9471047Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9471147Z             )
2025-02-24T16:33:40.9471152Z 
2025-02-24T16:33:40.9471373Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9471610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9471617Z 
2025-02-24T16:33:40.9472238Z args = (<function assert_allclose.<locals>.compare at 0x7ff50384fec0>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T16:33:40.9472525Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9472901Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9472942Z 
2025-02-24T16:33:40.9473048Z     @wraps(func)
2025-02-24T16:33:40.9473165Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9481628Z         with self._recreate_cm():
2025-02-24T16:33:40.9481780Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9481917Z E           AssertionError: 
2025-02-24T16:33:40.9482073Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9482189Z E           
2025-02-24T16:33:40.9482600Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:40.9482728Z E           Max absolute difference: 2.49794504e+39
2025-02-24T16:33:40.9482833Z E           Max relative difference: 3.01858991
2025-02-24T16:33:40.9483004Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9483144Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9483381Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9483468Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9483475Z 
2025-02-24T16:33:40.9483700Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9483929Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] ______
2025-02-24T16:33:40.9483937Z 
2025-02-24T16:33:40.9484308Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f29550>
2025-02-24T16:33:40.9484636Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e75384a0>
2025-02-24T16:33:40.9484735Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9484910Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9485046Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9485153Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:33:40.9485505Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9485881Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply9]>>
2025-02-24T16:33:40.9485887Z 
2025-02-24T16:33:40.9485985Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9486163Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9486232Z     ):
2025-02-24T16:33:40.9486334Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9486461Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9486764Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9486835Z     
2025-02-24T16:33:40.9486959Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9487060Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9487205Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9487542Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9487619Z             )
2025-02-24T16:33:40.9487692Z     
2025-02-24T16:33:40.9487796Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9487907Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9488000Z             if data.stackgroup:
2025-02-24T16:33:40.9488078Z                 assert (
2025-02-24T16:33:40.9488201Z                     data.stackgroup
2025-02-24T16:33:40.9488341Z                     == getattr(
2025-02-24T16:33:40.9488478Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9488579Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9488662Z                     ).decode()
2025-02-24T16:33:40.9488736Z                 )
2025-02-24T16:33:40.9488814Z             if data.name:
2025-02-24T16:33:40.9488892Z                 assert (
2025-02-24T16:33:40.9488968Z                     data.name
2025-02-24T16:33:40.9489124Z                     == getattr(
2025-02-24T16:33:40.9489274Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9489374Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9489501Z                     ).decode()
2025-02-24T16:33:40.9489614Z                 )
2025-02-24T16:33:40.9489717Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9489946Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9490054Z             )
2025-02-24T16:33:40.9490147Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9490483Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9490633Z             )
2025-02-24T16:33:40.9490641Z 
2025-02-24T16:33:40.9490911Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9491116Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9491121Z 
2025-02-24T16:33:40.9491794Z args = (<function assert_allclose.<locals>.compare at 0x7ff50384c7c0>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T16:33:40.9491914Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9492169Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9492174Z 
2025-02-24T16:33:40.9492249Z     @wraps(func)
2025-02-24T16:33:40.9492353Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9492515Z         with self._recreate_cm():
2025-02-24T16:33:40.9492634Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9492728Z E           AssertionError: 
2025-02-24T16:33:40.9492844Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9492918Z E           
2025-02-24T16:33:40.9493017Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:40.9493124Z E           Max absolute difference: 2.49794504e+39
2025-02-24T16:33:40.9493464Z E           Max relative difference: 3.01858991
2025-02-24T16:33:40.9493630Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9493725Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9493871Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9493960Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9493964Z 
2025-02-24T16:33:40.9494284Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9494508Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] ______
2025-02-24T16:33:40.9494513Z 
2025-02-24T16:33:40.9494790Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f29610>
2025-02-24T16:33:40.9495223Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff509963710>
2025-02-24T16:33:40.9495335Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9495424Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9495534Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9495636Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:33:40.9495963Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9496221Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply10]>>
2025-02-24T16:33:40.9496226Z 
2025-02-24T16:33:40.9496314Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9496490Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9496582Z     ):
2025-02-24T16:33:40.9496767Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9496887Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9497062Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9497138Z     
2025-02-24T16:33:40.9497376Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9497575Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9497742Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9497855Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9497928Z             )
2025-02-24T16:33:40.9497994Z     
2025-02-24T16:33:40.9498099Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9498207Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9498504Z             if data.stackgroup:
2025-02-24T16:33:40.9498592Z                 assert (
2025-02-24T16:33:40.9498684Z                     data.stackgroup
2025-02-24T16:33:40.9498766Z                     == getattr(
2025-02-24T16:33:40.9498877Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9498979Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9499092Z                     ).decode()
2025-02-24T16:33:40.9499228Z                 )
2025-02-24T16:33:40.9499332Z             if data.name:
2025-02-24T16:33:40.9499411Z                 assert (
2025-02-24T16:33:40.9499494Z                     data.name
2025-02-24T16:33:40.9499569Z                     == getattr(
2025-02-24T16:33:40.9499680Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9499772Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9499900Z                     ).decode()
2025-02-24T16:33:40.9500028Z                 )
2025-02-24T16:33:40.9500147Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9500287Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9500356Z             )
2025-02-24T16:33:40.9500451Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9500572Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9500645Z             )
2025-02-24T16:33:40.9500829Z 
2025-02-24T16:33:40.9501018Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9501144Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9501148Z 
2025-02-24T16:33:40.9501712Z args = (<function assert_allclose.<locals>.compare at 0x7ff50384c180>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T16:33:40.9501820Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9502076Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9502081Z 
2025-02-24T16:33:40.9502160Z     @wraps(func)
2025-02-24T16:33:40.9502242Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9502354Z         with self._recreate_cm():
2025-02-24T16:33:40.9502519Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9502612Z E           AssertionError: 
2025-02-24T16:33:40.9502730Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9502805Z E           
2025-02-24T16:33:40.9502909Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:40.9503009Z E           Max absolute difference: 2.49794504e+39
2025-02-24T16:33:40.9503110Z E           Max relative difference: 3.01858991
2025-02-24T16:33:40.9503353Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9503447Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9503597Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9503687Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9503691Z 
2025-02-24T16:33:40.9503909Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9504209Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] ______
2025-02-24T16:33:40.9504214Z 
2025-02-24T16:33:40.9504493Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f296d0>
2025-02-24T16:33:40.9504878Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e750d430>
2025-02-24T16:33:40.9505022Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9505119Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9505224Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9505328Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:33:40.9505679Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9505976Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply11]>>
2025-02-24T16:33:40.9505981Z 
2025-02-24T16:33:40.9506074Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9506243Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9506320Z     ):
2025-02-24T16:33:40.9506416Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9506528Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9506792Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9506868Z     
2025-02-24T16:33:40.9506985Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9507078Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9507226Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9507552Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9507638Z             )
2025-02-24T16:33:40.9507707Z     
2025-02-24T16:33:40.9507814Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9507923Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9508054Z             if data.stackgroup:
2025-02-24T16:33:40.9508198Z                 assert (
2025-02-24T16:33:40.9508423Z                     data.stackgroup
2025-02-24T16:33:40.9508503Z                     == getattr(
2025-02-24T16:33:40.9508611Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9508713Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9508794Z                     ).decode()
2025-02-24T16:33:40.9508867Z                 )
2025-02-24T16:33:40.9508948Z             if data.name:
2025-02-24T16:33:40.9509022Z                 assert (
2025-02-24T16:33:40.9509105Z                     data.name
2025-02-24T16:33:40.9509178Z                     == getattr(
2025-02-24T16:33:40.9509289Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9509385Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9509460Z                     ).decode()
2025-02-24T16:33:40.9509533Z                 )
2025-02-24T16:33:40.9509626Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9509760Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9509833Z             )
2025-02-24T16:33:40.9509928Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9510055Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9510124Z             )
2025-02-24T16:33:40.9510129Z 
2025-02-24T16:33:40.9510343Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9510537Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9510542Z 
2025-02-24T16:33:40.9511028Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e72ae0c0>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T16:33:40.9511133Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9511378Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9511383Z 
2025-02-24T16:33:40.9511464Z     @wraps(func)
2025-02-24T16:33:40.9511546Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9511636Z         with self._recreate_cm():
2025-02-24T16:33:40.9511729Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9511814Z E           AssertionError: 
2025-02-24T16:33:40.9511926Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9511997Z E           
2025-02-24T16:33:40.9512100Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:40.9512200Z E           Max absolute difference: 2.49794504e+39
2025-02-24T16:33:40.9512451Z E           Max relative difference: 3.01858991
2025-02-24T16:33:40.9512612Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9512700Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9512853Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9512938Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9512947Z 
2025-02-24T16:33:40.9513154Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9513362Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] ______
2025-02-24T16:33:40.9513366Z 
2025-02-24T16:33:40.9513633Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f29790>
2025-02-24T16:33:40.9513949Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e807c680>
2025-02-24T16:33:40.9514044Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9514191Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9514374Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9514478Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:33:40.9514689Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9514937Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply12]>>
2025-02-24T16:33:40.9515028Z 
2025-02-24T16:33:40.9515123Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9515298Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9515365Z     ):
2025-02-24T16:33:40.9515466Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9515570Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9515746Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9515812Z     
2025-02-24T16:33:40.9515929Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9516028Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9516169Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9516279Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9516347Z             )
2025-02-24T16:33:40.9516418Z     
2025-02-24T16:33:40.9516518Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9516629Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9516718Z             if data.stackgroup:
2025-02-24T16:33:40.9516792Z                 assert (
2025-02-24T16:33:40.9516880Z                     data.stackgroup
2025-02-24T16:33:40.9516954Z                     == getattr(
2025-02-24T16:33:40.9517067Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9517163Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9517409Z                     ).decode()
2025-02-24T16:33:40.9517528Z                 )
2025-02-24T16:33:40.9517608Z             if data.name:
2025-02-24T16:33:40.9517687Z                 assert (
2025-02-24T16:33:40.9517763Z                     data.name
2025-02-24T16:33:40.9517843Z                     == getattr(
2025-02-24T16:33:40.9517946Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9518040Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9518125Z                     ).decode()
2025-02-24T16:33:40.9518194Z                 )
2025-02-24T16:33:40.9518290Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9518426Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9518502Z             )
2025-02-24T16:33:40.9518591Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9518715Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9518784Z             )
2025-02-24T16:33:40.9518789Z 
2025-02-24T16:33:40.9519072Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9519197Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9519201Z 
2025-02-24T16:33:40.9519674Z args = (<function assert_allclose.<locals>.compare at 0x7ff50384ca40>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T16:33:40.9519782Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9520025Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9520029Z 
2025-02-24T16:33:40.9520109Z     @wraps(func)
2025-02-24T16:33:40.9520195Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9520280Z         with self._recreate_cm():
2025-02-24T16:33:40.9520371Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9520456Z E           AssertionError: 
2025-02-24T16:33:40.9520574Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9520644Z E           
2025-02-24T16:33:40.9520747Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:40.9520849Z E           Max absolute difference: 3.62213099e+39
2025-02-24T16:33:40.9520942Z E           Max relative difference: 15766.15804934
2025-02-24T16:33:40.9521095Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9521405Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9521576Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9521664Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9521668Z 
2025-02-24T16:33:40.9521871Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9522076Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] ______
2025-02-24T16:33:40.9522080Z 
2025-02-24T16:33:40.9522349Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f29850>
2025-02-24T16:33:40.9522676Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4ea39f320>
2025-02-24T16:33:40.9522777Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9522864Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9522968Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9523070Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:33:40.9523278Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9523522Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply13]>>
2025-02-24T16:33:40.9523530Z 
2025-02-24T16:33:40.9523615Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9523786Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9523854Z     ):
2025-02-24T16:33:40.9523957Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9524063Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9524241Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9524312Z     
2025-02-24T16:33:40.9524419Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9524517Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9524663Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9524773Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9524842Z             )
2025-02-24T16:33:40.9524913Z     
2025-02-24T16:33:40.9525017Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9525127Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9525216Z             if data.stackgroup:
2025-02-24T16:33:40.9525290Z                 assert (
2025-02-24T16:33:40.9525378Z                     data.stackgroup
2025-02-24T16:33:40.9525539Z                     == getattr(
2025-02-24T16:33:40.9525653Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9525751Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9525826Z                     ).decode()
2025-02-24T16:33:40.9525900Z                 )
2025-02-24T16:33:40.9525976Z             if data.name:
2025-02-24T16:33:40.9526057Z                 assert (
2025-02-24T16:33:40.9526132Z                     data.name
2025-02-24T16:33:40.9526210Z                     == getattr(
2025-02-24T16:33:40.9526317Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9526407Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9526486Z                     ).decode()
2025-02-24T16:33:40.9526555Z                 )
2025-02-24T16:33:40.9526650Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9526777Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9526851Z             )
2025-02-24T16:33:40.9526948Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9527065Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9527140Z             )
2025-02-24T16:33:40.9527143Z 
2025-02-24T16:33:40.9527398Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9527517Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9527638Z 
2025-02-24T16:33:40.9528111Z args = (<function assert_allclose.<locals>.compare at 0x7ff503813d80>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T16:33:40.9528210Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9528455Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9528459Z 
2025-02-24T16:33:40.9528531Z     @wraps(func)
2025-02-24T16:33:40.9528621Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9528711Z         with self._recreate_cm():
2025-02-24T16:33:40.9528798Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9528886Z E           AssertionError: 
2025-02-24T16:33:40.9528990Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9529065Z E           
2025-02-24T16:33:40.9529162Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:40.9529265Z E           Max absolute difference: 3.62213099e+39
2025-02-24T16:33:40.9529363Z E           Max relative difference: 15766.15804934
2025-02-24T16:33:40.9529510Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9529601Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9529743Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9529829Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9529833Z 
2025-02-24T16:33:40.9530035Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9530243Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] ______
2025-02-24T16:33:40.9530247Z 
2025-02-24T16:33:40.9530515Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f29910>
2025-02-24T16:33:40.9530825Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff50fb2d5b0>
2025-02-24T16:33:40.9530927Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9531012Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9531119Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9531223Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:33:40.9531427Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9531673Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply14]>>
2025-02-24T16:33:40.9531813Z 
2025-02-24T16:33:40.9531902Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9532071Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9532144Z     ):
2025-02-24T16:33:40.9532237Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9532346Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9532519Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9532593Z     
2025-02-24T16:33:40.9532700Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9532799Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9532944Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9533048Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9533120Z             )
2025-02-24T16:33:40.9533186Z     
2025-02-24T16:33:40.9533288Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9533394Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9533482Z             if data.stackgroup:
2025-02-24T16:33:40.9533564Z                 assert (
2025-02-24T16:33:40.9533647Z                     data.stackgroup
2025-02-24T16:33:40.9533727Z                     == getattr(
2025-02-24T16:33:40.9533829Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9534031Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9534106Z                     ).decode()
2025-02-24T16:33:40.9534180Z                 )
2025-02-24T16:33:40.9534260Z             if data.name:
2025-02-24T16:33:40.9534333Z                 assert (
2025-02-24T16:33:40.9534413Z                     data.name
2025-02-24T16:33:40.9534486Z                     == getattr(
2025-02-24T16:33:40.9534593Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9534719Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9534870Z                     ).decode()
2025-02-24T16:33:40.9534978Z                 )
2025-02-24T16:33:40.9535072Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9535203Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9535272Z             )
2025-02-24T16:33:40.9535366Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9535488Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9535561Z             )
2025-02-24T16:33:40.9535564Z 
2025-02-24T16:33:40.9535714Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9535827Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9535830Z 
2025-02-24T16:33:40.9536294Z args = (<function assert_allclose.<locals>.compare at 0x7ff503811e40>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T16:33:40.9536397Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9536643Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9536647Z 
2025-02-24T16:33:40.9536724Z     @wraps(func)
2025-02-24T16:33:40.9536805Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9536896Z         with self._recreate_cm():
2025-02-24T16:33:40.9536985Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9537073Z E           AssertionError: 
2025-02-24T16:33:40.9537181Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9537351Z E           
2025-02-24T16:33:40.9537456Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:40.9537554Z E           Max absolute difference: 3.62213099e+39
2025-02-24T16:33:40.9537654Z E           Max relative difference: 15766.15804934
2025-02-24T16:33:40.9537801Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9538014Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9538165Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9538248Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9538252Z 
2025-02-24T16:33:40.9538458Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9538660Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] ______
2025-02-24T16:33:40.9538664Z 
2025-02-24T16:33:40.9538935Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f299d0>
2025-02-24T16:33:40.9539250Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e753a630>
2025-02-24T16:33:40.9539344Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9539435Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9539534Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9539638Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:33:40.9539853Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9540097Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply15]>>
2025-02-24T16:33:40.9540101Z 
2025-02-24T16:33:40.9540190Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9540466Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9540538Z     ):
2025-02-24T16:33:40.9540633Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9540745Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9540920Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9540987Z     
2025-02-24T16:33:40.9541098Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9541192Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9541338Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9541446Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9541517Z             )
2025-02-24T16:33:40.9541589Z     
2025-02-24T16:33:40.9541687Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9541795Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9541882Z             if data.stackgroup:
2025-02-24T16:33:40.9541960Z                 assert (
2025-02-24T16:33:40.9542049Z                     data.stackgroup
2025-02-24T16:33:40.9542125Z                     == getattr(
2025-02-24T16:33:40.9542234Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9542329Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9542418Z                     ).decode()
2025-02-24T16:33:40.9542487Z                 )
2025-02-24T16:33:40.9542574Z             if data.name:
2025-02-24T16:33:40.9542648Z                 assert (
2025-02-24T16:33:40.9542732Z                     data.name
2025-02-24T16:33:40.9542811Z                     == getattr(
2025-02-24T16:33:40.9542912Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9543007Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9543085Z                     ).decode()
2025-02-24T16:33:40.9543159Z                 )
2025-02-24T16:33:40.9543254Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9543386Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9543461Z             )
2025-02-24T16:33:40.9543551Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9543674Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9543743Z             )
2025-02-24T16:33:40.9543746Z 
2025-02-24T16:33:40.9543893Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9544011Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9544099Z 
2025-02-24T16:33:40.9544568Z args = (<function assert_allclose.<locals>.compare at 0x7ff50384dd00>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T16:33:40.9544672Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9544914Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9544922Z 
2025-02-24T16:33:40.9545002Z     @wraps(func)
2025-02-24T16:33:40.9545089Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9545173Z         with self._recreate_cm():
2025-02-24T16:33:40.9545265Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9545349Z E           AssertionError: 
2025-02-24T16:33:40.9545458Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9545527Z E           
2025-02-24T16:33:40.9545629Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:40.9545732Z E           Max absolute difference: 3.62213099e+39
2025-02-24T16:33:40.9545825Z E           Max relative difference: 15766.15804934
2025-02-24T16:33:40.9545978Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9546062Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9546210Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9546382Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9546386Z 
2025-02-24T16:33:40.9546592Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9546710Z =============================== warnings summary ===============================
2025-02-24T16:33:40.9546825Z tardis/io/configuration/config_validator.py:6
2025-02-24T16:33:40.9546940Z tardis/io/configuration/config_validator.py:6
2025-02-24T16:33:40.9547408Z   /home/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-02-24T16:33:40.9547554Z   
2025-02-24T16:33:40.9548696Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-02-24T16:33:40.9548705Z 
2025-02-24T16:33:40.9548941Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-02-24T16:33:40.9549302Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-02-24T16:33:40.9549374Z   
2025-02-24T16:33:40.9549525Z   Jupyter is migrating its paths to use standard platformdirs
2025-02-24T16:33:40.9549681Z   given by the platformdirs library.  To remove this warning and
2025-02-24T16:33:40.9549845Z   see the appropriate new directories, set the environment variable
2025-02-24T16:33:40.9549995Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-02-24T16:33:40.9550151Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-02-24T16:33:40.9550155Z 
2025-02-24T16:33:40.9554401Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-02-24T16:33:40.9554696Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T16:33:40.9554926Z   /home/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-02-24T16:33:40.9555001Z   
2025-02-24T16:33:40.9555068Z   
2025-02-24T16:33:40.9555291Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T16:33:40.9555561Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-02-24T16:33:40.9555567Z 
2025-02-24T16:33:40.9555768Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-02-24T16:33:40.9556164Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-02-24T16:33:40.9556416Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-02-24T16:33:40.9556602Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-02-24T16:33:40.9556929Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-02-24T16:33:40.9557001Z   
2025-02-24T16:33:40.9557121Z   The current CMFGEN model parser is deprecated
2025-02-24T16:33:40.9557126Z 
2025-02-24T16:33:40.9557236Z tardis/io/tests/test_model_reader.py: 1 warning
2025-02-24T16:33:40.9557674Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-02-24T16:33:40.9558005Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-02-24T16:33:40.9558074Z   
2025-02-24T16:33:40.9558187Z   The current CMFGEN model parser is deprecated
2025-02-24T16:33:40.9558197Z 
2025-02-24T16:33:40.9558410Z tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances
2025-02-24T16:33:40.9558786Z   /home/runner/work/tardis/tardis/tardis/transport/montecarlo/montecarlo_main_loop.py:123: NumbaTypeSafetyWarning:
2025-02-24T16:33:40.9558864Z   
2025-02-24T16:33:40.9559306Z   [1m[1m[1munsafe cast from uint64 to int64. Precision may be lost.[0m[0m[0m
2025-02-24T16:33:40.9559436Z 
2025-02-24T16:33:40.9559550Z tardis/model/tests/test_base.py: 6 warnings
2025-02-24T16:33:40.9559673Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-02-24T16:33:40.9559859Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-02-24T16:33:40.9560130Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-02-24T16:33:40.9560206Z   
2025-02-24T16:33:40.9560319Z   v_inner_boundary < 0, assuming default value
2025-02-24T16:33:40.9560323Z 
2025-02-24T16:33:40.9560426Z tardis/model/tests/test_base.py: 6 warnings
2025-02-24T16:33:40.9560550Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-02-24T16:33:40.9560728Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-02-24T16:33:40.9561059Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-02-24T16:33:40.9561192Z   
2025-02-24T16:33:40.9561336Z   v_outer_boundary < 0, assuming default value
2025-02-24T16:33:40.9561346Z 
2025-02-24T16:33:40.9561810Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-02-24T16:33:40.9562107Z   /home/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-02-24T16:33:40.9562179Z   
2025-02-24T16:33:40.9562469Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-02-24T16:33:40.9562918Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-02-24T16:33:40.9562991Z   
2025-02-24T16:33:40.9563515Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-02-24T16:33:40.9563522Z 
2025-02-24T16:33:40.9563745Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-02-24T16:33:40.9563956Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-02-24T16:33:40.9564161Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-02-24T16:33:40.9564409Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-02-24T16:33:40.9564476Z   
2025-02-24T16:33:40.9564675Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-02-24T16:33:40.9564679Z 
2025-02-24T16:33:40.9565043Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-02-24T16:33:40.9565251Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:70: UserWarning:
2025-02-24T16:33:40.9565322Z   
2025-02-24T16:33:40.9565650Z   SpectrumSolver.spectrum_virtual_packets is zero. Please run the montecarlo simulation with no_of_virtual_packets > 0
2025-02-24T16:33:40.9565658Z 
2025-02-24T16:33:40.9565870Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-02-24T16:33:40.9566077Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:111: UserWarning:
2025-02-24T16:33:40.9566143Z   
2025-02-24T16:33:40.9566491Z   SpectrumSolver.integrator: The FormalIntegrator is not yet available.Please run the montecarlo simulation at least once.
2025-02-24T16:33:40.9566495Z 
2025-02-24T16:33:40.9566703Z tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_vpacket_volley
2025-02-24T16:33:40.9566822Z   <string>:3: NumbaPendingDeprecationWarning:
2025-02-24T16:33:40.9566890Z   
2025-02-24T16:33:40.9568088Z   [1m[1mCode using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors
2025-02-24T16:33:40.9568174Z   Exception origin:
2025-02-24T16:33:40.9568548Z     File "/home/runner/micromamba/envs/tardis/lib/python3.12/inspect.py", line 3180, in _bind
2025-02-24T16:33:40.9568646Z       raise TypeError(msg) from None
2025-02-24T16:33:40.9568745Z   [0m[0m
2025-02-24T16:33:40.9568754Z 
2025-02-24T16:33:40.9569089Z tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4]
2025-02-24T16:33:40.9569376Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:1225: RuntimeWarning:
2025-02-24T16:33:40.9569443Z   
2025-02-24T16:33:40.9570293Z   More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
2025-02-24T16:33:40.9570298Z 
2025-02-24T16:33:40.9570656Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:33:40.9571004Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:33:40.9571349Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:33:40.9571692Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:33:40.9572034Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:33:40.9572382Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:33:40.9572735Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T16:33:40.9572806Z   
2025-02-24T16:33:40.9573007Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-02-24T16:33:40.9573188Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T16:33:40.9573428Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T16:33:40.9573432Z 
2025-02-24T16:33:40.9573781Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:33:40.9574132Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:33:40.9574596Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T16:33:40.9574672Z   
2025-02-24T16:33:40.9574855Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-02-24T16:33:40.9575027Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T16:33:40.9575273Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T16:33:40.9575281Z 
2025-02-24T16:33:40.9575628Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:33:40.9575982Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T16:33:40.9576057Z   
2025-02-24T16:33:40.9576242Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-02-24T16:33:40.9576416Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T16:33:40.9576648Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T16:33:40.9576652Z 
2025-02-24T16:33:40.9577086Z tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu]
2025-02-24T16:33:40.9577520Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/qgridnext/grid.py:814: DeprecationWarning:
2025-02-24T16:33:40.9577703Z   
2025-02-24T16:33:40.9577948Z   QgridWidget._df_changed is deprecated in traitlets 4.1: use @observe and @unobserve instead.
2025-02-24T16:33:40.9577953Z 
2025-02-24T16:33:40.9578209Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T16:33:40.9578422Z   /home/runner/work/tardis/tardis/tardis/io/util.py:289: PerformanceWarning:
2025-02-24T16:33:40.9578494Z   
2025-02-24T16:33:40.9578559Z   
2025-02-24T16:33:40.9578767Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T16:33:40.9579028Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-02-24T16:33:40.9579032Z 
2025-02-24T16:33:40.9579289Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T16:33:40.9579497Z   /home/runner/work/tardis/tardis/tardis/io/util.py:292: PerformanceWarning:
2025-02-24T16:33:40.9579568Z   
2025-02-24T16:33:40.9579639Z   
2025-02-24T16:33:40.9579838Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T16:33:40.9580015Z   map directly to c-types [inferred_type->mixed,key->values] [items->None]
2025-02-24T16:33:40.9580020Z 
2025-02-24T16:33:40.9580268Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T16:33:40.9580513Z   /home/runner/work/tardis/tardis/tardis/spectrum/formal_integral.py:398: UserWarning:
2025-02-24T16:33:40.9580584Z   
2025-02-24T16:33:40.9580775Z   The number of interpolate_shells was not specified. The value was set to 80.
2025-02-24T16:33:40.9580779Z 
2025-02-24T16:33:40.9580975Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-02-24T16:33:40.9580979Z 
2025-02-24T16:33:40.9581144Z ---------- coverage: platform linux, python 3.12.4-final-0 -----------
2025-02-24T16:33:40.9581271Z Coverage HTML written to dir coverage_html_report
2025-02-24T16:33:40.9581380Z Coverage XML written to file coverage.xml
2025-02-24T16:33:40.9581384Z 
2025-02-24T16:33:40.9581509Z =========================== short test summary info ============================
2025-02-24T16:33:40.9581918Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_sobolev_line_opacity - AssertionError: MultiIndex level [0] are different
2025-02-24T16:33:40.9581922Z 
2025-02-24T16:33:40.9582058Z MultiIndex level [0] values are different (0.09581 %)
2025-02-24T16:33:40.9582176Z [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T16:33:40.9582250Z        ...
2025-02-24T16:33:40.9582459Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T16:33:40.9582589Z       dtype='int64', name='atomic_number', length=29224)
2025-02-24T16:33:40.9582701Z [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T16:33:40.9582774Z        ...
2025-02-24T16:33:40.9582863Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T16:33:40.9582978Z       dtype='int64', name='atomic_number', length=29224)
2025-02-24T16:33:40.9583092Z At positional index 54, first diff: 14 != 12
2025-02-24T16:33:40.9583367Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_beta_sobolevs - AssertionError: 
2025-02-24T16:33:40.9583470Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9583474Z 
2025-02-24T16:33:40.9583568Z Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T16:33:40.9583662Z Max absolute difference: 0.99984222
2025-02-24T16:33:40.9583759Z Max relative difference: 6337.12154973
2025-02-24T16:33:40.9583844Z  x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.9583931Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.9584009Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:33:40.9584095Z  y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.9584170Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.9584250Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:33:40.9584848Z FAILED tardis/plasma/equilibrium/tests/test_rate_matrix.py::test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0] - ModuleNotFoundError: No module named 'numpy._core.numeric'
2025-02-24T16:33:40.9585422Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9585427Z 
2025-02-24T16:33:40.9585559Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9585675Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9585744Z        ...
2025-02-24T16:33:40.9585837Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9585965Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9586081Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9586151Z        ...
2025-02-24T16:33:40.9586240Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9586371Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9586476Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9586985Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9586990Z 
2025-02-24T16:33:40.9587083Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9587710Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9588044Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9588376Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9589010Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9589016Z 
2025-02-24T16:33:40.9589119Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9589481Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9589855Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9590232Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9590832Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9590837Z 
2025-02-24T16:33:40.9590964Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9591076Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9591150Z        ...
2025-02-24T16:33:40.9591243Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9591374Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9591484Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9591573Z        ...
2025-02-24T16:33:40.9591654Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9591778Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9591881Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9592407Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9592411Z 
2025-02-24T16:33:40.9592540Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9592645Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9592727Z        ...
2025-02-24T16:33:40.9592808Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9592939Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9593049Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9593117Z        ...
2025-02-24T16:33:40.9593205Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9593324Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9593429Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9593910Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9593914Z 
2025-02-24T16:33:40.9594036Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9594143Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9594211Z        ...
2025-02-24T16:33:40.9594295Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9594499Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9594612Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9594683Z        ...
2025-02-24T16:33:40.9594762Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9594884Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9594981Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9595497Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9595501Z 
2025-02-24T16:33:40.9595625Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9595728Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9595801Z        ...
2025-02-24T16:33:40.9595881Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9596004Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9596113Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9596186Z        ...
2025-02-24T16:33:40.9596270Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9596387Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9596489Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9596992Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9597076Z 
2025-02-24T16:33:40.9597202Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9597512Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9597586Z        ...
2025-02-24T16:33:40.9597671Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9597792Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9597903Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9597974Z        ...
2025-02-24T16:33:40.9598060Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9598184Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9598278Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9598777Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9598785Z 
2025-02-24T16:33:40.9598905Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9599014Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9599087Z        ...
2025-02-24T16:33:40.9599166Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9599288Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9599394Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9599472Z        ...
2025-02-24T16:33:40.9599553Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9599678Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9599779Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9600278Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9600287Z 
2025-02-24T16:33:40.9600413Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9600515Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9600587Z        ...
2025-02-24T16:33:40.9600670Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9600789Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9600899Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9600967Z        ...
2025-02-24T16:33:40.9601050Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9601290Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9601394Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9601879Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9601883Z 
2025-02-24T16:33:40.9601977Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9602342Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9602672Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9602995Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9603615Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9603619Z 
2025-02-24T16:33:40.9603716Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9604076Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9604445Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9604821Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9605280Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9605287Z 
2025-02-24T16:33:40.9605410Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9605519Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9605587Z        ...
2025-02-24T16:33:40.9605673Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9605799Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9605905Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9605977Z        ...
2025-02-24T16:33:40.9606058Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9606262Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9606363Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9606865Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9606870Z 
2025-02-24T16:33:40.9606998Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9607101Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9607172Z        ...
2025-02-24T16:33:40.9607364Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9607492Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9607606Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9607674Z        ...
2025-02-24T16:33:40.9607757Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9607879Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9607979Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9608436Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9608446Z 
2025-02-24T16:33:40.9608566Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9608790Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9608857Z        ...
2025-02-24T16:33:40.9608941Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9609058Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9609169Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9609241Z        ...
2025-02-24T16:33:40.9609325Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9609453Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9609555Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9610060Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9610065Z 
2025-02-24T16:33:40.9610190Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9610303Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9610377Z        ...
2025-02-24T16:33:40.9610460Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9610589Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9610696Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9610769Z        ...
2025-02-24T16:33:40.9610849Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9610970Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9611071Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9611565Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9611569Z 
2025-02-24T16:33:40.9611694Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9611799Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9611870Z        ...
2025-02-24T16:33:40.9611957Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9612075Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9612188Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9612255Z        ...
2025-02-24T16:33:40.9612339Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9612457Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9612565Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9613335Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9613344Z 
2025-02-24T16:33:40.9613478Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9613587Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9613657Z        ...
2025-02-24T16:33:40.9613741Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9613966Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9614124Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9614202Z        ...
2025-02-24T16:33:40.9614291Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9614424Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9614526Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9615021Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9615026Z 
2025-02-24T16:33:40.9615158Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9615267Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9615341Z        ...
2025-02-24T16:33:40.9615425Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9615552Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9615779Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9615846Z        ...
2025-02-24T16:33:40.9615930Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9616049Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9616151Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9616644Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9616648Z 
2025-02-24T16:33:40.9616744Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9617109Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9617555Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9617884Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9618374Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9618382Z 
2025-02-24T16:33:40.9618481Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9618837Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9619322Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9619709Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9620171Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9620181Z 
2025-02-24T16:33:40.9620307Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9620420Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9620488Z        ...
2025-02-24T16:33:40.9620576Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9620699Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9620917Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9620992Z        ...
2025-02-24T16:33:40.9621082Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9621216Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9621313Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9621813Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9621818Z 
2025-02-24T16:33:40.9621947Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9622052Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9622125Z        ...
2025-02-24T16:33:40.9622204Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9622332Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9622442Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9622515Z        ...
2025-02-24T16:33:40.9622604Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9622721Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9622824Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9623281Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9623285Z 
2025-02-24T16:33:40.9623411Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9623523Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9623592Z        ...
2025-02-24T16:33:40.9623675Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9623792Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9623903Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9623974Z        ...
2025-02-24T16:33:40.9624058Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9624180Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9624275Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9624775Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9624779Z 
2025-02-24T16:33:40.9624899Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9625093Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9625170Z        ...
2025-02-24T16:33:40.9625251Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9625376Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9625484Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9625556Z        ...
2025-02-24T16:33:40.9625640Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9625764Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9625869Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9626363Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9626368Z 
2025-02-24T16:33:40.9626493Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9626598Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9626676Z        ...
2025-02-24T16:33:40.9626761Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9626879Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9626990Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9627057Z        ...
2025-02-24T16:33:40.9627142Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9627565Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9627675Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9628158Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9628163Z 
2025-02-24T16:33:40.9628288Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9628400Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9628469Z        ...
2025-02-24T16:33:40.9628565Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9628696Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9628805Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9628878Z        ...
2025-02-24T16:33:40.9628958Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9629081Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9629182Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9629686Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9629690Z 
2025-02-24T16:33:40.9629816Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9629920Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9630001Z        ...
2025-02-24T16:33:40.9630082Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9630211Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9630326Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9630397Z        ...
2025-02-24T16:33:40.9630485Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9630604Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9630709Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9631227Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9631231Z 
2025-02-24T16:33:40.9631333Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9631823Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9632155Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9632497Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9633017Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9633022Z 
2025-02-24T16:33:40.9633120Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9633478Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9633958Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9634341Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9634824Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9634828Z 
2025-02-24T16:33:40.9634957Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9635070Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9635138Z        ...
2025-02-24T16:33:40.9635224Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9635347Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9635460Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9635528Z        ...
2025-02-24T16:33:40.9635614Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9635737Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9635836Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9636365Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9636369Z 
2025-02-24T16:33:40.9636491Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9636599Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9636670Z        ...
2025-02-24T16:33:40.9636749Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9636972Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9637082Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9637155Z        ...
2025-02-24T16:33:40.9637234Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9637568Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9637677Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9638172Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9638177Z 
2025-02-24T16:33:40.9638310Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9638420Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9638495Z        ...
2025-02-24T16:33:40.9638585Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9638707Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9638826Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9638895Z        ...
2025-02-24T16:33:40.9638983Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9639103Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9639207Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9639727Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9639854Z 
2025-02-24T16:33:40.9639981Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9640094Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9640160Z        ...
2025-02-24T16:33:40.9640245Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9640370Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9640476Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9640554Z        ...
2025-02-24T16:33:40.9640633Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9640756Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9640852Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9641378Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9641386Z 
2025-02-24T16:33:40.9641513Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9641618Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9641694Z        ...
2025-02-24T16:33:40.9641775Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9641899Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9642010Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9642077Z        ...
2025-02-24T16:33:40.9642165Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9642283Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9642385Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9642883Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9642896Z 
2025-02-24T16:33:40.9643018Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9643128Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9643197Z        ...
2025-02-24T16:33:40.9643282Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9643401Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9643520Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9643596Z        ...
2025-02-24T16:33:40.9643679Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9643916Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9644017Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9644590Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9644598Z 
2025-02-24T16:33:40.9644724Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9644829Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9644905Z        ...
2025-02-24T16:33:40.9644986Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9645110Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9645216Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9645292Z        ...
2025-02-24T16:33:40.9645378Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9645498Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9645600Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9646175Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9646258Z 
2025-02-24T16:33:40.9646360Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9646730Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9647057Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9647499Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9648083Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9648088Z 
2025-02-24T16:33:40.9648180Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9648550Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9648924Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9649409Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9649965Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9649973Z 
2025-02-24T16:33:40.9650101Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9650212Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9650279Z        ...
2025-02-24T16:33:40.9650367Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9650487Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9650598Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9650666Z        ...
2025-02-24T16:33:40.9650754Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9650876Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9650974Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9651563Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9651673Z 
2025-02-24T16:33:40.9651798Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9651906Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9651982Z        ...
2025-02-24T16:33:40.9652060Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9652185Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9652291Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9652365Z        ...
2025-02-24T16:33:40.9652449Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9652575Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9652676Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9653224Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9653231Z 
2025-02-24T16:33:40.9653360Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9653467Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9653541Z        ...
2025-02-24T16:33:40.9653625Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9653744Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9653859Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9653926Z        ...
2025-02-24T16:33:40.9654012Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9654131Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9654234Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9654820Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9654827Z 
2025-02-24T16:33:40.9654947Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9655056Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9655124Z        ...
2025-02-24T16:33:40.9655209Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9655331Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9655438Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9655513Z        ...
2025-02-24T16:33:40.9655594Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9655800Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9655900Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9656490Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9656494Z 
2025-02-24T16:33:40.9656624Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9656728Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9656803Z        ...
2025-02-24T16:33:40.9656882Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9657006Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9657119Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9657186Z        ...
2025-02-24T16:33:40.9657370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9657496Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9657598Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9658172Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9658177Z 
2025-02-24T16:33:40.9658298Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9658525Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9658594Z        ...
2025-02-24T16:33:40.9658682Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9658803Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9658920Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9658994Z        ...
2025-02-24T16:33:40.9659074Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9659200Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9659302Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9659831Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9659836Z 
2025-02-24T16:33:40.9659964Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9660075Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9660152Z        ...
2025-02-24T16:33:40.9660231Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9660354Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9660463Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9660539Z        ...
2025-02-24T16:33:40.9660625Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9660742Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9660846Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9661378Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9661382Z 
2025-02-24T16:33:40.9661479Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9661852Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9662304Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9662639Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9663182Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9663186Z 
2025-02-24T16:33:40.9663277Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9663642Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9664012Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9664489Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9664993Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9664998Z 
2025-02-24T16:33:40.9665125Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9665239Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9665307Z        ...
2025-02-24T16:33:40.9665393Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9665513Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9665623Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9665692Z        ...
2025-02-24T16:33:40.9665775Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9665899Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9665999Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9666547Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9666552Z 
2025-02-24T16:33:40.9666673Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9666787Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9666860Z        ...
2025-02-24T16:33:40.9666938Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9667060Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9667166Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9667239Z        ...
2025-02-24T16:33:40.9667528Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9667667Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9667773Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9668404Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9668410Z 
2025-02-24T16:33:40.9668539Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9668644Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9668722Z        ...
2025-02-24T16:33:40.9668806Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9668927Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9669042Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9669109Z        ...
2025-02-24T16:33:40.9669194Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9669311Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9669415Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9669960Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9669965Z 
2025-02-24T16:33:40.9670089Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9670198Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9670375Z        ...
2025-02-24T16:33:40.9670461Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9670587Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9670695Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9670768Z        ...
2025-02-24T16:33:40.9670846Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9670971Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9671067Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9671617Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9671621Z 
2025-02-24T16:33:40.9671750Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9671854Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9671928Z        ...
2025-02-24T16:33:40.9672011Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9672138Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9672253Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9672321Z        ...
2025-02-24T16:33:40.9672408Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9672526Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9672628Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9673153Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9673164Z 
2025-02-24T16:33:40.9673285Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9673395Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9673464Z        ...
2025-02-24T16:33:40.9673549Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9673672Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9673783Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9673858Z        ...
2025-02-24T16:33:40.9673938Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9674063Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9674161Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9674772Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9674777Z 
2025-02-24T16:33:40.9674907Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9675011Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9675083Z        ...
2025-02-24T16:33:40.9675161Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9675283Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9675393Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9675467Z        ...
2025-02-24T16:33:40.9675550Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9675668Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9675774Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9676314Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9676321Z 
2025-02-24T16:33:40.9676420Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9676787Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9677187Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9677724Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9678270Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9678278Z 
2025-02-24T16:33:40.9678372Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9678734Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9679105Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9679483Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9680105Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9680111Z 
2025-02-24T16:33:40.9680243Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9680359Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9680428Z        ...
2025-02-24T16:33:40.9680517Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9680643Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9680757Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9680826Z        ...
2025-02-24T16:33:40.9680914Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9681041Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9681140Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9681710Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9681714Z 
2025-02-24T16:33:40.9681838Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9681950Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9682025Z        ...
2025-02-24T16:33:40.9682107Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9682233Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9682489Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9682567Z        ...
2025-02-24T16:33:40.9682649Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9682775Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9682879Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9683390Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9683395Z 
2025-02-24T16:33:40.9683527Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9683632Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9683709Z        ...
2025-02-24T16:33:40.9683794Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9683914Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9684030Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9684100Z        ...
2025-02-24T16:33:40.9684188Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9684309Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9684414Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9684959Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9684963Z 
2025-02-24T16:33:40.9685089Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9685199Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9685269Z        ...
2025-02-24T16:33:40.9685357Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9685483Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9685590Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9685674Z        ...
2025-02-24T16:33:40.9685755Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9685881Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9685978Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9686522Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9686527Z 
2025-02-24T16:33:40.9686656Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9686845Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9686925Z        ...
2025-02-24T16:33:40.9687006Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9687137Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9687358Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9687435Z        ...
2025-02-24T16:33:40.9687522Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9687641Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9687744Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9688268Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9688278Z 
2025-02-24T16:33:40.9688398Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9688510Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9688581Z        ...
2025-02-24T16:33:40.9688666Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9688786Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9688900Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9688973Z        ...
2025-02-24T16:33:40.9689170Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9689294Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9689391Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9689944Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9689948Z 
2025-02-24T16:33:40.9690077Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9690181Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9690261Z        ...
2025-02-24T16:33:40.9690341Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9690466Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9690572Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9690647Z        ...
2025-02-24T16:33:40.9690732Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9690854Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9690954Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9691520Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9691524Z 
2025-02-24T16:33:40.9691624Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9691995Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9692317Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9692764Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9693336Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9693340Z 
2025-02-24T16:33:40.9693431Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9693797Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9694170Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9694545Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9695149Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9695153Z 
2025-02-24T16:33:40.9695282Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9695397Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9695465Z        ...
2025-02-24T16:33:40.9695553Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9695675Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9695787Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9695854Z        ...
2025-02-24T16:33:40.9695943Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9696066Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9696163Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9696742Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9696746Z 
2025-02-24T16:33:40.9696867Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9696980Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9697053Z        ...
2025-02-24T16:33:40.9697134Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9697358Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9697468Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9697541Z        ...
2025-02-24T16:33:40.9697620Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9697751Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9697856Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9698473Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9698478Z 
2025-02-24T16:33:40.9705822Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9705965Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9706208Z        ...
2025-02-24T16:33:40.9706308Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9706441Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9706562Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9706631Z        ...
2025-02-24T16:33:40.9706721Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9706861Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9706967Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9707880Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9707889Z 
2025-02-24T16:33:40.9708030Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9708150Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9708222Z        ...
2025-02-24T16:33:40.9708323Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9708456Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9708569Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9708642Z        ...
2025-02-24T16:33:40.9708725Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9708851Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9709089Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9709672Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9709677Z 
2025-02-24T16:33:40.9709810Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9709915Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9709988Z        ...
2025-02-24T16:33:40.9710073Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9710199Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9710311Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9710379Z        ...
2025-02-24T16:33:40.9710464Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9710585Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9710693Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9711253Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9711258Z 
2025-02-24T16:33:40.9711381Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9711489Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9711557Z        ...
2025-02-24T16:33:40.9711643Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9711762Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9711873Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9711944Z        ...
2025-02-24T16:33:40.9712023Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9712144Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9712244Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9712778Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9712783Z 
2025-02-24T16:33:40.9712909Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9713012Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9713084Z        ...
2025-02-24T16:33:40.9713165Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9713427Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9713542Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9713610Z        ...
2025-02-24T16:33:40.9713693Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9713809Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9713909Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9714449Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9714454Z 
2025-02-24T16:33:40.9714554Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9714928Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9715251Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9715657Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9716201Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9716206Z 
2025-02-24T16:33:40.9716302Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9716660Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9717035Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9717640Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9718153Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9718158Z 
2025-02-24T16:33:40.9718286Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9718394Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9718463Z        ...
2025-02-24T16:33:40.9718549Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9718788Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9718906Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9718975Z        ...
2025-02-24T16:33:40.9719060Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9719182Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9719279Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9719831Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9719836Z 
2025-02-24T16:33:40.9719959Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9720067Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9720138Z        ...
2025-02-24T16:33:40.9720217Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9720344Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9720450Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9720522Z        ...
2025-02-24T16:33:40.9720601Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9720722Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9720822Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9721439Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9721444Z 
2025-02-24T16:33:40.9721571Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9721673Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9721747Z        ...
2025-02-24T16:33:40.9721833Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9721950Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9722064Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9722132Z        ...
2025-02-24T16:33:40.9722215Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9722332Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9722434Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9722982Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9722990Z 
2025-02-24T16:33:40.9723109Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9723217Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9723284Z        ...
2025-02-24T16:33:40.9723371Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9723493Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9723597Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9723676Z        ...
2025-02-24T16:33:40.9723756Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9723877Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9723973Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9724491Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9724499Z 
2025-02-24T16:33:40.9724624Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9724727Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9724799Z        ...
2025-02-24T16:33:40.9724878Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9724999Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9725109Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9725177Z        ...
2025-02-24T16:33:40.9725346Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9725467Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9725567Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9726091Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9726099Z 
2025-02-24T16:33:40.9726221Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9726330Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9726398Z        ...
2025-02-24T16:33:40.9726481Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9726598Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9726707Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9726779Z        ...
2025-02-24T16:33:40.9726860Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9726981Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9727076Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9727726Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9727854Z 
2025-02-24T16:33:40.9727957Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9728319Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9728646Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9728984Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9729523Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9729528Z 
2025-02-24T16:33:40.9729624Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9729988Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9730354Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9730856Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9731371Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9731379Z 
2025-02-24T16:33:40.9731504Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9731607Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9731683Z        ...
2025-02-24T16:33:40.9731778Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9731904Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9732008Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9732081Z        ...
2025-02-24T16:33:40.9732168Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9732286Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9732389Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9732938Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9733028Z 
2025-02-24T16:33:40.9733157Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9733265Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9733333Z        ...
2025-02-24T16:33:40.9733417Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9733535Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9733647Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9733714Z        ...
2025-02-24T16:33:40.9733800Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9733921Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9734016Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9734537Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9734545Z 
2025-02-24T16:33:40.9734665Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9734787Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9734921Z        ...
2025-02-24T16:33:40.9735052Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9735253Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9735365Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9735441Z        ...
2025-02-24T16:33:40.9735519Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9735644Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9735746Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9736291Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9736296Z 
2025-02-24T16:33:40.9736425Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9736528Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9736601Z        ...
2025-02-24T16:33:40.9736685Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9736802Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9736910Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9736978Z        ...
2025-02-24T16:33:40.9737061Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9737422Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9737536Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9738086Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9738090Z 
2025-02-24T16:33:40.9738209Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9738321Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9738390Z        ...
2025-02-24T16:33:40.9738473Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9738596Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9738701Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9738776Z        ...
2025-02-24T16:33:40.9738855Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9738978Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9739075Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9739601Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9739605Z 
2025-02-24T16:33:40.9739728Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9739943Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9740016Z        ...
2025-02-24T16:33:40.9740094Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9740215Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9740323Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9740390Z        ...
2025-02-24T16:33:40.9740473Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9740592Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9740694Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9741216Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9741225Z 
2025-02-24T16:33:40.9741344Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9741450Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9741522Z        ...
2025-02-24T16:33:40.9741605Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9741721Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9741833Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9741906Z        ...
2025-02-24T16:33:40.9741985Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9742105Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9742202Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9742752Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9742757Z 
2025-02-24T16:33:40.9742853Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9743219Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9743644Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9743976Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9744518Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9744523Z 
2025-02-24T16:33:40.9744619Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9744985Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9745347Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9745798Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9746314Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9746318Z 
2025-02-24T16:33:40.9746442Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9746550Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9746626Z        ...
2025-02-24T16:33:40.9746706Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9746828Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9746932Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9747004Z        ...
2025-02-24T16:33:40.9747088Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9747204Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9747508Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9748091Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9748096Z 
2025-02-24T16:33:40.9748223Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9748331Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9748403Z        ...
2025-02-24T16:33:40.9748488Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9748604Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9748715Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9748783Z        ...
2025-02-24T16:33:40.9748867Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9748987Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9749083Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9749736Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9749741Z 
2025-02-24T16:33:40.9749867Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9749979Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9750053Z        ...
2025-02-24T16:33:40.9750140Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9750266Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9750373Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9750446Z        ...
2025-02-24T16:33:40.9750525Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9750651Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9750746Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9751303Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9751308Z 
2025-02-24T16:33:40.9751435Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9751537Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9751615Z        ...
2025-02-24T16:33:40.9751803Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9751928Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9752041Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9752109Z        ...
2025-02-24T16:33:40.9752193Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9752309Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9752413Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9752960Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9752971Z 
2025-02-24T16:33:40.9753092Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9753205Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9753275Z        ...
2025-02-24T16:33:40.9753360Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9753478Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9753591Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9753664Z        ...
2025-02-24T16:33:40.9753744Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9753864Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9753959Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9754490Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9754495Z 
2025-02-24T16:33:40.9754619Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9754721Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9754792Z        ...
2025-02-24T16:33:40.9754873Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9754998Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9755103Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9755176Z        ...
2025-02-24T16:33:40.9755261Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9755379Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9755480Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9756004Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9756090Z 
2025-02-24T16:33:40.9756217Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9756324Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9756392Z        ...
2025-02-24T16:33:40.9756481Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9756598Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9756712Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9756779Z        ...
2025-02-24T16:33:40.9756863Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9756985Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9757081Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9757829Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9757835Z 
2025-02-24T16:33:40.9757934Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9758300Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9758765Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9759091Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9759633Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9759640Z 
2025-02-24T16:33:40.9759736Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9760096Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9760468Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9760846Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9761470Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9761476Z 
2025-02-24T16:33:40.9761600Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9761710Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9761778Z        ...
2025-02-24T16:33:40.9761863Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9761991Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9762097Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9762171Z        ...
2025-02-24T16:33:40.9762249Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9762371Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9762466Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9763032Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9763038Z 
2025-02-24T16:33:40.9763165Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9763269Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9763343Z        ...
2025-02-24T16:33:40.9763424Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9763549Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9763742Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9763810Z        ...
2025-02-24T16:33:40.9763896Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9764012Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9764113Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9764634Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9764639Z 
2025-02-24T16:33:40.9764762Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9764871Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9764941Z        ...
2025-02-24T16:33:40.9765026Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9765144Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9765261Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9765334Z        ...
2025-02-24T16:33:40.9765414Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9765537Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9765634Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9766185Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9766190Z 
2025-02-24T16:33:40.9766317Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9766421Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9766496Z        ...
2025-02-24T16:33:40.9766573Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9766699Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9766804Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9766882Z        ...
2025-02-24T16:33:40.9766964Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9767082Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9767183Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9767839Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9767844Z 
2025-02-24T16:33:40.9767970Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9768194Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9768266Z        ...
2025-02-24T16:33:40.9768350Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9768468Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9768577Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9768653Z        ...
2025-02-24T16:33:40.9768736Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9768859Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9768954Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9769484Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9769489Z 
2025-02-24T16:33:40.9769609Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9769721Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9769797Z        ...
2025-02-24T16:33:40.9769876Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9769999Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9770107Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9770182Z        ...
2025-02-24T16:33:40.9770371Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9770493Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9770594Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9771119Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9771124Z 
2025-02-24T16:33:40.9771250Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9771353Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9771429Z        ...
2025-02-24T16:33:40.9771517Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9771633Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9771743Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9771811Z        ...
2025-02-24T16:33:40.9771895Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9772016Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9772116Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9772663Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9772668Z 
2025-02-24T16:33:40.9772759Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9773135Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9773458Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9773863Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9774415Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9774419Z 
2025-02-24T16:33:40.9774516Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9774875Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9775248Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9775623Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9776223Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9776228Z 
2025-02-24T16:33:40.9776349Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9776464Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9776534Z        ...
2025-02-24T16:33:40.9776621Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9776749Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9776855Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9776929Z        ...
2025-02-24T16:33:40.9777015Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9777139Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9777237Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9777906Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9777910Z 
2025-02-24T16:33:40.9778038Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9778141Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9778222Z        ...
2025-02-24T16:33:40.9778303Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9778428Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9778543Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9778612Z        ...
2025-02-24T16:33:40.9778698Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9778819Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9778922Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9779447Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9779451Z 
2025-02-24T16:33:40.9779573Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9779683Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9779752Z        ...
2025-02-24T16:33:40.9779951Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9780072Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9780189Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9780260Z        ...
2025-02-24T16:33:40.9780337Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9780459Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9780559Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9781116Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9781120Z 
2025-02-24T16:33:40.9781244Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9781349Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9781421Z        ...
2025-02-24T16:33:40.9781503Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9781626Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9781730Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9781802Z        ...
2025-02-24T16:33:40.9781885Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9782004Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9782235Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9782784Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9782789Z 
2025-02-24T16:33:40.9782914Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9783022Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9783089Z        ...
2025-02-24T16:33:40.9783173Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9783293Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9783409Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9783480Z        ...
2025-02-24T16:33:40.9783566Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9783690Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9783791Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9784328Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9784332Z 
2025-02-24T16:33:40.9784452Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9784562Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9784635Z        ...
2025-02-24T16:33:40.9784715Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9784840Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9784946Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9785019Z        ...
2025-02-24T16:33:40.9785099Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9785221Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9785322Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9785888Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9785892Z 
2025-02-24T16:33:40.9786018Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9786122Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9786196Z        ...
2025-02-24T16:33:40.9786280Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9786487Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9786603Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9786672Z        ...
2025-02-24T16:33:40.9786758Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9786876Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9786978Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9787825Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9787833Z 
2025-02-24T16:33:40.9787930Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9788300Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9788625Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9789072Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9789663Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9789667Z 
2025-02-24T16:33:40.9789766Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9790123Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9790498Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9790870Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9791429Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9791434Z 
2025-02-24T16:33:40.9791556Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9791669Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9791739Z        ...
2025-02-24T16:33:40.9791966Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9792100Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9792208Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9792283Z        ...
2025-02-24T16:33:40.9792364Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9792490Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9792592Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9793196Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9793200Z 
2025-02-24T16:33:40.9793329Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9793434Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9793512Z        ...
2025-02-24T16:33:40.9793596Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9793725Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9793838Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9793907Z        ...
2025-02-24T16:33:40.9793992Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9794110Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9794419Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9795100Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9795105Z 
2025-02-24T16:33:40.9795227Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9795408Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9795521Z        ...
2025-02-24T16:33:40.9795639Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9795850Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9795975Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9796052Z        ...
2025-02-24T16:33:40.9796162Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9796381Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9796489Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9797185Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:33:40.9797190Z 
2025-02-24T16:33:40.9797612Z DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-02-24T16:33:40.9798029Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9802757Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T16:33:40.9807538Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T16:33:40.9807841Z At positional index 124, first diff: 0.9929028359129612 != 0.9928779361771577
2025-02-24T16:33:40.9808472Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9808483Z 
2025-02-24T16:33:40.9808611Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9808724Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9808799Z        ...
2025-02-24T16:33:40.9808889Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9809014Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9809126Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9809203Z        ...
2025-02-24T16:33:40.9809283Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9809406Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9809507Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9810219Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9810225Z 
2025-02-24T16:33:40.9810358Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9810464Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9810537Z        ...
2025-02-24T16:33:40.9810620Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9810741Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9810847Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9810922Z        ...
2025-02-24T16:33:40.9811009Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9811126Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9811229Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9811812Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9811817Z 
2025-02-24T16:33:40.9811943Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9812053Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9812121Z        ...
2025-02-24T16:33:40.9812287Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9812407Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9812518Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9812586Z        ...
2025-02-24T16:33:40.9812677Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9812798Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9812894Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9813466Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9813471Z 
2025-02-24T16:33:40.9813594Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9813702Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9813779Z        ...
2025-02-24T16:33:40.9813859Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9813985Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9814090Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9814162Z        ...
2025-02-24T16:33:40.9814252Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9814375Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9814477Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9815023Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9815028Z 
2025-02-24T16:33:40.9815154Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9815257Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9815332Z        ...
2025-02-24T16:33:40.9815416Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9815538Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9815649Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9815716Z        ...
2025-02-24T16:33:40.9815802Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9815917Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9816017Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9816669Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9816674Z 
2025-02-24T16:33:40.9816769Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9817137Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9817613Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9817940Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9818615Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9818619Z 
2025-02-24T16:33:40.9818714Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9819074Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9819442Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9819818Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9820355Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9820359Z 
2025-02-24T16:33:40.9820481Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9820590Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9820660Z        ...
2025-02-24T16:33:40.9820747Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9820874Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9820979Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9821052Z        ...
2025-02-24T16:33:40.9821131Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9821252Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9821348Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9822037Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9822042Z 
2025-02-24T16:33:40.9822172Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9822277Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9822354Z        ...
2025-02-24T16:33:40.9822436Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9822558Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9822671Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9822739Z        ...
2025-02-24T16:33:40.9822824Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9822942Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9823043Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9823592Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9823597Z 
2025-02-24T16:33:40.9823717Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9823825Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9823893Z        ...
2025-02-24T16:33:40.9824057Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9824173Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9824283Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9824355Z        ...
2025-02-24T16:33:40.9824432Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9824556Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9824652Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9825334Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:33:40.9825339Z 
2025-02-24T16:33:40.9825508Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T16:33:40.9825866Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9830937Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:33:40.9835830Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:33:40.9836116Z At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T16:33:40.9836725Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9836730Z 
2025-02-24T16:33:40.9836850Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9836960Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9837031Z        ...
2025-02-24T16:33:40.9837118Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9837388Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9837595Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9837679Z        ...
2025-02-24T16:33:40.9837760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9837891Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9837989Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9838581Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9838586Z 
2025-02-24T16:33:40.9838717Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9838823Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9838895Z        ...
2025-02-24T16:33:40.9839120Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9839250Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9839362Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9839431Z        ...
2025-02-24T16:33:40.9839516Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9839637Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9839740Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9840310Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9840319Z 
2025-02-24T16:33:40.9840440Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9840550Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9840616Z        ...
2025-02-24T16:33:40.9840704Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9840823Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9840935Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9841011Z        ...
2025-02-24T16:33:40.9841089Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9841214Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9841422Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9841974Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9841979Z 
2025-02-24T16:33:40.9842103Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9842205Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9842276Z        ...
2025-02-24T16:33:40.9842358Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9842482Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9842586Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9842660Z        ...
2025-02-24T16:33:40.9842742Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9842859Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9842962Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9843437Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9843441Z 
2025-02-24T16:33:40.9843569Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9843676Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9843744Z        ...
2025-02-24T16:33:40.9843826Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9843946Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9844057Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9844127Z        ...
2025-02-24T16:33:40.9844212Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9844334Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9844432Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9844922Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9844927Z 
2025-02-24T16:33:40.9845018Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9845490Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9845821Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9846150Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9846637Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9846641Z 
2025-02-24T16:33:40.9846736Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9847098Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9847820Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9848199Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9848672Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9848676Z 
2025-02-24T16:33:40.9848800Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9848910Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9848982Z        ...
2025-02-24T16:33:40.9849061Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9849189Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9849295Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9849367Z        ...
2025-02-24T16:33:40.9849445Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9849568Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9849673Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9850170Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9850174Z 
2025-02-24T16:33:40.9850298Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9850402Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9850474Z        ...
2025-02-24T16:33:40.9850559Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9850796Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9850913Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9850981Z        ...
2025-02-24T16:33:40.9851065Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9851181Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9851282Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9851756Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9851761Z 
2025-02-24T16:33:40.9851880Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9851989Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9852056Z        ...
2025-02-24T16:33:40.9852140Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9852262Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9852372Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9852445Z        ...
2025-02-24T16:33:40.9852524Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9852643Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9852738Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9853343Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:33:40.9853456Z 
2025-02-24T16:33:40.9853627Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T16:33:40.9853994Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9858953Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:33:40.9863953Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:33:40.9864826Z At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T16:33:40.9865365Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9865369Z 
2025-02-24T16:33:40.9865492Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9865604Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9865676Z        ...
2025-02-24T16:33:40.9865762Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9865883Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9865998Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9866070Z        ...
2025-02-24T16:33:40.9866149Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9866271Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9866368Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9866869Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9866873Z 
2025-02-24T16:33:40.9867001Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9867104Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9867177Z        ...
2025-02-24T16:33:40.9867359Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9867486Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9867597Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9867664Z        ...
2025-02-24T16:33:40.9867747Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9867863Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9867964Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9868571Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9868576Z 
2025-02-24T16:33:40.9868704Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9868812Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9868879Z        ...
2025-02-24T16:33:40.9868963Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9869084Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9869197Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9869270Z        ...
2025-02-24T16:33:40.9869347Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9869469Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9869565Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9870046Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9870051Z 
2025-02-24T16:33:40.9870171Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9870277Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9870349Z        ...
2025-02-24T16:33:40.9870427Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9870659Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9870766Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9870841Z        ...
2025-02-24T16:33:40.9870920Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9871040Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9871141Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9871630Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9871638Z 
2025-02-24T16:33:40.9871765Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9871868Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9871940Z        ...
2025-02-24T16:33:40.9872024Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9872140Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9872252Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9872319Z        ...
2025-02-24T16:33:40.9872404Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9872519Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9872621Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9873130Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9873135Z 
2025-02-24T16:33:40.9873229Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9873594Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9873921Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9874325Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9874831Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9874838Z 
2025-02-24T16:33:40.9874935Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9875288Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9875661Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9876105Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9876585Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9876590Z 
2025-02-24T16:33:40.9876710Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9876822Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9876890Z        ...
2025-02-24T16:33:40.9876976Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9877100Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9877210Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9877412Z        ...
2025-02-24T16:33:40.9877493Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9877616Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9877711Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9878229Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9878234Z 
2025-02-24T16:33:40.9878363Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9878465Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9878536Z        ...
2025-02-24T16:33:40.9878618Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9878742Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9878859Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9878926Z        ...
2025-02-24T16:33:40.9879008Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9879124Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9879224Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9879699Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9879709Z 
2025-02-24T16:33:40.9879944Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9880054Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9880122Z        ...
2025-02-24T16:33:40.9880205Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9880322Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9880431Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9880506Z        ...
2025-02-24T16:33:40.9880584Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9880705Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9880801Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9881313Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9881317Z 
2025-02-24T16:33:40.9881442Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9881546Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9881619Z        ...
2025-02-24T16:33:40.9881697Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9881819Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9881923Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9881995Z        ...
2025-02-24T16:33:40.9882188Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9882304Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9882404Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9882912Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9882916Z 
2025-02-24T16:33:40.9883040Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9883148Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9883218Z        ...
2025-02-24T16:33:40.9883301Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9883417Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9883525Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9883592Z        ...
2025-02-24T16:33:40.9883677Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9883800Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9883897Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9884390Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9884394Z 
2025-02-24T16:33:40.9884513Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9884620Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9884693Z        ...
2025-02-24T16:33:40.9884775Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9884899Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9885004Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9885079Z        ...
2025-02-24T16:33:40.9885158Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9885282Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9885387Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9885862Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9885866Z 
2025-02-24T16:33:40.9885991Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9886093Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9886166Z        ...
2025-02-24T16:33:40.9886333Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9886454Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9886565Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9886633Z        ...
2025-02-24T16:33:40.9886721Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9886837Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9886940Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9887573Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9887578Z 
2025-02-24T16:33:40.9887675Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9888042Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9888368Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9888822Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9889320Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9889324Z 
2025-02-24T16:33:40.9889420Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9889775Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9890160Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9890532Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9891003Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9891007Z 
2025-02-24T16:33:40.9891129Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9891237Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9891305Z        ...
2025-02-24T16:33:40.9891497Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9891626Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9891733Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9891805Z        ...
2025-02-24T16:33:40.9891886Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9892008Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9892107Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9892623Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9892627Z 
2025-02-24T16:33:40.9892751Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9892854Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9892930Z        ...
2025-02-24T16:33:40.9893009Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9893142Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9893252Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9893320Z        ...
2025-02-24T16:33:40.9893403Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9893518Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9893618Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9894167Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9894171Z 
2025-02-24T16:33:40.9894295Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9894402Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9894470Z        ...
2025-02-24T16:33:40.9894553Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9894669Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9894782Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9894854Z        ...
2025-02-24T16:33:40.9894936Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9895057Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9895151Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9895658Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9895662Z 
2025-02-24T16:33:40.9895781Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9895889Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9895960Z        ...
2025-02-24T16:33:40.9896038Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9896158Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9896264Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9896340Z        ...
2025-02-24T16:33:40.9896419Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9896540Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9896640Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9897137Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9897145Z 
2025-02-24T16:33:40.9897372Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9897477Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9897549Z        ...
2025-02-24T16:33:40.9897632Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9897748Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9897861Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9898042Z        ...
2025-02-24T16:33:40.9898128Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9898244Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9898343Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9898833Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9898842Z 
2025-02-24T16:33:40.9898962Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9899072Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9899139Z        ...
2025-02-24T16:33:40.9899223Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9899344Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9899450Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9899522Z        ...
2025-02-24T16:33:40.9899604Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9899726Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9899822Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9900368Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9900482Z 
2025-02-24T16:33:40.9900609Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9900712Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9900784Z        ...
2025-02-24T16:33:40.9900863Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9900985Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9901097Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9901163Z        ...
2025-02-24T16:33:40.9901248Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9901367Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9901467Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9902007Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9902015Z 
2025-02-24T16:33:40.9902108Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9902470Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9902798Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9903121Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9903671Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9903675Z 
2025-02-24T16:33:40.9903775Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9904211Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9904583Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9904958Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9905458Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9905538Z 
2025-02-24T16:33:40.9905660Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9905770Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9905839Z        ...
2025-02-24T16:33:40.9905928Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9906047Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9906158Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9906236Z        ...
2025-02-24T16:33:40.9906317Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9906438Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9906534Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9907081Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9907089Z 
2025-02-24T16:33:40.9907214Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9907427Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9907500Z        ...
2025-02-24T16:33:40.9907579Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9907699Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9907805Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9907877Z        ...
2025-02-24T16:33:40.9907959Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9908080Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9908180Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9908683Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9908688Z 
2025-02-24T16:33:40.9908816Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9908923Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9908990Z        ...
2025-02-24T16:33:40.9909073Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9909189Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9909299Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9909367Z        ...
2025-02-24T16:33:40.9909452Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9909706Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9909807Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9910351Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9910356Z 
2025-02-24T16:33:40.9910475Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9910586Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9910658Z        ...
2025-02-24T16:33:40.9910737Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9910859Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9910964Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9911035Z        ...
2025-02-24T16:33:40.9911114Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9911234Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9911338Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9911872Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9911876Z 
2025-02-24T16:33:40.9911999Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9912211Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9912284Z        ...
2025-02-24T16:33:40.9912368Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9912484Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9912593Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9912665Z        ...
2025-02-24T16:33:40.9912748Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9912862Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9912967Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9913491Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9913495Z 
2025-02-24T16:33:40.9913613Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9913719Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9913796Z        ...
2025-02-24T16:33:40.9913880Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9914002Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9914107Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9914178Z        ...
2025-02-24T16:33:40.9914256Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9914379Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9914474Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9915058Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9915063Z 
2025-02-24T16:33:40.9915187Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9915290Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9915365Z        ...
2025-02-24T16:33:40.9915443Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9915567Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9915676Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9915744Z        ...
2025-02-24T16:33:40.9915828Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9915945Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9916045Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9916714Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9916724Z 
2025-02-24T16:33:40.9916817Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9917183Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9917648Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9917971Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9918675Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9918680Z 
2025-02-24T16:33:40.9918777Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9919138Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9919514Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9919891Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9920448Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9920458Z 
2025-02-24T16:33:40.9920579Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9920693Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9920760Z        ...
2025-02-24T16:33:40.9920844Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9920962Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9921072Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9921144Z        ...
2025-02-24T16:33:40.9921222Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9921343Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9921548Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9922153Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9922157Z 
2025-02-24T16:33:40.9922281Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9922383Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9922458Z        ...
2025-02-24T16:33:40.9922538Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9922658Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9922764Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9922836Z        ...
2025-02-24T16:33:40.9922921Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9923035Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9923136Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9923701Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9923705Z 
2025-02-24T16:33:40.9923831Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9923939Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9924109Z        ...
2025-02-24T16:33:40.9924193Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9924311Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9924421Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9924488Z        ...
2025-02-24T16:33:40.9924571Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9924690Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9924786Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9925395Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9925400Z 
2025-02-24T16:33:40.9925520Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9925629Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9925703Z        ...
2025-02-24T16:33:40.9925782Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9925903Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9926008Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9926080Z        ...
2025-02-24T16:33:40.9926159Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9926280Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9926379Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9926973Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9926977Z 
2025-02-24T16:33:40.9927101Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9927207Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9927403Z        ...
2025-02-24T16:33:40.9927491Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9927609Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9927719Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9927787Z        ...
2025-02-24T16:33:40.9927870Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9927985Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9928085Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9928811Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9928817Z 
2025-02-24T16:33:40.9928939Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9929047Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9929114Z        ...
2025-02-24T16:33:40.9929203Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9929326Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9929431Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9929504Z        ...
2025-02-24T16:33:40.9929584Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9929718Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9929819Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9930134Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[stimulated_emission_factor] - AssertionError: 
2025-02-24T16:33:40.9930241Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9930245Z 
2025-02-24T16:33:40.9930338Z Mismatched elements: 120 / 584480 (0.0205%)
2025-02-24T16:33:40.9930430Z Max absolute difference: 1.
2025-02-24T16:33:40.9930513Z Max relative difference: 1.
2025-02-24T16:33:40.9930644Z  x: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:33:40.9930860Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:33:40.9930960Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T16:33:40.9931078Z  y: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:33:40.9931170Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:33:40.9931270Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T16:33:40.9931577Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_lower_level_index] - AssertionError: 
2025-02-24T16:33:40.9931672Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9931677Z 
2025-02-24T16:33:40.9931776Z Mismatched elements: 748 / 29224 (2.56%)
2025-02-24T16:33:40.9931866Z Max absolute difference: 4005
2025-02-24T16:33:40.9931962Z Max relative difference: 26.00649351
2025-02-24T16:33:40.9932068Z  x: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T16:33:40.9932172Z  y: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T16:33:40.9932459Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_upper_level_index] - AssertionError: 
2025-02-24T16:33:40.9932556Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9932559Z 
2025-02-24T16:33:40.9932654Z Mismatched elements: 1847 / 29224 (6.32%)
2025-02-24T16:33:40.9932740Z Max absolute difference: 4046
2025-02-24T16:33:40.9932837Z Max relative difference: 24.82208589
2025-02-24T16:33:40.9932940Z  x: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T16:33:40.9933038Z  y: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T16:33:40.9933309Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_sobolev] - AssertionError: 
2025-02-24T16:33:40.9933403Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9933407Z 
2025-02-24T16:33:40.9933505Z Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T16:33:40.9933595Z Max absolute difference: 0.99984222
2025-02-24T16:33:40.9933694Z Max relative difference: 6337.12154973
2025-02-24T16:33:40.9933781Z  x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.9933861Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.9933942Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:33:40.9934022Z  y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.9934103Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.9934178Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:33:40.9934527Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines] - AssertionError: 
2025-02-24T16:33:40.9934630Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9934634Z 
2025-02-24T16:33:40.9934728Z Mismatched elements: 13335 / 263016 (5.07%)
2025-02-24T16:33:40.9934830Z Max absolute difference: 4.25260542e+12
2025-02-24T16:33:40.9934920Z Max relative difference: 18196.0085861
2025-02-24T16:33:40.9935073Z  x: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T16:33:40.9935159Z         4.043917e+10, 6.677200e-07],
2025-02-24T16:33:40.9935293Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T16:33:40.9935438Z  y: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T16:33:40.9935515Z         4.043917e+10, 6.677200e-07],
2025-02-24T16:33:40.9935648Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T16:33:40.9935889Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[f_lu] - AssertionError: 
2025-02-24T16:33:40.9935992Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9935996Z 
2025-02-24T16:33:40.9936090Z Mismatched elements: 2221 / 29224 (7.6%)
2025-02-24T16:33:40.9936179Z Max absolute difference: 2.92713618
2025-02-24T16:33:40.9936273Z Max relative difference: 18196.0085861
2025-02-24T16:33:40.9936411Z  x: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T16:33:40.9936570Z        1.126883e+00, 4.414472e-04])
2025-02-24T16:33:40.9936710Z  y: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T16:33:40.9936784Z        1.126883e+00, 4.414472e-04])
2025-02-24T16:33:40.9937049Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[tau_sobolevs] - AssertionError: 
2025-02-24T16:33:40.9937142Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9937145Z 
2025-02-24T16:33:40.9937341Z Mismatched elements: 39620 / 584480 (6.78%)
2025-02-24T16:33:40.9937436Z Max absolute difference: 282815.33818472
2025-02-24T16:33:40.9937536Z Max relative difference: 4.12352828e+47
2025-02-24T16:33:40.9937679Z  x: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T16:33:40.9937758Z         0.000000e+00, 0.000000e+00],
2025-02-24T16:33:40.9937889Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T16:33:40.9938024Z  y: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T16:33:40.9938108Z         0.000000e+00, 0.000000e+00],
2025-02-24T16:33:40.9938238Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T16:33:40.9938726Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_w] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:33:40.9938731Z 
2025-02-24T16:33:40.9938894Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:33:40.9938967Z [index]: [0, 1]
2025-02-24T16:33:40.9939071Z [left]:  [0.40039163797855976, 0.45006901732183335]
2025-02-24T16:33:40.9939177Z [right]: [0.40039163797855976, 0.45013644671958974]
2025-02-24T16:33:40.9939346Z At positional index 1, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-24T16:33:40.9939835Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_rad] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:33:40.9939842Z 
2025-02-24T16:33:40.9939997Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:33:40.9940074Z [index]: [0, 1]
2025-02-24T16:33:40.9940173Z [left]:  [9967.488442185557, 10091.396322818857]
2025-02-24T16:33:40.9940267Z [right]: [9967.488442185557, 10090.925208074616]
2025-02-24T16:33:40.9940447Z At positional index 1, first diff: 10091.396322818857 != 10090.925208074616
2025-02-24T16:33:40.9940976Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_electron_densities] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:33:40.9941094Z 
2025-02-24T16:33:40.9941260Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:33:40.9941342Z [index]: [0, 1]
2025-02-24T16:33:40.9941437Z [left]:  [2869544645.3209715, 2881024886.0882797]
2025-02-24T16:33:40.9941538Z [right]: [2869544645.3209715, 2880986026.9779425]
2025-02-24T16:33:40.9941699Z At positional index 1, first diff: 2881024886.0882797 != 2880986026.9779425
2025-02-24T16:33:40.9942082Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[nu_bar_estimator] - AssertionError: Series are different
2025-02-24T16:33:40.9942086Z 
2025-02-24T16:33:40.9942180Z Series values are different (100.0 %)
2025-02-24T16:33:40.9942313Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:33:40.9943540Z [left]:  [1.020204277799175e+29, 8.604643039338653e+28, 7.621843612415334e+28, 6.887796775939623e+28, 6.338143063845976e+28, 5.9617708329702514e+28, 5.583215038688496e+28, 5.2621420110438605e+28, 5.007194689998156e+28, 4.79514420355033e+28, 4.630537292368222e+28, 4.4256902590810215e+28, 4.270865369572798e+28, 4.0945442836573385e+28, 3.972280940559009e+28, 3.88415238527491e+28, 3.7498225331847816e+28, 3.6666118688506595e+28, 3.5319738797726317e+28, 3.4372707153252074e+28]
2025-02-24T16:33:40.9944740Z [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-02-24T16:33:40.9945040Z At positional index 0, first diff: 1.020204277799175e+29 != 1.0190851489144414e+29
2025-02-24T16:33:40.9945412Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[j_estimator] - AssertionError: Series are different
2025-02-24T16:33:40.9945416Z 
2025-02-24T16:33:40.9945509Z Series values are different (100.0 %)
2025-02-24T16:33:40.9945636Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:33:40.9946613Z [left]:  [116635492761989.14, 98171051632121.9, 86872515261187.03, 78289696965689.94, 72209193315676.52, 67743848273202.75, 63510940656107.945, 60117004438842.41, 57572723670164.85, 55316097836075.21, 53398108009568.72, 51391839595543.516, 49914799926154.26, 48252386019894.586, 46984233483222.11, 46076787175987.375, 45005288890715.836, 44179675761282.96, 43040066710169.75, 42141149121109.805]
2025-02-24T16:33:40.9947687Z [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-02-24T16:33:40.9947865Z At positional index 0, first diff: 116635492761989.14 != 116548101693134.0
2025-02-24T16:33:40.9948230Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[t_radiative] - AssertionError: Series are different
2025-02-24T16:33:40.9948234Z 
2025-02-24T16:33:40.9948325Z Series values are different (90.0 %)
2025-02-24T16:33:40.9948456Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:33:40.9949461Z [left]:  [10091.396322818857, 10113.672762424394, 10138.572146470884, 10142.407829541042, 10149.471061360666, 10124.731447668684, 10084.96501000204, 10057.884801342841, 10073.983914823792, 10031.92450183089, 10029.890159447663, 9982.658841271634, 9943.375727608094, 9914.259749796103, 9893.924180562473, 9854.860600288928, 9802.891513260804, 9774.848565783679, 9735.162327402864, 9698.91109582603]
2025-02-24T16:33:40.9950564Z [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-02-24T16:33:40.9950741Z At positional index 0, first diff: 10091.396322818857 != 10090.925208074616
2025-02-24T16:33:40.9951122Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[dilution_factor] - AssertionError: Series are different
2025-02-24T16:33:40.9951126Z 
2025-02-24T16:33:40.9951217Z Series values are different (95.0 %)
2025-02-24T16:33:40.9951340Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:33:40.9952433Z [left]:  [0.45006901732183335, 0.3591778672440068, 0.2993157944909688, 0.2578615845098733, 0.22544220327867867, 0.2010999763061898, 0.18257381854718469, 0.16658101749462778, 0.15049754388199085, 0.13975435818105253, 0.1286220608480736, 0.12092168181342128, 0.11342334056954673, 0.10650389106044367, 0.10016109465785494, 0.09484390983006774, 0.09052533757303853, 0.0858591268281399, 0.08203028321765116, 0.07824287530618096]
2025-02-24T16:33:40.9953511Z [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-02-24T16:33:40.9953789Z At positional index 0, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-24T16:33:40.9954151Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_nus] - AssertionError: Series are different
2025-02-24T16:33:40.9954156Z 
2025-02-24T16:33:40.9954254Z Series values are different (5.1125 %)
2025-02-24T16:33:40.9954623Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9960090Z [left]:  [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.8, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.4, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313315.0, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-02-24T16:33:40.9965196Z [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-02-24T16:33:40.9965500Z At positional index 56, first diff: 657003154645147.8 != 657025184715239.1
2025-02-24T16:33:40.9965884Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_energies] - AssertionError: Series are different
2025-02-24T16:33:40.9965889Z 
2025-02-24T16:33:40.9965989Z Series values are different (1.3025 %)
2025-02-24T16:33:40.9966355Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9972762Z [left]:  [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503756e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.558071221185956e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.2709056323648205e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544446e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.5337925181007677e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T16:33:40.9979142Z [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T16:33:40.9979358Z At positional index 414, first diff: 2.5657552576608082e-05 != 2.5347525852067693e-05
2025-02-24T16:33:40.9979829Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets - AssertionError: 
2025-02-24T16:33:40.9979938Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9979942Z 
2025-02-24T16:33:40.9980036Z Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T16:33:40.9980135Z Max absolute difference: 4.30543741e+37
2025-02-24T16:33:40.9980232Z Max relative difference: 1.
2025-02-24T16:33:40.9980383Z  x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9980467Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9980606Z  y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9980687Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9981073Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets_reabsorbed - AssertionError: 
2025-02-24T16:33:40.9981175Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9981179Z 
2025-02-24T16:33:40.9981280Z Mismatched elements: 252 / 10000 (2.52%)
2025-02-24T16:33:40.9981371Z Max absolute difference: 4.15247374e+37
2025-02-24T16:33:40.9981462Z Max relative difference: 1.
2025-02-24T16:33:40.9981599Z  x: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9981680Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9981930Z  y: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9982007Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9982309Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve - AssertionError: 
2025-02-24T16:33:40.9982404Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9982407Z 
2025-02-24T16:33:40.9982502Z Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T16:33:40.9982591Z Max absolute difference: 4.30543741e+37
2025-02-24T16:33:40.9982681Z Max relative difference: 1.
2025-02-24T16:33:40.9989952Z  x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9990066Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9990240Z  y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9990319Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9990656Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_j_blue_estimators - AssertionError: 
2025-02-24T16:33:40.9990768Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9990773Z 
2025-02-24T16:33:40.9990874Z Mismatched elements: 491895 / 584480 (84.2%)
2025-02-24T16:33:40.9990973Z Max absolute difference: 5.32418652e-19
2025-02-24T16:33:40.9991062Z Max relative difference: 12.23359055
2025-02-24T16:33:40.9991155Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9991243Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9991320Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.9991407Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9991487Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9991567Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.9991839Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_spectrum - AssertionError: 
2025-02-24T16:33:40.9991945Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9991949Z 
2025-02-24T16:33:40.9992045Z Mismatched elements: 4832 / 10000 (48.3%)
2025-02-24T16:33:40.9992141Z Max absolute difference: 1.38672909e+39
2025-02-24T16:33:40.9992235Z Max relative difference: 5.25284451
2025-02-24T16:33:40.9992390Z  x: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.9992472Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9992612Z  y: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.9992692Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9993003Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_virtual_spectrum - AssertionError: 
2025-02-24T16:33:40.9993267Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9993273Z 
2025-02-24T16:33:40.9993374Z Mismatched elements: 5933 / 10000 (59.3%)
2025-02-24T16:33:40.9993466Z Max absolute difference: 5.26760031e+38
2025-02-24T16:33:40.9993562Z Max relative difference: 35562.41947434
2025-02-24T16:33:40.9993713Z  x: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.9993795Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9993943Z  y: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.9994019Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9994478Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-downbranch] - AssertionError: 
2025-02-24T16:33:40.9994584Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9994588Z 
2025-02-24T16:33:40.9994690Z Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T16:33:40.9994794Z Max absolute difference: 7.03072887e-19
2025-02-24T16:33:40.9994885Z Max relative difference: 7.72237896
2025-02-24T16:33:40.9994974Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9995054Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9995139Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.9995228Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9995302Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9995498Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.9995929Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-downbranch] - AssertionError: 
2025-02-24T16:33:40.9996028Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9996032Z 
2025-02-24T16:33:40.9996125Z Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T16:33:40.9996215Z Max absolute difference: 2.09719426e+39
2025-02-24T16:33:40.9996307Z Max relative difference: 4.0036592
2025-02-24T16:33:40.9996458Z  x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.9996541Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9996680Z  y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.9996764Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9997219Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-downbranch] - AssertionError: 
2025-02-24T16:33:40.9997552Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9997560Z 
2025-02-24T16:33:40.9997722Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:33:40.9997826Z Max absolute difference: 5.00661745e+37
2025-02-24T16:33:40.9997922Z Max relative difference: 17.51202125
2025-02-24T16:33:40.9998065Z  x: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-02-24T16:33:40.9998140Z        2.279436e+31, 2.243943e+31])
2025-02-24T16:33:40.9998281Z  y: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-02-24T16:33:40.9998360Z        2.292907e+31, 2.257206e+31])
2025-02-24T16:33:40.9998800Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-macroatom] - AssertionError: 
2025-02-24T16:33:40.9998895Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9998899Z 
2025-02-24T16:33:40.9999002Z Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T16:33:40.9999103Z Max absolute difference: 4.67863561e-19
2025-02-24T16:33:40.9999189Z Max relative difference: 3.25828651
2025-02-24T16:33:40.9999275Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9999355Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9999437Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.9999517Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9999597Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9999676Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:41.0000255Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-macroatom] - AssertionError: 
2025-02-24T16:33:41.0000361Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0000366Z 
2025-02-24T16:33:41.0000454Z Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T16:33:41.0000551Z Max absolute difference: 8.5486318e+38
2025-02-24T16:33:41.0000642Z Max relative difference: 1.86186015
2025-02-24T16:33:41.0000784Z  x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T16:33:41.0000865Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0000999Z  y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T16:33:41.0001080Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0001525Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-macroatom] - AssertionError: 
2025-02-24T16:33:41.0001624Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0001627Z 
2025-02-24T16:33:41.0001725Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:33:41.0001815Z Max absolute difference: 2.90101642e+37
2025-02-24T16:33:41.0001905Z Max relative difference: 0.98973757
2025-02-24T16:33:41.0002041Z  x: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-02-24T16:33:41.0002121Z        1.330497e+31, 1.294462e+31])
2025-02-24T16:33:41.0002389Z  y: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-02-24T16:33:41.0002464Z        1.375141e+31, 1.337928e+31])
2025-02-24T16:33:41.0002903Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-macroatom] - AssertionError: 
2025-02-24T16:33:41.0003001Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0003005Z 
2025-02-24T16:33:41.0003107Z Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T16:33:41.0003202Z Max absolute difference: 4.67863561e-19
2025-02-24T16:33:41.0003287Z Max relative difference: 3.25828651
2025-02-24T16:33:41.0003380Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:41.0003457Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:41.0003539Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:41.0003617Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:41.0003702Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:41.0003781Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:41.0004200Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-macroatom] - AssertionError: 
2025-02-24T16:33:41.0004299Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0004303Z 
2025-02-24T16:33:41.0004390Z Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T16:33:41.0004485Z Max absolute difference: 8.5486318e+38
2025-02-24T16:33:41.0004576Z Max relative difference: 1.86186015
2025-02-24T16:33:41.0004715Z  x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T16:33:41.0004797Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0004930Z  y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T16:33:41.0005011Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0005450Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-macroatom] - AssertionError: 
2025-02-24T16:33:41.0005553Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0005557Z 
2025-02-24T16:33:41.0005652Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:33:41.0005742Z Max absolute difference: 2.99183385e+37
2025-02-24T16:33:41.0005834Z Max relative difference: 0.98992197
2025-02-24T16:33:41.0005969Z  x: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-02-24T16:33:41.0006050Z        1.260980e+31, 1.222587e+31])
2025-02-24T16:33:41.0006191Z  y: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-02-24T16:33:41.0006266Z        1.193005e+31, 1.164854e+31])
2025-02-24T16:33:41.0006823Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-downbranch] - AssertionError: 
2025-02-24T16:33:41.0006920Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0006924Z 
2025-02-24T16:33:41.0007024Z Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T16:33:41.0007115Z Max absolute difference: 7.03072887e-19
2025-02-24T16:33:41.0007210Z Max relative difference: 7.72237896
2025-02-24T16:33:41.0007413Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:41.0007492Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:41.0007574Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:41.0007653Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:41.0007733Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:41.0007808Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:41.0008233Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-downbranch] - AssertionError: 
2025-02-24T16:33:41.0008332Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0008336Z 
2025-02-24T16:33:41.0008425Z Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T16:33:41.0008518Z Max absolute difference: 2.09719426e+39
2025-02-24T16:33:41.0008606Z Max relative difference: 4.0036592
2025-02-24T16:33:41.0008748Z  x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T16:33:41.0008946Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0009080Z  y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T16:33:41.0009163Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0009605Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-downbranch] - AssertionError: 
2025-02-24T16:33:41.0009704Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0009707Z 
2025-02-24T16:33:41.0009803Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:33:41.0009893Z Max absolute difference: 5.0153284e+37
2025-02-24T16:33:41.0009983Z Max relative difference: 4.90769503
2025-02-24T16:33:41.0010120Z  x: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-02-24T16:33:41.0010199Z        2.088676e+31, 2.060278e+31])
2025-02-24T16:33:41.0010333Z  y: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-02-24T16:33:41.0010417Z        2.124305e+31, 2.101081e+31])
2025-02-24T16:33:41.0010766Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop - AssertionError: 
2025-02-24T16:33:41.0010860Z Not equal to tolerance rtol=1e-13, atol=0
2025-02-24T16:33:41.0010863Z 
2025-02-24T16:33:41.0010952Z Mismatched elements: 20 / 20 (100%)
2025-02-24T16:33:41.0011040Z Max absolute difference: 2.25821059e+25
2025-02-24T16:33:41.0011131Z Max relative difference: 0.00054426
2025-02-24T16:33:41.0011268Z  x: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-02-24T16:33:41.0011389Z        6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-02-24T16:33:41.0011514Z        4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-02-24T16:33:41.0011643Z  y: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-02-24T16:33:41.0011761Z        6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-02-24T16:33:41.0011880Z        4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-02-24T16:33:41.0012270Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop_vpacket_log - AssertionError: 
2025-02-24T16:33:41.0012381Z Not equal to tolerance rtol=1e-12, atol=1e-15
2025-02-24T16:33:41.0012385Z 
2025-02-24T16:33:41.0012470Z Mismatched elements: 20 / 20 (100%)
2025-02-24T16:33:41.0012567Z Max absolute difference: 1.93283629e+25
2025-02-24T16:33:41.0012653Z Max relative difference: 0.00029148
2025-02-24T16:33:41.0012791Z  x: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-02-24T16:33:41.0013023Z        6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-02-24T16:33:41.0013142Z        4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-02-24T16:33:41.0013273Z  y: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-02-24T16:33:41.0013381Z        6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-02-24T16:33:41.0013501Z        4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-02-24T16:33:41.0013835Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_boundary_interactions - AssertionError: 
2025-02-24T16:33:41.0013920Z Arrays are not equal
2025-02-24T16:33:41.0013924Z 
2025-02-24T16:33:41.0014017Z (shapes (4000, 64), (4000, 62) mismatch)
2025-02-24T16:33:41.0014148Z  x: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:33:41.0014235Z         (-1, -1, -1), (-1, -1, -1)],
2025-02-24T16:33:41.0014336Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T16:33:41.0014466Z  y: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:33:41.0014558Z         (-1, -1, -1), (-1, -1, -1)],
2025-02-24T16:33:41.0014656Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T16:33:41.0015081Z FAILED tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py::test_montecarlo_main_loop_weighted - AssertionError: 
2025-02-24T16:33:41.0015256Z Not equal to tolerance rtol=0.01, atol=0
2025-02-24T16:33:41.0015260Z 
2025-02-24T16:33:41.0015356Z Mismatched elements: 33 / 100000 (0.033%)
2025-02-24T16:33:41.0015453Z Max absolute difference: 2.00640487e-05
2025-02-24T16:33:41.0015540Z Max relative difference: 2.06329455
2025-02-24T16:33:41.0015702Z  x: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T16:33:41.0015786Z        -9.757136e-06,  1.019764e-05])
2025-02-24T16:33:41.0015937Z  y: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T16:33:41.0016020Z        -9.757136e-06,  1.019764e-05])
2025-02-24T16:33:41.0016485Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - AssertionError: 
2025-02-24T16:33:41.0016587Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0016591Z 
2025-02-24T16:33:41.0016678Z (shapes (508,), (515,) mismatch)
2025-02-24T16:33:41.0016816Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:33:41.0016929Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:33:41.0017052Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:33:41.0017182Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:33:41.0017396Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:33:41.0017517Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:33:41.0017974Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - AssertionError: 
2025-02-24T16:33:41.0018075Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0018080Z 
2025-02-24T16:33:41.0018166Z (shapes (558,), (560,) mismatch)
2025-02-24T16:33:41.0018292Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:33:41.0018411Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:33:41.0018524Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:33:41.0018651Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:33:41.0018763Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:33:41.0018875Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:33:41.0019440Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - AssertionError: 
2025-02-24T16:33:41.0019538Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0019542Z 
2025-02-24T16:33:41.0019629Z (shapes (147,), (136,) mismatch)
2025-02-24T16:33:41.0019754Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:33:41.0019867Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:33:41.0019989Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:33:41.0020112Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:33:41.0020224Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:33:41.0020336Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:33:41.0020784Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - AssertionError: 
2025-02-24T16:33:41.0020882Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0020890Z 
2025-02-24T16:33:41.0020969Z (shapes (159,), (153,) mismatch)
2025-02-24T16:33:41.0021099Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:33:41.0021205Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:33:41.0021322Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:33:41.0021451Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:33:41.0021666Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:33:41.0021785Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:33:41.0022230Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - AssertionError: 
2025-02-24T16:33:41.0022328Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0022331Z 
2025-02-24T16:33:41.0022416Z (shapes (508,), (515,) mismatch)
2025-02-24T16:33:41.0022546Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:33:41.0022658Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:33:41.0022771Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:33:41.0022898Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:33:41.0023004Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:33:41.0023126Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:33:41.0023581Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - AssertionError: 
2025-02-24T16:33:41.0023675Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0023679Z 
2025-02-24T16:33:41.0023769Z (shapes (1466,), (1481,) mismatch)
2025-02-24T16:33:41.0023911Z  x: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-02-24T16:33:41.0023996Z        11152.962595, 11172.044815])
2025-02-24T16:33:41.0024137Z  y: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-02-24T16:33:41.0024214Z        11398.237865, 11111.204868])
2025-02-24T16:33:41.0024666Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - AssertionError: 
2025-02-24T16:33:41.0024765Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0024769Z 
2025-02-24T16:33:41.0024856Z (shapes (147,), (136,) mismatch)
2025-02-24T16:33:41.0024994Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:33:41.0025108Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:33:41.0025233Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:33:41.0025359Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:33:41.0025472Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:33:41.0025689Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:33:41.0026154Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - AssertionError: 
2025-02-24T16:33:41.0026268Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0026271Z 
2025-02-24T16:33:41.0026352Z (shapes (379,), (381,) mismatch)
2025-02-24T16:33:41.0026487Z  x: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-02-24T16:33:41.0026594Z        11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-02-24T16:33:41.0026712Z        14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-02-24T16:33:41.0026837Z  y: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-02-24T16:33:41.0026947Z        13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-02-24T16:33:41.0027064Z        11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-02-24T16:33:41.0027593Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - AssertionError: 
2025-02-24T16:33:41.0027694Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:41.0027699Z 
2025-02-24T16:33:41.0027786Z Mismatched elements: 4 / 40 (10%)
2025-02-24T16:33:41.0027882Z Max absolute difference: 22.
2025-02-24T16:33:41.0027977Z Max relative difference: 0.8
2025-02-24T16:33:41.0028170Z  x: array([[1.10e+04, 1.67e+02],
2025-02-24T16:33:41.0028253Z        [1.19e+04, 1.67e+02],
2025-02-24T16:33:41.0028329Z        [1.19e+04, 7.60e+01],...
2025-02-24T16:33:41.0028414Z  y: array([[1.10e+04, 1.89e+02],
2025-02-24T16:33:41.0028488Z        [1.19e+04, 1.89e+02],
2025-02-24T16:33:41.0028567Z        [1.19e+04, 8.20e+01],...
2025-02-24T16:33:41.0028990Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - AssertionError: 
2025-02-24T16:33:41.0029083Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:41.0029090Z 
2025-02-24T16:33:41.0029180Z Mismatched elements: 4 / 40 (10%)
2025-02-24T16:33:41.0029264Z Max absolute difference: 22.
2025-02-24T16:33:41.0029357Z Max relative difference: 0.8
2025-02-24T16:33:41.0029440Z  x: array([[1.10e+04, 1.67e+02],
2025-02-24T16:33:41.0029515Z        [1.19e+04, 1.67e+02],
2025-02-24T16:33:41.0029593Z        [1.19e+04, 7.60e+01],...
2025-02-24T16:33:41.0029677Z  y: array([[1.10e+04, 1.89e+02],
2025-02-24T16:33:41.0029755Z        [1.19e+04, 1.89e+02],
2025-02-24T16:33:41.0029828Z        [1.19e+04, 8.20e+01],...
2025-02-24T16:33:41.0030244Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - AssertionError: 
2025-02-24T16:33:41.0030341Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:41.0030345Z 
2025-02-24T16:33:41.0030429Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:33:41.0030520Z Max absolute difference: 34
2025-02-24T16:33:41.0030608Z Max relative difference: 0.71428571
2025-02-24T16:33:41.0030756Z  x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:33:41.0030840Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:33:41.0030972Z  y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:33:41.0031058Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:33:41.0031468Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - AssertionError: 
2025-02-24T16:33:41.0031569Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:41.0031572Z 
2025-02-24T16:33:41.0031656Z Mismatched elements: 4 / 40 (10%)
2025-02-24T16:33:41.0031746Z Max absolute difference: 34.
2025-02-24T16:33:41.0031840Z Max relative difference: 0.65
2025-02-24T16:33:41.0031918Z  x: array([[1.10e+04, 2.72e+02],
2025-02-24T16:33:41.0032002Z        [1.19e+04, 2.72e+02],
2025-02-24T16:33:41.0032076Z        [1.19e+04, 1.10e+02],...
2025-02-24T16:33:41.0032274Z  y: array([[1.10e+04, 3.06e+02],
2025-02-24T16:33:41.0032351Z        [1.19e+04, 3.06e+02],
2025-02-24T16:33:41.0032431Z        [1.19e+04, 1.18e+02],...
2025-02-24T16:33:41.0032842Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - AssertionError: 
2025-02-24T16:33:41.0032932Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:41.0032940Z 
2025-02-24T16:33:41.0033029Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:33:41.0033113Z Max absolute difference: 22
2025-02-24T16:33:41.0033200Z Max relative difference: 0.8
2025-02-24T16:33:41.0033324Z  x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T16:33:41.0033415Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:33:41.0033538Z  y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:33:41.0033615Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:33:41.0034031Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - AssertionError: 
2025-02-24T16:33:41.0034123Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:41.0034126Z 
2025-02-24T16:33:41.0034216Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:33:41.0034306Z Max absolute difference: 22
2025-02-24T16:33:41.0034389Z Max relative difference: 0.8
2025-02-24T16:33:41.0034597Z  x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T16:33:41.0034674Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:33:41.0034799Z  y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:33:41.0034875Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:33:41.0035290Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - AssertionError: 
2025-02-24T16:33:41.0035384Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:41.0035388Z 
2025-02-24T16:33:41.0035475Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:33:41.0035565Z Max absolute difference: 34
2025-02-24T16:33:41.0035652Z Max relative difference: 0.71428571
2025-02-24T16:33:41.0035787Z  x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:33:41.0035870Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:33:41.0035994Z  y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:33:41.0036079Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:33:41.0036487Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - AssertionError: 
2025-02-24T16:33:41.0036583Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:41.0036587Z 
2025-02-24T16:33:41.0036677Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:33:41.0036760Z Max absolute difference: 34
2025-02-24T16:33:41.0036852Z Max relative difference: 0.65
2025-02-24T16:33:41.0036979Z  x: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:33:41.0037061Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:33:41.0037183Z  y: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:33:41.0037439Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:33:41.0038012Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - AssertionError: 
2025-02-24T16:33:41.0038115Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0038119Z 
2025-02-24T16:33:41.0038212Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:41.0038305Z Max absolute difference: 4.3299331e-05
2025-02-24T16:33:41.0038402Z Max relative difference: 4.76021355
2025-02-24T16:33:41.0038555Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0038630Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0038898Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0038978Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0039455Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - AssertionError: 
2025-02-24T16:33:41.0039552Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0039561Z 
2025-02-24T16:33:41.0039655Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:41.0039750Z Max absolute difference: 4.3299331e-05
2025-02-24T16:33:41.0039837Z Max relative difference: 4.76021355
2025-02-24T16:33:41.0039980Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0040057Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0040201Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0040280Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0040747Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - AssertionError: 
2025-02-24T16:33:41.0040846Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0040850Z 
2025-02-24T16:33:41.0040939Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:41.0041039Z Max absolute difference: 4.3299331e-05
2025-02-24T16:33:41.0041129Z Max relative difference: 4.76021355
2025-02-24T16:33:41.0041377Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0041458Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0041590Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0041671Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0042128Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - AssertionError: 
2025-02-24T16:33:41.0042234Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0042237Z 
2025-02-24T16:33:41.0042331Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:41.0042421Z Max absolute difference: 4.3299331e-05
2025-02-24T16:33:41.0042510Z Max relative difference: 4.76021355
2025-02-24T16:33:41.0042645Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0042725Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0042862Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0042941Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0043402Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - AssertionError: 
2025-02-24T16:33:41.0043497Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0043501Z 
2025-02-24T16:33:41.0043592Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:41.0043686Z Max absolute difference: 3.16368526e-05
2025-02-24T16:33:41.0043778Z Max relative difference: 178.93768705
2025-02-24T16:33:41.0043926Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0044001Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0044143Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0044217Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0044681Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - AssertionError: 
2025-02-24T16:33:41.0044784Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0044788Z 
2025-02-24T16:33:41.0044875Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:41.0044969Z Max absolute difference: 3.16368526e-05
2025-02-24T16:33:41.0045060Z Max relative difference: 178.93768705
2025-02-24T16:33:41.0045204Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0045285Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0045510Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0045594Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0046078Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - AssertionError: 
2025-02-24T16:33:41.0046180Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0046188Z 
2025-02-24T16:33:41.0046275Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:41.0046372Z Max absolute difference: 3.16368526e-05
2025-02-24T16:33:41.0046464Z Max relative difference: 178.93768705
2025-02-24T16:33:41.0046604Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0046683Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0046817Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0046898Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0047492Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - AssertionError: 
2025-02-24T16:33:41.0047590Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0047594Z 
2025-02-24T16:33:41.0047687Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:41.0047775Z Max absolute difference: 3.16368526e-05
2025-02-24T16:33:41.0047868Z Max relative difference: 178.93768705
2025-02-24T16:33:41.0048120Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0048200Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0048339Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0048416Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0048882Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - AssertionError: 
2025-02-24T16:33:41.0048977Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0048981Z 
2025-02-24T16:33:41.0049078Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:41.0049173Z Max absolute difference: 5.1807441e+47
2025-02-24T16:33:41.0049259Z Max relative difference: 4.76021355
2025-02-24T16:33:41.0049401Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0049476Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0049619Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0049692Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0050159Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - AssertionError: 
2025-02-24T16:33:41.0050257Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0050261Z 
2025-02-24T16:33:41.0050348Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:41.0050443Z Max absolute difference: 5.1807441e+47
2025-02-24T16:33:41.0050529Z Max relative difference: 4.76021355
2025-02-24T16:33:41.0050672Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0050757Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0050901Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0050982Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0051452Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - AssertionError: 
2025-02-24T16:33:41.0051562Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0051566Z 
2025-02-24T16:33:41.0051660Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:41.0051755Z Max absolute difference: 5.1807441e+47
2025-02-24T16:33:41.0051845Z Max relative difference: 4.76021355
2025-02-24T16:33:41.0051986Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0052066Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0052334Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0052417Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0052892Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - AssertionError: 
2025-02-24T16:33:41.0052987Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0052995Z 
2025-02-24T16:33:41.0053088Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:41.0053179Z Max absolute difference: 5.1807441e+47
2025-02-24T16:33:41.0053270Z Max relative difference: 4.76021355
2025-02-24T16:33:41.0053414Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0053494Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0053634Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0053708Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0054182Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - AssertionError: 
2025-02-24T16:33:41.0054281Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0054285Z 
2025-02-24T16:33:41.0054372Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:41.0054466Z Max absolute difference: 3.78533417e+47
2025-02-24T16:33:41.0054556Z Max relative difference: 178.93768705
2025-02-24T16:33:41.0054781Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0054855Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0054993Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0055073Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0055538Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - AssertionError: 
2025-02-24T16:33:41.0055636Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0055642Z 
2025-02-24T16:33:41.0055730Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:41.0055829Z Max absolute difference: 3.78533417e+47
2025-02-24T16:33:41.0055923Z Max relative difference: 178.93768705
2025-02-24T16:33:41.0056060Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0056139Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0056276Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0056354Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0056814Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - AssertionError: 
2025-02-24T16:33:41.0056911Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0056915Z 
2025-02-24T16:33:41.0057006Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:41.0057095Z Max absolute difference: 3.78533417e+47
2025-02-24T16:33:41.0057196Z Max relative difference: 178.93768705
2025-02-24T16:33:41.0057436Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0057518Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0057657Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0057733Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0058204Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - AssertionError: 
2025-02-24T16:33:41.0058302Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0058306Z 
2025-02-24T16:33:41.0058398Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:41.0058492Z Max absolute difference: 3.78533417e+47
2025-02-24T16:33:41.0058581Z Max relative difference: 178.93768705
2025-02-24T16:33:41.0058720Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0058794Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0059047Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0059127Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0059561Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - AssertionError: 
2025-02-24T16:33:41.0059660Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0059667Z 
2025-02-24T16:33:41.0059753Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:41.0059853Z Max absolute difference: 2.08771842e-13
2025-02-24T16:33:41.0059938Z Max relative difference: 3.01858991
2025-02-24T16:33:41.0060080Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0060161Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0060296Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0060374Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0060796Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - AssertionError: 
2025-02-24T16:33:41.0060896Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0060899Z 
2025-02-24T16:33:41.0060986Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:41.0061081Z Max absolute difference: 2.08771842e-13
2025-02-24T16:33:41.0061172Z Max relative difference: 3.01858991
2025-02-24T16:33:41.0061416Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0061495Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0061630Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0061711Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0062139Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - AssertionError: 
2025-02-24T16:33:41.0062233Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0062236Z 
2025-02-24T16:33:41.0062331Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:41.0062425Z Max absolute difference: 2.08771842e-13
2025-02-24T16:33:41.0062516Z Max relative difference: 3.01858991
2025-02-24T16:33:41.0062652Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0062731Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0062872Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0062945Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0063366Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - AssertionError: 
2025-02-24T16:33:41.0063461Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0063464Z 
2025-02-24T16:33:41.0063554Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:41.0063649Z Max absolute difference: 2.08771842e-13
2025-02-24T16:33:41.0063735Z Max relative difference: 3.01858991
2025-02-24T16:33:41.0063877Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0063952Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0064091Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0064166Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0064586Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - AssertionError: 
2025-02-24T16:33:41.0064688Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0064691Z 
2025-02-24T16:33:41.0064778Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:41.0064872Z Max absolute difference: 3.02728422e-13
2025-02-24T16:33:41.0064962Z Max relative difference: 15766.1580412
2025-02-24T16:33:41.0065103Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0065183Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0065400Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0065482Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0065897Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - AssertionError: 
2025-02-24T16:33:41.0065997Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0066004Z 
2025-02-24T16:33:41.0066095Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:41.0066185Z Max absolute difference: 3.02728422e-13
2025-02-24T16:33:41.0066278Z Max relative difference: 15766.1580412
2025-02-24T16:33:41.0066413Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0066493Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0066627Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0066706Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0067130Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - AssertionError: 
2025-02-24T16:33:41.0067225Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0067228Z 
2025-02-24T16:33:41.0067419Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:41.0067509Z Max absolute difference: 3.02728422e-13
2025-02-24T16:33:41.0067603Z Max relative difference: 15766.1580412
2025-02-24T16:33:41.0067857Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0067931Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0068068Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0068142Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0068562Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - AssertionError: 
2025-02-24T16:33:41.0068655Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0068664Z 
2025-02-24T16:33:41.0068753Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:41.0068845Z Max absolute difference: 3.02728422e-13
2025-02-24T16:33:41.0068932Z Max relative difference: 15766.1580412
2025-02-24T16:33:41.0069071Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0069148Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0069287Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0069371Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0069785Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - AssertionError: 
2025-02-24T16:33:41.0069884Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0069887Z 
2025-02-24T16:33:41.0069972Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:41.0070069Z Max absolute difference: 2.49794504e+39
2025-02-24T16:33:41.0070161Z Max relative difference: 3.01858991
2025-02-24T16:33:41.0070299Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0070378Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0070511Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0070593Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0071007Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - AssertionError: 
2025-02-24T16:33:41.0071109Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0071113Z 
2025-02-24T16:33:41.0071203Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:41.0071291Z Max absolute difference: 2.49794504e+39
2025-02-24T16:33:41.0071382Z Max relative difference: 3.01858991
2025-02-24T16:33:41.0071518Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0071602Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0071879Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0071959Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0072384Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - AssertionError: 
2025-02-24T16:33:41.0072479Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0072483Z 
2025-02-24T16:33:41.0072578Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:41.0072672Z Max absolute difference: 2.49794504e+39
2025-02-24T16:33:41.0072762Z Max relative difference: 3.01858991
2025-02-24T16:33:41.0072900Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0072973Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0073112Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0073186Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0073614Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - AssertionError: 
2025-02-24T16:33:41.0073713Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0073717Z 
2025-02-24T16:33:41.0073803Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:41.0073895Z Max absolute difference: 2.49794504e+39
2025-02-24T16:33:41.0073979Z Max relative difference: 3.01858991
2025-02-24T16:33:41.0074117Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0074291Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0074431Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0074511Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0074931Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - AssertionError: 
2025-02-24T16:33:41.0075031Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0075035Z 
2025-02-24T16:33:41.0075120Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:41.0075218Z Max absolute difference: 3.62213099e+39
2025-02-24T16:33:41.0075311Z Max relative difference: 15766.15804934
2025-02-24T16:33:41.0075447Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0075527Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0075662Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0075745Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0076163Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - AssertionError: 
2025-02-24T16:33:41.0076263Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0076266Z 
2025-02-24T16:33:41.0076358Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:41.0076445Z Max absolute difference: 3.62213099e+39
2025-02-24T16:33:41.0076537Z Max relative difference: 15766.15804934
2025-02-24T16:33:41.0076674Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0076754Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0076893Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0076967Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0077535Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - AssertionError: 
2025-02-24T16:33:41.0077634Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0077637Z 
2025-02-24T16:33:41.0077730Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:41.0077823Z Max absolute difference: 3.62213099e+39
2025-02-24T16:33:41.0077911Z Max relative difference: 15766.15804934
2025-02-24T16:33:41.0078051Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0078126Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0078265Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0078467Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0078894Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - AssertionError: 
2025-02-24T16:33:41.0078993Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0078996Z 
2025-02-24T16:33:41.0079082Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:41.0079178Z Max absolute difference: 3.62213099e+39
2025-02-24T16:33:41.0079266Z Max relative difference: 15766.15804934
2025-02-24T16:33:41.0079405Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0079484Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0079628Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0079718Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0079993Z = 274 failed, 1136 passed, 357 skipped, 2 deselected, 19 xfailed, 8 xpassed, 63 warnings in 754.26s (0:12:34) =
2025-02-24T16:33:41.0080400Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0080405Z 
2025-02-24T16:33:41.0081130Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data11__.h5
2025-02-24T16:33:41.0081241Z 
2025-02-24T16:33:41.0081564Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0081568Z 
2025-02-24T16:33:41.0082229Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply13__.h5
2025-02-24T16:33:41.0082233Z 
2025-02-24T16:33:41.0082548Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0082552Z 
2025-02-24T16:33:41.0083203Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl4__.h5
2025-02-24T16:33:41.0083208Z 
2025-02-24T16:33:41.0083523Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0083530Z 
2025-02-24T16:33:41.0084180Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply9__.h5
2025-02-24T16:33:41.0084184Z 
2025-02-24T16:33:41.0084494Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0084498Z 
2025-02-24T16:33:41.0085135Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply4__.h5
2025-02-24T16:33:41.0085139Z 
2025-02-24T16:33:41.0085448Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0085452Z 
2025-02-24T16:33:41.0086091Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply1__.h5
2025-02-24T16:33:41.0086097Z 
2025-02-24T16:33:41.0086403Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0086407Z 
2025-02-24T16:33:41.0087057Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply0__.h5
2025-02-24T16:33:41.0087061Z 
2025-02-24T16:33:41.0087577Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0087582Z 
2025-02-24T16:33:41.0088223Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl5__.h5
2025-02-24T16:33:41.0088227Z 
2025-02-24T16:33:41.0088537Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0088544Z 
2025-02-24T16:33:41.0089182Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl1__.h5
2025-02-24T16:33:41.0089186Z 
2025-02-24T16:33:41.0089489Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0089492Z 
2025-02-24T16:33:41.0090187Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data8__.h5
2025-02-24T16:33:41.0090192Z 
2025-02-24T16:33:41.0090516Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0090520Z 
2025-02-24T16:33:41.0091308Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data9__.h5
2025-02-24T16:33:41.0091312Z 
2025-02-24T16:33:41.0091622Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0091626Z 
2025-02-24T16:33:41.0092284Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply5__.h5
2025-02-24T16:33:41.0092288Z 
2025-02-24T16:33:41.0092595Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0092599Z 
2025-02-24T16:33:41.0093237Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply0__.h5
2025-02-24T16:33:41.0093244Z 
2025-02-24T16:33:41.0093563Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0093567Z 
2025-02-24T16:33:41.0094253Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data0__.h5
2025-02-24T16:33:41.0094257Z 
2025-02-24T16:33:41.0094568Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0094572Z 
2025-02-24T16:33:41.0095220Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply4__.h5
2025-02-24T16:33:41.0095224Z 
2025-02-24T16:33:41.0095528Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0095535Z 
2025-02-24T16:33:41.0096221Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data3__.h5
2025-02-24T16:33:41.0096225Z 
2025-02-24T16:33:41.0096537Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0096541Z 
2025-02-24T16:33:41.0097419Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data1__.h5
2025-02-24T16:33:41.0097424Z 
2025-02-24T16:33:41.0097743Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0097747Z 
2025-02-24T16:33:41.0098397Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply11__.h5
2025-02-24T16:33:41.0098405Z 
2025-02-24T16:33:41.0098708Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0098712Z 
2025-02-24T16:33:41.0099396Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data7__.h5
2025-02-24T16:33:41.0099403Z 
2025-02-24T16:33:41.0099713Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0099717Z 
2025-02-24T16:33:41.0100391Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply7__.h5
2025-02-24T16:33:41.0100499Z 
2025-02-24T16:33:41.0100811Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0100816Z 
2025-02-24T16:33:41.0101471Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply14__.h5
2025-02-24T16:33:41.0101475Z 
2025-02-24T16:33:41.0101778Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0101785Z 
2025-02-24T16:33:41.0102477Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data10__.h5
2025-02-24T16:33:41.0102481Z 
2025-02-24T16:33:41.0102790Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0102799Z 
2025-02-24T16:33:41.0103434Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply5__.h5
2025-02-24T16:33:41.0103442Z 
2025-02-24T16:33:41.0103745Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0103749Z 
2025-02-24T16:33:41.0104438Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data5__.h5
2025-02-24T16:33:41.0104442Z 
2025-02-24T16:33:41.0104746Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0104755Z 
2025-02-24T16:33:41.0105402Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply12__.h5
2025-02-24T16:33:41.0105409Z 
2025-02-24T16:33:43.3154315Z ##[error]Process completed with exit code 1.
2025-02-24T16:33:43.3227091Z Post job cleanup.
2025-02-24T16:33:43.3259048Z Post job cleanup.
2025-02-24T16:33:43.4695643Z Will use pre-installed micromamba at /home/runner/micromamba-bin/micromamba
2025-02-24T16:33:43.4704193Z Removing micromamba run shell ...
2025-02-24T16:33:43.4708136Z ##[group]Deinitialize micromamba for bash
2025-02-24T16:33:43.4727178Z [command]/home/runner/micromamba-bin/micromamba shell deinit -s bash -r /home/runner/micromamba --log-level warning --rc-file /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T16:33:43.4828272Z Resetting RC file "/home/runner/.bashrc"
2025-02-24T16:33:43.4828847Z Deleting config for root prefix 
2025-02-24T16:33:43.4829377Z Clearing mamba executable environment variable
2025-02-24T16:33:43.4831818Z Removing the following in your "/home/runner/.bashrc" file
2025-02-24T16:33:43.4832202Z # >>> mamba initialize >>>
2025-02-24T16:33:43.4832433Z ...
2025-02-24T16:33:43.4832614Z # <<< mamba initialize <<<
2025-02-24T16:33:43.4867723Z Removing mamba initialize block from .bash_profile
2025-02-24T16:33:43.4883224Z ##[endgroup]
2025-02-24T16:33:43.4887436Z Removing environment tardis from auto-activate bash ...
2025-02-24T16:33:43.5034023Z Post job cleanup.
2025-02-24T16:33:43.5074033Z Post job cleanup.
2025-02-24T16:33:43.6083490Z [command]/usr/bin/git version
2025-02-24T16:33:43.6120563Z git version 2.48.1
2025-02-24T16:33:43.6178093Z Temporarily overriding HOME='/home/runner/work/_temp/68415b74-c20e-4d57-b6e7-245cb6586b3d' before making global git config changes
2025-02-24T16:33:43.6179356Z Adding repository directory to the temporary git global config as a safe directory
2025-02-24T16:33:43.6186381Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis/tardis-regression-data
2025-02-24T16:33:43.6232628Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-02-24T16:33:43.6272354Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-02-24T16:33:43.6533316Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-02-24T16:33:43.6559140Z http.https://github.com/.extraheader
2025-02-24T16:33:43.6571676Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-02-24T16:33:43.6609966Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-02-24T16:33:43.6983998Z Post job cleanup.
2025-02-24T16:33:43.7940503Z [command]/usr/bin/git version
2025-02-24T16:33:43.7981848Z git version 2.48.1
2025-02-24T16:33:43.8037746Z Temporarily overriding HOME='/home/runner/work/_temp/a021d8f9-28e0-4eea-9bb7-04216be5dce5' before making global git config changes
2025-02-24T16:33:43.8039068Z Adding repository directory to the temporary git global config as a safe directory
2025-02-24T16:33:43.8045065Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis
2025-02-24T16:33:43.8088332Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-02-24T16:33:43.8123299Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-02-24T16:33:43.8385571Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-02-24T16:33:43.8411304Z http.https://github.com/.extraheader
2025-02-24T16:33:43.8424407Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-02-24T16:33:43.8458633Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-02-24T16:33:43.8807135Z Cleaning up orphan processes
