2025-02-24T16:20:59.0959665Z ##[group]Run pytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-02-24T16:20:59.0960976Z [36;1mpytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-02-24T16:20:59.1015852Z shell: /usr/bin/bash -l {0}
2025-02-24T16:20:59.1016107Z env:
2025-02-24T16:20:59.1016289Z   CACHE_NUMBER: 0
2025-02-24T16:20:59.1016920Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T16:20:59.1018006Z   CODECOV_TOKEN: ***
2025-02-24T16:20:59.1018260Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-02-24T16:20:59.1018579Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-02-24T16:20:59.1018941Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T16:20:59.1019291Z ##[endgroup]
2025-02-24T16:21:08.2659278Z ============================= test session starts ==============================
2025-02-24T16:21:08.2659996Z platform linux -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-02-24T16:21:08.2660558Z rootdir: /home/runner/work/tardis/tardis
2025-02-24T16:21:08.2661005Z configfile: pyproject.toml
2025-02-24T16:21:08.2661874Z plugins: metadata-3.1.1, anyio-4.4.0, doctestplus-1.2.1, cov-5.0.0, html-4.1.1
2025-02-24T16:21:08.2662479Z collected 1796 items / 2 deselected / 1794 selected
2025-02-24T16:21:08.2662796Z 
2025-02-24T16:21:13.2880198Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-02-24T16:21:16.1493514Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-02-24T16:21:17.7402160Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-02-24T16:21:19.4854182Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-02-24T16:21:19.4946233Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-02-24T16:21:20.8583146Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-02-24T16:21:21.2895628Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-02-24T16:21:21.2910702Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-02-24T16:21:24.8537983Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-02-24T16:21:24.8667003Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-02-24T16:21:24.8937971Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-02-24T16:22:02.4980103Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-02-24T16:22:02.5127806Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-02-24T16:22:02.5237040Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-02-24T16:22:02.5540876Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-02-24T16:22:02.5746519Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-02-24T16:22:02.8796475Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-02-24T16:22:03.1969816Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-02-24T16:22:03.2162101Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-02-24T16:22:03.4107033Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-02-24T16:22:03.4174821Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-02-24T16:23:01.4357609Z tardis/model/tests/test_base.py ........................................ [ 10%]
2025-02-24T16:23:02.4225554Z ............                                                             [ 10%]
2025-02-24T16:23:05.4694937Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-02-24T16:23:05.5174212Z tardis/model/tests/test_density.py ..                                    [ 11%]
2025-02-24T16:23:06.8412474Z tardis/opacities/tests/test_opacity_solver.py .....                      [ 11%]
2025-02-24T16:23:08.1602814Z tardis/opacities/tests/test_opacity_state_numba.py .....                 [ 11%]
2025-02-24T16:23:10.3118999Z tardis/opacities/tests/test_tau_sobolev.py FF                            [ 12%]
2025-02-24T16:23:13.0113415Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-02-24T16:23:58.8805471Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-02-24T16:24:10.8530035Z tardis/plasma/equilibrium/tests/test_rate_matrix.py F                    [ 12%]
2025-02-24T16:24:12.5125509Z tardis/plasma/tests/test_complete_plasmas.py ...........FFFs.FFF..s..... [ 13%]
2025-02-24T16:24:15.9155946Z sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FF [ 18%]
2025-02-24T16:24:18.1760545Z Fs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss.... [ 22%]
2025-02-24T16:24:21.5749017Z ........s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....s [ 26%]
2025-02-24T16:24:24.9768125Z FF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFF [ 30%]
2025-02-24T16:24:26.2065862Z s.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFssFssssss..... [ 34%]
2025-02-24T16:24:30.1930019Z .......s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sF [ 38%]
2025-02-24T16:24:33.5838107Z F.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs [ 42%]
2025-02-24T16:24:37.2629513Z .FFF.ss.....sFF.Fssssss............s...FFFs.FFF.s.....FFFF.Fssssss...... [ 46%]
2025-02-24T16:24:39.7629793Z ......s...FFFs.FFF.s.....FFFF.Fssssss............s...FFFs.FFF.s.....FFFF [ 50%]
2025-02-24T16:24:43.0913113Z .Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs. [ 54%]
2025-02-24T16:24:46.7511179Z FFF.ss.....sFF.Fssssss................FFFs.FFF..s.....sFF.Fssss......... [ 58%]
2025-02-24T16:24:47.3782265Z .........FFFs.FFF..s.....sFF.Fssss.......                                [ 60%]
2025-02-24T16:24:47.6005734Z tardis/plasma/tests/test_hdf_plasma.py ....F..F....F.F..........FFF..... [ 62%]
2025-02-24T16:24:47.6119137Z ......                                                                   [ 62%]
2025-02-24T16:24:47.7575194Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-02-24T16:27:05.1580672Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-02-24T16:27:05.1607613Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-02-24T16:27:28.4515410Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-02-24T16:27:41.5558655Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-02-24T16:27:42.3060357Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-02-24T16:27:51.0017709Z tardis/simulation/tests/test_simulation.py FFF.FFFFFF...                 [ 65%]
2025-02-24T16:27:51.0220398Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-02-24T16:27:51.4979585Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-02-24T16:27:51.5051105Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-02-24T16:27:53.6925574Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-02-24T16:27:53.7117837Z ..........                                                               [ 69%]
2025-02-24T16:27:53.8843940Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-02-24T16:27:53.9173513Z .........                                                                [ 72%]
2025-02-24T16:28:12.4862769Z tardis/spectrum/tests/test_spectrum_solver.py .FFF                       [ 72%]
2025-02-24T16:29:14.5453076Z tardis/tests/test_tardis_full.py .FFF                                    [ 72%]
2025-02-24T16:30:39.2219649Z tardis/tests/test_tardis_full_formal_integral.py .FFF.FFF.FFF.FFF        [ 73%]
2025-02-24T16:30:39.2936698Z tardis/tests/test_util.py .............................................  [ 75%]
2025-02-24T16:30:42.4650601Z tardis/transport/montecarlo/tests/test_base.py x.....................    [ 77%]
2025-02-24T16:30:49.7312095Z tardis/transport/montecarlo/tests/test_interaction.py .......            [ 77%]
2025-02-24T16:30:49.9541681Z tardis/transport/montecarlo/tests/test_macro_atom.py ....                [ 77%]
2025-02-24T16:30:49.9713205Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-02-24T16:30:50.0125350Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-02-24T16:30:58.8305248Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py xFF       [ 81%]
2025-02-24T16:30:58.8370880Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-02-24T16:31:05.1772199Z tardis/transport/montecarlo/tests/test_numba_interface.py .....x.        [ 82%]
2025-02-24T16:31:05.6684768Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-02-24T16:31:06.7216126Z tardis/transport/montecarlo/tests/test_packet.py .................xXXXXX [ 84%]
2025-02-24T16:31:06.8588927Z XX.........                                                              [ 84%]
2025-02-24T16:31:06.8894506Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-02-24T16:31:07.2138130Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-02-24T16:31:07.6291166Z .....                                                                    [ 85%]
2025-02-24T16:31:43.6902395Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py ....F.         [ 85%]
2025-02-24T16:31:43.7186765Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-02-24T16:31:43.7220302Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-02-24T16:31:46.2522118Z tardis/transport/montecarlo/tests/test_vpacket.py ..x.                   [ 86%]
2025-02-24T16:31:46.2696935Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-02-24T16:31:49.6982585Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py F [ 86%]
2025-02-24T16:31:49.6983688Z                                                                          [ 86%]
2025-02-24T16:31:50.4756219Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-02-24T16:31:51.8349335Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-02-24T16:31:54.0491113Z ......                                                                   [ 88%]
2025-02-24T16:31:59.4307623Z tardis/visualization/tools/tests/test_liv_plot.py ...F..F..F..F..F..F..F [ 90%]
2025-02-24T16:32:02.6114936Z ..F..FF..FF..........FF..FF..                                            [ 91%]
2025-02-24T16:32:05.4523042Z tardis/visualization/tools/tests/test_rpacket_plot.py .................. [ 92%]
2025-02-24T16:32:12.4986756Z ....                                                                     [ 92%]
2025-02-24T16:32:18.7693730Z tardis/visualization/tools/tests/test_sdec_plot.py ...FFFFFFFFFFFFFFFFFF [ 94%]
2025-02-24T16:32:27.8871461Z FFFFFFFFFFFFFF................                                           [ 95%]
2025-02-24T16:32:28.3252185Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-02-24T16:32:28.3980927Z ....                                                                     [ 96%]
2025-02-24T16:32:29.4536883Z tardis/visualization/widgets/tests/test_line_info.py ................... [ 97%]
2025-02-24T16:32:30.0822623Z ..................                                                       [ 98%]
2025-02-24T16:33:33.8265755Z tardis/visualization/widgets/tests/test_shell_info.py .................. [ 99%]
2025-02-24T16:33:40.6586631Z ......                                                                   [100%]
2025-02-24T16:33:40.6587541Z 
2025-02-24T16:33:40.6587825Z =================================== FAILURES ===================================
2025-02-24T16:33:40.6588779Z _____________________ test_calculate_sobolev_line_opacity ______________________
2025-02-24T16:33:40.6589439Z 
2025-02-24T16:33:40.6589720Z left = array([13, 13, 13, ..., 19, 19, 19], dtype=int8)
2025-02-24T16:33:40.6590558Z right = array([13, 13, 13, ..., 19, 19, 19], dtype=int8), err_msg = None
2025-02-24T16:33:40.6591018Z 
2025-02-24T16:33:40.6591424Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6592119Z         if err_msg is None:
2025-02-24T16:33:40.6592600Z             if left.shape != right.shape:
2025-02-24T16:33:40.6593035Z                 raise_assert_detail(
2025-02-24T16:33:40.6593540Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6594068Z                 )
2025-02-24T16:33:40.6594381Z     
2025-02-24T16:33:40.6594672Z             diff = 0
2025-02-24T16:33:40.6595106Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6595566Z                 # count up differences
2025-02-24T16:33:40.6596389Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6596918Z                     diff += 1
2025-02-24T16:33:40.6597432Z     
2025-02-24T16:33:40.6597852Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6598266Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6598790Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6599311Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.6599708Z E           
2025-02-24T16:33:40.6600122Z E           numpy array values are different (0.09581 %)
2025-02-24T16:33:40.6600800Z E           [left]:  [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 13, 11, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-02-24T16:33:40.6601830Z E           [right]: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-02-24T16:33:40.6602830Z 
2025-02-24T16:33:40.6603503Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6604299Z 
2025-02-24T16:33:40.6604723Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.6605309Z 
2025-02-24T16:33:40.6605774Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7ff509f257c0>
2025-02-24T16:33:40.6607036Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff509f25d60>
2025-02-24T16:33:40.6607955Z 
2025-02-24T16:33:40.6608351Z     def test_calculate_sobolev_line_opacity(
2025-02-24T16:33:40.6609016Z         nb_simulation_verysimple, regression_data
2025-02-24T16:33:40.6609615Z     ):
2025-02-24T16:33:40.6610195Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-02-24T16:33:40.6610796Z     
2025-02-24T16:33:40.6611254Z         actual = calculate_sobolev_line_opacity(
2025-02-24T16:33:40.6612006Z             legacy_plasma.lines,
2025-02-24T16:33:40.6612581Z             legacy_plasma.level_number_density,
2025-02-24T16:33:40.6613578Z             legacy_plasma.time_explosion,
2025-02-24T16:33:40.6614120Z             legacy_plasma.stimulated_emission_factor,
2025-02-24T16:33:40.6614533Z         )
2025-02-24T16:33:40.6614877Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:33:40.6615318Z >       pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.6615615Z 
2025-02-24T16:33:40.6615784Z tardis/opacities/tests/test_tau_sobolev.py:22: 
2025-02-24T16:33:40.6616209Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6616646Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.6617167Z     ???
2025-02-24T16:33:40.6617682Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6617901Z 
2025-02-24T16:33:40.6618109Z >   ???
2025-02-24T16:33:40.6618449Z E   AssertionError: MultiIndex level [0] are different
2025-02-24T16:33:40.6618813Z E   
2025-02-24T16:33:40.6619204Z E   MultiIndex level [0] values are different (0.09581 %)
2025-02-24T16:33:40.6619632Z E   [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T16:33:40.6620096Z E          ...
2025-02-24T16:33:40.6620390Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T16:33:40.6620844Z E         dtype='int64', name='atomic_number', length=29224)
2025-02-24T16:33:40.6621743Z E   [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T16:33:40.6622183Z E          ...
2025-02-24T16:33:40.6622516Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T16:33:40.6622914Z E         dtype='int64', name='atomic_number', length=29224)
2025-02-24T16:33:40.6623372Z E   At positional index 54, first diff: 14 != 12
2025-02-24T16:33:40.6623649Z 
2025-02-24T16:33:40.6623810Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.6624249Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.6625049Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:33:40.6625893Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:33:40.6626667Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T16:33:40.6626992Z 
2025-02-24T16:33:40.6627631Z Iterations:████████████████████████████████████████████████████████████████                4/5 [00:12<00:02,  2.81s/it]
2025-02-24T16:33:40.6627987Z 
2025-02-24T16:33:40.6628353Z Packets:                                                                                   4030/? [00:12<00:00, 34199.30it/s][A
2025-02-24T16:33:40.6628859Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.6629703Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:33:40.6630611Z _________________________ test_calculate_beta_sobolevs _________________________
2025-02-24T16:33:40.6630916Z 
2025-02-24T16:33:40.6631184Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7ff509f257c0>
2025-02-24T16:33:40.6631954Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff50a073ad0>
2025-02-24T16:33:40.6632367Z 
2025-02-24T16:33:40.6632627Z     def test_calculate_beta_sobolevs(nb_simulation_verysimple, regression_data):
2025-02-24T16:33:40.6633126Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-02-24T16:33:40.6633556Z     
2025-02-24T16:33:40.6633862Z         tau_sobolevs = calculate_sobolev_line_opacity(
2025-02-24T16:33:40.6634226Z             legacy_plasma.lines,
2025-02-24T16:33:40.6634487Z             legacy_plasma.level_number_density,
2025-02-24T16:33:40.6634771Z             legacy_plasma.time_explosion,
2025-02-24T16:33:40.6635061Z             legacy_plasma.stimulated_emission_factor,
2025-02-24T16:33:40.6635493Z         )
2025-02-24T16:33:40.6635705Z         actual = calculate_beta_sobolev(tau_sobolevs)
2025-02-24T16:33:40.6636020Z         expected = regression_data.sync_ndarray(actual)
2025-02-24T16:33:40.6636320Z >       npt.assert_allclose(actual, expected)
2025-02-24T16:33:40.6636500Z 
2025-02-24T16:33:40.6636622Z tardis/opacities/tests/test_tau_sobolev.py:36: 
2025-02-24T16:33:40.6636938Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6637149Z 
2025-02-24T16:33:40.6637632Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e923a340>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.6638066Z        [1., 1., .....,
2025-02-24T16:33:40.6638270Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.6638507Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.6638740Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-02-24T16:33:40.6639140Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.6639468Z 
2025-02-24T16:33:40.6639548Z     @wraps(func)
2025-02-24T16:33:40.6639749Z     def inner(*args, **kwds):
2025-02-24T16:33:40.6639980Z         with self._recreate_cm():
2025-02-24T16:33:40.6640223Z >           return func(*args, **kwds)
2025-02-24T16:33:40.6640603Z E           AssertionError: 
2025-02-24T16:33:40.6641202Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.6641483Z E           
2025-02-24T16:33:40.6641695Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T16:33:40.6641982Z E           Max absolute difference: 0.99984222
2025-02-24T16:33:40.6642260Z E           Max relative difference: 6337.12154973
2025-02-24T16:33:40.6642538Z E            x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.6642799Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.6643056Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:33:40.6643315Z E            y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.6643586Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.6643836Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:33:40.6644005Z 
2025-02-24T16:33:40.6644216Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.6644712Z ___ test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0] ___
2025-02-24T16:33:40.6645004Z 
2025-02-24T16:33:40.6645222Z new_chianti_atomic_dataset_si = <Atomic Data UUID=None MD5=None Lines=548387 Levels=26579>
2025-02-24T16:33:40.6646315Z rate_solver_list = [(<tardis.plasma.equilibrium.rates.radiative_rates.RadiativeRatesSolver object at 0x7ff4e9bcce90>, 'radiative'), (<tardis.plasma.equilibrium.rates.collisional_rates.ThermalCollisionalRateSolver object at 0x7ff4d74ee2d0>, 'electron')]
2025-02-24T16:33:40.6647669Z collisional_simulation_state = <tardis.model.base.SimulationState object at 0x7ff50a319850>
2025-02-24T16:33:40.6648283Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff50a319f10>
2025-02-24T16:33:40.6648642Z 
2025-02-24T16:33:40.6648738Z     def test_rate_matrix_solver(
2025-02-24T16:33:40.6648986Z         new_chianti_atomic_dataset_si,
2025-02-24T16:33:40.6649237Z         rate_solver_list,
2025-02-24T16:33:40.6649465Z         collisional_simulation_state,
2025-02-24T16:33:40.6649715Z         regression_data,
2025-02-24T16:33:40.6649916Z     ):
2025-02-24T16:33:40.6650106Z         rate_matrix_solver = RateMatrix(
2025-02-24T16:33:40.6650417Z             rate_solver_list, new_chianti_atomic_dataset_si.levels
2025-02-24T16:33:40.6650707Z         )
2025-02-24T16:33:40.6650871Z     
2025-02-24T16:33:40.6651082Z         rad_field = DilutePlanckianRadiationField(
2025-02-24T16:33:40.6651394Z             collisional_simulation_state.t_radiative,
2025-02-24T16:33:40.6651776Z             dilution_factor=np.zeros_like(collisional_simulation_state.t_radiative),
2025-02-24T16:33:40.6652124Z         )
2025-02-24T16:33:40.6652498Z         electron_dist = ThermalElectronEnergyDistribution(
2025-02-24T16:33:40.6652891Z             0, collisional_simulation_state.t_radiative, 1e6 * u.g / u.cm**3
2025-02-24T16:33:40.6653207Z         )
2025-02-24T16:33:40.6653371Z     
2025-02-24T16:33:40.6653608Z         actual = rate_matrix_solver.solve(rad_field, electron_dist)
2025-02-24T16:33:40.6653911Z     
2025-02-24T16:33:40.6654127Z >       expected = regression_data.sync_dataframe(actual)
2025-02-24T16:33:40.6654334Z 
2025-02-24T16:33:40.6654549Z tardis/plasma/equilibrium/tests/test_rate_matrix.py:34: 
2025-02-24T16:33:40.6654889Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6655261Z tardis/tests/fixtures/regression_data.py:88: in sync_dataframe
2025-02-24T16:33:40.6655606Z     return pd.read_hdf(self.fpath, key=key)
2025-02-24T16:33:40.6656055Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:452: in read_hdf
2025-02-24T16:33:40.6656503Z     return store.select(
2025-02-24T16:33:40.6656892Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:906: in select
2025-02-24T16:33:40.6657520Z     return it.get_result()
2025-02-24T16:33:40.6657940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:2029: in get_result
2025-02-24T16:33:40.6658555Z     results = self.func(self.start, self.stop, where)
2025-02-24T16:33:40.6659003Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:890: in func
2025-02-24T16:33:40.6659776Z     return s.read(start=_start, stop=_stop, where=_where, columns=columns)
2025-02-24T16:33:40.6660464Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:3292: in read
2025-02-24T16:33:40.6660966Z     values = self.read_array(f"block{i}_values", start=_start, stop=_stop)
2025-02-24T16:33:40.6661490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:2956: in read_array
2025-02-24T16:33:40.6661938Z     ret = node[0][start:stop]
2025-02-24T16:33:40.6662338Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/vlarray.py:662: in __getitem__
2025-02-24T16:33:40.6662783Z     return self.read(start, stop, step)[0]
2025-02-24T16:33:40.6663192Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/vlarray.py:806: in read
2025-02-24T16:33:40.6663648Z     outlistarr = [atom.fromarray(arr) for arr in listarr]
2025-02-24T16:33:40.6663977Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6664182Z 
2025-02-24T16:33:40.6664262Z self = ObjectAtom()
2025-02-24T16:33:40.6664514Z array = array([128,   5, 149, ..., 148,  98,  46], dtype=uint8)
2025-02-24T16:33:40.6664738Z 
2025-02-24T16:33:40.6664827Z     def fromarray(self, array):
2025-02-24T16:33:40.6665122Z         # We have to check for an empty array because of a possible
2025-02-24T16:33:40.6665476Z         # bug in HDF5 which makes it claim that a dataset has one
2025-02-24T16:33:40.6665785Z         # record when in fact it is empty.
2025-02-24T16:33:40.6666037Z         if array.size == 0:
2025-02-24T16:33:40.6666254Z             return None
2025-02-24T16:33:40.6666479Z >       return pickle.loads(array.tobytes())
2025-02-24T16:33:40.6666822Z E       ModuleNotFoundError: No module named 'numpy._core.numeric'
2025-02-24T16:33:40.6667083Z 
2025-02-24T16:33:40.6667695Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/atom.py:1181: ModuleNotFoundError
2025-02-24T16:33:40.6668220Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.6668751Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:33:40.6669466Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:33:40.6670058Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.6670954Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:33:40.6671729Z _________ TestPlasma.test_plasma_properties[ionization:nebular-lines] __________
2025-02-24T16:33:40.6672015Z 
2025-02-24T16:33:40.6672153Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6672505Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6672822Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6673142Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6673501Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6673815Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6674074Z err_msg = None
2025-02-24T16:33:40.6674192Z 
2025-02-24T16:33:40.6674312Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6674587Z         if err_msg is None:
2025-02-24T16:33:40.6674819Z             if left.shape != right.shape:
2025-02-24T16:33:40.6675081Z                 raise_assert_detail(
2025-02-24T16:33:40.6675387Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6675811Z                 )
2025-02-24T16:33:40.6675995Z     
2025-02-24T16:33:40.6676160Z             diff = 0
2025-02-24T16:33:40.6676400Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6676684Z                 # count up differences
2025-02-24T16:33:40.6677018Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6677663Z                     diff += 1
2025-02-24T16:33:40.6677886Z     
2025-02-24T16:33:40.6678067Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6678597Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6679123Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6679503Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.6679769Z E           
2025-02-24T16:33:40.6679984Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.6680451Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6681060Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6681411Z 
2025-02-24T16:33:40.6681726Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6682115Z 
2025-02-24T16:33:40.6682292Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.6682550Z 
2025-02-24T16:33:40.6682779Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d8650>
2025-02-24T16:33:40.6683258Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a0733b0>
2025-02-24T16:33:40.6683581Z attr = 'lines'
2025-02-24T16:33:40.6683694Z 
2025-02-24T16:33:40.6683834Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6684172Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6684461Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6684684Z         try:
2025-02-24T16:33:40.6684930Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6685432Z         except KeyError:
2025-02-24T16:33:40.6685704Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6685995Z     
2025-02-24T16:33:40.6686177Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6686425Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6686694Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6687009Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6687559Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6687818Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6688101Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6688368Z             else:
2025-02-24T16:33:40.6688577Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.6688858Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.6689053Z 
2025-02-24T16:33:40.6689180Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.6689518Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6689869Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.6690168Z     ???
2025-02-24T16:33:40.6690373Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6690737Z 
2025-02-24T16:33:40.6690807Z >   ???
2025-02-24T16:33:40.6691027Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.6691300Z E   
2025-02-24T16:33:40.6691523Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.6691853Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6692117Z E          ...
2025-02-24T16:33:40.6692322Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6692625Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6692955Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6693229Z E          ...
2025-02-24T16:33:40.6693424Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6693721Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6694041Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.6694227Z 
2025-02-24T16:33:40.6694327Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.6694690Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_lower_level_index] _
2025-02-24T16:33:40.6694989Z 
2025-02-24T16:33:40.6695218Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d82f0>
2025-02-24T16:33:40.6695697Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a0733b0>
2025-02-24T16:33:40.6696036Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.6696192Z 
2025-02-24T16:33:40.6696330Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6696791Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6697378Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6697645Z         try:
2025-02-24T16:33:40.6697889Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6698195Z         except KeyError:
2025-02-24T16:33:40.6698464Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6698760Z     
2025-02-24T16:33:40.6698942Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6699234Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6699533Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6699837Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6700143Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6700387Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6700667Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6700864Z 
2025-02-24T16:33:40.6700990Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.6701446Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6701653Z 
2025-02-24T16:33:40.6701796Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.6702106Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.6702383Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6702664Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.6702960Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.6703276Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.6703541Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6703816Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.6704055Z err_msg = None
2025-02-24T16:33:40.6704162Z 
2025-02-24T16:33:40.6704282Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6704560Z         if err_msg is None:
2025-02-24T16:33:40.6704794Z             if left.shape != right.shape:
2025-02-24T16:33:40.6705052Z                 raise_assert_detail(
2025-02-24T16:33:40.6705357Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6705662Z                 )
2025-02-24T16:33:40.6705961Z     
2025-02-24T16:33:40.6706125Z             diff = 0
2025-02-24T16:33:40.6706362Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6706648Z                 # count up differences
2025-02-24T16:33:40.6706983Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6707436Z                     diff += 1
2025-02-24T16:33:40.6707649Z     
2025-02-24T16:33:40.6707826Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6708127Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6708517Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6708886Z E           AssertionError: Series are different
2025-02-24T16:33:40.6709142Z E           
2025-02-24T16:33:40.6709347Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.6709903Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.6710694Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6711438Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6711853Z 
2025-02-24T16:33:40.6712175Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6712780Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_upper_level_index] _
2025-02-24T16:33:40.6713086Z 
2025-02-24T16:33:40.6713309Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d8500>
2025-02-24T16:33:40.6713795Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a0733b0>
2025-02-24T16:33:40.6714258Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.6714413Z 
2025-02-24T16:33:40.6714565Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6715163Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6715491Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6715709Z         try:
2025-02-24T16:33:40.6715959Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6716266Z         except KeyError:
2025-02-24T16:33:40.6716538Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6716834Z     
2025-02-24T16:33:40.6717013Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6717381Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6717654Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6717962Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6718271Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6718518Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6718806Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6719005Z 
2025-02-24T16:33:40.6719136Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.6719459Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6719887Z 
2025-02-24T16:33:40.6720028Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.6720341Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.6720616Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.6720893Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.6721192Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.6721510Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.6721777Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.6722053Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.6722286Z err_msg = None
2025-02-24T16:33:40.6722399Z 
2025-02-24T16:33:40.6722509Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6722780Z         if err_msg is None:
2025-02-24T16:33:40.6723016Z             if left.shape != right.shape:
2025-02-24T16:33:40.6723281Z                 raise_assert_detail(
2025-02-24T16:33:40.6723589Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6723886Z                 )
2025-02-24T16:33:40.6724063Z     
2025-02-24T16:33:40.6724226Z             diff = 0
2025-02-24T16:33:40.6724457Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6724742Z                 # count up differences
2025-02-24T16:33:40.6725075Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6725411Z                     diff += 1
2025-02-24T16:33:40.6725624Z     
2025-02-24T16:33:40.6725811Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6726114Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6726506Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6726866Z E           AssertionError: Series are different
2025-02-24T16:33:40.6727124Z E           
2025-02-24T16:33:40.6727438Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.6728001Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.6728834Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.6729782Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.6730240Z 
2025-02-24T16:33:40.6730550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6731135Z ___________ TestPlasma.test_plasma_properties[ionization:nebular-nu] ___________
2025-02-24T16:33:40.6731413Z 
2025-02-24T16:33:40.6731548Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6731892Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6732319Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6732631Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6733015Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6733576Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6733837Z err_msg = None
2025-02-24T16:33:40.6733947Z 
2025-02-24T16:33:40.6734063Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6734333Z         if err_msg is None:
2025-02-24T16:33:40.6734570Z             if left.shape != right.shape:
2025-02-24T16:33:40.6734839Z                 raise_assert_detail(
2025-02-24T16:33:40.6735145Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6735445Z                 )
2025-02-24T16:33:40.6735629Z     
2025-02-24T16:33:40.6735789Z             diff = 0
2025-02-24T16:33:40.6736024Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6736307Z                 # count up differences
2025-02-24T16:33:40.6736639Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6736974Z                     diff += 1
2025-02-24T16:33:40.6737187Z     
2025-02-24T16:33:40.6737492Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6737796Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6738192Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6738561Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.6738827Z E           
2025-02-24T16:33:40.6739043Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.6739495Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6740102Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6740448Z 
2025-02-24T16:33:40.6740760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6741278Z 
2025-02-24T16:33:40.6741455Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.6741713Z 
2025-02-24T16:33:40.6741939Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d9a90>
2025-02-24T16:33:40.6742448Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a0733b0>, attr = 'nu'
2025-02-24T16:33:40.6742743Z 
2025-02-24T16:33:40.6742881Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6743222Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6743504Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6743721Z         try:
2025-02-24T16:33:40.6743965Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6744271Z         except KeyError:
2025-02-24T16:33:40.6744541Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6744834Z     
2025-02-24T16:33:40.6745012Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6745270Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6745541Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6745856Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6746158Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6746544Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6746826Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6747025Z 
2025-02-24T16:33:40.6747149Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.6747571Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6747917Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.6748219Z     ???
2025-02-24T16:33:40.6748425Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6748623Z 
2025-02-24T16:33:40.6748699Z >   ???
2025-02-24T16:33:40.6748922Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.6749196Z E   
2025-02-24T16:33:40.6749416Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.6749739Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6750006Z E          ...
2025-02-24T16:33:40.6750205Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6750513Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6763424Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6763993Z E          ...
2025-02-24T16:33:40.6764348Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6764866Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6765351Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.6765556Z 
2025-02-24T16:33:40.6765654Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.6766033Z _____ TestPlasma.test_plasma_properties[ionization:nebular-wavelength_cm] ______
2025-02-24T16:33:40.6766353Z 
2025-02-24T16:33:40.6766495Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6766859Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6767182Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6767635Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6767982Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6768293Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6768547Z err_msg = None
2025-02-24T16:33:40.6768665Z 
2025-02-24T16:33:40.6768787Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6769076Z         if err_msg is None:
2025-02-24T16:33:40.6769319Z             if left.shape != right.shape:
2025-02-24T16:33:40.6769800Z                 raise_assert_detail(
2025-02-24T16:33:40.6770117Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6770422Z                 )
2025-02-24T16:33:40.6770604Z     
2025-02-24T16:33:40.6770765Z             diff = 0
2025-02-24T16:33:40.6771001Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6771296Z                 # count up differences
2025-02-24T16:33:40.6771635Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6771980Z                     diff += 1
2025-02-24T16:33:40.6772194Z     
2025-02-24T16:33:40.6772381Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6772698Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6773093Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6773473Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.6773751Z E           
2025-02-24T16:33:40.6773974Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.6774431Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6775162Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6775504Z 
2025-02-24T16:33:40.6775824Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6776228Z 
2025-02-24T16:33:40.6776399Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.6776657Z 
2025-02-24T16:33:40.6776881Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d9ac0>
2025-02-24T16:33:40.6777566Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a0733b0>
2025-02-24T16:33:40.6777920Z attr = 'wavelength_cm'
2025-02-24T16:33:40.6778049Z 
2025-02-24T16:33:40.6778198Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6778534Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6778835Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6779220Z         try:
2025-02-24T16:33:40.6779652Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6780173Z         except KeyError:
2025-02-24T16:33:40.6780547Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6780849Z     
2025-02-24T16:33:40.6781036Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6781291Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6781562Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6781872Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6782182Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6782434Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6782718Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6782915Z 
2025-02-24T16:33:40.6783047Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.6783372Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6783722Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.6784024Z     ???
2025-02-24T16:33:40.6784236Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6784446Z 
2025-02-24T16:33:40.6784665Z >   ???
2025-02-24T16:33:40.6784892Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.6785174Z E   
2025-02-24T16:33:40.6785398Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.6785719Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6785981Z E          ...
2025-02-24T16:33:40.6786181Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6786482Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6786810Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6787077Z E          ...
2025-02-24T16:33:40.6787410Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6787713Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6788038Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.6788224Z 
2025-02-24T16:33:40.6788319Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.6788664Z __________ TestPlasma.test_plasma_properties[ionization:nebular-f_lu] __________
2025-02-24T16:33:40.6788938Z 
2025-02-24T16:33:40.6789074Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6789419Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6789858Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6790167Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6790515Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6790821Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6791072Z err_msg = None
2025-02-24T16:33:40.6791179Z 
2025-02-24T16:33:40.6791299Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6791572Z         if err_msg is None:
2025-02-24T16:33:40.6791804Z             if left.shape != right.shape:
2025-02-24T16:33:40.6792067Z                 raise_assert_detail(
2025-02-24T16:33:40.6792374Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6792680Z                 )
2025-02-24T16:33:40.6792857Z     
2025-02-24T16:33:40.6793018Z             diff = 0
2025-02-24T16:33:40.6793252Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6793532Z                 # count up differences
2025-02-24T16:33:40.6793866Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6794201Z                     diff += 1
2025-02-24T16:33:40.6794411Z     
2025-02-24T16:33:40.6794585Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6794891Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6795284Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6795657Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.6795922Z E           
2025-02-24T16:33:40.6796137Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.6796589Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6797691Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6798313Z 
2025-02-24T16:33:40.6798705Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6799239Z 
2025-02-24T16:33:40.6799441Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.6799700Z 
2025-02-24T16:33:40.6799922Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123da030>
2025-02-24T16:33:40.6800592Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a0733b0>, attr = 'f_lu'
2025-02-24T16:33:40.6800885Z 
2025-02-24T16:33:40.6801032Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6801365Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6801646Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6801862Z         try:
2025-02-24T16:33:40.6802104Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6802407Z         except KeyError:
2025-02-24T16:33:40.6802675Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6802966Z     
2025-02-24T16:33:40.6803149Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6803392Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6803653Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6803957Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6804257Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6804637Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6804914Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6805109Z 
2025-02-24T16:33:40.6805235Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.6805555Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6805898Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.6806189Z     ???
2025-02-24T16:33:40.6806388Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6806586Z 
2025-02-24T16:33:40.6806653Z >   ???
2025-02-24T16:33:40.6806874Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.6807143Z E   
2025-02-24T16:33:40.6807498Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.6807830Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6808094Z E          ...
2025-02-24T16:33:40.6808292Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6808589Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6808912Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6809179Z E          ...
2025-02-24T16:33:40.6809369Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6809673Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6809984Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.6810169Z 
2025-02-24T16:33:40.6810258Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.6810602Z ______ TestPlasma.test_plasma_properties[ionization:nebular-tau_sobolevs] ______
2025-02-24T16:33:40.6810894Z 
2025-02-24T16:33:40.6811021Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6811367Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6811680Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6811986Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6812330Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6812631Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6812876Z err_msg = None
2025-02-24T16:33:40.6812984Z 
2025-02-24T16:33:40.6813094Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6813361Z         if err_msg is None:
2025-02-24T16:33:40.6813596Z             if left.shape != right.shape:
2025-02-24T16:33:40.6814004Z                 raise_assert_detail(
2025-02-24T16:33:40.6814306Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6814605Z                 )
2025-02-24T16:33:40.6814783Z     
2025-02-24T16:33:40.6814943Z             diff = 0
2025-02-24T16:33:40.6815296Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6815801Z                 # count up differences
2025-02-24T16:33:40.6816368Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6816895Z                     diff += 1
2025-02-24T16:33:40.6817107Z     
2025-02-24T16:33:40.6817416Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6817729Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6818118Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6818487Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.6818753Z E           
2025-02-24T16:33:40.6818967Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.6819424Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6820180Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6820528Z 
2025-02-24T16:33:40.6820835Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6821225Z 
2025-02-24T16:33:40.6821392Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.6821653Z 
2025-02-24T16:33:40.6821882Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123db3b0>
2025-02-24T16:33:40.6822358Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a0733b0>
2025-02-24T16:33:40.6822691Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.6822819Z 
2025-02-24T16:33:40.6822958Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6823289Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6823573Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6823789Z         try:
2025-02-24T16:33:40.6824040Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6824344Z         except KeyError:
2025-02-24T16:33:40.6824612Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6824900Z     
2025-02-24T16:33:40.6825082Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6825330Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6825595Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6825895Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6826196Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6826448Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6826727Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6826990Z             else:
2025-02-24T16:33:40.6827195Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.6827609Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.6827802Z 
2025-02-24T16:33:40.6827925Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.6828243Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6828588Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.6829017Z     ???
2025-02-24T16:33:40.6829220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6829416Z 
2025-02-24T16:33:40.6829489Z >   ???
2025-02-24T16:33:40.6829705Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.6829975Z E   
2025-02-24T16:33:40.6830196Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.6830512Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6830775Z E          ...
2025-02-24T16:33:40.6830969Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6831277Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6831603Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6831871Z E          ...
2025-02-24T16:33:40.6832063Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6832355Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6832675Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.6832865Z 
2025-02-24T16:33:40.6832955Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.6833302Z ______ TestPlasma.test_plasma_properties[ionization:nebular-beta_sobolev] ______
2025-02-24T16:33:40.6833654Z 
2025-02-24T16:33:40.6834084Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6834696Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6835236Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6835558Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6835905Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6836217Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6836480Z err_msg = None
2025-02-24T16:33:40.6836592Z 
2025-02-24T16:33:40.6836709Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6836980Z         if err_msg is None:
2025-02-24T16:33:40.6837214Z             if left.shape != right.shape:
2025-02-24T16:33:40.6837628Z                 raise_assert_detail(
2025-02-24T16:33:40.6837953Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6838253Z                 )
2025-02-24T16:33:40.6838429Z     
2025-02-24T16:33:40.6838590Z             diff = 0
2025-02-24T16:33:40.6838824Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6839101Z                 # count up differences
2025-02-24T16:33:40.6839435Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6839770Z                     diff += 1
2025-02-24T16:33:40.6839979Z     
2025-02-24T16:33:40.6840154Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6840463Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6840851Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6841232Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.6841495Z E           
2025-02-24T16:33:40.6841709Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.6842164Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6842765Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6843325Z 
2025-02-24T16:33:40.6843641Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6844028Z 
2025-02-24T16:33:40.6844200Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.6844456Z 
2025-02-24T16:33:40.6844684Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123db7a0>
2025-02-24T16:33:40.6845161Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a0733b0>
2025-02-24T16:33:40.6845485Z attr = 'beta_sobolev'
2025-02-24T16:33:40.6845618Z 
2025-02-24T16:33:40.6845755Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6846092Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6846382Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6846597Z         try:
2025-02-24T16:33:40.6846837Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6847142Z         except KeyError:
2025-02-24T16:33:40.6847539Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6847828Z     
2025-02-24T16:33:40.6848006Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6848253Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6848645Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6848945Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6849244Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6849484Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6849763Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6850025Z             else:
2025-02-24T16:33:40.6850232Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.6850511Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.6850703Z 
2025-02-24T16:33:40.6850833Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.6851152Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6851498Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.6851792Z     ???
2025-02-24T16:33:40.6851996Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6852202Z 
2025-02-24T16:33:40.6852270Z >   ???
2025-02-24T16:33:40.6852540Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.6853032Z E   
2025-02-24T16:33:40.6853409Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.6853955Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6854274Z E          ...
2025-02-24T16:33:40.6854469Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6854770Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6855094Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6855361Z E          ...
2025-02-24T16:33:40.6855550Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6855842Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6856155Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.6856344Z 
2025-02-24T16:33:40.6856444Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.6856786Z ________ TestPlasma.test_plasma_properties[ionization:nebular-j_blues] _________
2025-02-24T16:33:40.6857064Z 
2025-02-24T16:33:40.6857196Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6857671Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6857984Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6858292Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6858775Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6859077Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6859321Z err_msg = None
2025-02-24T16:33:40.6859428Z 
2025-02-24T16:33:40.6859544Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6859820Z         if err_msg is None:
2025-02-24T16:33:40.6860052Z             if left.shape != right.shape:
2025-02-24T16:33:40.6860311Z                 raise_assert_detail(
2025-02-24T16:33:40.6860612Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6860914Z                 )
2025-02-24T16:33:40.6861098Z     
2025-02-24T16:33:40.6861258Z             diff = 0
2025-02-24T16:33:40.6861485Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6861764Z                 # count up differences
2025-02-24T16:33:40.6862093Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6862439Z                     diff += 1
2025-02-24T16:33:40.6862645Z     
2025-02-24T16:33:40.6862820Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6863129Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6863517Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6864033Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.6864294Z E           
2025-02-24T16:33:40.6864502Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.6864951Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6865549Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6865894Z 
2025-02-24T16:33:40.6866204Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6866591Z 
2025-02-24T16:33:40.6866757Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.6867011Z 
2025-02-24T16:33:40.6867234Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d9130>
2025-02-24T16:33:40.6867806Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a0733b0>
2025-02-24T16:33:40.6868133Z attr = 'j_blues'
2025-02-24T16:33:40.6868248Z 
2025-02-24T16:33:40.6868389Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6868722Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6869000Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6869214Z         try:
2025-02-24T16:33:40.6869451Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6869955Z         except KeyError:
2025-02-24T16:33:40.6870424Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6870915Z     
2025-02-24T16:33:40.6871161Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6871413Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6871671Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6871971Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6872269Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6872509Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6872790Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6873053Z             else:
2025-02-24T16:33:40.6873404Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.6873685Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.6873871Z 
2025-02-24T16:33:40.6874002Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.6874318Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6874665Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.6874962Z     ???
2025-02-24T16:33:40.6875164Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6875361Z 
2025-02-24T16:33:40.6875429Z >   ???
2025-02-24T16:33:40.6875651Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.6875923Z E   
2025-02-24T16:33:40.6876140Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.6876458Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6876722Z E          ...
2025-02-24T16:33:40.6876920Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6877219Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6877681Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6877954Z E          ...
2025-02-24T16:33:40.6878150Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6878560Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6878871Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.6879056Z 
2025-02-24T16:33:40.6879149Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.6879485Z ___________ TestPlasma.test_plasma_properties[ionization:lte-lines] ____________
2025-02-24T16:33:40.6879761Z 
2025-02-24T16:33:40.6879888Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6880228Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6880546Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6880909Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6881250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6881558Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6881803Z err_msg = None
2025-02-24T16:33:40.6881914Z 
2025-02-24T16:33:40.6882023Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6882290Z         if err_msg is None:
2025-02-24T16:33:40.6882523Z             if left.shape != right.shape:
2025-02-24T16:33:40.6882780Z                 raise_assert_detail(
2025-02-24T16:33:40.6883083Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6883381Z                 )
2025-02-24T16:33:40.6883559Z     
2025-02-24T16:33:40.6883717Z             diff = 0
2025-02-24T16:33:40.6883950Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6884230Z                 # count up differences
2025-02-24T16:33:40.6884561Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6884900Z                     diff += 1
2025-02-24T16:33:40.6885114Z     
2025-02-24T16:33:40.6885292Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6885591Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6885981Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6886348Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.6886610Z E           
2025-02-24T16:33:40.6886823Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.6887459Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6888412Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6888762Z 
2025-02-24T16:33:40.6889078Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6889470Z 
2025-02-24T16:33:40.6889644Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.6889906Z 
2025-02-24T16:33:40.6890135Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d3560>
2025-02-24T16:33:40.6890622Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8dc6c60>
2025-02-24T16:33:40.6890942Z attr = 'lines'
2025-02-24T16:33:40.6891049Z 
2025-02-24T16:33:40.6891195Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6891534Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6891816Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6892164Z         try:
2025-02-24T16:33:40.6892410Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6892719Z         except KeyError:
2025-02-24T16:33:40.6892985Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6893270Z     
2025-02-24T16:33:40.6893447Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6893695Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6893956Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6894258Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6894558Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6894807Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6895085Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6895352Z             else:
2025-02-24T16:33:40.6895559Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.6895839Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.6896037Z 
2025-02-24T16:33:40.6896163Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.6896481Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6896824Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.6897124Z     ???
2025-02-24T16:33:40.6897461Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6897668Z 
2025-02-24T16:33:40.6897740Z >   ???
2025-02-24T16:33:40.6897956Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.6898232Z E   
2025-02-24T16:33:40.6898452Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.6898769Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6899032Z E          ...
2025-02-24T16:33:40.6899226Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6899557Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6899885Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6900151Z E          ...
2025-02-24T16:33:40.6900337Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6900625Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6900935Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.6901124Z 
2025-02-24T16:33:40.6901213Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.6901571Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_lower_level_index] ___
2025-02-24T16:33:40.6901996Z 
2025-02-24T16:33:40.6902223Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d3b60>
2025-02-24T16:33:40.6902698Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8dc6c60>
2025-02-24T16:33:40.6903036Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.6903193Z 
2025-02-24T16:33:40.6903331Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6903666Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6903941Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6904156Z         try:
2025-02-24T16:33:40.6904405Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6904705Z         except KeyError:
2025-02-24T16:33:40.6904972Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6905260Z     
2025-02-24T16:33:40.6905439Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6905687Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6906004Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6906541Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6906849Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6907095Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6907468Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6907825Z 
2025-02-24T16:33:40.6907956Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.6908279Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6908483Z 
2025-02-24T16:33:40.6908618Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.6908923Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.6909193Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6909470Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.6909764Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.6910074Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.6910337Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6910604Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.6910832Z err_msg = None
2025-02-24T16:33:40.6910948Z 
2025-02-24T16:33:40.6911060Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6911338Z         if err_msg is None:
2025-02-24T16:33:40.6911573Z             if left.shape != right.shape:
2025-02-24T16:33:40.6911825Z                 raise_assert_detail(
2025-02-24T16:33:40.6912128Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6912430Z                 )
2025-02-24T16:33:40.6912607Z     
2025-02-24T16:33:40.6912767Z             diff = 0
2025-02-24T16:33:40.6912993Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6913274Z                 # count up differences
2025-02-24T16:33:40.6913611Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6913951Z                     diff += 1
2025-02-24T16:33:40.6914160Z     
2025-02-24T16:33:40.6914334Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6914635Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6915036Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6915395Z E           AssertionError: Series are different
2025-02-24T16:33:40.6915649Z E           
2025-02-24T16:33:40.6915853Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.6916411Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.6917470Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6918224Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6918636Z 
2025-02-24T16:33:40.6918952Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6919551Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_upper_level_index] ___
2025-02-24T16:33:40.6919840Z 
2025-02-24T16:33:40.6920067Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d3680>
2025-02-24T16:33:40.6920690Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8dc6c60>
2025-02-24T16:33:40.6921033Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.6921189Z 
2025-02-24T16:33:40.6921326Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6921666Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6921945Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6922160Z         try:
2025-02-24T16:33:40.6922404Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6922707Z         except KeyError:
2025-02-24T16:33:40.6922973Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6923265Z     
2025-02-24T16:33:40.6923441Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6923688Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6923955Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6924254Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6924574Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6925008Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6925443Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6925642Z 
2025-02-24T16:33:40.6925770Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.6926088Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6926292Z 
2025-02-24T16:33:40.6926432Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.6926739Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.6927012Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.6927392Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.6927691Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.6927999Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.6928275Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.6928544Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.6928780Z err_msg = None
2025-02-24T16:33:40.6928885Z 
2025-02-24T16:33:40.6929000Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6929269Z         if err_msg is None:
2025-02-24T16:33:40.6929501Z             if left.shape != right.shape:
2025-02-24T16:33:40.6929757Z                 raise_assert_detail(
2025-02-24T16:33:40.6930058Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6930497Z                 )
2025-02-24T16:33:40.6930674Z     
2025-02-24T16:33:40.6930833Z             diff = 0
2025-02-24T16:33:40.6931068Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6931351Z                 # count up differences
2025-02-24T16:33:40.6931689Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6932030Z                     diff += 1
2025-02-24T16:33:40.6932236Z     
2025-02-24T16:33:40.6932410Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6932711Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6933098Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6933461Z E           AssertionError: Series are different
2025-02-24T16:33:40.6933717Z E           
2025-02-24T16:33:40.6933923Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.6934475Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.6935420Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.6936246Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.6936707Z 
2025-02-24T16:33:40.6937013Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6937712Z _____________ TestPlasma.test_plasma_properties[ionization:lte-nu] _____________
2025-02-24T16:33:40.6937990Z 
2025-02-24T16:33:40.6938117Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6938462Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6938772Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6939080Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6939429Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6939731Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6939980Z err_msg = None
2025-02-24T16:33:40.6940094Z 
2025-02-24T16:33:40.6940202Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6940479Z         if err_msg is None:
2025-02-24T16:33:40.6940713Z             if left.shape != right.shape:
2025-02-24T16:33:40.6940970Z                 raise_assert_detail(
2025-02-24T16:33:40.6941275Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6941573Z                 )
2025-02-24T16:33:40.6941750Z     
2025-02-24T16:33:40.6941914Z             diff = 0
2025-02-24T16:33:40.6942140Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6942418Z                 # count up differences
2025-02-24T16:33:40.6942753Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6943241Z                     diff += 1
2025-02-24T16:33:40.6943611Z     
2025-02-24T16:33:40.6943877Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6944183Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6944570Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6944947Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.6945212Z E           
2025-02-24T16:33:40.6945435Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.6945884Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6946487Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6946975Z 
2025-02-24T16:33:40.6947397Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6947789Z 
2025-02-24T16:33:40.6947961Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.6948212Z 
2025-02-24T16:33:40.6948442Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d1ac0>
2025-02-24T16:33:40.6948953Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8dc6c60>, attr = 'nu'
2025-02-24T16:33:40.6949238Z 
2025-02-24T16:33:40.6949376Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6949715Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6949999Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6950214Z         try:
2025-02-24T16:33:40.6950461Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6950760Z         except KeyError:
2025-02-24T16:33:40.6951027Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6951325Z     
2025-02-24T16:33:40.6951501Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6951749Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6952012Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6952315Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6952615Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6952862Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6953140Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6953330Z 
2025-02-24T16:33:40.6953459Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.6953778Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6954121Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.6954413Z     ???
2025-02-24T16:33:40.6954614Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6954819Z 
2025-02-24T16:33:40.6954891Z >   ???
2025-02-24T16:33:40.6955108Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.6955379Z E   
2025-02-24T16:33:40.6955595Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.6955913Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6956180Z E          ...
2025-02-24T16:33:40.6956376Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6956673Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6956999Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6957520Z E          ...
2025-02-24T16:33:40.6957712Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6958009Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6958318Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.6958510Z 
2025-02-24T16:33:40.6958601Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.6958946Z _______ TestPlasma.test_plasma_properties[ionization:lte-wavelength_cm] ________
2025-02-24T16:33:40.6959231Z 
2025-02-24T16:33:40.6959360Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6959707Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6960023Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6960336Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6960688Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6961100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6961513Z err_msg = None
2025-02-24T16:33:40.6961630Z 
2025-02-24T16:33:40.6961741Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6962146Z         if err_msg is None:
2025-02-24T16:33:40.6962382Z             if left.shape != right.shape:
2025-02-24T16:33:40.6962639Z                 raise_assert_detail(
2025-02-24T16:33:40.6962943Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6963242Z                 )
2025-02-24T16:33:40.6963416Z     
2025-02-24T16:33:40.6963579Z             diff = 0
2025-02-24T16:33:40.6963708Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6963797Z                 # count up differences
2025-02-24T16:33:40.6963974Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6964057Z                     diff += 1
2025-02-24T16:33:40.6964134Z     
2025-02-24T16:33:40.6964231Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6964374Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6964549Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6964669Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.6964751Z E           
2025-02-24T16:33:40.6964863Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.6965128Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6965396Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6965405Z 
2025-02-24T16:33:40.6965722Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6965726Z 
2025-02-24T16:33:40.6965897Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.6965902Z 
2025-02-24T16:33:40.6966131Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d3530>
2025-02-24T16:33:40.6966298Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8dc6c60>
2025-02-24T16:33:40.6966386Z attr = 'wavelength_cm'
2025-02-24T16:33:40.6966390Z 
2025-02-24T16:33:40.6966532Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6966789Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6966881Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6966950Z         try:
2025-02-24T16:33:40.6967095Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6967174Z         except KeyError:
2025-02-24T16:33:40.6967427Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6967502Z     
2025-02-24T16:33:40.6967588Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6967685Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6967774Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6967908Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6967994Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6968087Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6968201Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6968206Z 
2025-02-24T16:33:40.6968336Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.6968453Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6968600Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.6968675Z     ???
2025-02-24T16:33:40.6968788Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6968910Z 
2025-02-24T16:33:40.6968980Z >   ???
2025-02-24T16:33:40.6982285Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.6982457Z E   
2025-02-24T16:33:40.6982722Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.6982920Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6983004Z E          ...
2025-02-24T16:33:40.6983106Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6983245Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6983391Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6983465Z E          ...
2025-02-24T16:33:40.6983561Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6983694Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6983811Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.6983823Z 
2025-02-24T16:33:40.6983923Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.6984125Z ____________ TestPlasma.test_plasma_properties[ionization:lte-f_lu] ____________
2025-02-24T16:33:40.6984131Z 
2025-02-24T16:33:40.6984271Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6984405Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6984515Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6984661Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6984799Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6984906Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6984985Z err_msg = None
2025-02-24T16:33:40.6984990Z 
2025-02-24T16:33:40.6985113Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6985205Z         if err_msg is None:
2025-02-24T16:33:40.6985306Z             if left.shape != right.shape:
2025-02-24T16:33:40.6985397Z                 raise_assert_detail(
2025-02-24T16:33:40.6985551Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6985627Z                 )
2025-02-24T16:33:40.6985695Z     
2025-02-24T16:33:40.6985773Z             diff = 0
2025-02-24T16:33:40.6985893Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6985982Z                 # count up differences
2025-02-24T16:33:40.6986165Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6986429Z                     diff += 1
2025-02-24T16:33:40.6986504Z     
2025-02-24T16:33:40.6986595Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6986743Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6986928Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6987046Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.6987117Z E           
2025-02-24T16:33:40.6987375Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.6987656Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6987927Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6988050Z 
2025-02-24T16:33:40.6988384Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6988389Z 
2025-02-24T16:33:40.6988567Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.6988572Z 
2025-02-24T16:33:40.6988805Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d2090>
2025-02-24T16:33:40.6989020Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8dc6c60>, attr = 'f_lu'
2025-02-24T16:33:40.6989025Z 
2025-02-24T16:33:40.6989165Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6989295Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6989383Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6989458Z         try:
2025-02-24T16:33:40.6989599Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6989689Z         except KeyError:
2025-02-24T16:33:40.6989839Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6989907Z     
2025-02-24T16:33:40.6989997Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6990091Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6990186Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6990325Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6990413Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6990507Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6990618Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6990623Z 
2025-02-24T16:33:40.6990758Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.6990871Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6991027Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.6991099Z     ???
2025-02-24T16:33:40.6991207Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.6991217Z 
2025-02-24T16:33:40.6991290Z >   ???
2025-02-24T16:33:40.6991419Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.6991492Z E   
2025-02-24T16:33:40.6991619Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.6991735Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6991810Z E          ...
2025-02-24T16:33:40.6991900Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6992037Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6992151Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.6992391Z E          ...
2025-02-24T16:33:40.6992483Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.6992604Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.6992713Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.6992722Z 
2025-02-24T16:33:40.6992815Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.6993016Z ________ TestPlasma.test_plasma_properties[ionization:lte-tau_sobolevs] ________
2025-02-24T16:33:40.6993021Z 
2025-02-24T16:33:40.6993152Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6993293Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6993396Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6993530Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.6993660Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.6993751Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.6993831Z err_msg = None
2025-02-24T16:33:40.6993835Z 
2025-02-24T16:33:40.6993957Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.6994137Z         if err_msg is None:
2025-02-24T16:33:40.6994238Z             if left.shape != right.shape:
2025-02-24T16:33:40.6994323Z                 raise_assert_detail(
2025-02-24T16:33:40.6994480Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.6994555Z                 )
2025-02-24T16:33:40.6994623Z     
2025-02-24T16:33:40.6994698Z             diff = 0
2025-02-24T16:33:40.6994810Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.6994904Z                 # count up differences
2025-02-24T16:33:40.6995078Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.6995167Z                     diff += 1
2025-02-24T16:33:40.6995239Z     
2025-02-24T16:33:40.6995327Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.6995469Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.6995644Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.6995765Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.6995835Z E           
2025-02-24T16:33:40.6995951Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.6996218Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6996480Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.6996490Z 
2025-02-24T16:33:40.6996810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.6996814Z 
2025-02-24T16:33:40.6996990Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.6996995Z 
2025-02-24T16:33:40.6997218Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d3020>
2025-02-24T16:33:40.6997564Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8dc6c60>
2025-02-24T16:33:40.6997644Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.6997653Z 
2025-02-24T16:33:40.6997792Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.6998056Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.6998140Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.6998266Z         try:
2025-02-24T16:33:40.6998517Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.6998673Z         except KeyError:
2025-02-24T16:33:40.6998919Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.6998991Z     
2025-02-24T16:33:40.6999085Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.6999179Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.6999273Z             if attr == "selected_atoms":
2025-02-24T16:33:40.6999437Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.6999532Z             elif actual.ndim == 1:
2025-02-24T16:33:40.6999625Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.6999735Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.6999822Z             else:
2025-02-24T16:33:40.6999915Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7000028Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7000033Z 
2025-02-24T16:33:40.7000167Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7000288Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7000595Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7000664Z     ???
2025-02-24T16:33:40.7000777Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7000782Z 
2025-02-24T16:33:40.7000848Z >   ???
2025-02-24T16:33:40.7000981Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7001053Z E   
2025-02-24T16:33:40.7001183Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7001299Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7001373Z E          ...
2025-02-24T16:33:40.7001467Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7001598Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7001721Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7001797Z E          ...
2025-02-24T16:33:40.7001891Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7002023Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7002127Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7002131Z 
2025-02-24T16:33:40.7002226Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7002428Z ________ TestPlasma.test_plasma_properties[ionization:lte-beta_sobolev] ________
2025-02-24T16:33:40.7002438Z 
2025-02-24T16:33:40.7002568Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7002708Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7002811Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7002949Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7003073Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7003174Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7003252Z err_msg = None
2025-02-24T16:33:40.7003257Z 
2025-02-24T16:33:40.7003373Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7003458Z         if err_msg is None:
2025-02-24T16:33:40.7003554Z             if left.shape != right.shape:
2025-02-24T16:33:40.7003643Z                 raise_assert_detail(
2025-02-24T16:33:40.7003795Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7003865Z                 )
2025-02-24T16:33:40.7003937Z     
2025-02-24T16:33:40.7004151Z             diff = 0
2025-02-24T16:33:40.7004270Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7004357Z                 # count up differences
2025-02-24T16:33:40.7004534Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7004617Z                     diff += 1
2025-02-24T16:33:40.7004692Z     
2025-02-24T16:33:40.7004785Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7004925Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7005099Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7005211Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7005287Z E           
2025-02-24T16:33:40.7005404Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7005663Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7005929Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7006016Z 
2025-02-24T16:33:40.7006339Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7006345Z 
2025-02-24T16:33:40.7006514Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7006519Z 
2025-02-24T16:33:40.7006748Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d2750>
2025-02-24T16:33:40.7006922Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8dc6c60>
2025-02-24T16:33:40.7007004Z attr = 'beta_sobolev'
2025-02-24T16:33:40.7007008Z 
2025-02-24T16:33:40.7007152Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7007399Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7007499Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7007568Z         try:
2025-02-24T16:33:40.7007709Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7007801Z         except KeyError:
2025-02-24T16:33:40.7007940Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7008016Z     
2025-02-24T16:33:40.7008103Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7008200Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7008288Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7008425Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7008522Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7008610Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7008729Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7008799Z             else:
2025-02-24T16:33:40.7008899Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7009010Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7009015Z 
2025-02-24T16:33:40.7009143Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7009262Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7009408Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7009482Z     ???
2025-02-24T16:33:40.7009589Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7009593Z 
2025-02-24T16:33:40.7009666Z >   ???
2025-02-24T16:33:40.7009798Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7009991Z E   
2025-02-24T16:33:40.7010123Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7010235Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7010309Z E          ...
2025-02-24T16:33:40.7010396Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7010534Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7010650Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7010719Z E          ...
2025-02-24T16:33:40.7010807Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7010929Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7011037Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7011042Z 
2025-02-24T16:33:40.7011133Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7011327Z __________ TestPlasma.test_plasma_properties[ionization:lte-j_blues] ___________
2025-02-24T16:33:40.7011338Z 
2025-02-24T16:33:40.7011470Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7011601Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7011700Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7011985Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7012113Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7012209Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7012281Z err_msg = None
2025-02-24T16:33:40.7012286Z 
2025-02-24T16:33:40.7012400Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7012479Z         if err_msg is None:
2025-02-24T16:33:40.7012577Z             if left.shape != right.shape:
2025-02-24T16:33:40.7012665Z                 raise_assert_detail(
2025-02-24T16:33:40.7012813Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7012887Z                 )
2025-02-24T16:33:40.7012954Z     
2025-02-24T16:33:40.7013030Z             diff = 0
2025-02-24T16:33:40.7013138Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7013237Z                 # count up differences
2025-02-24T16:33:40.7013409Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7013486Z                     diff += 1
2025-02-24T16:33:40.7013559Z     
2025-02-24T16:33:40.7013647Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7013790Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7013960Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7014077Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7014153Z E           
2025-02-24T16:33:40.7014269Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7014531Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7014794Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7014805Z 
2025-02-24T16:33:40.7015106Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7015111Z 
2025-02-24T16:33:40.7015368Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7015373Z 
2025-02-24T16:33:40.7015612Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d2cf0>
2025-02-24T16:33:40.7015780Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8dc6c60>
2025-02-24T16:33:40.7015861Z attr = 'j_blues'
2025-02-24T16:33:40.7015870Z 
2025-02-24T16:33:40.7016014Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7016129Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7016218Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7016289Z         try:
2025-02-24T16:33:40.7016434Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7016519Z         except KeyError:
2025-02-24T16:33:40.7016658Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7016731Z     
2025-02-24T16:33:40.7016817Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7016984Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7017142Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7017503Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7017655Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7017750Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7018006Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7018082Z             else:
2025-02-24T16:33:40.7018181Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7018288Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7018292Z 
2025-02-24T16:33:40.7018421Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7018538Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7018681Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7018755Z     ???
2025-02-24T16:33:40.7018869Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7018873Z 
2025-02-24T16:33:40.7018943Z >   ???
2025-02-24T16:33:40.7019068Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7019141Z E   
2025-02-24T16:33:40.7019272Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7019392Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7019468Z E          ...
2025-02-24T16:33:40.7019554Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7019686Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7019802Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7019872Z E          ...
2025-02-24T16:33:40.7019961Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7020084Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7020194Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7020202Z 
2025-02-24T16:33:40.7020289Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7020483Z ___________ TestPlasma.test_plasma_properties[excitation:lte-lines] ____________
2025-02-24T16:33:40.7020488Z 
2025-02-24T16:33:40.7020622Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7020753Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7020853Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7020984Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7021112Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7021209Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7021284Z err_msg = None
2025-02-24T16:33:40.7021288Z 
2025-02-24T16:33:40.7021518Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7021599Z         if err_msg is None:
2025-02-24T16:33:40.7021699Z             if left.shape != right.shape:
2025-02-24T16:33:40.7021790Z                 raise_assert_detail(
2025-02-24T16:33:40.7021934Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7022016Z                 )
2025-02-24T16:33:40.7022084Z     
2025-02-24T16:33:40.7022161Z             diff = 0
2025-02-24T16:33:40.7022269Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7022363Z                 # count up differences
2025-02-24T16:33:40.7022538Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7022615Z                     diff += 1
2025-02-24T16:33:40.7022692Z     
2025-02-24T16:33:40.7022780Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7022921Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7023094Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7023214Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7023288Z E           
2025-02-24T16:33:40.7023400Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7023664Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7024026Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7024042Z 
2025-02-24T16:33:40.7024344Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7024349Z 
2025-02-24T16:33:40.7024523Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7024528Z 
2025-02-24T16:33:40.7024753Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d0bc0>
2025-02-24T16:33:40.7024925Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e49da810>
2025-02-24T16:33:40.7025002Z attr = 'lines'
2025-02-24T16:33:40.7025006Z 
2025-02-24T16:33:40.7025141Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7025261Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7025343Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7025420Z         try:
2025-02-24T16:33:40.7025558Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7025645Z         except KeyError:
2025-02-24T16:33:40.7025796Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7025865Z     
2025-02-24T16:33:40.7025960Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7026057Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7026152Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7026297Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7026382Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7026479Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7026589Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7026667Z             else:
2025-02-24T16:33:40.7026764Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7026874Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7026879Z 
2025-02-24T16:33:40.7027010Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7027121Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7027493Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7027565Z     ???
2025-02-24T16:33:40.7027681Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7027685Z 
2025-02-24T16:33:40.7027772Z >   ???
2025-02-24T16:33:40.7027896Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7027968Z E   
2025-02-24T16:33:40.7028094Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7028220Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7028290Z E          ...
2025-02-24T16:33:40.7028383Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7028513Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7028632Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7028707Z E          ...
2025-02-24T16:33:40.7028796Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7028931Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7029036Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7029041Z 
2025-02-24T16:33:40.7029134Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7029470Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_lower_level_index] ___
2025-02-24T16:33:40.7029475Z 
2025-02-24T16:33:40.7029697Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d1730>
2025-02-24T16:33:40.7029871Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e49da810>
2025-02-24T16:33:40.7029959Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.7029964Z 
2025-02-24T16:33:40.7030110Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7030228Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7030312Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7030391Z         try:
2025-02-24T16:33:40.7030532Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7030620Z         except KeyError:
2025-02-24T16:33:40.7030757Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7030830Z     
2025-02-24T16:33:40.7030920Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7031021Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7031117Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7031249Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7031340Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7031429Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7031545Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7031549Z 
2025-02-24T16:33:40.7031680Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7031793Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7031801Z 
2025-02-24T16:33:40.7031943Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7032029Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7032144Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7032234Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7032372Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7032458Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7032564Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7032648Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7032727Z err_msg = None
2025-02-24T16:33:40.7032731Z 
2025-02-24T16:33:40.7032840Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7032926Z         if err_msg is None:
2025-02-24T16:33:40.7033136Z             if left.shape != right.shape:
2025-02-24T16:33:40.7033225Z                 raise_assert_detail(
2025-02-24T16:33:40.7033367Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7033442Z                 )
2025-02-24T16:33:40.7033516Z     
2025-02-24T16:33:40.7033589Z             diff = 0
2025-02-24T16:33:40.7033711Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7033801Z                 # count up differences
2025-02-24T16:33:40.7033977Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7034055Z                     diff += 1
2025-02-24T16:33:40.7034129Z     
2025-02-24T16:33:40.7034220Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7034357Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7034647Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7034838Z E           AssertionError: Series are different
2025-02-24T16:33:40.7034972Z E           
2025-02-24T16:33:40.7035087Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.7035468Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7035896Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7036231Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7036247Z 
2025-02-24T16:33:40.7036560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7036771Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_upper_level_index] ___
2025-02-24T16:33:40.7036776Z 
2025-02-24T16:33:40.7037008Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d11f0>
2025-02-24T16:33:40.7037176Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e49da810>
2025-02-24T16:33:40.7037398Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.7037404Z 
2025-02-24T16:33:40.7037546Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7037666Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7037750Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7037829Z         try:
2025-02-24T16:33:40.7037977Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7038065Z         except KeyError:
2025-02-24T16:33:40.7038215Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7038285Z     
2025-02-24T16:33:40.7038377Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7038470Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7038563Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7038698Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7038784Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7038879Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7038988Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7039110Z 
2025-02-24T16:33:40.7039246Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7039361Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7039366Z 
2025-02-24T16:33:40.7039501Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7039596Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7039703Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7039790Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7039930Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7040021Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7040129Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7040206Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7040291Z err_msg = None
2025-02-24T16:33:40.7040296Z 
2025-02-24T16:33:40.7040403Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7040491Z         if err_msg is None:
2025-02-24T16:33:40.7040589Z             if left.shape != right.shape:
2025-02-24T16:33:40.7040673Z                 raise_assert_detail(
2025-02-24T16:33:40.7040930Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7041002Z                 )
2025-02-24T16:33:40.7041076Z     
2025-02-24T16:33:40.7041148Z             diff = 0
2025-02-24T16:33:40.7041268Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7041359Z                 # count up differences
2025-02-24T16:33:40.7041527Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7041613Z                     diff += 1
2025-02-24T16:33:40.7041684Z     
2025-02-24T16:33:40.7041774Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7041913Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7042089Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7042198Z E           AssertionError: Series are different
2025-02-24T16:33:40.7042271Z E           
2025-02-24T16:33:40.7042383Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.7042749Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7043132Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7043516Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7043525Z 
2025-02-24T16:33:40.7043837Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7044019Z _____________ TestPlasma.test_plasma_properties[excitation:lte-nu] _____________
2025-02-24T16:33:40.7044104Z 
2025-02-24T16:33:40.7044242Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7044370Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7044475Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7044618Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7044740Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7044839Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7044913Z err_msg = None
2025-02-24T16:33:40.7044918Z 
2025-02-24T16:33:40.7045030Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7045116Z         if err_msg is None:
2025-02-24T16:33:40.7045209Z             if left.shape != right.shape:
2025-02-24T16:33:40.7045299Z                 raise_assert_detail(
2025-02-24T16:33:40.7045444Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7045527Z                 )
2025-02-24T16:33:40.7045599Z     
2025-02-24T16:33:40.7045676Z             diff = 0
2025-02-24T16:33:40.7045791Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7045981Z                 # count up differences
2025-02-24T16:33:40.7046154Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7046231Z                     diff += 1
2025-02-24T16:33:40.7046307Z     
2025-02-24T16:33:40.7046393Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7046537Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7046712Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7046828Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7046906Z E           
2025-02-24T16:33:40.7047024Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7047384Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7047656Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7047662Z 
2025-02-24T16:33:40.7047961Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7047966Z 
2025-02-24T16:33:40.7048151Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7048156Z 
2025-02-24T16:33:40.7048386Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d0170>
2025-02-24T16:33:40.7048588Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e49da810>, attr = 'nu'
2025-02-24T16:33:40.7048597Z 
2025-02-24T16:33:40.7048739Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7048854Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7048945Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7049025Z         try:
2025-02-24T16:33:40.7049166Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7049250Z         except KeyError:
2025-02-24T16:33:40.7049385Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7049458Z     
2025-02-24T16:33:40.7049544Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7049644Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7049864Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7049995Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7050088Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7050176Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7050297Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7050302Z 
2025-02-24T16:33:40.7050431Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7050544Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7050697Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7050768Z     ???
2025-02-24T16:33:40.7050886Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7050890Z 
2025-02-24T16:33:40.7050958Z >   ???
2025-02-24T16:33:40.7051091Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7051169Z E   
2025-02-24T16:33:40.7051299Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7051417Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7051488Z E          ...
2025-02-24T16:33:40.7051583Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7051824Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7051944Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7052018Z E          ...
2025-02-24T16:33:40.7052102Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7052230Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7052336Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7052341Z 
2025-02-24T16:33:40.7052436Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7052655Z _______ TestPlasma.test_plasma_properties[excitation:lte-wavelength_cm] ________
2025-02-24T16:33:40.7052671Z 
2025-02-24T16:33:40.7052909Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7053139Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7053307Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7053734Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7053865Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7053958Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7054039Z err_msg = None
2025-02-24T16:33:40.7054044Z 
2025-02-24T16:33:40.7054156Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7054246Z         if err_msg is None:
2025-02-24T16:33:40.7054348Z             if left.shape != right.shape:
2025-02-24T16:33:40.7054432Z                 raise_assert_detail(
2025-02-24T16:33:40.7054585Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7054656Z                 )
2025-02-24T16:33:40.7054730Z     
2025-02-24T16:33:40.7054804Z             diff = 0
2025-02-24T16:33:40.7054921Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7055018Z                 # count up differences
2025-02-24T16:33:40.7055189Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7055274Z                     diff += 1
2025-02-24T16:33:40.7055343Z     
2025-02-24T16:33:40.7055437Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7055574Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7055751Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7055870Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7055944Z E           
2025-02-24T16:33:40.7056159Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7056419Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7056692Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7056697Z 
2025-02-24T16:33:40.7057010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7057015Z 
2025-02-24T16:33:40.7057185Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7057194Z 
2025-02-24T16:33:40.7057542Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d0080>
2025-02-24T16:33:40.7057719Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e49da810>
2025-02-24T16:33:40.7057800Z attr = 'wavelength_cm'
2025-02-24T16:33:40.7057924Z 
2025-02-24T16:33:40.7058069Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7058185Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7058274Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7058349Z         try:
2025-02-24T16:33:40.7058488Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7058572Z         except KeyError:
2025-02-24T16:33:40.7058708Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7058784Z     
2025-02-24T16:33:40.7058871Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7058973Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7059067Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7059197Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7059289Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7059379Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7059499Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7059503Z 
2025-02-24T16:33:40.7059628Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7059747Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7059897Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7059969Z     ???
2025-02-24T16:33:40.7060082Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7060087Z 
2025-02-24T16:33:40.7060154Z >   ???
2025-02-24T16:33:40.7060287Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7060365Z E   
2025-02-24T16:33:40.7060496Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7060612Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7060683Z E          ...
2025-02-24T16:33:40.7060775Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7060911Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7061029Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7061104Z E          ...
2025-02-24T16:33:40.7061188Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7061317Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7061422Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7061427Z 
2025-02-24T16:33:40.7061525Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7061724Z ____________ TestPlasma.test_plasma_properties[excitation:lte-f_lu] ____________
2025-02-24T16:33:40.7061850Z 
2025-02-24T16:33:40.7061986Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7062124Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7062221Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7062365Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7062489Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7062588Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7062667Z err_msg = None
2025-02-24T16:33:40.7062671Z 
2025-02-24T16:33:40.7062786Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7062872Z         if err_msg is None:
2025-02-24T16:33:40.7062967Z             if left.shape != right.shape:
2025-02-24T16:33:40.7063058Z                 raise_assert_detail(
2025-02-24T16:33:40.7063219Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7063288Z                 )
2025-02-24T16:33:40.7063360Z     
2025-02-24T16:33:40.7063431Z             diff = 0
2025-02-24T16:33:40.7063551Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7063753Z                 # count up differences
2025-02-24T16:33:40.7063940Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7064021Z                     diff += 1
2025-02-24T16:33:40.7064089Z     
2025-02-24T16:33:40.7064182Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7064319Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7064497Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7064611Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7064691Z E           
2025-02-24T16:33:40.7064809Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7065071Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7065344Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7065350Z 
2025-02-24T16:33:40.7065677Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7065681Z 
2025-02-24T16:33:40.7065859Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7065863Z 
2025-02-24T16:33:40.7066101Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d01a0>
2025-02-24T16:33:40.7066312Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e49da810>, attr = 'f_lu'
2025-02-24T16:33:40.7066326Z 
2025-02-24T16:33:40.7066466Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7066586Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7066671Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7066743Z         try:
2025-02-24T16:33:40.7066887Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7066969Z         except KeyError:
2025-02-24T16:33:40.7067115Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7067183Z     
2025-02-24T16:33:40.7067392Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7067489Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7067743Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7067885Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7067976Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7068071Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7068188Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7068192Z 
2025-02-24T16:33:40.7068334Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7068449Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7068602Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7068672Z     ???
2025-02-24T16:33:40.7068788Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7068792Z 
2025-02-24T16:33:40.7068864Z >   ???
2025-02-24T16:33:40.7068988Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7069064Z E   
2025-02-24T16:33:40.7069194Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7069310Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7069385Z E          ...
2025-02-24T16:33:40.7069473Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7069723Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7069836Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7069909Z E          ...
2025-02-24T16:33:40.7069993Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7070125Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7070235Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7070239Z 
2025-02-24T16:33:40.7070327Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7070535Z ________ TestPlasma.test_plasma_properties[excitation:lte-tau_sobolevs] ________
2025-02-24T16:33:40.7070545Z 
2025-02-24T16:33:40.7070674Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7070812Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7070953Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7071196Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7071417Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7071570Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7071711Z err_msg = None
2025-02-24T16:33:40.7071719Z 
2025-02-24T16:33:40.7071868Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7071950Z         if err_msg is None:
2025-02-24T16:33:40.7072051Z             if left.shape != right.shape:
2025-02-24T16:33:40.7072136Z                 raise_assert_detail(
2025-02-24T16:33:40.7072292Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7072361Z                 )
2025-02-24T16:33:40.7072434Z     
2025-02-24T16:33:40.7072510Z             diff = 0
2025-02-24T16:33:40.7072622Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7072719Z                 # count up differences
2025-02-24T16:33:40.7072896Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7072978Z                     diff += 1
2025-02-24T16:33:40.7073045Z     
2025-02-24T16:33:40.7073140Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7073282Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7073458Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7073578Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7073650Z E           
2025-02-24T16:33:40.7073871Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7074131Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7074400Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7074406Z 
2025-02-24T16:33:40.7074726Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7074731Z 
2025-02-24T16:33:40.7074912Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7074917Z 
2025-02-24T16:33:40.7075152Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d3cb0>
2025-02-24T16:33:40.7075333Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e49da810>
2025-02-24T16:33:40.7075486Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.7075491Z 
2025-02-24T16:33:40.7075635Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7075753Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7075837Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7075917Z         try:
2025-02-24T16:33:40.7076056Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7076140Z         except KeyError:
2025-02-24T16:33:40.7076276Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7076348Z     
2025-02-24T16:33:40.7076439Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7076536Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7076628Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7076758Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7076848Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7076936Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7077059Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7077134Z             else:
2025-02-24T16:33:40.7077229Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7077473Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7077478Z 
2025-02-24T16:33:40.7077603Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7077721Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7077871Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7077940Z     ???
2025-02-24T16:33:40.7078062Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7078067Z 
2025-02-24T16:33:40.7078136Z >   ???
2025-02-24T16:33:40.7078265Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7078332Z E   
2025-02-24T16:33:40.7078467Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7078587Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7078656Z E          ...
2025-02-24T16:33:40.7078750Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7078879Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7078996Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7079065Z E          ...
2025-02-24T16:33:40.7079154Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7079282Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7079386Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7079513Z 
2025-02-24T16:33:40.7079609Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7079804Z ________ TestPlasma.test_plasma_properties[excitation:lte-beta_sobolev] ________
2025-02-24T16:33:40.7079808Z 
2025-02-24T16:33:40.7079940Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7080075Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7080170Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7080305Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7080427Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7080523Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7080602Z err_msg = None
2025-02-24T16:33:40.7080606Z 
2025-02-24T16:33:40.7080718Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7080804Z         if err_msg is None:
2025-02-24T16:33:40.7080901Z             if left.shape != right.shape:
2025-02-24T16:33:40.7080989Z                 raise_assert_detail(
2025-02-24T16:33:40.7081131Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7081317Z                 )
2025-02-24T16:33:40.7081390Z     
2025-02-24T16:33:40.7081462Z             diff = 0
2025-02-24T16:33:40.7081579Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7081665Z                 # count up differences
2025-02-24T16:33:40.7081837Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7081913Z                     diff += 1
2025-02-24T16:33:40.7081987Z     
2025-02-24T16:33:40.7082079Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7082214Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7082394Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7082504Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7082581Z E           
2025-02-24T16:33:40.7082690Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7082959Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7083227Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7083237Z 
2025-02-24T16:33:40.7083547Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7083557Z 
2025-02-24T16:33:40.7083728Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7083733Z 
2025-02-24T16:33:40.7083976Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d3470>
2025-02-24T16:33:40.7084147Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e49da810>
2025-02-24T16:33:40.7084230Z attr = 'beta_sobolev'
2025-02-24T16:33:40.7084235Z 
2025-02-24T16:33:40.7084377Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7084493Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7084581Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7084652Z         try:
2025-02-24T16:33:40.7084798Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7084970Z         except KeyError:
2025-02-24T16:33:40.7085112Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7085184Z     
2025-02-24T16:33:40.7085270Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7085369Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7085457Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7085599Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7085683Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7085776Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7085889Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7085961Z             else:
2025-02-24T16:33:40.7086058Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7086164Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7086168Z 
2025-02-24T16:33:40.7086299Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7086415Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7086568Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7086641Z     ???
2025-02-24T16:33:40.7086751Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7086834Z 
2025-02-24T16:33:40.7086908Z >   ???
2025-02-24T16:33:40.7087038Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7087111Z E   
2025-02-24T16:33:40.7087341Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7087455Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7087530Z E          ...
2025-02-24T16:33:40.7087616Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7087753Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7087865Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7087945Z E          ...
2025-02-24T16:33:40.7088033Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7088168Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7088275Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7088280Z 
2025-02-24T16:33:40.7088367Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7088574Z __________ TestPlasma.test_plasma_properties[excitation:lte-j_blues] ___________
2025-02-24T16:33:40.7088579Z 
2025-02-24T16:33:40.7088711Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7088838Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7088939Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7089072Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7089199Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7089299Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7089372Z err_msg = None
2025-02-24T16:33:40.7089377Z 
2025-02-24T16:33:40.7089495Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7089574Z         if err_msg is None:
2025-02-24T16:33:40.7089677Z             if left.shape != right.shape:
2025-02-24T16:33:40.7089761Z                 raise_assert_detail(
2025-02-24T16:33:40.7089910Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7089985Z                 )
2025-02-24T16:33:40.7090056Z     
2025-02-24T16:33:40.7090132Z             diff = 0
2025-02-24T16:33:40.7090240Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7090330Z                 # count up differences
2025-02-24T16:33:40.7090506Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7090727Z                     diff += 1
2025-02-24T16:33:40.7090800Z     
2025-02-24T16:33:40.7090888Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7091031Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7091205Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7091325Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7091396Z E           
2025-02-24T16:33:40.7091511Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7091771Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7092039Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7092054Z 
2025-02-24T16:33:40.7092364Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7092476Z 
2025-02-24T16:33:40.7092662Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7092667Z 
2025-02-24T16:33:40.7092899Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123d2720>
2025-02-24T16:33:40.7093077Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e49da810>
2025-02-24T16:33:40.7093160Z attr = 'j_blues'
2025-02-24T16:33:40.7093164Z 
2025-02-24T16:33:40.7093307Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7093430Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7093521Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7093596Z         try:
2025-02-24T16:33:40.7093740Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7093826Z         except KeyError:
2025-02-24T16:33:40.7093971Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7094044Z     
2025-02-24T16:33:40.7094134Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7094228Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7094321Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7094456Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7094547Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7094640Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7094751Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7094825Z             else:
2025-02-24T16:33:40.7094919Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7095038Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7095043Z 
2025-02-24T16:33:40.7095169Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7095289Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7095449Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7095521Z     ???
2025-02-24T16:33:40.7095636Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7095641Z 
2025-02-24T16:33:40.7095709Z >   ???
2025-02-24T16:33:40.7095844Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7095917Z E   
2025-02-24T16:33:40.7096048Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7096167Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7096237Z E          ...
2025-02-24T16:33:40.7096332Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7096642Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7096870Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7097008Z E          ...
2025-02-24T16:33:40.7097158Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7097398Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7097505Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7097511Z 
2025-02-24T16:33:40.7097609Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7097815Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines] ________
2025-02-24T16:33:40.7097824Z 
2025-02-24T16:33:40.7097956Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7098100Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7098198Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7098343Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7098468Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7098572Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7098780Z err_msg = None
2025-02-24T16:33:40.7098785Z 
2025-02-24T16:33:40.7098897Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7098984Z         if err_msg is None:
2025-02-24T16:33:40.7099081Z             if left.shape != right.shape:
2025-02-24T16:33:40.7099173Z                 raise_assert_detail(
2025-02-24T16:33:40.7099324Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7099394Z                 )
2025-02-24T16:33:40.7099500Z     
2025-02-24T16:33:40.7099573Z             diff = 0
2025-02-24T16:33:40.7099690Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7099781Z                 # count up differences
2025-02-24T16:33:40.7099963Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7100045Z                     diff += 1
2025-02-24T16:33:40.7100113Z     
2025-02-24T16:33:40.7100205Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7100349Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7100528Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7100641Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7100718Z E           
2025-02-24T16:33:40.7100834Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7101092Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7101362Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7101372Z 
2025-02-24T16:33:40.7101690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7101696Z 
2025-02-24T16:33:40.7101870Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7101875Z 
2025-02-24T16:33:40.7102113Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123b8590>
2025-02-24T16:33:40.7102291Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e214c380>
2025-02-24T16:33:40.7102486Z attr = 'lines'
2025-02-24T16:33:40.7102490Z 
2025-02-24T16:33:40.7102635Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7102752Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7102841Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7102909Z         try:
2025-02-24T16:33:40.7103062Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7103146Z         except KeyError:
2025-02-24T16:33:40.7103285Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7103359Z     
2025-02-24T16:33:40.7103447Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7103543Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7103631Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7103769Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7103858Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7103946Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7104069Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7104139Z             else:
2025-02-24T16:33:40.7104238Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7104343Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7104441Z 
2025-02-24T16:33:40.7104570Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7104688Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7104838Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7104912Z     ???
2025-02-24T16:33:40.7105020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7105024Z 
2025-02-24T16:33:40.7105097Z >   ???
2025-02-24T16:33:40.7105230Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7105298Z E   
2025-02-24T16:33:40.7105436Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7105554Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7105630Z E          ...
2025-02-24T16:33:40.7105717Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7105852Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7105975Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7106046Z E          ...
2025-02-24T16:33:40.7106135Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7106263Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7106376Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7106380Z 
2025-02-24T16:33:40.7106468Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7106711Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] _
2025-02-24T16:33:40.7106715Z 
2025-02-24T16:33:40.7106953Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123ba690>
2025-02-24T16:33:40.7107129Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e214c380>
2025-02-24T16:33:40.7107225Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.7107229Z 
2025-02-24T16:33:40.7107518Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7107649Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7107738Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7107808Z         try:
2025-02-24T16:33:40.7107954Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7108043Z         except KeyError:
2025-02-24T16:33:40.7108187Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7108262Z     
2025-02-24T16:33:40.7108348Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7108445Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7108535Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7108676Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7108888Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7108981Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7109097Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7109102Z 
2025-02-24T16:33:40.7109227Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7109348Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7109352Z 
2025-02-24T16:33:40.7109491Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7109581Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7109697Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7109778Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7109923Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7110010Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7110120Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7110197Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7110276Z err_msg = None
2025-02-24T16:33:40.7110280Z 
2025-02-24T16:33:40.7110397Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7110613Z         if err_msg is None:
2025-02-24T16:33:40.7110712Z             if left.shape != right.shape:
2025-02-24T16:33:40.7110796Z                 raise_assert_detail(
2025-02-24T16:33:40.7110947Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7111017Z                 )
2025-02-24T16:33:40.7111090Z     
2025-02-24T16:33:40.7111167Z             diff = 0
2025-02-24T16:33:40.7111279Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7111371Z                 # count up differences
2025-02-24T16:33:40.7111541Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7111631Z                     diff += 1
2025-02-24T16:33:40.7111700Z     
2025-02-24T16:33:40.7111790Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7111932Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7112111Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7112223Z E           AssertionError: Series are different
2025-02-24T16:33:40.7112295Z E           
2025-02-24T16:33:40.7112402Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.7112794Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7113144Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7113495Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7113501Z 
2025-02-24T16:33:40.7113824Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7114147Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] _
2025-02-24T16:33:40.7114152Z 
2025-02-24T16:33:40.7114387Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123b9e20>
2025-02-24T16:33:40.7114564Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e214c380>
2025-02-24T16:33:40.7114660Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.7114664Z 
2025-02-24T16:33:40.7114807Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7114992Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7115159Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7115290Z         try:
2025-02-24T16:33:40.7115497Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7115585Z         except KeyError:
2025-02-24T16:33:40.7115725Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7115807Z     
2025-02-24T16:33:40.7115895Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7115991Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7116086Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7116219Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7116307Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7116508Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7116625Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7116629Z 
2025-02-24T16:33:40.7116755Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7116874Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7116879Z 
2025-02-24T16:33:40.7117021Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7117104Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7117219Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7117450Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7117600Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7117686Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7117792Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7117883Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7117957Z err_msg = None
2025-02-24T16:33:40.7117962Z 
2025-02-24T16:33:40.7118089Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7118170Z         if err_msg is None:
2025-02-24T16:33:40.7118268Z             if left.shape != right.shape:
2025-02-24T16:33:40.7118359Z                 raise_assert_detail(
2025-02-24T16:33:40.7118503Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7118578Z                 )
2025-02-24T16:33:40.7118651Z     
2025-02-24T16:33:40.7118729Z             diff = 0
2025-02-24T16:33:40.7118840Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7118932Z                 # count up differences
2025-02-24T16:33:40.7119110Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7119194Z                     diff += 1
2025-02-24T16:33:40.7119267Z     
2025-02-24T16:33:40.7119354Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7119496Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7119675Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7119778Z E           AssertionError: Series are different
2025-02-24T16:33:40.7119853Z E           
2025-02-24T16:33:40.7119955Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.7120347Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7120879Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7121274Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7121290Z 
2025-02-24T16:33:40.7121603Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7121915Z _________ TestPlasma.test_plasma_properties[excitation:dilute-lte-nu] __________
2025-02-24T16:33:40.7121920Z 
2025-02-24T16:33:40.7122048Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7122180Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7122282Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7122415Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7122543Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7122642Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7122722Z err_msg = None
2025-02-24T16:33:40.7122727Z 
2025-02-24T16:33:40.7122842Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7122922Z         if err_msg is None:
2025-02-24T16:33:40.7123027Z             if left.shape != right.shape:
2025-02-24T16:33:40.7123111Z                 raise_assert_detail(
2025-02-24T16:33:40.7123260Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7123331Z                 )
2025-02-24T16:33:40.7123406Z     
2025-02-24T16:33:40.7123483Z             diff = 0
2025-02-24T16:33:40.7123592Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7123684Z                 # count up differences
2025-02-24T16:33:40.7123857Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7123946Z                     diff += 1
2025-02-24T16:33:40.7124013Z     
2025-02-24T16:33:40.7124107Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7124251Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7124428Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7124551Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7124622Z E           
2025-02-24T16:33:40.7124739Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7125000Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7125268Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7125386Z 
2025-02-24T16:33:40.7125704Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7125712Z 
2025-02-24T16:33:40.7125892Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7125896Z 
2025-02-24T16:33:40.7126127Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123bbc80>
2025-02-24T16:33:40.7126340Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e214c380>, attr = 'nu'
2025-02-24T16:33:40.7126345Z 
2025-02-24T16:33:40.7126483Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7126608Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7126701Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7126773Z         try:
2025-02-24T16:33:40.7126918Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7126998Z         except KeyError:
2025-02-24T16:33:40.7127140Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7127407Z     
2025-02-24T16:33:40.7127502Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7127600Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7127689Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7127827Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7127912Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7128006Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7128115Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7128120Z 
2025-02-24T16:33:40.7128253Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7128375Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7128523Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7128597Z     ???
2025-02-24T16:33:40.7128705Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7128715Z 
2025-02-24T16:33:40.7128789Z >   ???
2025-02-24T16:33:40.7128924Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7128994Z E   
2025-02-24T16:33:40.7129128Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7129241Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7129317Z E          ...
2025-02-24T16:33:40.7129408Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7129546Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7129666Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7129741Z E          ...
2025-02-24T16:33:40.7129831Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7129959Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7130066Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7130070Z 
2025-02-24T16:33:40.7130160Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7130384Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-wavelength_cm] ____
2025-02-24T16:33:40.7130388Z 
2025-02-24T16:33:40.7130524Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7130649Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7130753Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7130885Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7131013Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7131255Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7131329Z err_msg = None
2025-02-24T16:33:40.7131333Z 
2025-02-24T16:33:40.7131446Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7131527Z         if err_msg is None:
2025-02-24T16:33:40.7131635Z             if left.shape != right.shape:
2025-02-24T16:33:40.7131723Z                 raise_assert_detail(
2025-02-24T16:33:40.7131867Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7131942Z                 )
2025-02-24T16:33:40.7132010Z     
2025-02-24T16:33:40.7132085Z             diff = 0
2025-02-24T16:33:40.7132195Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7132286Z                 # count up differences
2025-02-24T16:33:40.7132464Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7132548Z                     diff += 1
2025-02-24T16:33:40.7132620Z     
2025-02-24T16:33:40.7132707Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7132850Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7133025Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7133307Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7133384Z E           
2025-02-24T16:33:40.7133495Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7133759Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7134179Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7134215Z 
2025-02-24T16:33:40.7134668Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7134679Z 
2025-02-24T16:33:40.7134858Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7134863Z 
2025-02-24T16:33:40.7135099Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123bbdd0>
2025-02-24T16:33:40.7135268Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e214c380>
2025-02-24T16:33:40.7135350Z attr = 'wavelength_cm'
2025-02-24T16:33:40.7135354Z 
2025-02-24T16:33:40.7135492Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7135614Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7135701Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7135776Z         try:
2025-02-24T16:33:40.7135922Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7136002Z         except KeyError:
2025-02-24T16:33:40.7136146Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7136218Z     
2025-02-24T16:33:40.7136313Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7136404Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7136500Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7136638Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7136725Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7136821Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7136930Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7136934Z 
2025-02-24T16:33:40.7137065Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7137412Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7137564Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7137639Z     ???
2025-02-24T16:33:40.7137746Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7137755Z 
2025-02-24T16:33:40.7137827Z >   ???
2025-02-24T16:33:40.7137966Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7138042Z E   
2025-02-24T16:33:40.7138181Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7138292Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7138367Z E          ...
2025-02-24T16:33:40.7138456Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7138591Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7138703Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7138781Z E          ...
2025-02-24T16:33:40.7138871Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7138996Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7139111Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7139116Z 
2025-02-24T16:33:40.7139336Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7139546Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-f_lu] _________
2025-02-24T16:33:40.7139551Z 
2025-02-24T16:33:40.7139685Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7139812Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7139911Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7140044Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7140172Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7140275Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7140348Z err_msg = None
2025-02-24T16:33:40.7140352Z 
2025-02-24T16:33:40.7140471Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7140557Z         if err_msg is None:
2025-02-24T16:33:40.7140656Z             if left.shape != right.shape:
2025-02-24T16:33:40.7140739Z                 raise_assert_detail(
2025-02-24T16:33:40.7140888Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7140963Z                 )
2025-02-24T16:33:40.7141029Z     
2025-02-24T16:33:40.7141106Z             diff = 0
2025-02-24T16:33:40.7141217Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7141308Z                 # count up differences
2025-02-24T16:33:40.7141483Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7141570Z                     diff += 1
2025-02-24T16:33:40.7141642Z     
2025-02-24T16:33:40.7141729Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7141872Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7142045Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7142169Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7142243Z E           
2025-02-24T16:33:40.7142352Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7142613Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7142875Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7143033Z 
2025-02-24T16:33:40.7143348Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7143357Z 
2025-02-24T16:33:40.7143531Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7143536Z 
2025-02-24T16:33:40.7143766Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123bb080>
2025-02-24T16:33:40.7143983Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e214c380>, attr = 'f_lu'
2025-02-24T16:33:40.7143987Z 
2025-02-24T16:33:40.7144129Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7144244Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7144341Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7144411Z         try:
2025-02-24T16:33:40.7144556Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7144635Z         except KeyError:
2025-02-24T16:33:40.7144781Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7144936Z     
2025-02-24T16:33:40.7145023Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7145121Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7145211Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7145348Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7145433Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7145525Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7145639Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7145643Z 
2025-02-24T16:33:40.7145769Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7145887Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7146033Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7146107Z     ???
2025-02-24T16:33:40.7146219Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7146228Z 
2025-02-24T16:33:40.7146296Z >   ???
2025-02-24T16:33:40.7146431Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7146498Z E   
2025-02-24T16:33:40.7146633Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7146745Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7146822Z E          ...
2025-02-24T16:33:40.7146914Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7147044Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7147162Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7159836Z E          ...
2025-02-24T16:33:40.7160064Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7160319Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7160510Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7160516Z 
2025-02-24T16:33:40.7160625Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7160880Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-tau_sobolevs] _____
2025-02-24T16:33:40.7160886Z 
2025-02-24T16:33:40.7161030Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7161180Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7161286Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7161439Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7161572Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7161864Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7161947Z err_msg = None
2025-02-24T16:33:40.7161952Z 
2025-02-24T16:33:40.7162076Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7162166Z         if err_msg is None:
2025-02-24T16:33:40.7162270Z             if left.shape != right.shape:
2025-02-24T16:33:40.7162361Z                 raise_assert_detail(
2025-02-24T16:33:40.7162524Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7162596Z                 )
2025-02-24T16:33:40.7162669Z     
2025-02-24T16:33:40.7162741Z             diff = 0
2025-02-24T16:33:40.7162868Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7162957Z                 # count up differences
2025-02-24T16:33:40.7163139Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7163230Z                     diff += 1
2025-02-24T16:33:40.7163298Z     
2025-02-24T16:33:40.7163393Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7163531Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7163709Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7163964Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7164037Z E           
2025-02-24T16:33:40.7164152Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7164423Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7164688Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7164698Z 
2025-02-24T16:33:40.7165014Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7165024Z 
2025-02-24T16:33:40.7165204Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7165209Z 
2025-02-24T16:33:40.7165442Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123bbb60>
2025-02-24T16:33:40.7165617Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e214c380>
2025-02-24T16:33:40.7165702Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.7165706Z 
2025-02-24T16:33:40.7165847Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7165971Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7166064Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7166135Z         try:
2025-02-24T16:33:40.7166283Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7166362Z         except KeyError:
2025-02-24T16:33:40.7166509Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7166581Z     
2025-02-24T16:33:40.7166672Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7166770Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7166861Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7167002Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7167088Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7167181Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7167437Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7167515Z             else:
2025-02-24T16:33:40.7167614Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7167878Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7167882Z 
2025-02-24T16:33:40.7168014Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7168132Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7168292Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7168366Z     ???
2025-02-24T16:33:40.7168474Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7168479Z 
2025-02-24T16:33:40.7168558Z >   ???
2025-02-24T16:33:40.7168687Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7168760Z E   
2025-02-24T16:33:40.7168888Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7169004Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7169079Z E          ...
2025-02-24T16:33:40.7169167Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7169307Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7169417Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7169493Z E          ...
2025-02-24T16:33:40.7169577Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7169828Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7169937Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7169942Z 
2025-02-24T16:33:40.7170031Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7170243Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-beta_sobolev] _____
2025-02-24T16:33:40.7170248Z 
2025-02-24T16:33:40.7170378Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7170516Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7170625Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7170757Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7170888Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7170982Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7171066Z err_msg = None
2025-02-24T16:33:40.7171071Z 
2025-02-24T16:33:40.7171189Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7171270Z         if err_msg is None:
2025-02-24T16:33:40.7171371Z             if left.shape != right.shape:
2025-02-24T16:33:40.7171457Z                 raise_assert_detail(
2025-02-24T16:33:40.7171609Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7171680Z                 )
2025-02-24T16:33:40.7171752Z     
2025-02-24T16:33:40.7171829Z             diff = 0
2025-02-24T16:33:40.7171970Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7172141Z                 # count up differences
2025-02-24T16:33:40.7172451Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7172590Z                     diff += 1
2025-02-24T16:33:40.7172659Z     
2025-02-24T16:33:40.7172760Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7172906Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7173076Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7173194Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7173264Z E           
2025-02-24T16:33:40.7173379Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7173640Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7174004Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7174014Z 
2025-02-24T16:33:40.7174334Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7174339Z 
2025-02-24T16:33:40.7174513Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7174518Z 
2025-02-24T16:33:40.7174742Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123b8860>
2025-02-24T16:33:40.7174917Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e214c380>
2025-02-24T16:33:40.7174999Z attr = 'beta_sobolev'
2025-02-24T16:33:40.7175003Z 
2025-02-24T16:33:40.7175148Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7175266Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7175348Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7175500Z         try:
2025-02-24T16:33:40.7175643Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7175727Z         except KeyError:
2025-02-24T16:33:40.7175865Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7175937Z     
2025-02-24T16:33:40.7176028Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7176121Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7176214Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7176347Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7176439Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7176533Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7176648Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7176726Z             else:
2025-02-24T16:33:40.7176819Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7176931Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7176940Z 
2025-02-24T16:33:40.7177066Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7177186Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7177470Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7177543Z     ???
2025-02-24T16:33:40.7177660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7177664Z 
2025-02-24T16:33:40.7177731Z >   ???
2025-02-24T16:33:40.7177863Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7177930Z E   
2025-02-24T16:33:40.7178071Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7178187Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7178258Z E          ...
2025-02-24T16:33:40.7178361Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7178490Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7178611Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7178682Z E          ...
2025-02-24T16:33:40.7178773Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7178905Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7179011Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7179016Z 
2025-02-24T16:33:40.7179109Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7179315Z _______ TestPlasma.test_plasma_properties[excitation:dilute-lte-j_blues] _______
2025-02-24T16:33:40.7179319Z 
2025-02-24T16:33:40.7179454Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7179731Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7179831Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7179973Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7180101Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7180200Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7180281Z err_msg = None
2025-02-24T16:33:40.7180286Z 
2025-02-24T16:33:40.7180399Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7180485Z         if err_msg is None:
2025-02-24T16:33:40.7180582Z             if left.shape != right.shape:
2025-02-24T16:33:40.7180670Z                 raise_assert_detail(
2025-02-24T16:33:40.7180818Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7180898Z                 )
2025-02-24T16:33:40.7180971Z     
2025-02-24T16:33:40.7181042Z             diff = 0
2025-02-24T16:33:40.7181161Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7181248Z                 # count up differences
2025-02-24T16:33:40.7181549Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7181627Z                     diff += 1
2025-02-24T16:33:40.7181700Z     
2025-02-24T16:33:40.7181794Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7181930Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7182108Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7182220Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7182292Z E           
2025-02-24T16:33:40.7182403Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7182676Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7182944Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7182949Z 
2025-02-24T16:33:40.7183260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7183272Z 
2025-02-24T16:33:40.7183441Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7183450Z 
2025-02-24T16:33:40.7183685Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123bb2f0>
2025-02-24T16:33:40.7183856Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e214c380>
2025-02-24T16:33:40.7183937Z attr = 'j_blues'
2025-02-24T16:33:40.7183942Z 
2025-02-24T16:33:40.7184088Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7184205Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7184295Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7184366Z         try:
2025-02-24T16:33:40.7184510Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7184591Z         except KeyError:
2025-02-24T16:33:40.7184733Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7184805Z     
2025-02-24T16:33:40.7184891Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7184993Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7185174Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7185314Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7185398Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7185491Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7185606Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7185682Z             else:
2025-02-24T16:33:40.7185781Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7185885Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7185890Z 
2025-02-24T16:33:40.7186021Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7186134Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7186287Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7186361Z     ???
2025-02-24T16:33:40.7186468Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7186478Z 
2025-02-24T16:33:40.7186549Z >   ???
2025-02-24T16:33:40.7186675Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7186747Z E   
2025-02-24T16:33:40.7186878Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7186988Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7187152Z E          ...
2025-02-24T16:33:40.7187240Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7187517Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7187628Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7187707Z E          ...
2025-02-24T16:33:40.7187800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7187928Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7188043Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7188047Z 
2025-02-24T16:33:40.7188146Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7188404Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] _
2025-02-24T16:33:40.7188409Z 
2025-02-24T16:33:40.7188545Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7188674Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7188782Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7188913Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7189039Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7189135Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7189210Z err_msg = None
2025-02-24T16:33:40.7189214Z 
2025-02-24T16:33:40.7189327Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7189413Z         if err_msg is None:
2025-02-24T16:33:40.7189516Z             if left.shape != right.shape:
2025-02-24T16:33:40.7189600Z                 raise_assert_detail(
2025-02-24T16:33:40.7189752Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7189827Z                 )
2025-02-24T16:33:40.7189899Z     
2025-02-24T16:33:40.7189975Z             diff = 0
2025-02-24T16:33:40.7190087Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7190180Z                 # count up differences
2025-02-24T16:33:40.7190352Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7190434Z                     diff += 1
2025-02-24T16:33:40.7190505Z     
2025-02-24T16:33:40.7190593Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7190748Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7191054Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7191446Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7191530Z E           
2025-02-24T16:33:40.7191649Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7191913Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7192181Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7192187Z 
2025-02-24T16:33:40.7192495Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7192504Z 
2025-02-24T16:33:40.7192672Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7192677Z 
2025-02-24T16:33:40.7192906Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123b83e0>
2025-02-24T16:33:40.7193218Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4df629dc0>
2025-02-24T16:33:40.7193296Z attr = 'lines'
2025-02-24T16:33:40.7193300Z 
2025-02-24T16:33:40.7193440Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7193555Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7193641Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7193711Z         try:
2025-02-24T16:33:40.7193852Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7193932Z         except KeyError:
2025-02-24T16:33:40.7194075Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7194151Z     
2025-02-24T16:33:40.7194236Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7194334Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7194421Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7194554Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7194643Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7194736Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7194848Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7194918Z             else:
2025-02-24T16:33:40.7195015Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7195121Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7195125Z 
2025-02-24T16:33:40.7195254Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7195366Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7195517Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7195592Z     ???
2025-02-24T16:33:40.7195698Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7195703Z 
2025-02-24T16:33:40.7195774Z >   ???
2025-02-24T16:33:40.7195903Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7195976Z E   
2025-02-24T16:33:40.7196109Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7196218Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7196291Z E          ...
2025-02-24T16:33:40.7196377Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7196509Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7196619Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7196691Z E          ...
2025-02-24T16:33:40.7196776Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7196994Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7197099Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7197104Z 
2025-02-24T16:33:40.7197191Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7197649Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] _
2025-02-24T16:33:40.7197660Z 
2025-02-24T16:33:40.7197889Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123bb1a0>
2025-02-24T16:33:40.7198064Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4df629dc0>
2025-02-24T16:33:40.7198154Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.7198159Z 
2025-02-24T16:33:40.7198292Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7198408Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7198490Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7198564Z         try:
2025-02-24T16:33:40.7198714Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7198792Z         except KeyError:
2025-02-24T16:33:40.7198930Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7198996Z     
2025-02-24T16:33:40.7199084Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7199293Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7199384Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7199553Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7199636Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7199726Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7199831Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7199835Z 
2025-02-24T16:33:40.7199961Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7200075Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7200085Z 
2025-02-24T16:33:40.7200218Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7200307Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7200415Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7200508Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7200650Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7200730Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7200840Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7200918Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7200996Z err_msg = None
2025-02-24T16:33:40.7201001Z 
2025-02-24T16:33:40.7201110Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7201195Z         if err_msg is None:
2025-02-24T16:33:40.7201293Z             if left.shape != right.shape:
2025-02-24T16:33:40.7201380Z                 raise_assert_detail(
2025-02-24T16:33:40.7201528Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7201599Z                 )
2025-02-24T16:33:40.7201672Z     
2025-02-24T16:33:40.7201746Z             diff = 0
2025-02-24T16:33:40.7201867Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7201961Z                 # count up differences
2025-02-24T16:33:40.7202131Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7202213Z                     diff += 1
2025-02-24T16:33:40.7202281Z     
2025-02-24T16:33:40.7202370Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7202504Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7202680Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7202786Z E           AssertionError: Series are different
2025-02-24T16:33:40.7202975Z E           
2025-02-24T16:33:40.7203079Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.7203452Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7203789Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7204126Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7204205Z 
2025-02-24T16:33:40.7204517Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7204812Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] _
2025-02-24T16:33:40.7204817Z 
2025-02-24T16:33:40.7205044Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123ba4e0>
2025-02-24T16:33:40.7205211Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4df629dc0>
2025-02-24T16:33:40.7205303Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.7205312Z 
2025-02-24T16:33:40.7205451Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7205563Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7205650Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7205719Z         try:
2025-02-24T16:33:40.7205861Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7205948Z         except KeyError:
2025-02-24T16:33:40.7206085Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7206158Z     
2025-02-24T16:33:40.7206242Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7206338Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7206427Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7206561Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7206650Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7206737Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7206849Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7206857Z 
2025-02-24T16:33:40.7206982Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7207098Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7207103Z 
2025-02-24T16:33:40.7207237Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7207439Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7207550Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7207627Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7207771Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7207851Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7207959Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7208041Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7208231Z err_msg = None
2025-02-24T16:33:40.7208235Z 
2025-02-24T16:33:40.7208347Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7208454Z         if err_msg is None:
2025-02-24T16:33:40.7208627Z             if left.shape != right.shape:
2025-02-24T16:33:40.7208778Z                 raise_assert_detail(
2025-02-24T16:33:40.7209022Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7209101Z                 )
2025-02-24T16:33:40.7209168Z     
2025-02-24T16:33:40.7209243Z             diff = 0
2025-02-24T16:33:40.7209353Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7209445Z                 # count up differences
2025-02-24T16:33:40.7209616Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7209696Z                     diff += 1
2025-02-24T16:33:40.7209770Z     
2025-02-24T16:33:40.7209855Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7209998Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7210166Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7210272Z E           AssertionError: Series are different
2025-02-24T16:33:40.7210351Z E           
2025-02-24T16:33:40.7210600Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.7210975Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7211350Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7211730Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7211739Z 
2025-02-24T16:33:40.7212051Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7212287Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] _
2025-02-24T16:33:40.7212295Z 
2025-02-24T16:33:40.7212422Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7212552Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7212651Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7212789Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7212914Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7213005Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7213085Z err_msg = None
2025-02-24T16:33:40.7213090Z 
2025-02-24T16:33:40.7213197Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7213281Z         if err_msg is None:
2025-02-24T16:33:40.7213381Z             if left.shape != right.shape:
2025-02-24T16:33:40.7213464Z                 raise_assert_detail(
2025-02-24T16:33:40.7213720Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7213790Z                 )
2025-02-24T16:33:40.7213861Z     
2025-02-24T16:33:40.7213932Z             diff = 0
2025-02-24T16:33:40.7214047Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7214142Z                 # count up differences
2025-02-24T16:33:40.7214311Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7214391Z                     diff += 1
2025-02-24T16:33:40.7214458Z     
2025-02-24T16:33:40.7214548Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7214683Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7214856Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7214972Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7215046Z E           
2025-02-24T16:33:40.7215162Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7215420Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7215766Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7215772Z 
2025-02-24T16:33:40.7216073Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7216078Z 
2025-02-24T16:33:40.7216249Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7216253Z 
2025-02-24T16:33:40.7216485Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123bac60>
2025-02-24T16:33:40.7216688Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4df629dc0>, attr = 'nu'
2025-02-24T16:33:40.7216699Z 
2025-02-24T16:33:40.7216835Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7216952Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7217034Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7217107Z         try:
2025-02-24T16:33:40.7217353Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7217436Z         except KeyError:
2025-02-24T16:33:40.7217579Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7217646Z     
2025-02-24T16:33:40.7217734Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7217826Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7217923Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7218058Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7218141Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7218232Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7218344Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7218349Z 
2025-02-24T16:33:40.7218475Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7218586Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7218734Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7218812Z     ???
2025-02-24T16:33:40.7218920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7218925Z 
2025-02-24T16:33:40.7218996Z >   ???
2025-02-24T16:33:40.7219121Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7219313Z E   
2025-02-24T16:33:40.7219446Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7219555Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7219630Z E          ...
2025-02-24T16:33:40.7219715Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7219852Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7219963Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7220040Z E          ...
2025-02-24T16:33:40.7220130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7220255Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7220363Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7220368Z 
2025-02-24T16:33:40.7220456Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7220731Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] _
2025-02-24T16:33:40.7220741Z 
2025-02-24T16:33:40.7220875Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7221001Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7221102Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7221344Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7221469Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7221566Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7221644Z err_msg = None
2025-02-24T16:33:40.7221648Z 
2025-02-24T16:33:40.7221761Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7221841Z         if err_msg is None:
2025-02-24T16:33:40.7221939Z             if left.shape != right.shape:
2025-02-24T16:33:40.7222027Z                 raise_assert_detail(
2025-02-24T16:33:40.7222175Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7222250Z                 )
2025-02-24T16:33:40.7222318Z     
2025-02-24T16:33:40.7222392Z             diff = 0
2025-02-24T16:33:40.7222502Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7222598Z                 # count up differences
2025-02-24T16:33:40.7222766Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7222848Z                     diff += 1
2025-02-24T16:33:40.7222920Z     
2025-02-24T16:33:40.7223007Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7223147Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7223316Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7223432Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7223507Z E           
2025-02-24T16:33:40.7223622Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7223885Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7224150Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7224160Z 
2025-02-24T16:33:40.7224459Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7224463Z 
2025-02-24T16:33:40.7224722Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7224727Z 
2025-02-24T16:33:40.7224948Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123bac90>
2025-02-24T16:33:40.7225122Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4df629dc0>
2025-02-24T16:33:40.7225210Z attr = 'wavelength_cm'
2025-02-24T16:33:40.7225214Z 
2025-02-24T16:33:40.7225348Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7225466Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7225548Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7225623Z         try:
2025-02-24T16:33:40.7225759Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7225842Z         except KeyError:
2025-02-24T16:33:40.7225982Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7226050Z     
2025-02-24T16:33:40.7226138Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7226236Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7226329Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7226459Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7226547Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7226639Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7226830Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7226835Z 
2025-02-24T16:33:40.7227026Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7227227Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7227623Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7227710Z     ???
2025-02-24T16:33:40.7227821Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7227826Z 
2025-02-24T16:33:40.7227897Z >   ???
2025-02-24T16:33:40.7228021Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7228100Z E   
2025-02-24T16:33:40.7228226Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7228341Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7228416Z E          ...
2025-02-24T16:33:40.7228502Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7228641Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7228751Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7228825Z E          ...
2025-02-24T16:33:40.7228908Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7229036Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7229145Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7229150Z 
2025-02-24T16:33:40.7229239Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7229483Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] _
2025-02-24T16:33:40.7229491Z 
2025-02-24T16:33:40.7229619Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7229751Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7229854Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7229982Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7230107Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7230199Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7230278Z err_msg = None
2025-02-24T16:33:40.7230282Z 
2025-02-24T16:33:40.7230398Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7230477Z         if err_msg is None:
2025-02-24T16:33:40.7230577Z             if left.shape != right.shape:
2025-02-24T16:33:40.7230791Z                 raise_assert_detail(
2025-02-24T16:33:40.7230938Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7231008Z                 )
2025-02-24T16:33:40.7231084Z     
2025-02-24T16:33:40.7231159Z             diff = 0
2025-02-24T16:33:40.7231269Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7231364Z                 # count up differences
2025-02-24T16:33:40.7231532Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7231614Z                     diff += 1
2025-02-24T16:33:40.7231682Z     
2025-02-24T16:33:40.7231773Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7231912Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7232080Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7232194Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7232269Z E           
2025-02-24T16:33:40.7232384Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7232643Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7233039Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7233045Z 
2025-02-24T16:33:40.7233347Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7233356Z 
2025-02-24T16:33:40.7233526Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7233531Z 
2025-02-24T16:33:40.7233753Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123ba930>
2025-02-24T16:33:40.7233958Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4df629dc0>, attr = 'f_lu'
2025-02-24T16:33:40.7233969Z 
2025-02-24T16:33:40.7234104Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7234222Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7234308Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7234377Z         try:
2025-02-24T16:33:40.7234518Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7234597Z         except KeyError:
2025-02-24T16:33:40.7234737Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7234806Z     
2025-02-24T16:33:40.7234895Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7234995Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7235082Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7235216Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7235300Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7235392Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7235504Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7235514Z 
2025-02-24T16:33:40.7235636Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7235749Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7235895Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7235967Z     ???
2025-02-24T16:33:40.7236072Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7236076Z 
2025-02-24T16:33:40.7236147Z >   ???
2025-02-24T16:33:40.7236274Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7236427Z E   
2025-02-24T16:33:40.7236559Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7236668Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7236742Z E          ...
2025-02-24T16:33:40.7236828Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7236963Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7237079Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7237149Z E          ...
2025-02-24T16:33:40.7237237Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7237485Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7237598Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7237603Z 
2025-02-24T16:33:40.7237693Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7237956Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] _
2025-02-24T16:33:40.7237967Z 
2025-02-24T16:33:40.7238099Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7238226Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7238445Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7238575Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7238704Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7238799Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7238872Z err_msg = None
2025-02-24T16:33:40.7238877Z 
2025-02-24T16:33:40.7238991Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7239070Z         if err_msg is None:
2025-02-24T16:33:40.7239168Z             if left.shape != right.shape:
2025-02-24T16:33:40.7239259Z                 raise_assert_detail(
2025-02-24T16:33:40.7239402Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7239475Z                 )
2025-02-24T16:33:40.7239541Z     
2025-02-24T16:33:40.7239615Z             diff = 0
2025-02-24T16:33:40.7239726Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7239821Z                 # count up differences
2025-02-24T16:33:40.7239994Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7240069Z                     diff += 1
2025-02-24T16:33:40.7240140Z     
2025-02-24T16:33:40.7240227Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7240368Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7240537Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7240655Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7240733Z E           
2025-02-24T16:33:40.7240842Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7241103Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7241366Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7241376Z 
2025-02-24T16:33:40.7241675Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7241809Z 
2025-02-24T16:33:40.7241984Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7241990Z 
2025-02-24T16:33:40.7242221Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123bb7d0>
2025-02-24T16:33:40.7242389Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4df629dc0>
2025-02-24T16:33:40.7242476Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.7242481Z 
2025-02-24T16:33:40.7242620Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7242736Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7242818Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7242893Z         try:
2025-02-24T16:33:40.7243035Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7243113Z         except KeyError:
2025-02-24T16:33:40.7243253Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7243321Z     
2025-02-24T16:33:40.7243415Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7243508Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7243601Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7243734Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7243816Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7243992Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7244099Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7244175Z             else:
2025-02-24T16:33:40.7244268Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7244377Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7244382Z 
2025-02-24T16:33:40.7244509Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7244619Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7244769Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7244841Z     ???
2025-02-24T16:33:40.7244954Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7244959Z 
2025-02-24T16:33:40.7245032Z >   ???
2025-02-24T16:33:40.7245154Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7245226Z E   
2025-02-24T16:33:40.7245354Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7245471Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7245599Z E          ...
2025-02-24T16:33:40.7245764Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7245991Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7246153Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7246228Z E          ...
2025-02-24T16:33:40.7246312Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7246440Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7246547Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7246557Z 
2025-02-24T16:33:40.7246644Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7246916Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] _
2025-02-24T16:33:40.7246922Z 
2025-02-24T16:33:40.7247056Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7247187Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7247383Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7247516Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7247640Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7247730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7247934Z err_msg = None
2025-02-24T16:33:40.7247939Z 
2025-02-24T16:33:40.7248045Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7248130Z         if err_msg is None:
2025-02-24T16:33:40.7248227Z             if left.shape != right.shape:
2025-02-24T16:33:40.7248310Z                 raise_assert_detail(
2025-02-24T16:33:40.7248464Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7248535Z                 )
2025-02-24T16:33:40.7248608Z     
2025-02-24T16:33:40.7248679Z             diff = 0
2025-02-24T16:33:40.7248791Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7248879Z                 # count up differences
2025-02-24T16:33:40.7249047Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7249126Z                     diff += 1
2025-02-24T16:33:40.7249193Z     
2025-02-24T16:33:40.7249284Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7249423Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7249599Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7249713Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7249784Z E           
2025-02-24T16:33:40.7249895Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7250283Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7250543Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7250553Z 
2025-02-24T16:33:40.7250854Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7250859Z 
2025-02-24T16:33:40.7251024Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7251036Z 
2025-02-24T16:33:40.7251258Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123bb9b0>
2025-02-24T16:33:40.7251430Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4df629dc0>
2025-02-24T16:33:40.7251507Z attr = 'beta_sobolev'
2025-02-24T16:33:40.7251512Z 
2025-02-24T16:33:40.7251651Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7251763Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7251849Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7251923Z         try:
2025-02-24T16:33:40.7252059Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7252150Z         except KeyError:
2025-02-24T16:33:40.7252285Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7252359Z     
2025-02-24T16:33:40.7252443Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7252540Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7252635Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7252765Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7252857Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7252943Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7253057Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7253128Z             else:
2025-02-24T16:33:40.7253227Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7253335Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7253339Z 
2025-02-24T16:33:40.7253567Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7253681Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7253825Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7253899Z     ???
2025-02-24T16:33:40.7254010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7254019Z 
2025-02-24T16:33:40.7254085Z >   ???
2025-02-24T16:33:40.7254211Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7254277Z E   
2025-02-24T16:33:40.7254406Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7254514Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7254592Z E          ...
2025-02-24T16:33:40.7254685Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7254811Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7254925Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7255003Z E          ...
2025-02-24T16:33:40.7255092Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7255216Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7255327Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7255413Z 
2025-02-24T16:33:40.7255508Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7255758Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] _
2025-02-24T16:33:40.7255764Z 
2025-02-24T16:33:40.7255895Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7256019Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7256117Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7256253Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7256380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7256475Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7256547Z err_msg = None
2025-02-24T16:33:40.7256551Z 
2025-02-24T16:33:40.7256662Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7256752Z         if err_msg is None:
2025-02-24T16:33:40.7256845Z             if left.shape != right.shape:
2025-02-24T16:33:40.7256932Z                 raise_assert_detail(
2025-02-24T16:33:40.7257076Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7257150Z                 )
2025-02-24T16:33:40.7257216Z     
2025-02-24T16:33:40.7257385Z             diff = 0
2025-02-24T16:33:40.7257500Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7257586Z                 # count up differences
2025-02-24T16:33:40.7257757Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7257837Z                     diff += 1
2025-02-24T16:33:40.7257909Z     
2025-02-24T16:33:40.7257998Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7258139Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7258317Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7258426Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7258500Z E           
2025-02-24T16:33:40.7258608Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7258866Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7259250Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7259259Z 
2025-02-24T16:33:40.7259555Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7259565Z 
2025-02-24T16:33:40.7259729Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7259733Z 
2025-02-24T16:33:40.7259960Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123baff0>
2025-02-24T16:33:40.7260128Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4df629dc0>
2025-02-24T16:33:40.7260208Z attr = 'j_blues'
2025-02-24T16:33:40.7260212Z 
2025-02-24T16:33:40.7260347Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7260469Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7260555Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7260624Z         try:
2025-02-24T16:33:40.7260765Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7260843Z         except KeyError:
2025-02-24T16:33:40.7261091Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7261158Z     
2025-02-24T16:33:40.7261248Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7261345Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7261432Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7261568Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7261651Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7261743Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7261849Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7261930Z             else:
2025-02-24T16:33:40.7262028Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7262135Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7262140Z 
2025-02-24T16:33:40.7262266Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7262379Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7262531Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7262605Z     ???
2025-02-24T16:33:40.7262710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7262715Z 
2025-02-24T16:33:40.7262785Z >   ???
2025-02-24T16:33:40.7262907Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7262979Z E   
2025-02-24T16:33:40.7263105Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7263220Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7263302Z E          ...
2025-02-24T16:33:40.7263387Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7263518Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7263628Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7263703Z E          ...
2025-02-24T16:33:40.7263790Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7263918Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7264023Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7264028Z 
2025-02-24T16:33:40.7264114Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7264431Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines] ____
2025-02-24T16:33:40.7264442Z 
2025-02-24T16:33:40.7264665Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7264870Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7265070Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7265206Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7265330Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7265426Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7265507Z err_msg = None
2025-02-24T16:33:40.7265511Z 
2025-02-24T16:33:40.7265622Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7265702Z         if err_msg is None:
2025-02-24T16:33:40.7265798Z             if left.shape != right.shape:
2025-02-24T16:33:40.7265881Z                 raise_assert_detail(
2025-02-24T16:33:40.7266026Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7266099Z                 )
2025-02-24T16:33:40.7266165Z     
2025-02-24T16:33:40.7266245Z             diff = 0
2025-02-24T16:33:40.7266354Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7266446Z                 # count up differences
2025-02-24T16:33:40.7266619Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7266702Z                     diff += 1
2025-02-24T16:33:40.7266857Z     
2025-02-24T16:33:40.7266944Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7267084Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7267372Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7267493Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7267564Z E           
2025-02-24T16:33:40.7267677Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7267936Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7268196Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7268207Z 
2025-02-24T16:33:40.7268517Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7268522Z 
2025-02-24T16:33:40.7268696Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7268701Z 
2025-02-24T16:33:40.7268924Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512260620>
2025-02-24T16:33:40.7269098Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de92c350>
2025-02-24T16:33:40.7269170Z attr = 'lines'
2025-02-24T16:33:40.7269179Z 
2025-02-24T16:33:40.7269314Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7269434Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7269522Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7269597Z         try:
2025-02-24T16:33:40.7269738Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7269824Z         except KeyError:
2025-02-24T16:33:40.7269967Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7270038Z     
2025-02-24T16:33:40.7270128Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7270220Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7270313Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7270443Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7270655Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7270748Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7270855Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7270929Z             else:
2025-02-24T16:33:40.7271022Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7271138Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7271142Z 
2025-02-24T16:33:40.7271265Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7271379Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7271529Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7271598Z     ???
2025-02-24T16:33:40.7271708Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7271713Z 
2025-02-24T16:33:40.7271778Z >   ???
2025-02-24T16:33:40.7271911Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7271986Z E   
2025-02-24T16:33:40.7272111Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7272225Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7272295Z E          ...
2025-02-24T16:33:40.7272384Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7272626Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7272742Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7272819Z E          ...
2025-02-24T16:33:40.7272902Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7273030Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7273132Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7273136Z 
2025-02-24T16:33:40.7273228Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7273481Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] _
2025-02-24T16:33:40.7273496Z 
2025-02-24T16:33:40.7273719Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5122606e0>
2025-02-24T16:33:40.7273890Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de92c350>
2025-02-24T16:33:40.7273978Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.7273983Z 
2025-02-24T16:33:40.7274126Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7274237Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7274324Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7274400Z         try:
2025-02-24T16:33:40.7274538Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7274622Z         except KeyError:
2025-02-24T16:33:40.7274756Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7274828Z     
2025-02-24T16:33:40.7274913Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7275009Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7275106Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7275236Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7275324Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7275413Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7275523Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7275532Z 
2025-02-24T16:33:40.7275660Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7275767Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7275772Z 
2025-02-24T16:33:40.7275913Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7275998Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7276112Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7276191Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7276438Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7276525Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7276627Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7276712Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7276790Z err_msg = None
2025-02-24T16:33:40.7276793Z 
2025-02-24T16:33:40.7276904Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7276987Z         if err_msg is None:
2025-02-24T16:33:40.7277080Z             if left.shape != right.shape:
2025-02-24T16:33:40.7277168Z                 raise_assert_detail(
2025-02-24T16:33:40.7277431Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7277508Z                 )
2025-02-24T16:33:40.7277574Z     
2025-02-24T16:33:40.7277650Z             diff = 0
2025-02-24T16:33:40.7277764Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7277858Z                 # count up differences
2025-02-24T16:33:40.7278032Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7278108Z                     diff += 1
2025-02-24T16:33:40.7278180Z     
2025-02-24T16:33:40.7278264Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7278530Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7278705Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7278808Z E           AssertionError: Series are different
2025-02-24T16:33:40.7278882Z E           
2025-02-24T16:33:40.7278981Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.7279353Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7279690Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7280025Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7280037Z 
2025-02-24T16:33:40.7280341Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7280597Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] _
2025-02-24T16:33:40.7280602Z 
2025-02-24T16:33:40.7280824Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512260c20>
2025-02-24T16:33:40.7281000Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de92c350>
2025-02-24T16:33:40.7281097Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.7281102Z 
2025-02-24T16:33:40.7281239Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7281355Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7281437Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7281513Z         try:
2025-02-24T16:33:40.7281687Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7281842Z         except KeyError:
2025-02-24T16:33:40.7282284Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7282355Z     
2025-02-24T16:33:40.7282447Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7282539Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7282632Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7282763Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7282859Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7282951Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7283058Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7283062Z 
2025-02-24T16:33:40.7283189Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7283301Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7283306Z 
2025-02-24T16:33:40.7283446Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7283538Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7283646Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7283729Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7283868Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7284044Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7284153Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7284230Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7284309Z err_msg = None
2025-02-24T16:33:40.7284313Z 
2025-02-24T16:33:40.7284420Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7284504Z         if err_msg is None:
2025-02-24T16:33:40.7284597Z             if left.shape != right.shape:
2025-02-24T16:33:40.7284685Z                 raise_assert_detail(
2025-02-24T16:33:40.7284831Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7284905Z                 )
2025-02-24T16:33:40.7284978Z     
2025-02-24T16:33:40.7285049Z             diff = 0
2025-02-24T16:33:40.7285166Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7285254Z                 # count up differences
2025-02-24T16:33:40.7285432Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7285519Z                     diff += 1
2025-02-24T16:33:40.7285586Z     
2025-02-24T16:33:40.7285676Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7285809Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7285982Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7286084Z E           AssertionError: Series are different
2025-02-24T16:33:40.7286158Z E           
2025-02-24T16:33:40.7286262Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.7286636Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7287024Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7287506Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7287630Z 
2025-02-24T16:33:40.7287948Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7288147Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-nu] ______
2025-02-24T16:33:40.7288152Z 
2025-02-24T16:33:40.7288281Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7288406Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7288505Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7288638Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7288762Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7288854Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7288927Z err_msg = None
2025-02-24T16:33:40.7288932Z 
2025-02-24T16:33:40.7289149Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7289229Z         if err_msg is None:
2025-02-24T16:33:40.7289326Z             if left.shape != right.shape:
2025-02-24T16:33:40.7289413Z                 raise_assert_detail(
2025-02-24T16:33:40.7289552Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7289626Z                 )
2025-02-24T16:33:40.7289692Z     
2025-02-24T16:33:40.7289767Z             diff = 0
2025-02-24T16:33:40.7289875Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7289966Z                 # count up differences
2025-02-24T16:33:40.7290142Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7290216Z                     diff += 1
2025-02-24T16:33:40.7290288Z     
2025-02-24T16:33:40.7290372Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7290509Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7290679Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7290794Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7290871Z E           
2025-02-24T16:33:40.7290981Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7291242Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7291510Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7291519Z 
2025-02-24T16:33:40.7291814Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7291818Z 
2025-02-24T16:33:40.7291992Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7291997Z 
2025-02-24T16:33:40.7292224Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512262240>
2025-02-24T16:33:40.7292425Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de92c350>, attr = 'nu'
2025-02-24T16:33:40.7292430Z 
2025-02-24T16:33:40.7292568Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7292767Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7292855Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7292925Z         try:
2025-02-24T16:33:40.7293068Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7293152Z         except KeyError:
2025-02-24T16:33:40.7293290Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7293362Z     
2025-02-24T16:33:40.7293447Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7293544Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7293631Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7293766Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7293854Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7293942Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7294054Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7294063Z 
2025-02-24T16:33:40.7294186Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7294302Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7294452Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7294521Z     ???
2025-02-24T16:33:40.7294634Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7294738Z 
2025-02-24T16:33:40.7294807Z >   ???
2025-02-24T16:33:40.7294938Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7295006Z E   
2025-02-24T16:33:40.7295136Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7295251Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7295321Z E          ...
2025-02-24T16:33:40.7295411Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7295541Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7295662Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7295735Z E          ...
2025-02-24T16:33:40.7295818Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7295945Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7296052Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7296060Z 
2025-02-24T16:33:40.7296156Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7296377Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] _
2025-02-24T16:33:40.7296382Z 
2025-02-24T16:33:40.7296516Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7296646Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7296742Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7296875Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7297003Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7297099Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7297177Z err_msg = None
2025-02-24T16:33:40.7297182Z 
2025-02-24T16:33:40.7297389Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7297481Z         if err_msg is None:
2025-02-24T16:33:40.7297574Z             if left.shape != right.shape:
2025-02-24T16:33:40.7297661Z                 raise_assert_detail(
2025-02-24T16:33:40.7297802Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7297877Z                 )
2025-02-24T16:33:40.7297949Z     
2025-02-24T16:33:40.7298020Z             diff = 0
2025-02-24T16:33:40.7298134Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7298221Z                 # count up differences
2025-02-24T16:33:40.7298393Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7298615Z                     diff += 1
2025-02-24T16:33:40.7298682Z     
2025-02-24T16:33:40.7298773Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7298909Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7299086Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7299198Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7299273Z E           
2025-02-24T16:33:40.7299387Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7299675Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7299945Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7300057Z 
2025-02-24T16:33:40.7300549Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7300564Z 
2025-02-24T16:33:40.7300830Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7300836Z 
2025-02-24T16:33:40.7301067Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512262330>
2025-02-24T16:33:40.7301237Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de92c350>
2025-02-24T16:33:40.7301322Z attr = 'wavelength_cm'
2025-02-24T16:33:40.7301327Z 
2025-02-24T16:33:40.7301470Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7301590Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7301676Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7301746Z         try:
2025-02-24T16:33:40.7301889Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7301974Z         except KeyError:
2025-02-24T16:33:40.7302114Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7302187Z     
2025-02-24T16:33:40.7302271Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7302368Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7302456Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7302591Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7302679Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7302767Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7302880Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7302887Z 
2025-02-24T16:33:40.7303011Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7303128Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7303271Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7303345Z     ???
2025-02-24T16:33:40.7303462Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7303466Z 
2025-02-24T16:33:40.7303533Z >   ???
2025-02-24T16:33:40.7303662Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7303728Z E   
2025-02-24T16:33:40.7303859Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7303969Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7304045Z E          ...
2025-02-24T16:33:40.7304136Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7304264Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7304496Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7304566Z E          ...
2025-02-24T16:33:40.7304657Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7304783Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7304890Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7304895Z 
2025-02-24T16:33:40.7304986Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7305186Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-f_lu] _____
2025-02-24T16:33:40.7305190Z 
2025-02-24T16:33:40.7305321Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7305452Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7305548Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7305682Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7305811Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7305907Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7305980Z err_msg = None
2025-02-24T16:33:40.7305990Z 
2025-02-24T16:33:40.7306180Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7306265Z         if err_msg is None:
2025-02-24T16:33:40.7306359Z             if left.shape != right.shape:
2025-02-24T16:33:40.7306449Z                 raise_assert_detail(
2025-02-24T16:33:40.7306589Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7306665Z                 )
2025-02-24T16:33:40.7306736Z     
2025-02-24T16:33:40.7306806Z             diff = 0
2025-02-24T16:33:40.7306919Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7307005Z                 # count up differences
2025-02-24T16:33:40.7307181Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7307356Z                     diff += 1
2025-02-24T16:33:40.7307433Z     
2025-02-24T16:33:40.7307520Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7307657Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7307841Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7307951Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7308026Z E           
2025-02-24T16:33:40.7308136Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7308398Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7308666Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7308676Z 
2025-02-24T16:33:40.7308976Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7308986Z 
2025-02-24T16:33:40.7309152Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7309156Z 
2025-02-24T16:33:40.7309383Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5122623f0>
2025-02-24T16:33:40.7309585Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de92c350>, attr = 'f_lu'
2025-02-24T16:33:40.7309590Z 
2025-02-24T16:33:40.7309727Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7309966Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7310049Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7310122Z         try:
2025-02-24T16:33:40.7310259Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7310343Z         except KeyError:
2025-02-24T16:33:40.7310482Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7310557Z     
2025-02-24T16:33:40.7310647Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7310739Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7310830Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7310961Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7311050Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7311137Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7311248Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7311257Z 
2025-02-24T16:33:40.7311384Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7311493Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7311642Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7311711Z     ???
2025-02-24T16:33:40.7311935Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7311940Z 
2025-02-24T16:33:40.7312010Z >   ???
2025-02-24T16:33:40.7312133Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7312204Z E   
2025-02-24T16:33:40.7312329Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7312441Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7312511Z E          ...
2025-02-24T16:33:40.7312604Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7312737Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7312851Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7312925Z E          ...
2025-02-24T16:33:40.7313008Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7313135Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7313458Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7313474Z 
2025-02-24T16:33:40.7313561Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7313782Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] _
2025-02-24T16:33:40.7313787Z 
2025-02-24T16:33:40.7313912Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7314051Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7314146Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7314284Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7314416Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7314508Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7314589Z err_msg = None
2025-02-24T16:33:40.7314593Z 
2025-02-24T16:33:40.7314705Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7314794Z         if err_msg is None:
2025-02-24T16:33:40.7314895Z             if left.shape != right.shape:
2025-02-24T16:33:40.7314982Z                 raise_assert_detail(
2025-02-24T16:33:40.7315130Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7315202Z                 )
2025-02-24T16:33:40.7315277Z     
2025-02-24T16:33:40.7315348Z             diff = 0
2025-02-24T16:33:40.7315462Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7315553Z                 # count up differences
2025-02-24T16:33:40.7315811Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7315892Z                     diff += 1
2025-02-24T16:33:40.7315959Z     
2025-02-24T16:33:40.7316051Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7316190Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7316367Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7316482Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7316551Z E           
2025-02-24T16:33:40.7316664Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7316919Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7317189Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7317440Z 
2025-02-24T16:33:40.7317761Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7317766Z 
2025-02-24T16:33:40.7317935Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7317945Z 
2025-02-24T16:33:40.7318166Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512262bd0>
2025-02-24T16:33:40.7318341Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de92c350>
2025-02-24T16:33:40.7318419Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.7318423Z 
2025-02-24T16:33:40.7318645Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7318852Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7318997Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7319121Z         try:
2025-02-24T16:33:40.7319354Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7319451Z         except KeyError:
2025-02-24T16:33:40.7319592Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7319667Z     
2025-02-24T16:33:40.7319753Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7319851Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7319945Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7320076Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7320166Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7320255Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7320371Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7320447Z             else:
2025-02-24T16:33:40.7320547Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7320658Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7320663Z 
2025-02-24T16:33:40.7320788Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7320909Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7321053Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7321128Z     ???
2025-02-24T16:33:40.7321243Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7321248Z 
2025-02-24T16:33:40.7321317Z >   ???
2025-02-24T16:33:40.7321447Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7321516Z E   
2025-02-24T16:33:40.7321647Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7321759Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7321965Z E          ...
2025-02-24T16:33:40.7322059Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7322186Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7322305Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7322379Z E          ...
2025-02-24T16:33:40.7322472Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7322595Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7322705Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7322709Z 
2025-02-24T16:33:40.7333395Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7333681Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] _
2025-02-24T16:33:40.7333688Z 
2025-02-24T16:33:40.7333828Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7333964Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7334081Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7334221Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7334346Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7334622Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7334701Z err_msg = None
2025-02-24T16:33:40.7334706Z 
2025-02-24T16:33:40.7334832Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7334922Z         if err_msg is None:
2025-02-24T16:33:40.7335021Z             if left.shape != right.shape:
2025-02-24T16:33:40.7335110Z                 raise_assert_detail(
2025-02-24T16:33:40.7335267Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7335343Z                 )
2025-02-24T16:33:40.7335417Z     
2025-02-24T16:33:40.7335495Z             diff = 0
2025-02-24T16:33:40.7335612Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7335709Z                 # count up differences
2025-02-24T16:33:40.7335893Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7335977Z                     diff += 1
2025-02-24T16:33:40.7336051Z     
2025-02-24T16:33:40.7336141Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7336292Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7336472Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7336590Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7336671Z E           
2025-02-24T16:33:40.7336789Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7337059Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7337463Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7337475Z 
2025-02-24T16:33:40.7337801Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7337806Z 
2025-02-24T16:33:40.7337986Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7337991Z 
2025-02-24T16:33:40.7338223Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512262c90>
2025-02-24T16:33:40.7338521Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de92c350>
2025-02-24T16:33:40.7338614Z attr = 'beta_sobolev'
2025-02-24T16:33:40.7338619Z 
2025-02-24T16:33:40.7338759Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7338884Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7338980Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7339052Z         try:
2025-02-24T16:33:40.7339200Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7339281Z         except KeyError:
2025-02-24T16:33:40.7339420Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7339491Z     
2025-02-24T16:33:40.7339586Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7339685Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7339776Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7339914Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7340006Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7340102Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7340219Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7340297Z             else:
2025-02-24T16:33:40.7340398Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7340625Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7340630Z 
2025-02-24T16:33:40.7340764Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7340882Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7341035Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7341110Z     ???
2025-02-24T16:33:40.7341224Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7341229Z 
2025-02-24T16:33:40.7341301Z >   ???
2025-02-24T16:33:40.7341430Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7341508Z E   
2025-02-24T16:33:40.7341641Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7341763Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7341838Z E          ...
2025-02-24T16:33:40.7341930Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7342072Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7342185Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7342263Z E          ...
2025-02-24T16:33:40.7342347Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7342475Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7342587Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7342591Z 
2025-02-24T16:33:40.7342680Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7342900Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-j_blues] ___
2025-02-24T16:33:40.7342908Z 
2025-02-24T16:33:40.7343038Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7343180Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7343285Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7343422Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7343640Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7343812Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7343952Z err_msg = None
2025-02-24T16:33:40.7343959Z 
2025-02-24T16:33:40.7344161Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7344263Z         if err_msg is None:
2025-02-24T16:33:40.7344366Z             if left.shape != right.shape:
2025-02-24T16:33:40.7344548Z                 raise_assert_detail(
2025-02-24T16:33:40.7344703Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7344772Z                 )
2025-02-24T16:33:40.7344844Z     
2025-02-24T16:33:40.7344920Z             diff = 0
2025-02-24T16:33:40.7345030Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7345127Z                 # count up differences
2025-02-24T16:33:40.7345298Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7345381Z                     diff += 1
2025-02-24T16:33:40.7345450Z     
2025-02-24T16:33:40.7345541Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7345684Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7345856Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7345974Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7346054Z E           
2025-02-24T16:33:40.7346170Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7346433Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7346784Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7346791Z 
2025-02-24T16:33:40.7347103Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7347114Z 
2025-02-24T16:33:40.7347433Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7347442Z 
2025-02-24T16:33:40.7347671Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512262e10>
2025-02-24T16:33:40.7347843Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de92c350>
2025-02-24T16:33:40.7347925Z attr = 'j_blues'
2025-02-24T16:33:40.7347930Z 
2025-02-24T16:33:40.7348073Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7348194Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7348278Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7348353Z         try:
2025-02-24T16:33:40.7348497Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7348583Z         except KeyError:
2025-02-24T16:33:40.7348727Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7348800Z     
2025-02-24T16:33:40.7348892Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7348991Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7349084Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7349215Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7349304Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7349397Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7349508Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7349583Z             else:
2025-02-24T16:33:40.7349679Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7349790Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7349794Z 
2025-02-24T16:33:40.7349919Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7350042Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7350193Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7350408Z     ???
2025-02-24T16:33:40.7350523Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7350527Z 
2025-02-24T16:33:40.7350597Z >   ???
2025-02-24T16:33:40.7350728Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7350796Z E   
2025-02-24T16:33:40.7350927Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7351047Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7351118Z E          ...
2025-02-24T16:33:40.7351209Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7351341Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7351457Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7351528Z E          ...
2025-02-24T16:33:40.7351619Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7351749Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7351859Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7351864Z 
2025-02-24T16:33:40.7351957Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7352172Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines] ____
2025-02-24T16:33:40.7352177Z 
2025-02-24T16:33:40.7352315Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7352564Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7352662Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7352796Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7352918Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7353014Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7353093Z err_msg = None
2025-02-24T16:33:40.7353102Z 
2025-02-24T16:33:40.7353212Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7353298Z         if err_msg is None:
2025-02-24T16:33:40.7353393Z             if left.shape != right.shape:
2025-02-24T16:33:40.7353483Z                 raise_assert_detail(
2025-02-24T16:33:40.7353628Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7353709Z                 )
2025-02-24T16:33:40.7353783Z     
2025-02-24T16:33:40.7353854Z             diff = 0
2025-02-24T16:33:40.7353969Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7354056Z                 # count up differences
2025-02-24T16:33:40.7354230Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7354308Z                     diff += 1
2025-02-24T16:33:40.7354380Z     
2025-02-24T16:33:40.7354472Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7354608Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7354786Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7354899Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7354975Z E           
2025-02-24T16:33:40.7355086Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7355355Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7355619Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7355709Z 
2025-02-24T16:33:40.7356022Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7356027Z 
2025-02-24T16:33:40.7356195Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7356204Z 
2025-02-24T16:33:40.7356433Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512263c20>
2025-02-24T16:33:40.7356601Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4fb4c95e0>
2025-02-24T16:33:40.7356679Z attr = 'lines'
2025-02-24T16:33:40.7356683Z 
2025-02-24T16:33:40.7356823Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7356939Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7357028Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7357098Z         try:
2025-02-24T16:33:40.7357239Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7357441Z         except KeyError:
2025-02-24T16:33:40.7357581Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7357655Z     
2025-02-24T16:33:40.7357741Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7357838Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7358043Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7358177Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7358263Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7358356Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7358467Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7358538Z             else:
2025-02-24T16:33:40.7358636Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7358740Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7358748Z 
2025-02-24T16:33:40.7358881Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7359004Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7359151Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7359226Z     ???
2025-02-24T16:33:40.7359332Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7359342Z 
2025-02-24T16:33:40.7359414Z >   ???
2025-02-24T16:33:40.7359541Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7359615Z E   
2025-02-24T16:33:40.7359743Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7359853Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7359928Z E          ...
2025-02-24T16:33:40.7360014Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7360147Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7360258Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7360338Z E          ...
2025-02-24T16:33:40.7360431Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7360560Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7360671Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7360676Z 
2025-02-24T16:33:40.7360764Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7361033Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] _
2025-02-24T16:33:40.7361038Z 
2025-02-24T16:33:40.7361266Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512263ce0>
2025-02-24T16:33:40.7361432Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4fb4c95e0>
2025-02-24T16:33:40.7361524Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.7361529Z 
2025-02-24T16:33:40.7361677Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7361896Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7362223Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7362315Z         try:
2025-02-24T16:33:40.7362466Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7362547Z         except KeyError:
2025-02-24T16:33:40.7362691Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7362762Z     
2025-02-24T16:33:40.7362853Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7362950Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7363039Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7363175Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7363260Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7363353Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7363465Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7363469Z 
2025-02-24T16:33:40.7363600Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7363724Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7363729Z 
2025-02-24T16:33:40.7363866Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7363955Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7364065Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7364239Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7364383Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7364465Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7364574Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7364653Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7364731Z err_msg = None
2025-02-24T16:33:40.7364736Z 
2025-02-24T16:33:40.7364844Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7364934Z         if err_msg is None:
2025-02-24T16:33:40.7365033Z             if left.shape != right.shape:
2025-02-24T16:33:40.7365116Z                 raise_assert_detail(
2025-02-24T16:33:40.7365267Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7365337Z                 )
2025-02-24T16:33:40.7365409Z     
2025-02-24T16:33:40.7365479Z             diff = 0
2025-02-24T16:33:40.7365598Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7365697Z                 # count up differences
2025-02-24T16:33:40.7365875Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7365951Z                     diff += 1
2025-02-24T16:33:40.7366022Z     
2025-02-24T16:33:40.7366109Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7366249Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7366420Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7366532Z E           AssertionError: Series are different
2025-02-24T16:33:40.7366606Z E           
2025-02-24T16:33:40.7366707Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.7367083Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7367535Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7367988Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7368000Z 
2025-02-24T16:33:40.7368316Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7368574Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] _
2025-02-24T16:33:40.7368579Z 
2025-02-24T16:33:40.7368802Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512263da0>
2025-02-24T16:33:40.7368973Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4fb4c95e0>
2025-02-24T16:33:40.7369070Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.7369079Z 
2025-02-24T16:33:40.7369215Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7369331Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7369414Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7369487Z         try:
2025-02-24T16:33:40.7369738Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7369822Z         except KeyError:
2025-02-24T16:33:40.7369963Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7370030Z     
2025-02-24T16:33:40.7370119Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7370214Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7370303Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7370432Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7370520Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7370611Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7370724Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7370728Z 
2025-02-24T16:33:40.7370856Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7370969Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7370978Z 
2025-02-24T16:33:40.7371113Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7371198Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7371302Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7371386Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7371524Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7371609Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7371713Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7371798Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7371876Z err_msg = None
2025-02-24T16:33:40.7371880Z 
2025-02-24T16:33:40.7371985Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7372067Z         if err_msg is None:
2025-02-24T16:33:40.7372159Z             if left.shape != right.shape:
2025-02-24T16:33:40.7372255Z                 raise_assert_detail(
2025-02-24T16:33:40.7372396Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7372470Z                 )
2025-02-24T16:33:40.7372541Z     
2025-02-24T16:33:40.7372612Z             diff = 0
2025-02-24T16:33:40.7372727Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7372814Z                 # count up differences
2025-02-24T16:33:40.7372987Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7373061Z                     diff += 1
2025-02-24T16:33:40.7373133Z     
2025-02-24T16:33:40.7373351Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7373485Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7373656Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7373757Z E           AssertionError: Series are different
2025-02-24T16:33:40.7373835Z E           
2025-02-24T16:33:40.7373941Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.7374310Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7374687Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7375145Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7375151Z 
2025-02-24T16:33:40.7375455Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7375659Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-nu] _____
2025-02-24T16:33:40.7375668Z 
2025-02-24T16:33:40.7375800Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7375927Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7376034Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7376169Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7376296Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7376394Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7376468Z err_msg = None
2025-02-24T16:33:40.7376472Z 
2025-02-24T16:33:40.7376583Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7376662Z         if err_msg is None:
2025-02-24T16:33:40.7376761Z             if left.shape != right.shape:
2025-02-24T16:33:40.7376855Z                 raise_assert_detail(
2025-02-24T16:33:40.7376997Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7377075Z                 )
2025-02-24T16:33:40.7377143Z     
2025-02-24T16:33:40.7377220Z             diff = 0
2025-02-24T16:33:40.7377434Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7377530Z                 # count up differences
2025-02-24T16:33:40.7377705Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7377782Z                     diff += 1
2025-02-24T16:33:40.7377857Z     
2025-02-24T16:33:40.7377944Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7378084Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7378253Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7378374Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7378581Z E           
2025-02-24T16:33:40.7378693Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7378958Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7379224Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7379236Z 
2025-02-24T16:33:40.7379539Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7379548Z 
2025-02-24T16:33:40.7379728Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7379733Z 
2025-02-24T16:33:40.7379956Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512263fe0>
2025-02-24T16:33:40.7380192Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4fb4c95e0>, attr = 'nu'
2025-02-24T16:33:40.7380366Z 
2025-02-24T16:33:40.7380634Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7380814Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7380908Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7380980Z         try:
2025-02-24T16:33:40.7381132Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7381218Z         except KeyError:
2025-02-24T16:33:40.7381361Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7381433Z     
2025-02-24T16:33:40.7381518Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7381622Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7381711Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7381853Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7381944Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7382037Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7382153Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7382157Z 
2025-02-24T16:33:40.7382286Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7382405Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7382554Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7382629Z     ???
2025-02-24T16:33:40.7382741Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7382745Z 
2025-02-24T16:33:40.7382816Z >   ???
2025-02-24T16:33:40.7382952Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7383021Z E   
2025-02-24T16:33:40.7383156Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7383275Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7383347Z E          ...
2025-02-24T16:33:40.7383440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7383576Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7383697Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7383769Z E          ...
2025-02-24T16:33:40.7383860Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7383994Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7384100Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7384104Z 
2025-02-24T16:33:40.7384198Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7384426Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] _
2025-02-24T16:33:40.7384518Z 
2025-02-24T16:33:40.7384654Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7384786Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7384886Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7385021Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7385143Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7385240Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7385319Z err_msg = None
2025-02-24T16:33:40.7385323Z 
2025-02-24T16:33:40.7385434Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7385521Z         if err_msg is None:
2025-02-24T16:33:40.7385617Z             if left.shape != right.shape:
2025-02-24T16:33:40.7385712Z                 raise_assert_detail(
2025-02-24T16:33:40.7385855Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7385932Z                 )
2025-02-24T16:33:40.7386006Z     
2025-02-24T16:33:40.7386078Z             diff = 0
2025-02-24T16:33:40.7386194Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7386364Z                 # count up differences
2025-02-24T16:33:40.7386538Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7386615Z                     diff += 1
2025-02-24T16:33:40.7386688Z     
2025-02-24T16:33:40.7386781Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7386918Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7387090Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7387204Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7387390Z E           
2025-02-24T16:33:40.7387504Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7387771Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7388046Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7388051Z 
2025-02-24T16:33:40.7388355Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7388371Z 
2025-02-24T16:33:40.7388539Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7388544Z 
2025-02-24T16:33:40.7388778Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123ee390>
2025-02-24T16:33:40.7388946Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4fb4c95e0>
2025-02-24T16:33:40.7389039Z attr = 'wavelength_cm'
2025-02-24T16:33:40.7389044Z 
2025-02-24T16:33:40.7389187Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7389301Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7389392Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7389463Z         try:
2025-02-24T16:33:40.7389609Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7389691Z         except KeyError:
2025-02-24T16:33:40.7389835Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7389910Z     
2025-02-24T16:33:40.7390116Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7390216Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7390305Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7390444Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7390528Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7390628Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7390743Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7390748Z 
2025-02-24T16:33:40.7390875Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7390990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7391135Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7391211Z     ???
2025-02-24T16:33:40.7391319Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7391330Z 
2025-02-24T16:33:40.7391401Z >   ???
2025-02-24T16:33:40.7391532Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7391602Z E   
2025-02-24T16:33:40.7391734Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7391844Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7391920Z E          ...
2025-02-24T16:33:40.7392139Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7392271Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7392392Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7392461Z E          ...
2025-02-24T16:33:40.7392550Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7392674Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7392786Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7392790Z 
2025-02-24T16:33:40.7392886Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7393097Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-f_lu] ____
2025-02-24T16:33:40.7393101Z 
2025-02-24T16:33:40.7393233Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7393362Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7393470Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7393610Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7393732Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7393828Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7393904Z err_msg = None
2025-02-24T16:33:40.7393908Z 
2025-02-24T16:33:40.7394024Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7394109Z         if err_msg is None:
2025-02-24T16:33:40.7394203Z             if left.shape != right.shape:
2025-02-24T16:33:40.7394296Z                 raise_assert_detail(
2025-02-24T16:33:40.7394438Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7394514Z                 )
2025-02-24T16:33:40.7394582Z     
2025-02-24T16:33:40.7394659Z             diff = 0
2025-02-24T16:33:40.7394779Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7394868Z                 # count up differences
2025-02-24T16:33:40.7395042Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7395120Z                     diff += 1
2025-02-24T16:33:40.7395194Z     
2025-02-24T16:33:40.7395283Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7395427Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7395601Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7395716Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7395879Z E           
2025-02-24T16:33:40.7395988Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7396255Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7396522Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7396527Z 
2025-02-24T16:33:40.7396830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7396840Z 
2025-02-24T16:33:40.7397015Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7397020Z 
2025-02-24T16:33:40.7397357Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123efda0>
2025-02-24T16:33:40.7397564Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4fb4c95e0>, attr = 'f_lu'
2025-02-24T16:33:40.7397713Z 
2025-02-24T16:33:40.7397856Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7397971Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7398060Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7398137Z         try:
2025-02-24T16:33:40.7398277Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7398364Z         except KeyError:
2025-02-24T16:33:40.7398500Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7398575Z     
2025-02-24T16:33:40.7398707Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7398883Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7399046Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7399262Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7399358Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7399456Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7399601Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7399605Z 
2025-02-24T16:33:40.7399730Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7399846Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7399995Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7400068Z     ???
2025-02-24T16:33:40.7400183Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7400187Z 
2025-02-24T16:33:40.7400254Z >   ???
2025-02-24T16:33:40.7400394Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7400469Z E   
2025-02-24T16:33:40.7400594Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7400710Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7400779Z E          ...
2025-02-24T16:33:40.7400873Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7400999Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7401117Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7401193Z E          ...
2025-02-24T16:33:40.7401276Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7401403Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7401507Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7401511Z 
2025-02-24T16:33:40.7401605Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7401824Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] _
2025-02-24T16:33:40.7401965Z 
2025-02-24T16:33:40.7402096Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7402224Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7402325Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7402461Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7402583Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7402680Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7402759Z err_msg = None
2025-02-24T16:33:40.7402763Z 
2025-02-24T16:33:40.7402871Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7402957Z         if err_msg is None:
2025-02-24T16:33:40.7403050Z             if left.shape != right.shape:
2025-02-24T16:33:40.7403142Z                 raise_assert_detail(
2025-02-24T16:33:40.7403289Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7403361Z                 )
2025-02-24T16:33:40.7403433Z     
2025-02-24T16:33:40.7403504Z             diff = 0
2025-02-24T16:33:40.7403700Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7403787Z                 # count up differences
2025-02-24T16:33:40.7403960Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7404041Z                     diff += 1
2025-02-24T16:33:40.7404109Z     
2025-02-24T16:33:40.7404202Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7404338Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7404513Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7404621Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7404702Z E           
2025-02-24T16:33:40.7404815Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7405074Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7405342Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7405347Z 
2025-02-24T16:33:40.7405652Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7405661Z 
2025-02-24T16:33:40.7405828Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7405832Z 
2025-02-24T16:33:40.7406061Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123ee990>
2025-02-24T16:33:40.7406232Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4fb4c95e0>
2025-02-24T16:33:40.7406317Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.7406322Z 
2025-02-24T16:33:40.7406462Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7406576Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7406666Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7406735Z         try:
2025-02-24T16:33:40.7406880Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7406967Z         except KeyError:
2025-02-24T16:33:40.7407107Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7407180Z     
2025-02-24T16:33:40.7407465Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7407564Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7407657Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7407793Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7407884Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7407978Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7408094Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7408166Z             else:
2025-02-24T16:33:40.7408265Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7408372Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7408382Z 
2025-02-24T16:33:40.7408511Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7408626Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7408769Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7408849Z     ???
2025-02-24T16:33:40.7408955Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7408959Z 
2025-02-24T16:33:40.7409034Z >   ???
2025-02-24T16:33:40.7409161Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7409230Z E   
2025-02-24T16:33:40.7409479Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7409589Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7409663Z E          ...
2025-02-24T16:33:40.7409749Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7409881Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7409998Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7410067Z E          ...
2025-02-24T16:33:40.7410154Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7410277Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7410392Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7410397Z 
2025-02-24T16:33:40.7410484Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7410706Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] _
2025-02-24T16:33:40.7410711Z 
2025-02-24T16:33:40.7410846Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7410972Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7411073Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7411204Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7411329Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7411426Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7411504Z err_msg = None
2025-02-24T16:33:40.7411508Z 
2025-02-24T16:33:40.7411622Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7411702Z         if err_msg is None:
2025-02-24T16:33:40.7411801Z             if left.shape != right.shape:
2025-02-24T16:33:40.7411890Z                 raise_assert_detail(
2025-02-24T16:33:40.7412039Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7412115Z                 )
2025-02-24T16:33:40.7412183Z     
2025-02-24T16:33:40.7412258Z             diff = 0
2025-02-24T16:33:40.7412371Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7412463Z                 # count up differences
2025-02-24T16:33:40.7412638Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7412715Z                     diff += 1
2025-02-24T16:33:40.7412787Z     
2025-02-24T16:33:40.7412875Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7413134Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7413303Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7413417Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7413492Z E           
2025-02-24T16:33:40.7413609Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7413873Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7414131Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7414146Z 
2025-02-24T16:33:40.7414448Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7414453Z 
2025-02-24T16:33:40.7414627Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7414725Z 
2025-02-24T16:33:40.7414955Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123eed80>
2025-02-24T16:33:40.7415125Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4fb4c95e0>
2025-02-24T16:33:40.7415210Z attr = 'beta_sobolev'
2025-02-24T16:33:40.7415215Z 
2025-02-24T16:33:40.7415349Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7415472Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7415557Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7415634Z         try:
2025-02-24T16:33:40.7415779Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7415863Z         except KeyError:
2025-02-24T16:33:40.7416005Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7416074Z     
2025-02-24T16:33:40.7416162Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7416255Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7416349Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7416481Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7416567Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7416660Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7416769Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7416844Z             else:
2025-02-24T16:33:40.7416938Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7417066Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7417074Z 
2025-02-24T16:33:40.7417435Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7417639Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7417863Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7417935Z     ???
2025-02-24T16:33:40.7418050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7418062Z 
2025-02-24T16:33:40.7418137Z >   ???
2025-02-24T16:33:40.7418264Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7418340Z E   
2025-02-24T16:33:40.7418467Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7418590Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7418660Z E          ...
2025-02-24T16:33:40.7418752Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7418883Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7418993Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7419201Z E          ...
2025-02-24T16:33:40.7419285Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7419411Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7419514Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7419526Z 
2025-02-24T16:33:40.7419616Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7419826Z __ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-j_blues] ___
2025-02-24T16:33:40.7419830Z 
2025-02-24T16:33:40.7419960Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7420095Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7420194Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7420330Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7420463Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7420553Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7420631Z err_msg = None
2025-02-24T16:33:40.7420635Z 
2025-02-24T16:33:40.7420748Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7420942Z         if err_msg is None:
2025-02-24T16:33:40.7421041Z             if left.shape != right.shape:
2025-02-24T16:33:40.7421125Z                 raise_assert_detail(
2025-02-24T16:33:40.7421271Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7421342Z                 )
2025-02-24T16:33:40.7421413Z     
2025-02-24T16:33:40.7421487Z             diff = 0
2025-02-24T16:33:40.7421601Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7421695Z                 # count up differences
2025-02-24T16:33:40.7421865Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7421951Z                     diff += 1
2025-02-24T16:33:40.7422020Z     
2025-02-24T16:33:40.7422111Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7422246Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7422419Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7422541Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7422613Z E           
2025-02-24T16:33:40.7422729Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7422993Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7423261Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7423271Z 
2025-02-24T16:33:40.7423581Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7423585Z 
2025-02-24T16:33:40.7423752Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7423761Z 
2025-02-24T16:33:40.7423984Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123ef980>
2025-02-24T16:33:40.7424154Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4fb4c95e0>
2025-02-24T16:33:40.7424229Z attr = 'j_blues'
2025-02-24T16:33:40.7424233Z 
2025-02-24T16:33:40.7424373Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7424573Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7424665Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7424743Z         try:
2025-02-24T16:33:40.7424882Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7424966Z         except KeyError:
2025-02-24T16:33:40.7425108Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7425184Z     
2025-02-24T16:33:40.7425268Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7425366Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7425459Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7425587Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7425677Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7425766Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7425879Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7425950Z             else:
2025-02-24T16:33:40.7426053Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7426162Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7426166Z 
2025-02-24T16:33:40.7426290Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7426407Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7426649Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7426720Z     ???
2025-02-24T16:33:40.7426833Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7426837Z 
2025-02-24T16:33:40.7426904Z >   ???
2025-02-24T16:33:40.7427033Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7427100Z E   
2025-02-24T16:33:40.7427229Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7427475Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7427557Z E          ...
2025-02-24T16:33:40.7427647Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7427776Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7427894Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7427964Z E          ...
2025-02-24T16:33:40.7428057Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7428179Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7428288Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7428293Z 
2025-02-24T16:33:40.7428386Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7428608Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] _
2025-02-24T16:33:40.7428613Z 
2025-02-24T16:33:40.7428745Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7428873Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7428980Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7429120Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7429242Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7429341Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7429416Z err_msg = None
2025-02-24T16:33:40.7429420Z 
2025-02-24T16:33:40.7429537Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7429622Z         if err_msg is None:
2025-02-24T16:33:40.7429716Z             if left.shape != right.shape:
2025-02-24T16:33:40.7429805Z                 raise_assert_detail(
2025-02-24T16:33:40.7429947Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7430021Z                 )
2025-02-24T16:33:40.7430089Z     
2025-02-24T16:33:40.7430166Z             diff = 0
2025-02-24T16:33:40.7430407Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7430495Z                 # count up differences
2025-02-24T16:33:40.7430668Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7430745Z                     diff += 1
2025-02-24T16:33:40.7430823Z     
2025-02-24T16:33:40.7430910Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7431049Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7431223Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7431334Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7431409Z E           
2025-02-24T16:33:40.7431519Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7431779Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7432046Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7432157Z 
2025-02-24T16:33:40.7432465Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7432470Z 
2025-02-24T16:33:40.7432640Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7432645Z 
2025-02-24T16:33:40.7432874Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123eebd0>
2025-02-24T16:33:40.7433045Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c16270>
2025-02-24T16:33:40.7433121Z attr = 'lines'
2025-02-24T16:33:40.7433125Z 
2025-02-24T16:33:40.7433259Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7433377Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7433465Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7433539Z         try:
2025-02-24T16:33:40.7433680Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7433759Z         except KeyError:
2025-02-24T16:33:40.7433901Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7433966Z     
2025-02-24T16:33:40.7434057Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7434152Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7434239Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7434372Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7434461Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7434553Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7434696Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7434836Z             else:
2025-02-24T16:33:40.7435004Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7435202Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7435211Z 
2025-02-24T16:33:40.7435373Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7435489Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7435642Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7435715Z     ???
2025-02-24T16:33:40.7435825Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7435830Z 
2025-02-24T16:33:40.7435903Z >   ???
2025-02-24T16:33:40.7436030Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7436217Z E   
2025-02-24T16:33:40.7436349Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7436467Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7436543Z E          ...
2025-02-24T16:33:40.7436631Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7436769Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7436884Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7436957Z E          ...
2025-02-24T16:33:40.7437041Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7437168Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7437405Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7437411Z 
2025-02-24T16:33:40.7437508Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7437796Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] _
2025-02-24T16:33:40.7437808Z 
2025-02-24T16:33:40.7438030Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512338050>
2025-02-24T16:33:40.7438199Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c16270>
2025-02-24T16:33:40.7438293Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.7438298Z 
2025-02-24T16:33:40.7438556Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7438672Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7438754Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7438829Z         try:
2025-02-24T16:33:40.7438973Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7439052Z         except KeyError:
2025-02-24T16:33:40.7439196Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7439263Z     
2025-02-24T16:33:40.7439352Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7439444Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7439541Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7439678Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7439762Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7439854Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7439962Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7439970Z 
2025-02-24T16:33:40.7440100Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7440210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7440219Z 
2025-02-24T16:33:40.7440354Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7440443Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7440552Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7440638Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7440778Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7440864Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7440973Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7441052Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7441134Z err_msg = None
2025-02-24T16:33:40.7441138Z 
2025-02-24T16:33:40.7441247Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7441333Z         if err_msg is None:
2025-02-24T16:33:40.7441426Z             if left.shape != right.shape:
2025-02-24T16:33:40.7441514Z                 raise_assert_detail(
2025-02-24T16:33:40.7441661Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7441730Z                 )
2025-02-24T16:33:40.7441804Z     
2025-02-24T16:33:40.7441876Z             diff = 0
2025-02-24T16:33:40.7441993Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7442206Z                 # count up differences
2025-02-24T16:33:40.7442381Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7442462Z                     diff += 1
2025-02-24T16:33:40.7442530Z     
2025-02-24T16:33:40.7442620Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7442760Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7442939Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7443049Z E           AssertionError: Series are different
2025-02-24T16:33:40.7443118Z E           
2025-02-24T16:33:40.7443224Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.7443596Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7443938Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7444353Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7444358Z 
2025-02-24T16:33:40.7444680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7444961Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] _
2025-02-24T16:33:40.7444966Z 
2025-02-24T16:33:40.7445193Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512338110>
2025-02-24T16:33:40.7445364Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c16270>
2025-02-24T16:33:40.7445459Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.7445463Z 
2025-02-24T16:33:40.7445606Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7445722Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7445810Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7445880Z         try:
2025-02-24T16:33:40.7446025Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7446103Z         except KeyError:
2025-02-24T16:33:40.7446249Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7446321Z     
2025-02-24T16:33:40.7446407Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7446505Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7446595Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7446742Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7446826Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7446920Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7447034Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7447039Z 
2025-02-24T16:33:40.7447163Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7447386Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7447391Z 
2025-02-24T16:33:40.7447528Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7447737Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7447849Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7447927Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7448070Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7448161Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7448285Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7448362Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7448442Z err_msg = None
2025-02-24T16:33:40.7448446Z 
2025-02-24T16:33:40.7448558Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7448638Z         if err_msg is None:
2025-02-24T16:33:40.7448736Z             if left.shape != right.shape:
2025-02-24T16:33:40.7448820Z                 raise_assert_detail(
2025-02-24T16:33:40.7448966Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7449047Z                 )
2025-02-24T16:33:40.7449115Z     
2025-02-24T16:33:40.7449191Z             diff = 0
2025-02-24T16:33:40.7449305Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7449397Z                 # count up differences
2025-02-24T16:33:40.7449569Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7449763Z                     diff += 1
2025-02-24T16:33:40.7449838Z     
2025-02-24T16:33:40.7449923Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7450064Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7450231Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7450337Z E           AssertionError: Series are different
2025-02-24T16:33:40.7450407Z E           
2025-02-24T16:33:40.7450513Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.7450893Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7451273Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7451650Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7451659Z 
2025-02-24T16:33:40.7451979Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7452190Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] __
2025-02-24T16:33:40.7452200Z 
2025-02-24T16:33:40.7452327Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7452460Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7452558Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7452692Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7452900Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7452996Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7453075Z err_msg = None
2025-02-24T16:33:40.7453079Z 
2025-02-24T16:33:40.7453190Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7453311Z         if err_msg is None:
2025-02-24T16:33:40.7453480Z             if left.shape != right.shape:
2025-02-24T16:33:40.7453634Z                 raise_assert_detail(
2025-02-24T16:33:40.7453885Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7453957Z                 )
2025-02-24T16:33:40.7454031Z     
2025-02-24T16:33:40.7454102Z             diff = 0
2025-02-24T16:33:40.7454219Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7454306Z                 # count up differences
2025-02-24T16:33:40.7454485Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7454566Z                     diff += 1
2025-02-24T16:33:40.7454636Z     
2025-02-24T16:33:40.7454727Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7454862Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7455214Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7455326Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7455401Z E           
2025-02-24T16:33:40.7455516Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7455774Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7456044Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7456054Z 
2025-02-24T16:33:40.7456365Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7456369Z 
2025-02-24T16:33:40.7456536Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7456540Z 
2025-02-24T16:33:40.7456772Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512338350>
2025-02-24T16:33:40.7456973Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c16270>, attr = 'nu'
2025-02-24T16:33:40.7456982Z 
2025-02-24T16:33:40.7457116Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7457239Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7457430Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7457506Z         try:
2025-02-24T16:33:40.7457645Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7457729Z         except KeyError:
2025-02-24T16:33:40.7457877Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7457944Z     
2025-02-24T16:33:40.7458036Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7458129Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7458222Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7458352Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7458443Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7458535Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7458644Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7458802Z 
2025-02-24T16:33:40.7458934Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7459048Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7459200Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7459275Z     ???
2025-02-24T16:33:40.7459389Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7459393Z 
2025-02-24T16:33:40.7459464Z >   ???
2025-02-24T16:33:40.7459591Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7459664Z E   
2025-02-24T16:33:40.7459791Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7459905Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7459980Z E          ...
2025-02-24T16:33:40.7460068Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7460203Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7460319Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7460393Z E          ...
2025-02-24T16:33:40.7460476Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7460604Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7460715Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7460830Z 
2025-02-24T16:33:40.7460922Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7461179Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] _
2025-02-24T16:33:40.7461185Z 
2025-02-24T16:33:40.7461311Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7461444Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7461545Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7461676Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7461808Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7461899Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7461978Z err_msg = None
2025-02-24T16:33:40.7461982Z 
2025-02-24T16:33:40.7462105Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7462187Z         if err_msg is None:
2025-02-24T16:33:40.7462285Z             if left.shape != right.shape:
2025-02-24T16:33:40.7462369Z                 raise_assert_detail(
2025-02-24T16:33:40.7462515Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7462586Z                 )
2025-02-24T16:33:40.7462663Z     
2025-02-24T16:33:40.7462740Z             diff = 0
2025-02-24T16:33:40.7462851Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7462943Z                 # count up differences
2025-02-24T16:33:40.7463119Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7463204Z                     diff += 1
2025-02-24T16:33:40.7463272Z     
2025-02-24T16:33:40.7463366Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7463507Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7463680Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7463796Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7463865Z E           
2025-02-24T16:33:40.7463981Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7464241Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7464603Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7464613Z 
2025-02-24T16:33:40.7464924Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7464929Z 
2025-02-24T16:33:40.7465100Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7465104Z 
2025-02-24T16:33:40.7465326Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512338410>
2025-02-24T16:33:40.7465497Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c16270>
2025-02-24T16:33:40.7465575Z attr = 'wavelength_cm'
2025-02-24T16:33:40.7465579Z 
2025-02-24T16:33:40.7465717Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7465840Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7465923Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7465998Z         try:
2025-02-24T16:33:40.7466135Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7466304Z         except KeyError:
2025-02-24T16:33:40.7466440Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7466513Z     
2025-02-24T16:33:40.7466603Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7466694Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7466785Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7466914Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7467007Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7467095Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7467207Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7467217Z 
2025-02-24T16:33:40.7467453Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7467567Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7467714Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7467794Z     ???
2025-02-24T16:33:40.7467907Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7467911Z 
2025-02-24T16:33:40.7467983Z >   ???
2025-02-24T16:33:40.7468108Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7468181Z E   
2025-02-24T16:33:40.7468308Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7468420Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7468491Z E          ...
2025-02-24T16:33:40.7468585Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7468718Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7468840Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7468915Z E          ...
2025-02-24T16:33:40.7469002Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7469135Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7469249Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7469259Z 
2025-02-24T16:33:40.7469349Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7469577Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] _
2025-02-24T16:33:40.7469582Z 
2025-02-24T16:33:40.7469713Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7469850Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7469950Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7470091Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7470350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7470443Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7470522Z err_msg = None
2025-02-24T16:33:40.7470530Z 
2025-02-24T16:33:40.7470645Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7470731Z         if err_msg is None:
2025-02-24T16:33:40.7470833Z             if left.shape != right.shape:
2025-02-24T16:33:40.7470918Z                 raise_assert_detail(
2025-02-24T16:33:40.7471073Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7471145Z                 )
2025-02-24T16:33:40.7471218Z     
2025-02-24T16:33:40.7471289Z             diff = 0
2025-02-24T16:33:40.7471408Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7471501Z                 # count up differences
2025-02-24T16:33:40.7471680Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7471764Z                     diff += 1
2025-02-24T16:33:40.7471833Z     
2025-02-24T16:33:40.7471925Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7472138Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7472689Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7472823Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7472897Z E           
2025-02-24T16:33:40.7473018Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7473279Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7473552Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7473563Z 
2025-02-24T16:33:40.7473882Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7473886Z 
2025-02-24T16:33:40.7474057Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7474068Z 
2025-02-24T16:33:40.7474292Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5123384d0>
2025-02-24T16:33:40.7474501Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c16270>, attr = 'f_lu'
2025-02-24T16:33:40.7474506Z 
2025-02-24T16:33:40.7474646Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7474773Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7474857Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7474933Z         try:
2025-02-24T16:33:40.7475078Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7475163Z         except KeyError:
2025-02-24T16:33:40.7475312Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7475380Z     
2025-02-24T16:33:40.7475474Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7475568Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7475663Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7475800Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7475886Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7475982Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7476092Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7476184Z 
2025-02-24T16:33:40.7476319Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7476439Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7476586Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7476659Z     ???
2025-02-24T16:33:40.7476772Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7476776Z 
2025-02-24T16:33:40.7476849Z >   ???
2025-02-24T16:33:40.7476976Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7477049Z E   
2025-02-24T16:33:40.7477184Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7477451Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7477530Z E          ...
2025-02-24T16:33:40.7477619Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7477756Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7477875Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7477952Z E          ...
2025-02-24T16:33:40.7478040Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7478162Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7478409Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7478414Z 
2025-02-24T16:33:40.7478503Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7478752Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] _
2025-02-24T16:33:40.7478756Z 
2025-02-24T16:33:40.7478890Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7479030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7479132Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7479265Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7479401Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7479498Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7479572Z err_msg = None
2025-02-24T16:33:40.7479580Z 
2025-02-24T16:33:40.7479698Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7479780Z         if err_msg is None:
2025-02-24T16:33:40.7479884Z             if left.shape != right.shape:
2025-02-24T16:33:40.7479971Z                 raise_assert_detail(
2025-02-24T16:33:40.7480129Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7480204Z                 )
2025-02-24T16:33:40.7480272Z     
2025-02-24T16:33:40.7480348Z             diff = 0
2025-02-24T16:33:40.7480462Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7480555Z                 # count up differences
2025-02-24T16:33:40.7480731Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7480818Z                     diff += 1
2025-02-24T16:33:40.7480890Z     
2025-02-24T16:33:40.7480978Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7481119Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7481300Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7481419Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7481498Z E           
2025-02-24T16:33:40.7481611Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7481878Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7482256Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7482270Z 
2025-02-24T16:33:40.7482580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7482585Z 
2025-02-24T16:33:40.7482762Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7482767Z 
2025-02-24T16:33:40.7482994Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512338c50>
2025-02-24T16:33:40.7483165Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c16270>
2025-02-24T16:33:40.7483249Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.7483253Z 
2025-02-24T16:33:40.7483400Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7483522Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7483607Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7483683Z         try:
2025-02-24T16:33:40.7483823Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7484010Z         except KeyError:
2025-02-24T16:33:40.7484155Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7484223Z     
2025-02-24T16:33:40.7484313Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7484406Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7484499Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7484630Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7484723Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7484816Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7484926Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7485007Z             else:
2025-02-24T16:33:40.7485102Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7485217Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7485222Z 
2025-02-24T16:33:40.7485353Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7485474Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7485629Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7485699Z     ???
2025-02-24T16:33:40.7485814Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7485818Z 
2025-02-24T16:33:40.7485886Z >   ???
2025-02-24T16:33:40.7486019Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7486092Z E   
2025-02-24T16:33:40.7486222Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7486339Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7486412Z E          ...
2025-02-24T16:33:40.7486506Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7486636Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7486756Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7486835Z E          ...
2025-02-24T16:33:40.7486922Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7487052Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7487158Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7487163Z 
2025-02-24T16:33:40.7487360Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7487616Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] _
2025-02-24T16:33:40.7487621Z 
2025-02-24T16:33:40.7487752Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7488004Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7488103Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7488241Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7488371Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7488468Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7488547Z err_msg = None
2025-02-24T16:33:40.7488551Z 
2025-02-24T16:33:40.7488663Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7488752Z         if err_msg is None:
2025-02-24T16:33:40.7488847Z             if left.shape != right.shape:
2025-02-24T16:33:40.7488936Z                 raise_assert_detail(
2025-02-24T16:33:40.7489087Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7489157Z                 )
2025-02-24T16:33:40.7489234Z     
2025-02-24T16:33:40.7489305Z             diff = 0
2025-02-24T16:33:40.7489420Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7489507Z                 # count up differences
2025-02-24T16:33:40.7489691Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7489887Z                     diff += 1
2025-02-24T16:33:40.7489956Z     
2025-02-24T16:33:40.7490053Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7490193Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7490368Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7490484Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7490555Z E           
2025-02-24T16:33:40.7490675Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7491160Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7491514Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7491526Z 
2025-02-24T16:33:40.7491841Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7491846Z 
2025-02-24T16:33:40.7492016Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7492021Z 
2025-02-24T16:33:40.7492249Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512338d10>
2025-02-24T16:33:40.7492424Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c16270>
2025-02-24T16:33:40.7492502Z attr = 'beta_sobolev'
2025-02-24T16:33:40.7492506Z 
2025-02-24T16:33:40.7492648Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7492769Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7492860Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7492930Z         try:
2025-02-24T16:33:40.7493073Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7493157Z         except KeyError:
2025-02-24T16:33:40.7493295Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7493367Z     
2025-02-24T16:33:40.7493453Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7493552Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7493640Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7493776Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7493961Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7494049Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7494163Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7494234Z             else:
2025-02-24T16:33:40.7494337Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7494444Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7494455Z 
2025-02-24T16:33:40.7494580Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7494697Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7494842Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7494916Z     ???
2025-02-24T16:33:40.7495023Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7495033Z 
2025-02-24T16:33:40.7495101Z >   ???
2025-02-24T16:33:40.7495238Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7495307Z E   
2025-02-24T16:33:40.7495439Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7495549Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7495625Z E          ...
2025-02-24T16:33:40.7495795Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7495928Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7496045Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7496117Z E          ...
2025-02-24T16:33:40.7496205Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7496327Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7496436Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7496441Z 
2025-02-24T16:33:40.7496533Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7496762Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] _
2025-02-24T16:33:40.7496770Z 
2025-02-24T16:33:40.7496904Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7497034Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7497140Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7497380Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7497508Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7497605Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7497678Z err_msg = None
2025-02-24T16:33:40.7497683Z 
2025-02-24T16:33:40.7497796Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7509649Z         if err_msg is None:
2025-02-24T16:33:40.7509857Z             if left.shape != right.shape:
2025-02-24T16:33:40.7510023Z                 raise_assert_detail(
2025-02-24T16:33:40.7510198Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7510272Z                 )
2025-02-24T16:33:40.7510346Z     
2025-02-24T16:33:40.7510424Z             diff = 0
2025-02-24T16:33:40.7510559Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7510661Z                 # count up differences
2025-02-24T16:33:40.7510842Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7510930Z                     diff += 1
2025-02-24T16:33:40.7510998Z     
2025-02-24T16:33:40.7511095Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7511237Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7511418Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7511545Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7511796Z E           
2025-02-24T16:33:40.7511918Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7512181Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7512458Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7512464Z 
2025-02-24T16:33:40.7512792Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7512802Z 
2025-02-24T16:33:40.7512974Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7512984Z 
2025-02-24T16:33:40.7513212Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512338e90>
2025-02-24T16:33:40.7513387Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c16270>
2025-02-24T16:33:40.7513595Z attr = 'j_blues'
2025-02-24T16:33:40.7513600Z 
2025-02-24T16:33:40.7513743Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7513880Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7513973Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7514044Z         try:
2025-02-24T16:33:40.7514201Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7514282Z         except KeyError:
2025-02-24T16:33:40.7514431Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7514499Z     
2025-02-24T16:33:40.7514597Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7514698Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7514786Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7514927Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7515012Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7515110Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7515221Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7515299Z             else:
2025-02-24T16:33:40.7515401Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7515510Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7515514Z 
2025-02-24T16:33:40.7515649Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7515767Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7515926Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7516005Z     ???
2025-02-24T16:33:40.7516116Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7516120Z 
2025-02-24T16:33:40.7516191Z >   ???
2025-02-24T16:33:40.7516321Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7516394Z E   
2025-02-24T16:33:40.7516530Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7516652Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7516731Z E          ...
2025-02-24T16:33:40.7516823Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7516958Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7517075Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7517151Z E          ...
2025-02-24T16:33:40.7517238Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7517532Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7517765Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7517770Z 
2025-02-24T16:33:40.7517858Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7518072Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines] ____
2025-02-24T16:33:40.7518077Z 
2025-02-24T16:33:40.7518213Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7518351Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7518455Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7518588Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7518723Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7518814Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7518898Z err_msg = None
2025-02-24T16:33:40.7518903Z 
2025-02-24T16:33:40.7519021Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7519103Z         if err_msg is None:
2025-02-24T16:33:40.7519202Z             if left.shape != right.shape:
2025-02-24T16:33:40.7519286Z                 raise_assert_detail(
2025-02-24T16:33:40.7519558Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7519630Z                 )
2025-02-24T16:33:40.7519701Z     
2025-02-24T16:33:40.7519777Z             diff = 0
2025-02-24T16:33:40.7519890Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7519985Z                 # count up differences
2025-02-24T16:33:40.7520163Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7520246Z                     diff += 1
2025-02-24T16:33:40.7520314Z     
2025-02-24T16:33:40.7520409Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7520560Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7520732Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7520851Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7520922Z E           
2025-02-24T16:33:40.7521040Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7521312Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7521573Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7521582Z 
2025-02-24T16:33:40.7521906Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7521910Z 
2025-02-24T16:33:40.7522088Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7522097Z 
2025-02-24T16:33:40.7522321Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512339c10>
2025-02-24T16:33:40.7522496Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8ad1b50>
2025-02-24T16:33:40.7522569Z attr = 'lines'
2025-02-24T16:33:40.7522573Z 
2025-02-24T16:33:40.7522716Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7522836Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7522922Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7522996Z         try:
2025-02-24T16:33:40.7523137Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7523309Z         except KeyError:
2025-02-24T16:33:40.7523448Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7523521Z     
2025-02-24T16:33:40.7523610Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7523708Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7523808Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7523940Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7524030Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7524118Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7524232Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7524309Z             else:
2025-02-24T16:33:40.7524403Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7524517Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7524521Z 
2025-02-24T16:33:40.7524646Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7524769Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7524921Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7524989Z     ???
2025-02-24T16:33:40.7525102Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7525188Z 
2025-02-24T16:33:40.7525257Z >   ???
2025-02-24T16:33:40.7525388Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7525455Z E   
2025-02-24T16:33:40.7525587Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7525703Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7525773Z E          ...
2025-02-24T16:33:40.7525865Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7525994Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7526110Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7526185Z E          ...
2025-02-24T16:33:40.7526273Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7526400Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7526504Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7526512Z 
2025-02-24T16:33:40.7526606Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7526981Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] _
2025-02-24T16:33:40.7526993Z 
2025-02-24T16:33:40.7527494Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512339cd0>
2025-02-24T16:33:40.7527674Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8ad1b50>
2025-02-24T16:33:40.7527764Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.7527768Z 
2025-02-24T16:33:40.7527912Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7528026Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7528120Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7528194Z         try:
2025-02-24T16:33:40.7528335Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7528420Z         except KeyError:
2025-02-24T16:33:40.7528559Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7528635Z     
2025-02-24T16:33:40.7528720Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7528817Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7528920Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7529053Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7529141Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7529229Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7529342Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7529346Z 
2025-02-24T16:33:40.7529470Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7529722Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7529728Z 
2025-02-24T16:33:40.7529867Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7529953Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7530070Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7530149Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7530292Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7530378Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7530480Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7530563Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7530636Z err_msg = None
2025-02-24T16:33:40.7530640Z 
2025-02-24T16:33:40.7530753Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7530841Z         if err_msg is None:
2025-02-24T16:33:40.7530934Z             if left.shape != right.shape:
2025-02-24T16:33:40.7531022Z                 raise_assert_detail(
2025-02-24T16:33:40.7531163Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7531237Z                 )
2025-02-24T16:33:40.7531427Z     
2025-02-24T16:33:40.7531504Z             diff = 0
2025-02-24T16:33:40.7531620Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7531706Z                 # count up differences
2025-02-24T16:33:40.7531882Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7531958Z                     diff += 1
2025-02-24T16:33:40.7532032Z     
2025-02-24T16:33:40.7532117Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7532259Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7532435Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7532544Z E           AssertionError: Series are different
2025-02-24T16:33:40.7532619Z E           
2025-02-24T16:33:40.7532719Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.7533099Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7533433Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7533765Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7533779Z 
2025-02-24T16:33:40.7534093Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7534349Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] _
2025-02-24T16:33:40.7534355Z 
2025-02-24T16:33:40.7534577Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512339d90>
2025-02-24T16:33:40.7534752Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8ad1b50>
2025-02-24T16:33:40.7534954Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.7534958Z 
2025-02-24T16:33:40.7535094Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7535214Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7535297Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7535375Z         try:
2025-02-24T16:33:40.7535516Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7535601Z         except KeyError:
2025-02-24T16:33:40.7535741Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7535810Z     
2025-02-24T16:33:40.7535901Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7535993Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7536086Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7536217Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7536307Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7536399Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7536505Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7536509Z 
2025-02-24T16:33:40.7536634Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7536746Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7536833Z 
2025-02-24T16:33:40.7536972Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7537059Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7537166Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7537369Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7537512Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7537598Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7537702Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7537789Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7537866Z err_msg = None
2025-02-24T16:33:40.7537871Z 
2025-02-24T16:33:40.7537979Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7538064Z         if err_msg is None:
2025-02-24T16:33:40.7538162Z             if left.shape != right.shape:
2025-02-24T16:33:40.7538254Z                 raise_assert_detail(
2025-02-24T16:33:40.7538401Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7538470Z                 )
2025-02-24T16:33:40.7538542Z     
2025-02-24T16:33:40.7538613Z             diff = 0
2025-02-24T16:33:40.7538728Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7538821Z                 # count up differences
2025-02-24T16:33:40.7538995Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7539076Z                     diff += 1
2025-02-24T16:33:40.7539147Z     
2025-02-24T16:33:40.7539236Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7539369Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7539544Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7539646Z E           AssertionError: Series are different
2025-02-24T16:33:40.7539726Z E           
2025-02-24T16:33:40.7539832Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.7540198Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7540574Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7541075Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7541081Z 
2025-02-24T16:33:40.7541399Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7541607Z _____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-nu] ______
2025-02-24T16:33:40.7541616Z 
2025-02-24T16:33:40.7541744Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7541874Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7542079Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7542216Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7542335Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7542431Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7542509Z err_msg = None
2025-02-24T16:33:40.7542513Z 
2025-02-24T16:33:40.7542618Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7542698Z         if err_msg is None:
2025-02-24T16:33:40.7542792Z             if left.shape != right.shape:
2025-02-24T16:33:40.7542877Z                 raise_assert_detail(
2025-02-24T16:33:40.7543021Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7543090Z                 )
2025-02-24T16:33:40.7543161Z     
2025-02-24T16:33:40.7543231Z             diff = 0
2025-02-24T16:33:40.7543347Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7543432Z                 # count up differences
2025-02-24T16:33:40.7543606Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7543689Z                     diff += 1
2025-02-24T16:33:40.7543757Z     
2025-02-24T16:33:40.7543844Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7543976Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7544147Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7544261Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7544333Z E           
2025-02-24T16:33:40.7544447Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7544705Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7544971Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7544977Z 
2025-02-24T16:33:40.7545306Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7545438Z 
2025-02-24T16:33:40.7545749Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7545760Z 
2025-02-24T16:33:40.7546080Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512339fd0>
2025-02-24T16:33:40.7546292Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8ad1b50>, attr = 'nu'
2025-02-24T16:33:40.7546297Z 
2025-02-24T16:33:40.7546435Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7546554Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7546639Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7546711Z         try:
2025-02-24T16:33:40.7546852Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7546935Z         except KeyError:
2025-02-24T16:33:40.7547073Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7547140Z     
2025-02-24T16:33:40.7547232Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7547421Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7547513Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7547644Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7547731Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7547950Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7548060Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7548064Z 
2025-02-24T16:33:40.7548191Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7548302Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7548452Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7548523Z     ???
2025-02-24T16:33:40.7548629Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7548634Z 
2025-02-24T16:33:40.7548706Z >   ???
2025-02-24T16:33:40.7548839Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7548910Z E   
2025-02-24T16:33:40.7549039Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7549153Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7549225Z E          ...
2025-02-24T16:33:40.7549315Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7549448Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7549561Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7549639Z E          ...
2025-02-24T16:33:40.7549724Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7549850Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7549959Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7549964Z 
2025-02-24T16:33:40.7550054Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7550282Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-wavelength_cm] _
2025-02-24T16:33:40.7550288Z 
2025-02-24T16:33:40.7550416Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7550548Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7550654Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7550782Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7550910Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7551001Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7551079Z err_msg = None
2025-02-24T16:33:40.7551084Z 
2025-02-24T16:33:40.7551197Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7551279Z         if err_msg is None:
2025-02-24T16:33:40.7551514Z             if left.shape != right.shape:
2025-02-24T16:33:40.7551598Z                 raise_assert_detail(
2025-02-24T16:33:40.7551745Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7551815Z                 )
2025-02-24T16:33:40.7551887Z     
2025-02-24T16:33:40.7551962Z             diff = 0
2025-02-24T16:33:40.7552075Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7552166Z                 # count up differences
2025-02-24T16:33:40.7552336Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7552419Z                     diff += 1
2025-02-24T16:33:40.7552486Z     
2025-02-24T16:33:40.7552578Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7552718Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7552886Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7553006Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7553076Z E           
2025-02-24T16:33:40.7553193Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7553457Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7553807Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7553812Z 
2025-02-24T16:33:40.7554130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7554139Z 
2025-02-24T16:33:40.7554314Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7554318Z 
2025-02-24T16:33:40.7554544Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff51233a090>
2025-02-24T16:33:40.7554717Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8ad1b50>
2025-02-24T16:33:40.7554800Z attr = 'wavelength_cm'
2025-02-24T16:33:40.7554804Z 
2025-02-24T16:33:40.7554948Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7555069Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7555153Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7555227Z         try:
2025-02-24T16:33:40.7555367Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7555450Z         except KeyError:
2025-02-24T16:33:40.7555589Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7555664Z     
2025-02-24T16:33:40.7555756Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7555848Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7555941Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7556071Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7556164Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7556252Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7556365Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7556370Z 
2025-02-24T16:33:40.7556498Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7556612Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7556762Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7556832Z     ???
2025-02-24T16:33:40.7556945Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7557051Z 
2025-02-24T16:33:40.7557125Z >   ???
2025-02-24T16:33:40.7557371Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7557446Z E   
2025-02-24T16:33:40.7557572Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7557687Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7557762Z E          ...
2025-02-24T16:33:40.7557855Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7557989Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7558099Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7558174Z E          ...
2025-02-24T16:33:40.7558260Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7558389Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7558493Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7558502Z 
2025-02-24T16:33:40.7558589Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7558799Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-f_lu] _____
2025-02-24T16:33:40.7558804Z 
2025-02-24T16:33:40.7558934Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7559067Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7559281Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7559420Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7559551Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7559643Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7559721Z err_msg = None
2025-02-24T16:33:40.7559726Z 
2025-02-24T16:33:40.7559835Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7559919Z         if err_msg is None:
2025-02-24T16:33:40.7560021Z             if left.shape != right.shape:
2025-02-24T16:33:40.7560105Z                 raise_assert_detail(
2025-02-24T16:33:40.7560251Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7560321Z                 )
2025-02-24T16:33:40.7560393Z     
2025-02-24T16:33:40.7560467Z             diff = 0
2025-02-24T16:33:40.7560584Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7560677Z                 # count up differences
2025-02-24T16:33:40.7560849Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7560930Z                     diff += 1
2025-02-24T16:33:40.7560998Z     
2025-02-24T16:33:40.7561092Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7561228Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7561402Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7561521Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7561591Z E           
2025-02-24T16:33:40.7561708Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7561967Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7562237Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7562242Z 
2025-02-24T16:33:40.7562555Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7562673Z 
2025-02-24T16:33:40.7562845Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7562855Z 
2025-02-24T16:33:40.7563079Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff51233a150>
2025-02-24T16:33:40.7563289Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8ad1b50>, attr = 'f_lu'
2025-02-24T16:33:40.7563294Z 
2025-02-24T16:33:40.7563428Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7563545Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7563629Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7563750Z         try:
2025-02-24T16:33:40.7564003Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7564134Z         except KeyError:
2025-02-24T16:33:40.7564368Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7564483Z     
2025-02-24T16:33:40.7564629Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7564786Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7564945Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7565087Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7565173Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7565356Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7565466Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7565470Z 
2025-02-24T16:33:40.7565601Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7565718Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7565861Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7565934Z     ???
2025-02-24T16:33:40.7566042Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7566046Z 
2025-02-24T16:33:40.7566121Z >   ???
2025-02-24T16:33:40.7566245Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7566317Z E   
2025-02-24T16:33:40.7566694Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7566804Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7566882Z E          ...
2025-02-24T16:33:40.7566967Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7567100Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7567214Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7567390Z E          ...
2025-02-24T16:33:40.7567481Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7567602Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7567710Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7567715Z 
2025-02-24T16:33:40.7567801Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7568023Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] _
2025-02-24T16:33:40.7568028Z 
2025-02-24T16:33:40.7568158Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7568284Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7568386Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7568519Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7568645Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7568744Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7568818Z err_msg = None
2025-02-24T16:33:40.7568822Z 
2025-02-24T16:33:40.7568936Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7569016Z         if err_msg is None:
2025-02-24T16:33:40.7569235Z             if left.shape != right.shape:
2025-02-24T16:33:40.7569324Z                 raise_assert_detail(
2025-02-24T16:33:40.7569466Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7569539Z                 )
2025-02-24T16:33:40.7569606Z     
2025-02-24T16:33:40.7569685Z             diff = 0
2025-02-24T16:33:40.7569795Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7569888Z                 # count up differences
2025-02-24T16:33:40.7570061Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7570137Z                     diff += 1
2025-02-24T16:33:40.7570209Z     
2025-02-24T16:33:40.7570298Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7570437Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7570609Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7570727Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7570802Z E           
2025-02-24T16:33:40.7570911Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7571175Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7571548Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7571560Z 
2025-02-24T16:33:40.7571870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7571879Z 
2025-02-24T16:33:40.7572052Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7572057Z 
2025-02-24T16:33:40.7572283Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff51233a8d0>
2025-02-24T16:33:40.7572459Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8ad1b50>
2025-02-24T16:33:40.7572540Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.7572545Z 
2025-02-24T16:33:40.7572679Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7572797Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7572878Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7572953Z         try:
2025-02-24T16:33:40.7573095Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7573173Z         except KeyError:
2025-02-24T16:33:40.7573314Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7573385Z     
2025-02-24T16:33:40.7573475Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7573566Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7573659Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7573797Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7573884Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7573977Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7574085Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7574161Z             else:
2025-02-24T16:33:40.7574256Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7574367Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7574371Z 
2025-02-24T16:33:40.7574504Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7574616Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7574763Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7574917Z     ???
2025-02-24T16:33:40.7575033Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7575037Z 
2025-02-24T16:33:40.7575108Z >   ???
2025-02-24T16:33:40.7575233Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7575308Z E   
2025-02-24T16:33:40.7575432Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7575545Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7575615Z E          ...
2025-02-24T16:33:40.7575706Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7575837Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7575946Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7576020Z E          ...
2025-02-24T16:33:40.7576103Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7576234Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7576336Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7576341Z 
2025-02-24T16:33:40.7576432Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7576638Z ___ TestPlasma.test_plasma_properties[line_interaction_type:scatter-j_blues] ___
2025-02-24T16:33:40.7576739Z 
2025-02-24T16:33:40.7576867Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7576998Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7577092Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7577226Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7577448Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7577543Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7577624Z err_msg = None
2025-02-24T16:33:40.7577628Z 
2025-02-24T16:33:40.7577739Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7577825Z         if err_msg is None:
2025-02-24T16:33:40.7577922Z             if left.shape != right.shape:
2025-02-24T16:33:40.7578005Z                 raise_assert_detail(
2025-02-24T16:33:40.7578158Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7578227Z                 )
2025-02-24T16:33:40.7578299Z     
2025-02-24T16:33:40.7578371Z             diff = 0
2025-02-24T16:33:40.7578484Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7578575Z                 # count up differences
2025-02-24T16:33:40.7578744Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7578825Z                     diff += 1
2025-02-24T16:33:40.7578893Z     
2025-02-24T16:33:40.7578983Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7579121Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7579293Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7579409Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7579479Z E           
2025-02-24T16:33:40.7579597Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7579853Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7580117Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7580239Z 
2025-02-24T16:33:40.7580548Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7580553Z 
2025-02-24T16:33:40.7580722Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7580727Z 
2025-02-24T16:33:40.7580955Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff51233ab10>
2025-02-24T16:33:40.7581132Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e8ad1b50>
2025-02-24T16:33:40.7581206Z attr = 'j_blues'
2025-02-24T16:33:40.7581211Z 
2025-02-24T16:33:40.7581348Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7581461Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7581551Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7581619Z         try:
2025-02-24T16:33:40.7581764Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7581850Z         except KeyError:
2025-02-24T16:33:40.7581986Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7582058Z     
2025-02-24T16:33:40.7582143Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7582478Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7582630Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7582868Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7583026Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7583131Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7583246Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7583320Z             else:
2025-02-24T16:33:40.7583424Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7583537Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7583547Z 
2025-02-24T16:33:40.7583672Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7583791Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7583937Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7584010Z     ???
2025-02-24T16:33:40.7584122Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7584132Z 
2025-02-24T16:33:40.7584198Z >   ???
2025-02-24T16:33:40.7584327Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7584395Z E   
2025-02-24T16:33:40.7584525Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7584635Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7584711Z E          ...
2025-02-24T16:33:40.7584797Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7584929Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7585049Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7585119Z E          ...
2025-02-24T16:33:40.7585207Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7585327Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7585434Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7585442Z 
2025-02-24T16:33:40.7585665Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7585965Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines] ___
2025-02-24T16:33:40.7585971Z 
2025-02-24T16:33:40.7586106Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7586235Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7586336Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7586473Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7586695Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7586791Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7586865Z err_msg = None
2025-02-24T16:33:40.7586869Z 
2025-02-24T16:33:40.7586989Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7587070Z         if err_msg is None:
2025-02-24T16:33:40.7587170Z             if left.shape != right.shape:
2025-02-24T16:33:40.7587392Z                 raise_assert_detail(
2025-02-24T16:33:40.7587540Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7587614Z                 )
2025-02-24T16:33:40.7587681Z     
2025-02-24T16:33:40.7587757Z             diff = 0
2025-02-24T16:33:40.7587867Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7587961Z                 # count up differences
2025-02-24T16:33:40.7588132Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7588215Z                     diff += 1
2025-02-24T16:33:40.7588286Z     
2025-02-24T16:33:40.7588373Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7588513Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7588810Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7588922Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7588998Z E           
2025-02-24T16:33:40.7589108Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7589371Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7589640Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7589649Z 
2025-02-24T16:33:40.7589958Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7589963Z 
2025-02-24T16:33:40.7590134Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7590139Z 
2025-02-24T16:33:40.7590368Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff51233b890>
2025-02-24T16:33:40.7590532Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff51233a1e0>
2025-02-24T16:33:40.7590610Z attr = 'lines'
2025-02-24T16:33:40.7590614Z 
2025-02-24T16:33:40.7590748Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7590869Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7590951Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7591026Z         try:
2025-02-24T16:33:40.7591168Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7591250Z         except KeyError:
2025-02-24T16:33:40.7591395Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7591462Z     
2025-02-24T16:33:40.7591554Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7591647Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7591740Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7591877Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7591961Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7592054Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7592162Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7592379Z             else:
2025-02-24T16:33:40.7592473Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7592584Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7592588Z 
2025-02-24T16:33:40.7592715Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7592828Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7592980Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7593049Z     ???
2025-02-24T16:33:40.7593161Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7593165Z 
2025-02-24T16:33:40.7593241Z >   ???
2025-02-24T16:33:40.7593365Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7593440Z E   
2025-02-24T16:33:40.7593564Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7593678Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7593752Z E          ...
2025-02-24T16:33:40.7593843Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7593975Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7594086Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7594158Z E          ...
2025-02-24T16:33:40.7594321Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7594449Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7594555Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7594560Z 
2025-02-24T16:33:40.7594647Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7594907Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] _
2025-02-24T16:33:40.7594913Z 
2025-02-24T16:33:40.7595130Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff51233b950>
2025-02-24T16:33:40.7595300Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff51233a1e0>
2025-02-24T16:33:40.7595397Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.7595402Z 
2025-02-24T16:33:40.7595535Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7595652Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7595733Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7595810Z         try:
2025-02-24T16:33:40.7595946Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7596030Z         except KeyError:
2025-02-24T16:33:40.7596170Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7596237Z     
2025-02-24T16:33:40.7596327Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7596417Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7596508Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7596637Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7596724Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7596820Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7596926Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7596931Z 
2025-02-24T16:33:40.7597056Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7597166Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7597173Z 
2025-02-24T16:33:40.7597436Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7597528Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7597638Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7597724Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7597860Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7597946Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7598049Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7598259Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7598338Z err_msg = None
2025-02-24T16:33:40.7598342Z 
2025-02-24T16:33:40.7598450Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7598534Z         if err_msg is None:
2025-02-24T16:33:40.7598631Z             if left.shape != right.shape:
2025-02-24T16:33:40.7598720Z                 raise_assert_detail(
2025-02-24T16:33:40.7598867Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7598938Z                 )
2025-02-24T16:33:40.7599008Z     
2025-02-24T16:33:40.7599079Z             diff = 0
2025-02-24T16:33:40.7599195Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7599285Z                 # count up differences
2025-02-24T16:33:40.7599459Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7599570Z                     diff += 1
2025-02-24T16:33:40.7599683Z     
2025-02-24T16:33:40.7599850Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7600085Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7600310Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7600562Z E           AssertionError: Series are different
2025-02-24T16:33:40.7600639Z E           
2025-02-24T16:33:40.7600746Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.7601117Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7601449Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7601788Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7601794Z 
2025-02-24T16:33:40.7602100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7602359Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] _
2025-02-24T16:33:40.7602367Z 
2025-02-24T16:33:40.7602593Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff51233ba10>
2025-02-24T16:33:40.7602762Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff51233a1e0>
2025-02-24T16:33:40.7602859Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.7602866Z 
2025-02-24T16:33:40.7603001Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7603118Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7603209Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7603279Z         try:
2025-02-24T16:33:40.7603420Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7603504Z         except KeyError:
2025-02-24T16:33:40.7603648Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7603715Z     
2025-02-24T16:33:40.7603808Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7603905Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7604096Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7604235Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7604319Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7604410Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7604521Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7604530Z 
2025-02-24T16:33:40.7604652Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7604765Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7604770Z 
2025-02-24T16:33:40.7604903Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7604990Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7605096Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7605180Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7605328Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7605408Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7605517Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7605592Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7605748Z err_msg = None
2025-02-24T16:33:40.7605753Z 
2025-02-24T16:33:40.7605868Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7605947Z         if err_msg is None:
2025-02-24T16:33:40.7606043Z             if left.shape != right.shape:
2025-02-24T16:33:40.7606127Z                 raise_assert_detail(
2025-02-24T16:33:40.7606272Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7606342Z                 )
2025-02-24T16:33:40.7606415Z     
2025-02-24T16:33:40.7606490Z             diff = 0
2025-02-24T16:33:40.7606599Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7606695Z                 # count up differences
2025-02-24T16:33:40.7606862Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7606943Z                     diff += 1
2025-02-24T16:33:40.7607010Z     
2025-02-24T16:33:40.7607100Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7607378Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7607553Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7607660Z E           AssertionError: Series are different
2025-02-24T16:33:40.7607730Z E           
2025-02-24T16:33:40.7607834Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.7608200Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7608581Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7608962Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7609102Z 
2025-02-24T16:33:40.7609413Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7609617Z ____ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-nu] _____
2025-02-24T16:33:40.7609625Z 
2025-02-24T16:33:40.7609754Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7609887Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7609983Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7610117Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7610238Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7610334Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7610416Z err_msg = None
2025-02-24T16:33:40.7610420Z 
2025-02-24T16:33:40.7610525Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7610610Z         if err_msg is None:
2025-02-24T16:33:40.7610702Z             if left.shape != right.shape:
2025-02-24T16:33:40.7610897Z                 raise_assert_detail(
2025-02-24T16:33:40.7611038Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7611112Z                 )
2025-02-24T16:33:40.7611183Z     
2025-02-24T16:33:40.7611254Z             diff = 0
2025-02-24T16:33:40.7611367Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7611454Z                 # count up differences
2025-02-24T16:33:40.7611627Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7611702Z                     diff += 1
2025-02-24T16:33:40.7611777Z     
2025-02-24T16:33:40.7611869Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7612000Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7612172Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7612283Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7612362Z E           
2025-02-24T16:33:40.7612471Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7612738Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7613003Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7613012Z 
2025-02-24T16:33:40.7613315Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7613323Z 
2025-02-24T16:33:40.7613489Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7613494Z 
2025-02-24T16:33:40.7613720Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff51233bc50>
2025-02-24T16:33:40.7613920Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff51233a1e0>, attr = 'nu'
2025-02-24T16:33:40.7613924Z 
2025-02-24T16:33:40.7614065Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7614184Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7614267Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7614340Z         try:
2025-02-24T16:33:40.7614564Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7614648Z         except KeyError:
2025-02-24T16:33:40.7614789Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7614862Z     
2025-02-24T16:33:40.7614953Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7615048Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7615140Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7615269Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7615359Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7615447Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7615561Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7615566Z 
2025-02-24T16:33:40.7615694Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7615804Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7615957Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7616029Z     ???
2025-02-24T16:33:40.7616141Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7616145Z 
2025-02-24T16:33:40.7616215Z >   ???
2025-02-24T16:33:40.7616341Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7616492Z E   
2025-02-24T16:33:40.7616620Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7616734Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7616803Z E          ...
2025-02-24T16:33:40.7616894Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7617029Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7617139Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7617212Z E          ...
2025-02-24T16:33:40.7617410Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7617545Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7617651Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7617661Z 
2025-02-24T16:33:40.7617748Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7617976Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] _
2025-02-24T16:33:40.7617984Z 
2025-02-24T16:33:40.7618153Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7618388Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7618560Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7618759Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7618890Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7618985Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7619068Z err_msg = None
2025-02-24T16:33:40.7619072Z 
2025-02-24T16:33:40.7619181Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7619267Z         if err_msg is None:
2025-02-24T16:33:40.7619365Z             if left.shape != right.shape:
2025-02-24T16:33:40.7619453Z                 raise_assert_detail(
2025-02-24T16:33:40.7619602Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7619671Z                 )
2025-02-24T16:33:40.7619743Z     
2025-02-24T16:33:40.7619813Z             diff = 0
2025-02-24T16:33:40.7619929Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7620023Z                 # count up differences
2025-02-24T16:33:40.7620188Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7620273Z                     diff += 1
2025-02-24T16:33:40.7620340Z     
2025-02-24T16:33:40.7620432Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7620721Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7620894Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7621008Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7621080Z E           
2025-02-24T16:33:40.7621194Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7621449Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7621713Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7621722Z 
2025-02-24T16:33:40.7622030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7622035Z 
2025-02-24T16:33:40.7622307Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7622317Z 
2025-02-24T16:33:40.7622539Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff51233bd10>
2025-02-24T16:33:40.7622716Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff51233a1e0>
2025-02-24T16:33:40.7622794Z attr = 'wavelength_cm'
2025-02-24T16:33:40.7622799Z 
2025-02-24T16:33:40.7622938Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7623052Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7623140Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7623217Z         try:
2025-02-24T16:33:40.7623356Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7623440Z         except KeyError:
2025-02-24T16:33:40.7623575Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7623648Z     
2025-02-24T16:33:40.7623733Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7623835Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7623928Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7624058Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7624148Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7624236Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7624350Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7624355Z 
2025-02-24T16:33:40.7624486Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7624598Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7624749Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7624819Z     ???
2025-02-24T16:33:40.7624930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7624935Z 
2025-02-24T16:33:40.7625002Z >   ???
2025-02-24T16:33:40.7625137Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7625209Z E   
2025-02-24T16:33:40.7625337Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7625452Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7625522Z E          ...
2025-02-24T16:33:40.7625613Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7625742Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7625857Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7625932Z E          ...
2025-02-24T16:33:40.7626015Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7626230Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7626334Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7626338Z 
2025-02-24T16:33:40.7626430Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7626635Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-f_lu] ____
2025-02-24T16:33:40.7626643Z 
2025-02-24T16:33:40.7626769Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7626898Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7626992Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7627128Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7627365Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7627465Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7627542Z err_msg = None
2025-02-24T16:33:40.7627546Z 
2025-02-24T16:33:40.7627653Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7627738Z         if err_msg is None:
2025-02-24T16:33:40.7627830Z             if left.shape != right.shape:
2025-02-24T16:33:40.7628032Z                 raise_assert_detail(
2025-02-24T16:33:40.7628178Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7628248Z                 )
2025-02-24T16:33:40.7628319Z     
2025-02-24T16:33:40.7628390Z             diff = 0
2025-02-24T16:33:40.7628503Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7628590Z                 # count up differences
2025-02-24T16:33:40.7628764Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7628847Z                     diff += 1
2025-02-24T16:33:40.7628915Z     
2025-02-24T16:33:40.7629009Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7629142Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7629314Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7629428Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7629502Z E           
2025-02-24T16:33:40.7629616Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7629874Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7630140Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7630150Z 
2025-02-24T16:33:40.7630457Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7630465Z 
2025-02-24T16:33:40.7630630Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7630634Z 
2025-02-24T16:33:40.7630857Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff51233bdd0>
2025-02-24T16:33:40.7631064Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff51233a1e0>, attr = 'f_lu'
2025-02-24T16:33:40.7631069Z 
2025-02-24T16:33:40.7631200Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7631315Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7631398Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7631472Z         try:
2025-02-24T16:33:40.7631729Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7631808Z         except KeyError:
2025-02-24T16:33:40.7631946Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7632014Z     
2025-02-24T16:33:40.7632100Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7632194Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7632285Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7632419Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7632503Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7632595Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7632702Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7632706Z 
2025-02-24T16:33:40.7632833Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7632942Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7633093Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7633165Z     ???
2025-02-24T16:33:40.7633275Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7633280Z 
2025-02-24T16:33:40.7633351Z >   ???
2025-02-24T16:33:40.7633475Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7633627Z E   
2025-02-24T16:33:40.7633756Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7633870Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7633944Z E          ...
2025-02-24T16:33:40.7634028Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7634161Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7634271Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7634346Z E          ...
2025-02-24T16:33:40.7634435Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7634560Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7634667Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7634672Z 
2025-02-24T16:33:40.7634760Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7634987Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] _
2025-02-24T16:33:40.7634995Z 
2025-02-24T16:33:40.7635122Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7635253Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7635351Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7635482Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7635610Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7635705Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7635784Z err_msg = None
2025-02-24T16:33:40.7635788Z 
2025-02-24T16:33:40.7635899Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7635980Z         if err_msg is None:
2025-02-24T16:33:40.7636076Z             if left.shape != right.shape:
2025-02-24T16:33:40.7636196Z                 raise_assert_detail(
2025-02-24T16:33:40.7636453Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7636581Z                 )
2025-02-24T16:33:40.7636699Z     
2025-02-24T16:33:40.7636821Z             diff = 0
2025-02-24T16:33:40.7636935Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7637026Z                 # count up differences
2025-02-24T16:33:40.7637195Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7637435Z                     diff += 1
2025-02-24T16:33:40.7637523Z     
2025-02-24T16:33:40.7637767Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7637918Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7638089Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7638207Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7638284Z E           
2025-02-24T16:33:40.7638399Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7638660Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7638922Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7638930Z 
2025-02-24T16:33:40.7639241Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7639348Z 
2025-02-24T16:33:40.7639527Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7639532Z 
2025-02-24T16:33:40.7639754Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512160590>
2025-02-24T16:33:40.7639927Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff51233a1e0>
2025-02-24T16:33:40.7640005Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.7640015Z 
2025-02-24T16:33:40.7640151Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7640267Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7640350Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7640427Z         try:
2025-02-24T16:33:40.7640565Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7640650Z         except KeyError:
2025-02-24T16:33:40.7640790Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7640857Z     
2025-02-24T16:33:40.7640947Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7641041Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7641132Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7641264Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7641352Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7641443Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7641551Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7641627Z             else:
2025-02-24T16:33:40.7641721Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7641830Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7641838Z 
2025-02-24T16:33:40.7641962Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7642077Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7642225Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7642298Z     ???
2025-02-24T16:33:40.7642410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7642415Z 
2025-02-24T16:33:40.7642481Z >   ???
2025-02-24T16:33:40.7642611Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7642682Z E   
2025-02-24T16:33:40.7642808Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7642921Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7642990Z E          ...
2025-02-24T16:33:40.7643080Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7643211Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7643435Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7643509Z E          ...
2025-02-24T16:33:40.7643593Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7643721Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7643830Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7643834Z 
2025-02-24T16:33:40.7643925Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7644145Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] _
2025-02-24T16:33:40.7644155Z 
2025-02-24T16:33:40.7644281Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7644413Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7644506Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7644644Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7644767Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7644863Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7644940Z err_msg = None
2025-02-24T16:33:40.7645023Z 
2025-02-24T16:33:40.7645133Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7645221Z         if err_msg is None:
2025-02-24T16:33:40.7645316Z             if left.shape != right.shape:
2025-02-24T16:33:40.7645404Z                 raise_assert_detail(
2025-02-24T16:33:40.7645549Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7645620Z                 )
2025-02-24T16:33:40.7645690Z     
2025-02-24T16:33:40.7645761Z             diff = 0
2025-02-24T16:33:40.7645874Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7645960Z                 # count up differences
2025-02-24T16:33:40.7646136Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7646219Z                     diff += 1
2025-02-24T16:33:40.7646285Z     
2025-02-24T16:33:40.7646376Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7646511Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7646686Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7646795Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7646870Z E           
2025-02-24T16:33:40.7646986Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7647370Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7647641Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7647650Z 
2025-02-24T16:33:40.7647964Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7647969Z 
2025-02-24T16:33:40.7648137Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7648141Z 
2025-02-24T16:33:40.7648370Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512160650>
2025-02-24T16:33:40.7648536Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff51233a1e0>
2025-02-24T16:33:40.7648619Z attr = 'beta_sobolev'
2025-02-24T16:33:40.7648739Z 
2025-02-24T16:33:40.7648885Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7648998Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7649087Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7649155Z         try:
2025-02-24T16:33:40.7649302Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7649392Z         except KeyError:
2025-02-24T16:33:40.7649531Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7649601Z     
2025-02-24T16:33:40.7649688Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7649782Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7649869Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7650002Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7650095Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7650183Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7650296Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7650369Z             else:
2025-02-24T16:33:40.7650470Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7650575Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7650580Z 
2025-02-24T16:33:40.7650709Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7650937Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7651083Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7651159Z     ???
2025-02-24T16:33:40.7651265Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7651269Z 
2025-02-24T16:33:40.7651340Z >   ???
2025-02-24T16:33:40.7651470Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7651537Z E   
2025-02-24T16:33:40.7651667Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7651778Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7651855Z E          ...
2025-02-24T16:33:40.7651940Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7652074Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7652190Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7652263Z E          ...
2025-02-24T16:33:40.7652352Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7652476Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7652585Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7652590Z 
2025-02-24T16:33:40.7652678Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7652888Z __ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-j_blues] __
2025-02-24T16:33:40.7652892Z 
2025-02-24T16:33:40.7653026Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7653158Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7653257Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7653394Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7653522Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7653622Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7653694Z err_msg = None
2025-02-24T16:33:40.7653699Z 
2025-02-24T16:33:40.7653811Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7653891Z         if err_msg is None:
2025-02-24T16:33:40.7653990Z             if left.shape != right.shape:
2025-02-24T16:33:40.7654078Z                 raise_assert_detail(
2025-02-24T16:33:40.7654221Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7654298Z                 )
2025-02-24T16:33:40.7654452Z     
2025-02-24T16:33:40.7654528Z             diff = 0
2025-02-24T16:33:40.7654700Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7654863Z                 # count up differences
2025-02-24T16:33:40.7655173Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7655277Z                     diff += 1
2025-02-24T16:33:40.7655352Z     
2025-02-24T16:33:40.7655440Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7655582Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7655748Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7655864Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7655938Z E           
2025-02-24T16:33:40.7656051Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7656312Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7656575Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7656731Z 
2025-02-24T16:33:40.7657040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7657045Z 
2025-02-24T16:33:40.7657216Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7657221Z 
2025-02-24T16:33:40.7657582Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121607d0>
2025-02-24T16:33:40.7657757Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff51233a1e0>
2025-02-24T16:33:40.7657834Z attr = 'j_blues'
2025-02-24T16:33:40.7657839Z 
2025-02-24T16:33:40.7657973Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7658091Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7658178Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7658251Z         try:
2025-02-24T16:33:40.7658394Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7658473Z         except KeyError:
2025-02-24T16:33:40.7658615Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7658682Z     
2025-02-24T16:33:40.7658770Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7658862Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7658954Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7659088Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7659176Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7659267Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7659374Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7659449Z             else:
2025-02-24T16:33:40.7659546Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7659657Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7659661Z 
2025-02-24T16:33:40.7659789Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7659898Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7660045Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7660114Z     ???
2025-02-24T16:33:40.7660227Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7660232Z 
2025-02-24T16:33:40.7660303Z >   ???
2025-02-24T16:33:40.7660551Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7660623Z E   
2025-02-24T16:33:40.7660751Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7660866Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7660936Z E          ...
2025-02-24T16:33:40.7661030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7661162Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7661272Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7661345Z E          ...
2025-02-24T16:33:40.7661432Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7661560Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7661663Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7661667Z 
2025-02-24T16:33:40.7661762Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7661974Z __ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines] ___
2025-02-24T16:33:40.7661983Z 
2025-02-24T16:33:40.7662117Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7662258Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7662500Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7662638Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7662769Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7662861Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7662940Z err_msg = None
2025-02-24T16:33:40.7662944Z 
2025-02-24T16:33:40.7663057Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7663144Z         if err_msg is None:
2025-02-24T16:33:40.7663247Z             if left.shape != right.shape:
2025-02-24T16:33:40.7663334Z                 raise_assert_detail(
2025-02-24T16:33:40.7663481Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7663553Z                 )
2025-02-24T16:33:40.7663627Z     
2025-02-24T16:33:40.7663701Z             diff = 0
2025-02-24T16:33:40.7663825Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7663918Z                 # count up differences
2025-02-24T16:33:40.7664087Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7664171Z                     diff += 1
2025-02-24T16:33:40.7664241Z     
2025-02-24T16:33:40.7664334Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7664472Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7664646Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7664760Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7664834Z E           
2025-02-24T16:33:40.7664949Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7665206Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7665477Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7665482Z 
2025-02-24T16:33:40.7665788Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7665874Z 
2025-02-24T16:33:40.7666043Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7666048Z 
2025-02-24T16:33:40.7666276Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512161550>
2025-02-24T16:33:40.7666448Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c14a10>
2025-02-24T16:33:40.7666524Z attr = 'lines'
2025-02-24T16:33:40.7666528Z 
2025-02-24T16:33:40.7666667Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7666779Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7666871Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7666945Z         try:
2025-02-24T16:33:40.7667082Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7667166Z         except KeyError:
2025-02-24T16:33:40.7667422Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7667496Z     
2025-02-24T16:33:40.7667587Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7667684Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7667779Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7667909Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7668000Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7668200Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7668313Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7668384Z             else:
2025-02-24T16:33:40.7668484Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7668597Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7668601Z 
2025-02-24T16:33:40.7668724Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7668839Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7668981Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7669061Z     ???
2025-02-24T16:33:40.7669169Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7669179Z 
2025-02-24T16:33:40.7669247Z >   ???
2025-02-24T16:33:40.7669375Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7669443Z E   
2025-02-24T16:33:40.7669577Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7669687Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7669763Z E          ...
2025-02-24T16:33:40.7669853Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7669981Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7670098Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7670169Z E          ...
2025-02-24T16:33:40.7670259Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7670382Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7670494Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7670499Z 
2025-02-24T16:33:40.7670595Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7670856Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] _
2025-02-24T16:33:40.7670862Z 
2025-02-24T16:33:40.7671090Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512161610>
2025-02-24T16:33:40.7671256Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c14a10>
2025-02-24T16:33:40.7671350Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.7671355Z 
2025-02-24T16:33:40.7671493Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7671604Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7671692Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7671761Z         try:
2025-02-24T16:33:40.7683097Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7683519Z         except KeyError:
2025-02-24T16:33:40.7683699Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7683777Z     
2025-02-24T16:33:40.7683870Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7683977Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7684068Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7684225Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7684317Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7684412Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7684535Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7684540Z 
2025-02-24T16:33:40.7684678Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7684803Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7684809Z 
2025-02-24T16:33:40.7684951Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7685049Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7685163Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7685250Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7685398Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7685607Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7685718Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7685800Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7685877Z err_msg = None
2025-02-24T16:33:40.7685882Z 
2025-02-24T16:33:40.7686004Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7686087Z         if err_msg is None:
2025-02-24T16:33:40.7686189Z             if left.shape != right.shape:
2025-02-24T16:33:40.7686273Z                 raise_assert_detail(
2025-02-24T16:33:40.7686431Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7686505Z                 )
2025-02-24T16:33:40.7686582Z     
2025-02-24T16:33:40.7686659Z             diff = 0
2025-02-24T16:33:40.7686780Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7686874Z                 # count up differences
2025-02-24T16:33:40.7687056Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7687140Z                     diff += 1
2025-02-24T16:33:40.7687208Z     
2025-02-24T16:33:40.7687433Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7687586Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7687760Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7687872Z E           AssertionError: Series are different
2025-02-24T16:33:40.7687944Z E           
2025-02-24T16:33:40.7688054Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.7688433Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7688773Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7689110Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7689233Z 
2025-02-24T16:33:40.7689559Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7689831Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] _
2025-02-24T16:33:40.7689836Z 
2025-02-24T16:33:40.7690071Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121616d0>
2025-02-24T16:33:40.7690246Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c14a10>
2025-02-24T16:33:40.7690338Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.7690343Z 
2025-02-24T16:33:40.7690492Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7690612Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7690708Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7690783Z         try:
2025-02-24T16:33:40.7690932Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7691017Z         except KeyError:
2025-02-24T16:33:40.7691156Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7691336Z     
2025-02-24T16:33:40.7691425Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7691524Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7691619Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7691752Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7691844Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7691932Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7692045Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7692049Z 
2025-02-24T16:33:40.7692177Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7692301Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7692306Z 
2025-02-24T16:33:40.7692447Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7692531Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7692647Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7692726Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7692873Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7692964Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7693073Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7693157Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7693232Z err_msg = None
2025-02-24T16:33:40.7693236Z 
2025-02-24T16:33:40.7693354Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7693437Z         if err_msg is None:
2025-02-24T16:33:40.7693540Z             if left.shape != right.shape:
2025-02-24T16:33:40.7693630Z                 raise_assert_detail(
2025-02-24T16:33:40.7693777Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7693856Z                 )
2025-02-24T16:33:40.7693927Z     
2025-02-24T16:33:40.7694005Z             diff = 0
2025-02-24T16:33:40.7694118Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7694212Z                 # count up differences
2025-02-24T16:33:40.7694389Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7694470Z                     diff += 1
2025-02-24T16:33:40.7694542Z     
2025-02-24T16:33:40.7694632Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7694774Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7695034Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7695144Z E           AssertionError: Series are different
2025-02-24T16:33:40.7695219Z E           
2025-02-24T16:33:40.7695322Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.7695700Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7696088Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7696464Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7696575Z 
2025-02-24T16:33:40.7696896Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7697113Z ____ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-nu] ____
2025-02-24T16:33:40.7697118Z 
2025-02-24T16:33:40.7697376Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7697518Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7697625Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7697760Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7697945Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7698115Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7698250Z err_msg = None
2025-02-24T16:33:40.7698258Z 
2025-02-24T16:33:40.7698454Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7698547Z         if err_msg is None:
2025-02-24T16:33:40.7698647Z             if left.shape != right.shape:
2025-02-24T16:33:40.7698732Z                 raise_assert_detail(
2025-02-24T16:33:40.7698883Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7698964Z                 )
2025-02-24T16:33:40.7699037Z     
2025-02-24T16:33:40.7699113Z             diff = 0
2025-02-24T16:33:40.7699226Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7699317Z                 # count up differences
2025-02-24T16:33:40.7699489Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7699605Z                     diff += 1
2025-02-24T16:33:40.7699673Z     
2025-02-24T16:33:40.7699765Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7699906Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7700074Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7700190Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7700261Z E           
2025-02-24T16:33:40.7700379Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7700639Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7701032Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7701041Z 
2025-02-24T16:33:40.7701350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7701355Z 
2025-02-24T16:33:40.7701530Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7701535Z 
2025-02-24T16:33:40.7701764Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512161910>
2025-02-24T16:33:40.7701969Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c14a10>, attr = 'nu'
2025-02-24T16:33:40.7701974Z 
2025-02-24T16:33:40.7702113Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7702233Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7702425Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7702493Z         try:
2025-02-24T16:33:40.7702634Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7702714Z         except KeyError:
2025-02-24T16:33:40.7702857Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7702925Z     
2025-02-24T16:33:40.7703016Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7703113Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7703202Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7703336Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7703424Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7703521Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7703631Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7703635Z 
2025-02-24T16:33:40.7703767Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7703887Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7704034Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7704110Z     ???
2025-02-24T16:33:40.7704219Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7704224Z 
2025-02-24T16:33:40.7704296Z >   ???
2025-02-24T16:33:40.7704427Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7704495Z E   
2025-02-24T16:33:40.7704626Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7704740Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7704816Z E          ...
2025-02-24T16:33:40.7704906Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7705042Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7705156Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7705229Z E          ...
2025-02-24T16:33:40.7705318Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7705440Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7705550Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7705554Z 
2025-02-24T16:33:40.7705641Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7705878Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] _
2025-02-24T16:33:40.7705883Z 
2025-02-24T16:33:40.7706017Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7706234Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7706335Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7706465Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7706601Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7706696Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7706769Z err_msg = None
2025-02-24T16:33:40.7706774Z 
2025-02-24T16:33:40.7706890Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7706970Z         if err_msg is None:
2025-02-24T16:33:40.7707070Z             if left.shape != right.shape:
2025-02-24T16:33:40.7707158Z                 raise_assert_detail(
2025-02-24T16:33:40.7707409Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7707488Z                 )
2025-02-24T16:33:40.7707556Z     
2025-02-24T16:33:40.7707632Z             diff = 0
2025-02-24T16:33:40.7707744Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7707838Z                 # count up differences
2025-02-24T16:33:40.7708012Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7708207Z                     diff += 1
2025-02-24T16:33:40.7708320Z     
2025-02-24T16:33:40.7708479Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7708722Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7708943Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7709063Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7709139Z E           
2025-02-24T16:33:40.7709249Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7709514Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7709776Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7709791Z 
2025-02-24T16:33:40.7710092Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7710097Z 
2025-02-24T16:33:40.7710271Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7710276Z 
2025-02-24T16:33:40.7710504Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121619d0>
2025-02-24T16:33:40.7710677Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c14a10>
2025-02-24T16:33:40.7710762Z attr = 'wavelength_cm'
2025-02-24T16:33:40.7710767Z 
2025-02-24T16:33:40.7710904Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7711026Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7711110Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7711185Z         try:
2025-02-24T16:33:40.7711330Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7711410Z         except KeyError:
2025-02-24T16:33:40.7711560Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7711627Z     
2025-02-24T16:33:40.7711720Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7711815Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7711909Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7712176Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7712260Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7712354Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7712468Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7712473Z 
2025-02-24T16:33:40.7712609Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7712723Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7712878Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7712952Z     ???
2025-02-24T16:33:40.7713063Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7713068Z 
2025-02-24T16:33:40.7713141Z >   ???
2025-02-24T16:33:40.7713269Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7713341Z E   
2025-02-24T16:33:40.7713474Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7713589Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7713664Z E          ...
2025-02-24T16:33:40.7713752Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7713887Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7714081Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7714155Z E          ...
2025-02-24T16:33:40.7714243Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7714365Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7714477Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7714482Z 
2025-02-24T16:33:40.7714576Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7714790Z ___ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-f_lu] ___
2025-02-24T16:33:40.7714795Z 
2025-02-24T16:33:40.7714928Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7715060Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7715163Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7715296Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7715426Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7715533Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7715611Z err_msg = None
2025-02-24T16:33:40.7715622Z 
2025-02-24T16:33:40.7715735Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7715825Z         if err_msg is None:
2025-02-24T16:33:40.7715922Z             if left.shape != right.shape:
2025-02-24T16:33:40.7716009Z                 raise_assert_detail(
2025-02-24T16:33:40.7716153Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7716231Z                 )
2025-02-24T16:33:40.7716303Z     
2025-02-24T16:33:40.7716374Z             diff = 0
2025-02-24T16:33:40.7716491Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7716580Z                 # count up differences
2025-02-24T16:33:40.7716757Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7716840Z                     diff += 1
2025-02-24T16:33:40.7716914Z     
2025-02-24T16:33:40.7717009Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7717151Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7717463Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7717579Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7717655Z E           
2025-02-24T16:33:40.7717770Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7718173Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7718443Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7718449Z 
2025-02-24T16:33:40.7718759Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7718771Z 
2025-02-24T16:33:40.7718941Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7718946Z 
2025-02-24T16:33:40.7719176Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512161a90>
2025-02-24T16:33:40.7719378Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c14a10>, attr = 'f_lu'
2025-02-24T16:33:40.7719383Z 
2025-02-24T16:33:40.7719525Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7719755Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7719839Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7719914Z         try:
2025-02-24T16:33:40.7720054Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7720137Z         except KeyError:
2025-02-24T16:33:40.7720277Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7720351Z     
2025-02-24T16:33:40.7720441Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7720533Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7720629Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7720765Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7720853Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7720941Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7721055Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7721060Z 
2025-02-24T16:33:40.7721194Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7721306Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7721456Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7721526Z     ???
2025-02-24T16:33:40.7721640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7721645Z 
2025-02-24T16:33:40.7721717Z >   ???
2025-02-24T16:33:40.7721843Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7721915Z E   
2025-02-24T16:33:40.7722041Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7722159Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7722229Z E          ...
2025-02-24T16:33:40.7722322Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7722455Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7722566Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7722646Z E          ...
2025-02-24T16:33:40.7722729Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7722857Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7722961Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7722965Z 
2025-02-24T16:33:40.7723058Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7723289Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] _
2025-02-24T16:33:40.7723294Z 
2025-02-24T16:33:40.7723423Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7723645Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7723742Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7723878Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7724009Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7724101Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7724179Z err_msg = None
2025-02-24T16:33:40.7724183Z 
2025-02-24T16:33:40.7724293Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7724378Z         if err_msg is None:
2025-02-24T16:33:40.7724479Z             if left.shape != right.shape:
2025-02-24T16:33:40.7724563Z                 raise_assert_detail(
2025-02-24T16:33:40.7724713Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7724786Z                 )
2025-02-24T16:33:40.7724858Z     
2025-02-24T16:33:40.7724929Z             diff = 0
2025-02-24T16:33:40.7725044Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7725139Z                 # count up differences
2025-02-24T16:33:40.7725323Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7725596Z                     diff += 1
2025-02-24T16:33:40.7725724Z     
2025-02-24T16:33:40.7725887Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7726040Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7726222Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7726344Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7726416Z E           
2025-02-24T16:33:40.7726539Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7726806Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7727076Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7727082Z 
2025-02-24T16:33:40.7727505Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7727511Z 
2025-02-24T16:33:40.7727682Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7727687Z 
2025-02-24T16:33:40.7727922Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512162210>
2025-02-24T16:33:40.7728095Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c14a10>
2025-02-24T16:33:40.7728173Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.7728178Z 
2025-02-24T16:33:40.7728320Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7728440Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7728532Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7728604Z         try:
2025-02-24T16:33:40.7728746Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7728830Z         except KeyError:
2025-02-24T16:33:40.7728972Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7729043Z     
2025-02-24T16:33:40.7729128Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7729227Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7729321Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7729583Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7729672Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7729761Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7729877Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7729952Z             else:
2025-02-24T16:33:40.7730050Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7730161Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7730166Z 
2025-02-24T16:33:40.7730290Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7730407Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7730553Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7730626Z     ???
2025-02-24T16:33:40.7730734Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7730747Z 
2025-02-24T16:33:40.7730815Z >   ???
2025-02-24T16:33:40.7730945Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7731013Z E   
2025-02-24T16:33:40.7731145Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7731256Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7731468Z E          ...
2025-02-24T16:33:40.7731565Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7731693Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7731809Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7731878Z E          ...
2025-02-24T16:33:40.7731969Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7732092Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7732208Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7732212Z 
2025-02-24T16:33:40.7732306Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7732533Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] _
2025-02-24T16:33:40.7732538Z 
2025-02-24T16:33:40.7732677Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7732804Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7732910Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7733048Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7733170Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7733267Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7733340Z err_msg = None
2025-02-24T16:33:40.7733345Z 
2025-02-24T16:33:40.7733463Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7733548Z         if err_msg is None:
2025-02-24T16:33:40.7733648Z             if left.shape != right.shape:
2025-02-24T16:33:40.7733736Z                 raise_assert_detail(
2025-02-24T16:33:40.7733884Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7733962Z                 )
2025-02-24T16:33:40.7734030Z     
2025-02-24T16:33:40.7734110Z             diff = 0
2025-02-24T16:33:40.7734230Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7734319Z                 # count up differences
2025-02-24T16:33:40.7734494Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7734572Z                     diff += 1
2025-02-24T16:33:40.7734646Z     
2025-02-24T16:33:40.7734734Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7734879Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7735053Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7735254Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7735331Z E           
2025-02-24T16:33:40.7735445Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7735711Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7735979Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7735985Z 
2025-02-24T16:33:40.7736295Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7736303Z 
2025-02-24T16:33:40.7736477Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7736481Z 
2025-02-24T16:33:40.7736710Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121622d0>
2025-02-24T16:33:40.7736953Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c14a10>
2025-02-24T16:33:40.7737038Z attr = 'beta_sobolev'
2025-02-24T16:33:40.7737043Z 
2025-02-24T16:33:40.7737179Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7737424Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7737519Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7737590Z         try:
2025-02-24T16:33:40.7737737Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7737816Z         except KeyError:
2025-02-24T16:33:40.7737958Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7738031Z     
2025-02-24T16:33:40.7738125Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7738223Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7738312Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7738450Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7738541Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7738632Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7738741Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7738820Z             else:
2025-02-24T16:33:40.7738920Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7739027Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7739031Z 
2025-02-24T16:33:40.7739161Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7739278Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7739431Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7739506Z     ???
2025-02-24T16:33:40.7739614Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7739618Z 
2025-02-24T16:33:40.7739689Z >   ???
2025-02-24T16:33:40.7739815Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7739892Z E   
2025-02-24T16:33:40.7740021Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7740136Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7740209Z E          ...
2025-02-24T16:33:40.7740296Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7740429Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7740541Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7740617Z E          ...
2025-02-24T16:33:40.7740702Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7740977Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7741088Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7741092Z 
2025-02-24T16:33:40.7741181Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7741404Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-j_blues] __
2025-02-24T16:33:40.7741413Z 
2025-02-24T16:33:40.7741544Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7741683Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7741787Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7741919Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7742050Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7742141Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7742223Z err_msg = None
2025-02-24T16:33:40.7742228Z 
2025-02-24T16:33:40.7742343Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7742423Z         if err_msg is None:
2025-02-24T16:33:40.7742523Z             if left.shape != right.shape:
2025-02-24T16:33:40.7742606Z                 raise_assert_detail(
2025-02-24T16:33:40.7742867Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7742937Z                 )
2025-02-24T16:33:40.7743011Z     
2025-02-24T16:33:40.7743087Z             diff = 0
2025-02-24T16:33:40.7743196Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7743288Z                 # count up differences
2025-02-24T16:33:40.7743460Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7743542Z                     diff += 1
2025-02-24T16:33:40.7743609Z     
2025-02-24T16:33:40.7743703Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7743872Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7744180Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7744381Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7744503Z E           
2025-02-24T16:33:40.7744624Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7744887Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7745152Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7745162Z 
2025-02-24T16:33:40.7745474Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7745479Z 
2025-02-24T16:33:40.7745655Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7745660Z 
2025-02-24T16:33:40.7745881Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512162450>
2025-02-24T16:33:40.7746054Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e1c14a10>
2025-02-24T16:33:40.7746132Z attr = 'j_blues'
2025-02-24T16:33:40.7746136Z 
2025-02-24T16:33:40.7746278Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7746398Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7746482Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7746556Z         try:
2025-02-24T16:33:40.7746788Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7746876Z         except KeyError:
2025-02-24T16:33:40.7747012Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7747086Z     
2025-02-24T16:33:40.7747179Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7747412Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7747513Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7747644Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7747735Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7747824Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7747941Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7748021Z             else:
2025-02-24T16:33:40.7748116Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7748229Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7748237Z 
2025-02-24T16:33:40.7748362Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7748482Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7748630Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7748701Z     ???
2025-02-24T16:33:40.7748937Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7748942Z 
2025-02-24T16:33:40.7749009Z >   ???
2025-02-24T16:33:40.7749146Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7749215Z E   
2025-02-24T16:33:40.7749345Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7749465Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7749535Z E          ...
2025-02-24T16:33:40.7749627Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7749754Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7749876Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7749946Z E          ...
2025-02-24T16:33:40.7750035Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7750163Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7750269Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7750277Z 
2025-02-24T16:33:40.7750372Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7750578Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines] ___
2025-02-24T16:33:40.7750582Z 
2025-02-24T16:33:40.7750716Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7750849Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7750946Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7751086Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7751210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7751307Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7751385Z err_msg = None
2025-02-24T16:33:40.7751389Z 
2025-02-24T16:33:40.7751502Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7751588Z         if err_msg is None:
2025-02-24T16:33:40.7751682Z             if left.shape != right.shape:
2025-02-24T16:33:40.7751772Z                 raise_assert_detail(
2025-02-24T16:33:40.7751915Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7751992Z                 )
2025-02-24T16:33:40.7752065Z     
2025-02-24T16:33:40.7752139Z             diff = 0
2025-02-24T16:33:40.7752254Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7752341Z                 # count up differences
2025-02-24T16:33:40.7752633Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7752710Z                     diff += 1
2025-02-24T16:33:40.7752783Z     
2025-02-24T16:33:40.7752877Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7753013Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7753192Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7753305Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7753385Z E           
2025-02-24T16:33:40.7753493Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7753759Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7754028Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7754108Z 
2025-02-24T16:33:40.7754411Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7754422Z 
2025-02-24T16:33:40.7754588Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7754593Z 
2025-02-24T16:33:40.7754825Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121631d0>
2025-02-24T16:33:40.7754990Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4d788a9c0>
2025-02-24T16:33:40.7755072Z attr = 'lines'
2025-02-24T16:33:40.7755076Z 
2025-02-24T16:33:40.7755217Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7755335Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7755423Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7755493Z         try:
2025-02-24T16:33:40.7755637Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7755721Z         except KeyError:
2025-02-24T16:33:40.7755862Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7755934Z     
2025-02-24T16:33:40.7756020Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7756123Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7756211Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7756348Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7756432Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7756524Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7756640Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7756715Z             else:
2025-02-24T16:33:40.7756813Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7756917Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7756922Z 
2025-02-24T16:33:40.7757050Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7757164Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7757445Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7757520Z     ???
2025-02-24T16:33:40.7757628Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7757633Z 
2025-02-24T16:33:40.7757703Z >   ???
2025-02-24T16:33:40.7757827Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7757903Z E   
2025-02-24T16:33:40.7758034Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7758144Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7758346Z E          ...
2025-02-24T16:33:40.7758433Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7758563Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7758675Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7758748Z E          ...
2025-02-24T16:33:40.7758840Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7758964Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7759071Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7759076Z 
2025-02-24T16:33:40.7759163Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7759438Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] _
2025-02-24T16:33:40.7759443Z 
2025-02-24T16:33:40.7759666Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512163290>
2025-02-24T16:33:40.7759828Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4d788a9c0>
2025-02-24T16:33:40.7759927Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.7759932Z 
2025-02-24T16:33:40.7760066Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7760183Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7760266Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7760472Z         try:
2025-02-24T16:33:40.7760617Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7760696Z         except KeyError:
2025-02-24T16:33:40.7760836Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7760903Z     
2025-02-24T16:33:40.7761089Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7761181Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7761274Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7761502Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7761642Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7761812Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7762322Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7762635Z 
2025-02-24T16:33:40.7762836Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7763335Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7763671Z 
2025-02-24T16:33:40.7763893Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7764380Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7764827Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7765328Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7765871Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7766446Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7766931Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7767633Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7768059Z err_msg = None
2025-02-24T16:33:40.7768264Z 
2025-02-24T16:33:40.7768469Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7768960Z         if err_msg is None:
2025-02-24T16:33:40.7769384Z             if left.shape != right.shape:
2025-02-24T16:33:40.7769849Z                 raise_assert_detail(
2025-02-24T16:33:40.7770416Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7770926Z                 )
2025-02-24T16:33:40.7771230Z     
2025-02-24T16:33:40.7771520Z             diff = 0
2025-02-24T16:33:40.7771807Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7772102Z                 # count up differences
2025-02-24T16:33:40.7772444Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7772938Z                     diff += 1
2025-02-24T16:33:40.7773150Z     
2025-02-24T16:33:40.7773332Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7773641Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7774037Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7774412Z E           AssertionError: Series are different
2025-02-24T16:33:40.7774672Z E           
2025-02-24T16:33:40.7774877Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.7775436Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7776228Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7777087Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7777709Z 
2025-02-24T16:33:40.7778268Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7779181Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] _
2025-02-24T16:33:40.7779543Z 
2025-02-24T16:33:40.7779768Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512163350>
2025-02-24T16:33:40.7780251Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4d788a9c0>
2025-02-24T16:33:40.7780595Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.7780757Z 
2025-02-24T16:33:40.7780903Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7781242Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7781531Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7781748Z         try:
2025-02-24T16:33:40.7782112Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7782631Z         except KeyError:
2025-02-24T16:33:40.7783062Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7783353Z     
2025-02-24T16:33:40.7783533Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7783786Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7784051Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7784357Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7784662Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7784906Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7785192Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7785390Z 
2025-02-24T16:33:40.7785527Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7785856Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7786059Z 
2025-02-24T16:33:40.7786203Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7786517Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7786793Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7787071Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7787689Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7788015Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7788290Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7788569Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7788801Z err_msg = None
2025-02-24T16:33:40.7788914Z 
2025-02-24T16:33:40.7789033Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7789316Z         if err_msg is None:
2025-02-24T16:33:40.7789553Z             if left.shape != right.shape:
2025-02-24T16:33:40.7789815Z                 raise_assert_detail(
2025-02-24T16:33:40.7790126Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7790430Z                 )
2025-02-24T16:33:40.7790609Z     
2025-02-24T16:33:40.7790775Z             diff = 0
2025-02-24T16:33:40.7791006Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7791296Z                 # count up differences
2025-02-24T16:33:40.7791633Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7791975Z                     diff += 1
2025-02-24T16:33:40.7792189Z     
2025-02-24T16:33:40.7792495Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7792802Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7793198Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7793565Z E           AssertionError: Series are different
2025-02-24T16:33:40.7793821Z E           
2025-02-24T16:33:40.7794027Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.7794584Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7795412Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7796241Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7796705Z 
2025-02-24T16:33:40.7797022Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7797747Z ____ TestPlasma.test_plasma_properties[disable_electron_scattering:True-nu] ____
2025-02-24T16:33:40.7798042Z 
2025-02-24T16:33:40.7798177Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7798523Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7798836Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7799158Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7799505Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7799980Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7800235Z err_msg = None
2025-02-24T16:33:40.7800345Z 
2025-02-24T16:33:40.7800527Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7800991Z         if err_msg is None:
2025-02-24T16:33:40.7801377Z             if left.shape != right.shape:
2025-02-24T16:33:40.7801697Z                 raise_assert_detail(
2025-02-24T16:33:40.7802001Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7802302Z                 )
2025-02-24T16:33:40.7802489Z     
2025-02-24T16:33:40.7802651Z             diff = 0
2025-02-24T16:33:40.7802883Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7803166Z                 # count up differences
2025-02-24T16:33:40.7803498Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7803836Z                     diff += 1
2025-02-24T16:33:40.7804045Z     
2025-02-24T16:33:40.7804227Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7804534Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7804929Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7805301Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7805696Z E           
2025-02-24T16:33:40.7805912Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7806365Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7806968Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7807430Z 
2025-02-24T16:33:40.7807748Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7808165Z 
2025-02-24T16:33:40.7808337Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7808595Z 
2025-02-24T16:33:40.7808819Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512163590>
2025-02-24T16:33:40.7809327Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4d788a9c0>, attr = 'nu'
2025-02-24T16:33:40.7809617Z 
2025-02-24T16:33:40.7809761Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7810100Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7810398Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7810612Z         try:
2025-02-24T16:33:40.7810864Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7811170Z         except KeyError:
2025-02-24T16:33:40.7811440Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7811732Z     
2025-02-24T16:33:40.7811911Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7812165Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7812429Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7812736Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7813040Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7813285Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7813568Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7813765Z 
2025-02-24T16:33:40.7813891Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7814213Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7814684Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7814987Z     ???
2025-02-24T16:33:40.7815194Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7815392Z 
2025-02-24T16:33:40.7815465Z >   ???
2025-02-24T16:33:40.7815685Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7815966Z E   
2025-02-24T16:33:40.7816184Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7816508Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7816772Z E          ...
2025-02-24T16:33:40.7816969Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7817380Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7817718Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7817981Z E          ...
2025-02-24T16:33:40.7818172Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7818473Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7818789Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7818980Z 
2025-02-24T16:33:40.7819070Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7819447Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-wavelength_cm] _
2025-02-24T16:33:40.7819913Z 
2025-02-24T16:33:40.7820049Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7820397Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7821329Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7821654Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7822101Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7822423Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7822679Z err_msg = None
2025-02-24T16:33:40.7822883Z 
2025-02-24T16:33:40.7823002Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7823280Z         if err_msg is None:
2025-02-24T16:33:40.7823513Z             if left.shape != right.shape:
2025-02-24T16:33:40.7823782Z                 raise_assert_detail(
2025-02-24T16:33:40.7824091Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7824389Z                 )
2025-02-24T16:33:40.7824571Z     
2025-02-24T16:33:40.7824734Z             diff = 0
2025-02-24T16:33:40.7824994Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7825276Z                 # count up differences
2025-02-24T16:33:40.7825612Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7825950Z                     diff += 1
2025-02-24T16:33:40.7826160Z     
2025-02-24T16:33:40.7826343Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7826650Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7827044Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7827742Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7828109Z E           
2025-02-24T16:33:40.7828475Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7829253Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7829859Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7830399Z 
2025-02-24T16:33:40.7830718Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7831110Z 
2025-02-24T16:33:40.7831284Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7831537Z 
2025-02-24T16:33:40.7831764Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512163650>
2025-02-24T16:33:40.7832238Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4d788a9c0>
2025-02-24T16:33:40.7832568Z attr = 'wavelength_cm'
2025-02-24T16:33:40.7832700Z 
2025-02-24T16:33:40.7832839Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7833174Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7833464Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7833686Z         try:
2025-02-24T16:33:40.7833930Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7834237Z         except KeyError:
2025-02-24T16:33:40.7834505Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7834797Z     
2025-02-24T16:33:40.7834980Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7835352Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7835616Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7835923Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7836227Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7836470Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7836753Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7836950Z 
2025-02-24T16:33:40.7837076Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7837614Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7837969Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7838271Z     ???
2025-02-24T16:33:40.7838481Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7838678Z 
2025-02-24T16:33:40.7838751Z >   ???
2025-02-24T16:33:40.7838972Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7839264Z E   
2025-02-24T16:33:40.7839485Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7839806Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7840070Z E          ...
2025-02-24T16:33:40.7840266Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7840573Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7840900Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7841167Z E          ...
2025-02-24T16:33:40.7841360Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7841660Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7841972Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7842162Z 
2025-02-24T16:33:40.7842252Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7842758Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:True-f_lu] ___
2025-02-24T16:33:40.7843287Z 
2025-02-24T16:33:40.7843507Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7843922Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7844241Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7844553Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7844901Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7845344Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7845599Z err_msg = None
2025-02-24T16:33:40.7845706Z 
2025-02-24T16:33:40.7845821Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7846094Z         if err_msg is None:
2025-02-24T16:33:40.7846325Z             if left.shape != right.shape:
2025-02-24T16:33:40.7846591Z                 raise_assert_detail(
2025-02-24T16:33:40.7846898Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7847199Z                 )
2025-02-24T16:33:40.7847500Z     
2025-02-24T16:33:40.7847664Z             diff = 0
2025-02-24T16:33:40.7847902Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7848182Z                 # count up differences
2025-02-24T16:33:40.7848515Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7848852Z                     diff += 1
2025-02-24T16:33:40.7849066Z     
2025-02-24T16:33:40.7849242Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7849547Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7849941Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7850313Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7850703Z E           
2025-02-24T16:33:40.7850918Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7851370Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7851971Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7852320Z 
2025-02-24T16:33:40.7852634Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7853027Z 
2025-02-24T16:33:40.7853203Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7853454Z 
2025-02-24T16:33:40.7853683Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512163710>
2025-02-24T16:33:40.7854199Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4d788a9c0>, attr = 'f_lu'
2025-02-24T16:33:40.7854493Z 
2025-02-24T16:33:40.7854631Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7854966Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7855247Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7855473Z         try:
2025-02-24T16:33:40.7855718Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7856022Z         except KeyError:
2025-02-24T16:33:40.7856290Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7856578Z     
2025-02-24T16:33:40.7856759Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7857012Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7857378Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7857686Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7857990Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7858236Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7858514Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7858705Z 
2025-02-24T16:33:40.7858838Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7859156Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7859620Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7859915Z     ???
2025-02-24T16:33:40.7860121Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7860321Z 
2025-02-24T16:33:40.7860394Z >   ???
2025-02-24T16:33:40.7860614Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7860889Z E   
2025-02-24T16:33:40.7861290Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7861834Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7862211Z E          ...
2025-02-24T16:33:40.7862416Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7862718Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7863050Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7863316Z E          ...
2025-02-24T16:33:40.7863507Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7863810Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7864122Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7864310Z 
2025-02-24T16:33:40.7864400Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7864776Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] _
2025-02-24T16:33:40.7865229Z 
2025-02-24T16:33:40.7865366Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7865717Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7866031Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7866340Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7866685Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7866996Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7867398Z err_msg = None
2025-02-24T16:33:40.7867583Z 
2025-02-24T16:33:40.7867702Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7867972Z         if err_msg is None:
2025-02-24T16:33:40.7868205Z             if left.shape != right.shape:
2025-02-24T16:33:40.7868468Z                 raise_assert_detail(
2025-02-24T16:33:40.7868772Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7869070Z                 )
2025-02-24T16:33:40.7869249Z     
2025-02-24T16:33:40.7869410Z             diff = 0
2025-02-24T16:33:40.7869639Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7869929Z                 # count up differences
2025-02-24T16:33:40.7870264Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7870600Z                     diff += 1
2025-02-24T16:33:40.7870809Z     
2025-02-24T16:33:40.7870993Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7871300Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7871692Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7872063Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7872341Z E           
2025-02-24T16:33:40.7872556Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7873010Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7873611Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7874112Z 
2025-02-24T16:33:40.7874422Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7889092Z 
2025-02-24T16:33:40.7889378Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7889866Z 
2025-02-24T16:33:40.7890252Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512163e90>
2025-02-24T16:33:40.7890897Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4d788a9c0>
2025-02-24T16:33:40.7891229Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.7891356Z 
2025-02-24T16:33:40.7891503Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7891861Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7892146Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7892374Z         try:
2025-02-24T16:33:40.7892619Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7892920Z         except KeyError:
2025-02-24T16:33:40.7893190Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7893475Z     
2025-02-24T16:33:40.7893832Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7894082Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7894341Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7894644Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7894947Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7895189Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7895470Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7895732Z             else:
2025-02-24T16:33:40.7895934Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7896213Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7896406Z 
2025-02-24T16:33:40.7896536Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7896853Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7897508Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7898015Z     ???
2025-02-24T16:33:40.7898319Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7898521Z 
2025-02-24T16:33:40.7898592Z >   ???
2025-02-24T16:33:40.7898805Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7899070Z E   
2025-02-24T16:33:40.7899285Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7899634Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7899892Z E          ...
2025-02-24T16:33:40.7900080Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7900374Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7900708Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7900968Z E          ...
2025-02-24T16:33:40.7901158Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7901454Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7901775Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7901967Z 
2025-02-24T16:33:40.7902058Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7902439Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-beta_sobolev] _
2025-02-24T16:33:40.7902759Z 
2025-02-24T16:33:40.7902892Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7903249Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7903570Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7904030Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7904383Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7904701Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7904971Z err_msg = None
2025-02-24T16:33:40.7905093Z 
2025-02-24T16:33:40.7905209Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7905483Z         if err_msg is None:
2025-02-24T16:33:40.7905724Z             if left.shape != right.shape:
2025-02-24T16:33:40.7905991Z                 raise_assert_detail(
2025-02-24T16:33:40.7906297Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7906599Z                 )
2025-02-24T16:33:40.7906778Z     
2025-02-24T16:33:40.7906939Z             diff = 0
2025-02-24T16:33:40.7907172Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7907596Z                 # count up differences
2025-02-24T16:33:40.7907933Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7908270Z                     diff += 1
2025-02-24T16:33:40.7908482Z     
2025-02-24T16:33:40.7908661Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7908964Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7909477Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7909856Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7910119Z E           
2025-02-24T16:33:40.7910335Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7910792Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7911403Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7911745Z 
2025-02-24T16:33:40.7912062Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7912455Z 
2025-02-24T16:33:40.7912628Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7912887Z 
2025-02-24T16:33:40.7913110Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512163f50>
2025-02-24T16:33:40.7913593Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4d788a9c0>
2025-02-24T16:33:40.7913920Z attr = 'beta_sobolev'
2025-02-24T16:33:40.7914050Z 
2025-02-24T16:33:40.7914195Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7914530Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7914814Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7915037Z         try:
2025-02-24T16:33:40.7915280Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7915650Z         except KeyError:
2025-02-24T16:33:40.7916126Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7916614Z     
2025-02-24T16:33:40.7916857Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7917112Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7917509Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7917826Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7918134Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7918381Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7918793Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7919062Z             else:
2025-02-24T16:33:40.7919269Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7919551Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7919737Z 
2025-02-24T16:33:40.7919873Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7920197Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7920551Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7920847Z     ???
2025-02-24T16:33:40.7921051Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7921253Z 
2025-02-24T16:33:40.7921324Z >   ???
2025-02-24T16:33:40.7921541Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7921818Z E   
2025-02-24T16:33:40.7922039Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7922366Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7922632Z E          ...
2025-02-24T16:33:40.7922824Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7923127Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7923462Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7923847Z E          ...
2025-02-24T16:33:40.7924032Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7924326Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7924637Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7924825Z 
2025-02-24T16:33:40.7924913Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7925270Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-j_blues] __
2025-02-24T16:33:40.7925571Z 
2025-02-24T16:33:40.7925702Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7926058Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7926379Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7926692Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7927043Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7927461Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7927712Z err_msg = None
2025-02-24T16:33:40.7927828Z 
2025-02-24T16:33:40.7927944Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7928218Z         if err_msg is None:
2025-02-24T16:33:40.7928450Z             if left.shape != right.shape:
2025-02-24T16:33:40.7928709Z                 raise_assert_detail(
2025-02-24T16:33:40.7929014Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7929318Z                 )
2025-02-24T16:33:40.7929508Z     
2025-02-24T16:33:40.7929676Z             diff = 0
2025-02-24T16:33:40.7929911Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7930199Z                 # count up differences
2025-02-24T16:33:40.7930546Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7930892Z                     diff += 1
2025-02-24T16:33:40.7931098Z     
2025-02-24T16:33:40.7931282Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7931588Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7931981Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7932355Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7932686Z E           
2025-02-24T16:33:40.7933064Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7933798Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7934567Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7934915Z 
2025-02-24T16:33:40.7935225Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7935619Z 
2025-02-24T16:33:40.7935795Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7936050Z 
2025-02-24T16:33:40.7936278Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512190110>
2025-02-24T16:33:40.7936759Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4d788a9c0>
2025-02-24T16:33:40.7937082Z attr = 'j_blues'
2025-02-24T16:33:40.7937201Z 
2025-02-24T16:33:40.7937466Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7937930Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7938211Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7938431Z         try:
2025-02-24T16:33:40.7938676Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7938980Z         except KeyError:
2025-02-24T16:33:40.7939568Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7939857Z     
2025-02-24T16:33:40.7940037Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7940297Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7940563Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7940874Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7941179Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7941418Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7941696Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7941962Z             else:
2025-02-24T16:33:40.7942175Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7942469Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7942657Z 
2025-02-24T16:33:40.7942789Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7943115Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7943469Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7943766Z     ???
2025-02-24T16:33:40.7943971Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7944171Z 
2025-02-24T16:33:40.7944238Z >   ???
2025-02-24T16:33:40.7944464Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7944741Z E   
2025-02-24T16:33:40.7944959Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7945280Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7945544Z E          ...
2025-02-24T16:33:40.7945741Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7946045Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7946370Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7946632Z E          ...
2025-02-24T16:33:40.7946823Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7947116Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7947219Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7947224Z 
2025-02-24T16:33:40.7947434Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7947647Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines] __
2025-02-24T16:33:40.7947798Z 
2025-02-24T16:33:40.7947937Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7948073Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7948176Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7948311Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7948435Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7948529Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7948606Z err_msg = None
2025-02-24T16:33:40.7948611Z 
2025-02-24T16:33:40.7948722Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7948808Z         if err_msg is None:
2025-02-24T16:33:40.7948903Z             if left.shape != right.shape:
2025-02-24T16:33:40.7948994Z                 raise_assert_detail(
2025-02-24T16:33:40.7949141Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7949215Z                 )
2025-02-24T16:33:40.7949287Z     
2025-02-24T16:33:40.7949358Z             diff = 0
2025-02-24T16:33:40.7949588Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7949676Z                 # count up differences
2025-02-24T16:33:40.7949854Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7949937Z                     diff += 1
2025-02-24T16:33:40.7950004Z     
2025-02-24T16:33:40.7950095Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7950230Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7950404Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7950515Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7950594Z E           
2025-02-24T16:33:40.7950710Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7950974Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7951432Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7951442Z 
2025-02-24T16:33:40.7951979Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7951991Z 
2025-02-24T16:33:40.7952278Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7952287Z 
2025-02-24T16:33:40.7952550Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512190e90>
2025-02-24T16:33:40.7952719Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e741a240>
2025-02-24T16:33:40.7952802Z attr = 'lines'
2025-02-24T16:33:40.7952806Z 
2025-02-24T16:33:40.7952948Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7953063Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7953153Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7953223Z         try:
2025-02-24T16:33:40.7953368Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7953447Z         except KeyError:
2025-02-24T16:33:40.7953591Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7953663Z     
2025-02-24T16:33:40.7953843Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7953941Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7954028Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7954162Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7954252Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7954344Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7954458Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7954529Z             else:
2025-02-24T16:33:40.7954627Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.7954734Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.7954738Z 
2025-02-24T16:33:40.7954867Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.7954986Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7955130Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7955207Z     ???
2025-02-24T16:33:40.7955315Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7955319Z 
2025-02-24T16:33:40.7955391Z >   ???
2025-02-24T16:33:40.7955518Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7955590Z E   
2025-02-24T16:33:40.7955802Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7955912Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7955986Z E          ...
2025-02-24T16:33:40.7956072Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7956213Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7956323Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7956397Z E          ...
2025-02-24T16:33:40.7956484Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7956604Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7956717Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7956721Z 
2025-02-24T16:33:40.7956809Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7957080Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] _
2025-02-24T16:33:40.7957089Z 
2025-02-24T16:33:40.7957467Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512190f50>
2025-02-24T16:33:40.7957637Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e741a240>
2025-02-24T16:33:40.7957731Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.7957736Z 
2025-02-24T16:33:40.7957871Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7957987Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7958074Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7958142Z         try:
2025-02-24T16:33:40.7958285Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7958371Z         except KeyError:
2025-02-24T16:33:40.7958516Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7958584Z     
2025-02-24T16:33:40.7958674Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7958774Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7958861Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7958999Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7959082Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7959177Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7959282Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7959291Z 
2025-02-24T16:33:40.7959413Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7959529Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7959533Z 
2025-02-24T16:33:40.7959667Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7959881Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7959988Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7960073Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7960217Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.7960301Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.7960409Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7960486Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.7960564Z err_msg = None
2025-02-24T16:33:40.7960568Z 
2025-02-24T16:33:40.7960680Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7960760Z         if err_msg is None:
2025-02-24T16:33:40.7960858Z             if left.shape != right.shape:
2025-02-24T16:33:40.7960941Z                 raise_assert_detail(
2025-02-24T16:33:40.7961094Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7961163Z                 )
2025-02-24T16:33:40.7961237Z     
2025-02-24T16:33:40.7961313Z             diff = 0
2025-02-24T16:33:40.7961423Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7961514Z                 # count up differences
2025-02-24T16:33:40.7961797Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7961881Z                     diff += 1
2025-02-24T16:33:40.7961948Z     
2025-02-24T16:33:40.7962037Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7962176Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7962346Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7962453Z E           AssertionError: Series are different
2025-02-24T16:33:40.7962523Z E           
2025-02-24T16:33:40.7962627Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.7963001Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7963338Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7963674Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7963682Z 
2025-02-24T16:33:40.7963998Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7964263Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] _
2025-02-24T16:33:40.7964268Z 
2025-02-24T16:33:40.7964495Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512191010>
2025-02-24T16:33:40.7964666Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e741a240>
2025-02-24T16:33:40.7964755Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.7964759Z 
2025-02-24T16:33:40.7964901Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7965139Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7965229Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7965298Z         try:
2025-02-24T16:33:40.7965439Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7965523Z         except KeyError:
2025-02-24T16:33:40.7965659Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7965736Z     
2025-02-24T16:33:40.7965820Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7965917Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7966006Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7966139Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7966229Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7966316Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7966428Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7966433Z 
2025-02-24T16:33:40.7966557Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7966674Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7966679Z 
2025-02-24T16:33:40.7966815Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7966897Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7967129Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7967207Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7967486Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.7967573Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.7967675Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.7967756Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.7967831Z err_msg = None
2025-02-24T16:33:40.7967836Z 
2025-02-24T16:33:40.7967956Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7968041Z         if err_msg is None:
2025-02-24T16:33:40.7968146Z             if left.shape != right.shape:
2025-02-24T16:33:40.7968236Z                 raise_assert_detail(
2025-02-24T16:33:40.7968383Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7968463Z                 )
2025-02-24T16:33:40.7968532Z     
2025-02-24T16:33:40.7968608Z             diff = 0
2025-02-24T16:33:40.7968719Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7968810Z                 # count up differences
2025-02-24T16:33:40.7968986Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7969063Z                     diff += 1
2025-02-24T16:33:40.7969137Z     
2025-02-24T16:33:40.7969221Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7969361Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7969532Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7969640Z E           AssertionError: Series are different
2025-02-24T16:33:40.7969714Z E           
2025-02-24T16:33:40.7969886Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.7970585Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.7971132Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7971661Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.7971675Z 
2025-02-24T16:33:40.7971995Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7972208Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:False-nu] ____
2025-02-24T16:33:40.7972214Z 
2025-02-24T16:33:40.7972342Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7972476Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7972575Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7972710Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7972942Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7973036Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7973116Z err_msg = None
2025-02-24T16:33:40.7973120Z 
2025-02-24T16:33:40.7973230Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7973316Z         if err_msg is None:
2025-02-24T16:33:40.7973414Z             if left.shape != right.shape:
2025-02-24T16:33:40.7973496Z                 raise_assert_detail(
2025-02-24T16:33:40.7973645Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7973719Z                 )
2025-02-24T16:33:40.7973793Z     
2025-02-24T16:33:40.7973865Z             diff = 0
2025-02-24T16:33:40.7973981Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7974071Z                 # count up differences
2025-02-24T16:33:40.7974241Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7974326Z                     diff += 1
2025-02-24T16:33:40.7974394Z     
2025-02-24T16:33:40.7974483Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7974616Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7974789Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7974905Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7974978Z E           
2025-02-24T16:33:40.7975092Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7975356Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7975624Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7975630Z 
2025-02-24T16:33:40.7975935Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7975939Z 
2025-02-24T16:33:40.7976108Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7976118Z 
2025-02-24T16:33:40.7976436Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512191250>
2025-02-24T16:33:40.7976640Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e741a240>, attr = 'nu'
2025-02-24T16:33:40.7976644Z 
2025-02-24T16:33:40.7976782Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7976906Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7976988Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7977062Z         try:
2025-02-24T16:33:40.7977205Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7977413Z         except KeyError:
2025-02-24T16:33:40.7977557Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7977625Z     
2025-02-24T16:33:40.7977714Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7977806Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7977898Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7978039Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7978124Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7978217Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7978324Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7978329Z 
2025-02-24T16:33:40.7978576Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7978695Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7978840Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7978914Z     ???
2025-02-24T16:33:40.7979019Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7979024Z 
2025-02-24T16:33:40.7979096Z >   ???
2025-02-24T16:33:40.7979222Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7979294Z E   
2025-02-24T16:33:40.7979423Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7979544Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7979619Z E          ...
2025-02-24T16:33:40.7979705Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7979838Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7979948Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7980025Z E          ...
2025-02-24T16:33:40.7980114Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7980236Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7980344Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7980348Z 
2025-02-24T16:33:40.7980437Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7980676Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-wavelength_cm] _
2025-02-24T16:33:40.7980681Z 
2025-02-24T16:33:40.7980816Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7980946Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7981047Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7981180Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7981312Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7981407Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7981479Z err_msg = None
2025-02-24T16:33:40.7981484Z 
2025-02-24T16:33:40.7981597Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7981677Z         if err_msg is None:
2025-02-24T16:33:40.7981776Z             if left.shape != right.shape:
2025-02-24T16:33:40.7981858Z                 raise_assert_detail(
2025-02-24T16:33:40.7982007Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7982200Z                 )
2025-02-24T16:33:40.7982266Z     
2025-02-24T16:33:40.7982345Z             diff = 0
2025-02-24T16:33:40.7982454Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7982546Z                 # count up differences
2025-02-24T16:33:40.7982715Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7982801Z                     diff += 1
2025-02-24T16:33:40.7982878Z     
2025-02-24T16:33:40.7982966Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7983107Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7983275Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7983392Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7983471Z E           
2025-02-24T16:33:40.7983581Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7983845Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7984185Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7984196Z 
2025-02-24T16:33:40.7984499Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7984504Z 
2025-02-24T16:33:40.7984679Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7984684Z 
2025-02-24T16:33:40.7984914Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512191310>
2025-02-24T16:33:40.7985084Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e741a240>
2025-02-24T16:33:40.7985169Z attr = 'wavelength_cm'
2025-02-24T16:33:40.7985173Z 
2025-02-24T16:33:40.7985310Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7985434Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7985517Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7985593Z         try:
2025-02-24T16:33:40.7985732Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7985816Z         except KeyError:
2025-02-24T16:33:40.7985957Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7986025Z     
2025-02-24T16:33:40.7986114Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7986207Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7986299Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7986432Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7986523Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7986615Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7986722Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7986730Z 
2025-02-24T16:33:40.7986857Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7986968Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7987120Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7987194Z     ???
2025-02-24T16:33:40.7987525Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7987539Z 
2025-02-24T16:33:40.7987676Z >   ???
2025-02-24T16:33:40.7987899Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7988018Z E   
2025-02-24T16:33:40.7988231Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7988577Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7988693Z E          ...
2025-02-24T16:33:40.7988783Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7988922Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7989037Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7989111Z E          ...
2025-02-24T16:33:40.7989195Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7989321Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7989432Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7989437Z 
2025-02-24T16:33:40.7989526Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7989747Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-f_lu] ___
2025-02-24T16:33:40.7989752Z 
2025-02-24T16:33:40.7989880Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7990014Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7990114Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7990246Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7990512Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7990603Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7990681Z err_msg = None
2025-02-24T16:33:40.7990685Z 
2025-02-24T16:33:40.7990800Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7990881Z         if err_msg is None:
2025-02-24T16:33:40.7990981Z             if left.shape != right.shape:
2025-02-24T16:33:40.7991064Z                 raise_assert_detail(
2025-02-24T16:33:40.7991213Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7991290Z                 )
2025-02-24T16:33:40.7991357Z     
2025-02-24T16:33:40.7991430Z             diff = 0
2025-02-24T16:33:40.7991539Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.7991632Z                 # count up differences
2025-02-24T16:33:40.7991803Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.7991886Z                     diff += 1
2025-02-24T16:33:40.7991956Z     
2025-02-24T16:33:40.7992042Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.7992181Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.7992350Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.7992468Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.7992537Z E           
2025-02-24T16:33:40.7992652Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.7992917Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7993178Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.7993183Z 
2025-02-24T16:33:40.7993489Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.7993494Z 
2025-02-24T16:33:40.7993667Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.7993755Z 
2025-02-24T16:33:40.7993980Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121913d0>
2025-02-24T16:33:40.7994185Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e741a240>, attr = 'f_lu'
2025-02-24T16:33:40.7994190Z 
2025-02-24T16:33:40.7994324Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.7994447Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.7994535Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.7994604Z         try:
2025-02-24T16:33:40.7994746Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.7994825Z         except KeyError:
2025-02-24T16:33:40.7994965Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.7995037Z     
2025-02-24T16:33:40.7995121Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.7995220Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.7995308Z             if attr == "selected_atoms":
2025-02-24T16:33:40.7995444Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.7995527Z             elif actual.ndim == 1:
2025-02-24T16:33:40.7995619Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.7995733Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.7995820Z 
2025-02-24T16:33:40.7995944Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.7996059Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7996203Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.7996281Z     ???
2025-02-24T16:33:40.7996386Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.7996396Z 
2025-02-24T16:33:40.7996462Z >   ???
2025-02-24T16:33:40.7996591Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.7996658Z E   
2025-02-24T16:33:40.7996789Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.7996900Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7996975Z E          ...
2025-02-24T16:33:40.7997060Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7997192Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7997460Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.7997531Z E          ...
2025-02-24T16:33:40.7997619Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.7997740Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.7997848Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.7997853Z 
2025-02-24T16:33:40.7997942Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.7998170Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] _
2025-02-24T16:33:40.7998174Z 
2025-02-24T16:33:40.7998311Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7998438Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7998540Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7998673Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.7998797Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.7998892Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.7998965Z err_msg = None
2025-02-24T16:33:40.7998970Z 
2025-02-24T16:33:40.7999083Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.7999168Z         if err_msg is None:
2025-02-24T16:33:40.7999260Z             if left.shape != right.shape:
2025-02-24T16:33:40.7999349Z                 raise_assert_detail(
2025-02-24T16:33:40.7999490Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.7999732Z                 )
2025-02-24T16:33:40.7999799Z     
2025-02-24T16:33:40.7999877Z             diff = 0
2025-02-24T16:33:40.7999988Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8000080Z                 # count up differences
2025-02-24T16:33:40.8000252Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8000331Z                     diff += 1
2025-02-24T16:33:40.8000402Z     
2025-02-24T16:33:40.8000488Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8000627Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8000801Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8000912Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8000986Z E           
2025-02-24T16:33:40.8001095Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8001360Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8001733Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8001739Z 
2025-02-24T16:33:40.8002040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8002045Z 
2025-02-24T16:33:40.8002215Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8002223Z 
2025-02-24T16:33:40.8002450Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512191b50>
2025-02-24T16:33:40.8002616Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e741a240>
2025-02-24T16:33:40.8002699Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.8002704Z 
2025-02-24T16:33:40.8002837Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8002959Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8003046Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8003115Z         try:
2025-02-24T16:33:40.8003258Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8003337Z         except KeyError:
2025-02-24T16:33:40.8003478Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8003546Z     
2025-02-24T16:33:40.8003636Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8003735Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8003822Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8003959Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8004043Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8004136Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8004241Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8004320Z             else:
2025-02-24T16:33:40.8004417Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8004522Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8004527Z 
2025-02-24T16:33:40.8004652Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8004762Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8004912Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8004981Z     ???
2025-02-24T16:33:40.8005095Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8005184Z 
2025-02-24T16:33:40.8005256Z >   ???
2025-02-24T16:33:40.8005380Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8005453Z E   
2025-02-24T16:33:40.8005579Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8005692Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8005769Z E          ...
2025-02-24T16:33:40.8005854Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8005983Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8006188Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8006318Z E          ...
2025-02-24T16:33:40.8006459Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8006672Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8006846Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8006853Z 
2025-02-24T16:33:40.8006995Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8007427Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-beta_sobolev] _
2025-02-24T16:33:40.8007433Z 
2025-02-24T16:33:40.8007561Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8007694Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8007927Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8008057Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8008184Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8008275Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8008354Z err_msg = None
2025-02-24T16:33:40.8008358Z 
2025-02-24T16:33:40.8008471Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8008551Z         if err_msg is None:
2025-02-24T16:33:40.8008654Z             if left.shape != right.shape:
2025-02-24T16:33:40.8008736Z                 raise_assert_detail(
2025-02-24T16:33:40.8008883Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8008952Z                 )
2025-02-24T16:33:40.8009023Z     
2025-02-24T16:33:40.8009101Z             diff = 0
2025-02-24T16:33:40.8009207Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8009297Z                 # count up differences
2025-02-24T16:33:40.8009467Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8009548Z                     diff += 1
2025-02-24T16:33:40.8009616Z     
2025-02-24T16:33:40.8009708Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8009846Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8010017Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8010136Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8010206Z E           
2025-02-24T16:33:40.8010321Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8010579Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8010846Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8010851Z 
2025-02-24T16:33:40.8011158Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8011296Z 
2025-02-24T16:33:40.8011470Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8011475Z 
2025-02-24T16:33:40.8011698Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512191c10>
2025-02-24T16:33:40.8011874Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e741a240>
2025-02-24T16:33:40.8011952Z attr = 'beta_sobolev'
2025-02-24T16:33:40.8011956Z 
2025-02-24T16:33:40.8012097Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8012215Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8012296Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8012372Z         try:
2025-02-24T16:33:40.8012510Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8012593Z         except KeyError:
2025-02-24T16:33:40.8012728Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8012808Z     
2025-02-24T16:33:40.8012898Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8012988Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8013079Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8013208Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8013376Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8013463Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8013575Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8013650Z             else:
2025-02-24T16:33:40.8013744Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8013855Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8013859Z 
2025-02-24T16:33:40.8013984Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8014101Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8014246Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8014319Z     ???
2025-02-24T16:33:40.8014432Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8014436Z 
2025-02-24T16:33:40.8014503Z >   ???
2025-02-24T16:33:40.8014632Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8014703Z E   
2025-02-24T16:33:40.8014833Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8014948Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8015018Z E          ...
2025-02-24T16:33:40.8015107Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8015235Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8015349Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8015418Z E          ...
2025-02-24T16:33:40.8015506Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8015636Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8015741Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8015745Z 
2025-02-24T16:33:40.8015836Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8016049Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-j_blues] _
2025-02-24T16:33:40.8016057Z 
2025-02-24T16:33:40.8016188Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8016317Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8016411Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8016544Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8016666Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8016763Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8016924Z err_msg = None
2025-02-24T16:33:40.8016933Z 
2025-02-24T16:33:40.8017041Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8017125Z         if err_msg is None:
2025-02-24T16:33:40.8017219Z             if left.shape != right.shape:
2025-02-24T16:33:40.8017420Z                 raise_assert_detail(
2025-02-24T16:33:40.8017566Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8017639Z                 )
2025-02-24T16:33:40.8017710Z     
2025-02-24T16:33:40.8017780Z             diff = 0
2025-02-24T16:33:40.8017891Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8017977Z                 # count up differences
2025-02-24T16:33:40.8018152Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8018228Z                     diff += 1
2025-02-24T16:33:40.8018299Z     
2025-02-24T16:33:40.8018393Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8018528Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8018701Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8018813Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8019048Z E           
2025-02-24T16:33:40.8019156Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8019418Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8019684Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8019695Z 
2025-02-24T16:33:40.8019998Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8020012Z 
2025-02-24T16:33:40.8020178Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8020183Z 
2025-02-24T16:33:40.8020409Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512191d90>
2025-02-24T16:33:40.8020573Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e741a240>
2025-02-24T16:33:40.8020655Z attr = 'j_blues'
2025-02-24T16:33:40.8020659Z 
2025-02-24T16:33:40.8020797Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8020910Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8020997Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8021069Z         try:
2025-02-24T16:33:40.8021213Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8021292Z         except KeyError:
2025-02-24T16:33:40.8021433Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8021504Z     
2025-02-24T16:33:40.8021589Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8021691Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8021778Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8021912Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8021994Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8022087Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8022201Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8022271Z             else:
2025-02-24T16:33:40.8022371Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8022475Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8022592Z 
2025-02-24T16:33:40.8022722Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8022833Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8022981Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8023059Z     ???
2025-02-24T16:33:40.8023170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8023175Z 
2025-02-24T16:33:40.8023245Z >   ???
2025-02-24T16:33:40.8023371Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8023443Z E   
2025-02-24T16:33:40.8023582Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8023692Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8023767Z E          ...
2025-02-24T16:33:40.8023852Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8023983Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8024096Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8024173Z E          ...
2025-02-24T16:33:40.8024261Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8024385Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8024585Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8024589Z 
2025-02-24T16:33:40.8024676Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8025155Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] _
2025-02-24T16:33:40.8025165Z 
2025-02-24T16:33:40.8025381Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8025589Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8025746Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8025947Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8026081Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8026179Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8026253Z err_msg = None
2025-02-24T16:33:40.8026260Z 
2025-02-24T16:33:40.8026371Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8026451Z         if err_msg is None:
2025-02-24T16:33:40.8026547Z             if left.shape != right.shape:
2025-02-24T16:33:40.8026629Z                 raise_assert_detail(
2025-02-24T16:33:40.8026774Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8026848Z                 )
2025-02-24T16:33:40.8026915Z     
2025-02-24T16:33:40.8026990Z             diff = 0
2025-02-24T16:33:40.8027098Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8027188Z                 # count up differences
2025-02-24T16:33:40.8027481Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8027752Z                     diff += 1
2025-02-24T16:33:40.8027884Z     
2025-02-24T16:33:40.8027979Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8028126Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8028305Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8028425Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8028494Z E           
2025-02-24T16:33:40.8028607Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8028874Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8029318Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8029330Z 
2025-02-24T16:33:40.8029675Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8029680Z 
2025-02-24T16:33:40.8029872Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8029878Z 
2025-02-24T16:33:40.8030104Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512192b10>
2025-02-24T16:33:40.8030274Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e4ec8b30>
2025-02-24T16:33:40.8030350Z attr = 'lines'
2025-02-24T16:33:40.8030354Z 
2025-02-24T16:33:40.8030492Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8030612Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8030695Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8030769Z         try:
2025-02-24T16:33:40.8030907Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8031106Z         except KeyError:
2025-02-24T16:33:40.8031247Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8031315Z     
2025-02-24T16:33:40.8031406Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8031498Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8031590Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8031717Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8031809Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8031901Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8032010Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8032091Z             else:
2025-02-24T16:33:40.8032187Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8032296Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8032301Z 
2025-02-24T16:33:40.8032424Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8032543Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8032691Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8032760Z     ???
2025-02-24T16:33:40.8032873Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8032877Z 
2025-02-24T16:33:40.8032944Z >   ???
2025-02-24T16:33:40.8033074Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8033146Z E   
2025-02-24T16:33:40.8033275Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8033390Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8033465Z E          ...
2025-02-24T16:33:40.8033555Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8033683Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8033796Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8033874Z E          ...
2025-02-24T16:33:40.8033960Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8034087Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8034188Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8034192Z 
2025-02-24T16:33:40.8034283Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8034596Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] _
2025-02-24T16:33:40.8034606Z 
2025-02-24T16:33:40.8034828Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512192bd0>
2025-02-24T16:33:40.8035115Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e4ec8b30>
2025-02-24T16:33:40.8035203Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.8035207Z 
2025-02-24T16:33:40.8035346Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8035457Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8035548Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8035621Z         try:
2025-02-24T16:33:40.8035763Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8035846Z         except KeyError:
2025-02-24T16:33:40.8035979Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8036052Z     
2025-02-24T16:33:40.8036136Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8036231Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8036327Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8036456Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8036548Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8036634Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8036744Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8036749Z 
2025-02-24T16:33:40.8036876Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8037071Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8037076Z 
2025-02-24T16:33:40.8037215Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8037435Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8037550Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8037634Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8037769Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8037854Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8037960Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8038041Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8038115Z err_msg = None
2025-02-24T16:33:40.8038119Z 
2025-02-24T16:33:40.8038232Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8038319Z         if err_msg is None:
2025-02-24T16:33:40.8038415Z             if left.shape != right.shape:
2025-02-24T16:33:40.8038503Z                 raise_assert_detail(
2025-02-24T16:33:40.8038643Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8038718Z                 )
2025-02-24T16:33:40.8038785Z     
2025-02-24T16:33:40.8038859Z             diff = 0
2025-02-24T16:33:40.8038971Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8039058Z                 # count up differences
2025-02-24T16:33:40.8039231Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8039312Z                     diff += 1
2025-02-24T16:33:40.8039383Z     
2025-02-24T16:33:40.8039467Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8039605Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8039779Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8039884Z E           AssertionError: Series are different
2025-02-24T16:33:40.8039957Z E           
2025-02-24T16:33:40.8040057Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.8040433Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8040889Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8041221Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8041232Z 
2025-02-24T16:33:40.8041540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8041854Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] _
2025-02-24T16:33:40.8041859Z 
2025-02-24T16:33:40.8042079Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512192c90>
2025-02-24T16:33:40.8042248Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e4ec8b30>
2025-02-24T16:33:40.8042442Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.8042447Z 
2025-02-24T16:33:40.8042581Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8042699Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8042781Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8042856Z         try:
2025-02-24T16:33:40.8043001Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8043080Z         except KeyError:
2025-02-24T16:33:40.8043218Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8043287Z     
2025-02-24T16:33:40.8043376Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8043468Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8043558Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8043786Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8043936Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8044096Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8044275Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8044282Z 
2025-02-24T16:33:40.8044491Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8044678Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8044691Z 
2025-02-24T16:33:40.8044878Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8044967Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8045073Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8045163Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8045299Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8045384Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8045493Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8045572Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8045650Z err_msg = None
2025-02-24T16:33:40.8045654Z 
2025-02-24T16:33:40.8045762Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8045846Z         if err_msg is None:
2025-02-24T16:33:40.8045946Z             if left.shape != right.shape:
2025-02-24T16:33:40.8046030Z                 raise_assert_detail(
2025-02-24T16:33:40.8046179Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8046248Z                 )
2025-02-24T16:33:40.8046319Z     
2025-02-24T16:33:40.8046489Z             diff = 0
2025-02-24T16:33:40.8046605Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8046692Z                 # count up differences
2025-02-24T16:33:40.8046865Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8046949Z                     diff += 1
2025-02-24T16:33:40.8047016Z     
2025-02-24T16:33:40.8047105Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8047238Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8047544Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8047651Z E           AssertionError: Series are different
2025-02-24T16:33:40.8047719Z E           
2025-02-24T16:33:40.8047822Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.8048189Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8048691Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8049068Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8049076Z 
2025-02-24T16:33:40.8049389Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8049648Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] _
2025-02-24T16:33:40.8049653Z 
2025-02-24T16:33:40.8049783Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8049909Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8050010Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8050145Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8050265Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8050364Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8050437Z err_msg = None
2025-02-24T16:33:40.8050441Z 
2025-02-24T16:33:40.8050552Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8050639Z         if err_msg is None:
2025-02-24T16:33:40.8050732Z             if left.shape != right.shape:
2025-02-24T16:33:40.8050818Z                 raise_assert_detail(
2025-02-24T16:33:40.8050959Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8051033Z                 )
2025-02-24T16:33:40.8051099Z     
2025-02-24T16:33:40.8051175Z             diff = 0
2025-02-24T16:33:40.8051290Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8051375Z                 # count up differences
2025-02-24T16:33:40.8051544Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8051732Z                     diff += 1
2025-02-24T16:33:40.8051804Z     
2025-02-24T16:33:40.8051889Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8052026Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8052195Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8052310Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8052386Z E           
2025-02-24T16:33:40.8052496Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8052758Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8053022Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8053031Z 
2025-02-24T16:33:40.8053328Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8053427Z 
2025-02-24T16:33:40.8053599Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8053604Z 
2025-02-24T16:33:40.8053832Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512192ed0>
2025-02-24T16:33:40.8054032Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e4ec8b30>, attr = 'nu'
2025-02-24T16:33:40.8054037Z 
2025-02-24T16:33:40.8054177Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8054291Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8054381Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8054455Z         try:
2025-02-24T16:33:40.8054594Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8054677Z         except KeyError:
2025-02-24T16:33:40.8054813Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8054888Z     
2025-02-24T16:33:40.8054972Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8055070Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8055162Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8055291Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8055380Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8055467Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8055578Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8055583Z 
2025-02-24T16:33:40.8055706Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8055825Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8055976Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8056044Z     ???
2025-02-24T16:33:40.8056154Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8056162Z 
2025-02-24T16:33:40.8056229Z >   ???
2025-02-24T16:33:40.8056358Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8056429Z E   
2025-02-24T16:33:40.8056554Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8056670Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8056740Z E          ...
2025-02-24T16:33:40.8056832Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8056962Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8057077Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8057237Z E          ...
2025-02-24T16:33:40.8057430Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8057558Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8057665Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8057670Z 
2025-02-24T16:33:40.8057763Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8058046Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] _
2025-02-24T16:33:40.8058056Z 
2025-02-24T16:33:40.8058184Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8058314Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8058409Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8058544Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8058669Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8058765Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8058843Z err_msg = None
2025-02-24T16:33:40.8058848Z 
2025-02-24T16:33:40.8058956Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8059173Z         if err_msg is None:
2025-02-24T16:33:40.8059266Z             if left.shape != right.shape:
2025-02-24T16:33:40.8059353Z                 raise_assert_detail(
2025-02-24T16:33:40.8059499Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8059569Z                 )
2025-02-24T16:33:40.8059640Z     
2025-02-24T16:33:40.8059711Z             diff = 0
2025-02-24T16:33:40.8059824Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8059909Z                 # count up differences
2025-02-24T16:33:40.8060082Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8060166Z                     diff += 1
2025-02-24T16:33:40.8060234Z     
2025-02-24T16:33:40.8060324Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8060457Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8060628Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8060744Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8060818Z E           
2025-02-24T16:33:40.8060932Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8061188Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8061452Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8061460Z 
2025-02-24T16:33:40.8061769Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8061774Z 
2025-02-24T16:33:40.8061940Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8061944Z 
2025-02-24T16:33:40.8062328Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512192f90>
2025-02-24T16:33:40.8062618Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e4ec8b30>
2025-02-24T16:33:40.8062752Z attr = 'wavelength_cm'
2025-02-24T16:33:40.8062759Z 
2025-02-24T16:33:40.8062984Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8063298Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8063389Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8063461Z         try:
2025-02-24T16:33:40.8063606Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8063691Z         except KeyError:
2025-02-24T16:33:40.8063828Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8063904Z     
2025-02-24T16:33:40.8063987Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8064083Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8064169Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8064303Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8064391Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8064479Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8064592Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8064597Z 
2025-02-24T16:33:40.8064723Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8064839Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8064988Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8065056Z     ???
2025-02-24T16:33:40.8065169Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8065256Z 
2025-02-24T16:33:40.8065323Z >   ???
2025-02-24T16:33:40.8065456Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8065523Z E   
2025-02-24T16:33:40.8065654Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8065769Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8065847Z E          ...
2025-02-24T16:33:40.8076429Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8076620Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8076758Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8076844Z E          ...
2025-02-24T16:33:40.8076950Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8077088Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8077201Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8077211Z 
2025-02-24T16:33:40.8077460Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8077742Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] _
2025-02-24T16:33:40.8077748Z 
2025-02-24T16:33:40.8077899Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8078040Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8078144Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8078288Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8078420Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8078525Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8078603Z err_msg = None
2025-02-24T16:33:40.8078614Z 
2025-02-24T16:33:40.8078733Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8078829Z         if err_msg is None:
2025-02-24T16:33:40.8078928Z             if left.shape != right.shape:
2025-02-24T16:33:40.8079022Z                 raise_assert_detail(
2025-02-24T16:33:40.8079174Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8079250Z                 )
2025-02-24T16:33:40.8079325Z     
2025-02-24T16:33:40.8079397Z             diff = 0
2025-02-24T16:33:40.8079518Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8079608Z                 # count up differences
2025-02-24T16:33:40.8079790Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8080134Z                     diff += 1
2025-02-24T16:33:40.8080264Z     
2025-02-24T16:33:40.8080418Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8080642Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8080944Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8081134Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8081264Z E           
2025-02-24T16:33:40.8081384Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8081655Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8081927Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8082060Z 
2025-02-24T16:33:40.8082378Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8082389Z 
2025-02-24T16:33:40.8082561Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8082566Z 
2025-02-24T16:33:40.8082800Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512193050>
2025-02-24T16:33:40.8083013Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e4ec8b30>, attr = 'f_lu'
2025-02-24T16:33:40.8083017Z 
2025-02-24T16:33:40.8083165Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8083295Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8083384Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8083460Z         try:
2025-02-24T16:33:40.8083603Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8083690Z         except KeyError:
2025-02-24T16:33:40.8083834Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8083910Z     
2025-02-24T16:33:40.8084001Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8084097Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8084192Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8084327Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8084422Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8084512Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8084629Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8084634Z 
2025-02-24T16:33:40.8084773Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8084890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8085047Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8085118Z     ???
2025-02-24T16:33:40.8085232Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8085240Z 
2025-02-24T16:33:40.8085314Z >   ???
2025-02-24T16:33:40.8085448Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8085524Z E   
2025-02-24T16:33:40.8085656Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8085777Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8085848Z E          ...
2025-02-24T16:33:40.8085943Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8086082Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8086284Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8086360Z E          ...
2025-02-24T16:33:40.8086446Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8086577Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8086685Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8086693Z 
2025-02-24T16:33:40.8086790Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8087140Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] _
2025-02-24T16:33:40.8087146Z 
2025-02-24T16:33:40.8087505Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512193650>
2025-02-24T16:33:40.8087692Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e4ec8b30>
2025-02-24T16:33:40.8087785Z attr = 'stimulated_emission_factor'
2025-02-24T16:33:40.8087790Z 
2025-02-24T16:33:40.8087935Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8088063Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8088144Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8088222Z         try:
2025-02-24T16:33:40.8088366Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8088453Z         except KeyError:
2025-02-24T16:33:40.8088771Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8088839Z     
2025-02-24T16:33:40.8088928Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8089019Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8089111Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8089245Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8089334Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8089429Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8089536Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8089611Z             else:
2025-02-24T16:33:40.8089709Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8089822Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8089826Z 
2025-02-24T16:33:40.8089960Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8090077Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8090231Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8090299Z     ???
2025-02-24T16:33:40.8090410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8090415Z 
2025-02-24T16:33:40.8090481Z >   ???
2025-02-24T16:33:40.8090671Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:33:40.8090742Z E   
2025-02-24T16:33:40.8090913Z E   DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-02-24T16:33:40.8091313Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8096129Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T16:33:40.8101810Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T16:33:40.8102150Z E   At positional index 124, first diff: 0.9929028359129612 != 0.9928779361771577
2025-02-24T16:33:40.8102160Z 
2025-02-24T16:33:40.8102258Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8102582Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] _
2025-02-24T16:33:40.8102588Z 
2025-02-24T16:33:40.8102719Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8102863Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8102964Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8103105Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8103233Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8103324Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8103404Z err_msg = None
2025-02-24T16:33:40.8103409Z 
2025-02-24T16:33:40.8103643Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8103730Z         if err_msg is None:
2025-02-24T16:33:40.8103826Z             if left.shape != right.shape:
2025-02-24T16:33:40.8103917Z                 raise_assert_detail(
2025-02-24T16:33:40.8104072Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8104146Z                 )
2025-02-24T16:33:40.8104218Z     
2025-02-24T16:33:40.8104289Z             diff = 0
2025-02-24T16:33:40.8104408Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8104497Z                 # count up differences
2025-02-24T16:33:40.8104686Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8104769Z                     diff += 1
2025-02-24T16:33:40.8104837Z     
2025-02-24T16:33:40.8104930Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8105068Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8105251Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8105371Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8105440Z E           
2025-02-24T16:33:40.8105556Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8105902Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8106167Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8106176Z 
2025-02-24T16:33:40.8106502Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8106507Z 
2025-02-24T16:33:40.8106682Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8106690Z 
2025-02-24T16:33:40.8106931Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512193710>
2025-02-24T16:33:40.8107110Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e4ec8b30>
2025-02-24T16:33:40.8107198Z attr = 'previous_beta_sobolev'
2025-02-24T16:33:40.8107203Z 
2025-02-24T16:33:40.8107474Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8107593Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8107680Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8107749Z         try:
2025-02-24T16:33:40.8107895Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8107984Z         except KeyError:
2025-02-24T16:33:40.8108125Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8108198Z     
2025-02-24T16:33:40.8108286Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8108383Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8108471Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8108612Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8108701Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8108789Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8108903Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8108973Z             else:
2025-02-24T16:33:40.8109072Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8109177Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8109186Z 
2025-02-24T16:33:40.8109315Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8109554Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8109713Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8109787Z     ???
2025-02-24T16:33:40.8109896Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8109909Z 
2025-02-24T16:33:40.8109975Z >   ???
2025-02-24T16:33:40.8110111Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8110179Z E   
2025-02-24T16:33:40.8110313Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8110424Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8110501Z E          ...
2025-02-24T16:33:40.8110588Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8110723Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8110844Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8110915Z E          ...
2025-02-24T16:33:40.8111006Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8111129Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8111238Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8111243Z 
2025-02-24T16:33:40.8111334Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8111736Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] _
2025-02-24T16:33:40.8111741Z 
2025-02-24T16:33:40.8111876Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8112002Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8112106Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8112247Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8112368Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8112470Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8112543Z err_msg = None
2025-02-24T16:33:40.8112547Z 
2025-02-24T16:33:40.8112662Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8112752Z         if err_msg is None:
2025-02-24T16:33:40.8112847Z             if left.shape != right.shape:
2025-02-24T16:33:40.8112934Z                 raise_assert_detail(
2025-02-24T16:33:40.8113083Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8113157Z                 )
2025-02-24T16:33:40.8113224Z     
2025-02-24T16:33:40.8113300Z             diff = 0
2025-02-24T16:33:40.8113410Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8113505Z                 # count up differences
2025-02-24T16:33:40.8113684Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8113764Z                     diff += 1
2025-02-24T16:33:40.8113836Z     
2025-02-24T16:33:40.8113923Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8114068Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8114249Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8114366Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8114439Z E           
2025-02-24T16:33:40.8114549Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8114815Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8115081Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8115193Z 
2025-02-24T16:33:40.8115510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8115515Z 
2025-02-24T16:33:40.8115687Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8115692Z 
2025-02-24T16:33:40.8115921Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121937d0>
2025-02-24T16:33:40.8116089Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e4ec8b30>
2025-02-24T16:33:40.8116171Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.8116175Z 
2025-02-24T16:33:40.8116310Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8116429Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8116516Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8116623Z         try:
2025-02-24T16:33:40.8116879Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8117010Z         except KeyError:
2025-02-24T16:33:40.8117374Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8117649Z     
2025-02-24T16:33:40.8117806Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8117956Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8118053Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8118198Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8118283Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8118376Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8118488Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8118564Z             else:
2025-02-24T16:33:40.8118668Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8118775Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8118780Z 
2025-02-24T16:33:40.8118915Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8119027Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8119185Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8119254Z     ???
2025-02-24T16:33:40.8119365Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8119370Z 
2025-02-24T16:33:40.8119440Z >   ???
2025-02-24T16:33:40.8119569Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8119641Z E   
2025-02-24T16:33:40.8119770Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8119886Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8119962Z E          ...
2025-02-24T16:33:40.8120053Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8120187Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8120298Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8120371Z E          ...
2025-02-24T16:33:40.8120454Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8120585Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8120694Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8120699Z 
2025-02-24T16:33:40.8120787Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8121080Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] _
2025-02-24T16:33:40.8121085Z 
2025-02-24T16:33:40.8121214Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8121347Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8121591Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8121726Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8121855Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8121952Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8122030Z err_msg = None
2025-02-24T16:33:40.8122034Z 
2025-02-24T16:33:40.8122150Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8122230Z         if err_msg is None:
2025-02-24T16:33:40.8122329Z             if left.shape != right.shape:
2025-02-24T16:33:40.8122412Z                 raise_assert_detail(
2025-02-24T16:33:40.8122565Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8122634Z                 )
2025-02-24T16:33:40.8122707Z     
2025-02-24T16:33:40.8122781Z             diff = 0
2025-02-24T16:33:40.8122896Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8122989Z                 # count up differences
2025-02-24T16:33:40.8123164Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8123246Z                     diff += 1
2025-02-24T16:33:40.8123395Z     
2025-02-24T16:33:40.8123487Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8123629Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8123803Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8123921Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8123991Z E           
2025-02-24T16:33:40.8124106Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8124366Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8124640Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8124649Z 
2025-02-24T16:33:40.8124969Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8124974Z 
2025-02-24T16:33:40.8125145Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8125149Z 
2025-02-24T16:33:40.8125378Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512193890>
2025-02-24T16:33:40.8125558Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e4ec8b30>
2025-02-24T16:33:40.8125636Z attr = 'beta_sobolev'
2025-02-24T16:33:40.8125641Z 
2025-02-24T16:33:40.8125784Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8125908Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8125995Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8126068Z         try:
2025-02-24T16:33:40.8126208Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8126299Z         except KeyError:
2025-02-24T16:33:40.8126446Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8126516Z     
2025-02-24T16:33:40.8126608Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8126702Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8126802Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8126944Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8127119Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8127214Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8127467Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8127549Z             else:
2025-02-24T16:33:40.8127649Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8127760Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8127764Z 
2025-02-24T16:33:40.8127900Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8128013Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8128165Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8128236Z     ???
2025-02-24T16:33:40.8128350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8128354Z 
2025-02-24T16:33:40.8128429Z >   ???
2025-02-24T16:33:40.8128556Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8128632Z E   
2025-02-24T16:33:40.8128760Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8128873Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8128944Z E          ...
2025-02-24T16:33:40.8129036Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8129286Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8129397Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8129471Z E          ...
2025-02-24T16:33:40.8129552Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8129680Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8129788Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8129793Z 
2025-02-24T16:33:40.8129882Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8130158Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] _
2025-02-24T16:33:40.8130166Z 
2025-02-24T16:33:40.8130292Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8130422Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8130523Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8130656Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8130782Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8130877Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8130961Z err_msg = None
2025-02-24T16:33:40.8130966Z 
2025-02-24T16:33:40.8131086Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8131168Z         if err_msg is None:
2025-02-24T16:33:40.8131272Z             if left.shape != right.shape:
2025-02-24T16:33:40.8131358Z                 raise_assert_detail(
2025-02-24T16:33:40.8131514Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8131586Z                 )
2025-02-24T16:33:40.8131661Z     
2025-02-24T16:33:40.8131742Z             diff = 0
2025-02-24T16:33:40.8131858Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8131955Z                 # count up differences
2025-02-24T16:33:40.8132134Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8132217Z                     diff += 1
2025-02-24T16:33:40.8132284Z     
2025-02-24T16:33:40.8132379Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8132524Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8132700Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8132822Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8133012Z E           
2025-02-24T16:33:40.8133133Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8133395Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8133667Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8133673Z 
2025-02-24T16:33:40.8133998Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8134002Z 
2025-02-24T16:33:40.8134186Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8134190Z 
2025-02-24T16:33:40.8134423Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512193a10>
2025-02-24T16:33:40.8134604Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e4ec8b30>
2025-02-24T16:33:40.8134754Z attr = 'j_blues'
2025-02-24T16:33:40.8134758Z 
2025-02-24T16:33:40.8134906Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8135030Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8135114Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8135205Z         try:
2025-02-24T16:33:40.8135454Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8135598Z         except KeyError:
2025-02-24T16:33:40.8135830Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8135949Z     
2025-02-24T16:33:40.8136099Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8136258Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8136417Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8136558Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8136652Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8136742Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8136864Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8136942Z             else:
2025-02-24T16:33:40.8137037Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8137151Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8137155Z 
2025-02-24T16:33:40.8137422Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8137547Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8137702Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8137779Z     ???
2025-02-24T16:33:40.8137898Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8137902Z 
2025-02-24T16:33:40.8137970Z >   ???
2025-02-24T16:33:40.8138106Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8138176Z E   
2025-02-24T16:33:40.8138313Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8138435Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8138506Z E          ...
2025-02-24T16:33:40.8138600Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8138734Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8138854Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8138924Z E          ...
2025-02-24T16:33:40.8139015Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8139143Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8139250Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8139400Z 
2025-02-24T16:33:40.8139500Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8139767Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] _
2025-02-24T16:33:40.8139773Z 
2025-02-24T16:33:40.8139911Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8140052Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8140150Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8140288Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8140411Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8140507Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8140580Z err_msg = None
2025-02-24T16:33:40.8140592Z 
2025-02-24T16:33:40.8140703Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8140788Z         if err_msg is None:
2025-02-24T16:33:40.8140884Z             if left.shape != right.shape:
2025-02-24T16:33:40.8140975Z                 raise_assert_detail(
2025-02-24T16:33:40.8141122Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8141306Z                 )
2025-02-24T16:33:40.8141378Z     
2025-02-24T16:33:40.8141450Z             diff = 0
2025-02-24T16:33:40.8141568Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8141654Z                 # count up differences
2025-02-24T16:33:40.8141833Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8141913Z                     diff += 1
2025-02-24T16:33:40.8141986Z     
2025-02-24T16:33:40.8142079Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8142216Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8142401Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8142513Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8142589Z E           
2025-02-24T16:33:40.8142702Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8142970Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8143236Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8143245Z 
2025-02-24T16:33:40.8143558Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8143569Z 
2025-02-24T16:33:40.8143740Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8143747Z 
2025-02-24T16:33:40.8143986Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121b87d0>
2025-02-24T16:33:40.8144158Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a25f380>
2025-02-24T16:33:40.8144237Z attr = 'lines'
2025-02-24T16:33:40.8144241Z 
2025-02-24T16:33:40.8144386Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8144500Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8144590Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8144660Z         try:
2025-02-24T16:33:40.8144806Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8144976Z         except KeyError:
2025-02-24T16:33:40.8145122Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8145195Z     
2025-02-24T16:33:40.8145283Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8145381Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8145470Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8145611Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8145697Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8145791Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8145905Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8145977Z             else:
2025-02-24T16:33:40.8146077Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8146182Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8146186Z 
2025-02-24T16:33:40.8146316Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8146432Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8146586Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8146661Z     ???
2025-02-24T16:33:40.8146767Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8146850Z 
2025-02-24T16:33:40.8146926Z >   ???
2025-02-24T16:33:40.8147058Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8147131Z E   
2025-02-24T16:33:40.8147403Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8147520Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8147596Z E          ...
2025-02-24T16:33:40.8147682Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8147817Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8147933Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8148013Z E          ...
2025-02-24T16:33:40.8148104Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8148226Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8148335Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8148339Z 
2025-02-24T16:33:40.8148428Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8148735Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] _
2025-02-24T16:33:40.8148741Z 
2025-02-24T16:33:40.8148970Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121b8890>
2025-02-24T16:33:40.8149138Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a25f380>
2025-02-24T16:33:40.8149233Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.8149237Z 
2025-02-24T16:33:40.8149371Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8149491Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8149575Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8149650Z         try:
2025-02-24T16:33:40.8149791Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8149871Z         except KeyError:
2025-02-24T16:33:40.8150011Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8150084Z     
2025-02-24T16:33:40.8150175Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8150266Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8150359Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8150492Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8150575Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8150668Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8150775Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8150780Z 
2025-02-24T16:33:40.8150908Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8151165Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8151170Z 
2025-02-24T16:33:40.8151304Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8151393Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8151499Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8151588Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8151726Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8151815Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8151921Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8152000Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8152079Z err_msg = None
2025-02-24T16:33:40.8152083Z 
2025-02-24T16:33:40.8152191Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8152280Z         if err_msg is None:
2025-02-24T16:33:40.8152381Z             if left.shape != right.shape:
2025-02-24T16:33:40.8152464Z                 raise_assert_detail(
2025-02-24T16:33:40.8152646Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8152774Z                 )
2025-02-24T16:33:40.8153054Z     
2025-02-24T16:33:40.8153177Z             diff = 0
2025-02-24T16:33:40.8153370Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8153518Z                 # count up differences
2025-02-24T16:33:40.8153795Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8153883Z                     diff += 1
2025-02-24T16:33:40.8153951Z     
2025-02-24T16:33:40.8154046Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8154181Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8154359Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8154470Z E           AssertionError: Series are different
2025-02-24T16:33:40.8154541Z E           
2025-02-24T16:33:40.8154646Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.8155017Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8155354Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8155691Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8155699Z 
2025-02-24T16:33:40.8156014Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8156308Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] _
2025-02-24T16:33:40.8156313Z 
2025-02-24T16:33:40.8156542Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121b8950>
2025-02-24T16:33:40.8156710Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a25f380>
2025-02-24T16:33:40.8156894Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.8156899Z 
2025-02-24T16:33:40.8157038Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8157150Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8157237Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8157449Z         try:
2025-02-24T16:33:40.8157593Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8157679Z         except KeyError:
2025-02-24T16:33:40.8157815Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8157894Z     
2025-02-24T16:33:40.8157979Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8158078Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8158165Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8158303Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8158398Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8158490Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8158604Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8158608Z 
2025-02-24T16:33:40.8158734Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8158854Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8158995Z 
2025-02-24T16:33:40.8159132Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8159224Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8159336Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8159415Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8159556Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8159639Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8159748Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8159834Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8159909Z err_msg = None
2025-02-24T16:33:40.8159913Z 
2025-02-24T16:33:40.8160025Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8160105Z         if err_msg is None:
2025-02-24T16:33:40.8160206Z             if left.shape != right.shape:
2025-02-24T16:33:40.8160288Z                 raise_assert_detail(
2025-02-24T16:33:40.8160434Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8160509Z                 )
2025-02-24T16:33:40.8160576Z     
2025-02-24T16:33:40.8160652Z             diff = 0
2025-02-24T16:33:40.8160764Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8160857Z                 # count up differences
2025-02-24T16:33:40.8161029Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8161110Z                     diff += 1
2025-02-24T16:33:40.8161186Z     
2025-02-24T16:33:40.8161273Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8161413Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8161590Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8161703Z E           AssertionError: Series are different
2025-02-24T16:33:40.8161778Z E           
2025-02-24T16:33:40.8161878Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.8162275Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8162667Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8163169Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8163175Z 
2025-02-24T16:33:40.8163488Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8163750Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] _
2025-02-24T16:33:40.8163755Z 
2025-02-24T16:33:40.8163881Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8164014Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8164187Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8164324Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8164458Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8164557Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8164636Z err_msg = None
2025-02-24T16:33:40.8164640Z 
2025-02-24T16:33:40.8164749Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8164836Z         if err_msg is None:
2025-02-24T16:33:40.8164937Z             if left.shape != right.shape:
2025-02-24T16:33:40.8165020Z                 raise_assert_detail(
2025-02-24T16:33:40.8165173Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8165243Z                 )
2025-02-24T16:33:40.8165318Z     
2025-02-24T16:33:40.8165391Z             diff = 0
2025-02-24T16:33:40.8165510Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8165605Z                 # count up differences
2025-02-24T16:33:40.8165780Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8165863Z                     diff += 1
2025-02-24T16:33:40.8165933Z     
2025-02-24T16:33:40.8166026Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8166166Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8166347Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8166470Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8166540Z E           
2025-02-24T16:33:40.8166660Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8166923Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8167193Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8167198Z 
2025-02-24T16:33:40.8167626Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8167746Z 
2025-02-24T16:33:40.8167921Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8167925Z 
2025-02-24T16:33:40.8168154Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121b8b90>
2025-02-24T16:33:40.8168366Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a25f380>, attr = 'nu'
2025-02-24T16:33:40.8168371Z 
2025-02-24T16:33:40.8168508Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8168632Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8168715Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8168791Z         try:
2025-02-24T16:33:40.8168937Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8169017Z         except KeyError:
2025-02-24T16:33:40.8169159Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8169230Z     
2025-02-24T16:33:40.8169323Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8169416Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8169510Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8169645Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8169729Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8169932Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8170039Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8170044Z 
2025-02-24T16:33:40.8170172Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8170285Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8170436Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8170508Z     ???
2025-02-24T16:33:40.8170613Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8170618Z 
2025-02-24T16:33:40.8170691Z >   ???
2025-02-24T16:33:40.8170819Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8170894Z E   
2025-02-24T16:33:40.8171027Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8171137Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8171245Z E          ...
2025-02-24T16:33:40.8171399Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8171629Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8171814Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8171935Z E          ...
2025-02-24T16:33:40.8172080Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8172289Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8172467Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8172473Z 
2025-02-24T16:33:40.8172564Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8172850Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] _
2025-02-24T16:33:40.8172855Z 
2025-02-24T16:33:40.8172990Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8173118Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8173219Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8173350Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8173478Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8173577Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8173650Z err_msg = None
2025-02-24T16:33:40.8173653Z 
2025-02-24T16:33:40.8173766Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8173845Z         if err_msg is None:
2025-02-24T16:33:40.8174039Z             if left.shape != right.shape:
2025-02-24T16:33:40.8174123Z                 raise_assert_detail(
2025-02-24T16:33:40.8174272Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8174345Z                 )
2025-02-24T16:33:40.8174413Z     
2025-02-24T16:33:40.8174491Z             diff = 0
2025-02-24T16:33:40.8174601Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8174694Z                 # count up differences
2025-02-24T16:33:40.8174868Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8174949Z                     diff += 1
2025-02-24T16:33:40.8175023Z     
2025-02-24T16:33:40.8175109Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8175251Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8175426Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8175545Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8175614Z E           
2025-02-24T16:33:40.8175729Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8175989Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8176329Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8176334Z 
2025-02-24T16:33:40.8176645Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8176653Z 
2025-02-24T16:33:40.8176826Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8176831Z 
2025-02-24T16:33:40.8177052Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121b8c50>
2025-02-24T16:33:40.8177227Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a25f380>
2025-02-24T16:33:40.8177466Z attr = 'wavelength_cm'
2025-02-24T16:33:40.8177472Z 
2025-02-24T16:33:40.8177608Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8177731Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8177813Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8177887Z         try:
2025-02-24T16:33:40.8178024Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8178108Z         except KeyError:
2025-02-24T16:33:40.8178248Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8178319Z     
2025-02-24T16:33:40.8178409Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8178501Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8178593Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8178722Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8178815Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8178910Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8179018Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8179022Z 
2025-02-24T16:33:40.8179153Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8179264Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8179413Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8179485Z     ???
2025-02-24T16:33:40.8179591Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8179717Z 
2025-02-24T16:33:40.8179792Z >   ???
2025-02-24T16:33:40.8179918Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8179989Z E   
2025-02-24T16:33:40.8180115Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8180229Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8180306Z E          ...
2025-02-24T16:33:40.8180391Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8180525Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8180636Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8180709Z E          ...
2025-02-24T16:33:40.8180794Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8180924Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8181032Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8181037Z 
2025-02-24T16:33:40.8181127Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8181386Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] _
2025-02-24T16:33:40.8181391Z 
2025-02-24T16:33:40.8181520Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8181652Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8181884Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8182016Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8182143Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8182234Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8182313Z err_msg = None
2025-02-24T16:33:40.8182317Z 
2025-02-24T16:33:40.8182429Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8182511Z         if err_msg is None:
2025-02-24T16:33:40.8182609Z             if left.shape != right.shape:
2025-02-24T16:33:40.8182690Z                 raise_assert_detail(
2025-02-24T16:33:40.8182839Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8182908Z                 )
2025-02-24T16:33:40.8182987Z     
2025-02-24T16:33:40.8183062Z             diff = 0
2025-02-24T16:33:40.8183171Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8183261Z                 # count up differences
2025-02-24T16:33:40.8183435Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8183516Z                     diff += 1
2025-02-24T16:33:40.8183582Z     
2025-02-24T16:33:40.8183676Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8183816Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8183989Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8184109Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8184177Z E           
2025-02-24T16:33:40.8184293Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8184551Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8184821Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8184826Z 
2025-02-24T16:33:40.8185235Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8185240Z 
2025-02-24T16:33:40.8185414Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8185418Z 
2025-02-24T16:33:40.8185648Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121b8d10>
2025-02-24T16:33:40.8185865Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a25f380>, attr = 'f_lu'
2025-02-24T16:33:40.8185869Z 
2025-02-24T16:33:40.8186005Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8186126Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8186214Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8186282Z         try:
2025-02-24T16:33:40.8186425Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8186504Z         except KeyError:
2025-02-24T16:33:40.8186647Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8186716Z     
2025-02-24T16:33:40.8186807Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8186902Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8186992Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8187128Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8187416Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8187512Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8187620Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8187632Z 
2025-02-24T16:33:40.8187756Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8187873Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8188021Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8188092Z     ???
2025-02-24T16:33:40.8188196Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8188204Z 
2025-02-24T16:33:40.8188276Z >   ???
2025-02-24T16:33:40.8188408Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8188474Z E   
2025-02-24T16:33:40.8188608Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8188716Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8188794Z E          ...
2025-02-24T16:33:40.8188881Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8189016Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8189134Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8189204Z E          ...
2025-02-24T16:33:40.8189293Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8189420Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8189531Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8189535Z 
2025-02-24T16:33:40.8189625Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8190052Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] _
2025-02-24T16:33:40.8190062Z 
2025-02-24T16:33:40.8190455Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121b9310>
2025-02-24T16:33:40.8190741Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a25f380>
2025-02-24T16:33:40.8190896Z attr = 'stimulated_emission_factor'
2025-02-24T16:33:40.8190903Z 
2025-02-24T16:33:40.8191087Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8191202Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8191288Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8191359Z         try:
2025-02-24T16:33:40.8191504Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8191582Z         except KeyError:
2025-02-24T16:33:40.8191725Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8191943Z     
2025-02-24T16:33:40.8192028Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8192123Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8192209Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8192346Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8192433Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8192527Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8192639Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8192710Z             else:
2025-02-24T16:33:40.8192807Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8192912Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8192917Z 
2025-02-24T16:33:40.8193045Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8193154Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8193308Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8193381Z     ???
2025-02-24T16:33:40.8193486Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8193490Z 
2025-02-24T16:33:40.8193560Z >   ???
2025-02-24T16:33:40.8193743Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:33:40.8193927Z E   
2025-02-24T16:33:40.8194104Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T16:33:40.8194491Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8199808Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:33:40.8204971Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:33:40.8205390Z E   At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T16:33:40.8205395Z 
2025-02-24T16:33:40.8205482Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8205784Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] _
2025-02-24T16:33:40.8205793Z 
2025-02-24T16:33:40.8205929Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8206061Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8206164Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8206301Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8206428Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8206523Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8206598Z err_msg = None
2025-02-24T16:33:40.8206602Z 
2025-02-24T16:33:40.8206718Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8206798Z         if err_msg is None:
2025-02-24T16:33:40.8206897Z             if left.shape != right.shape:
2025-02-24T16:33:40.8206988Z                 raise_assert_detail(
2025-02-24T16:33:40.8207133Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8207208Z                 )
2025-02-24T16:33:40.8207381Z     
2025-02-24T16:33:40.8207459Z             diff = 0
2025-02-24T16:33:40.8207569Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8207665Z                 # count up differences
2025-02-24T16:33:40.8207846Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8207926Z                     diff += 1
2025-02-24T16:33:40.8207999Z     
2025-02-24T16:33:40.8208086Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8208228Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8208498Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8208699Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8209000Z E           
2025-02-24T16:33:40.8209185Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8209592Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8209863Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8209874Z 
2025-02-24T16:33:40.8210190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8210198Z 
2025-02-24T16:33:40.8210374Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8210378Z 
2025-02-24T16:33:40.8210610Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121b93d0>
2025-02-24T16:33:40.8210786Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a25f380>
2025-02-24T16:33:40.8210989Z attr = 'previous_beta_sobolev'
2025-02-24T16:33:40.8210994Z 
2025-02-24T16:33:40.8211134Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8211254Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8211334Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8211407Z         try:
2025-02-24T16:33:40.8211551Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8211630Z         except KeyError:
2025-02-24T16:33:40.8211773Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8211841Z     
2025-02-24T16:33:40.8211934Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8212027Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8212120Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8212257Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8212340Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8212435Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8212545Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8212625Z             else:
2025-02-24T16:33:40.8212717Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8212826Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8212831Z 
2025-02-24T16:33:40.8212959Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8213073Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8213224Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8213296Z     ???
2025-02-24T16:33:40.8213408Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8213412Z 
2025-02-24T16:33:40.8213483Z >   ???
2025-02-24T16:33:40.8213611Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8213682Z E   
2025-02-24T16:33:40.8213816Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8213931Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8214000Z E          ...
2025-02-24T16:33:40.8214095Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8214231Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8214344Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8214418Z E          ...
2025-02-24T16:33:40.8214502Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8214630Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8214842Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8214846Z 
2025-02-24T16:33:40.8214937Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8215218Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] _
2025-02-24T16:33:40.8215223Z 
2025-02-24T16:33:40.8215356Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8215490Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8215585Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8215723Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8215849Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8215940Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8216020Z err_msg = None
2025-02-24T16:33:40.8216024Z 
2025-02-24T16:33:40.8216133Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8216218Z         if err_msg is None:
2025-02-24T16:33:40.8216317Z             if left.shape != right.shape:
2025-02-24T16:33:40.8216400Z                 raise_assert_detail(
2025-02-24T16:33:40.8216628Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8216700Z                 )
2025-02-24T16:33:40.8216773Z     
2025-02-24T16:33:40.8216842Z             diff = 0
2025-02-24T16:33:40.8216955Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8217046Z                 # count up differences
2025-02-24T16:33:40.8217220Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8217441Z                     diff += 1
2025-02-24T16:33:40.8217510Z     
2025-02-24T16:33:40.8217603Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8217745Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8217923Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8218039Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8218108Z E           
2025-02-24T16:33:40.8218223Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8218485Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8218752Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8218760Z 
2025-02-24T16:33:40.8219078Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8219083Z 
2025-02-24T16:33:40.8219252Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8219259Z 
2025-02-24T16:33:40.8219494Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121b9490>
2025-02-24T16:33:40.8219669Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a25f380>
2025-02-24T16:33:40.8219748Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.8219752Z 
2025-02-24T16:33:40.8219892Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8220007Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8220094Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8220168Z         try:
2025-02-24T16:33:40.8220307Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8220513Z         except KeyError:
2025-02-24T16:33:40.8220651Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8220728Z     
2025-02-24T16:33:40.8220813Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8220913Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8221007Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8221140Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8221228Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8221317Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8221426Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8221495Z             else:
2025-02-24T16:33:40.8221593Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8221700Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8221704Z 
2025-02-24T16:33:40.8221833Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8221949Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8222099Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8222173Z     ???
2025-02-24T16:33:40.8222279Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8222396Z 
2025-02-24T16:33:40.8222465Z >   ???
2025-02-24T16:33:40.8222596Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8222663Z E   
2025-02-24T16:33:40.8222795Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8222904Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8222977Z E          ...
2025-02-24T16:33:40.8223066Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8223194Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8223308Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8223380Z E          ...
2025-02-24T16:33:40.8223469Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8223592Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8223699Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8223707Z 
2025-02-24T16:33:40.8223798Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8224072Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] _
2025-02-24T16:33:40.8224077Z 
2025-02-24T16:33:40.8224208Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8224334Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8224433Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8224573Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8224696Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8224792Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8224864Z err_msg = None
2025-02-24T16:33:40.8224869Z 
2025-02-24T16:33:40.8224987Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8225073Z         if err_msg is None:
2025-02-24T16:33:40.8225168Z             if left.shape != right.shape:
2025-02-24T16:33:40.8225255Z                 raise_assert_detail(
2025-02-24T16:33:40.8225397Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8225472Z                 )
2025-02-24T16:33:40.8225538Z     
2025-02-24T16:33:40.8225614Z             diff = 0
2025-02-24T16:33:40.8225728Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8225814Z                 # count up differences
2025-02-24T16:33:40.8225995Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8226158Z                     diff += 1
2025-02-24T16:33:40.8226230Z     
2025-02-24T16:33:40.8226316Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8226457Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8226639Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8226751Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8226826Z E           
2025-02-24T16:33:40.8226936Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8227197Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8227594Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8227712Z 
2025-02-24T16:33:40.8228025Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8228030Z 
2025-02-24T16:33:40.8228207Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8228211Z 
2025-02-24T16:33:40.8228445Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121b9550>
2025-02-24T16:33:40.8228616Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a25f380>
2025-02-24T16:33:40.8228698Z attr = 'beta_sobolev'
2025-02-24T16:33:40.8228703Z 
2025-02-24T16:33:40.8228839Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8228966Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8229052Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8229122Z         try:
2025-02-24T16:33:40.8229265Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8229344Z         except KeyError:
2025-02-24T16:33:40.8229492Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8229559Z     
2025-02-24T16:33:40.8229651Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8229748Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8229835Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8229973Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8230055Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8230149Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8230256Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8230336Z             else:
2025-02-24T16:33:40.8230436Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8230541Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8230545Z 
2025-02-24T16:33:40.8230674Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8230787Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8230942Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8231017Z     ???
2025-02-24T16:33:40.8231125Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8231129Z 
2025-02-24T16:33:40.8231202Z >   ???
2025-02-24T16:33:40.8231329Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8231405Z E   
2025-02-24T16:33:40.8231534Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8231654Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8231888Z E          ...
2025-02-24T16:33:40.8231974Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8232109Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8232221Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8232296Z E          ...
2025-02-24T16:33:40.8232385Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8232518Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8232627Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8232631Z 
2025-02-24T16:33:40.8232718Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8232988Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] _
2025-02-24T16:33:40.8232993Z 
2025-02-24T16:33:40.8233149Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8233392Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8233559Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8233779Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8233987Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8234257Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8234345Z err_msg = None
2025-02-24T16:33:40.8234350Z 
2025-02-24T16:33:40.8234466Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8234546Z         if err_msg is None:
2025-02-24T16:33:40.8234644Z             if left.shape != right.shape:
2025-02-24T16:33:40.8234727Z                 raise_assert_detail(
2025-02-24T16:33:40.8234878Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8234948Z                 )
2025-02-24T16:33:40.8235023Z     
2025-02-24T16:33:40.8235101Z             diff = 0
2025-02-24T16:33:40.8235212Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8235303Z                 # count up differences
2025-02-24T16:33:40.8235476Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8235561Z                     diff += 1
2025-02-24T16:33:40.8235626Z     
2025-02-24T16:33:40.8235718Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8235858Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8236031Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8236146Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8236216Z E           
2025-02-24T16:33:40.8236331Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8236594Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8236856Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8236864Z 
2025-02-24T16:33:40.8237182Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8237186Z 
2025-02-24T16:33:40.8237531Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8237537Z 
2025-02-24T16:33:40.8237772Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121b96d0>
2025-02-24T16:33:40.8238070Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff50a25f380>
2025-02-24T16:33:40.8238144Z attr = 'j_blues'
2025-02-24T16:33:40.8238148Z 
2025-02-24T16:33:40.8238289Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8238407Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8238494Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8238567Z         try:
2025-02-24T16:33:40.8238705Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8238789Z         except KeyError:
2025-02-24T16:33:40.8238926Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8239000Z     
2025-02-24T16:33:40.8239089Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8239180Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8239271Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8239402Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8239496Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8239584Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8239696Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8239771Z             else:
2025-02-24T16:33:40.8239864Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8240095Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8240100Z 
2025-02-24T16:33:40.8240224Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8240339Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8240492Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8240560Z     ???
2025-02-24T16:33:40.8240674Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8240679Z 
2025-02-24T16:33:40.8240745Z >   ???
2025-02-24T16:33:40.8240878Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8240950Z E   
2025-02-24T16:33:40.8241084Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8241200Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8241269Z E          ...
2025-02-24T16:33:40.8241362Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8241492Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8241608Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8241676Z E          ...
2025-02-24T16:33:40.8241765Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8241895Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8241998Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8242002Z 
2025-02-24T16:33:40.8242095Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8242297Z _____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines] ______
2025-02-24T16:33:40.8242304Z 
2025-02-24T16:33:40.8242437Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8242572Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8242668Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8242812Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8242934Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8243030Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8243108Z err_msg = None
2025-02-24T16:33:40.8243113Z 
2025-02-24T16:33:40.8243221Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8243306Z         if err_msg is None:
2025-02-24T16:33:40.8243398Z             if left.shape != right.shape:
2025-02-24T16:33:40.8243574Z                 raise_assert_detail(
2025-02-24T16:33:40.8243719Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8243795Z                 )
2025-02-24T16:33:40.8243866Z     
2025-02-24T16:33:40.8243936Z             diff = 0
2025-02-24T16:33:40.8244049Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8244137Z                 # count up differences
2025-02-24T16:33:40.8244316Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8244392Z                     diff += 1
2025-02-24T16:33:40.8244465Z     
2025-02-24T16:33:40.8244558Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8244692Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8244872Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8244985Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8245063Z E           
2025-02-24T16:33:40.8245172Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8245441Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8245790Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8245796Z 
2025-02-24T16:33:40.8246111Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8246120Z 
2025-02-24T16:33:40.8246291Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8246295Z 
2025-02-24T16:33:40.8246532Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121ba450>
2025-02-24T16:33:40.8246702Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff5121b8e30>
2025-02-24T16:33:40.8246785Z attr = 'lines'
2025-02-24T16:33:40.8246790Z 
2025-02-24T16:33:40.8246930Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8247046Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8247138Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8247209Z         try:
2025-02-24T16:33:40.8247469Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8247551Z         except KeyError:
2025-02-24T16:33:40.8247695Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8247767Z     
2025-02-24T16:33:40.8247853Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8247955Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8248044Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8248181Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8248266Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8248360Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8248475Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8248546Z             else:
2025-02-24T16:33:40.8248646Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8248750Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8248754Z 
2025-02-24T16:33:40.8248885Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8249003Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8249147Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8249223Z     ???
2025-02-24T16:33:40.8249448Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8249453Z 
2025-02-24T16:33:40.8249525Z >   ???
2025-02-24T16:33:40.8249652Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8249725Z E   
2025-02-24T16:33:40.8249858Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8249973Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8250048Z E          ...
2025-02-24T16:33:40.8250138Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8250275Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8250388Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8250463Z E          ...
2025-02-24T16:33:40.8250554Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8250678Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8250791Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8250796Z 
2025-02-24T16:33:40.8250884Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8251138Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] _
2025-02-24T16:33:40.8251143Z 
2025-02-24T16:33:40.8251379Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121ba510>
2025-02-24T16:33:40.8251829Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff5121b8e30>
2025-02-24T16:33:40.8251984Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.8251991Z 
2025-02-24T16:33:40.8252217Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8252412Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8252554Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8252678Z         try:
2025-02-24T16:33:40.8252837Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8252918Z         except KeyError:
2025-02-24T16:33:40.8253064Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8253132Z     
2025-02-24T16:33:40.8253224Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8253319Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8253405Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8253547Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8253631Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8253724Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8253835Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8253839Z 
2025-02-24T16:33:40.8253969Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8254087Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8254092Z 
2025-02-24T16:33:40.8254232Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8254328Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8254437Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8254521Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8254667Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8254753Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8254863Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8254941Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8255020Z err_msg = None
2025-02-24T16:33:40.8255025Z 
2025-02-24T16:33:40.8255139Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8255218Z         if err_msg is None:
2025-02-24T16:33:40.8255316Z             if left.shape != right.shape:
2025-02-24T16:33:40.8255399Z                 raise_assert_detail(
2025-02-24T16:33:40.8255547Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8255714Z                 )
2025-02-24T16:33:40.8255786Z     
2025-02-24T16:33:40.8255863Z             diff = 0
2025-02-24T16:33:40.8255974Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8256067Z                 # count up differences
2025-02-24T16:33:40.8256242Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8256326Z                     diff += 1
2025-02-24T16:33:40.8256394Z     
2025-02-24T16:33:40.8256485Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8256627Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8256802Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8256910Z E           AssertionError: Series are different
2025-02-24T16:33:40.8256980Z E           
2025-02-24T16:33:40.8257087Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.8257625Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8258092Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8258439Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8258448Z 
2025-02-24T16:33:40.8258759Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8259001Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] _
2025-02-24T16:33:40.8259006Z 
2025-02-24T16:33:40.8259240Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121ba5d0>
2025-02-24T16:33:40.8259415Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff5121b8e30>
2025-02-24T16:33:40.8259503Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.8259507Z 
2025-02-24T16:33:40.8259649Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8259767Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8259857Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8259926Z         try:
2025-02-24T16:33:40.8260070Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8260153Z         except KeyError:
2025-02-24T16:33:40.8260290Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8260365Z     
2025-02-24T16:33:40.8260450Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8260544Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8260633Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8260768Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8260856Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8260943Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8261056Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8261060Z 
2025-02-24T16:33:40.8261184Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8261417Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8261422Z 
2025-02-24T16:33:40.8261567Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8261653Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8261765Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8261846Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8261992Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8262073Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8262181Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8262267Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8262340Z err_msg = None
2025-02-24T16:33:40.8262344Z 
2025-02-24T16:33:40.8262456Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8262538Z         if err_msg is None:
2025-02-24T16:33:40.8262635Z             if left.shape != right.shape:
2025-02-24T16:33:40.8262723Z                 raise_assert_detail(
2025-02-24T16:33:40.8262868Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8262943Z                 )
2025-02-24T16:33:40.8263091Z     
2025-02-24T16:33:40.8263168Z             diff = 0
2025-02-24T16:33:40.8263279Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8263370Z                 # count up differences
2025-02-24T16:33:40.8263549Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8263625Z                     diff += 1
2025-02-24T16:33:40.8272898Z     
2025-02-24T16:33:40.8273044Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8273289Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8273618Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8273813Z E           AssertionError: Series are different
2025-02-24T16:33:40.8273931Z E           
2025-02-24T16:33:40.8274107Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.8274617Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8275008Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8275386Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8275395Z 
2025-02-24T16:33:40.8275723Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8275927Z _______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-nu] _______
2025-02-24T16:33:40.8275932Z 
2025-02-24T16:33:40.8276066Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8276195Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8276484Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8276626Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8276748Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8276853Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8276931Z err_msg = None
2025-02-24T16:33:40.8276936Z 
2025-02-24T16:33:40.8277059Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8277149Z         if err_msg is None:
2025-02-24T16:33:40.8277406Z             if left.shape != right.shape:
2025-02-24T16:33:40.8277503Z                 raise_assert_detail(
2025-02-24T16:33:40.8277655Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8277731Z                 )
2025-02-24T16:33:40.8277804Z     
2025-02-24T16:33:40.8277886Z             diff = 0
2025-02-24T16:33:40.8278006Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8278095Z                 # count up differences
2025-02-24T16:33:40.8278274Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8278503Z                     diff += 1
2025-02-24T16:33:40.8278578Z     
2025-02-24T16:33:40.8278668Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8278814Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8278992Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8279109Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8279186Z E           
2025-02-24T16:33:40.8279300Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8279567Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8279836Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8279844Z 
2025-02-24T16:33:40.8280157Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8280162Z 
2025-02-24T16:33:40.8280342Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8280347Z 
2025-02-24T16:33:40.8280592Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121ba810>
2025-02-24T16:33:40.8280797Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff5121b8e30>, attr = 'nu'
2025-02-24T16:33:40.8280801Z 
2025-02-24T16:33:40.8280949Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8281068Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8281163Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8281239Z         try:
2025-02-24T16:33:40.8281383Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8281469Z         except KeyError:
2025-02-24T16:33:40.8281609Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8281687Z     
2025-02-24T16:33:40.8281774Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8281875Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8281971Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8282104Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8282313Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8282402Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8282521Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8282526Z 
2025-02-24T16:33:40.8282656Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8282783Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8282937Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8283008Z     ???
2025-02-24T16:33:40.8283122Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8283127Z 
2025-02-24T16:33:40.8283194Z >   ???
2025-02-24T16:33:40.8283328Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8283402Z E   
2025-02-24T16:33:40.8283531Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8283646Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8283721Z E          ...
2025-02-24T16:33:40.8283815Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8283945Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8284060Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8284238Z E          ...
2025-02-24T16:33:40.8284321Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8284447Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8284552Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8284557Z 
2025-02-24T16:33:40.8284653Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8284865Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] __
2025-02-24T16:33:40.8284869Z 
2025-02-24T16:33:40.8284998Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8285132Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8285233Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8285371Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8285498Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8285592Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8285673Z err_msg = None
2025-02-24T16:33:40.8285678Z 
2025-02-24T16:33:40.8285790Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8285876Z         if err_msg is None:
2025-02-24T16:33:40.8285970Z             if left.shape != right.shape:
2025-02-24T16:33:40.8286060Z                 raise_assert_detail(
2025-02-24T16:33:40.8286210Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8286282Z                 )
2025-02-24T16:33:40.8286358Z     
2025-02-24T16:33:40.8286426Z             diff = 0
2025-02-24T16:33:40.8286538Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8286623Z                 # count up differences
2025-02-24T16:33:40.8286798Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8286883Z                     diff += 1
2025-02-24T16:33:40.8286951Z     
2025-02-24T16:33:40.8287044Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8287186Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8287473Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8287592Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8287661Z E           
2025-02-24T16:33:40.8287780Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8288039Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8288421Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8288431Z 
2025-02-24T16:33:40.8288940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8288950Z 
2025-02-24T16:33:40.8289240Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8289246Z 
2025-02-24T16:33:40.8289633Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121ba8d0>
2025-02-24T16:33:40.8289851Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff5121b8e30>
2025-02-24T16:33:40.8289931Z attr = 'wavelength_cm'
2025-02-24T16:33:40.8289935Z 
2025-02-24T16:33:40.8290085Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8290202Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8290419Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8290493Z         try:
2025-02-24T16:33:40.8290639Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8290723Z         except KeyError:
2025-02-24T16:33:40.8290863Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8290936Z     
2025-02-24T16:33:40.8291023Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8291121Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8291210Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8291348Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8291441Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8291530Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8291647Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8291652Z 
2025-02-24T16:33:40.8291778Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8291903Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8292058Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8292127Z     ???
2025-02-24T16:33:40.8292242Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8292247Z 
2025-02-24T16:33:40.8292315Z >   ???
2025-02-24T16:33:40.8292447Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8292515Z E   
2025-02-24T16:33:40.8292648Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8292763Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8292837Z E          ...
2025-02-24T16:33:40.8292930Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8293059Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8293174Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8293253Z E          ...
2025-02-24T16:33:40.8293337Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8293464Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8293570Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8293574Z 
2025-02-24T16:33:40.8293666Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8293863Z ______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-f_lu] ______
2025-02-24T16:33:40.8293871Z 
2025-02-24T16:33:40.8294000Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8294222Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8294321Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8294457Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8294580Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8294683Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8294761Z err_msg = None
2025-02-24T16:33:40.8294765Z 
2025-02-24T16:33:40.8294876Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8294962Z         if err_msg is None:
2025-02-24T16:33:40.8295056Z             if left.shape != right.shape:
2025-02-24T16:33:40.8295146Z                 raise_assert_detail(
2025-02-24T16:33:40.8295299Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8295374Z                 )
2025-02-24T16:33:40.8295448Z     
2025-02-24T16:33:40.8295519Z             diff = 0
2025-02-24T16:33:40.8295638Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8295725Z                 # count up differences
2025-02-24T16:33:40.8295903Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8296075Z                     diff += 1
2025-02-24T16:33:40.8296142Z     
2025-02-24T16:33:40.8296234Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8296373Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8296547Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8296662Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8296738Z E           
2025-02-24T16:33:40.8296854Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8297114Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8297530Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8297540Z 
2025-02-24T16:33:40.8297865Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8297870Z 
2025-02-24T16:33:40.8298044Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8298048Z 
2025-02-24T16:33:40.8298277Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121ba990>
2025-02-24T16:33:40.8298485Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff5121b8e30>, attr = 'f_lu'
2025-02-24T16:33:40.8298495Z 
2025-02-24T16:33:40.8298634Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8298754Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8298842Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8298918Z         try:
2025-02-24T16:33:40.8299061Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8299146Z         except KeyError:
2025-02-24T16:33:40.8299291Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8299360Z     
2025-02-24T16:33:40.8299452Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8299545Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8299670Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8299803Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8300015Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8300110Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8300224Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8300228Z 
2025-02-24T16:33:40.8300360Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8300477Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8300630Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8300706Z     ???
2025-02-24T16:33:40.8300817Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8300821Z 
2025-02-24T16:33:40.8300894Z >   ???
2025-02-24T16:33:40.8301023Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8301095Z E   
2025-02-24T16:33:40.8301221Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8301336Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8301415Z E          ...
2025-02-24T16:33:40.8301502Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8301632Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8301741Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8301924Z E          ...
2025-02-24T16:33:40.8302007Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8302136Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8302245Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8302250Z 
2025-02-24T16:33:40.8302340Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8302587Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] _
2025-02-24T16:33:40.8302593Z 
2025-02-24T16:33:40.8302815Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121baf90>
2025-02-24T16:33:40.8302995Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff5121b8e30>
2025-02-24T16:33:40.8303089Z attr = 'stimulated_emission_factor'
2025-02-24T16:33:40.8303094Z 
2025-02-24T16:33:40.8303228Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8303345Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8303431Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8303505Z         try:
2025-02-24T16:33:40.8303642Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8303726Z         except KeyError:
2025-02-24T16:33:40.8303865Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8303933Z     
2025-02-24T16:33:40.8304025Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8304117Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8304209Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8304340Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8304432Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8304524Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8304630Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8304705Z             else:
2025-02-24T16:33:40.8304799Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8304914Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8304919Z 
2025-02-24T16:33:40.8305047Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8305157Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8305309Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8305376Z     ???
2025-02-24T16:33:40.8305486Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8305491Z 
2025-02-24T16:33:40.8305557Z >   ???
2025-02-24T16:33:40.8305740Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:33:40.8305916Z E   
2025-02-24T16:33:40.8306083Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T16:33:40.8306455Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8311444Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:33:40.8316454Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:33:40.8316737Z E   At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T16:33:40.8316748Z 
2025-02-24T16:33:40.8316836Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8317069Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] _
2025-02-24T16:33:40.8317074Z 
2025-02-24T16:33:40.8317205Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8317458Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8317561Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8317704Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8317834Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8317927Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8318118Z err_msg = None
2025-02-24T16:33:40.8318123Z 
2025-02-24T16:33:40.8318236Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8318321Z         if err_msg is None:
2025-02-24T16:33:40.8318422Z             if left.shape != right.shape:
2025-02-24T16:33:40.8318506Z                 raise_assert_detail(
2025-02-24T16:33:40.8318658Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8318728Z                 )
2025-02-24T16:33:40.8318801Z     
2025-02-24T16:33:40.8318872Z             diff = 0
2025-02-24T16:33:40.8318986Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8319082Z                 # count up differences
2025-02-24T16:33:40.8319252Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8319337Z                     diff += 1
2025-02-24T16:33:40.8319406Z     
2025-02-24T16:33:40.8319498Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8319640Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8319812Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8319931Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8320003Z E           
2025-02-24T16:33:40.8320123Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8320381Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8320649Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8320657Z 
2025-02-24T16:33:40.8320971Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8320976Z 
2025-02-24T16:33:40.8321156Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8321160Z 
2025-02-24T16:33:40.8321387Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121bb050>
2025-02-24T16:33:40.8321621Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff5121b8e30>
2025-02-24T16:33:40.8321785Z attr = 'previous_beta_sobolev'
2025-02-24T16:33:40.8321952Z 
2025-02-24T16:33:40.8322186Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8322383Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8322517Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8322642Z         try:
2025-02-24T16:33:40.8322823Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8322907Z         except KeyError:
2025-02-24T16:33:40.8323048Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8323114Z     
2025-02-24T16:33:40.8323204Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8323298Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8323390Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8323523Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8323607Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8323699Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8323810Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8323890Z             else:
2025-02-24T16:33:40.8323986Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8324095Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8324100Z 
2025-02-24T16:33:40.8324321Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8324435Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8324589Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8324657Z     ???
2025-02-24T16:33:40.8324770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8324774Z 
2025-02-24T16:33:40.8324846Z >   ???
2025-02-24T16:33:40.8324973Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8325044Z E   
2025-02-24T16:33:40.8325170Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8325289Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8325358Z E          ...
2025-02-24T16:33:40.8325451Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8325584Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8325703Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8325776Z E          ...
2025-02-24T16:33:40.8325861Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8325993Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8326098Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8326108Z 
2025-02-24T16:33:40.8326196Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8326401Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] __
2025-02-24T16:33:40.8326405Z 
2025-02-24T16:33:40.8326854Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8326994Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8327097Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8327226Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8327490Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8327587Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8327665Z err_msg = None
2025-02-24T16:33:40.8327669Z 
2025-02-24T16:33:40.8327779Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8327866Z         if err_msg is None:
2025-02-24T16:33:40.8327964Z             if left.shape != right.shape:
2025-02-24T16:33:40.8328049Z                 raise_assert_detail(
2025-02-24T16:33:40.8328200Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8328399Z                 )
2025-02-24T16:33:40.8328470Z     
2025-02-24T16:33:40.8328541Z             diff = 0
2025-02-24T16:33:40.8328658Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8328750Z                 # count up differences
2025-02-24T16:33:40.8328917Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8329005Z                     diff += 1
2025-02-24T16:33:40.8329072Z     
2025-02-24T16:33:40.8329165Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8329301Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8329476Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8329594Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8329664Z E           
2025-02-24T16:33:40.8329779Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8330040Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8330413Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8330419Z 
2025-02-24T16:33:40.8330732Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8330736Z 
2025-02-24T16:33:40.8330904Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8330918Z 
2025-02-24T16:33:40.8331145Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121bb110>
2025-02-24T16:33:40.8331318Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff5121b8e30>
2025-02-24T16:33:40.8331397Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.8331401Z 
2025-02-24T16:33:40.8331543Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8331662Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8331750Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8331824Z         try:
2025-02-24T16:33:40.8331963Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8332047Z         except KeyError:
2025-02-24T16:33:40.8332181Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8332254Z     
2025-02-24T16:33:40.8332339Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8332440Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8332533Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8332669Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8332757Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8332847Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8332960Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8333034Z             else:
2025-02-24T16:33:40.8333140Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8333250Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8333255Z 
2025-02-24T16:33:40.8333379Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8333496Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8333640Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8333713Z     ???
2025-02-24T16:33:40.8333828Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8333938Z 
2025-02-24T16:33:40.8334007Z >   ???
2025-02-24T16:33:40.8334139Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8334206Z E   
2025-02-24T16:33:40.8334337Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8334448Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8334525Z E          ...
2025-02-24T16:33:40.8334617Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8334745Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8334860Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8334929Z E          ...
2025-02-24T16:33:40.8335018Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8335142Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8335253Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8335257Z 
2025-02-24T16:33:40.8335349Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8335551Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] __
2025-02-24T16:33:40.8335555Z 
2025-02-24T16:33:40.8335687Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8335813Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8335993Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8336128Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8336250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8336346Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8336419Z err_msg = None
2025-02-24T16:33:40.8336423Z 
2025-02-24T16:33:40.8336536Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8336621Z         if err_msg is None:
2025-02-24T16:33:40.8336718Z             if left.shape != right.shape:
2025-02-24T16:33:40.8336807Z                 raise_assert_detail(
2025-02-24T16:33:40.8336950Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8337026Z                 )
2025-02-24T16:33:40.8337093Z     
2025-02-24T16:33:40.8337172Z             diff = 0
2025-02-24T16:33:40.8337413Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8337503Z                 # count up differences
2025-02-24T16:33:40.8337679Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8337755Z                     diff += 1
2025-02-24T16:33:40.8337828Z     
2025-02-24T16:33:40.8337916Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8338057Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8338228Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8338343Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8338418Z E           
2025-02-24T16:33:40.8338527Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8338790Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8339057Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8339062Z 
2025-02-24T16:33:40.8339370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8339489Z 
2025-02-24T16:33:40.8339665Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8339671Z 
2025-02-24T16:33:40.8339898Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121bb1d0>
2025-02-24T16:33:40.8340069Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff5121b8e30>
2025-02-24T16:33:40.8340152Z attr = 'beta_sobolev'
2025-02-24T16:33:40.8340157Z 
2025-02-24T16:33:40.8340291Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8340410Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8340498Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8340570Z         try:
2025-02-24T16:33:40.8340713Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8340793Z         except KeyError:
2025-02-24T16:33:40.8340932Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8341002Z     
2025-02-24T16:33:40.8341094Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8341191Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8341278Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8341412Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8341622Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8341718Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8341826Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8341901Z             else:
2025-02-24T16:33:40.8341999Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8342103Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8342108Z 
2025-02-24T16:33:40.8342234Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8342346Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8342499Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8342573Z     ???
2025-02-24T16:33:40.8342678Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8342682Z 
2025-02-24T16:33:40.8342753Z >   ???
2025-02-24T16:33:40.8342877Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8342953Z E   
2025-02-24T16:33:40.8343078Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8343190Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8343267Z E          ...
2025-02-24T16:33:40.8343352Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8343484Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8343593Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8343668Z E          ...
2025-02-24T16:33:40.8343753Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8343883Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8343991Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8343995Z 
2025-02-24T16:33:40.8344083Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8344284Z ____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-j_blues] _____
2025-02-24T16:33:40.8344291Z 
2025-02-24T16:33:40.8344418Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8344547Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8344646Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8344779Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8344903Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8344994Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8345167Z err_msg = None
2025-02-24T16:33:40.8345171Z 
2025-02-24T16:33:40.8345285Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8345365Z         if err_msg is None:
2025-02-24T16:33:40.8345465Z             if left.shape != right.shape:
2025-02-24T16:33:40.8345547Z                 raise_assert_detail(
2025-02-24T16:33:40.8345701Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8345770Z                 )
2025-02-24T16:33:40.8345841Z     
2025-02-24T16:33:40.8345916Z             diff = 0
2025-02-24T16:33:40.8346024Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8346115Z                 # count up differences
2025-02-24T16:33:40.8346286Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8346371Z                     diff += 1
2025-02-24T16:33:40.8346439Z     
2025-02-24T16:33:40.8346531Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8346675Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8346844Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8347026Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8347149Z E           
2025-02-24T16:33:40.8347591Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8348065Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8348516Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8348527Z 
2025-02-24T16:33:40.8348846Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8348851Z 
2025-02-24T16:33:40.8349034Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8349039Z 
2025-02-24T16:33:40.8349264Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121bb350>
2025-02-24T16:33:40.8349437Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff5121b8e30>
2025-02-24T16:33:40.8349513Z attr = 'j_blues'
2025-02-24T16:33:40.8349518Z 
2025-02-24T16:33:40.8349664Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8349785Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8349868Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8349942Z         try:
2025-02-24T16:33:40.8350087Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8350171Z         except KeyError:
2025-02-24T16:33:40.8350308Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8350381Z     
2025-02-24T16:33:40.8350472Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8350568Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8350660Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8350792Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8350882Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8350972Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8351089Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8351165Z             else:
2025-02-24T16:33:40.8351260Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8351375Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8351501Z 
2025-02-24T16:33:40.8351630Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8351750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8351901Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8351971Z     ???
2025-02-24T16:33:40.8352090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8352095Z 
2025-02-24T16:33:40.8352162Z >   ???
2025-02-24T16:33:40.8352295Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8352362Z E   
2025-02-24T16:33:40.8352494Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8352608Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8352677Z E          ...
2025-02-24T16:33:40.8352770Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8352901Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8353021Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8353090Z E          ...
2025-02-24T16:33:40.8353179Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8353307Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8353413Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8353544Z 
2025-02-24T16:33:40.8353639Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8353862Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines] _______
2025-02-24T16:33:40.8353866Z 
2025-02-24T16:33:40.8354001Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8354135Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8354230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8354366Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8354492Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8354589Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8354666Z err_msg = None
2025-02-24T16:33:40.8354670Z 
2025-02-24T16:33:40.8354783Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8354868Z         if err_msg is None:
2025-02-24T16:33:40.8354962Z             if left.shape != right.shape:
2025-02-24T16:33:40.8355051Z                 raise_assert_detail(
2025-02-24T16:33:40.8355194Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8355269Z                 )
2025-02-24T16:33:40.8355341Z     
2025-02-24T16:33:40.8355410Z             diff = 0
2025-02-24T16:33:40.8355529Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8355616Z                 # count up differences
2025-02-24T16:33:40.8355795Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8355876Z                     diff += 1
2025-02-24T16:33:40.8355944Z     
2025-02-24T16:33:40.8356037Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8356174Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8356353Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8356465Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8356539Z E           
2025-02-24T16:33:40.8356657Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8356915Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8357406Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8357417Z 
2025-02-24T16:33:40.8357727Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8357732Z 
2025-02-24T16:33:40.8357902Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8357907Z 
2025-02-24T16:33:40.8358135Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e0110>
2025-02-24T16:33:40.8358302Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e7534980>
2025-02-24T16:33:40.8358381Z attr = 'lines'
2025-02-24T16:33:40.8358386Z 
2025-02-24T16:33:40.8358526Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8358642Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8358731Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8358802Z         try:
2025-02-24T16:33:40.8358946Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8359026Z         except KeyError:
2025-02-24T16:33:40.8359287Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8359359Z     
2025-02-24T16:33:40.8359446Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8359546Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8359634Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8359769Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8359853Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8359946Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8360059Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8360132Z             else:
2025-02-24T16:33:40.8360231Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8360337Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8360341Z 
2025-02-24T16:33:40.8360471Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8360589Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8360738Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8360811Z     ???
2025-02-24T16:33:40.8360920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8360925Z 
2025-02-24T16:33:40.8361001Z >   ???
2025-02-24T16:33:40.8361127Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8361202Z E   
2025-02-24T16:33:40.8361333Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8361443Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8361520Z E          ...
2025-02-24T16:33:40.8361606Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8361741Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8361857Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8361927Z E          ...
2025-02-24T16:33:40.8362019Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8362147Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8362258Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8362263Z 
2025-02-24T16:33:40.8362350Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8362582Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] _
2025-02-24T16:33:40.8362587Z 
2025-02-24T16:33:40.8362813Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e01d0>
2025-02-24T16:33:40.8362981Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e7534980>
2025-02-24T16:33:40.8363191Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.8363196Z 
2025-02-24T16:33:40.8363337Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8363456Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8363543Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8363615Z         try:
2025-02-24T16:33:40.8363760Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8363840Z         except KeyError:
2025-02-24T16:33:40.8363984Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8364051Z     
2025-02-24T16:33:40.8364139Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8364236Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8364328Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8364471Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8364554Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8364649Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8364757Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8364766Z 
2025-02-24T16:33:40.8364892Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8365005Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8365093Z 
2025-02-24T16:33:40.8365232Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8365319Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8365427Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8365511Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8365652Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8365736Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8365845Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8365924Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8366002Z err_msg = None
2025-02-24T16:33:40.8366006Z 
2025-02-24T16:33:40.8366121Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8366203Z         if err_msg is None:
2025-02-24T16:33:40.8366306Z             if left.shape != right.shape:
2025-02-24T16:33:40.8366389Z                 raise_assert_detail(
2025-02-24T16:33:40.8366539Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8366609Z                 )
2025-02-24T16:33:40.8366681Z     
2025-02-24T16:33:40.8366756Z             diff = 0
2025-02-24T16:33:40.8366864Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8366954Z                 # count up differences
2025-02-24T16:33:40.8367125Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8367208Z                     diff += 1
2025-02-24T16:33:40.8367383Z     
2025-02-24T16:33:40.8367476Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8367615Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8367785Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8367896Z E           AssertionError: Series are different
2025-02-24T16:33:40.8367967Z E           
2025-02-24T16:33:40.8368071Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.8368441Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8368776Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8369229Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8369235Z 
2025-02-24T16:33:40.8369549Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8369772Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] _
2025-02-24T16:33:40.8369780Z 
2025-02-24T16:33:40.8370006Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e0290>
2025-02-24T16:33:40.8370180Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e7534980>
2025-02-24T16:33:40.8370269Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.8370375Z 
2025-02-24T16:33:40.8370519Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8370633Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8370719Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8370789Z         try:
2025-02-24T16:33:40.8370933Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8371016Z         except KeyError:
2025-02-24T16:33:40.8371153Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8371228Z     
2025-02-24T16:33:40.8371312Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8371411Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8371501Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8371637Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8371725Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8371814Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8372023Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8372033Z 
2025-02-24T16:33:40.8372250Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8372442Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8372449Z 
2025-02-24T16:33:40.8372678Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8372814Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8373002Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8373106Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8373257Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8373344Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8373452Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8373534Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8373612Z err_msg = None
2025-02-24T16:33:40.8373617Z 
2025-02-24T16:33:40.8373734Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8373814Z         if err_msg is None:
2025-02-24T16:33:40.8373917Z             if left.shape != right.shape:
2025-02-24T16:33:40.8374005Z                 raise_assert_detail(
2025-02-24T16:33:40.8374151Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8374221Z                 )
2025-02-24T16:33:40.8374285Z     
2025-02-24T16:33:40.8374358Z             diff = 0
2025-02-24T16:33:40.8374469Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8374650Z                 # count up differences
2025-02-24T16:33:40.8374824Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8374900Z                     diff += 1
2025-02-24T16:33:40.8374971Z     
2025-02-24T16:33:40.8375055Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8375198Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8375366Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8375474Z E           AssertionError: Series are different
2025-02-24T16:33:40.8375547Z E           
2025-02-24T16:33:40.8375647Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.8376022Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8376402Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8376891Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8376905Z 
2025-02-24T16:33:40.8377217Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8377562Z ________ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-nu] _________
2025-02-24T16:33:40.8377572Z 
2025-02-24T16:33:40.8377702Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8377834Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8377937Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8378066Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8378192Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8378285Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8378366Z err_msg = None
2025-02-24T16:33:40.8378370Z 
2025-02-24T16:33:40.8378476Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8378560Z         if err_msg is None:
2025-02-24T16:33:40.8378658Z             if left.shape != right.shape:
2025-02-24T16:33:40.8378743Z                 raise_assert_detail(
2025-02-24T16:33:40.8378889Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8378958Z                 )
2025-02-24T16:33:40.8379032Z     
2025-02-24T16:33:40.8379102Z             diff = 0
2025-02-24T16:33:40.8379218Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8379307Z                 # count up differences
2025-02-24T16:33:40.8379475Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8379555Z                     diff += 1
2025-02-24T16:33:40.8379622Z     
2025-02-24T16:33:40.8379713Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8379977Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8380150Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8380267Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8380342Z E           
2025-02-24T16:33:40.8380457Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8380715Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8380977Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8380986Z 
2025-02-24T16:33:40.8381296Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8381300Z 
2025-02-24T16:33:40.8381576Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8381586Z 
2025-02-24T16:33:40.8381813Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e04d0>
2025-02-24T16:33:40.8382022Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e7534980>, attr = 'nu'
2025-02-24T16:33:40.8382026Z 
2025-02-24T16:33:40.8382162Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8382282Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8382366Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8382440Z         try:
2025-02-24T16:33:40.8382589Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8382668Z         except KeyError:
2025-02-24T16:33:40.8382810Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8382879Z     
2025-02-24T16:33:40.8382970Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8383063Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8383160Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8383295Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8383383Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8383476Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8383586Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8383590Z 
2025-02-24T16:33:40.8383722Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8383838Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8383990Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8384065Z     ???
2025-02-24T16:33:40.8384172Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8384176Z 
2025-02-24T16:33:40.8384248Z >   ???
2025-02-24T16:33:40.8384376Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8384454Z E   
2025-02-24T16:33:40.8384586Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8384698Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8384773Z E          ...
2025-02-24T16:33:40.8384860Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8384998Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8385113Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8385187Z E          ...
2025-02-24T16:33:40.8385281Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8385493Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8385602Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8385607Z 
2025-02-24T16:33:40.8385695Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8385901Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] ___
2025-02-24T16:33:40.8385910Z 
2025-02-24T16:33:40.8386040Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8386168Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8386267Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8386397Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8386523Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8386621Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8386697Z err_msg = None
2025-02-24T16:33:40.8386701Z 
2025-02-24T16:33:40.8386815Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8386896Z         if err_msg is None:
2025-02-24T16:33:40.8386996Z             if left.shape != right.shape:
2025-02-24T16:33:40.8387078Z                 raise_assert_detail(
2025-02-24T16:33:40.8387455Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8387531Z                 )
2025-02-24T16:33:40.8387602Z     
2025-02-24T16:33:40.8387676Z             diff = 0
2025-02-24T16:33:40.8387788Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8387879Z                 # count up differences
2025-02-24T16:33:40.8388049Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8388134Z                     diff += 1
2025-02-24T16:33:40.8388205Z     
2025-02-24T16:33:40.8388292Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8388437Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8388606Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8388724Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8388802Z E           
2025-02-24T16:33:40.8388914Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8389176Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8389436Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8389451Z 
2025-02-24T16:33:40.8389753Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8389757Z 
2025-02-24T16:33:40.8389934Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8389938Z 
2025-02-24T16:33:40.8390161Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e0590>
2025-02-24T16:33:40.8390336Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e7534980>
2025-02-24T16:33:40.8390420Z attr = 'wavelength_cm'
2025-02-24T16:33:40.8390424Z 
2025-02-24T16:33:40.8390558Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8390681Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8390764Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8390839Z         try:
2025-02-24T16:33:40.8391109Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8391194Z         except KeyError:
2025-02-24T16:33:40.8391337Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8391405Z     
2025-02-24T16:33:40.8391497Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8391593Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8391687Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8391817Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8391907Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8392001Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8392109Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8392113Z 
2025-02-24T16:33:40.8392244Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8392355Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8392511Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8392584Z     ???
2025-02-24T16:33:40.8392694Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8392698Z 
2025-02-24T16:33:40.8392771Z >   ???
2025-02-24T16:33:40.8392897Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8393086Z E   
2025-02-24T16:33:40.8393214Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8393331Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8393404Z E          ...
2025-02-24T16:33:40.8393490Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8393622Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8393733Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8393808Z E          ...
2025-02-24T16:33:40.8393893Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8394028Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8394135Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8394140Z 
2025-02-24T16:33:40.8394229Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8394427Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-f_lu] ________
2025-02-24T16:33:40.8394435Z 
2025-02-24T16:33:40.8394563Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8394694Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8394797Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8394930Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8395054Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8395150Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8395228Z err_msg = None
2025-02-24T16:33:40.8395232Z 
2025-02-24T16:33:40.8395345Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8395425Z         if err_msg is None:
2025-02-24T16:33:40.8395525Z             if left.shape != right.shape:
2025-02-24T16:33:40.8395611Z                 raise_assert_detail(
2025-02-24T16:33:40.8395757Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8395827Z                 )
2025-02-24T16:33:40.8395900Z     
2025-02-24T16:33:40.8395975Z             diff = 0
2025-02-24T16:33:40.8396085Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8396177Z                 # count up differences
2025-02-24T16:33:40.8396348Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8396430Z                     diff += 1
2025-02-24T16:33:40.8396499Z     
2025-02-24T16:33:40.8396730Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8396871Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8397041Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8397158Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8397230Z E           
2025-02-24T16:33:40.8397507Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8397769Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8398031Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8398042Z 
2025-02-24T16:33:40.8398381Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8398607Z 
2025-02-24T16:33:40.8398920Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8398928Z 
2025-02-24T16:33:40.8399309Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e0650>
2025-02-24T16:33:40.8399624Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e7534980>, attr = 'f_lu'
2025-02-24T16:33:40.8399630Z 
2025-02-24T16:33:40.8399803Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8399924Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8400016Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8400088Z         try:
2025-02-24T16:33:40.8400238Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8400320Z         except KeyError:
2025-02-24T16:33:40.8400465Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8400539Z     
2025-02-24T16:33:40.8400625Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8400730Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8400818Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8400954Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8401037Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8401133Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8401247Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8401252Z 
2025-02-24T16:33:40.8401379Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8401494Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8401643Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8401719Z     ???
2025-02-24T16:33:40.8401827Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8401836Z 
2025-02-24T16:33:40.8401903Z >   ???
2025-02-24T16:33:40.8402032Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8402104Z E   
2025-02-24T16:33:40.8402237Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8402346Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8402423Z E          ...
2025-02-24T16:33:40.8402509Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8402643Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8402762Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8402832Z E          ...
2025-02-24T16:33:40.8402929Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8403181Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8403290Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8403295Z 
2025-02-24T16:33:40.8403387Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8403587Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] ____
2025-02-24T16:33:40.8403596Z 
2025-02-24T16:33:40.8403727Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8403852Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8403953Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8404090Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8404211Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8404308Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8404384Z err_msg = None
2025-02-24T16:33:40.8404388Z 
2025-02-24T16:33:40.8404503Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8404588Z         if err_msg is None:
2025-02-24T16:33:40.8404682Z             if left.shape != right.shape:
2025-02-24T16:33:40.8404852Z                 raise_assert_detail(
2025-02-24T16:33:40.8404996Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8405070Z                 )
2025-02-24T16:33:40.8405138Z     
2025-02-24T16:33:40.8405213Z             diff = 0
2025-02-24T16:33:40.8405323Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8405414Z                 # count up differences
2025-02-24T16:33:40.8405585Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8405661Z                     diff += 1
2025-02-24T16:33:40.8405734Z     
2025-02-24T16:33:40.8405826Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8405967Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8406141Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8406251Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8406329Z E           
2025-02-24T16:33:40.8406440Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8406701Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8406967Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8406974Z 
2025-02-24T16:33:40.8407387Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8407397Z 
2025-02-24T16:33:40.8407573Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8407577Z 
2025-02-24T16:33:40.8407809Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e0dd0>
2025-02-24T16:33:40.8407975Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e7534980>
2025-02-24T16:33:40.8408057Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.8408062Z 
2025-02-24T16:33:40.8408302Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8408502Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8408642Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8408911Z         try:
2025-02-24T16:33:40.8409156Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8409246Z         except KeyError:
2025-02-24T16:33:40.8409389Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8409457Z     
2025-02-24T16:33:40.8409549Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8409652Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8409739Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8409873Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8409957Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8410049Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8410158Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8410233Z             else:
2025-02-24T16:33:40.8410331Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8410438Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8410445Z 
2025-02-24T16:33:40.8410574Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8410686Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8410837Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8410907Z     ???
2025-02-24T16:33:40.8411139Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8411144Z 
2025-02-24T16:33:40.8411215Z >   ???
2025-02-24T16:33:40.8411339Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8411410Z E   
2025-02-24T16:33:40.8411539Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8411653Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8411727Z E          ...
2025-02-24T16:33:40.8411812Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8411951Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8412065Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8412138Z E          ...
2025-02-24T16:33:40.8412221Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8412351Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8412463Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8412467Z 
2025-02-24T16:33:40.8412554Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8412761Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] ____
2025-02-24T16:33:40.8412765Z 
2025-02-24T16:33:40.8412894Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8413025Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8413125Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8413257Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8413386Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8413478Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8413556Z err_msg = None
2025-02-24T16:33:40.8413563Z 
2025-02-24T16:33:40.8413678Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8413757Z         if err_msg is None:
2025-02-24T16:33:40.8413857Z             if left.shape != right.shape:
2025-02-24T16:33:40.8413941Z                 raise_assert_detail(
2025-02-24T16:33:40.8414087Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8414156Z                 )
2025-02-24T16:33:40.8414227Z     
2025-02-24T16:33:40.8414304Z             diff = 0
2025-02-24T16:33:40.8414415Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8414506Z                 # count up differences
2025-02-24T16:33:40.8414760Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8414842Z                     diff += 1
2025-02-24T16:33:40.8414909Z     
2025-02-24T16:33:40.8415001Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8415141Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8415313Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8415430Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8415501Z E           
2025-02-24T16:33:40.8415614Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8415868Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8416138Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8416219Z 
2025-02-24T16:33:40.8416530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8416534Z 
2025-02-24T16:33:40.8416708Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8416713Z 
2025-02-24T16:33:40.8417094Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e0e90>
2025-02-24T16:33:40.8417506Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e7534980>
2025-02-24T16:33:40.8417636Z attr = 'beta_sobolev'
2025-02-24T16:33:40.8417643Z 
2025-02-24T16:33:40.8417884Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8418048Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8418135Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8418209Z         try:
2025-02-24T16:33:40.8418348Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8418434Z         except KeyError:
2025-02-24T16:33:40.8418569Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8418641Z     
2025-02-24T16:33:40.8418731Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8418824Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8418916Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8419046Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8419134Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8419222Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8419334Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8419412Z             else:
2025-02-24T16:33:40.8419506Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8419617Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8419621Z 
2025-02-24T16:33:40.8419746Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8419865Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8420011Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8420084Z     ???
2025-02-24T16:33:40.8420196Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8420200Z 
2025-02-24T16:33:40.8420268Z >   ???
2025-02-24T16:33:40.8420396Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8420462Z E   
2025-02-24T16:33:40.8420592Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8420713Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8420932Z E          ...
2025-02-24T16:33:40.8421023Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8421151Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8421269Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8421343Z E          ...
2025-02-24T16:33:40.8421432Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8421561Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8421664Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8421668Z 
2025-02-24T16:33:40.8421760Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8421956Z ______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-j_blues] ______
2025-02-24T16:33:40.8421961Z 
2025-02-24T16:33:40.8422093Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8422222Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8422321Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8422456Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8422577Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8422782Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8422855Z err_msg = None
2025-02-24T16:33:40.8422864Z 
2025-02-24T16:33:40.8422972Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8423055Z         if err_msg is None:
2025-02-24T16:33:40.8423149Z             if left.shape != right.shape:
2025-02-24T16:33:40.8423236Z                 raise_assert_detail(
2025-02-24T16:33:40.8423377Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8423451Z                 )
2025-02-24T16:33:40.8423527Z     
2025-02-24T16:33:40.8423598Z             diff = 0
2025-02-24T16:33:40.8423712Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8423798Z                 # count up differences
2025-02-24T16:33:40.8423970Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8424049Z                     diff += 1
2025-02-24T16:33:40.8424122Z     
2025-02-24T16:33:40.8424212Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8424346Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8424523Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8424635Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8424713Z E           
2025-02-24T16:33:40.8424823Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8425085Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8425352Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8425360Z 
2025-02-24T16:33:40.8425661Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8425671Z 
2025-02-24T16:33:40.8425838Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8425842Z 
2025-02-24T16:33:40.8426065Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e1010>
2025-02-24T16:33:40.8426317Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4e7534980>
2025-02-24T16:33:40.8426398Z attr = 'j_blues'
2025-02-24T16:33:40.8426402Z 
2025-02-24T16:33:40.8426543Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8426657Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8426749Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8426818Z         try:
2025-02-24T16:33:40.8426960Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8427040Z         except KeyError:
2025-02-24T16:33:40.8427181Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8427441Z     
2025-02-24T16:33:40.8427535Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8427636Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8427724Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8427859Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8427947Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8428041Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8428155Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8428226Z             else:
2025-02-24T16:33:40.8428325Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8428554Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8428559Z 
2025-02-24T16:33:40.8428689Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8428807Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8428957Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8429031Z     ???
2025-02-24T16:33:40.8429138Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8429143Z 
2025-02-24T16:33:40.8429214Z >   ???
2025-02-24T16:33:40.8429343Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8429416Z E   
2025-02-24T16:33:40.8429548Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8429659Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8429734Z E          ...
2025-02-24T16:33:40.8429819Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8429955Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8430066Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8430141Z E          ...
2025-02-24T16:33:40.8430230Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8430356Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8430462Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8430467Z 
2025-02-24T16:33:40.8430553Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8430749Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines] ________
2025-02-24T16:33:40.8430757Z 
2025-02-24T16:33:40.8430890Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8431016Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8431119Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8431251Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8431377Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8431470Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8431549Z err_msg = None
2025-02-24T16:33:40.8431553Z 
2025-02-24T16:33:40.8431666Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8431747Z         if err_msg is None:
2025-02-24T16:33:40.8431847Z             if left.shape != right.shape:
2025-02-24T16:33:40.8432048Z                 raise_assert_detail(
2025-02-24T16:33:40.8432196Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8432270Z                 )
2025-02-24T16:33:40.8432337Z     
2025-02-24T16:33:40.8432413Z             diff = 0
2025-02-24T16:33:40.8432524Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8432618Z                 # count up differences
2025-02-24T16:33:40.8432785Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8432867Z                     diff += 1
2025-02-24T16:33:40.8432943Z     
2025-02-24T16:33:40.8433030Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8433169Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8433346Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8433463Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8433536Z E           
2025-02-24T16:33:40.8433652Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8433913Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8434260Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8434266Z 
2025-02-24T16:33:40.8434572Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8434580Z 
2025-02-24T16:33:40.8434751Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8434756Z 
2025-02-24T16:33:40.8434978Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e1d90>
2025-02-24T16:33:40.8435151Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff502ebbb30>
2025-02-24T16:33:40.8435227Z attr = 'lines'
2025-02-24T16:33:40.8435236Z 
2025-02-24T16:33:40.8435372Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8435489Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8435572Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8435647Z         try:
2025-02-24T16:33:40.8435785Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8435869Z         except KeyError:
2025-02-24T16:33:40.8436009Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8436076Z     
2025-02-24T16:33:40.8436166Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8436262Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8436353Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8436481Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8436571Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8436667Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8436777Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8436851Z             else:
2025-02-24T16:33:40.8436945Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8437054Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8437059Z 
2025-02-24T16:33:40.8437183Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8437426Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8437576Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8437761Z     ???
2025-02-24T16:33:40.8437874Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8437879Z 
2025-02-24T16:33:40.8437945Z >   ???
2025-02-24T16:33:40.8438074Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8438146Z E   
2025-02-24T16:33:40.8438271Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8438391Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8438460Z E          ...
2025-02-24T16:33:40.8438550Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8438679Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8438799Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8438872Z E          ...
2025-02-24T16:33:40.8438955Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8439084Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8439189Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8439194Z 
2025-02-24T16:33:40.8439287Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8439508Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] _
2025-02-24T16:33:40.8439517Z 
2025-02-24T16:33:40.8439736Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e1e50>
2025-02-24T16:33:40.8440036Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff502ebbb30>
2025-02-24T16:33:40.8440124Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.8440128Z 
2025-02-24T16:33:40.8440268Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8440384Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8440472Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8440544Z         try:
2025-02-24T16:33:40.8440687Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8440771Z         except KeyError:
2025-02-24T16:33:40.8440910Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8440985Z     
2025-02-24T16:33:40.8441069Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8441166Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8441258Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8441391Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8441479Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8441568Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8441683Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8441687Z 
2025-02-24T16:33:40.8441816Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8441929Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8441933Z 
2025-02-24T16:33:40.8442087Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8442240Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8442432Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8442562Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8442801Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8442948Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8443121Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8443265Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8443347Z err_msg = None
2025-02-24T16:33:40.8443352Z 
2025-02-24T16:33:40.8443469Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8443558Z         if err_msg is None:
2025-02-24T16:33:40.8443655Z             if left.shape != right.shape:
2025-02-24T16:33:40.8443745Z                 raise_assert_detail(
2025-02-24T16:33:40.8443889Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8444060Z                 )
2025-02-24T16:33:40.8444128Z     
2025-02-24T16:33:40.8444208Z             diff = 0
2025-02-24T16:33:40.8444327Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8444417Z                 # count up differences
2025-02-24T16:33:40.8444597Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8444675Z                     diff += 1
2025-02-24T16:33:40.8444748Z     
2025-02-24T16:33:40.8444838Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8444981Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8445156Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8445259Z E           AssertionError: Series are different
2025-02-24T16:33:40.8445337Z E           
2025-02-24T16:33:40.8445440Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.8445829Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8446244Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8446574Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8446588Z 
2025-02-24T16:33:40.8446899Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8447128Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] _
2025-02-24T16:33:40.8447133Z 
2025-02-24T16:33:40.8447468Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e1f10>
2025-02-24T16:33:40.8447643Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff502ebbb30>
2025-02-24T16:33:40.8447737Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.8447741Z 
2025-02-24T16:33:40.8447875Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8447996Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8448082Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8448158Z         try:
2025-02-24T16:33:40.8448295Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8448380Z         except KeyError:
2025-02-24T16:33:40.8448518Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8457629Z     
2025-02-24T16:33:40.8457765Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8457959Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8458121Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8458370Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8458525Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8458679Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8458876Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8458884Z 
2025-02-24T16:33:40.8459107Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8459529Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8459536Z 
2025-02-24T16:33:40.8459773Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8459913Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8460095Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8460236Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8460447Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8460534Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8460645Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8460728Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8460808Z err_msg = None
2025-02-24T16:33:40.8460812Z 
2025-02-24T16:33:40.8460938Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8461027Z         if err_msg is None:
2025-02-24T16:33:40.8461135Z             if left.shape != right.shape:
2025-02-24T16:33:40.8461227Z                 raise_assert_detail(
2025-02-24T16:33:40.8461381Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8461459Z                 )
2025-02-24T16:33:40.8461646Z     
2025-02-24T16:33:40.8461725Z             diff = 0
2025-02-24T16:33:40.8461843Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8461939Z                 # count up differences
2025-02-24T16:33:40.8462125Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8462206Z                     diff += 1
2025-02-24T16:33:40.8462279Z     
2025-02-24T16:33:40.8462370Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8462519Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8462700Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8462818Z E           AssertionError: Series are different
2025-02-24T16:33:40.8462894Z E           
2025-02-24T16:33:40.8463000Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.8463375Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8463751Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8464132Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8464141Z 
2025-02-24T16:33:40.8464472Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8464679Z _________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-nu] __________
2025-02-24T16:33:40.8464684Z 
2025-02-24T16:33:40.8464818Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8464951Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8465161Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8465302Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8465428Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8465527Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8465606Z err_msg = None
2025-02-24T16:33:40.8465611Z 
2025-02-24T16:33:40.8465725Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8465813Z         if err_msg is None:
2025-02-24T16:33:40.8465912Z             if left.shape != right.shape:
2025-02-24T16:33:40.8466003Z                 raise_assert_detail(
2025-02-24T16:33:40.8466152Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8466227Z                 )
2025-02-24T16:33:40.8466298Z     
2025-02-24T16:33:40.8466373Z             diff = 0
2025-02-24T16:33:40.8466491Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8466579Z                 # count up differences
2025-02-24T16:33:40.8466754Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8466912Z                     diff += 1
2025-02-24T16:33:40.8466989Z     
2025-02-24T16:33:40.8467076Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8467217Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8467549Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8467667Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8467742Z E           
2025-02-24T16:33:40.8467854Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8468119Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8468391Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8468400Z 
2025-02-24T16:33:40.8468714Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8468720Z 
2025-02-24T16:33:40.8468894Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8468899Z 
2025-02-24T16:33:40.8469130Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e2150>
2025-02-24T16:33:40.8469335Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff502ebbb30>, attr = 'nu'
2025-02-24T16:33:40.8469339Z 
2025-02-24T16:33:40.8469486Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8469662Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8469825Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8469954Z         try:
2025-02-24T16:33:40.8470190Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8470326Z         except KeyError:
2025-02-24T16:33:40.8470554Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8470675Z     
2025-02-24T16:33:40.8470809Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8470911Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8471008Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8471145Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8471366Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8471460Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8471575Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8471579Z 
2025-02-24T16:33:40.8471710Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8471826Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8471984Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8472055Z     ???
2025-02-24T16:33:40.8472168Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8472173Z 
2025-02-24T16:33:40.8472240Z >   ???
2025-02-24T16:33:40.8472376Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8472450Z E   
2025-02-24T16:33:40.8472577Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8472696Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8472771Z E          ...
2025-02-24T16:33:40.8472865Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8472995Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8473112Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8473319Z E          ...
2025-02-24T16:33:40.8473404Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8473532Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8473637Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8473641Z 
2025-02-24T16:33:40.8473736Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8473948Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] ____
2025-02-24T16:33:40.8473953Z 
2025-02-24T16:33:40.8474081Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8474214Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8474312Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8474448Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8474575Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8474670Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8474747Z err_msg = None
2025-02-24T16:33:40.8474751Z 
2025-02-24T16:33:40.8474862Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8474948Z         if err_msg is None:
2025-02-24T16:33:40.8475044Z             if left.shape != right.shape:
2025-02-24T16:33:40.8475134Z                 raise_assert_detail(
2025-02-24T16:33:40.8475286Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8475356Z                 )
2025-02-24T16:33:40.8475431Z     
2025-02-24T16:33:40.8475501Z             diff = 0
2025-02-24T16:33:40.8475619Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8475707Z                 # count up differences
2025-02-24T16:33:40.8475882Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8475970Z                     diff += 1
2025-02-24T16:33:40.8476038Z     
2025-02-24T16:33:40.8476131Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8476267Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8476441Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8476553Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8476628Z E           
2025-02-24T16:33:40.8476742Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8477000Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8477503Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8477513Z 
2025-02-24T16:33:40.8477829Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8477833Z 
2025-02-24T16:33:40.8478001Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8478006Z 
2025-02-24T16:33:40.8478238Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e2210>
2025-02-24T16:33:40.8478414Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff502ebbb30>
2025-02-24T16:33:40.8478494Z attr = 'wavelength_cm'
2025-02-24T16:33:40.8478498Z 
2025-02-24T16:33:40.8478637Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8478752Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8478956Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8479026Z         try:
2025-02-24T16:33:40.8479170Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8479254Z         except KeyError:
2025-02-24T16:33:40.8479391Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8479463Z     
2025-02-24T16:33:40.8479548Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8479645Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8479733Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8479868Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8479961Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8480051Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8480163Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8480167Z 
2025-02-24T16:33:40.8480295Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8480417Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8480566Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8480635Z     ???
2025-02-24T16:33:40.8480746Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8480750Z 
2025-02-24T16:33:40.8480816Z >   ???
2025-02-24T16:33:40.8480945Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8481013Z E   
2025-02-24T16:33:40.8481142Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8481259Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8481330Z E          ...
2025-02-24T16:33:40.8481424Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8481552Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8481667Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8481739Z E          ...
2025-02-24T16:33:40.8481830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8481956Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8482059Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8482064Z 
2025-02-24T16:33:40.8482156Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8482349Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-f_lu] _________
2025-02-24T16:33:40.8482353Z 
2025-02-24T16:33:40.8482484Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8482734Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8482830Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8482965Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8483087Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8483188Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8483268Z err_msg = None
2025-02-24T16:33:40.8483272Z 
2025-02-24T16:33:40.8483381Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8483466Z         if err_msg is None:
2025-02-24T16:33:40.8483561Z             if left.shape != right.shape:
2025-02-24T16:33:40.8483650Z                 raise_assert_detail(
2025-02-24T16:33:40.8483795Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8483872Z                 )
2025-02-24T16:33:40.8483945Z     
2025-02-24T16:33:40.8484015Z             diff = 0
2025-02-24T16:33:40.8484130Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8484220Z                 # count up differences
2025-02-24T16:33:40.8484394Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8484552Z                     diff += 1
2025-02-24T16:33:40.8484624Z     
2025-02-24T16:33:40.8484717Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8484851Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8485024Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8485135Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8485210Z E           
2025-02-24T16:33:40.8485322Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8485584Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8485852Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8485861Z 
2025-02-24T16:33:40.8486169Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8486174Z 
2025-02-24T16:33:40.8486343Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8486347Z 
2025-02-24T16:33:40.8486573Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e22d0>
2025-02-24T16:33:40.8486779Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff502ebbb30>, attr = 'f_lu'
2025-02-24T16:33:40.8486784Z 
2025-02-24T16:33:40.8486924Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8487041Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8487128Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8487206Z         try:
2025-02-24T16:33:40.8487457Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8487543Z         except KeyError:
2025-02-24T16:33:40.8487679Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8487752Z     
2025-02-24T16:33:40.8487842Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8487934Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8488029Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8488158Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8488366Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8488455Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8488566Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8488570Z 
2025-02-24T16:33:40.8488699Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8488811Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8488962Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8489030Z     ???
2025-02-24T16:33:40.8489140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8489144Z 
2025-02-24T16:33:40.8489214Z >   ???
2025-02-24T16:33:40.8489338Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8489410Z E   
2025-02-24T16:33:40.8489537Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8489651Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8489724Z E          ...
2025-02-24T16:33:40.8489814Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8489949Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8490059Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8490244Z E          ...
2025-02-24T16:33:40.8490328Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8490460Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8490567Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8490572Z 
2025-02-24T16:33:40.8490659Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8490864Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] _____
2025-02-24T16:33:40.8490869Z 
2025-02-24T16:33:40.8490995Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8491127Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8491225Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8491354Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8491482Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8491576Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8491654Z err_msg = None
2025-02-24T16:33:40.8491658Z 
2025-02-24T16:33:40.8491766Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8491852Z         if err_msg is None:
2025-02-24T16:33:40.8491952Z             if left.shape != right.shape:
2025-02-24T16:33:40.8492038Z                 raise_assert_detail(
2025-02-24T16:33:40.8492184Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8492254Z                 )
2025-02-24T16:33:40.8492331Z     
2025-02-24T16:33:40.8492402Z             diff = 0
2025-02-24T16:33:40.8492517Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8492607Z                 # count up differences
2025-02-24T16:33:40.8492777Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8492860Z                     diff += 1
2025-02-24T16:33:40.8492928Z     
2025-02-24T16:33:40.8493019Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8493165Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8493333Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8493448Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8493523Z E           
2025-02-24T16:33:40.8493634Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8493890Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8494256Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8494269Z 
2025-02-24T16:33:40.8494569Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8494574Z 
2025-02-24T16:33:40.8494743Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8494748Z 
2025-02-24T16:33:40.8494973Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e2a50>
2025-02-24T16:33:40.8495143Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff502ebbb30>
2025-02-24T16:33:40.8495225Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.8495230Z 
2025-02-24T16:33:40.8495363Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8495554Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8495637Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8495711Z         try:
2025-02-24T16:33:40.8495849Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8495928Z         except KeyError:
2025-02-24T16:33:40.8496065Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8496131Z     
2025-02-24T16:33:40.8496220Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8496311Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8496401Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8496532Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8496616Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8496706Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8496813Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8496889Z             else:
2025-02-24T16:33:40.8496986Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8497094Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8497099Z 
2025-02-24T16:33:40.8497228Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8497443Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8497594Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8497662Z     ???
2025-02-24T16:33:40.8497772Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8497776Z 
2025-02-24T16:33:40.8497850Z >   ???
2025-02-24T16:33:40.8497978Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8498051Z E   
2025-02-24T16:33:40.8498177Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8498290Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8498360Z E          ...
2025-02-24T16:33:40.8498454Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8498586Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8498697Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8498774Z E          ...
2025-02-24T16:33:40.8498857Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8498988Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8499092Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8499102Z 
2025-02-24T16:33:40.8499189Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8499393Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] _____
2025-02-24T16:33:40.8499515Z 
2025-02-24T16:33:40.8499645Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8499807Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8499907Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8500043Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8500173Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8500268Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8500350Z err_msg = None
2025-02-24T16:33:40.8500354Z 
2025-02-24T16:33:40.8500466Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8500553Z         if err_msg is None:
2025-02-24T16:33:40.8500654Z             if left.shape != right.shape:
2025-02-24T16:33:40.8500741Z                 raise_assert_detail(
2025-02-24T16:33:40.8500890Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8500961Z                 )
2025-02-24T16:33:40.8501035Z     
2025-02-24T16:33:40.8501106Z             diff = 0
2025-02-24T16:33:40.8501335Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8501430Z                 # count up differences
2025-02-24T16:33:40.8501599Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8501681Z                     diff += 1
2025-02-24T16:33:40.8501748Z     
2025-02-24T16:33:40.8501841Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8501977Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8502156Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8502274Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8502349Z E           
2025-02-24T16:33:40.8502467Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8502862Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8503353Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8503361Z 
2025-02-24T16:33:40.8503856Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8503865Z 
2025-02-24T16:33:40.8504043Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8504048Z 
2025-02-24T16:33:40.8504271Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e2b10>
2025-02-24T16:33:40.8504445Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff502ebbb30>
2025-02-24T16:33:40.8504529Z attr = 'beta_sobolev'
2025-02-24T16:33:40.8504533Z 
2025-02-24T16:33:40.8504678Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8504801Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8504885Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8504963Z         try:
2025-02-24T16:33:40.8505103Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8505189Z         except KeyError:
2025-02-24T16:33:40.8505326Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8505400Z     
2025-02-24T16:33:40.8505579Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8505678Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8505771Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8505902Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8505991Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8506084Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8506198Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8506273Z             else:
2025-02-24T16:33:40.8506368Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8506482Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8506486Z 
2025-02-24T16:33:40.8506610Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8506728Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8506873Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8506952Z     ???
2025-02-24T16:33:40.8507065Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8507070Z 
2025-02-24T16:33:40.8507136Z >   ???
2025-02-24T16:33:40.8507379Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8507449Z E   
2025-02-24T16:33:40.8507698Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8507808Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8507883Z E          ...
2025-02-24T16:33:40.8507973Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8508101Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8508218Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8508291Z E          ...
2025-02-24T16:33:40.8508382Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8508507Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8508613Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8508617Z 
2025-02-24T16:33:40.8508711Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8508905Z _______ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-j_blues] _______
2025-02-24T16:33:40.8508909Z 
2025-02-24T16:33:40.8509045Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8509179Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8509274Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8509410Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8509533Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8509629Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8509707Z err_msg = None
2025-02-24T16:33:40.8509717Z 
2025-02-24T16:33:40.8509826Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8509912Z         if err_msg is None:
2025-02-24T16:33:40.8510006Z             if left.shape != right.shape:
2025-02-24T16:33:40.8510096Z                 raise_assert_detail(
2025-02-24T16:33:40.8510244Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8510321Z                 )
2025-02-24T16:33:40.8510395Z     
2025-02-24T16:33:40.8510469Z             diff = 0
2025-02-24T16:33:40.8510582Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8510669Z                 # count up differences
2025-02-24T16:33:40.8510844Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8510920Z                     diff += 1
2025-02-24T16:33:40.8510993Z     
2025-02-24T16:33:40.8511079Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8511337Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8511510Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8511622Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8511697Z E           
2025-02-24T16:33:40.8511811Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8512078Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8512343Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8512352Z 
2025-02-24T16:33:40.8512653Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8512664Z 
2025-02-24T16:33:40.8512830Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8512909Z 
2025-02-24T16:33:40.8513137Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e2c90>
2025-02-24T16:33:40.8513304Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff502ebbb30>
2025-02-24T16:33:40.8513382Z attr = 'j_blues'
2025-02-24T16:33:40.8513386Z 
2025-02-24T16:33:40.8513520Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8513638Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8513727Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8513797Z         try:
2025-02-24T16:33:40.8513941Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8514026Z         except KeyError:
2025-02-24T16:33:40.8514171Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8514246Z     
2025-02-24T16:33:40.8514333Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8514433Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8514523Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8514658Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8514741Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8514839Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8514952Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8515024Z             else:
2025-02-24T16:33:40.8515125Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8515229Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8515234Z 
2025-02-24T16:33:40.8515365Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8515479Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8515633Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8515708Z     ???
2025-02-24T16:33:40.8515816Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8515824Z 
2025-02-24T16:33:40.8515898Z >   ???
2025-02-24T16:33:40.8516022Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8516095Z E   
2025-02-24T16:33:40.8516218Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8516334Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8516408Z E          ...
2025-02-24T16:33:40.8516494Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8516625Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8516735Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8516920Z E          ...
2025-02-24T16:33:40.8517009Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8517132Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8517238Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8517373Z 
2025-02-24T16:33:40.8517464Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8517674Z ____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines] _____
2025-02-24T16:33:40.8517678Z 
2025-02-24T16:33:40.8517804Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8517933Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8518032Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8518163Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8518291Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8518383Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8518463Z err_msg = None
2025-02-24T16:33:40.8518467Z 
2025-02-24T16:33:40.8518583Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8518797Z         if err_msg is None:
2025-02-24T16:33:40.8518896Z             if left.shape != right.shape:
2025-02-24T16:33:40.8518981Z                 raise_assert_detail(
2025-02-24T16:33:40.8519128Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8519202Z                 )
2025-02-24T16:33:40.8519270Z     
2025-02-24T16:33:40.8519345Z             diff = 0
2025-02-24T16:33:40.8519453Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8519549Z                 # count up differences
2025-02-24T16:33:40.8519718Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8519803Z                     diff += 1
2025-02-24T16:33:40.8519876Z     
2025-02-24T16:33:40.8519962Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8520100Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8520270Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8520389Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8520463Z E           
2025-02-24T16:33:40.8520580Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8520843Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8521103Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8521112Z 
2025-02-24T16:33:40.8521420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8521425Z 
2025-02-24T16:33:40.8521597Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8521602Z 
2025-02-24T16:33:40.8521823Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e3a10>
2025-02-24T16:33:40.8521996Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4cec4af00>
2025-02-24T16:33:40.8522070Z attr = 'lines'
2025-02-24T16:33:40.8522081Z 
2025-02-24T16:33:40.8522225Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8522472Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8522556Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8522632Z         try:
2025-02-24T16:33:40.8522768Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8522854Z         except KeyError:
2025-02-24T16:33:40.8522994Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8523067Z     
2025-02-24T16:33:40.8523158Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8523254Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8523348Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8523477Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8523567Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8523662Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8523770Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8523848Z             else:
2025-02-24T16:33:40.8523946Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8524059Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8524063Z 
2025-02-24T16:33:40.8524188Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8524306Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8524536Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8524605Z     ???
2025-02-24T16:33:40.8524719Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8524723Z 
2025-02-24T16:33:40.8524791Z >   ???
2025-02-24T16:33:40.8524921Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8524989Z E   
2025-02-24T16:33:40.8525122Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8525238Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8525309Z E          ...
2025-02-24T16:33:40.8525404Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8525533Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8525650Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8525725Z E          ...
2025-02-24T16:33:40.8525809Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8525942Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8526042Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8526047Z 
2025-02-24T16:33:40.8526139Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8526394Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] _
2025-02-24T16:33:40.8526404Z 
2025-02-24T16:33:40.8526627Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e3ad0>
2025-02-24T16:33:40.8526796Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4cec4af00>
2025-02-24T16:33:40.8526888Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.8526892Z 
2025-02-24T16:33:40.8527035Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8527146Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8527233Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8527413Z         try:
2025-02-24T16:33:40.8527556Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8527641Z         except KeyError:
2025-02-24T16:33:40.8527776Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8527848Z     
2025-02-24T16:33:40.8527932Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8528030Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8528122Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8528249Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8528339Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8528427Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8528657Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8528661Z 
2025-02-24T16:33:40.8528783Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8528898Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8528906Z 
2025-02-24T16:33:40.8529044Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8529129Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8529243Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8529323Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8529464Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8529552Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8529655Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8529743Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8529819Z err_msg = None
2025-02-24T16:33:40.8529823Z 
2025-02-24T16:33:40.8529937Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8530021Z         if err_msg is None:
2025-02-24T16:33:40.8530115Z             if left.shape != right.shape:
2025-02-24T16:33:40.8530313Z                 raise_assert_detail(
2025-02-24T16:33:40.8530457Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8530533Z                 )
2025-02-24T16:33:40.8530600Z     
2025-02-24T16:33:40.8530676Z             diff = 0
2025-02-24T16:33:40.8530794Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8530883Z                 # count up differences
2025-02-24T16:33:40.8531058Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8531134Z                     diff += 1
2025-02-24T16:33:40.8531210Z     
2025-02-24T16:33:40.8531295Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8531436Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8531612Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8531717Z E           AssertionError: Series are different
2025-02-24T16:33:40.8531797Z E           
2025-02-24T16:33:40.8531898Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.8532272Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8532608Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8532943Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8532956Z 
2025-02-24T16:33:40.8533261Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8533516Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] _
2025-02-24T16:33:40.8533609Z 
2025-02-24T16:33:40.8533835Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e3b90>
2025-02-24T16:33:40.8534009Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4cec4af00>
2025-02-24T16:33:40.8534107Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.8534112Z 
2025-02-24T16:33:40.8534251Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8534371Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8534453Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8534528Z         try:
2025-02-24T16:33:40.8534667Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8534756Z         except KeyError:
2025-02-24T16:33:40.8534896Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8534964Z     
2025-02-24T16:33:40.8535053Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8535146Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8535240Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8535370Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8535461Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8535588Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8535782Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8535926Z 
2025-02-24T16:33:40.8536146Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8536335Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8536342Z 
2025-02-24T16:33:40.8536572Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8536724Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8536849Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8536934Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8537077Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8537167Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8537379Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8537460Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8537543Z err_msg = None
2025-02-24T16:33:40.8537547Z 
2025-02-24T16:33:40.8537656Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8537742Z         if err_msg is None:
2025-02-24T16:33:40.8537836Z             if left.shape != right.shape:
2025-02-24T16:33:40.8537925Z                 raise_assert_detail(
2025-02-24T16:33:40.8538072Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8538142Z                 )
2025-02-24T16:33:40.8538213Z     
2025-02-24T16:33:40.8538284Z             diff = 0
2025-02-24T16:33:40.8538401Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8538489Z                 # count up differences
2025-02-24T16:33:40.8538661Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8538742Z                     diff += 1
2025-02-24T16:33:40.8538809Z     
2025-02-24T16:33:40.8538898Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8539036Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8539209Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8539312Z E           AssertionError: Series are different
2025-02-24T16:33:40.8539386Z E           
2025-02-24T16:33:40.8539493Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.8539864Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8540366Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8540747Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8540755Z 
2025-02-24T16:33:40.8541066Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8541273Z ______ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-nu] ______
2025-02-24T16:33:40.8541376Z 
2025-02-24T16:33:40.8541514Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8541640Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8541745Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8541882Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8542002Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8542100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8542177Z err_msg = None
2025-02-24T16:33:40.8542181Z 
2025-02-24T16:33:40.8542298Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8542376Z         if err_msg is None:
2025-02-24T16:33:40.8542477Z             if left.shape != right.shape:
2025-02-24T16:33:40.8542564Z                 raise_assert_detail(
2025-02-24T16:33:40.8542709Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8542783Z                 )
2025-02-24T16:33:40.8542851Z     
2025-02-24T16:33:40.8542926Z             diff = 0
2025-02-24T16:33:40.8543036Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8543128Z                 # count up differences
2025-02-24T16:33:40.8543301Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8543377Z                     diff += 1
2025-02-24T16:33:40.8543450Z     
2025-02-24T16:33:40.8543536Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8543678Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8543846Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8543962Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8544037Z E           
2025-02-24T16:33:40.8544150Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8544414Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8544674Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8544767Z 
2025-02-24T16:33:40.8545067Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8545072Z 
2025-02-24T16:33:40.8545248Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8545256Z 
2025-02-24T16:33:40.8545486Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e3dd0>
2025-02-24T16:33:40.8545690Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4cec4af00>, attr = 'nu'
2025-02-24T16:33:40.8545694Z 
2025-02-24T16:33:40.8545837Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8545954Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8546043Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8546111Z         try:
2025-02-24T16:33:40.8546254Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8546341Z         except KeyError:
2025-02-24T16:33:40.8546479Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8546552Z     
2025-02-24T16:33:40.8546642Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8546741Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8546907Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8547042Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8547133Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8547221Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8547461Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8547467Z 
2025-02-24T16:33:40.8547593Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8547711Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8547865Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8547938Z     ???
2025-02-24T16:33:40.8548051Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8548056Z 
2025-02-24T16:33:40.8548124Z >   ???
2025-02-24T16:33:40.8548256Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8548326Z E   
2025-02-24T16:33:40.8548453Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8548566Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8548636Z E          ...
2025-02-24T16:33:40.8548728Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8548859Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8548975Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8549045Z E          ...
2025-02-24T16:33:40.8549137Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8549265Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8549376Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8549380Z 
2025-02-24T16:33:40.8549474Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8549701Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] _
2025-02-24T16:33:40.8549706Z 
2025-02-24T16:33:40.8549840Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8549969Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8550067Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8550204Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8550326Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8550423Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8550619Z err_msg = None
2025-02-24T16:33:40.8550623Z 
2025-02-24T16:33:40.8550734Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8550819Z         if err_msg is None:
2025-02-24T16:33:40.8550913Z             if left.shape != right.shape:
2025-02-24T16:33:40.8551004Z                 raise_assert_detail(
2025-02-24T16:33:40.8551150Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8551224Z                 )
2025-02-24T16:33:40.8551296Z     
2025-02-24T16:33:40.8551366Z             diff = 0
2025-02-24T16:33:40.8551480Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8551568Z                 # count up differences
2025-02-24T16:33:40.8551743Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8551821Z                     diff += 1
2025-02-24T16:33:40.8551893Z     
2025-02-24T16:33:40.8551984Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8552123Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8552297Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8552411Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8552490Z E           
2025-02-24T16:33:40.8552718Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8552976Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8553240Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8553248Z 
2025-02-24T16:33:40.8553554Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8553559Z 
2025-02-24T16:33:40.8553726Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8553734Z 
2025-02-24T16:33:40.8553962Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e3e90>
2025-02-24T16:33:40.8554129Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4cec4af00>
2025-02-24T16:33:40.8554212Z attr = 'wavelength_cm'
2025-02-24T16:33:40.8554217Z 
2025-02-24T16:33:40.8554359Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8554473Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8554561Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8554630Z         try:
2025-02-24T16:33:40.8554771Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8554856Z         except KeyError:
2025-02-24T16:33:40.8554998Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8555071Z     
2025-02-24T16:33:40.8555159Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8555257Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8555349Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8555483Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8555568Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8555662Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8555774Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8555778Z 
2025-02-24T16:33:40.8555902Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8556018Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8556163Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8556324Z     ???
2025-02-24T16:33:40.8556438Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8556442Z 
2025-02-24T16:33:40.8556509Z >   ???
2025-02-24T16:33:40.8556640Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8556709Z E   
2025-02-24T16:33:40.8556841Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8556951Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8557026Z E          ...
2025-02-24T16:33:40.8557118Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8557373Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8557493Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8557562Z E          ...
2025-02-24T16:33:40.8557651Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8557779Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8557890Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8557894Z 
2025-02-24T16:33:40.8557987Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8558189Z _____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-f_lu] _____
2025-02-24T16:33:40.8558326Z 
2025-02-24T16:33:40.8558460Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8558585Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8558683Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8558818Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8558940Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8559037Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8559115Z err_msg = None
2025-02-24T16:33:40.8559119Z 
2025-02-24T16:33:40.8559232Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8559319Z         if err_msg is None:
2025-02-24T16:33:40.8559414Z             if left.shape != right.shape:
2025-02-24T16:33:40.8559502Z                 raise_assert_detail(
2025-02-24T16:33:40.8559647Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8559723Z                 )
2025-02-24T16:33:40.8559789Z     
2025-02-24T16:33:40.8559865Z             diff = 0
2025-02-24T16:33:40.8559980Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8560067Z                 # count up differences
2025-02-24T16:33:40.8560241Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8560320Z                     diff += 1
2025-02-24T16:33:40.8560391Z     
2025-02-24T16:33:40.8560480Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8560625Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8560798Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8560909Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8560984Z E           
2025-02-24T16:33:40.8561096Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8561360Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8561628Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8561747Z 
2025-02-24T16:33:40.8562051Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8562061Z 
2025-02-24T16:33:40.8562231Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8562235Z 
2025-02-24T16:33:40.8562460Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5121e3f50>
2025-02-24T16:33:40.8562666Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4cec4af00>, attr = 'f_lu'
2025-02-24T16:33:40.8562670Z 
2025-02-24T16:33:40.8562809Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8562923Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8563009Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8563082Z         try:
2025-02-24T16:33:40.8563218Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8563306Z         except KeyError:
2025-02-24T16:33:40.8563444Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8563517Z     
2025-02-24T16:33:40.8563603Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8563698Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8563871Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8563998Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8564086Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8564173Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8564285Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8564290Z 
2025-02-24T16:33:40.8564418Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8564526Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8564677Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8564748Z     ???
2025-02-24T16:33:40.8564859Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8564863Z 
2025-02-24T16:33:40.8564933Z >   ???
2025-02-24T16:33:40.8565064Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8565138Z E   
2025-02-24T16:33:40.8565263Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8565376Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8565445Z E          ...
2025-02-24T16:33:40.8565535Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8565664Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8565779Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8565853Z E          ...
2025-02-24T16:33:40.8565936Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8566063Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8566169Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8566173Z 
2025-02-24T16:33:40.8566270Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8566487Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] _
2025-02-24T16:33:40.8566495Z 
2025-02-24T16:33:40.8566619Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8566751Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8566844Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8566979Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8567104Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8567196Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8567503Z err_msg = None
2025-02-24T16:33:40.8567508Z 
2025-02-24T16:33:40.8567615Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8567699Z         if err_msg is None:
2025-02-24T16:33:40.8567791Z             if left.shape != right.shape:
2025-02-24T16:33:40.8567879Z                 raise_assert_detail(
2025-02-24T16:33:40.8568029Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8568098Z                 )
2025-02-24T16:33:40.8568171Z     
2025-02-24T16:33:40.8568242Z             diff = 0
2025-02-24T16:33:40.8568355Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8568440Z                 # count up differences
2025-02-24T16:33:40.8568748Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8568885Z                     diff += 1
2025-02-24T16:33:40.8568997Z     
2025-02-24T16:33:40.8569143Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8569372Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8569665Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8569784Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8569855Z E           
2025-02-24T16:33:40.8570097Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8570354Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8570617Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8570625Z 
2025-02-24T16:33:40.8570931Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8570935Z 
2025-02-24T16:33:40.8571103Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8571110Z 
2025-02-24T16:33:40.8571334Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512204710>
2025-02-24T16:33:40.8571508Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4cec4af00>
2025-02-24T16:33:40.8571587Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.8571591Z 
2025-02-24T16:33:40.8571732Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8571845Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8571933Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8572006Z         try:
2025-02-24T16:33:40.8572145Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8572229Z         except KeyError:
2025-02-24T16:33:40.8572364Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8572436Z     
2025-02-24T16:33:40.8572521Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8572623Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8572710Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8572844Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8572935Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8573024Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8573137Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8573209Z             else:
2025-02-24T16:33:40.8573307Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8573418Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8573422Z 
2025-02-24T16:33:40.8573650Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8573770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8573916Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8573989Z     ???
2025-02-24T16:33:40.8574096Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8574108Z 
2025-02-24T16:33:40.8574173Z >   ???
2025-02-24T16:33:40.8574303Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8574369Z E   
2025-02-24T16:33:40.8574502Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8574612Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8574687Z E          ...
2025-02-24T16:33:40.8574773Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8574907Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8575029Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8575099Z E          ...
2025-02-24T16:33:40.8575188Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8575310Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8575419Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8575584Z 
2025-02-24T16:33:40.8575679Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8575890Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] _
2025-02-24T16:33:40.8575894Z 
2025-02-24T16:33:40.8576026Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8576152Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8576251Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8576385Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8576513Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8576609Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8576683Z err_msg = None
2025-02-24T16:33:40.8576687Z 
2025-02-24T16:33:40.8576801Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8576887Z         if err_msg is None:
2025-02-24T16:33:40.8576980Z             if left.shape != right.shape:
2025-02-24T16:33:40.8577069Z                 raise_assert_detail(
2025-02-24T16:33:40.8577210Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8577400Z                 )
2025-02-24T16:33:40.8577470Z     
2025-02-24T16:33:40.8577545Z             diff = 0
2025-02-24T16:33:40.8577657Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8577748Z                 # count up differences
2025-02-24T16:33:40.8577921Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8578001Z                     diff += 1
2025-02-24T16:33:40.8578073Z     
2025-02-24T16:33:40.8578161Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8578302Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8578479Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8578591Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8578665Z E           
2025-02-24T16:33:40.8578818Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8579299Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8579923Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8579933Z 
2025-02-24T16:33:40.8580239Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8580244Z 
2025-02-24T16:33:40.8580419Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8580424Z 
2025-02-24T16:33:40.8580652Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5122047d0>
2025-02-24T16:33:40.8580821Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4cec4af00>
2025-02-24T16:33:40.8580902Z attr = 'beta_sobolev'
2025-02-24T16:33:40.8580906Z 
2025-02-24T16:33:40.8581041Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8581162Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8581251Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8581321Z         try:
2025-02-24T16:33:40.8581463Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8581542Z         except KeyError:
2025-02-24T16:33:40.8581798Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8581866Z     
2025-02-24T16:33:40.8581958Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8582050Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8582141Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8582277Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8582361Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8582454Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8582561Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8582644Z             else:
2025-02-24T16:33:40.8582742Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8582848Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8582852Z 
2025-02-24T16:33:40.8582983Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8583095Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8583246Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8583318Z     ???
2025-02-24T16:33:40.8583431Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8583435Z 
2025-02-24T16:33:40.8583506Z >   ???
2025-02-24T16:33:40.8583631Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8583703Z E   
2025-02-24T16:33:40.8583830Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8583943Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8584021Z E          ...
2025-02-24T16:33:40.8584106Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8584236Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8584346Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8584421Z E          ...
2025-02-24T16:33:40.8584506Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8584635Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8584743Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8584748Z 
2025-02-24T16:33:40.8584835Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8585044Z ___ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-j_blues] ____
2025-02-24T16:33:40.8585049Z 
2025-02-24T16:33:40.8585177Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8585308Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8585494Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8585623Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8585749Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8585845Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8585921Z err_msg = None
2025-02-24T16:33:40.8585926Z 
2025-02-24T16:33:40.8586039Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8586119Z         if err_msg is None:
2025-02-24T16:33:40.8586218Z             if left.shape != right.shape:
2025-02-24T16:33:40.8586356Z                 raise_assert_detail(
2025-02-24T16:33:40.8586585Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8586691Z                 )
2025-02-24T16:33:40.8586796Z     
2025-02-24T16:33:40.8586918Z             diff = 0
2025-02-24T16:33:40.8587085Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8587225Z                 # count up differences
2025-02-24T16:33:40.8587660Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8587788Z                     diff += 1
2025-02-24T16:33:40.8588089Z     
2025-02-24T16:33:40.8588240Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8588461Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8588748Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8588937Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8589051Z E           
2025-02-24T16:33:40.8589228Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8589694Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8590174Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8590190Z 
2025-02-24T16:33:40.8590708Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8590717Z 
2025-02-24T16:33:40.8591008Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8591016Z 
2025-02-24T16:33:40.8591362Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512204950>
2025-02-24T16:33:40.8591637Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4cec4af00>
2025-02-24T16:33:40.8591759Z attr = 'j_blues'
2025-02-24T16:33:40.8591765Z 
2025-02-24T16:33:40.8591996Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8592211Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8592376Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8592504Z         try:
2025-02-24T16:33:40.8592758Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8592903Z         except KeyError:
2025-02-24T16:33:40.8593049Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8593122Z     
2025-02-24T16:33:40.8593215Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8593310Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8593406Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8593545Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8593822Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8593913Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8594034Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8594109Z             else:
2025-02-24T16:33:40.8594204Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8594322Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8594327Z 
2025-02-24T16:33:40.8594456Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8594579Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8594729Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8594804Z     ???
2025-02-24T16:33:40.8594921Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8594926Z 
2025-02-24T16:33:40.8594992Z >   ???
2025-02-24T16:33:40.8595126Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8595197Z E   
2025-02-24T16:33:40.8595330Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8595443Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8595519Z E          ...
2025-02-24T16:33:40.8595613Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8595827Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8595948Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8596017Z E          ...
2025-02-24T16:33:40.8596108Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8596241Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8596345Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8596350Z 
2025-02-24T16:33:40.8596445Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8596707Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] _
2025-02-24T16:33:40.8596715Z 
2025-02-24T16:33:40.8596851Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8596989Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8597089Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8597235Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8597515Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8597615Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8597688Z err_msg = None
2025-02-24T16:33:40.8597698Z 
2025-02-24T16:33:40.8597813Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8597900Z         if err_msg is None:
2025-02-24T16:33:40.8597996Z             if left.shape != right.shape:
2025-02-24T16:33:40.8598092Z                 raise_assert_detail(
2025-02-24T16:33:40.8598241Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8598316Z                 )
2025-02-24T16:33:40.8598389Z     
2025-02-24T16:33:40.8598460Z             diff = 0
2025-02-24T16:33:40.8598579Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8598670Z                 # count up differences
2025-02-24T16:33:40.8598848Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8598929Z                     diff += 1
2025-02-24T16:33:40.8599002Z     
2025-02-24T16:33:40.8599096Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8599234Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8599412Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8599529Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8599758Z E           
2025-02-24T16:33:40.8599874Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8600140Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8600409Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8600414Z 
2025-02-24T16:33:40.8600730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8600743Z 
2025-02-24T16:33:40.8600916Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8600921Z 
2025-02-24T16:33:40.8601152Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5122056d0>
2025-02-24T16:33:40.8601322Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de9e0530>
2025-02-24T16:33:40.8601508Z attr = 'lines'
2025-02-24T16:33:40.8601512Z 
2025-02-24T16:33:40.8601656Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8601771Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8601859Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8601928Z         try:
2025-02-24T16:33:40.8602072Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8602152Z         except KeyError:
2025-02-24T16:33:40.8602293Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8602366Z     
2025-02-24T16:33:40.8602452Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8602553Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8602643Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8602782Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8602867Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8602962Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8603078Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8603150Z             else:
2025-02-24T16:33:40.8603248Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8603354Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8603359Z 
2025-02-24T16:33:40.8603489Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8603602Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8603754Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8603828Z     ???
2025-02-24T16:33:40.8603940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8603945Z 
2025-02-24T16:33:40.8604017Z >   ???
2025-02-24T16:33:40.8604143Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8604216Z E   
2025-02-24T16:33:40.8604342Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8604461Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8604537Z E          ...
2025-02-24T16:33:40.8604624Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8604757Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8604871Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8604946Z E          ...
2025-02-24T16:33:40.8605037Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8605161Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8605268Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8605384Z 
2025-02-24T16:33:40.8605542Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8606114Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] _
2025-02-24T16:33:40.8606122Z 
2025-02-24T16:33:40.8606505Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512205790>
2025-02-24T16:33:40.8606744Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de9e0530>
2025-02-24T16:33:40.8606843Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.8606848Z 
2025-02-24T16:33:40.8606985Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8607106Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8607189Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8607370Z         try:
2025-02-24T16:33:40.8607516Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8607597Z         except KeyError:
2025-02-24T16:33:40.8607744Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8607812Z     
2025-02-24T16:33:40.8607901Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8607992Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8608086Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8608358Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8608443Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8608538Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8608646Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8608650Z 
2025-02-24T16:33:40.8608783Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8608900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8608905Z 
2025-02-24T16:33:40.8609041Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8609133Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8609242Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8609328Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8609468Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:33:40.8609559Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:33:40.8609667Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8609745Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:33:40.8609823Z err_msg = None
2025-02-24T16:33:40.8609827Z 
2025-02-24T16:33:40.8609937Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8610021Z         if err_msg is None:
2025-02-24T16:33:40.8610118Z             if left.shape != right.shape:
2025-02-24T16:33:40.8610202Z                 raise_assert_detail(
2025-02-24T16:33:40.8610352Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8610426Z                 )
2025-02-24T16:33:40.8610499Z     
2025-02-24T16:33:40.8610570Z             diff = 0
2025-02-24T16:33:40.8610685Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8610777Z                 # count up differences
2025-02-24T16:33:40.8610951Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8611032Z                     diff += 1
2025-02-24T16:33:40.8611099Z     
2025-02-24T16:33:40.8611189Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8611325Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8611501Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8611607Z E           AssertionError: Series are different
2025-02-24T16:33:40.8611678Z E           
2025-02-24T16:33:40.8611786Z E           Series values are different (4.04858 %)
2025-02-24T16:33:40.8612274Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8612608Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8612940Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8612948Z 
2025-02-24T16:33:40.8613264Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8613647Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] _
2025-02-24T16:33:40.8613653Z 
2025-02-24T16:33:40.8613880Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512205850>
2025-02-24T16:33:40.8614048Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de9e0530>
2025-02-24T16:33:40.8614142Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.8614146Z 
2025-02-24T16:33:40.8614286Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8614400Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8614491Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8614560Z         try:
2025-02-24T16:33:40.8614701Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8614782Z         except KeyError:
2025-02-24T16:33:40.8614918Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8614995Z     
2025-02-24T16:33:40.8615081Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8615181Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8615315Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8615563Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8615708Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8615855Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8616042Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8616049Z 
2025-02-24T16:33:40.8616255Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8616447Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8616454Z 
2025-02-24T16:33:40.8616591Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8616680Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8616796Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8616875Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8617016Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:33:40.8617098Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:33:40.8617207Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:33:40.8617393Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:33:40.8617470Z err_msg = None
2025-02-24T16:33:40.8617474Z 
2025-02-24T16:33:40.8617587Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8617794Z         if err_msg is None:
2025-02-24T16:33:40.8617892Z             if left.shape != right.shape:
2025-02-24T16:33:40.8617975Z                 raise_assert_detail(
2025-02-24T16:33:40.8618126Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8618204Z                 )
2025-02-24T16:33:40.8618273Z     
2025-02-24T16:33:40.8618348Z             diff = 0
2025-02-24T16:33:40.8618459Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8618550Z                 # count up differences
2025-02-24T16:33:40.8618718Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8618807Z                     diff += 1
2025-02-24T16:33:40.8618880Z     
2025-02-24T16:33:40.8618963Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8619102Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8619271Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8619380Z E           AssertionError: Series are different
2025-02-24T16:33:40.8619454Z E           
2025-02-24T16:33:40.8619555Z E           Series values are different (6.47773 %)
2025-02-24T16:33:40.8619931Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8620418Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8620799Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.8620807Z 
2025-02-24T16:33:40.8621120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8621369Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] _
2025-02-24T16:33:40.8621374Z 
2025-02-24T16:33:40.8621502Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8621638Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8621735Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8621872Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8622004Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8622097Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8622176Z err_msg = None
2025-02-24T16:33:40.8622180Z 
2025-02-24T16:33:40.8622288Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8622375Z         if err_msg is None:
2025-02-24T16:33:40.8622472Z             if left.shape != right.shape:
2025-02-24T16:33:40.8622555Z                 raise_assert_detail(
2025-02-24T16:33:40.8622702Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8622853Z                 )
2025-02-24T16:33:40.8622924Z     
2025-02-24T16:33:40.8622997Z             diff = 0
2025-02-24T16:33:40.8623113Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8623204Z                 # count up differences
2025-02-24T16:33:40.8623373Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8623458Z                     diff += 1
2025-02-24T16:33:40.8623525Z     
2025-02-24T16:33:40.8623614Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8623747Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8623922Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8624039Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8624110Z E           
2025-02-24T16:33:40.8624227Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8624486Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8624752Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8624856Z 
2025-02-24T16:33:40.8625167Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8625172Z 
2025-02-24T16:33:40.8644198Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8644230Z 
2025-02-24T16:33:40.8644706Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512205a90>
2025-02-24T16:33:40.8645082Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de9e0530>, attr = 'nu'
2025-02-24T16:33:40.8645089Z 
2025-02-24T16:33:40.8645325Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8645526Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8645682Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8645777Z         try:
2025-02-24T16:33:40.8645936Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8646019Z         except KeyError:
2025-02-24T16:33:40.8646170Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8646236Z     
2025-02-24T16:33:40.8646326Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8646418Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8646512Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8646652Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8646741Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8646832Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8646941Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8646946Z 
2025-02-24T16:33:40.8647078Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8647196Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8647494Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8647568Z     ???
2025-02-24T16:33:40.8647679Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8647684Z 
2025-02-24T16:33:40.8647753Z >   ???
2025-02-24T16:33:40.8647884Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8647956Z E   
2025-02-24T16:33:40.8648087Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8648375Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8648451Z E          ...
2025-02-24T16:33:40.8648538Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8648670Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8648787Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8648863Z E          ...
2025-02-24T16:33:40.8648952Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8649078Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8649185Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8649190Z 
2025-02-24T16:33:40.8649280Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8649572Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] _
2025-02-24T16:33:40.8649578Z 
2025-02-24T16:33:40.8649711Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8649848Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8649954Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8650092Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8650359Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8650455Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8650529Z err_msg = None
2025-02-24T16:33:40.8650534Z 
2025-02-24T16:33:40.8650657Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8650742Z         if err_msg is None:
2025-02-24T16:33:40.8650845Z             if left.shape != right.shape:
2025-02-24T16:33:40.8650930Z                 raise_assert_detail(
2025-02-24T16:33:40.8651085Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8651163Z                 )
2025-02-24T16:33:40.8651230Z     
2025-02-24T16:33:40.8651307Z             diff = 0
2025-02-24T16:33:40.8651423Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8651517Z                 # count up differences
2025-02-24T16:33:40.8651691Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8651777Z                     diff += 1
2025-02-24T16:33:40.8651849Z     
2025-02-24T16:33:40.8651938Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8652080Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8652249Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8652370Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8652440Z E           
2025-02-24T16:33:40.8652556Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8652821Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8653087Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8653098Z 
2025-02-24T16:33:40.8653410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8653415Z 
2025-02-24T16:33:40.8653592Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8653597Z 
2025-02-24T16:33:40.8653929Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512205b50>
2025-02-24T16:33:40.8654106Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de9e0530>
2025-02-24T16:33:40.8654192Z attr = 'wavelength_cm'
2025-02-24T16:33:40.8654197Z 
2025-02-24T16:33:40.8654336Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8654462Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8654548Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8654623Z         try:
2025-02-24T16:33:40.8654765Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8654854Z         except KeyError:
2025-02-24T16:33:40.8654998Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8655065Z     
2025-02-24T16:33:40.8655160Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8655257Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8655355Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8655492Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8655584Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8655681Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8655794Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8655878Z 
2025-02-24T16:33:40.8656014Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8656128Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8656283Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8656359Z     ???
2025-02-24T16:33:40.8656467Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8656472Z 
2025-02-24T16:33:40.8656542Z >   ???
2025-02-24T16:33:40.8656670Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8656742Z E   
2025-02-24T16:33:40.8656871Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8656990Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8657065Z E          ...
2025-02-24T16:33:40.8657153Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8657398Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8657516Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8657592Z E          ...
2025-02-24T16:33:40.8657677Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8657807Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8657917Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8657921Z 
2025-02-24T16:33:40.8658012Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8658273Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] _
2025-02-24T16:33:40.8658279Z 
2025-02-24T16:33:40.8658409Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8658550Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8658653Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8658789Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8658923Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8659018Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8659098Z err_msg = None
2025-02-24T16:33:40.8659102Z 
2025-02-24T16:33:40.8659224Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8659303Z         if err_msg is None:
2025-02-24T16:33:40.8659406Z             if left.shape != right.shape:
2025-02-24T16:33:40.8659491Z                 raise_assert_detail(
2025-02-24T16:33:40.8659648Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8659840Z                 )
2025-02-24T16:33:40.8659913Z     
2025-02-24T16:33:40.8659989Z             diff = 0
2025-02-24T16:33:40.8660102Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8660246Z                 # count up differences
2025-02-24T16:33:40.8660570Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8660711Z                     diff += 1
2025-02-24T16:33:40.8660822Z     
2025-02-24T16:33:40.8660919Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8661064Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8661235Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8661355Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8661426Z E           
2025-02-24T16:33:40.8661541Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8661806Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8662199Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8662205Z 
2025-02-24T16:33:40.8662524Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8662528Z 
2025-02-24T16:33:40.8662704Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8662712Z 
2025-02-24T16:33:40.8662938Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512205c10>
2025-02-24T16:33:40.8663144Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de9e0530>, attr = 'f_lu'
2025-02-24T16:33:40.8663149Z 
2025-02-24T16:33:40.8663286Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8663413Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8663502Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8663572Z         try:
2025-02-24T16:33:40.8663717Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8663797Z         except KeyError:
2025-02-24T16:33:40.8663941Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8664008Z     
2025-02-24T16:33:40.8664102Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8664201Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8664289Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8664429Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8664518Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8664610Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8664719Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8664731Z 
2025-02-24T16:33:40.8664855Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:33:40.8664973Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8665124Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8665198Z     ???
2025-02-24T16:33:40.8665304Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8665309Z 
2025-02-24T16:33:40.8665382Z >   ???
2025-02-24T16:33:40.8665512Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8665584Z E   
2025-02-24T16:33:40.8665716Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8665910Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8665986Z E          ...
2025-02-24T16:33:40.8666072Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8666208Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8666326Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8666396Z E          ...
2025-02-24T16:33:40.8666484Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8666607Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8666719Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8666723Z 
2025-02-24T16:33:40.8666818Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8667104Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] _
2025-02-24T16:33:40.8667110Z 
2025-02-24T16:33:40.8667359Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8667496Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8667599Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8667736Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8667973Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8668070Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8668144Z err_msg = None
2025-02-24T16:33:40.8668148Z 
2025-02-24T16:33:40.8668266Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8668345Z         if err_msg is None:
2025-02-24T16:33:40.8668446Z             if left.shape != right.shape:
2025-02-24T16:33:40.8668536Z                 raise_assert_detail(
2025-02-24T16:33:40.8668683Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8668760Z                 )
2025-02-24T16:33:40.8668825Z     
2025-02-24T16:33:40.8668901Z             diff = 0
2025-02-24T16:33:40.8669010Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8669102Z                 # count up differences
2025-02-24T16:33:40.8669279Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8669355Z                     diff += 1
2025-02-24T16:33:40.8669428Z     
2025-02-24T16:33:40.8669518Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8669658Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8669829Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8669946Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8670024Z E           
2025-02-24T16:33:40.8670134Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8670399Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8670661Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8670667Z 
2025-02-24T16:33:40.8670976Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8670981Z 
2025-02-24T16:33:40.8671155Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8671339Z 
2025-02-24T16:33:40.8671570Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512206390>
2025-02-24T16:33:40.8671738Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de9e0530>
2025-02-24T16:33:40.8671822Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.8671826Z 
2025-02-24T16:33:40.8671966Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8672085Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8672168Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8672242Z         try:
2025-02-24T16:33:40.8672387Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8672466Z         except KeyError:
2025-02-24T16:33:40.8672609Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8672676Z     
2025-02-24T16:33:40.8672768Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8672862Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8672959Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8673095Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8673179Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8673273Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8673381Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8673558Z             else:
2025-02-24T16:33:40.8673653Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8673763Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8673767Z 
2025-02-24T16:33:40.8673897Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8674009Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8674157Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8674225Z     ???
2025-02-24T16:33:40.8674336Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8674344Z 
2025-02-24T16:33:40.8674414Z >   ???
2025-02-24T16:33:40.8674540Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8674612Z E   
2025-02-24T16:33:40.8674737Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8674854Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8674927Z E          ...
2025-02-24T16:33:40.8675018Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8675151Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8675263Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8675338Z E          ...
2025-02-24T16:33:40.8675422Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8675549Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8675654Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8675666Z 
2025-02-24T16:33:40.8675760Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8676044Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] _
2025-02-24T16:33:40.8676049Z 
2025-02-24T16:33:40.8676178Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8676308Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8676412Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8676546Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8676672Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8676764Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8676846Z err_msg = None
2025-02-24T16:33:40.8676850Z 
2025-02-24T16:33:40.8676961Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8677132Z         if err_msg is None:
2025-02-24T16:33:40.8677230Z             if left.shape != right.shape:
2025-02-24T16:33:40.8677555Z                 raise_assert_detail(
2025-02-24T16:33:40.8677740Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8677811Z                 )
2025-02-24T16:33:40.8677888Z     
2025-02-24T16:33:40.8677962Z             diff = 0
2025-02-24T16:33:40.8678076Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8678168Z                 # count up differences
2025-02-24T16:33:40.8678337Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8678418Z                     diff += 1
2025-02-24T16:33:40.8678484Z     
2025-02-24T16:33:40.8678577Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8678713Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8678888Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8679008Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8679078Z E           
2025-02-24T16:33:40.8679193Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8679448Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8679844Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8679850Z 
2025-02-24T16:33:40.8680161Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8680165Z 
2025-02-24T16:33:40.8680334Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8680344Z 
2025-02-24T16:33:40.8680565Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff512206450>
2025-02-24T16:33:40.8680739Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de9e0530>
2025-02-24T16:33:40.8680816Z attr = 'beta_sobolev'
2025-02-24T16:33:40.8680820Z 
2025-02-24T16:33:40.8680959Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8681073Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8681161Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8681234Z         try:
2025-02-24T16:33:40.8681372Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8681456Z         except KeyError:
2025-02-24T16:33:40.8681594Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8681666Z     
2025-02-24T16:33:40.8681751Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8681850Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8681944Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8682073Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8682165Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8682252Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8682364Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8682438Z             else:
2025-02-24T16:33:40.8682531Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8682640Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8682644Z 
2025-02-24T16:33:40.8682768Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8682883Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8683142Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8683216Z     ???
2025-02-24T16:33:40.8683327Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8683332Z 
2025-02-24T16:33:40.8683398Z >   ???
2025-02-24T16:33:40.8683531Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8683598Z E   
2025-02-24T16:33:40.8683728Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8683835Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8683910Z E          ...
2025-02-24T16:33:40.8684000Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8684126Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8684239Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8684308Z E          ...
2025-02-24T16:33:40.8684397Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8684522Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8684630Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8684634Z 
2025-02-24T16:33:40.8684725Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8684984Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] _
2025-02-24T16:33:40.8685069Z 
2025-02-24T16:33:40.8685204Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8685339Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8685432Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8685566Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:33:40.8685685Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:33:40.8685784Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:33:40.8685856Z err_msg = None
2025-02-24T16:33:40.8685871Z 
2025-02-24T16:33:40.8686065Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:33:40.8686218Z         if err_msg is None:
2025-02-24T16:33:40.8686381Z             if left.shape != right.shape:
2025-02-24T16:33:40.8686515Z                 raise_assert_detail(
2025-02-24T16:33:40.8686665Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:33:40.8686740Z                 )
2025-02-24T16:33:40.8686810Z     
2025-02-24T16:33:40.8686880Z             diff = 0
2025-02-24T16:33:40.8686997Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:33:40.8687084Z                 # count up differences
2025-02-24T16:33:40.8687428Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:33:40.8687510Z                     diff += 1
2025-02-24T16:33:40.8687585Z     
2025-02-24T16:33:40.8687678Z             diff = diff * 100.0 / left.size
2025-02-24T16:33:40.8687813Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:33:40.8687989Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:33:40.8688101Z E           AssertionError: numpy array are different
2025-02-24T16:33:40.8688179Z E           
2025-02-24T16:33:40.8688291Z E           numpy array values are different (4.04858 %)
2025-02-24T16:33:40.8688554Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8688817Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.8688955Z 
2025-02-24T16:33:40.8689267Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:33:40.8689280Z 
2025-02-24T16:33:40.8689449Z During handling of the above exception, another exception occurred:
2025-02-24T16:33:40.8689453Z 
2025-02-24T16:33:40.8689678Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7ff5122065d0>
2025-02-24T16:33:40.8689842Z plasma = <tardis.plasma.base.BasePlasma object at 0x7ff4de9e0530>
2025-02-24T16:33:40.8689917Z attr = 'j_blues'
2025-02-24T16:33:40.8689922Z 
2025-02-24T16:33:40.8690063Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:33:40.8690179Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:33:40.8690267Z         key = f"plasma/{attr}"
2025-02-24T16:33:40.8690340Z         try:
2025-02-24T16:33:40.8690485Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:33:40.8690565Z         except KeyError:
2025-02-24T16:33:40.8690704Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:33:40.8690774Z     
2025-02-24T16:33:40.8690970Z         if hasattr(plasma, attr):
2025-02-24T16:33:40.8691069Z             actual = getattr(plasma, attr)
2025-02-24T16:33:40.8691163Z             if attr == "selected_atoms":
2025-02-24T16:33:40.8691298Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:33:40.8691381Z             elif actual.ndim == 1:
2025-02-24T16:33:40.8691474Z                 actual = pd.Series(actual)
2025-02-24T16:33:40.8691589Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:33:40.8691660Z             else:
2025-02-24T16:33:40.8691759Z                 actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8691869Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:33:40.8691873Z 
2025-02-24T16:33:40.8692004Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:33:40.8692117Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8692268Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8692344Z     ???
2025-02-24T16:33:40.8692451Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8692455Z 
2025-02-24T16:33:40.8692526Z >   ???
2025-02-24T16:33:40.8692657Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.8692729Z E   
2025-02-24T16:33:40.8692856Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.8692971Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8693046Z E          ...
2025-02-24T16:33:40.8693134Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8693271Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8693382Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.8693457Z E          ...
2025-02-24T16:33:40.8693545Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.8693666Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.8693778Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.8693783Z 
2025-02-24T16:33:40.8693870Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8694041Z _________________ test_hdf_plasma[stimulated_emission_factor] __________________
2025-02-24T16:33:40.8694046Z 
2025-02-24T16:33:40.8694273Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7ff50fd6b620>
2025-02-24T16:33:40.8694369Z attr = 'stimulated_emission_factor'
2025-02-24T16:33:40.8694645Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff4de92c320>
2025-02-24T16:33:40.8694650Z 
2025-02-24T16:33:40.8694901Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:33:40.8695073Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:33:40.8695198Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:33:40.8695335Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:33:40.8695459Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:33:40.8695547Z             if hasattr(actual, "cgs"):
2025-02-24T16:33:40.8695641Z                 actual = actual.cgs.value
2025-02-24T16:33:40.8695743Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:33:40.8695748Z 
2025-02-24T16:33:40.8695853Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:33:40.8695965Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8695970Z 
2025-02-24T16:33:40.8696284Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e4303a60>, array([[0.        , 0.        , 0.        , ..., 0.   ...1,
2025-02-24T16:33:40.8696366Z         0.01476858],
2025-02-24T16:33:40.8696499Z        [0.01433244, 0.01435378, 0.01437513, ..., 0.0146952 , 0.01471653,
2025-02-24T16:33:40.8696575Z         0.01473787]]))
2025-02-24T16:33:40.8696826Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8696910Z 
2025-02-24T16:33:40.8696985Z     @wraps(func)
2025-02-24T16:33:40.8697073Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8697156Z         with self._recreate_cm():
2025-02-24T16:33:40.8697356Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8697445Z E           AssertionError: 
2025-02-24T16:33:40.8697557Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8697630Z E           
2025-02-24T16:33:40.8697732Z E           Mismatched elements: 120 / 584480 (0.0205%)
2025-02-24T16:33:40.8697826Z E           Max absolute difference: 1.
2025-02-24T16:33:40.8697918Z E           Max relative difference: 1.
2025-02-24T16:33:40.8698052Z E            x: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:33:40.8698155Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:33:40.8698258Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T16:33:40.8698379Z E            y: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:33:40.8698476Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:33:40.8698578Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T16:33:40.8698583Z 
2025-02-24T16:33:40.8698785Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8698950Z ___________________ test_hdf_plasma[lines_lower_level_index] ___________________
2025-02-24T16:33:40.8698957Z 
2025-02-24T16:33:40.8699183Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7ff50fd6b620>
2025-02-24T16:33:40.8699270Z attr = 'lines_lower_level_index'
2025-02-24T16:33:40.8699546Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff4d709c080>
2025-02-24T16:33:40.8699551Z 
2025-02-24T16:33:40.8699732Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:33:40.8699899Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:33:40.8700022Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:33:40.8700153Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:33:40.8700275Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:33:40.8700360Z             if hasattr(actual, "cgs"):
2025-02-24T16:33:40.8700453Z                 actual = actual.cgs.value
2025-02-24T16:33:40.8700556Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:33:40.8700680Z 
2025-02-24T16:33:40.8700786Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:33:40.8700896Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8700900Z 
2025-02-24T16:33:40.8701303Z args = (<function assert_allclose.<locals>.compare at 0x7ff4fb4e7d80>, array([2577, 2577, 2577, ..., 3886, 3846, 3885]), array([2577, 2577, 2577, ..., 3886, 3846, 3885]))
2025-02-24T16:33:40.8701556Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8701561Z 
2025-02-24T16:33:40.8701637Z     @wraps(func)
2025-02-24T16:33:40.8701719Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8701806Z         with self._recreate_cm():
2025-02-24T16:33:40.8701890Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8701979Z E           AssertionError: 
2025-02-24T16:33:40.8702089Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8702159Z E           
2025-02-24T16:33:40.8702267Z E           Mismatched elements: 748 / 29224 (2.56%)
2025-02-24T16:33:40.8702358Z E           Max absolute difference: 4005
2025-02-24T16:33:40.8702461Z E           Max relative difference: 26.00649351
2025-02-24T16:33:40.8702568Z E            x: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T16:33:40.8702784Z E            y: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T16:33:40.8702789Z 
2025-02-24T16:33:40.8702999Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8703158Z ___________________ test_hdf_plasma[lines_upper_level_index] ___________________
2025-02-24T16:33:40.8703163Z 
2025-02-24T16:33:40.8703392Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7ff50fd6b620>
2025-02-24T16:33:40.8703480Z attr = 'lines_upper_level_index'
2025-02-24T16:33:40.8703752Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff50245e540>
2025-02-24T16:33:40.8703759Z 
2025-02-24T16:33:40.8703908Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:33:40.8704070Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:33:40.8704191Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:33:40.8704318Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:33:40.8704443Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:33:40.8704531Z             if hasattr(actual, "cgs"):
2025-02-24T16:33:40.8704618Z                 actual = actual.cgs.value
2025-02-24T16:33:40.8704722Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:33:40.8704727Z 
2025-02-24T16:33:40.8704829Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:33:40.8705004Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8705014Z 
2025-02-24T16:33:40.8705629Z args = (<function assert_allclose.<locals>.compare at 0x7ff4fb4e5a80>, array([2613, 2612, 2611, ..., 3899, 3852, 3898]), array([2613, 2612, 2611, ..., 3899, 3852, 3898]))
2025-02-24T16:33:40.8705883Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8705887Z 
2025-02-24T16:33:40.8705965Z     @wraps(func)
2025-02-24T16:33:40.8706050Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8706138Z         with self._recreate_cm():
2025-02-24T16:33:40.8706222Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8706307Z E           AssertionError: 
2025-02-24T16:33:40.8706417Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8706487Z E           
2025-02-24T16:33:40.8706589Z E           Mismatched elements: 1847 / 29224 (6.32%)
2025-02-24T16:33:40.8706679Z E           Max absolute difference: 4046
2025-02-24T16:33:40.8706780Z E           Max relative difference: 24.82208589
2025-02-24T16:33:40.8706883Z E            x: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T16:33:40.8707088Z E            y: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T16:33:40.8707092Z 
2025-02-24T16:33:40.8707407Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8707567Z ________________________ test_hdf_plasma[beta_sobolev] _________________________
2025-02-24T16:33:40.8707576Z 
2025-02-24T16:33:40.8707807Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7ff50fd6b620>
2025-02-24T16:33:40.8707888Z attr = 'beta_sobolev'
2025-02-24T16:33:40.8708156Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff512069f10>
2025-02-24T16:33:40.8708161Z 
2025-02-24T16:33:40.8708310Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:33:40.8708476Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:33:40.8708602Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:33:40.8708733Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:33:40.8708862Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:33:40.8708955Z             if hasattr(actual, "cgs"):
2025-02-24T16:33:40.8709045Z                 actual = actual.cgs.value
2025-02-24T16:33:40.8709151Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:33:40.8709272Z 
2025-02-24T16:33:40.8709377Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:33:40.8709493Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8709498Z 
2025-02-24T16:33:40.8709769Z args = (<function assert_allclose.<locals>.compare at 0x7ff4fb4e65c0>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.8709841Z        [1., 1., .....,
2025-02-24T16:33:40.8709927Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.8710000Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.8710082Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-02-24T16:33:40.8710323Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8710337Z 
2025-02-24T16:33:40.8710409Z     @wraps(func)
2025-02-24T16:33:40.8710496Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8710581Z         with self._recreate_cm():
2025-02-24T16:33:40.8710670Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8710757Z E           AssertionError: 
2025-02-24T16:33:40.8710869Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8710944Z E           
2025-02-24T16:33:40.8711049Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T16:33:40.8711150Z E           Max absolute difference: 0.99984222
2025-02-24T16:33:40.8711248Z E           Max relative difference: 6337.12154973
2025-02-24T16:33:40.8711343Z E            x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.8711428Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.8711520Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:33:40.8711615Z E            y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.8711698Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.8711787Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:33:40.8711792Z 
2025-02-24T16:33:40.8711992Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8712140Z ____________________________ test_hdf_plasma[lines] ____________________________
2025-02-24T16:33:40.8712144Z 
2025-02-24T16:33:40.8712378Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7ff50fd6b620>
2025-02-24T16:33:40.8712450Z attr = 'lines'
2025-02-24T16:33:40.8712721Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff4e4323b00>
2025-02-24T16:33:40.8712727Z 
2025-02-24T16:33:40.8712869Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:33:40.8713041Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:33:40.8713307Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:33:40.8713435Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:33:40.8713559Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:33:40.8713647Z             if hasattr(actual, "cgs"):
2025-02-24T16:33:40.8713746Z                 actual = actual.cgs.value
2025-02-24T16:33:40.8713845Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:33:40.8713854Z 
2025-02-24T16:33:40.8713959Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:33:40.8714071Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8714075Z 
2025-02-24T16:33:40.8714528Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e4309bc0>, array([[6.78130000e+04, 6.67720000e+01, 2.70301683e-02...       [1.04462000e+05, 9.99900019e+05, 2.64868307e-04, ...,
2025-02-24T16:33:40.8714641Z         4.44653904e+09, 1.76709163e+00, 9.99900019e-03]]))
2025-02-24T16:33:40.8714884Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8714892Z 
2025-02-24T16:33:40.8714965Z     @wraps(func)
2025-02-24T16:33:40.8715048Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8715136Z         with self._recreate_cm():
2025-02-24T16:33:40.8715303Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8715710Z E           AssertionError: 
2025-02-24T16:33:40.8715821Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8715895Z E           
2025-02-24T16:33:40.8715996Z E           Mismatched elements: 13335 / 263016 (5.07%)
2025-02-24T16:33:40.8716103Z E           Max absolute difference: 4.25260542e+12
2025-02-24T16:33:40.8716200Z E           Max relative difference: 18196.0085861
2025-02-24T16:33:40.8716356Z E            x: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T16:33:40.8716444Z E                   4.043917e+10, 6.677200e-07],
2025-02-24T16:33:40.8716592Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T16:33:40.8716741Z E            y: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T16:33:40.8716825Z E                   4.043917e+10, 6.677200e-07],
2025-02-24T16:33:40.8716965Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T16:33:40.8716969Z 
2025-02-24T16:33:40.8717172Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8717548Z ____________________________ test_hdf_plasma[f_lu] _____________________________
2025-02-24T16:33:40.8717559Z 
2025-02-24T16:33:40.8717872Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7ff50fd6b620>
2025-02-24T16:33:40.8717948Z attr = 'f_lu'
2025-02-24T16:33:40.8718220Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff4e4320140>
2025-02-24T16:33:40.8718230Z 
2025-02-24T16:33:40.8718373Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:33:40.8718549Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:33:40.8718679Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:33:40.8718813Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:33:40.8718940Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:33:40.8719028Z             if hasattr(actual, "cgs"):
2025-02-24T16:33:40.8719123Z                 actual = actual.cgs.value
2025-02-24T16:33:40.8719229Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:33:40.8719233Z 
2025-02-24T16:33:40.8719339Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:33:40.8719453Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8719458Z 
2025-02-24T16:33:40.8719930Z args = (<function assert_allclose.<locals>.compare at 0x7ff4fb4e42c0>, array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02,...), array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02, ...,
2025-02-24T16:33:40.8720193Z        9.93184643e-04, 1.12688279e+00, 4.41447178e-04]))
2025-02-24T16:33:40.8720442Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8720451Z 
2025-02-24T16:33:40.8720523Z     @wraps(func)
2025-02-24T16:33:40.8720611Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8720695Z         with self._recreate_cm():
2025-02-24T16:33:40.8720785Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8720874Z E           AssertionError: 
2025-02-24T16:33:40.8720987Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8721061Z E           
2025-02-24T16:33:40.8721162Z E           Mismatched elements: 2221 / 29224 (7.6%)
2025-02-24T16:33:40.8721264Z E           Max absolute difference: 2.92713618
2025-02-24T16:33:40.8721360Z E           Max relative difference: 18196.0085861
2025-02-24T16:33:40.8721516Z E            x: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T16:33:40.8721607Z E                  1.126883e+00, 4.414472e-04])
2025-02-24T16:33:40.8721749Z E            y: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T16:33:40.8721947Z E                  1.126883e+00, 4.414472e-04])
2025-02-24T16:33:40.8721952Z 
2025-02-24T16:33:40.8722158Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8722315Z ________________________ test_hdf_plasma[tau_sobolevs] _________________________
2025-02-24T16:33:40.8722320Z 
2025-02-24T16:33:40.8722553Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7ff50fd6b620>
2025-02-24T16:33:40.8722631Z attr = 'tau_sobolevs'
2025-02-24T16:33:40.8722901Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff4e4db62a0>
2025-02-24T16:33:40.8722906Z 
2025-02-24T16:33:40.8723055Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:33:40.8723225Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:33:40.8723349Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:33:40.8723479Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:33:40.8723603Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:33:40.8723689Z             if hasattr(actual, "cgs"):
2025-02-24T16:33:40.8723848Z                 actual = actual.cgs.value
2025-02-24T16:33:40.8724020Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:33:40.8724028Z 
2025-02-24T16:33:40.8724210Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:33:40.8724400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8724409Z 
2025-02-24T16:33:40.8724909Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e4309620>, array([[0.00000000e+00, 0.00000000e+00, 0.00000000e+00...       [7.57366002e-14, 3.42661945e-14, 1.59795775e-14, ...,
2025-02-24T16:33:40.8725025Z         2.25618458e-18, 1.41426559e-18, 8.96636158e-19]]))
2025-02-24T16:33:40.8725266Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8725279Z 
2025-02-24T16:33:40.8725351Z     @wraps(func)
2025-02-24T16:33:40.8725436Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8725519Z         with self._recreate_cm():
2025-02-24T16:33:40.8725607Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8725691Z E           AssertionError: 
2025-02-24T16:33:40.8725800Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8725874Z E           
2025-02-24T16:33:40.8725974Z E           Mismatched elements: 39620 / 584480 (6.78%)
2025-02-24T16:33:40.8726079Z E           Max absolute difference: 282815.33818472
2025-02-24T16:33:40.8726181Z E           Max relative difference: 4.12352828e+47
2025-02-24T16:33:40.8726431Z E            x: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T16:33:40.8726518Z E                   0.000000e+00, 0.000000e+00],
2025-02-24T16:33:40.8726654Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T16:33:40.8726800Z E            y: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T16:33:40.8726888Z E                   0.000000e+00, 0.000000e+00],
2025-02-24T16:33:40.8727023Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T16:33:40.8727027Z 
2025-02-24T16:33:40.8727223Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8727611Z __________________ test_plasma_state_iterations[iterations_w] __________________
2025-02-24T16:33:40.8727618Z 
2025-02-24T16:33:40.8727838Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7ff4d73980e0>
2025-02-24T16:33:40.8727921Z attr = 'iterations_w'
2025-02-24T16:33:40.8728191Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff4df799280>
2025-02-24T16:33:40.8728196Z 
2025-02-24T16:33:40.8728285Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.8728359Z         "attr",
2025-02-24T16:33:40.8728430Z         [
2025-02-24T16:33:40.8728632Z             "iterations_w",
2025-02-24T16:33:40.8728721Z             "iterations_t_rad",
2025-02-24T16:33:40.8728819Z             "iterations_electron_densities",
2025-02-24T16:33:40.8728907Z             "iterations_t_inner",
2025-02-24T16:33:40.8728975Z         ],
2025-02-24T16:33:40.8729048Z     )
2025-02-24T16:33:40.8729245Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T16:33:40.8729358Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T16:33:40.8729450Z         if hasattr(actual, "value"):
2025-02-24T16:33:40.8729533Z             actual = actual.value
2025-02-24T16:33:40.8729628Z         actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8729755Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:33:40.8729935Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:33:40.8729940Z 
2025-02-24T16:33:40.8730061Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T16:33:40.8730171Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8730323Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8730394Z     ???
2025-02-24T16:33:40.8730502Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8730507Z 
2025-02-24T16:33:40.8730575Z >   ???
2025-02-24T16:33:40.8730754Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:33:40.8730827Z E   
2025-02-24T16:33:40.8730987Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:33:40.8731074Z E   [index]: [0, 1]
2025-02-24T16:33:40.8731178Z E   [left]:  [0.40039163797855976, 0.45006901732183335]
2025-02-24T16:33:40.8731282Z E   [right]: [0.40039163797855976, 0.45013644671958974]
2025-02-24T16:33:40.8731457Z E   At positional index 1, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-24T16:33:40.8731463Z 
2025-02-24T16:33:40.8731550Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8731710Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.8732124Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:33:40.8732583Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:33:40.8732738Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T16:33:40.8732743Z 
2025-02-24T16:33:40.8732747Z 
2025-02-24T16:33:40.8732983Z Packets:                                                                                   4031/? [04:47<00:00, 10.44it/s]   [A
2025-02-24T16:33:40.8733102Z 
2025-02-24T16:33:40.8733332Z Packets:                                                                                   14557/? [04:48<00:00, 62.63it/s][A
2025-02-24T16:33:40.8733339Z 
2025-02-24T16:33:40.8733564Z Packets:                                                                                   25347/? [04:48<00:00, 138.98it/s][A
2025-02-24T16:33:40.8733572Z 
2025-02-24T16:33:40.8733785Z Packets:                                                                                   36160/? [04:48<00:00, 248.09it/s][A
2025-02-24T16:33:40.8734483Z Iterations:████████████████████████████████████████████████████████████████████████████████5/5 [04:48<00:00, 101.34s/it]
2025-02-24T16:33:40.8734497Z 
2025-02-24T16:33:40.8734749Z Packets:                                                                                   44030/? [04:48<00:00, 248.09it/s][A
2025-02-24T16:33:40.8734759Z 
2025-02-24T16:33:40.8734980Z Packets:                                                                                   0/40000 [00:00<?, ?it/s]         [A
2025-02-24T16:33:40.8734995Z 
2025-02-24T16:33:40.8735255Z Packets:   ███████████████████▌                                                            9750/40000 [00:00<00:00, 35103.69it/s][A
2025-02-24T16:33:40.8735261Z 
2025-02-24T16:33:40.8735632Z Packets:   ██████████████████████████▌                                                     13261/40000 [00:00<00:00, 35057.89it/s][A
2025-02-24T16:33:40.8735642Z 
2025-02-24T16:33:40.8735903Z Packets:   █████████████████████████████████▌                                              16765/40000 [00:00<00:00, 35047.10it/s][A
2025-02-24T16:33:40.8735909Z 
2025-02-24T16:33:40.8736180Z Packets:   ████████████████████████████████████████▌                                       20280/40000 [00:00<00:00, 35078.63it/s][A
2025-02-24T16:33:40.8736185Z 
2025-02-24T16:33:40.8736459Z Packets:   ███████████████████████████████████████████████▋                                23813/40000 [00:00<00:00, 35156.50it/s][A
2025-02-24T16:33:40.8736484Z 
2025-02-24T16:33:40.8736765Z Packets:   ██████████████████████████████████████████████████████▋                         27354/40000 [00:00<00:00, 35234.67it/s][A
2025-02-24T16:33:40.8736771Z 
2025-02-24T16:33:40.8737065Z Packets:   █████████████████████████████████████████████████████████████▊                  30879/40000 [00:00<00:00, 35233.49it/s][A
2025-02-24T16:33:40.8737083Z 
2025-02-24T16:33:40.8737507Z Packets:   ████████████████████████████████████████████████████████████████████▊           34404/40000 [00:00<00:00, 35237.57it/s][A
2025-02-24T16:33:40.8737513Z 
2025-02-24T16:33:40.8737825Z Packets:   ███████████████████████████████████████████████████████████████████████████▉    37969/40000 [00:01<00:00, 35361.18it/s][A
2025-02-24T16:33:40.8737977Z Iterations:                                                                                6/? [04:50<00:00, 67.68s/it] 
2025-02-24T16:33:40.8737984Z 
2025-02-24T16:33:40.8738432Z Packets:   ████████████████████████████████████████████████████████████████████████████████40000/40000 [00:01<00:00, 35361.18it/s][A
2025-02-24T16:33:40.8738601Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.8739113Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:33:40.8739296Z ________________ test_plasma_state_iterations[iterations_t_rad] ________________
2025-02-24T16:33:40.8739301Z 
2025-02-24T16:33:40.8739526Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7ff4d73980e0>
2025-02-24T16:33:40.8739611Z attr = 'iterations_t_rad'
2025-02-24T16:33:40.8739885Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff5039b5130>
2025-02-24T16:33:40.8739890Z 
2025-02-24T16:33:40.8739988Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.8740059Z         "attr",
2025-02-24T16:33:40.8740139Z         [
2025-02-24T16:33:40.8740218Z             "iterations_w",
2025-02-24T16:33:40.8740307Z             "iterations_t_rad",
2025-02-24T16:33:40.8740408Z             "iterations_electron_densities",
2025-02-24T16:33:40.8740499Z             "iterations_t_inner",
2025-02-24T16:33:40.8740572Z         ],
2025-02-24T16:33:40.8740776Z     )
2025-02-24T16:33:40.8740980Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T16:33:40.8741090Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T16:33:40.8741182Z         if hasattr(actual, "value"):
2025-02-24T16:33:40.8741265Z             actual = actual.value
2025-02-24T16:33:40.8741361Z         actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8741490Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:33:40.8741667Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:33:40.8741671Z 
2025-02-24T16:33:40.8741794Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T16:33:40.8741911Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8742065Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8742138Z     ???
2025-02-24T16:33:40.8742246Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8742255Z 
2025-02-24T16:33:40.8742325Z >   ???
2025-02-24T16:33:40.8742632Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:33:40.8742759Z E   
2025-02-24T16:33:40.8743025Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:33:40.8743107Z E   [index]: [0, 1]
2025-02-24T16:33:40.8743215Z E   [left]:  [9967.488442185557, 10091.396322818857]
2025-02-24T16:33:40.8743315Z E   [right]: [9967.488442185557, 10090.925208074616]
2025-02-24T16:33:40.8743491Z E   At positional index 1, first diff: 10091.396322818857 != 10090.925208074616
2025-02-24T16:33:40.8743502Z 
2025-02-24T16:33:40.8743590Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8743777Z _________ test_plasma_state_iterations[iterations_electron_densities] __________
2025-02-24T16:33:40.8743782Z 
2025-02-24T16:33:40.8744003Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7ff4d73980e0>
2025-02-24T16:33:40.8744102Z attr = 'iterations_electron_densities'
2025-02-24T16:33:40.8744376Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff503271400>
2025-02-24T16:33:40.8744381Z 
2025-02-24T16:33:40.8744472Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.8744547Z         "attr",
2025-02-24T16:33:40.8744615Z         [
2025-02-24T16:33:40.8744698Z             "iterations_w",
2025-02-24T16:33:40.8744783Z             "iterations_t_rad",
2025-02-24T16:33:40.8744879Z             "iterations_electron_densities",
2025-02-24T16:33:40.8744970Z             "iterations_t_inner",
2025-02-24T16:33:40.8745039Z         ],
2025-02-24T16:33:40.8745110Z     )
2025-02-24T16:33:40.8745402Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T16:33:40.8745516Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T16:33:40.8745607Z         if hasattr(actual, "value"):
2025-02-24T16:33:40.8745693Z             actual = actual.value
2025-02-24T16:33:40.8745794Z         actual = pd.DataFrame(actual)
2025-02-24T16:33:40.8745916Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:33:40.8746093Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:33:40.8746098Z 
2025-02-24T16:33:40.8746217Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T16:33:40.8746323Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8746471Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8746539Z     ???
2025-02-24T16:33:40.8746649Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8746657Z 
2025-02-24T16:33:40.8746722Z >   ???
2025-02-24T16:33:40.8746902Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:33:40.8746973Z E   
2025-02-24T16:33:40.8747131Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:33:40.8747209Z E   [index]: [0, 1]
2025-02-24T16:33:40.8747544Z E   [left]:  [2869544645.3209715, 2881024886.0882797]
2025-02-24T16:33:40.8747647Z E   [right]: [2869544645.3209715, 2880986026.9779425]
2025-02-24T16:33:40.8747814Z E   At positional index 1, first diff: 2881024886.0882797 != 2880986026.9779425
2025-02-24T16:33:40.8747823Z 
2025-02-24T16:33:40.8747910Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8748074Z ___________________ test_plasma_estimates[nu_bar_estimator] ____________________
2025-02-24T16:33:40.8748078Z 
2025-02-24T16:33:40.8748289Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7ff4d73980e0>
2025-02-24T16:33:40.8748376Z attr = 'nu_bar_estimator'
2025-02-24T16:33:40.8748645Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff503279370>
2025-02-24T16:33:40.8748654Z 
2025-02-24T16:33:40.8748743Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.8748818Z         "attr",
2025-02-24T16:33:40.8748885Z         [
2025-02-24T16:33:40.8748970Z             "nu_bar_estimator",
2025-02-24T16:33:40.8749051Z             "j_estimator",
2025-02-24T16:33:40.8749133Z             "t_radiative",
2025-02-24T16:33:40.8749214Z             "dilution_factor",
2025-02-24T16:33:40.8749297Z             "output_nus",
2025-02-24T16:33:40.8749384Z             "output_energies",
2025-02-24T16:33:40.8749452Z         ],
2025-02-24T16:33:40.8749523Z     )
2025-02-24T16:33:40.8749698Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:33:40.8749818Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:33:40.8749896Z             actual = getattr(
2025-02-24T16:33:40.8750089Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:33:40.8750170Z                 attr,
2025-02-24T16:33:40.8750238Z             )
2025-02-24T16:33:40.8750358Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:33:40.8750506Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:33:40.8750629Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:33:40.8750713Z             actual = getattr(
2025-02-24T16:33:40.8750883Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:33:40.8750958Z                 attr,
2025-02-24T16:33:40.8751027Z             )
2025-02-24T16:33:40.8751100Z         else:
2025-02-24T16:33:40.8751234Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:33:40.8751315Z     
2025-02-24T16:33:40.8751401Z         if hasattr(actual, "value"):
2025-02-24T16:33:40.8751488Z             actual = actual.value
2025-02-24T16:33:40.8751700Z         actual = pd.Series(actual)
2025-02-24T16:33:40.8751823Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:33:40.8752009Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:33:40.8752014Z 
2025-02-24T16:33:40.8752128Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:33:40.8752245Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8752396Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8752464Z     ???
2025-02-24T16:33:40.8752576Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8752580Z 
2025-02-24T16:33:40.8752650Z >   ???
2025-02-24T16:33:40.8752753Z E   AssertionError: Series are different
2025-02-24T16:33:40.8752819Z E   
2025-02-24T16:33:40.8752917Z E   Series values are different (100.0 %)
2025-02-24T16:33:40.8753048Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:33:40.8754265Z E   [left]:  [1.020204277799175e+29, 8.604643039338653e+28, 7.621843612415334e+28, 6.887796775939623e+28, 6.338143063845976e+28, 5.9617708329702514e+28, 5.583215038688496e+28, 5.2621420110438605e+28, 5.007194689998156e+28, 4.79514420355033e+28, 4.630537292368222e+28, 4.4256902590810215e+28, 4.270865369572798e+28, 4.0945442836573385e+28, 3.972280940559009e+28, 3.88415238527491e+28, 3.7498225331847816e+28, 3.6666118688506595e+28, 3.5319738797726317e+28, 3.4372707153252074e+28]
2025-02-24T16:33:40.8755575Z E   [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-02-24T16:33:40.8755771Z E   At positional index 0, first diff: 1.020204277799175e+29 != 1.0190851489144414e+29
2025-02-24T16:33:40.8755775Z 
2025-02-24T16:33:40.8755864Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8756025Z ______________________ test_plasma_estimates[j_estimator] ______________________
2025-02-24T16:33:40.8756032Z 
2025-02-24T16:33:40.8756250Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7ff4d73980e0>
2025-02-24T16:33:40.8756326Z attr = 'j_estimator'
2025-02-24T16:33:40.8756595Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff503242510>
2025-02-24T16:33:40.8756600Z 
2025-02-24T16:33:40.8756689Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.8756764Z         "attr",
2025-02-24T16:33:40.8756837Z         [
2025-02-24T16:33:40.8756916Z             "nu_bar_estimator",
2025-02-24T16:33:40.8756996Z             "j_estimator",
2025-02-24T16:33:40.8757071Z             "t_radiative",
2025-02-24T16:33:40.8757158Z             "dilution_factor",
2025-02-24T16:33:40.8757235Z             "output_nus",
2025-02-24T16:33:40.8757457Z             "output_energies",
2025-02-24T16:33:40.8757530Z         ],
2025-02-24T16:33:40.8757598Z     )
2025-02-24T16:33:40.8757779Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:33:40.8757896Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:33:40.8757978Z             actual = getattr(
2025-02-24T16:33:40.8758167Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:33:40.8758244Z                 attr,
2025-02-24T16:33:40.8758316Z             )
2025-02-24T16:33:40.8758432Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:33:40.8758585Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:33:40.8758696Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:33:40.8758779Z             actual = getattr(
2025-02-24T16:33:40.8759068Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:33:40.8759143Z                 attr,
2025-02-24T16:33:40.8759216Z             )
2025-02-24T16:33:40.8759286Z         else:
2025-02-24T16:33:40.8759429Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:33:40.8759499Z     
2025-02-24T16:33:40.8759590Z         if hasattr(actual, "value"):
2025-02-24T16:33:40.8759674Z             actual = actual.value
2025-02-24T16:33:40.8759766Z         actual = pd.Series(actual)
2025-02-24T16:33:40.8759893Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:33:40.8760072Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:33:40.8760076Z 
2025-02-24T16:33:40.8760195Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:33:40.8760303Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8760453Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8760526Z     ???
2025-02-24T16:33:40.8760635Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8760639Z 
2025-02-24T16:33:40.8760710Z >   ???
2025-02-24T16:33:40.8760806Z E   AssertionError: Series are different
2025-02-24T16:33:40.8760879Z E   
2025-02-24T16:33:40.8761090Z E   Series values are different (100.0 %)
2025-02-24T16:33:40.8761218Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:33:40.8762493Z E   [left]:  [116635492761989.14, 98171051632121.9, 86872515261187.03, 78289696965689.94, 72209193315676.52, 67743848273202.75, 63510940656107.945, 60117004438842.41, 57572723670164.85, 55316097836075.21, 53398108009568.72, 51391839595543.516, 49914799926154.26, 48252386019894.586, 46984233483222.11, 46076787175987.375, 45005288890715.836, 44179675761282.96, 43040066710169.75, 42141149121109.805]
2025-02-24T16:33:40.8763457Z E   [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-02-24T16:33:40.8763643Z E   At positional index 0, first diff: 116635492761989.14 != 116548101693134.0
2025-02-24T16:33:40.8763647Z 
2025-02-24T16:33:40.8763739Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8763892Z ______________________ test_plasma_estimates[t_radiative] ______________________
2025-02-24T16:33:40.8763897Z 
2025-02-24T16:33:40.8764115Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7ff4d73980e0>
2025-02-24T16:33:40.8764192Z attr = 't_radiative'
2025-02-24T16:33:40.8764464Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff503241400>
2025-02-24T16:33:40.8764469Z 
2025-02-24T16:33:40.8764565Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.8764635Z         "attr",
2025-02-24T16:33:40.8764707Z         [
2025-02-24T16:33:40.8764787Z             "nu_bar_estimator",
2025-02-24T16:33:40.8764869Z             "j_estimator",
2025-02-24T16:33:40.8764944Z             "t_radiative",
2025-02-24T16:33:40.8765029Z             "dilution_factor",
2025-02-24T16:33:40.8765116Z             "output_nus",
2025-02-24T16:33:40.8765196Z             "output_energies",
2025-02-24T16:33:40.8765268Z         ],
2025-02-24T16:33:40.8765335Z     )
2025-02-24T16:33:40.8765516Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:33:40.8765632Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:33:40.8765717Z             actual = getattr(
2025-02-24T16:33:40.8765914Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:33:40.8765987Z                 attr,
2025-02-24T16:33:40.8766060Z             )
2025-02-24T16:33:40.8766274Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:33:40.8766426Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:33:40.8766538Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:33:40.8766622Z             actual = getattr(
2025-02-24T16:33:40.8766799Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:33:40.8766870Z                 attr,
2025-02-24T16:33:40.8766943Z             )
2025-02-24T16:33:40.8767011Z         else:
2025-02-24T16:33:40.8767151Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:33:40.8767218Z     
2025-02-24T16:33:40.8767432Z         if hasattr(actual, "value"):
2025-02-24T16:33:40.8767523Z             actual = actual.value
2025-02-24T16:33:40.8767609Z         actual = pd.Series(actual)
2025-02-24T16:33:40.8767736Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:33:40.8767915Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:33:40.8767923Z 
2025-02-24T16:33:40.8768043Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:33:40.8768158Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8768303Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8768513Z     ???
2025-02-24T16:33:40.8768620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8768625Z 
2025-02-24T16:33:40.8768695Z >   ???
2025-02-24T16:33:40.8768792Z E   AssertionError: Series are different
2025-02-24T16:33:40.8768864Z E   
2025-02-24T16:33:40.8768960Z E   Series values are different (90.0 %)
2025-02-24T16:33:40.8769083Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:33:40.8770098Z E   [left]:  [10091.396322818857, 10113.672762424394, 10138.572146470884, 10142.407829541042, 10149.471061360666, 10124.731447668684, 10084.96501000204, 10057.884801342841, 10073.983914823792, 10031.92450183089, 10029.890159447663, 9982.658841271634, 9943.375727608094, 9914.259749796103, 9893.924180562473, 9854.860600288928, 9802.891513260804, 9774.848565783679, 9735.162327402864, 9698.91109582603]
2025-02-24T16:33:40.8771117Z E   [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-02-24T16:33:40.8771293Z E   At positional index 0, first diff: 10091.396322818857 != 10090.925208074616
2025-02-24T16:33:40.8771298Z 
2025-02-24T16:33:40.8771388Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8771546Z ____________________ test_plasma_estimates[dilution_factor] ____________________
2025-02-24T16:33:40.8771556Z 
2025-02-24T16:33:40.8771769Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7ff4d73980e0>
2025-02-24T16:33:40.8771855Z attr = 'dilution_factor'
2025-02-24T16:33:40.8772121Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff503236030>
2025-02-24T16:33:40.8772128Z 
2025-02-24T16:33:40.8772224Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.8772293Z         "attr",
2025-02-24T16:33:40.8772366Z         [
2025-02-24T16:33:40.8772451Z             "nu_bar_estimator",
2025-02-24T16:33:40.8772527Z             "j_estimator",
2025-02-24T16:33:40.8772607Z             "t_radiative",
2025-02-24T16:33:40.8772686Z             "dilution_factor",
2025-02-24T16:33:40.8772768Z             "output_nus",
2025-02-24T16:33:40.8772847Z             "output_energies",
2025-02-24T16:33:40.8772920Z         ],
2025-02-24T16:33:40.8772990Z     )
2025-02-24T16:33:40.8773167Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:33:40.8773397Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:33:40.8773475Z             actual = getattr(
2025-02-24T16:33:40.8773667Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:33:40.8773739Z                 attr,
2025-02-24T16:33:40.8773811Z             )
2025-02-24T16:33:40.8773935Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:33:40.8774082Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:33:40.8774199Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:33:40.8774277Z             actual = getattr(
2025-02-24T16:33:40.8774450Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:33:40.8774521Z                 attr,
2025-02-24T16:33:40.8774594Z             )
2025-02-24T16:33:40.8774667Z         else:
2025-02-24T16:33:40.8774799Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:33:40.8774876Z     
2025-02-24T16:33:40.8774960Z         if hasattr(actual, "value"):
2025-02-24T16:33:40.8775051Z             actual = actual.value
2025-02-24T16:33:40.8775135Z         actual = pd.Series(actual)
2025-02-24T16:33:40.8775262Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:33:40.8775445Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:33:40.8775550Z 
2025-02-24T16:33:40.8775669Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:33:40.8775785Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8775931Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8776003Z     ???
2025-02-24T16:33:40.8776107Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8776116Z 
2025-02-24T16:33:40.8776181Z >   ???
2025-02-24T16:33:40.8776279Z E   AssertionError: Series are different
2025-02-24T16:33:40.8776349Z E   
2025-02-24T16:33:40.8776445Z E   Series values are different (95.0 %)
2025-02-24T16:33:40.8776569Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:33:40.8777767Z E   [left]:  [0.45006901732183335, 0.3591778672440068, 0.2993157944909688, 0.2578615845098733, 0.22544220327867867, 0.2010999763061898, 0.18257381854718469, 0.16658101749462778, 0.15049754388199085, 0.13975435818105253, 0.1286220608480736, 0.12092168181342128, 0.11342334056954673, 0.10650389106044367, 0.10016109465785494, 0.09484390983006774, 0.09052533757303853, 0.0858591268281399, 0.08203028321765116, 0.07824287530618096]
2025-02-24T16:33:40.8778856Z E   [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-02-24T16:33:40.8779035Z E   At positional index 0, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-24T16:33:40.8779050Z 
2025-02-24T16:33:40.8779138Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8779301Z ______________________ test_plasma_estimates[output_nus] _______________________
2025-02-24T16:33:40.8779309Z 
2025-02-24T16:33:40.8779523Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7ff4d73980e0>
2025-02-24T16:33:40.8779608Z attr = 'output_nus'
2025-02-24T16:33:40.8779874Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff503236e10>
2025-02-24T16:33:40.8779885Z 
2025-02-24T16:33:40.8779975Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.8780052Z         "attr",
2025-02-24T16:33:40.8780121Z         [
2025-02-24T16:33:40.8780209Z             "nu_bar_estimator",
2025-02-24T16:33:40.8780288Z             "j_estimator",
2025-02-24T16:33:40.8780490Z             "t_radiative",
2025-02-24T16:33:40.8780578Z             "dilution_factor",
2025-02-24T16:33:40.8780655Z             "output_nus",
2025-02-24T16:33:40.8780743Z             "output_energies",
2025-02-24T16:33:40.8780812Z         ],
2025-02-24T16:33:40.8780886Z     )
2025-02-24T16:33:40.8781062Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:33:40.8781183Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:33:40.8781262Z             actual = getattr(
2025-02-24T16:33:40.8781456Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:33:40.8781542Z                 attr,
2025-02-24T16:33:40.8781609Z             )
2025-02-24T16:33:40.8781728Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:33:40.8781874Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:33:40.8781989Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:33:40.8782076Z             actual = getattr(
2025-02-24T16:33:40.8782242Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:33:40.8782317Z                 attr,
2025-02-24T16:33:40.8782385Z             )
2025-02-24T16:33:40.8782459Z         else:
2025-02-24T16:33:40.8782593Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:33:40.8782778Z     
2025-02-24T16:33:40.8782870Z         if hasattr(actual, "value"):
2025-02-24T16:33:40.8782952Z             actual = actual.value
2025-02-24T16:33:40.8783042Z         actual = pd.Series(actual)
2025-02-24T16:33:40.8783163Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:33:40.8783343Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:33:40.8783349Z 
2025-02-24T16:33:40.8783463Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:33:40.8783576Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8783731Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8783799Z     ???
2025-02-24T16:33:40.8783912Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8783916Z 
2025-02-24T16:33:40.8783984Z >   ???
2025-02-24T16:33:40.8784091Z E   AssertionError: Series are different
2025-02-24T16:33:40.8784159Z E   
2025-02-24T16:33:40.8784263Z E   Series values are different (5.1125 %)
2025-02-24T16:33:40.8784636Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8790314Z E   [left]:  [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.8, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.4, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313315.0, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-02-24T16:33:40.8795586Z E   [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-02-24T16:33:40.8795905Z E   At positional index 56, first diff: 657003154645147.8 != 657025184715239.1
2025-02-24T16:33:40.8795910Z 
2025-02-24T16:33:40.8796012Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8796190Z ____________________ test_plasma_estimates[output_energies] ____________________
2025-02-24T16:33:40.8796195Z 
2025-02-24T16:33:40.8796418Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7ff4d73980e0>
2025-02-24T16:33:40.8796508Z attr = 'output_energies'
2025-02-24T16:33:40.8796779Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff503237d70>
2025-02-24T16:33:40.8796787Z 
2025-02-24T16:33:40.8796884Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.8796961Z         "attr",
2025-02-24T16:33:40.8797030Z         [
2025-02-24T16:33:40.8797118Z             "nu_bar_estimator",
2025-02-24T16:33:40.8797197Z             "j_estimator",
2025-02-24T16:33:40.8797386Z             "t_radiative",
2025-02-24T16:33:40.8797472Z             "dilution_factor",
2025-02-24T16:33:40.8797555Z             "output_nus",
2025-02-24T16:33:40.8797641Z             "output_energies",
2025-02-24T16:33:40.8797708Z         ],
2025-02-24T16:33:40.8797917Z     )
2025-02-24T16:33:40.8798102Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:33:40.8798224Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:33:40.8798374Z             actual = getattr(
2025-02-24T16:33:40.8798696Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:33:40.8798827Z                 attr,
2025-02-24T16:33:40.8798899Z             )
2025-02-24T16:33:40.8799025Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:33:40.8799178Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:33:40.8799298Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:33:40.8799376Z             actual = getattr(
2025-02-24T16:33:40.8799557Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:33:40.8799636Z                 attr,
2025-02-24T16:33:40.8799705Z             )
2025-02-24T16:33:40.8799816Z         else:
2025-02-24T16:33:40.8799958Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:33:40.8800036Z     
2025-02-24T16:33:40.8800123Z         if hasattr(actual, "value"):
2025-02-24T16:33:40.8800216Z             actual = actual.value
2025-02-24T16:33:40.8800310Z         actual = pd.Series(actual)
2025-02-24T16:33:40.8800564Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:33:40.8800753Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:33:40.8800758Z 
2025-02-24T16:33:40.8800879Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:33:40.8800999Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8801154Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:33:40.8801223Z     ???
2025-02-24T16:33:40.8801339Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8801343Z 
2025-02-24T16:33:40.8801415Z >   ???
2025-02-24T16:33:40.8801521Z E   AssertionError: Series are different
2025-02-24T16:33:40.8801590Z E   
2025-02-24T16:33:40.8801692Z E   Series values are different (1.3025 %)
2025-02-24T16:33:40.8802065Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.8808405Z E   [left]:  [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503756e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.558071221185956e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.2709056323648205e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544446e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.5337925181007677e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T16:33:40.8815092Z E   [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T16:33:40.8815455Z E   At positional index 414, first diff: 2.5657552576608082e-05 != 2.5347525852067693e-05
2025-02-24T16:33:40.8815462Z 
2025-02-24T16:33:40.8815555Z testing.pyx:173: AssertionError
2025-02-24T16:33:40.8815749Z ________________ TestSpectrumSolver.test_spectrum_real_packets _________________
2025-02-24T16:33:40.8815755Z 
2025-02-24T16:33:40.8816021Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7ff512138e00>
2025-02-24T16:33:40.8816218Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4e467aa80>
2025-02-24T16:33:40.8816300Z 
2025-02-24T16:33:40.8816432Z     def test_spectrum_real_packets(self, simulation):
2025-02-24T16:33:40.8816579Z         transport_state = simulation.transport.transport_state
2025-02-24T16:33:40.8816777Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T16:33:40.8816849Z     
2025-02-24T16:33:40.8817040Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T16:33:40.8817169Z         result = solver.spectrum_real_packets.luminosity
2025-02-24T16:33:40.8817459Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T16:33:40.8817568Z         expected = self.get_expected_data(key)
2025-02-24T16:33:40.8817636Z     
2025-02-24T16:33:40.8817749Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T16:33:40.8817823Z     
2025-02-24T16:33:40.8817910Z >       assert_quantity_allclose(
2025-02-24T16:33:40.8817987Z             result,
2025-02-24T16:33:40.8818065Z             luminosity,
2025-02-24T16:33:40.8818143Z         )
2025-02-24T16:33:40.8818147Z 
2025-02-24T16:33:40.8818273Z tardis/spectrum/tests/test_spectrum_solver.py:71: 
2025-02-24T16:33:40.8818391Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8818741Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:33:40.8818957Z     np.testing.assert_allclose(
2025-02-24T16:33:40.8819071Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8819076Z 
2025-02-24T16:33:40.8819551Z args = (<function assert_allclose.<locals>.compare at 0x7ff510da6fc0>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-02-24T16:33:40.8819663Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.8819919Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8819928Z 
2025-02-24T16:33:40.8820002Z     @wraps(func)
2025-02-24T16:33:40.8820092Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8820177Z         with self._recreate_cm():
2025-02-24T16:33:40.8820272Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8820367Z E           AssertionError: 
2025-02-24T16:33:40.8820478Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8820554Z E           
2025-02-24T16:33:40.8820657Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T16:33:40.8820763Z E           Max absolute difference: 4.30543741e+37
2025-02-24T16:33:40.8820855Z E           Max relative difference: 1.
2025-02-24T16:33:40.8821014Z E            x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.8821111Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8821256Z E            y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.8821348Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8821353Z 
2025-02-24T16:33:40.8821557Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8821760Z ___________ TestSpectrumSolver.test_spectrum_real_packets_reabsorbed ___________
2025-02-24T16:33:40.8821764Z 
2025-02-24T16:33:40.8822032Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7ff512138dd0>
2025-02-24T16:33:40.8822227Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4e467aa80>
2025-02-24T16:33:40.8822232Z 
2025-02-24T16:33:40.8822390Z     def test_spectrum_real_packets_reabsorbed(self, simulation):
2025-02-24T16:33:40.8822538Z         transport_state = simulation.transport.transport_state
2025-02-24T16:33:40.8822730Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T16:33:40.8822804Z     
2025-02-24T16:33:40.8822988Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T16:33:40.8823264Z         result = solver.spectrum_real_packets_reabsorbed.luminosity
2025-02-24T16:33:40.8823470Z         key = "simulation/spectrum_solver/spectrum_real_packets_reabsorbed/luminosity"
2025-02-24T16:33:40.8823578Z         expected = self.get_expected_data(key)
2025-02-24T16:33:40.8823651Z     
2025-02-24T16:33:40.8823765Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T16:33:40.8823839Z     
2025-02-24T16:33:40.8823926Z >       assert_quantity_allclose(
2025-02-24T16:33:40.8824009Z             result,
2025-02-24T16:33:40.8824085Z             luminosity,
2025-02-24T16:33:40.8824161Z         )
2025-02-24T16:33:40.8824165Z 
2025-02-24T16:33:40.8824290Z tardis/spectrum/tests/test_spectrum_solver.py:87: 
2025-02-24T16:33:40.8824411Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8824753Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:33:40.8824846Z     np.testing.assert_allclose(
2025-02-24T16:33:40.8824961Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8824965Z 
2025-02-24T16:33:40.8825436Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e4e2aca0>, array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38,...), array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38, ...,
2025-02-24T16:33:40.8825627Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.8825878Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8825883Z 
2025-02-24T16:33:40.8825956Z     @wraps(func)
2025-02-24T16:33:40.8826046Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8826130Z         with self._recreate_cm():
2025-02-24T16:33:40.8826225Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8826316Z E           AssertionError: 
2025-02-24T16:33:40.8826425Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8826503Z E           
2025-02-24T16:33:40.8826604Z E           Mismatched elements: 252 / 10000 (2.52%)
2025-02-24T16:33:40.8826709Z E           Max absolute difference: 4.15247374e+37
2025-02-24T16:33:40.8826798Z E           Max relative difference: 1.
2025-02-24T16:33:40.8826955Z E            x: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.8827050Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8827191Z E            y: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.8827381Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8827386Z 
2025-02-24T16:33:40.8827588Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8827758Z ________________________ TestSpectrumSolver.test_solve _________________________
2025-02-24T16:33:40.8827762Z 
2025-02-24T16:33:40.8828022Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7ff5121386b0>
2025-02-24T16:33:40.8828221Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4e467aa80>
2025-02-24T16:33:40.8828225Z 
2025-02-24T16:33:40.8828322Z     def test_solve(self, simulation):
2025-02-24T16:33:40.8828471Z         transport_state = simulation.transport.transport_state
2025-02-24T16:33:40.8828667Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T16:33:40.8828738Z     
2025-02-24T16:33:40.8828921Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T16:33:40.8829082Z         result_real, result_virtual, result_integrated = solver.solve(
2025-02-24T16:33:40.8829165Z             transport_state
2025-02-24T16:33:40.8829241Z         )
2025-02-24T16:33:40.8829419Z         key_real = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T16:33:40.8829545Z         expected_real = self.get_expected_data(key_real)
2025-02-24T16:33:40.8829756Z     
2025-02-24T16:33:40.8829891Z         luminosity_real = u.Quantity(expected_real, "erg /s")
2025-02-24T16:33:40.8829964Z     
2025-02-24T16:33:40.8830047Z >       assert_quantity_allclose(
2025-02-24T16:33:40.8830140Z             result_real.luminosity,
2025-02-24T16:33:40.8830221Z             luminosity_real,
2025-02-24T16:33:40.8830299Z         )
2025-02-24T16:33:40.8830306Z 
2025-02-24T16:33:40.8830437Z tardis/spectrum/tests/test_spectrum_solver.py:105: 
2025-02-24T16:33:40.8830546Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8830883Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:33:40.8830974Z     np.testing.assert_allclose(
2025-02-24T16:33:40.8831089Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8831093Z 
2025-02-24T16:33:40.8831564Z args = (<function assert_allclose.<locals>.compare at 0x7ff50242c400>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-02-24T16:33:40.8831674Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.8831920Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8832033Z 
2025-02-24T16:33:40.8832114Z     @wraps(func)
2025-02-24T16:33:40.8832198Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8832288Z         with self._recreate_cm():
2025-02-24T16:33:40.8832376Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8832468Z E           AssertionError: 
2025-02-24T16:33:40.8832576Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8832653Z E           
2025-02-24T16:33:40.8832755Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T16:33:40.8832859Z E           Max absolute difference: 4.30543741e+37
2025-02-24T16:33:40.8832956Z E           Max relative difference: 1.
2025-02-24T16:33:40.8833108Z E            x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.8833201Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8833344Z E            y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.8833435Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8833443Z 
2025-02-24T16:33:40.8833645Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8833827Z __________________ TestTransportSimple.test_j_blue_estimators __________________
2025-02-24T16:33:40.8833832Z 
2025-02-24T16:33:40.8834048Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7ff512139ee0>
2025-02-24T16:33:40.8834244Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4df75c440>
2025-02-24T16:33:40.8834249Z 
2025-02-24T16:33:40.8834366Z     def test_j_blue_estimators(self, simulation):
2025-02-24T16:33:40.8834525Z         key = "simulation/transport/transport_state/j_blue_estimator"
2025-02-24T16:33:40.8834630Z         expected = self.get_expected_data(key)
2025-02-24T16:33:40.8834704Z     
2025-02-24T16:33:40.8834789Z >       npt.assert_allclose(
2025-02-24T16:33:40.8835021Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator,
2025-02-24T16:33:40.8835110Z             expected.values,
2025-02-24T16:33:40.8835186Z         )
2025-02-24T16:33:40.8835191Z 
2025-02-24T16:33:40.8835291Z tardis/tests/test_tardis_full.py:70: 
2025-02-24T16:33:40.8835401Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8835405Z 
2025-02-24T16:33:40.8835677Z args = (<function assert_allclose.<locals>.compare at 0x7ff4d70dd4e0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8835751Z        [0., 0., .....,
2025-02-24T16:33:40.8835839Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8835920Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8836085Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:33:40.8836327Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8836332Z 
2025-02-24T16:33:40.8836406Z     @wraps(func)
2025-02-24T16:33:40.8836500Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8836594Z         with self._recreate_cm():
2025-02-24T16:33:40.8836684Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8836772Z E           AssertionError: 
2025-02-24T16:33:40.8836879Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8836957Z E           
2025-02-24T16:33:40.8837064Z E           Mismatched elements: 491895 / 584480 (84.2%)
2025-02-24T16:33:40.8837169Z E           Max absolute difference: 5.32418652e-19
2025-02-24T16:33:40.8837401Z E           Max relative difference: 12.23359055
2025-02-24T16:33:40.8837494Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8837586Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8837681Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.8837773Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8837853Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8837945Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.8838065Z 
2025-02-24T16:33:40.8838283Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8838437Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.8838691Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8838763Z 	
2025-02-24T16:33:40.8839612Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-02-24T16:33:40.8839812Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8840244Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-02-24T16:33:40.8840417Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8840898Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-02-24T16:33:40.8841153Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:33:40.8841599Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:33:40.8841778Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8841996Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T16:33:40.8842161Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8842239Z 	
2025-02-24T16:33:40.8842392Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-02-24T16:33:40.8842563Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8842635Z 	
2025-02-24T16:33:40.8842729Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-02-24T16:33:40.8842827Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-02-24T16:33:40.8842919Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.8843032Z  ([1mbase.py[0m:657)
2025-02-24T16:33:40.8843191Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8843265Z 	
2025-02-24T16:33:40.8843421Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T16:33:40.8843579Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8843650Z 	
2025-02-24T16:33:40.8843755Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-02-24T16:33:40.8843846Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-02-24T16:33:40.8843928Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-02-24T16:33:40.8844017Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-02-24T16:33:40.8844239Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-02-24T16:33:40.8844345Z  ([1mbase.py[0m:650)
2025-02-24T16:33:40.8844508Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8844575Z 	
2025-02-24T16:33:40.8844663Z 	Current t_inner = 9974.969 K
2025-02-24T16:33:40.8844781Z 	Expected t_inner for next iteration = 10736.790 K
2025-02-24T16:33:40.8844892Z  ([1mbase.py[0m:652)
2025-02-24T16:33:40.8845055Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8845122Z 	
2025-02-24T16:33:40.8845277Z 	Starting iteration 2 of 5 ([1mbase.py[0m:444)
2025-02-24T16:33:40.8845433Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8845506Z 	
2025-02-24T16:33:40.8845597Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-02-24T16:33:40.8845691Z 	Luminosity absorbed  = 3.623e+42 erg / s
2025-02-24T16:33:40.8845786Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.8845887Z  ([1mbase.py[0m:657)
2025-02-24T16:33:40.8846049Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8846120Z 	
2025-02-24T16:33:40.8846269Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T16:33:40.8846426Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8853114Z 	
2025-02-24T16:33:40.8853277Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:33:40.8853564Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-02-24T16:33:40.8853659Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-02-24T16:33:40.8853744Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-02-24T16:33:40.8853832Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-02-24T16:33:40.8853987Z  ([1mbase.py[0m:650)
2025-02-24T16:33:40.8854173Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8854245Z 	
2025-02-24T16:33:40.8854331Z 	Current t_inner = 10736.790 K
2025-02-24T16:33:40.8854455Z 	Expected t_inner for next iteration = 10718.574 K
2025-02-24T16:33:40.8854563Z  ([1mbase.py[0m:652)
2025-02-24T16:33:40.8854744Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8854811Z 	
2025-02-24T16:33:40.8854973Z 	Starting iteration 3 of 5 ([1mbase.py[0m:444)
2025-02-24T16:33:40.8855141Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8855208Z 	
2025-02-24T16:33:40.8855304Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-02-24T16:33:40.8855397Z 	Luminosity absorbed  = 3.512e+42 erg / s
2025-02-24T16:33:40.8855489Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.8855593Z  ([1mbase.py[0m:657)
2025-02-24T16:33:40.8855756Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8855981Z 	Iteration converged 1/4 consecutive times. ([1mbase.py[0m:260)
2025-02-24T16:33:40.8856143Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8856217Z 	
2025-02-24T16:33:40.8856365Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T16:33:40.8856525Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8856596Z 	
2025-02-24T16:33:40.8856708Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:33:40.8856802Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-02-24T16:33:40.8856883Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-02-24T16:33:40.8856972Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-02-24T16:33:40.8857056Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0922
2025-02-24T16:33:40.8857166Z  ([1mbase.py[0m:650)
2025-02-24T16:33:40.8857531Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8857609Z 	
2025-02-24T16:33:40.8857702Z 	Current t_inner = 10718.574 K
2025-02-24T16:33:40.8857819Z 	Expected t_inner for next iteration = 10696.150 K
2025-02-24T16:33:40.8857931Z  ([1mbase.py[0m:652)
2025-02-24T16:33:40.8858084Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8858156Z 	
2025-02-24T16:33:40.8858303Z 	Starting iteration 4 of 5 ([1mbase.py[0m:444)
2025-02-24T16:33:40.8858462Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8858692Z 	
2025-02-24T16:33:40.8858783Z 	Luminosity emitted   = 1.083e+43 erg / s
2025-02-24T16:33:40.8858883Z 	Luminosity absorbed  = 3.426e+42 erg / s
2025-02-24T16:33:40.8858973Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.8859086Z  ([1mbase.py[0m:657)
2025-02-24T16:33:40.8859246Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8859464Z 	Iteration converged 2/4 consecutive times. ([1mbase.py[0m:260)
2025-02-24T16:33:40.8859626Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8859692Z 	
2025-02-24T16:33:40.8859838Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T16:33:40.8859992Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8860063Z 	
2025-02-24T16:33:40.8860164Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:33:40.8860254Z 	0         1.07e+04 K  1.09e+04 K  0.491   0.489
2025-02-24T16:33:40.8860340Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-02-24T16:33:40.8860426Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-02-24T16:33:40.8860512Z 	15        1.04e+04 K  1.05e+04 K 0.0922  0.0902
2025-02-24T16:33:40.8860616Z  ([1mbase.py[0m:650)
2025-02-24T16:33:40.8860779Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8860847Z 	
2025-02-24T16:33:40.8861110Z 	Current t_inner = 10696.150 K
2025-02-24T16:33:40.8861229Z 	Expected t_inner for next iteration = 10681.168 K
2025-02-24T16:33:40.8861335Z  ([1mbase.py[0m:652)
2025-02-24T16:33:40.8861504Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8861570Z 	
2025-02-24T16:33:40.8861673Z 	Simulation finished in 4 iterations 
2025-02-24T16:33:40.8861755Z 	Simulation took 12.73 s
2025-02-24T16:33:40.8861861Z  ([1mbase.py[0m:542)
2025-02-24T16:33:40.8862016Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8862088Z 	
2025-02-24T16:33:40.8862239Z 	Starting iteration 5 of 5 ([1mbase.py[0m:444)
2025-02-24T16:33:40.8862397Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.8862469Z 	
2025-02-24T16:33:40.8862557Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-02-24T16:33:40.8862654Z 	Luminosity absorbed  = 3.438e+42 erg / s
2025-02-24T16:33:40.8862744Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.8862850Z  ([1mbase.py[0m:657)
2025-02-24T16:33:40.8863031Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T16:33:40.8863038Z 
2025-02-24T16:33:40.8863043Z 
2025-02-24T16:33:40.8863293Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                [A
2025-02-24T16:33:40.8863300Z 
2025-02-24T16:33:40.8863527Z Packets:                                                                                   0/200000 [00:00<?, ?it/s][A
2025-02-24T16:33:40.8863533Z 
2025-02-24T16:33:40.8863794Z Packets:   ████▏                                                                           10582/200000 [00:00<00:01, 105812.28it/s][A
2025-02-24T16:33:40.8863808Z 
2025-02-24T16:33:40.8864046Z Packets:   ████████▌                                                                       21451/200000 [00:00<00:01, 107499.34it/s][A
2025-02-24T16:33:40.8864052Z 
2025-02-24T16:33:40.8864296Z Packets:   ████████████▉                                                                   32390/200000 [00:00<00:01, 108359.95it/s][A
2025-02-24T16:33:40.8864308Z 
2025-02-24T16:33:40.8864571Z Packets:   █████████████████▎                                                              43253/200000 [00:00<00:01, 108464.66it/s][A
2025-02-24T16:33:40.8864579Z 
2025-02-24T16:33:40.8865081Z Packets:   █████████████████████▋                                                          54195/200000 [00:00<00:01, 108808.72it/s][A
2025-02-24T16:33:40.8865093Z 
2025-02-24T16:33:40.8865474Z Packets:   ██████████████████████████                                                      65076/200000 [00:00<00:01, 108222.39it/s][A
2025-02-24T16:33:40.8865588Z 
2025-02-24T16:33:40.8865863Z Packets:   ██████████████████████████████▍                                                 76076/200000 [00:00<00:01, 108800.77it/s][A
2025-02-24T16:33:40.8865868Z 
2025-02-24T16:33:40.8866132Z Packets:   ██████████████████████████████████▊                                             86957/200000 [00:00<00:01, 108586.61it/s][A
2025-02-24T16:33:40.8866149Z 
2025-02-24T16:33:40.8866423Z Packets:   ███████████████████████████████████████▏                                        97930/200000 [00:00<00:00, 108942.33it/s][A
2025-02-24T16:33:40.8866428Z 
2025-02-24T16:33:40.8866714Z Packets:   ███████████████████████████████████████████▌                                    108825/200000 [00:01<00:00, 108836.89it/s][A
2025-02-24T16:33:40.8866719Z 
2025-02-24T16:33:40.8867000Z Packets:   ███████████████████████████████████████████████▉                                119709/200000 [00:01<00:00, 105042.56it/s][A
2025-02-24T16:33:40.8867006Z 
2025-02-24T16:33:40.8867489Z Packets:   ████████████████████████████████████████████████████▏                           130594/200000 [00:01<00:00, 106168.47it/s][A
2025-02-24T16:33:40.8867495Z 
2025-02-24T16:33:40.8867805Z Packets:   ████████████████████████████████████████████████████████▌                       141551/200000 [00:01<00:00, 107177.28it/s][A
2025-02-24T16:33:40.8867947Z 
2025-02-24T16:33:40.8868254Z Packets:   ████████████████████████████████████████████████████████████▉                   152433/200000 [00:01<00:00, 107665.89it/s][A
2025-02-24T16:33:40.8868259Z 
2025-02-24T16:33:40.8868565Z Packets:   █████████████████████████████████████████████████████████████████▎              163237/200000 [00:01<00:00, 107776.75it/s][A
2025-02-24T16:33:40.8868569Z 
2025-02-24T16:33:40.8868880Z Packets:   █████████████████████████████████████████████████████████████████████▋          174071/200000 [00:01<00:00, 107944.79it/s][A
2025-02-24T16:33:40.8868885Z 
2025-02-24T16:33:40.8869197Z Packets:   █████████████████████████████████████████████████████████████████████████▉      184872/200000 [00:01<00:00, 107816.82it/s][A
2025-02-24T16:33:40.8869217Z 
2025-02-24T16:33:40.8869535Z Packets:   ██████████████████████████████████████████████████████████████████████████████▎ 195749/200000 [00:01<00:00, 108101.64it/s][A
2025-02-24T16:33:40.8869685Z Iterations:                                                                                13/? [05:51<00:00, 12.12s/it]
2025-02-24T16:33:40.8869711Z 
2025-02-24T16:33:40.8870037Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉199999/200000 [00:01<00:00, 108101.64it/s][A
2025-02-24T16:33:40.8870042Z 
2025-02-24T16:33:40.8870278Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-24T16:33:40.8870283Z 
2025-02-24T16:33:40.8870514Z Packets:   ████▎                                                                           10814/200000 [00:00<00:01, 107158.02it/s][A
2025-02-24T16:33:40.8870645Z 
2025-02-24T16:33:40.8870884Z Packets:   ████████▋                                                                       21621/200000 [00:00<00:01, 107689.21it/s][A
2025-02-24T16:33:40.8870889Z 
2025-02-24T16:33:40.8871129Z Packets:   ████████████▉                                                                   32391/200000 [00:00<00:01, 107629.39it/s][A
2025-02-24T16:33:40.8871218Z 
2025-02-24T16:33:40.8871475Z Packets:   █████████████████▎                                                              43171/200000 [00:00<00:01, 107693.85it/s][A
2025-02-24T16:33:40.8871483Z 
2025-02-24T16:33:40.8871732Z Packets:   █████████████████████▌                                                          53974/200000 [00:00<00:01, 107814.23it/s][A
2025-02-24T16:33:40.8871737Z 
2025-02-24T16:33:40.8871996Z Packets:   █████████████████████████▉                                                      64816/200000 [00:00<00:01, 108019.56it/s][A
2025-02-24T16:33:40.8872001Z 
2025-02-24T16:33:40.8872268Z Packets:   ██████████████████████████████▎                                                 75672/200000 [00:00<00:01, 108193.75it/s][A
2025-02-24T16:33:40.8872274Z 
2025-02-24T16:33:40.8872544Z Packets:   ██████████████████████████████████▌                                             86492/200000 [00:00<00:01, 108112.84it/s][A
2025-02-24T16:33:40.8872559Z 
2025-02-24T16:33:40.8872835Z Packets:   ██████████████████████████████████████▉                                         97316/200000 [00:00<00:00, 108151.95it/s][A
2025-02-24T16:33:40.8872839Z 
2025-02-24T16:33:40.8873117Z Packets:   ███████████████████████████████████████████▎                                    108132/200000 [00:01<00:00, 106404.42it/s][A
2025-02-24T16:33:40.8873122Z 
2025-02-24T16:33:40.8873409Z Packets:   ███████████████████████████████████████████████▌                                118926/200000 [00:01<00:00, 106868.63it/s][A
2025-02-24T16:33:40.8873414Z 
2025-02-24T16:33:40.8873709Z Packets:   ███████████████████████████████████████████████████▉                            129755/200000 [00:01<00:00, 107297.16it/s][A
2025-02-24T16:33:40.8873725Z 
2025-02-24T16:33:40.8874016Z Packets:   ████████████████████████████████████████████████████████▎                       140704/200000 [00:01<00:00, 107956.54it/s][A
2025-02-24T16:33:40.8874021Z 
2025-02-24T16:33:40.8874334Z Packets:   ████████████████████████████████████████████████████████████▋                   151565/200000 [00:01<00:00, 108150.13it/s][A
2025-02-24T16:33:40.8874339Z 
2025-02-24T16:33:40.8874645Z Packets:   ████████████████████████████████████████████████████████████████▉               162391/200000 [00:01<00:00, 108182.34it/s][A
2025-02-24T16:33:40.8874649Z 
2025-02-24T16:33:40.8874963Z Packets:   █████████████████████████████████████████████████████████████████████▎          173249/200000 [00:01<00:00, 108298.96it/s][A
2025-02-24T16:33:40.8874968Z 
2025-02-24T16:33:40.8875287Z Packets:   █████████████████████████████████████████████████████████████████████████▋      184114/200000 [00:01<00:00, 108403.00it/s][A
2025-02-24T16:33:40.8875397Z 
2025-02-24T16:33:40.8875720Z Packets:   ██████████████████████████████████████████████████████████████████████████████  195104/200000 [00:01<00:00, 108850.71it/s][A
2025-02-24T16:33:40.8875871Z Iterations:                                                                                14/? [05:54<00:00,  9.41s/it]
2025-02-24T16:33:40.8875960Z 
2025-02-24T16:33:40.8876287Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 108850.71it/s][A
2025-02-24T16:33:40.8876293Z 
2025-02-24T16:33:40.8876528Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-24T16:33:40.8876533Z 
2025-02-24T16:33:40.8876767Z Packets:   ████▎                                                                           10886/200000 [00:00<00:01, 108496.92it/s][A
2025-02-24T16:33:40.8876785Z 
2025-02-24T16:33:40.8877026Z Packets:   ████████▋                                                                       21760/200000 [00:00<00:01, 108635.51it/s][A
2025-02-24T16:33:40.8877030Z 
2025-02-24T16:33:40.8877457Z Packets:   █████████████                                                                   32624/200000 [00:00<00:01, 108184.51it/s][A
2025-02-24T16:33:40.8877474Z 
2025-02-24T16:33:40.8877733Z Packets:   █████████████████▍                                                              43443/200000 [00:00<00:01, 107734.89it/s][A
2025-02-24T16:33:40.8877738Z 
2025-02-24T16:33:40.8877992Z Packets:   █████████████████████▋                                                          54284/200000 [00:00<00:01, 107975.13it/s][A
2025-02-24T16:33:40.8877997Z 
2025-02-24T16:33:40.8878255Z Packets:   ██████████████████████████                                                      65110/200000 [00:00<00:01, 108070.07it/s][A
2025-02-24T16:33:40.8878260Z 
2025-02-24T16:33:40.8878517Z Packets:   ██████████████████████████████▍                                                 75989/200000 [00:00<00:01, 108302.79it/s][A
2025-02-24T16:33:40.8878532Z 
2025-02-24T16:33:40.8878800Z Packets:   ██████████████████████████████████▊                                             86876/200000 [00:00<00:01, 108483.06it/s][A
2025-02-24T16:33:40.8878816Z 
2025-02-24T16:33:40.8879088Z Packets:   ███████████████████████████████████████                                         97739/200000 [00:00<00:00, 108526.72it/s][A
2025-02-24T16:33:40.8879093Z 
2025-02-24T16:33:40.8879372Z Packets:   ███████████████████████████████████████████▍                                    108666/200000 [00:01<00:00, 108755.02it/s][A
2025-02-24T16:33:40.8879377Z 
2025-02-24T16:33:40.8879663Z Packets:   ███████████████████████████████████████████████▊                                119542/200000 [00:01<00:00, 108230.47it/s][A
2025-02-24T16:33:40.8879668Z 
2025-02-24T16:33:40.8879957Z Packets:   ████████████████████████████████████████████████████▏                           130366/200000 [00:01<00:00, 107681.86it/s][A
2025-02-24T16:33:40.8880121Z 
2025-02-24T16:33:40.8880417Z Packets:   ████████████████████████████████████████████████████████▍                       141171/200000 [00:01<00:00, 107791.95it/s][A
2025-02-24T16:33:40.8880423Z 
2025-02-24T16:33:40.8880728Z Packets:   ████████████████████████████████████████████████████████████▊                   151951/200000 [00:01<00:00, 107719.95it/s][A
2025-02-24T16:33:40.8880844Z 
2025-02-24T16:33:40.8881148Z Packets:   █████████████████████████████████████████████████████████████████               162724/200000 [00:01<00:00, 107605.63it/s][A
2025-02-24T16:33:40.8881158Z 
2025-02-24T16:33:40.8881466Z Packets:   █████████████████████████████████████████████████████████████████████▍          173485/200000 [00:01<00:00, 107440.73it/s][A
2025-02-24T16:33:40.8881471Z 
2025-02-24T16:33:40.8881784Z Packets:   █████████████████████████████████████████████████████████████████████████▋      184230/200000 [00:01<00:00, 107275.29it/s][A
2025-02-24T16:33:40.8881804Z 
2025-02-24T16:33:40.8882114Z Packets:   █████████████████████████████████████████████████████████████████████████████▉  194970/200000 [00:01<00:00, 107312.05it/s][A
2025-02-24T16:33:40.8882267Z Iterations:                                                                                15/? [05:57<00:00,  7.53s/it]
2025-02-24T16:33:40.8882287Z 
2025-02-24T16:33:40.8882613Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 107312.05it/s][A
2025-02-24T16:33:40.8882618Z 
2025-02-24T16:33:40.8882851Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-24T16:33:40.8882861Z 
2025-02-24T16:33:40.8883097Z Packets:   ████▎                                                                           10732/200000 [00:00<00:01, 104412.49it/s][A
2025-02-24T16:33:40.8883102Z 
2025-02-24T16:33:40.8883435Z Packets:   ████████▌                                                                       21292/200000 [00:00<00:01, 105100.98it/s][A
2025-02-24T16:33:40.8883440Z 
2025-02-24T16:33:40.8883679Z Packets:   ████████████▊                                                                   32068/200000 [00:00<00:01, 106304.78it/s][A
2025-02-24T16:33:40.8883693Z 
2025-02-24T16:33:40.8883941Z Packets:   █████████████████                                                               42803/200000 [00:00<00:01, 106712.30it/s][A
2025-02-24T16:33:40.8883946Z 
2025-02-24T16:33:40.8884200Z Packets:   █████████████████████▍                                                          53515/200000 [00:00<00:01, 106857.07it/s][A
2025-02-24T16:33:40.8884205Z 
2025-02-24T16:33:40.8884458Z Packets:   █████████████████████████▋                                                      64249/200000 [00:00<00:01, 107020.95it/s][A
2025-02-24T16:33:40.8884463Z 
2025-02-24T16:33:40.8884725Z Packets:   █████████████████████████████▉                                                  74952/200000 [00:00<00:01, 107014.11it/s][A
2025-02-24T16:33:40.8884738Z 
2025-02-24T16:33:40.8885007Z Packets:   ██████████████████████████████████▎                                             85654/200000 [00:00<00:01, 105451.72it/s][A
2025-02-24T16:33:40.8885012Z 
2025-02-24T16:33:40.8885281Z Packets:   ██████████████████████████████████████▌                                         96328/200000 [00:00<00:00, 105849.96it/s][A
2025-02-24T16:33:40.8885367Z 
2025-02-24T16:33:40.8885652Z Packets:   ██████████████████████████████████████████▊                                     107019/200000 [00:01<00:00, 106173.82it/s][A
2025-02-24T16:33:40.8885658Z 
2025-02-24T16:33:40.8885944Z Packets:   ███████████████████████████████████████████████                                 117653/200000 [00:01<00:00, 106221.98it/s][A
2025-02-24T16:33:40.8885949Z 
2025-02-24T16:33:40.8886233Z Packets:   ███████████████████████████████████████████████████▎                            128300/200000 [00:01<00:00, 106296.27it/s][A
2025-02-24T16:33:40.8886252Z 
2025-02-24T16:33:40.8886547Z Packets:   ███████████████████████████████████████████████████████▌                        138932/200000 [00:01<00:00, 106119.37it/s][A
2025-02-24T16:33:40.8886552Z 
2025-02-24T16:33:40.8886849Z Packets:   ███████████████████████████████████████████████████████████▉                    149695/200000 [00:01<00:00, 106573.26it/s][A
2025-02-24T16:33:40.8886867Z 
2025-02-24T16:33:40.8887165Z Packets:   ████████████████████████████████████████████████████████████████▏               160381/200000 [00:01<00:00, 106657.33it/s][A
2025-02-24T16:33:40.8887170Z 
2025-02-24T16:33:40.8887758Z Packets:   ████████████████████████████████████████████████████████████████████▍           171080/200000 [00:01<00:00, 106756.58it/s][A
2025-02-24T16:33:40.8887766Z 
2025-02-24T16:33:40.8888092Z Packets:   ████████████████████████████████████████████████████████████████████████▋       181757/200000 [00:01<00:00, 106685.08it/s][A
2025-02-24T16:33:40.8888243Z 
2025-02-24T16:33:40.8888565Z Packets:   ████████████████████████████████████████████████████████████████████████████▉   192426/200000 [00:01<00:00, 106154.27it/s][A
2025-02-24T16:33:40.8888718Z Iterations:                                                                                16/? [06:00<00:00,  6.23s/it]
2025-02-24T16:33:40.8888739Z 
2025-02-24T16:33:40.8889062Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 106154.27it/s][A
2025-02-24T16:33:40.8889067Z 
2025-02-24T16:33:40.8889295Z Packets:                                                                                   0/500000 [00:00<?, ?it/s]                 [A
2025-02-24T16:33:40.8889300Z 
2025-02-24T16:33:40.8889538Z Packets:   █▋                                                                              10617/500000 [00:00<00:13, 35994.62it/s][A
2025-02-24T16:33:40.8889543Z 
2025-02-24T16:33:40.8889776Z Packets:   ██▎                                                                             14217/500000 [00:00<00:13, 35730.68it/s][A
2025-02-24T16:33:40.8889791Z 
2025-02-24T16:33:40.8890016Z Packets:   ██▊                                                                             17820/500000 [00:00<00:13, 35823.97it/s][A
2025-02-24T16:33:40.8890022Z 
2025-02-24T16:33:40.8890370Z Packets:   ███▍                                                                            21396/500000 [00:00<00:13, 35796.85it/s][A
2025-02-24T16:33:40.8890376Z 
2025-02-24T16:33:40.8890609Z Packets:   ███▉                                                                            24971/500000 [00:00<00:13, 35755.71it/s][A
2025-02-24T16:33:40.8890614Z 
2025-02-24T16:33:40.8890841Z Packets:   ████▌                                                                           28543/500000 [00:00<00:13, 35620.37it/s][A
2025-02-24T16:33:40.8890846Z 
2025-02-24T16:33:40.8891077Z Packets:   █████▏                                                                          32102/500000 [00:00<00:13, 35608.59it/s][A
2025-02-24T16:33:40.8891089Z 
2025-02-24T16:33:40.8891322Z Packets:   █████▋                                                                          35661/500000 [00:00<00:13, 35522.31it/s][A
2025-02-24T16:33:40.8891327Z 
2025-02-24T16:33:40.8891555Z Packets:   ██████▎                                                                         39251/500000 [00:01<00:12, 35634.96it/s][A
2025-02-24T16:33:40.8891567Z 
2025-02-24T16:33:40.8891799Z Packets:   ██████▊                                                                         42843/500000 [00:01<00:12, 35716.44it/s][A
2025-02-24T16:33:40.8891804Z 
2025-02-24T16:33:40.8892033Z Packets:   ███████▍                                                                        46443/500000 [00:01<00:12, 35798.82it/s][A
2025-02-24T16:33:40.8892043Z 
2025-02-24T16:33:40.8892271Z Packets:   ████████                                                                        50023/500000 [00:01<00:12, 35781.99it/s][A
2025-02-24T16:33:40.8892284Z 
2025-02-24T16:33:40.8892520Z Packets:   ████████▌                                                                       53623/500000 [00:01<00:12, 35847.30it/s][A
2025-02-24T16:33:40.8892524Z 
2025-02-24T16:33:40.8892757Z Packets:   █████████▏                                                                      57208/500000 [00:01<00:12, 35829.84it/s][A
2025-02-24T16:33:40.8892774Z 
2025-02-24T16:33:40.8893011Z Packets:   █████████▋                                                                      60791/500000 [00:01<00:12, 35705.93it/s][A
2025-02-24T16:33:40.8893016Z 
2025-02-24T16:33:40.8893253Z Packets:   ██████████▎                                                                     64408/500000 [00:01<00:12, 35841.92it/s][A
2025-02-24T16:33:40.8893258Z 
2025-02-24T16:33:40.8893494Z Packets:   ██████████▉                                                                     67993/500000 [00:01<00:12, 35775.49it/s][A
2025-02-24T16:33:40.8893504Z 
2025-02-24T16:33:40.8893829Z Packets:   ███████████▍                                                                    71571/500000 [00:02<00:12, 35544.86it/s][A
2025-02-24T16:33:40.8893834Z 
2025-02-24T16:33:40.8894074Z Packets:   ████████████                                                                    75172/500000 [00:02<00:11, 35683.42it/s][A
2025-02-24T16:33:40.8894155Z 
2025-02-24T16:33:40.8894393Z Packets:   ████████████▌                                                                   78741/500000 [00:02<00:11, 35672.90it/s][A
2025-02-24T16:33:40.8894403Z 
2025-02-24T16:33:40.8894642Z Packets:   █████████████▏                                                                  82309/500000 [00:02<00:11, 35643.27it/s][A
2025-02-24T16:33:40.8894647Z 
2025-02-24T16:33:40.8894890Z Packets:   █████████████▋                                                                  85874/500000 [00:02<00:11, 35623.50it/s][A
2025-02-24T16:33:40.8894895Z 
2025-02-24T16:33:40.8895136Z Packets:   ██████████████▎                                                                 89441/500000 [00:02<00:11, 35633.81it/s][A
2025-02-24T16:33:40.8895155Z 
2025-02-24T16:33:40.8895393Z Packets:   ██████████████▉                                                                 93005/500000 [00:02<00:11, 34588.33it/s][A
2025-02-24T16:33:40.8895398Z 
2025-02-24T16:33:40.8895642Z Packets:   ███████████████▍                                                                96563/500000 [00:02<00:11, 34878.51it/s][A
2025-02-24T16:33:40.8895656Z 
2025-02-24T16:33:40.8895899Z Packets:   ████████████████                                                                100057/500000 [00:02<00:11, 34801.04it/s][A
2025-02-24T16:33:40.8895910Z 
2025-02-24T16:33:40.8896153Z Packets:   ████████████████▌                                                               103586/500000 [00:02<00:11, 34942.99it/s][A
2025-02-24T16:33:40.8896158Z 
2025-02-24T16:33:40.8896409Z Packets:   █████████████████▏                                                              107181/500000 [00:03<00:11, 35240.91it/s][A
2025-02-24T16:33:40.8896423Z 
2025-02-24T16:33:40.8896667Z Packets:   █████████████████▋                                                              110758/500000 [00:03<00:10, 35394.28it/s][A
2025-02-24T16:33:40.8896672Z 
2025-02-24T16:33:40.8896921Z Packets:   ██████████████████▎                                                             114300/500000 [00:03<00:10, 35393.66it/s][A
2025-02-24T16:33:40.8896936Z 
2025-02-24T16:33:40.8897185Z Packets:   ██████████████████▊                                                             117841/500000 [00:03<00:10, 35373.87it/s][A
2025-02-24T16:33:40.8897190Z 
2025-02-24T16:33:40.8897611Z Packets:   ███████████████████▍                                                            121385/500000 [00:03<00:10, 35391.97it/s][A
2025-02-24T16:33:40.8897617Z 
2025-02-24T16:33:40.8897871Z Packets:   ███████████████████▉                                                            124945/500000 [00:03<00:10, 35451.55it/s][A
2025-02-24T16:33:40.8898033Z 
2025-02-24T16:33:40.8898555Z Packets:   ████████████████████▌                                                           128491/500000 [00:03<00:10, 35100.18it/s][A
2025-02-24T16:33:40.8898576Z 
2025-02-24T16:33:40.8898883Z Packets:   █████████████████████                                                           132003/500000 [00:03<00:10, 35102.57it/s][A
2025-02-24T16:33:40.8898901Z 
2025-02-24T16:33:40.8899159Z Packets:   █████████████████████▋                                                          135550/500000 [00:03<00:10, 35207.85it/s][A
2025-02-24T16:33:40.8899164Z 
2025-02-24T16:33:40.8899419Z Packets:   ██████████████████████▎                                                         139103/500000 [00:03<00:10, 35300.11it/s][A
2025-02-24T16:33:40.8899423Z 
2025-02-24T16:33:40.8899673Z Packets:   ██████████████████████▊                                                         142636/500000 [00:04<00:10, 35308.08it/s][A
2025-02-24T16:33:40.8899678Z 
2025-02-24T16:33:40.8899970Z Packets:   ███████████████████████▍                                                        146177/500000 [00:04<00:10, 35338.15it/s][A
2025-02-24T16:33:40.8899985Z 
2025-02-24T16:33:40.8900244Z Packets:   ███████████████████████▉                                                        149712/500000 [00:04<00:09, 35235.81it/s][A
2025-02-24T16:33:40.8900383Z 
2025-02-24T16:33:40.8900642Z Packets:   ████████████████████████▌                                                       153236/500000 [00:04<00:09, 35228.66it/s][A
2025-02-24T16:33:40.8900647Z 
2025-02-24T16:33:40.8900906Z Packets:   █████████████████████████                                                       156760/500000 [00:04<00:09, 35174.89it/s][A
2025-02-24T16:33:40.8900911Z 
2025-02-24T16:33:40.8901169Z Packets:   █████████████████████████▋                                                      160278/500000 [00:04<00:09, 35153.63it/s][A
2025-02-24T16:33:40.8901174Z 
2025-02-24T16:33:40.8901428Z Packets:   ██████████████████████████▏                                                     163794/500000 [00:04<00:09, 33768.70it/s][A
2025-02-24T16:33:40.8901443Z 
2025-02-24T16:33:40.8901704Z Packets:   ██████████████████████████▊                                                     167268/500000 [00:04<00:09, 34046.77it/s][A
2025-02-24T16:33:40.8901709Z 
2025-02-24T16:33:40.8901970Z Packets:   ███████████████████████████▎                                                    170818/500000 [00:04<00:09, 34473.16it/s][A
2025-02-24T16:33:40.8901985Z 
2025-02-24T16:33:40.8902240Z Packets:   ███████████████████████████▉                                                    174311/500000 [00:04<00:09, 34607.32it/s][A
2025-02-24T16:33:40.8902245Z 
2025-02-24T16:33:40.8902504Z Packets:   ████████████████████████████▍                                                   177808/500000 [00:05<00:09, 34714.58it/s][A
2025-02-24T16:33:40.8902510Z 
2025-02-24T16:33:40.8902770Z Packets:   █████████████████████████████                                                   181284/500000 [00:05<00:09, 34706.26it/s][A
2025-02-24T16:33:40.8902860Z 
2025-02-24T16:33:40.8903122Z Packets:   █████████████████████████████▌                                                  184758/500000 [00:05<00:09, 34703.15it/s][A
2025-02-24T16:33:40.8903127Z 
2025-02-24T16:33:40.8903389Z Packets:   ██████████████████████████████                                                  188231/500000 [00:05<00:08, 34688.18it/s][A
2025-02-24T16:33:40.8903404Z 
2025-02-24T16:33:40.8903668Z Packets:   ██████████████████████████████▋                                                 191746/500000 [00:05<00:08, 34821.60it/s][A
2025-02-24T16:33:40.8903673Z 
2025-02-24T16:33:40.8903932Z Packets:   ███████████████████████████████▏                                                195230/500000 [00:05<00:08, 34710.94it/s][A
2025-02-24T16:33:40.8903937Z 
2025-02-24T16:33:40.8904204Z Packets:   ███████████████████████████████▊                                                198702/500000 [00:05<00:08, 33594.31it/s][A
2025-02-24T16:33:40.8904218Z 
2025-02-24T16:33:40.8904484Z Packets:   ████████████████████████████████▎                                               202135/500000 [00:05<00:08, 33807.80it/s][A
2025-02-24T16:33:40.8904488Z 
2025-02-24T16:33:40.8904749Z Packets:   ████████████████████████████████▉                                               205627/500000 [00:05<00:08, 34134.76it/s][A
2025-02-24T16:33:40.8904837Z 
2025-02-24T16:33:40.8905107Z Packets:   █████████████████████████████████▍                                              209101/500000 [00:05<00:08, 34313.25it/s][A
2025-02-24T16:33:40.8905112Z 
2025-02-24T16:33:40.8905379Z Packets:   ██████████████████████████████████                                              212575/500000 [00:06<00:08, 34438.77it/s][A
2025-02-24T16:33:40.8905384Z 
2025-02-24T16:33:40.8905645Z Packets:   ██████████████████████████████████▌                                             216066/500000 [00:06<00:08, 34579.21it/s][A
2025-02-24T16:33:40.8905650Z 
2025-02-24T16:33:40.8905918Z Packets:   ███████████████████████████████████▏                                            219566/500000 [00:06<00:08, 34703.51it/s][A
2025-02-24T16:33:40.8905933Z 
2025-02-24T16:33:40.8906202Z Packets:   ███████████████████████████████████▋                                            223038/500000 [00:06<00:07, 34630.77it/s][A
2025-02-24T16:33:40.8906218Z 
2025-02-24T16:33:40.8906482Z Packets:   ████████████████████████████████████▏                                           226504/500000 [00:06<00:07, 34638.92it/s][A
2025-02-24T16:33:40.8906488Z 
2025-02-24T16:33:40.8906759Z Packets:   ████████████████████████████████████▊                                           229969/500000 [00:06<00:07, 34458.97it/s][A
2025-02-24T16:33:40.8906764Z 
2025-02-24T16:33:40.8907034Z Packets:   █████████████████████████████████████▎                                          233416/500000 [00:06<00:07, 33502.55it/s][A
2025-02-24T16:33:40.8907038Z 
2025-02-24T16:33:40.8907564Z Packets:   █████████████████████████████████████▉                                          236898/500000 [00:06<00:07, 33887.75it/s][A
2025-02-24T16:33:40.8907757Z 
2025-02-24T16:33:40.8908076Z Packets:   ██████████████████████████████████████▍                                         240317/500000 [00:06<00:07, 33975.57it/s][A
2025-02-24T16:33:40.8908082Z 
2025-02-24T16:33:40.8908353Z Packets:   ███████████████████████████████████████                                         243793/500000 [00:06<00:07, 34206.65it/s][A
2025-02-24T16:33:40.8908376Z 
2025-02-24T16:33:40.8908646Z Packets:   ███████████████████████████████████████▌                                        247219/500000 [00:07<00:07, 34221.76it/s][A
2025-02-24T16:33:40.8908651Z 
2025-02-24T16:33:40.8908926Z Packets:   ████████████████████████████████████████                                        250709/500000 [00:07<00:07, 34422.91it/s][A
2025-02-24T16:33:40.8908930Z 
2025-02-24T16:33:40.8909200Z Packets:   ████████████████████████████████████████▋                                       254168/500000 [00:07<00:07, 34472.18it/s][A
2025-02-24T16:33:40.8909221Z 
2025-02-24T16:33:40.8909490Z Packets:   █████████████████████████████████████████▏                                      257626/500000 [00:07<00:07, 34503.04it/s][A
2025-02-24T16:33:40.8909495Z 
2025-02-24T16:33:40.8909771Z Packets:   █████████████████████████████████████████▊                                      261078/500000 [00:07<00:06, 34500.81it/s][A
2025-02-24T16:33:40.8909892Z 
2025-02-24T16:33:40.8910170Z Packets:   ██████████████████████████████████████████▎                                     264529/500000 [00:07<00:06, 34421.72it/s][A
2025-02-24T16:33:40.8910180Z 
2025-02-24T16:33:40.8910456Z Packets:   ██████████████████████████████████████████▉                                     267972/500000 [00:07<00:07, 32596.52it/s][A
2025-02-24T16:33:40.8910461Z 
2025-02-24T16:33:40.8910739Z Packets:   ███████████████████████████████████████████▍                                    271315/500000 [00:07<00:06, 32835.62it/s][A
2025-02-24T16:33:40.8910756Z 
2025-02-24T16:33:40.8911030Z Packets:   ███████████████████████████████████████████▉                                    274746/500000 [00:07<00:06, 33264.79it/s][A
2025-02-24T16:33:40.8911040Z 
2025-02-24T16:33:40.8911316Z Packets:   ████████████████████████████████████████████▌                                   278153/500000 [00:07<00:06, 33498.67it/s][A
2025-02-24T16:33:40.8911333Z 
2025-02-24T16:33:40.8911613Z Packets:   █████████████████████████████████████████████                                   281657/500000 [00:08<00:06, 33946.09it/s][A
2025-02-24T16:33:40.8911618Z 
2025-02-24T16:33:40.8911893Z Packets:   █████████████████████████████████████████████▌                                  285108/500000 [00:08<00:06, 34113.04it/s][A
2025-02-24T16:33:40.8911903Z 
2025-02-24T16:33:40.8912178Z Packets:   ██████████████████████████████████████████████▏                                 288566/500000 [00:08<00:06, 34250.95it/s][A
2025-02-24T16:33:40.8912184Z 
2025-02-24T16:33:40.8912464Z Packets:   ██████████████████████████████████████████████▋                                 292021/500000 [00:08<00:06, 34339.99it/s][A
2025-02-24T16:33:40.8912560Z 
2025-02-24T16:33:40.8912841Z Packets:   ███████████████████████████████████████████████▎                                295487/500000 [00:08<00:05, 34434.54it/s][A
2025-02-24T16:33:40.8912946Z 
2025-02-24T16:33:40.8913231Z Packets:   ███████████████████████████████████████████████▊                                299004/500000 [00:08<00:05, 34652.81it/s][A
2025-02-24T16:33:40.8913236Z 
2025-02-24T16:33:40.8913519Z Packets:   ████████████████████████████████████████████████▍                               302471/500000 [00:08<00:05, 34255.70it/s][A
2025-02-24T16:33:40.8913523Z 
2025-02-24T16:33:40.8913801Z Packets:   ████████████████████████████████████████████████▉                               305899/500000 [00:08<00:05, 33896.98it/s][A
2025-02-24T16:33:40.8913806Z 
2025-02-24T16:33:40.8914090Z Packets:   █████████████████████████████████████████████████▍                              309358/500000 [00:08<00:05, 34099.66it/s][A
2025-02-24T16:33:40.8914107Z 
2025-02-24T16:33:40.8914391Z Packets:   ██████████████████████████████████████████████████                              312827/500000 [00:08<00:05, 34274.87it/s][A
2025-02-24T16:33:40.8914396Z 
2025-02-24T16:33:40.8914676Z Packets:   ██████████████████████████████████████████████████▌                             316325/500000 [00:09<00:05, 34483.23it/s][A
2025-02-24T16:33:40.8914693Z 
2025-02-24T16:33:40.8914980Z Packets:   ███████████████████████████████████████████████████▏                            319843/500000 [00:09<00:05, 34689.68it/s][A
2025-02-24T16:33:40.8914985Z 
2025-02-24T16:33:40.8915272Z Packets:   ███████████████████████████████████████████████████▋                            323341/500000 [00:09<00:05, 34772.15it/s][A
2025-02-24T16:33:40.8915278Z 
2025-02-24T16:33:40.8915561Z Packets:   ████████████████████████████████████████████████████▎                           326819/500000 [00:09<00:04, 34768.26it/s][A
2025-02-24T16:33:40.8915579Z 
2025-02-24T16:33:40.8915867Z Packets:   ████████████████████████████████████████████████████▊                           330297/500000 [00:09<00:04, 34713.52it/s][A
2025-02-24T16:33:40.8915872Z 
2025-02-24T16:33:40.8916161Z Packets:   █████████████████████████████████████████████████████▍                          333811/500000 [00:09<00:04, 34839.54it/s][A
2025-02-24T16:33:40.8916179Z 
2025-02-24T16:33:40.8916464Z Packets:   █████████████████████████████████████████████████████▉                          337302/500000 [00:09<00:04, 34859.58it/s][A
2025-02-24T16:33:40.8916468Z 
2025-02-24T16:33:40.8916836Z Packets:   ██████████████████████████████████████████████████████▌                         340789/500000 [00:09<00:04, 33600.89it/s][A
2025-02-24T16:33:40.8916846Z 
2025-02-24T16:33:40.8917543Z Packets:   ███████████████████████████████████████████████████████                         344300/500000 [00:09<00:04, 34040.50it/s][A
2025-02-24T16:33:40.8917699Z 
2025-02-24T16:33:40.8918020Z Packets:   ███████████████████████████████████████████████████████▋                        347757/500000 [00:10<00:04, 34195.96it/s][A
2025-02-24T16:33:40.8918025Z 
2025-02-24T16:33:40.8918322Z Packets:   ████████████████████████████████████████████████████████▏                       351269/500000 [00:10<00:04, 34469.28it/s][A
2025-02-24T16:33:40.8918442Z 
2025-02-24T16:33:40.8918738Z Packets:   ████████████████████████████████████████████████████████▊                       354731/500000 [00:10<00:04, 34510.52it/s][A
2025-02-24T16:33:40.8918743Z 
2025-02-24T16:33:40.8919033Z Packets:   █████████████████████████████████████████████████████████▎                      358204/500000 [00:10<00:04, 34574.00it/s][A
2025-02-24T16:33:40.8919038Z 
2025-02-24T16:33:40.8919330Z Packets:   █████████████████████████████████████████████████████████▉                      361723/500000 [00:10<00:03, 34757.87it/s][A
2025-02-24T16:33:40.8919335Z 
2025-02-24T16:33:40.8919633Z Packets:   ██████████████████████████████████████████████████████████▍                     365201/500000 [00:10<00:03, 34705.54it/s][A
2025-02-24T16:33:40.8919651Z 
2025-02-24T16:33:40.8919940Z Packets:   ██████████████████████████████████████████████████████████▉                     368692/500000 [00:10<00:03, 34764.77it/s][A
2025-02-24T16:33:40.8919958Z 
2025-02-24T16:33:40.8920254Z Packets:   ███████████████████████████████████████████████████████████▌                    372223/500000 [00:10<00:03, 34921.39it/s][A
2025-02-24T16:33:40.8920260Z 
2025-02-24T16:33:40.8920556Z Packets:   ████████████████████████████████████████████████████████████                    375716/500000 [00:10<00:03, 33648.74it/s][A
2025-02-24T16:33:40.8920561Z 
2025-02-24T16:33:40.8920856Z Packets:   ████████████████████████████████████████████████████████████▋                   379174/500000 [00:10<00:03, 33919.70it/s][A
2025-02-24T16:33:40.8920861Z 
2025-02-24T16:33:40.8921157Z Packets:   █████████████████████████████████████████████████████████████▏                  382596/500000 [00:11<00:03, 34007.04it/s][A
2025-02-24T16:33:40.8921251Z 
2025-02-24T16:33:40.8921554Z Packets:   █████████████████████████████████████████████████████████████▊                  386039/500000 [00:11<00:03, 34131.96it/s][A
2025-02-24T16:33:40.8921559Z 
2025-02-24T16:33:40.8921850Z Packets:   ██████████████████████████████████████████████████████████████▎                 389541/500000 [00:11<00:03, 34394.00it/s][A
2025-02-24T16:33:40.8921869Z 
2025-02-24T16:33:40.8922172Z Packets:   ██████████████████████████████████████████████████████████████▉                 393052/500000 [00:11<00:03, 34603.90it/s][A
2025-02-24T16:33:40.8922177Z 
2025-02-24T16:33:40.8922475Z Packets:   ███████████████████████████████████████████████████████████████▍                396555/500000 [00:11<00:02, 34730.78it/s][A
2025-02-24T16:33:40.8922479Z 
2025-02-24T16:33:40.8922772Z Packets:   ████████████████████████████████████████████████████████████████                400039/500000 [00:11<00:02, 34760.65it/s][A
2025-02-24T16:33:40.8922791Z 
2025-02-24T16:33:40.8923091Z Packets:   ████████████████████████████████████████████████████████████████▌               403517/500000 [00:11<00:02, 34686.06it/s][A
2025-02-24T16:33:40.8923095Z 
2025-02-24T16:33:40.8923395Z Packets:   █████████████████████████████████████████████████████████████████▏              407039/500000 [00:11<00:02, 34844.81it/s][A
2025-02-24T16:33:40.8923487Z 
2025-02-24T16:33:40.8923786Z Packets:   █████████████████████████████████████████████████████████████████▋              410525/500000 [00:11<00:02, 33125.45it/s][A
2025-02-24T16:33:40.8923792Z 
2025-02-24T16:33:40.8924094Z Packets:   ██████████████████████████████████████████████████████████████████▏             413989/500000 [00:11<00:02, 33562.50it/s][A
2025-02-24T16:33:40.8924099Z 
2025-02-24T16:33:40.8924400Z Packets:   ██████████████████████████████████████████████████████████████████▊             417458/500000 [00:12<00:02, 33888.87it/s][A
2025-02-24T16:33:40.8924419Z 
2025-02-24T16:33:40.8924717Z Packets:   ███████████████████████████████████████████████████████████████████▎            420957/500000 [00:12<00:02, 34211.57it/s][A
2025-02-24T16:33:40.8924722Z 
2025-02-24T16:33:40.8925024Z Packets:   ███████████████████████████████████████████████████████████████████▉            424510/500000 [00:12<00:02, 34599.26it/s][A
2025-02-24T16:33:40.8925045Z 
2025-02-24T16:33:40.8925344Z Packets:   ████████████████████████████████████████████████████████████████████▍           427977/500000 [00:12<00:02, 34616.25it/s][A
2025-02-24T16:33:40.8925351Z 
2025-02-24T16:33:40.8925666Z Packets:   █████████████████████████████████████████████████████████████████████           431443/500000 [00:12<00:01, 34596.60it/s][A
2025-02-24T16:33:40.8925672Z 
2025-02-24T16:33:40.8925974Z Packets:   █████████████████████████████████████████████████████████████████████▌          434951/500000 [00:12<00:01, 34739.44it/s][A
2025-02-24T16:33:40.8925988Z 
2025-02-24T16:33:40.8926292Z Packets:   ██████████████████████████████████████████████████████████████████████▏         438428/500000 [00:12<00:01, 34679.06it/s][A
2025-02-24T16:33:40.8926385Z 
2025-02-24T16:33:40.8926696Z Packets:   ██████████████████████████████████████████████████████████████████████▋         441903/500000 [00:12<00:01, 34697.75it/s][A
2025-02-24T16:33:40.8926783Z 
2025-02-24T16:33:40.8927092Z Packets:   ███████████████████████████████████████████████████████████████████████▎        445374/500000 [00:12<00:01, 32927.70it/s][A
2025-02-24T16:33:40.8927102Z 
2025-02-24T16:33:40.8927549Z Packets:   ███████████████████████████████████████████████████████████████████████▊        448796/500000 [00:12<00:01, 33299.94it/s][A
2025-02-24T16:33:40.8927556Z 
2025-02-24T16:33:40.8927871Z Packets:   ████████████████████████████████████████████████████████████████████████▎       452284/500000 [00:13<00:01, 33757.37it/s][A
2025-02-24T16:33:40.8927876Z 
2025-02-24T16:33:40.8928179Z Packets:   ████████████████████████████████████████████████████████████████████████▉       455811/500000 [00:13<00:01, 34202.30it/s][A
2025-02-24T16:33:40.8928200Z 
2025-02-24T16:33:40.8928513Z Packets:   █████████████████████████████████████████████████████████████████████████▍      459279/500000 [00:13<00:01, 34343.05it/s][A
2025-02-24T16:33:40.8928518Z 
2025-02-24T16:33:40.8928831Z Packets:   ██████████████████████████████████████████████████████████████████████████      462724/500000 [00:13<00:01, 34373.82it/s][A
2025-02-24T16:33:40.8928851Z 
2025-02-24T16:33:40.8929158Z Packets:   ██████████████████████████████████████████████████████████████████████████▌     466213/500000 [00:13<00:00, 34526.88it/s][A
2025-02-24T16:33:40.8929163Z 
2025-02-24T16:33:40.8929475Z Packets:   ███████████████████████████████████████████████████████████████████████████▏    469744/500000 [00:13<00:00, 34756.22it/s][A
2025-02-24T16:33:40.8929480Z 
2025-02-24T16:33:40.8929792Z Packets:   ███████████████████████████████████████████████████████████████████████████▋    473223/500000 [00:13<00:00, 34522.58it/s][A
2025-02-24T16:33:40.8929926Z 
2025-02-24T16:33:40.8930242Z Packets:   ████████████████████████████████████████████████████████████████████████████▎   476678/500000 [00:13<00:00, 34491.79it/s][A
2025-02-24T16:33:40.8930247Z 
2025-02-24T16:33:40.8930560Z Packets:   ████████████████████████████████████████████████████████████████████████████▊   480129/500000 [00:13<00:00, 33330.43it/s][A
2025-02-24T16:33:40.8930696Z 
2025-02-24T16:33:40.8931014Z Packets:   █████████████████████████████████████████████████████████████████████████████▍  483625/500000 [00:13<00:00, 33792.77it/s][A
2025-02-24T16:33:40.8931019Z 
2025-02-24T16:33:40.8931328Z Packets:   █████████████████████████████████████████████████████████████████████████████▉  487039/500000 [00:14<00:00, 33893.60it/s][A
2025-02-24T16:33:40.8931333Z 
2025-02-24T16:33:40.8931648Z Packets:   ██████████████████████████████████████████████████████████████████████████████▍ 490528/500000 [00:14<00:00, 34185.68it/s][A
2025-02-24T16:33:40.8931669Z 
2025-02-24T16:33:40.8931983Z Packets:   ███████████████████████████████████████████████████████████████████████████████ 494008/500000 [00:14<00:00, 34366.35it/s][A
2025-02-24T16:33:40.8931988Z 
2025-02-24T16:33:40.8932300Z Packets:   ███████████████████████████████████████████████████████████████████████████████▌497467/500000 [00:14<00:00, 34432.00it/s][A
2025-02-24T16:33:40.8932472Z Iterations:                                                                                17/? [06:17<00:00,  9.31s/it]
2025-02-24T16:33:40.8932478Z 
2025-02-24T16:33:40.8932798Z Packets:   ████████████████████████████████████████████████████████████████████████████████500000/500000 [00:15<00:00, 34432.00it/s][A
2025-02-24T16:33:40.8932963Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.8933134Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-02-24T16:33:40.8933483Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-02-24T16:33:40.8933983Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-02-24T16:33:40.8934435Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-02-24T16:33:40.8934943Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:33:40.8935172Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T16:33:40.8935285Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:33:40.8935379Z 	Starting iteration 1 of 5
2025-02-24T16:33:40.8935490Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:33:40.8935584Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-02-24T16:33:40.8935686Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-02-24T16:33:40.8935776Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.8935779Z 
2025-02-24T16:33:40.8935888Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T16:33:40.8935981Z 	Plasma stratification:
2025-02-24T16:33:40.8936084Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T16:33:40.8936278Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-02-24T16:33:40.8936365Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-02-24T16:33:40.8936453Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-02-24T16:33:40.8936538Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-02-24T16:33:40.8936625Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-02-24T16:33:40.8936629Z 
2025-02-24T16:33:40.8936739Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T16:33:40.8936825Z 	Current t_inner = 9974.969 K
2025-02-24T16:33:40.8936946Z 	Expected t_inner for next iteration = 10736.790 K
2025-02-24T16:33:40.8936951Z 
2025-02-24T16:33:40.8937056Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:33:40.8937143Z 	Starting iteration 2 of 5
2025-02-24T16:33:40.8937370Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:33:40.8937471Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-02-24T16:33:40.8937566Z 	Luminosity absorbed  = 3.623e+42 erg / s
2025-02-24T16:33:40.8937659Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.8937664Z 
2025-02-24T16:33:40.8937771Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T16:33:40.8937857Z 	Plasma stratification:
2025-02-24T16:33:40.8937972Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T16:33:40.8938084Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:33:40.8938172Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-02-24T16:33:40.8938261Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-02-24T16:33:40.8938345Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-02-24T16:33:40.8938436Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-02-24T16:33:40.8938443Z 
2025-02-24T16:33:40.8938549Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T16:33:40.8938639Z 	Current t_inner = 10736.790 K
2025-02-24T16:33:40.8938760Z 	Expected t_inner for next iteration = 10718.574 K
2025-02-24T16:33:40.8938765Z 
2025-02-24T16:33:40.8938867Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:33:40.8938961Z 	Starting iteration 3 of 5
2025-02-24T16:33:40.8939064Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:33:40.8939160Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-02-24T16:33:40.8939256Z 	Luminosity absorbed  = 3.512e+42 erg / s
2025-02-24T16:33:40.8939344Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.8939348Z 
2025-02-24T16:33:40.8939574Z INFO     tardis.simulation.base:base.py:260 Iteration converged 1/4 consecutive times.
2025-02-24T16:33:40.8939684Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T16:33:40.8939777Z 	Plasma stratification:
2025-02-24T16:33:40.8939883Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T16:33:40.8940114Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:33:40.8940204Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-02-24T16:33:40.8940292Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-02-24T16:33:40.8940381Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-02-24T16:33:40.8940471Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0922
2025-02-24T16:33:40.8940475Z 
2025-02-24T16:33:40.8940584Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T16:33:40.8940669Z 	Current t_inner = 10718.574 K
2025-02-24T16:33:40.8940792Z 	Expected t_inner for next iteration = 10696.150 K
2025-02-24T16:33:40.8940796Z 
2025-02-24T16:33:40.8940905Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:33:40.8940990Z 	Starting iteration 4 of 5
2025-02-24T16:33:40.8941098Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:33:40.8941188Z 	Luminosity emitted   = 1.083e+43 erg / s
2025-02-24T16:33:40.8941285Z 	Luminosity absorbed  = 3.426e+42 erg / s
2025-02-24T16:33:40.8941385Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.8941389Z 
2025-02-24T16:33:40.8941600Z INFO     tardis.simulation.base:base.py:260 Iteration converged 2/4 consecutive times.
2025-02-24T16:33:40.8941711Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T16:33:40.8941795Z 	Plasma stratification:
2025-02-24T16:33:40.8942016Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T16:33:40.8942119Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:33:40.8942208Z 	0         1.07e+04 K  1.09e+04 K  0.491   0.489
2025-02-24T16:33:40.8942298Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-02-24T16:33:40.8942381Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-02-24T16:33:40.8942472Z 	15        1.04e+04 K  1.05e+04 K 0.0922  0.0902
2025-02-24T16:33:40.8942476Z 
2025-02-24T16:33:40.8942618Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T16:33:40.8942780Z 	Current t_inner = 10696.150 K
2025-02-24T16:33:40.8942990Z 	Expected t_inner for next iteration = 10681.168 K
2025-02-24T16:33:40.8943004Z 
2025-02-24T16:33:40.8943176Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T16:33:40.8943280Z 	Simulation finished in 4 iterations 
2025-02-24T16:33:40.8943364Z 	Simulation took 12.73 s
2025-02-24T16:33:40.8943369Z 
2025-02-24T16:33:40.8943479Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:33:40.8943567Z 	Starting iteration 5 of 5
2025-02-24T16:33:40.8943675Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:33:40.8943770Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-02-24T16:33:40.8943859Z 	Luminosity absorbed  = 3.438e+42 erg / s
2025-02-24T16:33:40.8943952Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.8944129Z ______________________ TestTransportSimple.test_spectrum _______________________
2025-02-24T16:33:40.8944134Z 
2025-02-24T16:33:40.8944352Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7ff51213a390>
2025-02-24T16:33:40.8944556Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4df75c440>
2025-02-24T16:33:40.8944565Z 
2025-02-24T16:33:40.8944660Z     def test_spectrum(self, simulation):
2025-02-24T16:33:40.8944837Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T16:33:40.8944943Z         expected = self.get_expected_data(key)
2025-02-24T16:33:40.8945019Z     
2025-02-24T16:33:40.8945131Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T16:33:40.8945205Z     
2025-02-24T16:33:40.8945297Z >       assert_quantity_allclose(
2025-02-24T16:33:40.8945473Z             simulation.spectrum_solver.spectrum_real_packets.luminosity,
2025-02-24T16:33:40.8945557Z             luminosity,
2025-02-24T16:33:40.8945629Z         )
2025-02-24T16:33:40.8945633Z 
2025-02-24T16:33:40.8945736Z tardis/tests/test_tardis_full.py:81: 
2025-02-24T16:33:40.8945863Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8946209Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:33:40.8946401Z     np.testing.assert_allclose(
2025-02-24T16:33:40.8946513Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8946517Z 
2025-02-24T16:33:40.8947001Z args = (<function assert_allclose.<locals>.compare at 0x7ff50bcf1760>, array([1.47119190e+39, 1.69564189e+39, 1.35368464e+39,...), array([1.41445923e+39, 1.75365002e+39, 1.41304405e+39, ...,
2025-02-24T16:33:40.8947118Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.8947476Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8947482Z 
2025-02-24T16:33:40.8947564Z     @wraps(func)
2025-02-24T16:33:40.8947650Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8947744Z         with self._recreate_cm():
2025-02-24T16:33:40.8947835Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8947927Z E           AssertionError: 
2025-02-24T16:33:40.8948050Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8948123Z E           
2025-02-24T16:33:40.8948228Z E           Mismatched elements: 4832 / 10000 (48.3%)
2025-02-24T16:33:40.8948329Z E           Max absolute difference: 1.38672909e+39
2025-02-24T16:33:40.8948436Z E           Max relative difference: 5.25284451
2025-02-24T16:33:40.8948712Z E            x: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.8948804Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8948953Z E            y: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.8949037Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8949041Z 
2025-02-24T16:33:40.8949253Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8949437Z __________________ TestTransportSimple.test_virtual_spectrum ___________________
2025-02-24T16:33:40.8949451Z 
2025-02-24T16:33:40.8949659Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7ff51213a5d0>
2025-02-24T16:33:40.8949865Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4df75c440>
2025-02-24T16:33:40.8949870Z 
2025-02-24T16:33:40.8949981Z     def test_virtual_spectrum(self, simulation):
2025-02-24T16:33:40.8950171Z         key = "simulation/spectrum_solver/spectrum_virtual_packets/luminosity"
2025-02-24T16:33:40.8950271Z         expected = self.get_expected_data(key)
2025-02-24T16:33:40.8950346Z     
2025-02-24T16:33:40.8950457Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T16:33:40.8950524Z     
2025-02-24T16:33:40.8950613Z >       assert_quantity_allclose(
2025-02-24T16:33:40.8950792Z             simulation.spectrum_solver.spectrum_virtual_packets.luminosity,
2025-02-24T16:33:40.8950874Z             luminosity,
2025-02-24T16:33:40.8950945Z         )
2025-02-24T16:33:40.8950955Z 
2025-02-24T16:33:40.8951050Z tardis/tests/test_tardis_full.py:92: 
2025-02-24T16:33:40.8951173Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8951511Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:33:40.8951619Z     np.testing.assert_allclose(
2025-02-24T16:33:40.8951732Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8951737Z 
2025-02-24T16:33:40.8952206Z args = (<function assert_allclose.<locals>.compare at 0x7ff50f832660>, array([1.44033177e+39, 1.35611403e+39, 1.39755698e+39,...), array([1.45484259e+39, 1.36306291e+39, 1.38939833e+39, ...,
2025-02-24T16:33:40.8952318Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.8952561Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8952566Z 
2025-02-24T16:33:40.8952648Z     @wraps(func)
2025-02-24T16:33:40.8952733Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8952957Z         with self._recreate_cm():
2025-02-24T16:33:40.8953053Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8953139Z E           AssertionError: 
2025-02-24T16:33:40.8953254Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8953326Z E           
2025-02-24T16:33:40.8953438Z E           Mismatched elements: 5933 / 10000 (59.3%)
2025-02-24T16:33:40.8953537Z E           Max absolute difference: 5.26760031e+38
2025-02-24T16:33:40.8953639Z E           Max relative difference: 35562.41947434
2025-02-24T16:33:40.8953795Z E            x: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.8953881Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8954033Z E            y: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.8954115Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8954120Z 
2025-02-24T16:33:40.8954323Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8954583Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-downbranch] ____
2025-02-24T16:33:40.8954588Z 
2025-02-24T16:33:40.8954916Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7ff51213afc0>
2025-02-24T16:33:40.8955197Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4ea308bc0>
2025-02-24T16:33:40.8955404Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-downbranch]>>
2025-02-24T16:33:40.8955414Z 
2025-02-24T16:33:40.8955547Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T16:33:40.8955660Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.8955742Z         j_blue_estimator = (
2025-02-24T16:33:40.8955965Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T16:33:40.8956034Z         )
2025-02-24T16:33:40.8956189Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T16:33:40.8956319Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T16:33:40.8956324Z 
2025-02-24T16:33:40.8956457Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T16:33:40.8956580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8956588Z 
2025-02-24T16:33:40.8956857Z args = (<function assert_allclose.<locals>.compare at 0x7ff510dcd6c0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8956937Z        [0., 0., .....,
2025-02-24T16:33:40.8957022Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8957100Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8957185Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:33:40.8957560Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8957566Z 
2025-02-24T16:33:40.8957646Z     @wraps(func)
2025-02-24T16:33:40.8957734Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8957824Z         with self._recreate_cm():
2025-02-24T16:33:40.8957917Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8958002Z E           AssertionError: 
2025-02-24T16:33:40.8958119Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8958192Z E           
2025-02-24T16:33:40.8958311Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T16:33:40.8958415Z E           Max absolute difference: 7.03072887e-19
2025-02-24T16:33:40.8958521Z E           Max relative difference: 7.72237896
2025-02-24T16:33:40.8958621Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8958709Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8958804Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.8958892Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8958981Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8959208Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.8959217Z 
2025-02-24T16:33:40.8959427Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8959651Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-downbranch] ________
2025-02-24T16:33:40.8959655Z 
2025-02-24T16:33:40.8959983Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7ff51213b620>
2025-02-24T16:33:40.8960185Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4ea308bc0>
2025-02-24T16:33:40.8960368Z request = <FixtureRequest for <Function test_spectrum[-1-downbranch]>>
2025-02-24T16:33:40.8960373Z 
2025-02-24T16:33:40.8960480Z     def test_spectrum(self, simulation, request):
2025-02-24T16:33:40.8960588Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.8960785Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T16:33:40.8960953Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:33:40.8961062Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:33:40.8961203Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:33:40.8961215Z 
2025-02-24T16:33:40.8961459Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T16:33:40.8961815Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8962171Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:33:40.8962266Z     np.testing.assert_allclose(
2025-02-24T16:33:40.8962381Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8962385Z 
2025-02-24T16:33:40.8962856Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e9282d40>, array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39,...), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-02-24T16:33:40.8962966Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.8963213Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8963218Z 
2025-02-24T16:33:40.8963298Z     @wraps(func)
2025-02-24T16:33:40.8963383Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8963485Z         with self._recreate_cm():
2025-02-24T16:33:40.8963573Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8963666Z E           AssertionError: 
2025-02-24T16:33:40.8963774Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8963857Z E           
2025-02-24T16:33:40.8963963Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T16:33:40.8964068Z E           Max absolute difference: 2.09719426e+39
2025-02-24T16:33:40.8964173Z E           Max relative difference: 4.0036592
2025-02-24T16:33:40.8964327Z E            x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.8964427Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8964571Z E            y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.8964663Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8964667Z 
2025-02-24T16:33:40.8964878Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8965114Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-downbranch] ___
2025-02-24T16:33:40.8965119Z 
2025-02-24T16:33:40.8965449Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7ff511f70320>
2025-02-24T16:33:40.8965647Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4ea308bc0>
2025-02-24T16:33:40.8965861Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-downbranch]>>
2025-02-24T16:33:40.8965866Z 
2025-02-24T16:33:40.8966012Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T16:33:40.8966209Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.8966405Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T16:33:40.8966568Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:33:40.8966676Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:33:40.8966802Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:33:40.8966807Z 
2025-02-24T16:33:40.8966937Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T16:33:40.8967053Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8967512Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:33:40.8967611Z     np.testing.assert_allclose(
2025-02-24T16:33:40.8967727Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8967731Z 
2025-02-24T16:33:40.8968204Z args = (<function assert_allclose.<locals>.compare at 0x7ff509f2f240>, array([1.55114238e+39, 1.55522613e+39, 1.54887955e+39,...), array([1.54178275e+39, 1.54564497e+39, 1.54031038e+39, ...,
2025-02-24T16:33:40.8968315Z        2.27470694e+31, 2.29290738e+31, 2.25720643e+31]))
2025-02-24T16:33:40.8968552Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8968676Z 
2025-02-24T16:33:40.8968752Z     @wraps(func)
2025-02-24T16:33:40.8968842Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8968927Z         with self._recreate_cm():
2025-02-24T16:33:40.8969019Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8969103Z E           AssertionError: 
2025-02-24T16:33:40.8969211Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8969288Z E           
2025-02-24T16:33:40.8969387Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:33:40.8969490Z E           Max absolute difference: 5.00661745e+37
2025-02-24T16:33:40.8969592Z E           Max relative difference: 17.51202125
2025-02-24T16:33:40.8969746Z E            x: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-02-24T16:33:40.8969832Z E                  2.279436e+31, 2.243943e+31])
2025-02-24T16:33:40.8969982Z E            y: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-02-24T16:33:40.8970075Z E                  2.292907e+31, 2.257206e+31])
2025-02-24T16:33:40.8970079Z 
2025-02-24T16:33:40.8970277Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8970435Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T16:33:40.8970439Z 
2025-02-24T16:33:40.8970443Z 
2025-02-24T16:33:40.8970816Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:11<00:00, 108100.55it/s][A
2025-02-24T16:33:40.8971051Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-macroatom] ____
2025-02-24T16:33:40.8971064Z 
2025-02-24T16:33:40.8971387Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7ff51213b7d0>
2025-02-24T16:33:40.8971580Z simulation = <tardis.simulation.base.Simulation object at 0x7ff50257b200>
2025-02-24T16:33:40.8971789Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-macroatom]>>
2025-02-24T16:33:40.8971794Z 
2025-02-24T16:33:40.8971930Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T16:33:40.8972037Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.8972126Z         j_blue_estimator = (
2025-02-24T16:33:40.8972344Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T16:33:40.8972418Z         )
2025-02-24T16:33:40.8972562Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T16:33:40.8972688Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T16:33:40.8972810Z 
2025-02-24T16:33:40.8972948Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T16:33:40.8973059Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8973063Z 
2025-02-24T16:33:40.8973329Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e9ca0220>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8973407Z        [0., 0., .....,
2025-02-24T16:33:40.8973493Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8973576Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8973656Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:33:40.8973902Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8973907Z 
2025-02-24T16:33:40.8973980Z     @wraps(func)
2025-02-24T16:33:40.8974069Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8974161Z         with self._recreate_cm():
2025-02-24T16:33:40.8974249Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8974347Z E           AssertionError: 
2025-02-24T16:33:40.8974449Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8974526Z E           
2025-02-24T16:33:40.8974633Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T16:33:40.8974739Z E           Max absolute difference: 4.67863561e-19
2025-02-24T16:33:40.8974921Z E           Max relative difference: 3.25828651
2025-02-24T16:33:40.8975010Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8975101Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8975194Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.8975288Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8975375Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8975464Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.8975468Z 
2025-02-24T16:33:40.8975671Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8975889Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-macroatom] _________
2025-02-24T16:33:40.8975893Z 
2025-02-24T16:33:40.8976215Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7ff51213bf20>
2025-02-24T16:33:40.8976411Z simulation = <tardis.simulation.base.Simulation object at 0x7ff50257b200>
2025-02-24T16:33:40.8976586Z request = <FixtureRequest for <Function test_spectrum[-1-macroatom]>>
2025-02-24T16:33:40.8976590Z 
2025-02-24T16:33:40.8976703Z     def test_spectrum(self, simulation, request):
2025-02-24T16:33:40.8976808Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.8977005Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T16:33:40.8977161Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:33:40.8977407Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:33:40.8977538Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:33:40.8977542Z 
2025-02-24T16:33:40.8977670Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T16:33:40.8977783Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8978114Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:33:40.8978213Z     np.testing.assert_allclose(
2025-02-24T16:33:40.8978325Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8978329Z 
2025-02-24T16:33:40.8978791Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e6235bc0>, array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39,...), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-02-24T16:33:40.8978902Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.8979141Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8979280Z 
2025-02-24T16:33:40.8979361Z     @wraps(func)
2025-02-24T16:33:40.8979448Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8979532Z         with self._recreate_cm():
2025-02-24T16:33:40.8979625Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8979712Z E           AssertionError: 
2025-02-24T16:33:40.8979876Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8980008Z E           
2025-02-24T16:33:40.8980188Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T16:33:40.8980366Z E           Max absolute difference: 8.5486318e+38
2025-02-24T16:33:40.8980466Z E           Max relative difference: 1.86186015
2025-02-24T16:33:40.8980623Z E            x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.8980708Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8980861Z E            y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.8980953Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8980957Z 
2025-02-24T16:33:40.8981155Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8981388Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-macroatom] ___
2025-02-24T16:33:40.8981516Z 
2025-02-24T16:33:40.8981837Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7ff511f704d0>
2025-02-24T16:33:40.8982037Z simulation = <tardis.simulation.base.Simulation object at 0x7ff50257b200>
2025-02-24T16:33:40.8982241Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-macroatom]>>
2025-02-24T16:33:40.8982245Z 
2025-02-24T16:33:40.8982384Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T16:33:40.8982496Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.8982823Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T16:33:40.8983112Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:33:40.8983293Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:33:40.8983491Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:33:40.8983497Z 
2025-02-24T16:33:40.8983735Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T16:33:40.8983858Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8984202Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:33:40.8984301Z     np.testing.assert_allclose(
2025-02-24T16:33:40.8984411Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8984415Z 
2025-02-24T16:33:40.8984883Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e62353a0>, array([1.54556181e+39, 1.55660766e+39, 1.54591210e+39,...), array([1.54634964e+39, 1.55739996e+39, 1.54657082e+39, ...,
2025-02-24T16:33:40.8984992Z        1.40040337e+31, 1.37514142e+31, 1.33792800e+31]))
2025-02-24T16:33:40.8985241Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8985246Z 
2025-02-24T16:33:40.8985329Z     @wraps(func)
2025-02-24T16:33:40.8985415Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8985509Z         with self._recreate_cm():
2025-02-24T16:33:40.8985600Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8985689Z E           AssertionError: 
2025-02-24T16:33:40.8985796Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8985872Z E           
2025-02-24T16:33:40.8985977Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:33:40.8986079Z E           Max absolute difference: 2.90101642e+37
2025-02-24T16:33:40.8986182Z E           Max relative difference: 0.98973757
2025-02-24T16:33:40.8986335Z E            x: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-02-24T16:33:40.8986526Z E                  1.330497e+31, 1.294462e+31])
2025-02-24T16:33:40.8986678Z E            y: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-02-24T16:33:40.8986773Z E                  1.375141e+31, 1.337928e+31])
2025-02-24T16:33:40.8986780Z 
2025-02-24T16:33:40.8986988Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8987221Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-macroatom] ____
2025-02-24T16:33:40.8987226Z 
2025-02-24T16:33:40.8987682Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7ff51213baa0>
2025-02-24T16:33:40.8987884Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4e21494f0>
2025-02-24T16:33:40.8988080Z request = <FixtureRequest for <Function test_j_blue_estimators[30-macroatom]>>
2025-02-24T16:33:40.8988085Z 
2025-02-24T16:33:40.8988221Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T16:33:40.8988329Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.8988423Z         j_blue_estimator = (
2025-02-24T16:33:40.8988642Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T16:33:40.8988841Z         )
2025-02-24T16:33:40.8988990Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T16:33:40.8989112Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T16:33:40.8989117Z 
2025-02-24T16:33:40.8989253Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T16:33:40.8989366Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8989370Z 
2025-02-24T16:33:40.8989641Z args = (<function assert_allclose.<locals>.compare at 0x7ff4cece1940>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8989719Z        [0., 0., .....,
2025-02-24T16:33:40.8989800Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8989883Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8989961Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:33:40.8990204Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8990209Z 
2025-02-24T16:33:40.8990291Z     @wraps(func)
2025-02-24T16:33:40.8990374Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8990464Z         with self._recreate_cm():
2025-02-24T16:33:40.8990551Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8990639Z E           AssertionError: 
2025-02-24T16:33:40.8990746Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8990823Z E           
2025-02-24T16:33:40.8990936Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T16:33:40.8991037Z E           Max absolute difference: 4.67863561e-19
2025-02-24T16:33:40.8991139Z E           Max relative difference: 3.25828651
2025-02-24T16:33:40.8991233Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8991323Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8991415Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.8991508Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8991596Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.8991684Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.8991688Z 
2025-02-24T16:33:40.8991897Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8992115Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-macroatom] _________
2025-02-24T16:33:40.8992120Z 
2025-02-24T16:33:40.8992443Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7ff511f700e0>
2025-02-24T16:33:40.8992641Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4e21494f0>
2025-02-24T16:33:40.8992813Z request = <FixtureRequest for <Function test_spectrum[30-macroatom]>>
2025-02-24T16:33:40.8992932Z 
2025-02-24T16:33:40.8993048Z     def test_spectrum(self, simulation, request):
2025-02-24T16:33:40.8993151Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.8993352Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T16:33:40.8993515Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:33:40.8993615Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:33:40.8993739Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:33:40.8993743Z 
2025-02-24T16:33:40.8993872Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T16:33:40.8993986Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8994324Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:33:40.8994418Z     np.testing.assert_allclose(
2025-02-24T16:33:40.8994529Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8994534Z 
2025-02-24T16:33:40.8995002Z args = (<function assert_allclose.<locals>.compare at 0x7ff4cece2ca0>, array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39,...), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-02-24T16:33:40.8995189Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.8995435Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.8995440Z 
2025-02-24T16:33:40.8995514Z     @wraps(func)
2025-02-24T16:33:40.8995601Z     def inner(*args, **kwds):
2025-02-24T16:33:40.8995685Z         with self._recreate_cm():
2025-02-24T16:33:40.8995778Z >           return func(*args, **kwds)
2025-02-24T16:33:40.8995862Z E           AssertionError: 
2025-02-24T16:33:40.8995968Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.8996047Z E           
2025-02-24T16:33:40.8996143Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T16:33:40.8996249Z E           Max absolute difference: 8.5486318e+38
2025-02-24T16:33:40.8996344Z E           Max relative difference: 1.86186015
2025-02-24T16:33:40.8996500Z E            x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.8996592Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8996734Z E            y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.8996822Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.8996827Z 
2025-02-24T16:33:40.8997024Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.8997385Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-macroatom] ___
2025-02-24T16:33:40.8997391Z 
2025-02-24T16:33:40.8997719Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7ff511f706e0>
2025-02-24T16:33:40.8997918Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4e21494f0>
2025-02-24T16:33:40.8998123Z request = <FixtureRequest for <Function test_spectrum_integrated[30-macroatom]>>
2025-02-24T16:33:40.8998128Z 
2025-02-24T16:33:40.8998266Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T16:33:40.8998379Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.8998572Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T16:33:40.8998727Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:33:40.8998833Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:33:40.8998949Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:33:40.8998954Z 
2025-02-24T16:33:40.8999087Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T16:33:40.8999196Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8999656Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:33:40.8999781Z     np.testing.assert_allclose(
2025-02-24T16:33:40.8999891Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.8999899Z 
2025-02-24T16:33:40.9000365Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e6246c00>, array([1.54421084e+39, 1.55253343e+39, 1.54295780e+39,...), array([1.54506418e+39, 1.55336544e+39, 1.54364274e+39, ...,
2025-02-24T16:33:40.9000475Z        1.22296100e+31, 1.19300497e+31, 1.16485419e+31]))
2025-02-24T16:33:40.9000713Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9000718Z 
2025-02-24T16:33:40.9000795Z     @wraps(func)
2025-02-24T16:33:40.9000879Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9000969Z         with self._recreate_cm():
2025-02-24T16:33:40.9001061Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9001151Z E           AssertionError: 
2025-02-24T16:33:40.9001262Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9001332Z E           
2025-02-24T16:33:40.9001435Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:33:40.9001673Z E           Max absolute difference: 2.99183385e+37
2025-02-24T16:33:40.9001774Z E           Max relative difference: 0.98992197
2025-02-24T16:33:40.9001926Z E            x: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-02-24T16:33:40.9002014Z E                  1.260980e+31, 1.222587e+31])
2025-02-24T16:33:40.9002160Z E            y: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-02-24T16:33:40.9002243Z E                  1.193005e+31, 1.164854e+31])
2025-02-24T16:33:40.9002247Z 
2025-02-24T16:33:40.9002450Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9002682Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-downbranch] ____
2025-02-24T16:33:40.9002691Z 
2025-02-24T16:33:40.9003007Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7ff51213b9b0>
2025-02-24T16:33:40.9003202Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4e82c27e0>
2025-02-24T16:33:40.9003401Z request = <FixtureRequest for <Function test_j_blue_estimators[30-downbranch]>>
2025-02-24T16:33:40.9003407Z 
2025-02-24T16:33:40.9003540Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T16:33:40.9003648Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9003737Z         j_blue_estimator = (
2025-02-24T16:33:40.9003958Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T16:33:40.9004028Z         )
2025-02-24T16:33:40.9004179Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T16:33:40.9004305Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T16:33:40.9004309Z 
2025-02-24T16:33:40.9004445Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T16:33:40.9004559Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9004564Z 
2025-02-24T16:33:40.9004830Z args = (<function assert_allclose.<locals>.compare at 0x7ff4fc302e80>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9004909Z        [0., 0., .....,
2025-02-24T16:33:40.9004988Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9005070Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9005153Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:33:40.9005386Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9005390Z 
2025-02-24T16:33:40.9005467Z     @wraps(func)
2025-02-24T16:33:40.9005551Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9005687Z         with self._recreate_cm():
2025-02-24T16:33:40.9005982Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9006138Z E           AssertionError: 
2025-02-24T16:33:40.9006293Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9006366Z E           
2025-02-24T16:33:40.9006483Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T16:33:40.9006592Z E           Max absolute difference: 7.03072887e-19
2025-02-24T16:33:40.9006693Z E           Max relative difference: 7.72237896
2025-02-24T16:33:40.9006787Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9006878Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9006970Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.9007060Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9007147Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9007231Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.9007239Z 
2025-02-24T16:33:40.9007557Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9007779Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-downbranch] ________
2025-02-24T16:33:40.9007783Z 
2025-02-24T16:33:40.9008104Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7ff511f71a60>
2025-02-24T16:33:40.9008439Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4e82c27e0>
2025-02-24T16:33:40.9008615Z request = <FixtureRequest for <Function test_spectrum[30-downbranch]>>
2025-02-24T16:33:40.9008620Z 
2025-02-24T16:33:40.9008735Z     def test_spectrum(self, simulation, request):
2025-02-24T16:33:40.9008841Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9009035Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T16:33:40.9009197Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:33:40.9009303Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:33:40.9009427Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:33:40.9009431Z 
2025-02-24T16:33:40.9009564Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T16:33:40.9009676Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9010018Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:33:40.9010109Z     np.testing.assert_allclose(
2025-02-24T16:33:40.9010222Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9010226Z 
2025-02-24T16:33:40.9010694Z args = (<function assert_allclose.<locals>.compare at 0x7ff502585300>, array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39,...), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-02-24T16:33:40.9010798Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9011047Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9011051Z 
2025-02-24T16:33:40.9011124Z     @wraps(func)
2025-02-24T16:33:40.9011213Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9011302Z         with self._recreate_cm():
2025-02-24T16:33:40.9011393Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9011483Z E           AssertionError: 
2025-02-24T16:33:40.9011595Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9011670Z E           
2025-02-24T16:33:40.9011768Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T16:33:40.9011874Z E           Max absolute difference: 2.09719426e+39
2025-02-24T16:33:40.9011976Z E           Max relative difference: 4.0036592
2025-02-24T16:33:40.9012127Z E            x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.9012217Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9012478Z E            y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.9012566Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9012571Z 
2025-02-24T16:33:40.9012769Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9013009Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-downbranch] ___
2025-02-24T16:33:40.9013013Z 
2025-02-24T16:33:40.9013337Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7ff511f70620>
2025-02-24T16:33:40.9013529Z simulation = <tardis.simulation.base.Simulation object at 0x7ff4e82c27e0>
2025-02-24T16:33:40.9013737Z request = <FixtureRequest for <Function test_spectrum_integrated[30-downbranch]>>
2025-02-24T16:33:40.9013742Z 
2025-02-24T16:33:40.9013886Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T16:33:40.9013993Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9014192Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T16:33:40.9014349Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:33:40.9014456Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:33:40.9014573Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:33:40.9014660Z 
2025-02-24T16:33:40.9014791Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T16:33:40.9014905Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9015233Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:33:40.9015328Z     np.testing.assert_allclose(
2025-02-24T16:33:40.9015436Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9015445Z 
2025-02-24T16:33:40.9015907Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e6359260>, array([1.54917411e+39, 1.55043938e+39, 1.54507053e+39,...), array([1.54059874e+39, 1.54119479e+39, 1.53707604e+39, ...,
2025-02-24T16:33:40.9016021Z        2.12049684e+31, 2.12430514e+31, 2.10108056e+31]))
2025-02-24T16:33:40.9016256Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9016265Z 
2025-02-24T16:33:40.9016343Z     @wraps(func)
2025-02-24T16:33:40.9016427Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9016516Z         with self._recreate_cm():
2025-02-24T16:33:40.9016609Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9016693Z E           AssertionError: 
2025-02-24T16:33:40.9016801Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9016872Z E           
2025-02-24T16:33:40.9016975Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:33:40.9017075Z E           Max absolute difference: 5.0153284e+37
2025-02-24T16:33:40.9017176Z E           Max relative difference: 4.90769503
2025-02-24T16:33:40.9017461Z E            x: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-02-24T16:33:40.9017548Z E                  2.088676e+31, 2.060278e+31])
2025-02-24T16:33:40.9017695Z E            y: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-02-24T16:33:40.9017781Z E                  2.124305e+31, 2.101081e+31])
2025-02-24T16:33:40.9017786Z 
2025-02-24T16:33:40.9017990Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9018142Z __________________________ test_montecarlo_main_loop ___________________________
2025-02-24T16:33:40.9018146Z 
2025-02-24T16:33:40.9018834Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T16:33:40.9019115Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff4e8d38620>
2025-02-24T16:33:40.9019588Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T16:33:40.9019593Z 
2025-02-24T16:33:40.9019686Z     def test_montecarlo_main_loop(
2025-02-24T16:33:40.9019785Z         montecarlo_main_loop_config,
2025-02-24T16:33:40.9019865Z         regression_data,
2025-02-24T16:33:40.9019946Z         atomic_dataset,
2025-02-24T16:33:40.9020016Z     ):
2025-02-24T16:33:40.9020125Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T16:33:40.9020281Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-02-24T16:33:40.9020373Z             montecarlo_main_loop_config,
2025-02-24T16:33:40.9020464Z             atom_data=atomic_dataset,
2025-02-24T16:33:40.9020555Z             virtual_packet_logging=False,
2025-02-24T16:33:40.9020646Z             legacy_mode_enabled=True,
2025-02-24T16:33:40.9020718Z         )
2025-02-24T16:33:40.9020850Z         montecarlo_main_loop_simulation.run_convergence()
2025-02-24T16:33:40.9020964Z         montecarlo_main_loop_simulation.run_final()
2025-02-24T16:33:40.9021031Z     
2025-02-24T16:33:40.9021166Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-02-24T16:33:40.9021260Z             montecarlo_main_loop_simulation
2025-02-24T16:33:40.9021476Z         )
2025-02-24T16:33:40.9021544Z     
2025-02-24T16:33:40.9021638Z         # Load compare data from refdata
2025-02-24T16:33:40.9021709Z     
2025-02-24T16:33:40.9021800Z         expected_nu = expected_hdf_store[
2025-02-24T16:33:40.9021938Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T16:33:40.9022006Z         ]
2025-02-24T16:33:40.9022110Z         expected_energy = expected_hdf_store[
2025-02-24T16:33:40.9022244Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T16:33:40.9022317Z         ]
2025-02-24T16:33:40.9022441Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T16:33:40.9022588Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T16:33:40.9022664Z         ]
2025-02-24T16:33:40.9022770Z         expected_j_estimator = expected_hdf_store[
2025-02-24T16:33:40.9022909Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T16:33:40.9022982Z         ]
2025-02-24T16:33:40.9023075Z         expected_hdf_store.close()
2025-02-24T16:33:40.9023282Z         transport_state = montecarlo_main_loop_simulation.transport.transport_state
2025-02-24T16:33:40.9023452Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T16:33:40.9023603Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T16:33:40.9023691Z         actual_nu_bar_estimator = (
2025-02-24T16:33:40.9023843Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-02-24T16:33:40.9023912Z         )
2025-02-24T16:33:40.9024098Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-02-24T16:33:40.9024173Z     
2025-02-24T16:33:40.9024245Z         # Compare
2025-02-24T16:33:40.9024335Z >       npt.assert_allclose(
2025-02-24T16:33:40.9024561Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-13
2025-02-24T16:33:40.9024697Z         )
2025-02-24T16:33:40.9024709Z 
2025-02-24T16:33:40.9025039Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:57: 
2025-02-24T16:33:40.9025157Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9025162Z 
2025-02-24T16:33:40.9025610Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e9cfcea0>, array([9.40870445e+28, 8.06711783e+28, 7.20241369e+28,....88346865e+28, 3.76096031e+28, 3.64350318e+28,
2025-02-24T16:33:40.9025750Z        3.53452939e+28, 3.45323083e+28, 3.34513540e+28, 3.26811629e+28]))
2025-02-24T16:33:40.9025994Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-13, atol=0', 'verbose': True}
2025-02-24T16:33:40.9026090Z 
2025-02-24T16:33:40.9026171Z     @wraps(func)
2025-02-24T16:33:40.9026255Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9026345Z         with self._recreate_cm():
2025-02-24T16:33:40.9026433Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9026523Z E           AssertionError: 
2025-02-24T16:33:40.9026633Z E           Not equal to tolerance rtol=1e-13, atol=0
2025-02-24T16:33:40.9026711Z E           
2025-02-24T16:33:40.9026812Z E           Mismatched elements: 20 / 20 (100%)
2025-02-24T16:33:40.9026912Z E           Max absolute difference: 2.25821059e+25
2025-02-24T16:33:40.9027010Z E           Max relative difference: 0.00054426
2025-02-24T16:33:40.9027151Z E            x: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-02-24T16:33:40.9027393Z E                  6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-02-24T16:33:40.9027518Z E                  4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-02-24T16:33:40.9027657Z E            y: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-02-24T16:33:40.9027775Z E                  6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-02-24T16:33:40.9027893Z E                  4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-02-24T16:33:40.9027897Z 
2025-02-24T16:33:40.9028246Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9028399Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T16:33:40.9028704Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:33:40.9029166Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:33:40.9029350Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9029567Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T16:33:40.9029736Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9029816Z 	
2025-02-24T16:33:40.9029917Z 	Simulation finished in 0 iterations 
2025-02-24T16:33:40.9029998Z 	Simulation took 0.00 s
2025-02-24T16:33:40.9030109Z  ([1mbase.py[0m:542)
2025-02-24T16:33:40.9030272Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9030348Z 	
2025-02-24T16:33:40.9030500Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T16:33:40.9030661Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9030733Z 	
2025-02-24T16:33:40.9030826Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T16:33:40.9030921Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T16:33:40.9031011Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.9031117Z  ([1mbase.py[0m:657)
2025-02-24T16:33:40.9031273Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T16:33:40.9031283Z 
2025-02-24T16:33:40.9031286Z 
2025-02-24T16:33:40.9031522Z Packets:                                                                                   11129/? [00:10<00:00, 1068.62it/s][A
2025-02-24T16:33:40.9031527Z 
2025-02-24T16:33:40.9031754Z Packets:                                                                                   21785/? [00:10<00:00, 2496.09it/s][A
2025-02-24T16:33:40.9031761Z 
2025-02-24T16:33:40.9031977Z Packets:                                                                                   32786/? [00:10<00:00, 4535.01it/s][A
2025-02-24T16:33:40.9031986Z 
2025-02-24T16:33:40.9032199Z Packets:                                                                                   43645/? [00:10<00:00, 7278.90it/s][A
2025-02-24T16:33:40.9032204Z 
2025-02-24T16:33:40.9032430Z Packets:                                                                                   54484/? [00:10<00:00, 10945.18it/s][A
2025-02-24T16:33:40.9032435Z 
2025-02-24T16:33:40.9032655Z Packets:                                                                                   65440/? [00:10<00:00, 15806.05it/s][A
2025-02-24T16:33:40.9032774Z 
2025-02-24T16:33:40.9033000Z Packets:                                                                                   76348/? [00:11<00:00, 21941.94it/s][A
2025-02-24T16:33:40.9033005Z 
2025-02-24T16:33:40.9033226Z Packets:                                                                                   87330/? [00:11<00:00, 29490.62it/s][A
2025-02-24T16:33:40.9033233Z 
2025-02-24T16:33:40.9033448Z Packets:                                                                                   98235/? [00:11<00:00, 38164.52it/s][A
2025-02-24T16:33:40.9033600Z Iterations:                                                                                40/? [07:56<00:00,  5.59s/it]
2025-02-24T16:33:40.9033605Z 
2025-02-24T16:33:40.9033832Z Packets:                                                                                   104009/? [00:11<00:00, 38164.52it/s][A
2025-02-24T16:33:40.9033983Z ------------------------------ Captured log call -------------------------------
2025-02-24T16:33:40.9034496Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:33:40.9034720Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T16:33:40.9034912Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T16:33:40.9035013Z 	Simulation finished in 0 iterations 
2025-02-24T16:33:40.9035093Z 	Simulation took 0.00 s
2025-02-24T16:33:40.9035098Z 
2025-02-24T16:33:40.9035205Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:33:40.9035291Z 	Starting iteration 1 of 1
2025-02-24T16:33:40.9035399Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:33:40.9035495Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T16:33:40.9035583Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T16:33:40.9035679Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.9035844Z ____________________ test_montecarlo_main_loop_vpacket_log _____________________
2025-02-24T16:33:40.9035848Z 
2025-02-24T16:33:40.9036527Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T16:33:40.9036815Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff50bd1f380>
2025-02-24T16:33:40.9037164Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T16:33:40.9037169Z 
2025-02-24T16:33:40.9037405Z     def test_montecarlo_main_loop_vpacket_log(
2025-02-24T16:33:40.9037499Z         montecarlo_main_loop_config,
2025-02-24T16:33:40.9037585Z         regression_data,
2025-02-24T16:33:40.9037666Z         atomic_dataset,
2025-02-24T16:33:40.9037740Z     ):
2025-02-24T16:33:40.9037853Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T16:33:40.9038025Z         montecarlo_main_loop_config.montecarlo.no_of_virtual_packets = 5
2025-02-24T16:33:40.9038097Z     
2025-02-24T16:33:40.9038243Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-02-24T16:33:40.9038343Z             montecarlo_main_loop_config,
2025-02-24T16:33:40.9038435Z             atom_data=atomic_dataset,
2025-02-24T16:33:40.9038528Z             virtual_packet_logging=True,
2025-02-24T16:33:40.9038619Z             legacy_mode_enabled=True,
2025-02-24T16:33:40.9038689Z         )
2025-02-24T16:33:40.9038819Z         montecarlo_main_loop_simulation.run_convergence()
2025-02-24T16:33:40.9038929Z         montecarlo_main_loop_simulation.run_final()
2025-02-24T16:33:40.9039001Z     
2025-02-24T16:33:40.9039141Z         transport = montecarlo_main_loop_simulation.transport
2025-02-24T16:33:40.9039207Z     
2025-02-24T16:33:40.9039412Z         assert transport.montecarlo_configuration.ENABLE_VPACKET_TRACKING is True
2025-02-24T16:33:40.9039598Z     
2025-02-24T16:33:40.9039735Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-02-24T16:33:40.9039830Z             montecarlo_main_loop_simulation
2025-02-24T16:33:40.9039903Z         )
2025-02-24T16:33:40.9039973Z     
2025-02-24T16:33:40.9040067Z         expected_nu = expected_hdf_store[
2025-02-24T16:33:40.9040197Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T16:33:40.9040266Z         ]
2025-02-24T16:33:40.9040367Z         expected_energy = expected_hdf_store[
2025-02-24T16:33:40.9040499Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T16:33:40.9040572Z         ]
2025-02-24T16:33:40.9040694Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T16:33:40.9040837Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T16:33:40.9040911Z         ]
2025-02-24T16:33:40.9041016Z         expected_j_estimator = expected_hdf_store[
2025-02-24T16:33:40.9041151Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T16:33:40.9041220Z         ]
2025-02-24T16:33:40.9041341Z         expected_vpacket_log_nus = expected_hdf_store[
2025-02-24T16:33:40.9041485Z             "/simulation/transport/transport_state/virt_packet_nus"
2025-02-24T16:33:40.9041664Z         ]
2025-02-24T16:33:40.9041793Z         expected_vpacket_log_energies = expected_hdf_store[
2025-02-24T16:33:40.9041947Z             "/simulation/transport/transport_state/virt_packet_energies"
2025-02-24T16:33:40.9042021Z         ]
2025-02-24T16:33:40.9042087Z     
2025-02-24T16:33:40.9042201Z         transport_state = transport.transport_state
2025-02-24T16:33:40.9042273Z     
2025-02-24T16:33:40.9042442Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T16:33:40.9042588Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T16:33:40.9042729Z         actual_nu_bar_estimator = transport_state.nu_bar_estimator
2025-02-24T16:33:40.9042860Z         actual_j_estimator = transport_state.j_estimator
2025-02-24T16:33:40.9043010Z         actual_vpacket_log_nus = transport_state.vpacket_tracker.nus
2025-02-24T16:33:40.9043191Z         actual_vpacket_log_energies = transport_state.vpacket_tracker.energies
2025-02-24T16:33:40.9043264Z     
2025-02-24T16:33:40.9043356Z         expected_hdf_store.close()
2025-02-24T16:33:40.9043437Z         # Compare
2025-02-24T16:33:40.9043522Z >       npt.assert_allclose(
2025-02-24T16:33:40.9043613Z             actual_nu_bar_estimator,
2025-02-24T16:33:40.9043704Z             expected_nu_bar_estimator,
2025-02-24T16:33:40.9043786Z             rtol=1e-12,
2025-02-24T16:33:40.9043867Z             atol=1e-15,
2025-02-24T16:33:40.9043935Z         )
2025-02-24T16:33:40.9043939Z 
2025-02-24T16:33:40.9044131Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:120: 
2025-02-24T16:33:40.9044246Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9044253Z 
2025-02-24T16:33:40.9044694Z args = (<function assert_allclose.<locals>.compare at 0x7ff509f2b6a0>, array([9.39734166e+28, 8.06437183e+28, 7.18947883e+28,....86533431e+28, 3.76643623e+28, 3.65210990e+28,
2025-02-24T16:33:40.9044841Z        3.55628656e+28, 3.45781813e+28, 3.35045159e+28, 3.25557336e+28]))
2025-02-24T16:33:40.9045102Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-12, atol=1e-15', 'verbose': True}
2025-02-24T16:33:40.9045107Z 
2025-02-24T16:33:40.9045185Z     @wraps(func)
2025-02-24T16:33:40.9045269Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9045360Z         with self._recreate_cm():
2025-02-24T16:33:40.9045453Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9045535Z E           AssertionError: 
2025-02-24T16:33:40.9045656Z E           Not equal to tolerance rtol=1e-12, atol=1e-15
2025-02-24T16:33:40.9045727Z E           
2025-02-24T16:33:40.9045829Z E           Mismatched elements: 20 / 20 (100%)
2025-02-24T16:33:40.9046017Z E           Max absolute difference: 1.93283629e+25
2025-02-24T16:33:40.9046118Z E           Max relative difference: 0.00029148
2025-02-24T16:33:40.9046262Z E            x: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-02-24T16:33:40.9046383Z E                  6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-02-24T16:33:40.9046512Z E                  4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-02-24T16:33:40.9046645Z E            y: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-02-24T16:33:40.9046766Z E                  6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-02-24T16:33:40.9046884Z E                  4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-02-24T16:33:40.9046893Z 
2025-02-24T16:33:40.9047096Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9047355Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T16:33:40.9047756Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:33:40.9048353Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:33:40.9048543Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9048891Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T16:33:40.9049062Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9049132Z 	
2025-02-24T16:33:40.9049232Z 	Simulation finished in 0 iterations 
2025-02-24T16:33:40.9049317Z 	Simulation took 0.00 s
2025-02-24T16:33:40.9049426Z  ([1mbase.py[0m:542)
2025-02-24T16:33:40.9049595Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9049662Z 	
2025-02-24T16:33:40.9049820Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T16:33:40.9049978Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9050052Z 	
2025-02-24T16:33:40.9050144Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-02-24T16:33:40.9050243Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-02-24T16:33:40.9050333Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.9050442Z  ([1mbase.py[0m:657)
2025-02-24T16:33:40.9050599Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T16:33:40.9050607Z 
2025-02-24T16:33:40.9050611Z 
2025-02-24T16:33:40.9050846Z Packets:                                                                                   109122/? [00:13<00:00, 10591.54it/s][A
2025-02-24T16:33:40.9050851Z 
2025-02-24T16:33:40.9051080Z Packets:                                                                                   116732/? [00:14<00:00, 12673.28it/s][A
2025-02-24T16:33:40.9051085Z 
2025-02-24T16:33:40.9051309Z Packets:                                                                                   123076/? [00:14<00:00, 14735.67it/s][A
2025-02-24T16:33:40.9051317Z 
2025-02-24T16:33:40.9051536Z Packets:                                                                                   128555/? [00:14<00:00, 16811.08it/s][A
2025-02-24T16:33:40.9051541Z 
2025-02-24T16:33:40.9051765Z Packets:                                                                                   133436/? [00:14<00:00, 18873.09it/s][A
2025-02-24T16:33:40.9051772Z 
2025-02-24T16:33:40.9051994Z Packets:                                                                                   137885/? [00:14<00:00, 20976.68it/s][A
2025-02-24T16:33:40.9051998Z 
2025-02-24T16:33:40.9052216Z Packets:                                                                                   142049/? [00:14<00:00, 22804.24it/s][A
2025-02-24T16:33:40.9052220Z 
2025-02-24T16:33:40.9052444Z Packets:                                                                                   145941/? [00:14<00:00, 24809.22it/s][A
2025-02-24T16:33:40.9052448Z 
2025-02-24T16:33:40.9052670Z Packets:                                                                                   149717/? [00:15<00:00, 26712.79it/s][A
2025-02-24T16:33:40.9052809Z 
2025-02-24T16:33:40.9053033Z Packets:                                                                                   153414/? [00:15<00:00, 28437.20it/s][A
2025-02-24T16:33:40.9053038Z 
2025-02-24T16:33:40.9053266Z Packets:                                                                                   157056/? [00:15<00:00, 29886.12it/s][A
2025-02-24T16:33:40.9053270Z 
2025-02-24T16:33:40.9053494Z Packets:                                                                                   160651/? [00:15<00:00, 31120.53it/s][A
2025-02-24T16:33:40.9053498Z 
2025-02-24T16:33:40.9053715Z Packets:                                                                                   164219/? [00:15<00:00, 32138.73it/s][A
2025-02-24T16:33:40.9053719Z 
2025-02-24T16:33:40.9053940Z Packets:                                                                                   167787/? [00:15<00:00, 33067.99it/s][A
2025-02-24T16:33:40.9053948Z 
2025-02-24T16:33:40.9054171Z Packets:                                                                                   171344/? [00:15<00:00, 33580.65it/s][A
2025-02-24T16:33:40.9054175Z 
2025-02-24T16:33:40.9054392Z Packets:                                                                                   174881/? [00:15<00:00, 33918.08it/s][A
2025-02-24T16:33:40.9054472Z 
2025-02-24T16:33:40.9054698Z Packets:                                                                                   178403/? [00:15<00:00, 34287.78it/s][A
2025-02-24T16:33:40.9054702Z 
2025-02-24T16:33:40.9054927Z Packets:                                                                                   181948/? [00:15<00:00, 34621.40it/s][A
2025-02-24T16:33:40.9054931Z 
2025-02-24T16:33:40.9055150Z Packets:                                                                                   185476/? [00:16<00:00, 34753.99it/s][A
2025-02-24T16:33:40.9055154Z 
2025-02-24T16:33:40.9055380Z Packets:                                                                                   188998/? [00:16<00:00, 34871.10it/s][A
2025-02-24T16:33:40.9055384Z 
2025-02-24T16:33:40.9055601Z Packets:                                                                                   192542/? [00:16<00:00, 35038.01it/s][A
2025-02-24T16:33:40.9055614Z 
2025-02-24T16:33:40.9055831Z Packets:                                                                                   196069/? [00:16<00:00, 34924.52it/s][A
2025-02-24T16:33:40.9055835Z 
2025-02-24T16:33:40.9056057Z Packets:                                                                                   199578/? [00:16<00:00, 34902.14it/s][A
2025-02-24T16:33:40.9056062Z 
2025-02-24T16:33:40.9056279Z Packets:                                                                                   203095/? [00:16<00:00, 34980.58it/s][A
2025-02-24T16:33:40.9056429Z Iterations:                                                                                41/? [08:01<00:00,  5.54s/it]
2025-02-24T16:33:40.9056437Z 
2025-02-24T16:33:40.9056664Z Packets:                                                                                   204009/? [00:16<00:00, 34980.58it/s][A
2025-02-24T16:33:40.9056815Z ------------------------------ Captured log call -------------------------------
2025-02-24T16:33:40.9057468Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:33:40.9057700Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T16:33:40.9057810Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T16:33:40.9057909Z 	Simulation finished in 0 iterations 
2025-02-24T16:33:40.9057993Z 	Simulation took 0.00 s
2025-02-24T16:33:40.9057997Z 
2025-02-24T16:33:40.9058108Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:33:40.9058195Z 	Starting iteration 1 of 1
2025-02-24T16:33:40.9058427Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:33:40.9058524Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-02-24T16:33:40.9058615Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-02-24T16:33:40.9058711Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.9058862Z __________________________ test_boundary_interactions __________________________
2025-02-24T16:33:40.9058869Z 
2025-02-24T16:33:40.9059666Z rpacket_tracker = ListType[instance.jitclass.RPacketTracker#7ff51c6cbf50<seed:int64,index:int64,status:array(int64, 1d, A),r:array(float...PacketTracker object at 0x7ff4ea3f0490>, <numba.experimental.jitclass.boxing.RPacketTracker object at 0x7ff50f9d6a40>])
2025-02-24T16:33:40.9059941Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff4e57122d0>
2025-02-24T16:33:40.9059946Z 
2025-02-24T16:33:40.9060109Z     def test_boundary_interactions(rpacket_tracker, regression_data):
2025-02-24T16:33:40.9060211Z         no_of_packets = len(rpacket_tracker)
2025-02-24T16:33:40.9060281Z     
2025-02-24T16:33:40.9060380Z         # Hard coding the number of columns
2025-02-24T16:33:40.9060531Z         # Based on the largest size of boundary_interaction array (60)
2025-02-24T16:33:40.9060636Z         obtained_boundary_interaction = np.full(
2025-02-24T16:33:40.9060727Z             (no_of_packets, 64),
2025-02-24T16:33:40.9060908Z             [-1],
2025-02-24T16:33:40.9061049Z             dtype=rpacket_tracker[0].boundary_interaction.dtype,
2025-02-24T16:33:40.9061121Z         )
2025-02-24T16:33:40.9061193Z     
2025-02-24T16:33:40.9061311Z         for i, tracker in enumerate(rpacket_tracker):
2025-02-24T16:33:40.9061407Z             obtained_boundary_interaction[
2025-02-24T16:33:40.9061518Z                 i, : tracker.boundary_interaction.size
2025-02-24T16:33:40.9061611Z             ] = tracker.boundary_interaction
2025-02-24T16:33:40.9061683Z     
2025-02-24T16:33:40.9061839Z         expected_boundary_interaction = regression_data.sync_ndarray(
2025-02-24T16:33:40.9061942Z             obtained_boundary_interaction
2025-02-24T16:33:40.9062015Z         )
2025-02-24T16:33:40.9062102Z >       npt.assert_array_equal(
2025-02-24T16:33:40.9062266Z             obtained_boundary_interaction, expected_boundary_interaction
2025-02-24T16:33:40.9062336Z         )
2025-02-24T16:33:40.9062340Z 
2025-02-24T16:33:40.9062521Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:154: 
2025-02-24T16:33:40.9062642Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9062647Z 
2025-02-24T16:33:40.9062872Z args = (<built-in function eq>, array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:33:40.9062980Z         (-1, -1, -1), (-...-1, -1, -1), (-1, -1, -1)]],
2025-02-24T16:33:40.9063160Z       dtype=[('event_id', '<i8'), ('current_shell_id', '<i8'), ('next_shell_id', '<i8')]))
2025-02-24T16:33:40.9063359Z kwds = {'err_msg': '', 'header': 'Arrays are not equal', 'strict': False, 'verbose': True}
2025-02-24T16:33:40.9063366Z 
2025-02-24T16:33:40.9063445Z     @wraps(func)
2025-02-24T16:33:40.9063530Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9063621Z         with self._recreate_cm():
2025-02-24T16:33:40.9063710Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9063800Z E           AssertionError: 
2025-02-24T16:33:40.9063881Z E           Arrays are not equal
2025-02-24T16:33:40.9063960Z E           
2025-02-24T16:33:40.9064065Z E           (shapes (4000, 64), (4000, 62) mismatch)
2025-02-24T16:33:40.9064198Z E            x: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:33:40.9064294Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-02-24T16:33:40.9064402Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T16:33:40.9064530Z E            y: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:33:40.9064617Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-02-24T16:33:40.9064814Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T16:33:40.9064818Z 
2025-02-24T16:33:40.9065030Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9065194Z ______________________ test_montecarlo_main_loop_weighted ______________________
2025-02-24T16:33:40.9065202Z 
2025-02-24T16:33:40.9065883Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T16:33:40.9066165Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7ff4ff46a2d0>
2025-02-24T16:33:40.9066515Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T16:33:40.9066914Z simple_weighted_packet_source = <tardis.transport.montecarlo.weighted_packet_source.BlackBodyWeightedSource object at 0x7ff5121e0a70>
2025-02-24T16:33:40.9066922Z 
2025-02-24T16:33:40.9067022Z     def test_montecarlo_main_loop_weighted(
2025-02-24T16:33:40.9067117Z         montecarlo_main_loop_config,
2025-02-24T16:33:40.9067208Z         regression_data,
2025-02-24T16:33:40.9067387Z         atomic_dataset,
2025-02-24T16:33:40.9067603Z         simple_weighted_packet_source,
2025-02-24T16:33:40.9067671Z     ):
2025-02-24T16:33:40.9067780Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T16:33:40.9067953Z         montecarlo_main_loop_simulation_weighted = Simulation.from_config(
2025-02-24T16:33:40.9068051Z             montecarlo_main_loop_config,
2025-02-24T16:33:40.9068146Z             atom_data=atomic_dataset,
2025-02-24T16:33:40.9068238Z             virtual_packet_logging=False,
2025-02-24T16:33:40.9068327Z             legacy_mode_enabled=True,
2025-02-24T16:33:40.9068395Z         )
2025-02-24T16:33:40.9068557Z         montecarlo_main_loop_simulation_weighted.packet_source = (
2025-02-24T16:33:40.9068652Z             simple_weighted_packet_source
2025-02-24T16:33:40.9068725Z         )
2025-02-24T16:33:40.9068878Z         montecarlo_main_loop_simulation_weighted.run_convergence()
2025-02-24T16:33:40.9069013Z         montecarlo_main_loop_simulation_weighted.run_final()
2025-02-24T16:33:40.9069090Z     
2025-02-24T16:33:40.9069197Z         # Get the montecarlo simple regression data
2025-02-24T16:33:40.9069286Z         regression_data_dir = (
2025-02-24T16:33:40.9069462Z             regression_data.absolute_regression_data_dir.absolute().parents[0]
2025-02-24T16:33:40.9069610Z             / "test_montecarlo_main_loop/test_montecarlo_main_loop.h5"
2025-02-24T16:33:40.9069683Z         )
2025-02-24T16:33:40.9069842Z         expected_hdf_store = pd.HDFStore(regression_data_dir, mode="r")
2025-02-24T16:33:40.9069913Z     
2025-02-24T16:33:40.9070006Z         # Load compare data from refdata
2025-02-24T16:33:40.9070078Z     
2025-02-24T16:33:40.9070172Z         expected_nu = expected_hdf_store[
2025-02-24T16:33:40.9070303Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T16:33:40.9070377Z         ]
2025-02-24T16:33:40.9070477Z         expected_energy = expected_hdf_store[
2025-02-24T16:33:40.9070613Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T16:33:40.9070685Z         ]
2025-02-24T16:33:40.9070807Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T16:33:40.9070948Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T16:33:40.9071022Z         ]
2025-02-24T16:33:40.9071134Z         expected_j_estimator = expected_hdf_store[
2025-02-24T16:33:40.9071259Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T16:33:40.9071333Z         ]
2025-02-24T16:33:40.9071421Z         expected_hdf_store.close()
2025-02-24T16:33:40.9071510Z         transport_state = (
2025-02-24T16:33:40.9071688Z             montecarlo_main_loop_simulation_weighted.transport.transport_state
2025-02-24T16:33:40.9071880Z         )
2025-02-24T16:33:40.9072057Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T16:33:40.9072529Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T16:33:40.9072667Z         actual_nu_bar_estimator = (
2025-02-24T16:33:40.9072881Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-02-24T16:33:40.9072982Z         )
2025-02-24T16:33:40.9073229Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-02-24T16:33:40.9073419Z     
2025-02-24T16:33:40.9073538Z         # Compare
2025-02-24T16:33:40.9073687Z         npt.assert_allclose(
2025-02-24T16:33:40.9073870Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-2
2025-02-24T16:33:40.9074006Z         )
2025-02-24T16:33:40.9074222Z         npt.assert_allclose(actual_j_estimator, expected_j_estimator, rtol=1e-2)
2025-02-24T16:33:40.9074499Z >       npt.assert_allclose(actual_energy, expected_energy, rtol=1e-2)
2025-02-24T16:33:40.9074507Z 
2025-02-24T16:33:40.9074802Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py:65: 
2025-02-24T16:33:40.9074947Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9074952Z 
2025-02-24T16:33:40.9075591Z args = (<function assert_allclose.<locals>.compare at 0x7ff50fa907c0>, array([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-...ay([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-05, ...,
2025-02-24T16:33:40.9075803Z         1.03375439e-05, -9.75713585e-06,  1.01976360e-05]))
2025-02-24T16:33:40.9076094Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.01, atol=0', 'verbose': True}
2025-02-24T16:33:40.9076100Z 
2025-02-24T16:33:40.9076238Z     @wraps(func)
2025-02-24T16:33:40.9083742Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9083885Z         with self._recreate_cm():
2025-02-24T16:33:40.9083983Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9084089Z E           AssertionError: 
2025-02-24T16:33:40.9084211Z E           Not equal to tolerance rtol=0.01, atol=0
2025-02-24T16:33:40.9084289Z E           
2025-02-24T16:33:40.9084402Z E           Mismatched elements: 33 / 100000 (0.033%)
2025-02-24T16:33:40.9084507Z E           Max absolute difference: 2.00640487e-05
2025-02-24T16:33:40.9084615Z E           Max relative difference: 2.06329455
2025-02-24T16:33:40.9084790Z E            x: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T16:33:40.9084894Z E                  -9.757136e-06,  1.019764e-05])
2025-02-24T16:33:40.9085056Z E            y: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T16:33:40.9085151Z E                  -9.757136e-06,  1.019764e-05])
2025-02-24T16:33:40.9085156Z 
2025-02-24T16:33:40.9085379Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9085538Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T16:33:40.9085837Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:33:40.9086285Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:33:40.9086473Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9086696Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T16:33:40.9086860Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9086935Z 	
2025-02-24T16:33:40.9087031Z 	Simulation finished in 0 iterations 
2025-02-24T16:33:40.9087118Z 	Simulation took 0.00 s
2025-02-24T16:33:40.9087233Z  ([1mbase.py[0m:542)
2025-02-24T16:33:40.9087545Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9087617Z 	
2025-02-24T16:33:40.9087771Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T16:33:40.9087938Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9088178Z 	
2025-02-24T16:33:40.9088279Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T16:33:40.9088371Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T16:33:40.9088466Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.9088577Z  ([1mbase.py[0m:657)
2025-02-24T16:33:40.9088740Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T16:33:40.9088745Z 
2025-02-24T16:33:40.9088749Z 
2025-02-24T16:33:40.9088996Z Packets:                                                                                   0/100000 [00:00<?, ?it/s]            [A
2025-02-24T16:33:40.9089002Z 
2025-02-24T16:33:40.9089227Z Packets:                                                                                   0/100000 [00:00<?, ?it/s][A
2025-02-24T16:33:40.9089232Z 
2025-02-24T16:33:40.9089498Z Packets:   ████████▎                                                                       10409/100000 [00:00<00:00, 104085.63it/s][A
2025-02-24T16:33:40.9089512Z 
2025-02-24T16:33:40.9089768Z Packets:   █████████████████                                                               21273/100000 [00:00<00:00, 106763.04it/s][A
2025-02-24T16:33:40.9089774Z 
2025-02-24T16:33:40.9090038Z Packets:   █████████████████████████▋                                                      32099/100000 [00:00<00:00, 107442.64it/s][A
2025-02-24T16:33:40.9090180Z 
2025-02-24T16:33:40.9090454Z Packets:   ██████████████████████████████████▍                                             42989/100000 [00:00<00:00, 108016.08it/s][A
2025-02-24T16:33:40.9090460Z 
2025-02-24T16:33:40.9090737Z Packets:   ███████████████████████████████████████████                                     53791/100000 [00:00<00:00, 106674.33it/s][A
2025-02-24T16:33:40.9090742Z 
2025-02-24T16:33:40.9091024Z Packets:   ███████████████████████████████████████████████████▊                            64758/100000 [00:00<00:00, 107682.32it/s][A
2025-02-24T16:33:40.9091034Z 
2025-02-24T16:33:40.9091337Z Packets:   ████████████████████████████████████████████████████████████▌                   75687/100000 [00:00<00:00, 108204.33it/s][A
2025-02-24T16:33:40.9091342Z 
2025-02-24T16:33:40.9091648Z Packets:   █████████████████████████████████████████████████████████████████████▍          86746/100000 [00:00<00:00, 108960.12it/s][A
2025-02-24T16:33:40.9091667Z 
2025-02-24T16:33:40.9091975Z Packets:   ██████████████████████████████████████████████████████████████████████████████▏ 97698/100000 [00:00<00:00, 109131.47it/s][A
2025-02-24T16:33:40.9092143Z Iterations:                                                                                45/? [08:52<00:00,  8.04s/it]
2025-02-24T16:33:40.9092149Z 
2025-02-24T16:33:40.9092475Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉99999/100000 [00:00<00:00, 109131.47it/s][A
2025-02-24T16:33:40.9092632Z ------------------------------ Captured log call -------------------------------
2025-02-24T16:33:40.9093238Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:33:40.9093468Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T16:33:40.9093579Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T16:33:40.9093779Z 	Simulation finished in 0 iterations 
2025-02-24T16:33:40.9093931Z 	Simulation took 0.00 s
2025-02-24T16:33:40.9093940Z 
2025-02-24T16:33:40.9094129Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:33:40.9094287Z 	Starting iteration 1 of 1
2025-02-24T16:33:40.9094472Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:33:40.9094650Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T16:33:40.9094824Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T16:33:40.9094995Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:33:40.9095373Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] __
2025-02-24T16:33:40.9095390Z 
2025-02-24T16:33:40.9095864Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f30ad0>
2025-02-24T16:33:40.9096383Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>
2025-02-24T16:33:40.9097050Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data0-plot_data]>>
2025-02-24T16:33:40.9097206Z attribute = 'plot_data'
2025-02-24T16:33:40.9097216Z 
2025-02-24T16:33:40.9097516Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.9097672Z         "attribute",
2025-02-24T16:33:40.9097797Z         [
2025-02-24T16:33:40.9097934Z             "plot_data",
2025-02-24T16:33:40.9098080Z             "plot_colors",
2025-02-24T16:33:40.9098230Z             "new_bin_edges",
2025-02-24T16:33:40.9098359Z         ],
2025-02-24T16:33:40.9098475Z     )
2025-02-24T16:33:40.9098637Z     def test_prepare_plot_data(
2025-02-24T16:33:40.9098768Z         self,
2025-02-24T16:33:40.9098931Z         plotter_prepare_plot_data,
2025-02-24T16:33:40.9099063Z         request,
2025-02-24T16:33:40.9099190Z         attribute,
2025-02-24T16:33:40.9099312Z     ):
2025-02-24T16:33:40.9099432Z         """
2025-02-24T16:33:40.9099675Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:33:40.9099848Z     
2025-02-24T16:33:40.9099991Z         Parameters:
2025-02-24T16:33:40.9100125Z         -----------
2025-02-24T16:33:40.9100452Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:33:40.9100626Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9100911Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:33:40.9101043Z         """
2025-02-24T16:33:40.9101233Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9101476Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:33:40.9101757Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:33:40.9102046Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:33:40.9102305Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:33:40.9102527Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:33:40.9102701Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:33:40.9102833Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:33:40.9102838Z 
2025-02-24T16:33:40.9102986Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:33:40.9103109Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9103114Z 
2025-02-24T16:33:40.9103589Z args = (<function assert_allclose.<locals>.compare at 0x7ff502fef880>, array([12955.14169787, 12955.14169787, 12955.14169787,...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-02-24T16:33:40.9103846Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-02-24T16:33:40.9104095Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9104101Z 
2025-02-24T16:33:40.9104182Z     @wraps(func)
2025-02-24T16:33:40.9104273Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9104363Z         with self._recreate_cm():
2025-02-24T16:33:40.9104457Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9104548Z E           AssertionError: 
2025-02-24T16:33:40.9104657Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9104732Z E           
2025-02-24T16:33:40.9104824Z E           (shapes (508,), (515,) mismatch)
2025-02-24T16:33:40.9104968Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:33:40.9105088Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:33:40.9105216Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:33:40.9105355Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:33:40.9105466Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:33:40.9105591Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:33:40.9105703Z 
2025-02-24T16:33:40.9105937Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9106116Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.9106402Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9106669Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:33:40.9106823Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.9107125Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:33:40.9107555Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] __
2025-02-24T16:33:40.9107562Z 
2025-02-24T16:33:40.9107834Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f30f50>
2025-02-24T16:33:40.9108113Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>
2025-02-24T16:33:40.9108390Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data1-plot_data]>>
2025-02-24T16:33:40.9108472Z attribute = 'plot_data'
2025-02-24T16:33:40.9108482Z 
2025-02-24T16:33:40.9108574Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.9108654Z         "attribute",
2025-02-24T16:33:40.9108725Z         [
2025-02-24T16:33:40.9108809Z             "plot_data",
2025-02-24T16:33:40.9108886Z             "plot_colors",
2025-02-24T16:33:40.9108971Z             "new_bin_edges",
2025-02-24T16:33:40.9109039Z         ],
2025-02-24T16:33:40.9109116Z     )
2025-02-24T16:33:40.9109207Z     def test_prepare_plot_data(
2025-02-24T16:33:40.9109277Z         self,
2025-02-24T16:33:40.9109372Z         plotter_prepare_plot_data,
2025-02-24T16:33:40.9109443Z         request,
2025-02-24T16:33:40.9109516Z         attribute,
2025-02-24T16:33:40.9109581Z     ):
2025-02-24T16:33:40.9109651Z         """
2025-02-24T16:33:40.9109794Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:33:40.9109862Z     
2025-02-24T16:33:40.9109942Z         Parameters:
2025-02-24T16:33:40.9110015Z         -----------
2025-02-24T16:33:40.9110197Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:33:40.9110293Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9110463Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:33:40.9110537Z         """
2025-02-24T16:33:40.9110644Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9110883Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:33:40.9111227Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:33:40.9111392Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:33:40.9111539Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:33:40.9111668Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:33:40.9111802Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:33:40.9111920Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:33:40.9111926Z 
2025-02-24T16:33:40.9112074Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:33:40.9112187Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9112191Z 
2025-02-24T16:33:40.9112630Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e0684cc0>, array([12955.14169787, 12955.14169787, 12955.14169787,...2507.1391254 , 12507.1391254 , 11042.97481792,
2025-02-24T16:33:40.9112774Z        13068.12089331, 13068.12089331, 11398.23786534, 11111.20486813]))
2025-02-24T16:33:40.9113021Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9113026Z 
2025-02-24T16:33:40.9113216Z     @wraps(func)
2025-02-24T16:33:40.9113300Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9113391Z         with self._recreate_cm():
2025-02-24T16:33:40.9113484Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9113568Z E           AssertionError: 
2025-02-24T16:33:40.9113681Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9113751Z E           
2025-02-24T16:33:40.9113850Z E           (shapes (558,), (560,) mismatch)
2025-02-24T16:33:40.9113985Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:33:40.9114107Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:33:40.9114235Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:33:40.9114363Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:33:40.9114480Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:33:40.9114601Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:33:40.9114606Z 
2025-02-24T16:33:40.9114810Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9115020Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] __
2025-02-24T16:33:40.9115025Z 
2025-02-24T16:33:40.9115283Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f31190>
2025-02-24T16:33:40.9115563Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>
2025-02-24T16:33:40.9115828Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data2-plot_data]>>
2025-02-24T16:33:40.9115918Z attribute = 'plot_data'
2025-02-24T16:33:40.9115923Z 
2025-02-24T16:33:40.9116029Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.9116156Z         "attribute",
2025-02-24T16:33:40.9116284Z         [
2025-02-24T16:33:40.9116392Z             "plot_data",
2025-02-24T16:33:40.9116477Z             "plot_colors",
2025-02-24T16:33:40.9116557Z             "new_bin_edges",
2025-02-24T16:33:40.9116631Z         ],
2025-02-24T16:33:40.9116704Z     )
2025-02-24T16:33:40.9116790Z     def test_prepare_plot_data(
2025-02-24T16:33:40.9116865Z         self,
2025-02-24T16:33:40.9116954Z         plotter_prepare_plot_data,
2025-02-24T16:33:40.9117029Z         request,
2025-02-24T16:33:40.9117101Z         attribute,
2025-02-24T16:33:40.9117174Z     ):
2025-02-24T16:33:40.9117392Z         """
2025-02-24T16:33:40.9117593Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:33:40.9117667Z     
2025-02-24T16:33:40.9117896Z         Parameters:
2025-02-24T16:33:40.9117975Z         -----------
2025-02-24T16:33:40.9118154Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:33:40.9118257Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9118422Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:33:40.9118492Z         """
2025-02-24T16:33:40.9118598Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9118734Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:33:40.9118885Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:33:40.9119042Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:33:40.9119196Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:33:40.9119322Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:33:40.9119444Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:33:40.9119564Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:33:40.9119569Z 
2025-02-24T16:33:40.9119712Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:33:40.9119826Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9119940Z 
2025-02-24T16:33:40.9120385Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e0684e00>, array([12079.52986884, 11966.99134279, 11263.63770779,...1064.78967159, 11163.13661084, 11172.32922889,
2025-02-24T16:33:40.9120520Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-02-24T16:33:40.9120767Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9120772Z 
2025-02-24T16:33:40.9120847Z     @wraps(func)
2025-02-24T16:33:40.9120934Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9121029Z         with self._recreate_cm():
2025-02-24T16:33:40.9121117Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9121207Z E           AssertionError: 
2025-02-24T16:33:40.9121317Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9121392Z E           
2025-02-24T16:33:40.9121485Z E           (shapes (147,), (136,) mismatch)
2025-02-24T16:33:40.9121627Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:33:40.9121747Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:33:40.9121865Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:33:40.9122008Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:33:40.9122118Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:33:40.9122242Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:33:40.9122249Z 
2025-02-24T16:33:40.9122449Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9122612Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.9122867Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9123124Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:33:40.9123277Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.9123643Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:33:40.9123938Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] __
2025-02-24T16:33:40.9123944Z 
2025-02-24T16:33:40.9124207Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f313d0>
2025-02-24T16:33:40.9124484Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>
2025-02-24T16:33:40.9124846Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data3-plot_data]>>
2025-02-24T16:33:40.9124927Z attribute = 'plot_data'
2025-02-24T16:33:40.9124933Z 
2025-02-24T16:33:40.9125025Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.9125106Z         "attribute",
2025-02-24T16:33:40.9125173Z         [
2025-02-24T16:33:40.9125255Z             "plot_data",
2025-02-24T16:33:40.9125332Z             "plot_colors",
2025-02-24T16:33:40.9125413Z             "new_bin_edges",
2025-02-24T16:33:40.9125480Z         ],
2025-02-24T16:33:40.9125551Z     )
2025-02-24T16:33:40.9125641Z     def test_prepare_plot_data(
2025-02-24T16:33:40.9125710Z         self,
2025-02-24T16:33:40.9125803Z         plotter_prepare_plot_data,
2025-02-24T16:33:40.9125874Z         request,
2025-02-24T16:33:40.9125950Z         attribute,
2025-02-24T16:33:40.9126017Z     ):
2025-02-24T16:33:40.9126090Z         """
2025-02-24T16:33:40.9126228Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:33:40.9126307Z     
2025-02-24T16:33:40.9126386Z         Parameters:
2025-02-24T16:33:40.9126458Z         -----------
2025-02-24T16:33:40.9126642Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:33:40.9126739Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9126992Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:33:40.9127061Z         """
2025-02-24T16:33:40.9127173Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9127518Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:33:40.9127669Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:33:40.9127837Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:33:40.9127984Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:33:40.9128115Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:33:40.9128238Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:33:40.9128357Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:33:40.9128362Z 
2025-02-24T16:33:40.9128507Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:33:40.9128622Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9128627Z 
2025-02-24T16:33:40.9129004Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e0685120>, array([12079.52986884, 11966.99134279, 11263.63770779,...210447, 12126.50399598,
2025-02-24T16:33:40.9129140Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-02-24T16:33:40.9129213Z        11042.97481792]))
2025-02-24T16:33:40.9129485Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9129498Z 
2025-02-24T16:33:40.9129627Z     @wraps(func)
2025-02-24T16:33:40.9129749Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9129844Z         with self._recreate_cm():
2025-02-24T16:33:40.9129934Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9130021Z E           AssertionError: 
2025-02-24T16:33:40.9130127Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9130206Z E           
2025-02-24T16:33:40.9130296Z E           (shapes (159,), (153,) mismatch)
2025-02-24T16:33:40.9130437Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:33:40.9130557Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:33:40.9130675Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:33:40.9130808Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:33:40.9130920Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:33:40.9131176Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:33:40.9131181Z 
2025-02-24T16:33:40.9131385Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9131595Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] __
2025-02-24T16:33:40.9131603Z 
2025-02-24T16:33:40.9131872Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f31640>
2025-02-24T16:33:40.9132151Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>
2025-02-24T16:33:40.9132419Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data4-plot_data]>>
2025-02-24T16:33:40.9132503Z attribute = 'plot_data'
2025-02-24T16:33:40.9132507Z 
2025-02-24T16:33:40.9132597Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.9132675Z         "attribute",
2025-02-24T16:33:40.9132742Z         [
2025-02-24T16:33:40.9132826Z             "plot_data",
2025-02-24T16:33:40.9132903Z             "plot_colors",
2025-02-24T16:33:40.9132985Z             "new_bin_edges",
2025-02-24T16:33:40.9133057Z         ],
2025-02-24T16:33:40.9133124Z     )
2025-02-24T16:33:40.9133213Z     def test_prepare_plot_data(
2025-02-24T16:33:40.9133282Z         self,
2025-02-24T16:33:40.9133488Z         plotter_prepare_plot_data,
2025-02-24T16:33:40.9133559Z         request,
2025-02-24T16:33:40.9133636Z         attribute,
2025-02-24T16:33:40.9133748Z     ):
2025-02-24T16:33:40.9133882Z         """
2025-02-24T16:33:40.9134046Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:33:40.9134114Z     
2025-02-24T16:33:40.9134192Z         Parameters:
2025-02-24T16:33:40.9134266Z         -----------
2025-02-24T16:33:40.9134445Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:33:40.9134540Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9134706Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:33:40.9134783Z         """
2025-02-24T16:33:40.9134888Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9135029Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:33:40.9135173Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:33:40.9135341Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:33:40.9135489Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:33:40.9135613Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:33:40.9135735Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:33:40.9135852Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:33:40.9135857Z 
2025-02-24T16:33:40.9136003Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:33:40.9136117Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9136128Z 
2025-02-24T16:33:40.9136597Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e0684e00>, array([12955.14169787, 12955.14169787, 12955.14169787,...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-02-24T16:33:40.9136701Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-02-24T16:33:40.9136951Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9136957Z 
2025-02-24T16:33:40.9137037Z     @wraps(func)
2025-02-24T16:33:40.9137123Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9137208Z         with self._recreate_cm():
2025-02-24T16:33:40.9137463Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9137554Z E           AssertionError: 
2025-02-24T16:33:40.9137666Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9137735Z E           
2025-02-24T16:33:40.9137828Z E           (shapes (508,), (515,) mismatch)
2025-02-24T16:33:40.9138096Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:33:40.9138211Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:33:40.9138332Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:33:40.9138464Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:33:40.9138582Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:33:40.9138698Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:33:40.9138708Z 
2025-02-24T16:33:40.9138909Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9139065Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.9139319Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9139667Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:33:40.9139846Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.9140152Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:33:40.9140496Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] __
2025-02-24T16:33:40.9140501Z 
2025-02-24T16:33:40.9140759Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f31880>
2025-02-24T16:33:40.9141040Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>
2025-02-24T16:33:40.9141308Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data5-plot_data]>>
2025-02-24T16:33:40.9141395Z attribute = 'plot_data'
2025-02-24T16:33:40.9141399Z 
2025-02-24T16:33:40.9141491Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.9141568Z         "attribute",
2025-02-24T16:33:40.9141640Z         [
2025-02-24T16:33:40.9141714Z             "plot_data",
2025-02-24T16:33:40.9141795Z             "plot_colors",
2025-02-24T16:33:40.9141877Z             "new_bin_edges",
2025-02-24T16:33:40.9141945Z         ],
2025-02-24T16:33:40.9142019Z     )
2025-02-24T16:33:40.9142108Z     def test_prepare_plot_data(
2025-02-24T16:33:40.9142182Z         self,
2025-02-24T16:33:40.9142269Z         plotter_prepare_plot_data,
2025-02-24T16:33:40.9142344Z         request,
2025-02-24T16:33:40.9142415Z         attribute,
2025-02-24T16:33:40.9142487Z     ):
2025-02-24T16:33:40.9142561Z         """
2025-02-24T16:33:40.9142694Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:33:40.9142766Z     
2025-02-24T16:33:40.9142839Z         Parameters:
2025-02-24T16:33:40.9142916Z         -----------
2025-02-24T16:33:40.9143091Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:33:40.9143195Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9143361Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:33:40.9143430Z         """
2025-02-24T16:33:40.9143538Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9143707Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:33:40.9143948Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:33:40.9144109Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:33:40.9144259Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:33:40.9144384Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:33:40.9144500Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:33:40.9144622Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:33:40.9144627Z 
2025-02-24T16:33:40.9144767Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:33:40.9144992Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9144997Z 
2025-02-24T16:33:40.9145472Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e06877e0>, array([13692.75973672, 11362.93720064, 12466.53861691,...), array([12467.89648692, 12467.89648692, 12357.74827994, ...,
2025-02-24T16:33:40.9145577Z        13068.12089331, 11398.23786534, 11111.20486813]))
2025-02-24T16:33:40.9145822Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9145827Z 
2025-02-24T16:33:40.9145904Z     @wraps(func)
2025-02-24T16:33:40.9145985Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9146072Z         with self._recreate_cm():
2025-02-24T16:33:40.9146156Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9146243Z E           AssertionError: 
2025-02-24T16:33:40.9146349Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9146428Z E           
2025-02-24T16:33:40.9146520Z E           (shapes (1466,), (1481,) mismatch)
2025-02-24T16:33:40.9146674Z E            x: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-02-24T16:33:40.9146764Z E                  11152.962595, 11172.044815])
2025-02-24T16:33:40.9146987Z E            y: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-02-24T16:33:40.9147073Z E                  11398.237865, 11111.204868])
2025-02-24T16:33:40.9147077Z 
2025-02-24T16:33:40.9147443Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9147613Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.9147862Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9148290Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:33:40.9148461Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.9148809Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T16:33:40.9149020Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] __
2025-02-24T16:33:40.9149028Z 
2025-02-24T16:33:40.9149290Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f31ac0>
2025-02-24T16:33:40.9149568Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>
2025-02-24T16:33:40.9149835Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data6-plot_data]>>
2025-02-24T16:33:40.9149915Z attribute = 'plot_data'
2025-02-24T16:33:40.9149924Z 
2025-02-24T16:33:40.9150014Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.9150093Z         "attribute",
2025-02-24T16:33:40.9150164Z         [
2025-02-24T16:33:40.9150246Z             "plot_data",
2025-02-24T16:33:40.9150323Z             "plot_colors",
2025-02-24T16:33:40.9150406Z             "new_bin_edges",
2025-02-24T16:33:40.9150473Z         ],
2025-02-24T16:33:40.9150545Z     )
2025-02-24T16:33:40.9150635Z     def test_prepare_plot_data(
2025-02-24T16:33:40.9150706Z         self,
2025-02-24T16:33:40.9150799Z         plotter_prepare_plot_data,
2025-02-24T16:33:40.9150869Z         request,
2025-02-24T16:33:40.9150945Z         attribute,
2025-02-24T16:33:40.9151013Z     ):
2025-02-24T16:33:40.9151087Z         """
2025-02-24T16:33:40.9151225Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:33:40.9151291Z     
2025-02-24T16:33:40.9151370Z         Parameters:
2025-02-24T16:33:40.9151444Z         -----------
2025-02-24T16:33:40.9151624Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:33:40.9151718Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9152138Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:33:40.9152219Z         """
2025-02-24T16:33:40.9152329Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9152473Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:33:40.9152618Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:33:40.9152783Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:33:40.9152929Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:33:40.9153054Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:33:40.9153175Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:33:40.9153293Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:33:40.9153298Z 
2025-02-24T16:33:40.9153445Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:33:40.9153560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9153564Z 
2025-02-24T16:33:40.9154007Z args = (<function assert_allclose.<locals>.compare at 0x7ff502fec040>, array([12079.52986884, 11966.99134279, 11263.63770779,...1064.78967159, 11163.13661084, 11172.32922889,
2025-02-24T16:33:40.9154263Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-02-24T16:33:40.9154505Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9154509Z 
2025-02-24T16:33:40.9154586Z     @wraps(func)
2025-02-24T16:33:40.9154671Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9154760Z         with self._recreate_cm():
2025-02-24T16:33:40.9154850Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9154934Z E           AssertionError: 
2025-02-24T16:33:40.9155048Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9155117Z E           
2025-02-24T16:33:40.9155216Z E           (shapes (147,), (136,) mismatch)
2025-02-24T16:33:40.9155351Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:33:40.9155471Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:33:40.9155593Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:33:40.9155726Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:33:40.9155843Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:33:40.9155960Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:33:40.9155964Z 
2025-02-24T16:33:40.9156166Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9156321Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.9156557Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9156810Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:33:40.9156959Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.9157433Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:33:40.9157699Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] __
2025-02-24T16:33:40.9157705Z 
2025-02-24T16:33:40.9158138Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f31ca0>
2025-02-24T16:33:40.9158630Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>
2025-02-24T16:33:40.9158935Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data7-plot_data]>>
2025-02-24T16:33:40.9159021Z attribute = 'plot_data'
2025-02-24T16:33:40.9159027Z 
2025-02-24T16:33:40.9159255Z     @pytest.mark.parametrize(
2025-02-24T16:33:40.9159330Z         "attribute",
2025-02-24T16:33:40.9159402Z         [
2025-02-24T16:33:40.9159478Z             "plot_data",
2025-02-24T16:33:40.9159562Z             "plot_colors",
2025-02-24T16:33:40.9159639Z             "new_bin_edges",
2025-02-24T16:33:40.9159712Z         ],
2025-02-24T16:33:40.9159785Z     )
2025-02-24T16:33:40.9159870Z     def test_prepare_plot_data(
2025-02-24T16:33:40.9159944Z         self,
2025-02-24T16:33:40.9160034Z         plotter_prepare_plot_data,
2025-02-24T16:33:40.9160111Z         request,
2025-02-24T16:33:40.9160183Z         attribute,
2025-02-24T16:33:40.9160254Z     ):
2025-02-24T16:33:40.9160325Z         """
2025-02-24T16:33:40.9160461Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:33:40.9160533Z     
2025-02-24T16:33:40.9160608Z         Parameters:
2025-02-24T16:33:40.9160685Z         -----------
2025-02-24T16:33:40.9160858Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:33:40.9160963Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9161123Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:33:40.9161196Z         """
2025-02-24T16:33:40.9161305Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9161564Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:33:40.9161713Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:33:40.9161868Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:33:40.9162022Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:33:40.9162145Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:33:40.9162264Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:33:40.9162385Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:33:40.9162393Z 
2025-02-24T16:33:40.9162533Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:33:40.9162648Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9162652Z 
2025-02-24T16:33:40.9163027Z args = (<function assert_allclose.<locals>.compare at 0x7ff502fec400>, array([12466.53861691, 14269.7609746 , 11910.79400472,...210447, 12126.50399598,
2025-02-24T16:33:40.9163203Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-02-24T16:33:40.9163335Z        11042.97481792]))
2025-02-24T16:33:40.9163747Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9163754Z 
2025-02-24T16:33:40.9163880Z     @wraps(func)
2025-02-24T16:33:40.9164023Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9164125Z         with self._recreate_cm():
2025-02-24T16:33:40.9164218Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9164301Z E           AssertionError: 
2025-02-24T16:33:40.9164417Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9164487Z E           
2025-02-24T16:33:40.9164583Z E           (shapes (379,), (381,) mismatch)
2025-02-24T16:33:40.9164723Z E            x: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-02-24T16:33:40.9164839Z E                  11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-02-24T16:33:40.9164967Z E                  14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-02-24T16:33:40.9165097Z E            y: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-02-24T16:33:40.9165209Z E                  13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-02-24T16:33:40.9165326Z E                  11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-02-24T16:33:40.9165336Z 
2025-02-24T16:33:40.9165533Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9165691Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.9166039Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9166311Z 	['O III', 'Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:33:40.9166457Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.9166777Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV'] were not found in the provided wavelength range.
2025-02-24T16:33:40.9167116Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _______
2025-02-24T16:33:40.9167125Z 
2025-02-24T16:33:40.9167701Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f30800>
2025-02-24T16:33:40.9168121Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7ff502fae840>
2025-02-24T16:33:40.9168611Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>)
2025-02-24T16:33:40.9168859Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl0]>>
2025-02-24T16:33:40.9168864Z 
2025-02-24T16:33:40.9168954Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9169270Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T16:33:40.9169342Z     ):
2025-02-24T16:33:40.9169413Z         """
2025-02-24T16:33:40.9169541Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:33:40.9169612Z     
2025-02-24T16:33:40.9169736Z         Compares generated plot data with regression data.
2025-02-24T16:33:40.9169806Z     
2025-02-24T16:33:40.9169879Z         Parameters:
2025-02-24T16:33:40.9169955Z         -----------
2025-02-24T16:33:40.9170112Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T16:33:40.9170272Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T16:33:40.9170376Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9170446Z         """
2025-02-24T16:33:40.9170588Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T16:33:40.9170772Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9171061Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T16:33:40.9171312Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:33:40.9171473Z             expected_values = expected.get(
2025-02-24T16:33:40.9171590Z                 "plot_data_hdf/" + item
2025-02-24T16:33:40.9171676Z             ).values.flatten()
2025-02-24T16:33:40.9171814Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T16:33:40.9171882Z     
2025-02-24T16:33:40.9172017Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:33:40.9172115Z                 np.testing.assert_allclose(
2025-02-24T16:33:40.9172203Z                     expected_values,
2025-02-24T16:33:40.9172291Z                     actual_values,
2025-02-24T16:33:40.9172367Z                     rtol=0.3,
2025-02-24T16:33:40.9172449Z                     atol=3,
2025-02-24T16:33:40.9172517Z                 )
2025-02-24T16:33:40.9172592Z             else:
2025-02-24T16:33:40.9172734Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:33:40.9172801Z     
2025-02-24T16:33:40.9172912Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T16:33:40.9173032Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T16:33:40.9173135Z             if isinstance(data.get_label(), str):
2025-02-24T16:33:40.9173212Z                 assert (
2025-02-24T16:33:40.9173335Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T16:33:40.9173425Z                     == data.get_label()
2025-02-24T16:33:40.9173493Z                 )
2025-02-24T16:33:40.9173588Z             if isinstance(data, Line2D):
2025-02-24T16:33:40.9173801Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9173892Z                     data.get_xydata(),
2025-02-24T16:33:40.9174028Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T16:33:40.9174107Z                     rtol=0.3,
2025-02-24T16:33:40.9174189Z                     atol=3,
2025-02-24T16:33:40.9174257Z                 )
2025-02-24T16:33:40.9174261Z 
2025-02-24T16:33:40.9174409Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T16:33:40.9174522Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9174527Z 
2025-02-24T16:33:40.9174778Z args = (<function assert_allclose.<locals>.compare at 0x7ff4de914d60>, array([[1.10e+04, 1.67e+02],
2025-02-24T16:33:40.9174861Z        [1.19e+04, 1.67e+0...,
2025-02-24T16:33:40.9174937Z        [1.82e+04, 0.00e+00],
2025-02-24T16:33:40.9175015Z        [1.91e+04, 0.00e+00],
2025-02-24T16:33:40.9175092Z        [1.91e+04, 0.00e+00],
2025-02-24T16:33:40.9175172Z        [2.00e+04, 0.00e+00]]))
2025-02-24T16:33:40.9175409Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:33:40.9175414Z 
2025-02-24T16:33:40.9175502Z     @wraps(func)
2025-02-24T16:33:40.9175657Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9175912Z         with self._recreate_cm():
2025-02-24T16:33:40.9176064Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9176202Z E           AssertionError: 
2025-02-24T16:33:40.9176378Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:40.9176500Z E           
2025-02-24T16:33:40.9176610Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T16:33:40.9176708Z E           Max absolute difference: 22.
2025-02-24T16:33:40.9176797Z E           Max relative difference: 0.8
2025-02-24T16:33:40.9176889Z E            x: array([[1.10e+04, 1.67e+02],
2025-02-24T16:33:40.9176967Z E                  [1.19e+04, 1.67e+02],
2025-02-24T16:33:40.9177058Z E                  [1.19e+04, 7.60e+01],...
2025-02-24T16:33:40.9177143Z E            y: array([[1.10e+04, 1.89e+02],
2025-02-24T16:33:40.9177227Z E                  [1.19e+04, 1.89e+02],
2025-02-24T16:33:40.9177459Z E                  [1.19e+04, 8.20e+01],...
2025-02-24T16:33:40.9177465Z 
2025-02-24T16:33:40.9177677Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9177838Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.9178087Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9178523Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:420)
2025-02-24T16:33:40.9178681Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.9179114Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:420 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-02-24T16:33:40.9179478Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _______
2025-02-24T16:33:40.9179487Z 
2025-02-24T16:33:40.9179933Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f321e0>
2025-02-24T16:33:40.9180341Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7ff4ea4586b0>
2025-02-24T16:33:40.9180829Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>)
2025-02-24T16:33:40.9181070Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl1]>>
2025-02-24T16:33:40.9181075Z 
2025-02-24T16:33:40.9181167Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9181324Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T16:33:40.9181528Z     ):
2025-02-24T16:33:40.9181606Z         """
2025-02-24T16:33:40.9181735Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:33:40.9181807Z     
2025-02-24T16:33:40.9181932Z         Compares generated plot data with regression data.
2025-02-24T16:33:40.9182003Z     
2025-02-24T16:33:40.9182078Z         Parameters:
2025-02-24T16:33:40.9182164Z         -----------
2025-02-24T16:33:40.9182324Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T16:33:40.9182474Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T16:33:40.9182605Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9182730Z         """
2025-02-24T16:33:40.9182894Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T16:33:40.9183072Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9183359Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T16:33:40.9183601Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:33:40.9183706Z             expected_values = expected.get(
2025-02-24T16:33:40.9183800Z                 "plot_data_hdf/" + item
2025-02-24T16:33:40.9183884Z             ).values.flatten()
2025-02-24T16:33:40.9184019Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T16:33:40.9184211Z     
2025-02-24T16:33:40.9184341Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:33:40.9184439Z                 np.testing.assert_allclose(
2025-02-24T16:33:40.9184522Z                     expected_values,
2025-02-24T16:33:40.9184607Z                     actual_values,
2025-02-24T16:33:40.9184684Z                     rtol=0.3,
2025-02-24T16:33:40.9184765Z                     atol=3,
2025-02-24T16:33:40.9184836Z                 )
2025-02-24T16:33:40.9184910Z             else:
2025-02-24T16:33:40.9185047Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:33:40.9185114Z     
2025-02-24T16:33:40.9185228Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T16:33:40.9185348Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T16:33:40.9185451Z             if isinstance(data.get_label(), str):
2025-02-24T16:33:40.9185527Z                 assert (
2025-02-24T16:33:40.9185650Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T16:33:40.9185744Z                     == data.get_label()
2025-02-24T16:33:40.9185813Z                 )
2025-02-24T16:33:40.9185908Z             if isinstance(data, Line2D):
2025-02-24T16:33:40.9185998Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9186087Z                     data.get_xydata(),
2025-02-24T16:33:40.9186221Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T16:33:40.9186301Z                     rtol=0.3,
2025-02-24T16:33:40.9186378Z                     atol=3,
2025-02-24T16:33:40.9186447Z                 )
2025-02-24T16:33:40.9186451Z 
2025-02-24T16:33:40.9186603Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T16:33:40.9186719Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9186723Z 
2025-02-24T16:33:40.9186973Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e4303240>, array([[1.10e+04, 1.67e+02],
2025-02-24T16:33:40.9187057Z        [1.19e+04, 1.67e+0...,
2025-02-24T16:33:40.9187134Z        [1.82e+04, 0.00e+00],
2025-02-24T16:33:40.9187212Z        [1.91e+04, 0.00e+00],
2025-02-24T16:33:40.9187437Z        [1.91e+04, 0.00e+00],
2025-02-24T16:33:40.9187524Z        [2.00e+04, 0.00e+00]]))
2025-02-24T16:33:40.9187762Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:33:40.9187775Z 
2025-02-24T16:33:40.9187848Z     @wraps(func)
2025-02-24T16:33:40.9187936Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9188021Z         with self._recreate_cm():
2025-02-24T16:33:40.9188111Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9188313Z E           AssertionError: 
2025-02-24T16:33:40.9188422Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:40.9188496Z E           
2025-02-24T16:33:40.9188591Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T16:33:40.9188686Z E           Max absolute difference: 22.
2025-02-24T16:33:40.9188779Z E           Max relative difference: 0.8
2025-02-24T16:33:40.9188871Z E            x: array([[1.10e+04, 1.67e+02],
2025-02-24T16:33:40.9188950Z E                  [1.19e+04, 1.67e+02],
2025-02-24T16:33:40.9189037Z E                  [1.19e+04, 7.60e+01],...
2025-02-24T16:33:40.9189127Z E            y: array([[1.10e+04, 1.89e+02],
2025-02-24T16:33:40.9189205Z E                  [1.19e+04, 1.89e+02],
2025-02-24T16:33:40.9189289Z E                  [1.19e+04, 8.20e+01],...
2025-02-24T16:33:40.9189293Z 
2025-02-24T16:33:40.9189497Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9189703Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _______
2025-02-24T16:33:40.9189710Z 
2025-02-24T16:33:40.9189973Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f325d0>
2025-02-24T16:33:40.9190272Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7ff4ff49e900>
2025-02-24T16:33:40.9191242Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>)
2025-02-24T16:33:40.9191559Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl4]>>
2025-02-24T16:33:40.9191565Z 
2025-02-24T16:33:40.9192568Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9192575Z 
2025-02-24T16:33:40.9193239Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply3__.h5
2025-02-24T16:33:40.9193251Z 
2025-02-24T16:33:40.9193573Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9193578Z 
2025-02-24T16:33:40.9194226Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply8__.h5
2025-02-24T16:33:40.9194235Z 
2025-02-24T16:33:40.9194551Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9194556Z 
2025-02-24T16:33:40.9195251Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data14__.h5
2025-02-24T16:33:40.9195257Z 
2025-02-24T16:33:40.9195644Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9195653Z 
2025-02-24T16:33:40.9196661Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply10__.h5
2025-02-24T16:33:40.9196670Z 
2025-02-24T16:33:40.9196979Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9196984Z 
2025-02-24T16:33:40.9197868Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/plasma/equilibrium/tests/test_rate_matrix/test_rate_matrix_solver__collisional_rate_solver0-radiative_transitions0__.h5
2025-02-24T16:33:40.9197877Z 
2025-02-24T16:33:40.9198192Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9198197Z 
2025-02-24T16:33:40.9199030Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data2__.h5
2025-02-24T16:33:40.9199037Z 
2025-02-24T16:33:40.9199545Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9199558Z 
2025-02-24T16:33:40.9200545Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data15__.h5
2025-02-24T16:33:40.9200552Z 
2025-02-24T16:33:40.9200859Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9200864Z 
2025-02-24T16:33:40.9201510Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply2__.h5
2025-02-24T16:33:40.9201520Z 
2025-02-24T16:33:40.9201834Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9201838Z 
2025-02-24T16:33:40.9202486Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply6__.h5
2025-02-24T16:33:40.9202632Z 
2025-02-24T16:33:40.9202940Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9202945Z 
2025-02-24T16:33:40.9203631Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data4__.h5
2025-02-24T16:33:40.9203636Z 
2025-02-24T16:33:40.9203946Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9203954Z 
2025-02-24T16:33:40.9205043Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data6__.h5
2025-02-24T16:33:40.9205058Z 
2025-02-24T16:33:40.9205428Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9205433Z 
2025-02-24T16:33:40.9206077Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply1__.h5
2025-02-24T16:33:40.9206082Z 
2025-02-24T16:33:40.9206384Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9206388Z 
2025-02-24T16:33:40.9207081Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data12__.h5
2025-02-24T16:33:40.9207086Z 
2025-02-24T16:33:40.9207499Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9207509Z 
2025-02-24T16:33:40.9208189Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data13__.h5
2025-02-24T16:33:40.9208194Z 
2025-02-24T16:33:40.9208505Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9208510Z 
2025-02-24T16:33:40.9209365Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl0__.h5
2025-02-24T16:33:40.9209534Z 
2025-02-24T16:33:40.9210009Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:40.9210014Z 
2025-02-24T16:33:40.9210666Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply15__.h5
2025-02-24T16:33:40.9210676Z 
2025-02-24T16:33:40.9210769Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9210931Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T16:33:40.9211005Z     ):
2025-02-24T16:33:40.9211074Z         """
2025-02-24T16:33:40.9211209Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:33:40.9211280Z     
2025-02-24T16:33:40.9211406Z         Compares generated plot data with regression data.
2025-02-24T16:33:40.9211475Z     
2025-02-24T16:33:40.9211555Z         Parameters:
2025-02-24T16:33:40.9211633Z         -----------
2025-02-24T16:33:40.9211792Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T16:33:40.9211955Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T16:33:40.9212056Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9212242Z         """
2025-02-24T16:33:40.9212339Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T16:33:40.9212445Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9212614Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T16:33:40.9212759Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:33:40.9212859Z             expected_values = expected.get(
2025-02-24T16:33:40.9212949Z                 "plot_data_hdf/" + item
2025-02-24T16:33:40.9213033Z             ).values.flatten()
2025-02-24T16:33:40.9213168Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T16:33:40.9213239Z     
2025-02-24T16:33:40.9213372Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:33:40.9213464Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9213550Z                     expected_values,
2025-02-24T16:33:40.9213636Z                     actual_values,
2025-02-24T16:33:40.9213717Z                     rtol=0.3,
2025-02-24T16:33:40.9213796Z                     atol=3,
2025-02-24T16:33:40.9213889Z                 )
2025-02-24T16:33:40.9213897Z 
2025-02-24T16:33:40.9214154Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-02-24T16:33:40.9214345Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9214358Z 
2025-02-24T16:33:40.9214995Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e46da660>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  1...]), array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:33:40.9215091Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T16:33:40.9215330Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:33:40.9215335Z 
2025-02-24T16:33:40.9215410Z     @wraps(func)
2025-02-24T16:33:40.9215497Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9215586Z         with self._recreate_cm():
2025-02-24T16:33:40.9215679Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9215761Z E           AssertionError: 
2025-02-24T16:33:40.9215868Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:40.9215939Z E           
2025-02-24T16:33:40.9216040Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:33:40.9216133Z E           Max absolute difference: 34
2025-02-24T16:33:40.9216230Z E           Max relative difference: 0.71428571
2025-02-24T16:33:40.9216377Z E            x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:33:40.9216467Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:33:40.9216704Z E            y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:33:40.9216791Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:33:40.9216801Z 
2025-02-24T16:33:40.9217006Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9217168Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.9217540Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9217797Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:33:40.9217947Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.9218257Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:33:40.9218459Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _______
2025-02-24T16:33:40.9218468Z 
2025-02-24T16:33:40.9218806Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f32690>
2025-02-24T16:33:40.9219341Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7ff4e82a9880>
2025-02-24T16:33:40.9220065Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>)
2025-02-24T16:33:40.9220317Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl5]>>
2025-02-24T16:33:40.9220322Z 
2025-02-24T16:33:40.9220412Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9220573Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T16:33:40.9220648Z     ):
2025-02-24T16:33:40.9220717Z         """
2025-02-24T16:33:40.9220850Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:33:40.9220925Z     
2025-02-24T16:33:40.9221050Z         Compares generated plot data with regression data.
2025-02-24T16:33:40.9221121Z     
2025-02-24T16:33:40.9221195Z         Parameters:
2025-02-24T16:33:40.9221273Z         -----------
2025-02-24T16:33:40.9221429Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T16:33:40.9221587Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T16:33:40.9221687Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9221756Z         """
2025-02-24T16:33:40.9221862Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T16:33:40.9221969Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9222138Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T16:33:40.9222286Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:33:40.9222385Z             expected_values = expected.get(
2025-02-24T16:33:40.9222479Z                 "plot_data_hdf/" + item
2025-02-24T16:33:40.9222564Z             ).values.flatten()
2025-02-24T16:33:40.9222697Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T16:33:40.9222764Z     
2025-02-24T16:33:40.9222898Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:33:40.9222997Z                 np.testing.assert_allclose(
2025-02-24T16:33:40.9223085Z                     expected_values,
2025-02-24T16:33:40.9223169Z                     actual_values,
2025-02-24T16:33:40.9223245Z                     rtol=0.3,
2025-02-24T16:33:40.9223327Z                     atol=3,
2025-02-24T16:33:40.9223397Z                 )
2025-02-24T16:33:40.9223471Z             else:
2025-02-24T16:33:40.9223604Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:33:40.9223677Z     
2025-02-24T16:33:40.9223790Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T16:33:40.9223910Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T16:33:40.9224134Z             if isinstance(data.get_label(), str):
2025-02-24T16:33:40.9224209Z                 assert (
2025-02-24T16:33:40.9224333Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T16:33:40.9224415Z                     == data.get_label()
2025-02-24T16:33:40.9224495Z                 )
2025-02-24T16:33:40.9224670Z             if isinstance(data, Line2D):
2025-02-24T16:33:40.9224826Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9224970Z                     data.get_xydata(),
2025-02-24T16:33:40.9225198Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T16:33:40.9225333Z                     rtol=0.3,
2025-02-24T16:33:40.9225460Z                     atol=3,
2025-02-24T16:33:40.9225557Z                 )
2025-02-24T16:33:40.9225562Z 
2025-02-24T16:33:40.9225717Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T16:33:40.9225830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9225839Z 
2025-02-24T16:33:40.9226091Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e750b560>, array([[1.10e+04, 2.72e+02],
2025-02-24T16:33:40.9226168Z        [1.19e+04, 2.72e+0...,
2025-02-24T16:33:40.9226249Z        [1.82e+04, 5.00e+00],
2025-02-24T16:33:40.9226328Z        [1.91e+04, 5.00e+00],
2025-02-24T16:33:40.9226509Z        [1.91e+04, 0.00e+00],
2025-02-24T16:33:40.9226589Z        [2.00e+04, 0.00e+00]]))
2025-02-24T16:33:40.9226828Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:33:40.9226833Z 
2025-02-24T16:33:40.9226912Z     @wraps(func)
2025-02-24T16:33:40.9226996Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9227079Z         with self._recreate_cm():
2025-02-24T16:33:40.9227169Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9227396Z E           AssertionError: 
2025-02-24T16:33:40.9227513Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:40.9227589Z E           
2025-02-24T16:33:40.9227690Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T16:33:40.9227783Z E           Max absolute difference: 34.
2025-02-24T16:33:40.9227881Z E           Max relative difference: 0.65
2025-02-24T16:33:40.9227975Z E            x: array([[1.10e+04, 2.72e+02],
2025-02-24T16:33:40.9228059Z E                  [1.19e+04, 2.72e+02],
2025-02-24T16:33:40.9228154Z E                  [1.19e+04, 1.10e+02],...
2025-02-24T16:33:40.9228240Z E            y: array([[1.10e+04, 3.06e+02],
2025-02-24T16:33:40.9228326Z E                  [1.19e+04, 3.06e+02],
2025-02-24T16:33:40.9228408Z E                  [1.19e+04, 1.18e+02],...
2025-02-24T16:33:40.9228418Z 
2025-02-24T16:33:40.9228628Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9228791Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.9229038Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9229378Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:33:40.9229532Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.9230167Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T16:33:40.9230535Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _______
2025-02-24T16:33:40.9230540Z 
2025-02-24T16:33:40.9230804Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f32b10>
2025-02-24T16:33:40.9231125Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7ff4fb1887a0>
2025-02-24T16:33:40.9231230Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9231384Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T16:33:40.9231680Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T16:33:40.9231885Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>)
2025-02-24T16:33:40.9232141Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply0]>>
2025-02-24T16:33:40.9232149Z 
2025-02-24T16:33:40.9232246Z     def test_generate_plot_ply(
2025-02-24T16:33:40.9232413Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9232491Z     ):
2025-02-24T16:33:40.9232561Z         """
2025-02-24T16:33:40.9232695Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:33:40.9232764Z     
2025-02-24T16:33:40.9232895Z         Compares generated plot data with regression data.
2025-02-24T16:33:40.9232966Z     
2025-02-24T16:33:40.9233045Z         Parameters:
2025-02-24T16:33:40.9233124Z         ----------
2025-02-24T16:33:40.9233283Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T16:33:40.9233428Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T16:33:40.9233525Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9233600Z         """
2025-02-24T16:33:40.9233694Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9233914Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9234097Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9234163Z     
2025-02-24T16:33:40.9234314Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:33:40.9234409Z             expected_values = expected.get(
2025-02-24T16:33:40.9234502Z                 "plot_data_hdf/" + item
2025-02-24T16:33:40.9234595Z             ).values.flatten()
2025-02-24T16:33:40.9234733Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T16:33:40.9234806Z     
2025-02-24T16:33:40.9234947Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:33:40.9235045Z                 np.testing.assert_allclose(
2025-02-24T16:33:40.9235130Z                     expected_values,
2025-02-24T16:33:40.9235216Z                     actual_values,
2025-02-24T16:33:40.9235364Z                     rtol=0.3,
2025-02-24T16:33:40.9235496Z                     atol=3,
2025-02-24T16:33:40.9235617Z                 )
2025-02-24T16:33:40.9235731Z             else:
2025-02-24T16:33:40.9235962Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:33:40.9236133Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9236262Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9236355Z             if data.stackgroup:
2025-02-24T16:33:40.9236430Z                 assert (
2025-02-24T16:33:40.9236520Z                     data.stackgroup
2025-02-24T16:33:40.9236596Z                     == getattr(
2025-02-24T16:33:40.9236710Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9236815Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9236897Z                     ).decode()
2025-02-24T16:33:40.9236972Z                 )
2025-02-24T16:33:40.9237052Z             if data.name:
2025-02-24T16:33:40.9237134Z                 assert (
2025-02-24T16:33:40.9237214Z                     data.name
2025-02-24T16:33:40.9237475Z                     == getattr(
2025-02-24T16:33:40.9237598Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9237697Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9237773Z                     ).decode()
2025-02-24T16:33:40.9237849Z                 )
2025-02-24T16:33:40.9237947Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9238020Z                 data.x,
2025-02-24T16:33:40.9238134Z                 expected.get(group + "x").values.flatten(),
2025-02-24T16:33:40.9238211Z                 rtol=0.3,
2025-02-24T16:33:40.9238421Z                 atol=3,
2025-02-24T16:33:40.9238491Z             )
2025-02-24T16:33:40.9238586Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9238663Z                 data.y,
2025-02-24T16:33:40.9238767Z                 expected.get(group + "y").values.flatten(),
2025-02-24T16:33:40.9238847Z                 rtol=0.3,
2025-02-24T16:33:40.9238922Z                 atol=3,
2025-02-24T16:33:40.9238998Z             )
2025-02-24T16:33:40.9239002Z 
2025-02-24T16:33:40.9239147Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T16:33:40.9239268Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9239272Z 
2025-02-24T16:33:40.9239683Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e07db6a0>, array([167, 167,  76,  76,  34,  34,  18,  18,   3,   ...]), array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:33:40.9239767Z          0,   0,   0,   0,   0,   0,   0]))
2025-02-24T16:33:40.9240019Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:33:40.9240024Z 
2025-02-24T16:33:40.9240103Z     @wraps(func)
2025-02-24T16:33:40.9240186Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9240279Z         with self._recreate_cm():
2025-02-24T16:33:40.9240367Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9240576Z E           AssertionError: 
2025-02-24T16:33:40.9240682Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:40.9240760Z E           
2025-02-24T16:33:40.9240862Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:33:40.9240954Z E           Max absolute difference: 22
2025-02-24T16:33:40.9241052Z E           Max relative difference: 0.8
2025-02-24T16:33:40.9241189Z E            x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T16:33:40.9241289Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:33:40.9241419Z E            y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:33:40.9241515Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:33:40.9241519Z 
2025-02-24T16:33:40.9241727Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9241881Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.9242318Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9243010Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:522)
2025-02-24T16:33:40.9243171Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.9243609Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:522 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-02-24T16:33:40.9243807Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _______
2025-02-24T16:33:40.9243815Z 
2025-02-24T16:33:40.9244083Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f335f0>
2025-02-24T16:33:40.9244400Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7ff4fb1adee0>
2025-02-24T16:33:40.9244505Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9244664Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T16:33:40.9244800Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T16:33:40.9245008Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>)
2025-02-24T16:33:40.9245251Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply1]>>
2025-02-24T16:33:40.9245262Z 
2025-02-24T16:33:40.9245356Z     def test_generate_plot_ply(
2025-02-24T16:33:40.9245653Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9245909Z     ):
2025-02-24T16:33:40.9246034Z         """
2025-02-24T16:33:40.9246253Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:33:40.9246344Z     
2025-02-24T16:33:40.9246476Z         Compares generated plot data with regression data.
2025-02-24T16:33:40.9246551Z     
2025-02-24T16:33:40.9246637Z         Parameters:
2025-02-24T16:33:40.9246711Z         ----------
2025-02-24T16:33:40.9246876Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T16:33:40.9247013Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T16:33:40.9247117Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9247188Z         """
2025-02-24T16:33:40.9247470Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9247599Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9247776Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9247852Z     
2025-02-24T16:33:40.9247997Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:33:40.9248102Z             expected_values = expected.get(
2025-02-24T16:33:40.9248194Z                 "plot_data_hdf/" + item
2025-02-24T16:33:40.9248278Z             ).values.flatten()
2025-02-24T16:33:40.9248424Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T16:33:40.9248620Z     
2025-02-24T16:33:40.9248761Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:33:40.9248854Z                 np.testing.assert_allclose(
2025-02-24T16:33:40.9248944Z                     expected_values,
2025-02-24T16:33:40.9249030Z                     actual_values,
2025-02-24T16:33:40.9249108Z                     rtol=0.3,
2025-02-24T16:33:40.9249247Z                     atol=3,
2025-02-24T16:33:40.9249368Z                 )
2025-02-24T16:33:40.9249490Z             else:
2025-02-24T16:33:40.9249716Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:33:40.9249894Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9250068Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9250195Z             if data.stackgroup:
2025-02-24T16:33:40.9250278Z                 assert (
2025-02-24T16:33:40.9250365Z                     data.stackgroup
2025-02-24T16:33:40.9250452Z                     == getattr(
2025-02-24T16:33:40.9250560Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9250665Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9250750Z                     ).decode()
2025-02-24T16:33:40.9250820Z                 )
2025-02-24T16:33:40.9250903Z             if data.name:
2025-02-24T16:33:40.9250977Z                 assert (
2025-02-24T16:33:40.9251059Z                     data.name
2025-02-24T16:33:40.9251135Z                     == getattr(
2025-02-24T16:33:40.9251250Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9251348Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9251434Z                     ).decode()
2025-02-24T16:33:40.9251510Z                 )
2025-02-24T16:33:40.9251605Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9251685Z                 data.x,
2025-02-24T16:33:40.9251795Z                 expected.get(group + "x").values.flatten(),
2025-02-24T16:33:40.9251884Z                 rtol=0.3,
2025-02-24T16:33:40.9251957Z                 atol=3,
2025-02-24T16:33:40.9252036Z             )
2025-02-24T16:33:40.9252139Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9252211Z                 data.y,
2025-02-24T16:33:40.9252323Z                 expected.get(group + "y").values.flatten(),
2025-02-24T16:33:40.9252398Z                 rtol=0.3,
2025-02-24T16:33:40.9252481Z                 atol=3,
2025-02-24T16:33:40.9252550Z             )
2025-02-24T16:33:40.9252554Z 
2025-02-24T16:33:40.9252708Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T16:33:40.9252960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9252965Z 
2025-02-24T16:33:40.9253367Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e5723c40>, array([167, 167,  76,  76,  34,  34,  18,  18,   3,   ...]), array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:33:40.9253461Z          0,   0,   0,   0,   0,   0,   0]))
2025-02-24T16:33:40.9253707Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:33:40.9253716Z 
2025-02-24T16:33:40.9253789Z     @wraps(func)
2025-02-24T16:33:40.9253876Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9253962Z         with self._recreate_cm():
2025-02-24T16:33:40.9254082Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9254226Z E           AssertionError: 
2025-02-24T16:33:40.9254409Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:40.9254540Z E           
2025-02-24T16:33:40.9254698Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:33:40.9254852Z E           Max absolute difference: 22
2025-02-24T16:33:40.9255010Z E           Max relative difference: 0.8
2025-02-24T16:33:40.9255164Z E            x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T16:33:40.9255344Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:33:40.9255481Z E            y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:33:40.9255572Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:33:40.9255576Z 
2025-02-24T16:33:40.9255780Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9255989Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _______
2025-02-24T16:33:40.9255993Z 
2025-02-24T16:33:40.9256253Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f33a40>
2025-02-24T16:33:40.9256579Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7ff4fe6f5fd0>
2025-02-24T16:33:40.9256679Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9256830Z     'data': [{'line': {'color': 'rgb(127, 0, 0)', 'shape': 'hv', 'width': 2.5},
2025-02-24T16:33:40.9256972Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T16:33:40.9257176Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>)
2025-02-24T16:33:40.9257542Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply4]>>
2025-02-24T16:33:40.9257547Z 
2025-02-24T16:33:40.9257641Z     def test_generate_plot_ply(
2025-02-24T16:33:40.9257806Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9257880Z     ):
2025-02-24T16:33:40.9257949Z         """
2025-02-24T16:33:40.9258083Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:33:40.9258154Z     
2025-02-24T16:33:40.9258288Z         Compares generated plot data with regression data.
2025-02-24T16:33:40.9258363Z     
2025-02-24T16:33:40.9258440Z         Parameters:
2025-02-24T16:33:40.9258519Z         ----------
2025-02-24T16:33:40.9258678Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T16:33:40.9258827Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T16:33:40.9258926Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9259002Z         """
2025-02-24T16:33:40.9259101Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9259207Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9259386Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9259454Z     
2025-02-24T16:33:40.9259608Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:33:40.9259704Z             expected_values = expected.get(
2025-02-24T16:33:40.9259941Z                 "plot_data_hdf/" + item
2025-02-24T16:33:40.9260033Z             ).values.flatten()
2025-02-24T16:33:40.9260173Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T16:33:40.9260246Z     
2025-02-24T16:33:40.9260378Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:33:40.9260510Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9260657Z                     expected_values,
2025-02-24T16:33:40.9260797Z                     actual_values,
2025-02-24T16:33:40.9260931Z                     rtol=0.3,
2025-02-24T16:33:40.9261054Z                     atol=3,
2025-02-24T16:33:40.9261175Z                 )
2025-02-24T16:33:40.9261181Z 
2025-02-24T16:33:40.9261426Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-02-24T16:33:40.9261565Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9261569Z 
2025-02-24T16:33:40.9261989Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e5722f20>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  1...]), array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:33:40.9262075Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T16:33:40.9262319Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:33:40.9262449Z 
2025-02-24T16:33:40.9262526Z     @wraps(func)
2025-02-24T16:33:40.9262616Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9262709Z         with self._recreate_cm():
2025-02-24T16:33:40.9262799Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9262890Z E           AssertionError: 
2025-02-24T16:33:40.9262994Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:40.9263072Z E           
2025-02-24T16:33:40.9263169Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:33:40.9263266Z E           Max absolute difference: 34
2025-02-24T16:33:40.9263371Z E           Max relative difference: 0.71428571
2025-02-24T16:33:40.9263516Z E            x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:33:40.9263613Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:33:40.9263747Z E            y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:33:40.9263842Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:33:40.9263846Z 
2025-02-24T16:33:40.9264054Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9264206Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.9264460Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9264836Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:33:40.9265102Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.9265601Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:33:40.9265817Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _______
2025-02-24T16:33:40.9265821Z 
2025-02-24T16:33:40.9266084Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7ff511f33b00>
2025-02-24T16:33:40.9266397Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7ff50a2c5370>
2025-02-24T16:33:40.9266499Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9266653Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T16:33:40.9266785Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T16:33:40.9266992Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7ff4ea477cb0>)
2025-02-24T16:33:40.9267231Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply5]>>
2025-02-24T16:33:40.9267499Z 
2025-02-24T16:33:40.9267604Z     def test_generate_plot_ply(
2025-02-24T16:33:40.9267773Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9267847Z     ):
2025-02-24T16:33:40.9267924Z         """
2025-02-24T16:33:40.9268052Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:33:40.9268129Z     
2025-02-24T16:33:40.9268253Z         Compares generated plot data with regression data.
2025-02-24T16:33:40.9268327Z     
2025-02-24T16:33:40.9268402Z         Parameters:
2025-02-24T16:33:40.9268480Z         ----------
2025-02-24T16:33:40.9268643Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T16:33:40.9268780Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T16:33:40.9268884Z         request: Pytest's request fixture.
2025-02-24T16:33:40.9268953Z         """
2025-02-24T16:33:40.9269053Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9269163Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9269340Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9269413Z     
2025-02-24T16:33:40.9269557Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:33:40.9269659Z             expected_values = expected.get(
2025-02-24T16:33:40.9269915Z                 "plot_data_hdf/" + item
2025-02-24T16:33:40.9270065Z             ).values.flatten()
2025-02-24T16:33:40.9270295Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T16:33:40.9270416Z     
2025-02-24T16:33:40.9270635Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:33:40.9270794Z                 np.testing.assert_allclose(
2025-02-24T16:33:40.9270901Z                     expected_values,
2025-02-24T16:33:40.9270983Z                     actual_values,
2025-02-24T16:33:40.9271071Z                     rtol=0.3,
2025-02-24T16:33:40.9271151Z                     atol=3,
2025-02-24T16:33:40.9271233Z                 )
2025-02-24T16:33:40.9271309Z             else:
2025-02-24T16:33:40.9271446Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:33:40.9271552Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9271658Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9271753Z             if data.stackgroup:
2025-02-24T16:33:40.9271828Z                 assert (
2025-02-24T16:33:40.9271919Z                     data.stackgroup
2025-02-24T16:33:40.9272001Z                     == getattr(
2025-02-24T16:33:40.9272109Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9272214Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9272290Z                     ).decode()
2025-02-24T16:33:40.9272367Z                 )
2025-02-24T16:33:40.9272447Z             if data.name:
2025-02-24T16:33:40.9272528Z                 assert (
2025-02-24T16:33:40.9272618Z                     data.name
2025-02-24T16:33:40.9272693Z                     == getattr(
2025-02-24T16:33:40.9272802Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9272894Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9272976Z                     ).decode()
2025-02-24T16:33:40.9273050Z                 )
2025-02-24T16:33:40.9273148Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9273237Z                 data.x,
2025-02-24T16:33:40.9273432Z                 expected.get(group + "x").values.flatten(),
2025-02-24T16:33:40.9273564Z                 rtol=0.3,
2025-02-24T16:33:40.9273683Z                 atol=3,
2025-02-24T16:33:40.9273804Z             )
2025-02-24T16:33:40.9273957Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9274086Z                 data.y,
2025-02-24T16:33:40.9274256Z                 expected.get(group + "y").values.flatten(),
2025-02-24T16:33:40.9274334Z                 rtol=0.3,
2025-02-24T16:33:40.9274504Z                 atol=3,
2025-02-24T16:33:40.9274574Z             )
2025-02-24T16:33:40.9274579Z 
2025-02-24T16:33:40.9274731Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T16:33:40.9274848Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9274858Z 
2025-02-24T16:33:40.9275277Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e07db560>, array([272, 272, 110, 110,  62,  62,  33,  33,   7,   ...]), array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:33:40.9275364Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T16:33:40.9275602Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:33:40.9275607Z 
2025-02-24T16:33:40.9275686Z     @wraps(func)
2025-02-24T16:33:40.9275776Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9275861Z         with self._recreate_cm():
2025-02-24T16:33:40.9276057Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9276175Z E           AssertionError: 
2025-02-24T16:33:40.9276332Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:40.9276614Z E           
2025-02-24T16:33:40.9276781Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:33:40.9276987Z E           Max absolute difference: 34
2025-02-24T16:33:40.9277538Z E           Max relative difference: 0.65
2025-02-24T16:33:40.9277808Z E            x: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:33:40.9278104Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:33:40.9278319Z E            y: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:33:40.9278455Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:33:40.9278460Z 
2025-02-24T16:33:40.9278736Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9278906Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:33:40.9279309Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:33:40.9288903Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:33:40.9289148Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:33:40.9289800Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T16:33:40.9290207Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-02-24T16:33:40.9290215Z 
2025-02-24T16:33:40.9290497Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f373b0>
2025-02-24T16:33:40.9290935Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9291522Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4de6bc2f0>
2025-02-24T16:33:40.9291867Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data0]>>
2025-02-24T16:33:40.9291873Z 
2025-02-24T16:33:40.9291975Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9292056Z         self,
2025-02-24T16:33:40.9292156Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9292261Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9292333Z         request,
2025-02-24T16:33:40.9292409Z     ):
2025-02-24T16:33:40.9292517Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9292704Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9292792Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9292969Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9293056Z             plot_object = getattr(
2025-02-24T16:33:40.9293359Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9293430Z             )
2025-02-24T16:33:40.9293531Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9293696Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9293811Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9293905Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9294037Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9294106Z                 )
2025-02-24T16:33:40.9294111Z 
2025-02-24T16:33:40.9294266Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9294381Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9294389Z 
2025-02-24T16:33:40.9294853Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e72ae3e0>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T16:33:40.9294966Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9295213Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9295347Z 
2025-02-24T16:33:40.9295425Z     @wraps(func)
2025-02-24T16:33:40.9295513Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9295596Z         with self._recreate_cm():
2025-02-24T16:33:40.9295684Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9295767Z E           AssertionError: 
2025-02-24T16:33:40.9295932Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9296052Z E           
2025-02-24T16:33:40.9296219Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:40.9296387Z E           Max absolute difference: 4.3299331e-05
2025-02-24T16:33:40.9296545Z E           Max relative difference: 4.76021355
2025-02-24T16:33:40.9296817Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9296911Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9297062Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9297142Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9297151Z 
2025-02-24T16:33:40.9297493Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9297728Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-02-24T16:33:40.9297733Z 
2025-02-24T16:33:40.9298000Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f37aa0>
2025-02-24T16:33:40.9298310Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9298637Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff500bcd7f0>
2025-02-24T16:33:40.9298920Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data1]>>
2025-02-24T16:33:40.9298925Z 
2025-02-24T16:33:40.9299022Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9299090Z         self,
2025-02-24T16:33:40.9299192Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9299281Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9299353Z         request,
2025-02-24T16:33:40.9299423Z     ):
2025-02-24T16:33:40.9299603Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9299961Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9300100Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9300400Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9300523Z             plot_object = getattr(
2025-02-24T16:33:40.9300655Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9300865Z             )
2025-02-24T16:33:40.9300963Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9301126Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9301231Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9301334Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9301462Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9301536Z                 )
2025-02-24T16:33:40.9301541Z 
2025-02-24T16:33:40.9301690Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9301804Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9301809Z 
2025-02-24T16:33:40.9302283Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e72439c0>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T16:33:40.9302391Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9302629Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9302634Z 
2025-02-24T16:33:40.9302708Z     @wraps(func)
2025-02-24T16:33:40.9302898Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9302985Z         with self._recreate_cm():
2025-02-24T16:33:40.9303071Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9303157Z E           AssertionError: 
2025-02-24T16:33:40.9303335Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9303453Z E           
2025-02-24T16:33:40.9303621Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:40.9303782Z E           Max absolute difference: 4.3299331e-05
2025-02-24T16:33:40.9303941Z E           Max relative difference: 4.76021355
2025-02-24T16:33:40.9304191Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9304285Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9304432Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9304513Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9304517Z 
2025-02-24T16:33:40.9304723Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9304945Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-02-24T16:33:40.9304953Z 
2025-02-24T16:33:40.9305213Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f37f80>
2025-02-24T16:33:40.9305519Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9305840Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff500bcd910>
2025-02-24T16:33:40.9306115Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data2]>>
2025-02-24T16:33:40.9306123Z 
2025-02-24T16:33:40.9306219Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9306289Z         self,
2025-02-24T16:33:40.9306423Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9306578Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9306703Z         request,
2025-02-24T16:33:40.9306811Z     ):
2025-02-24T16:33:40.9306988Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9307481Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9307628Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9307856Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9307942Z             plot_object = getattr(
2025-02-24T16:33:40.9308072Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9308140Z             )
2025-02-24T16:33:40.9308384Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9308546Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9308651Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9308751Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9308883Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9308961Z                 )
2025-02-24T16:33:40.9308965Z 
2025-02-24T16:33:40.9309112Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9309231Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9309235Z 
2025-02-24T16:33:40.9309702Z args = (<function assert_allclose.<locals>.compare at 0x7ff5038fbc40>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T16:33:40.9309806Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9310056Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9310061Z 
2025-02-24T16:33:40.9310138Z     @wraps(func)
2025-02-24T16:33:40.9310221Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9310311Z         with self._recreate_cm():
2025-02-24T16:33:40.9310509Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9310599Z E           AssertionError: 
2025-02-24T16:33:40.9310706Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9310781Z E           
2025-02-24T16:33:40.9310884Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:40.9310984Z E           Max absolute difference: 4.3299331e-05
2025-02-24T16:33:40.9311085Z E           Max relative difference: 4.76021355
2025-02-24T16:33:40.9311234Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9311323Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9311468Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9311554Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9311560Z 
2025-02-24T16:33:40.9311766Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9311997Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-02-24T16:33:40.9312002Z 
2025-02-24T16:33:40.9312270Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f28740>
2025-02-24T16:33:40.9312578Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9312912Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff50fec57c0>
2025-02-24T16:33:40.9313193Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data3]>>
2025-02-24T16:33:40.9313200Z 
2025-02-24T16:33:40.9313293Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9313369Z         self,
2025-02-24T16:33:40.9313463Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9313558Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9313633Z         request,
2025-02-24T16:33:40.9313701Z     ):
2025-02-24T16:33:40.9313816Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9313998Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9314089Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9314265Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9314357Z             plot_object = getattr(
2025-02-24T16:33:40.9314488Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9314560Z             )
2025-02-24T16:33:40.9314667Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9314827Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9315033Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9315131Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9315263Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9315340Z                 )
2025-02-24T16:33:40.9315345Z 
2025-02-24T16:33:40.9315496Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9315618Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9315622Z 
2025-02-24T16:33:40.9316089Z args = (<function assert_allclose.<locals>.compare at 0x7ff5038fa3e0>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T16:33:40.9316204Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9316453Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9316462Z 
2025-02-24T16:33:40.9316534Z     @wraps(func)
2025-02-24T16:33:40.9316623Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9316711Z         with self._recreate_cm():
2025-02-24T16:33:40.9316805Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9316970Z E           AssertionError: 
2025-02-24T16:33:40.9317079Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9317155Z E           
2025-02-24T16:33:40.9317413Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:40.9317527Z E           Max absolute difference: 4.3299331e-05
2025-02-24T16:33:40.9317623Z E           Max relative difference: 4.76021355
2025-02-24T16:33:40.9317785Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9317875Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9318017Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9318110Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9318114Z 
2025-02-24T16:33:40.9318323Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9318555Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-02-24T16:33:40.9318564Z 
2025-02-24T16:33:40.9318839Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f29fa0>
2025-02-24T16:33:40.9319145Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9319476Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e62b5d00>
2025-02-24T16:33:40.9319751Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data4]>>
2025-02-24T16:33:40.9319763Z 
2025-02-24T16:33:40.9319855Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9319935Z         self,
2025-02-24T16:33:40.9320031Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9320124Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9320194Z         request,
2025-02-24T16:33:40.9320266Z     ):
2025-02-24T16:33:40.9320377Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9320561Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9320651Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9320827Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9320917Z             plot_object = getattr(
2025-02-24T16:33:40.9321044Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9321118Z             )
2025-02-24T16:33:40.9321221Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9321382Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9321626Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9321722Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9321853Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9321921Z                 )
2025-02-24T16:33:40.9321930Z 
2025-02-24T16:33:40.9322073Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9322193Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9322198Z 
2025-02-24T16:33:40.9322669Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e7262d40>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T16:33:40.9322780Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9323026Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9323031Z 
2025-02-24T16:33:40.9323109Z     @wraps(func)
2025-02-24T16:33:40.9323198Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9323282Z         with self._recreate_cm():
2025-02-24T16:33:40.9323377Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9323462Z E           AssertionError: 
2025-02-24T16:33:40.9323573Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9323981Z E           
2025-02-24T16:33:40.9324165Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:40.9324342Z E           Max absolute difference: 3.16368526e-05
2025-02-24T16:33:40.9324507Z E           Max relative difference: 178.93768705
2025-02-24T16:33:40.9324746Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9324883Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9325072Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9325162Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9325173Z 
2025-02-24T16:33:40.9325377Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9325603Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-02-24T16:33:40.9325608Z 
2025-02-24T16:33:40.9325872Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f2be30>
2025-02-24T16:33:40.9326191Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9326523Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e86fa9f0>
2025-02-24T16:33:40.9326799Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data5]>>
2025-02-24T16:33:40.9326804Z 
2025-02-24T16:33:40.9326904Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9326981Z         self,
2025-02-24T16:33:40.9327079Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9327176Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9327454Z         request,
2025-02-24T16:33:40.9327544Z     ):
2025-02-24T16:33:40.9327651Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9327837Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9327928Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9328104Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9328194Z             plot_object = getattr(
2025-02-24T16:33:40.9328319Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9328393Z             )
2025-02-24T16:33:40.9328490Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9328655Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9328765Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9328858Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9329158Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9329228Z                 )
2025-02-24T16:33:40.9329232Z 
2025-02-24T16:33:40.9329381Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9329493Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9329506Z 
2025-02-24T16:33:40.9329972Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e07db6a0>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T16:33:40.9330078Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9330334Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9330339Z 
2025-02-24T16:33:40.9330414Z     @wraps(func)
2025-02-24T16:33:40.9330506Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9330595Z         with self._recreate_cm():
2025-02-24T16:33:40.9330692Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9330777Z E           AssertionError: 
2025-02-24T16:33:40.9330891Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9330967Z E           
2025-02-24T16:33:40.9331066Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:40.9331282Z E           Max absolute difference: 3.16368526e-05
2025-02-24T16:33:40.9331381Z E           Max relative difference: 178.93768705
2025-02-24T16:33:40.9331539Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9331632Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9331774Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9331864Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9331868Z 
2025-02-24T16:33:40.9332069Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9332303Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-02-24T16:33:40.9332307Z 
2025-02-24T16:33:40.9332590Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f292e0>
2025-02-24T16:33:40.9332901Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9333233Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff503dd4d70>
2025-02-24T16:33:40.9333511Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data6]>>
2025-02-24T16:33:40.9333515Z 
2025-02-24T16:33:40.9333629Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9333702Z         self,
2025-02-24T16:33:40.9333798Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9333891Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9333966Z         request,
2025-02-24T16:33:40.9334043Z     ):
2025-02-24T16:33:40.9334145Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9334330Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9334420Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9334595Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9334684Z             plot_object = getattr(
2025-02-24T16:33:40.9334810Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9334884Z             )
2025-02-24T16:33:40.9334980Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9335144Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9335254Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9335352Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9335483Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9335640Z                 )
2025-02-24T16:33:40.9335644Z 
2025-02-24T16:33:40.9335793Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9335909Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9335917Z 
2025-02-24T16:33:40.9336374Z args = (<function assert_allclose.<locals>.compare at 0x7ff5038fa8e0>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T16:33:40.9336481Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9336719Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9336724Z 
2025-02-24T16:33:40.9336803Z     @wraps(func)
2025-02-24T16:33:40.9336890Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9336975Z         with self._recreate_cm():
2025-02-24T16:33:40.9337073Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9337157Z E           AssertionError: 
2025-02-24T16:33:40.9337439Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9337512Z E           
2025-02-24T16:33:40.9337618Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:40.9337721Z E           Max absolute difference: 3.16368526e-05
2025-02-24T16:33:40.9337938Z E           Max relative difference: 178.93768705
2025-02-24T16:33:40.9338093Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9338178Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9338327Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9338412Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9338422Z 
2025-02-24T16:33:40.9338619Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9338846Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-02-24T16:33:40.9338854Z 
2025-02-24T16:33:40.9339116Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f29280>
2025-02-24T16:33:40.9339430Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9339768Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e75ae240>
2025-02-24T16:33:40.9340043Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data7]>>
2025-02-24T16:33:40.9340047Z 
2025-02-24T16:33:40.9340146Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9340220Z         self,
2025-02-24T16:33:40.9340322Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9340410Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9340486Z         request,
2025-02-24T16:33:40.9340559Z     ):
2025-02-24T16:33:40.9340666Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9340848Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9340933Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9341109Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9341202Z             plot_object = getattr(
2025-02-24T16:33:40.9341325Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9341398Z             )
2025-02-24T16:33:40.9341496Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9341661Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9341764Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9341866Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9341997Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9342068Z                 )
2025-02-24T16:33:40.9342185Z 
2025-02-24T16:33:40.9342337Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9342448Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9342453Z 
2025-02-24T16:33:40.9342919Z args = (<function assert_allclose.<locals>.compare at 0x7ff5038fa160>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T16:33:40.9343031Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9343270Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9343274Z 
2025-02-24T16:33:40.9343354Z     @wraps(func)
2025-02-24T16:33:40.9343437Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9343531Z         with self._recreate_cm():
2025-02-24T16:33:40.9343624Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9343711Z E           AssertionError: 
2025-02-24T16:33:40.9343826Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9343898Z E           
2025-02-24T16:33:40.9344002Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:40.9344099Z E           Max absolute difference: 3.16368526e-05
2025-02-24T16:33:40.9344202Z E           Max relative difference: 178.93768705
2025-02-24T16:33:40.9344438Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9344521Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9344670Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:33:40.9344752Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9344756Z 
2025-02-24T16:33:40.9344955Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9345175Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-02-24T16:33:40.9345188Z 
2025-02-24T16:33:40.9345454Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f280b0>
2025-02-24T16:33:40.9345765Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9346092Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4df74ddc0>
2025-02-24T16:33:40.9346373Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data8]>>
2025-02-24T16:33:40.9346377Z 
2025-02-24T16:33:40.9346474Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9346547Z         self,
2025-02-24T16:33:40.9346648Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9346735Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9346813Z         request,
2025-02-24T16:33:40.9346880Z     ):
2025-02-24T16:33:40.9346987Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9347169Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9347407Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9347603Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9347688Z             plot_object = getattr(
2025-02-24T16:33:40.9347817Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9347889Z             )
2025-02-24T16:33:40.9347992Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9348155Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9348260Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9348360Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9348486Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9348562Z                 )
2025-02-24T16:33:40.9348566Z 
2025-02-24T16:33:40.9348713Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9348963Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9348967Z 
2025-02-24T16:33:40.9349434Z args = (<function assert_allclose.<locals>.compare at 0x7ff5038fbf60>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T16:33:40.9349538Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9349784Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9349788Z 
2025-02-24T16:33:40.9349868Z     @wraps(func)
2025-02-24T16:33:40.9349950Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9350041Z         with self._recreate_cm():
2025-02-24T16:33:40.9350130Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9350220Z E           AssertionError: 
2025-02-24T16:33:40.9350326Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9350406Z E           
2025-02-24T16:33:40.9350511Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:40.9350611Z E           Max absolute difference: 5.1807441e+47
2025-02-24T16:33:40.9350711Z E           Max relative difference: 4.76021355
2025-02-24T16:33:40.9350861Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9351066Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9351210Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9351299Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9351303Z 
2025-02-24T16:33:40.9351508Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9351725Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-02-24T16:33:40.9351730Z 
2025-02-24T16:33:40.9351998Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f28170>
2025-02-24T16:33:40.9352321Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9352648Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4df7d71d0>
2025-02-24T16:33:40.9352933Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data9]>>
2025-02-24T16:33:40.9352937Z 
2025-02-24T16:33:40.9353030Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9353112Z         self,
2025-02-24T16:33:40.9353214Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9353301Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9353376Z         request,
2025-02-24T16:33:40.9353445Z     ):
2025-02-24T16:33:40.9353559Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9353737Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9353833Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9354012Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9354099Z             plot_object = getattr(
2025-02-24T16:33:40.9354229Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9354298Z             )
2025-02-24T16:33:40.9354408Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9354567Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9354679Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9354782Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9354907Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9354984Z                 )
2025-02-24T16:33:40.9354989Z 
2025-02-24T16:33:40.9355133Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9355251Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9355339Z 
2025-02-24T16:33:40.9355811Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e07db600>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T16:33:40.9355914Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9356164Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9356170Z 
2025-02-24T16:33:40.9356245Z     @wraps(func)
2025-02-24T16:33:40.9356334Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9356430Z         with self._recreate_cm():
2025-02-24T16:33:40.9356519Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9356608Z E           AssertionError: 
2025-02-24T16:33:40.9356712Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9356789Z E           
2025-02-24T16:33:40.9356886Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:40.9356995Z E           Max absolute difference: 5.1807441e+47
2025-02-24T16:33:40.9357095Z E           Max relative difference: 4.76021355
2025-02-24T16:33:40.9357388Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9357512Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9357783Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9357876Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9357880Z 
2025-02-24T16:33:40.9358086Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9358306Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-02-24T16:33:40.9358311Z 
2025-02-24T16:33:40.9358582Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f28230>
2025-02-24T16:33:40.9358888Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9359219Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e217bd10>
2025-02-24T16:33:40.9359503Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data10]>>
2025-02-24T16:33:40.9359511Z 
2025-02-24T16:33:40.9359601Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9359680Z         self,
2025-02-24T16:33:40.9359774Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9359868Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9359938Z         request,
2025-02-24T16:33:40.9360011Z     ):
2025-02-24T16:33:40.9360121Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9360301Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9360392Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9360564Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9360660Z             plot_object = getattr(
2025-02-24T16:33:40.9360781Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9360856Z             )
2025-02-24T16:33:40.9360959Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9361119Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9361228Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9361321Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9361456Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9361532Z                 )
2025-02-24T16:33:40.9361536Z 
2025-02-24T16:33:40.9361679Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9361794Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9361799Z 
2025-02-24T16:33:40.9362530Z args = (<function assert_allclose.<locals>.compare at 0x7ff5038fa8e0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T16:33:40.9362638Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9362884Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9362892Z 
2025-02-24T16:33:40.9362966Z     @wraps(func)
2025-02-24T16:33:40.9363055Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9363139Z         with self._recreate_cm():
2025-02-24T16:33:40.9363232Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9363317Z E           AssertionError: 
2025-02-24T16:33:40.9363432Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9363509Z E           
2025-02-24T16:33:40.9363608Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:40.9363712Z E           Max absolute difference: 5.1807441e+47
2025-02-24T16:33:40.9363810Z E           Max relative difference: 4.76021355
2025-02-24T16:33:40.9363960Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9364049Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9364195Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9364366Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9364370Z 
2025-02-24T16:33:40.9364568Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9364796Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-02-24T16:33:40.9364800Z 
2025-02-24T16:33:40.9365072Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f282f0>
2025-02-24T16:33:40.9365381Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9365718Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff5025d2ed0>
2025-02-24T16:33:40.9365994Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data11]>>
2025-02-24T16:33:40.9365999Z 
2025-02-24T16:33:40.9366096Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9366180Z         self,
2025-02-24T16:33:40.9366274Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9366369Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9366440Z         request,
2025-02-24T16:33:40.9366515Z     ):
2025-02-24T16:33:40.9366623Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9366810Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9366902Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9367073Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9367164Z             plot_object = getattr(
2025-02-24T16:33:40.9367461Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9367543Z             )
2025-02-24T16:33:40.9367643Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9367807Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9367925Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9368022Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9368155Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9368225Z                 )
2025-02-24T16:33:40.9368229Z 
2025-02-24T16:33:40.9368383Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9368500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9368505Z 
2025-02-24T16:33:40.9368975Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e72834c0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T16:33:40.9369204Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9369449Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9369458Z 
2025-02-24T16:33:40.9369535Z     @wraps(func)
2025-02-24T16:33:40.9369621Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9369705Z         with self._recreate_cm():
2025-02-24T16:33:40.9369797Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9369881Z E           AssertionError: 
2025-02-24T16:33:40.9369993Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9370062Z E           
2025-02-24T16:33:40.9370163Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:40.9370268Z E           Max absolute difference: 5.1807441e+47
2025-02-24T16:33:40.9370365Z E           Max relative difference: 4.76021355
2025-02-24T16:33:40.9370520Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9370603Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9370748Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9370830Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9370947Z 
2025-02-24T16:33:40.9371154Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9371380Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-02-24T16:33:40.9371384Z 
2025-02-24T16:33:40.9371653Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f283b0>
2025-02-24T16:33:40.9371968Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9372295Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff50fd4ec60>
2025-02-24T16:33:40.9372577Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data12]>>
2025-02-24T16:33:40.9372582Z 
2025-02-24T16:33:40.9372678Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9372750Z         self,
2025-02-24T16:33:40.9372856Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9372949Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9373019Z         request,
2025-02-24T16:33:40.9373092Z     ):
2025-02-24T16:33:40.9373197Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9373381Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9373466Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9373646Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9373736Z             plot_object = getattr(
2025-02-24T16:33:40.9373860Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9373940Z             )
2025-02-24T16:33:40.9374040Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9374207Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9374311Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9374414Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9374546Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9374618Z                 )
2025-02-24T16:33:40.9374622Z 
2025-02-24T16:33:40.9374775Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9374885Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9374890Z 
2025-02-24T16:33:40.9375361Z args = (<function assert_allclose.<locals>.compare at 0x7ff503813060>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T16:33:40.9375572Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9375813Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9375818Z 
2025-02-24T16:33:40.9375899Z     @wraps(func)
2025-02-24T16:33:40.9375980Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9376074Z         with self._recreate_cm():
2025-02-24T16:33:40.9376167Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9376251Z E           AssertionError: 
2025-02-24T16:33:40.9376363Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9376433Z E           
2025-02-24T16:33:40.9376536Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:40.9376634Z E           Max absolute difference: 3.78533417e+47
2025-02-24T16:33:40.9376735Z E           Max relative difference: 178.93768705
2025-02-24T16:33:40.9376888Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9376977Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9377124Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9377212Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9377216Z 
2025-02-24T16:33:40.9377609Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9377956Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-02-24T16:33:40.9377960Z 
2025-02-24T16:33:40.9378224Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f28470>
2025-02-24T16:33:40.9378535Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9378859Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4ea367dd0>
2025-02-24T16:33:40.9379143Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data13]>>
2025-02-24T16:33:40.9379152Z 
2025-02-24T16:33:40.9379248Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9379318Z         self,
2025-02-24T16:33:40.9379414Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9379501Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9379579Z         request,
2025-02-24T16:33:40.9379646Z     ):
2025-02-24T16:33:40.9379756Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9379939Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9380022Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9380196Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9380280Z             plot_object = getattr(
2025-02-24T16:33:40.9380407Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9380476Z             )
2025-02-24T16:33:40.9380582Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9380745Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9380849Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9380949Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9381076Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9381151Z                 )
2025-02-24T16:33:40.9381155Z 
2025-02-24T16:33:40.9381301Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9381412Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9381417Z 
2025-02-24T16:33:40.9381878Z args = (<function assert_allclose.<locals>.compare at 0x7ff503813100>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T16:33:40.9381978Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9382338Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9382343Z 
2025-02-24T16:33:40.9382419Z     @wraps(func)
2025-02-24T16:33:40.9382501Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9382590Z         with self._recreate_cm():
2025-02-24T16:33:40.9382680Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9382769Z E           AssertionError: 
2025-02-24T16:33:40.9382873Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9382947Z E           
2025-02-24T16:33:40.9383050Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:40.9383146Z E           Max absolute difference: 3.78533417e+47
2025-02-24T16:33:40.9383244Z E           Max relative difference: 178.93768705
2025-02-24T16:33:40.9383388Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9383478Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9383628Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9383711Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9383715Z 
2025-02-24T16:33:40.9383919Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9384222Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-02-24T16:33:40.9384226Z 
2025-02-24T16:33:40.9384489Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f28560>
2025-02-24T16:33:40.9384798Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9385123Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4ff1c4e30>
2025-02-24T16:33:40.9385403Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data14]>>
2025-02-24T16:33:40.9385411Z 
2025-02-24T16:33:40.9385501Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9385575Z         self,
2025-02-24T16:33:40.9385674Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9385761Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9385838Z         request,
2025-02-24T16:33:40.9385908Z     ):
2025-02-24T16:33:40.9386015Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9386193Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9386279Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9386453Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9386539Z             plot_object = getattr(
2025-02-24T16:33:40.9386667Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9386735Z             )
2025-02-24T16:33:40.9386838Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9386999Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9387107Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9387206Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9387486Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9387570Z                 )
2025-02-24T16:33:40.9387575Z 
2025-02-24T16:33:40.9387718Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9387832Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9387836Z 
2025-02-24T16:33:40.9388301Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e07db6a0>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T16:33:40.9388400Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9388643Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9388766Z 
2025-02-24T16:33:40.9388841Z     @wraps(func)
2025-02-24T16:33:40.9388927Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9389015Z         with self._recreate_cm():
2025-02-24T16:33:40.9389101Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9389193Z E           AssertionError: 
2025-02-24T16:33:40.9389303Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9389380Z E           
2025-02-24T16:33:40.9389477Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:40.9389581Z E           Max absolute difference: 3.78533417e+47
2025-02-24T16:33:40.9389680Z E           Max relative difference: 178.93768705
2025-02-24T16:33:40.9389824Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9389914Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9390056Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9390147Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9390151Z 
2025-02-24T16:33:40.9390354Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9390573Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-02-24T16:33:40.9390712Z 
2025-02-24T16:33:40.9390985Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f286b0>
2025-02-24T16:33:40.9391287Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>
2025-02-24T16:33:40.9391617Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff50bdd21e0>
2025-02-24T16:33:40.9391897Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data15]>>
2025-02-24T16:33:40.9391901Z 
2025-02-24T16:33:40.9391990Z     def test_calculate_plotting_data(
2025-02-24T16:33:40.9392068Z         self,
2025-02-24T16:33:40.9392160Z         plotter_calculate_plotting_data,
2025-02-24T16:33:40.9392261Z         calculate_plotting_data_hdf,
2025-02-24T16:33:40.9392331Z         request,
2025-02-24T16:33:40.9392403Z     ):
2025-02-24T16:33:40.9392509Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9392688Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:33:40.9392778Z         group = "plot_data_hdf/"
2025-02-24T16:33:40.9392946Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:33:40.9393036Z             plot_object = getattr(
2025-02-24T16:33:40.9393158Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:33:40.9393232Z             )
2025-02-24T16:33:40.9393332Z             if attribute_type == "attributes_np":
2025-02-24T16:33:40.9393487Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:33:40.9393598Z                     plot_object = plot_object.cgs.value
2025-02-24T16:33:40.9393691Z >               np.testing.assert_allclose(
2025-02-24T16:33:40.9393821Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:33:40.9393894Z                 )
2025-02-24T16:33:40.9393899Z 
2025-02-24T16:33:40.9394044Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:33:40.9394158Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9394162Z 
2025-02-24T16:33:40.9394624Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e7242a20>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T16:33:40.9394728Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9394970Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9395063Z 
2025-02-24T16:33:40.9395140Z     @wraps(func)
2025-02-24T16:33:40.9395226Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9395309Z         with self._recreate_cm():
2025-02-24T16:33:40.9395400Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9395486Z E           AssertionError: 
2025-02-24T16:33:40.9395590Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9395668Z E           
2025-02-24T16:33:40.9395765Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:40.9395865Z E           Max absolute difference: 3.78533417e+47
2025-02-24T16:33:40.9395960Z E           Max relative difference: 178.93768705
2025-02-24T16:33:40.9396112Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9396200Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9396343Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:33:40.9396435Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9396442Z 
2025-02-24T16:33:40.9396645Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9396851Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] ______
2025-02-24T16:33:40.9396856Z 
2025-02-24T16:33:40.9397125Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f28a10>
2025-02-24T16:33:40.9397735Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e4e4a4b0>
2025-02-24T16:33:40.9397843Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9397930Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9398041Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9398176Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:33:40.9398395Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9398641Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply0]>>
2025-02-24T16:33:40.9398650Z 
2025-02-24T16:33:40.9398740Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9398916Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9398985Z     ):
2025-02-24T16:33:40.9399086Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9399202Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9399377Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9399449Z     
2025-02-24T16:33:40.9399560Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9399660Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9399801Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9399944Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9400017Z             )
2025-02-24T16:33:40.9400082Z     
2025-02-24T16:33:40.9400191Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9400295Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9400384Z             if data.stackgroup:
2025-02-24T16:33:40.9400460Z                 assert (
2025-02-24T16:33:40.9400549Z                     data.stackgroup
2025-02-24T16:33:40.9400632Z                     == getattr(
2025-02-24T16:33:40.9400743Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9400847Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9400925Z                     ).decode()
2025-02-24T16:33:40.9401000Z                 )
2025-02-24T16:33:40.9401077Z             if data.name:
2025-02-24T16:33:40.9401156Z                 assert (
2025-02-24T16:33:40.9401240Z                     data.name
2025-02-24T16:33:40.9401314Z                     == getattr(
2025-02-24T16:33:40.9401423Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9401655Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9401735Z                     ).decode()
2025-02-24T16:33:40.9401805Z                 )
2025-02-24T16:33:40.9401907Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9402045Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9402118Z             )
2025-02-24T16:33:40.9402219Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9402342Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9402416Z             )
2025-02-24T16:33:40.9402420Z 
2025-02-24T16:33:40.9402570Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9402691Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9402696Z 
2025-02-24T16:33:40.9403171Z args = (<function assert_allclose.<locals>.compare at 0x7ff50385e8e0>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T16:33:40.9403275Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9403525Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9403529Z 
2025-02-24T16:33:40.9403606Z     @wraps(func)
2025-02-24T16:33:40.9403799Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9403889Z         with self._recreate_cm():
2025-02-24T16:33:40.9403978Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9404066Z E           AssertionError: 
2025-02-24T16:33:40.9404174Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9404249Z E           
2025-02-24T16:33:40.9404350Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:40.9404452Z E           Max absolute difference: 2.08771842e-13
2025-02-24T16:33:40.9404552Z E           Max relative difference: 3.01858991
2025-02-24T16:33:40.9404704Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9404798Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9404941Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9405029Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9405033Z 
2025-02-24T16:33:40.9405250Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9405456Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] ______
2025-02-24T16:33:40.9405460Z 
2025-02-24T16:33:40.9405732Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f28b00>
2025-02-24T16:33:40.9406046Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e750cfe0>
2025-02-24T16:33:40.9406153Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9406245Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9406349Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9406456Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:33:40.9406664Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9406914Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply1]>>
2025-02-24T16:33:40.9406921Z 
2025-02-24T16:33:40.9407012Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9407177Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9407401Z     ):
2025-02-24T16:33:40.9407553Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9407702Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9407877Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9407950Z     
2025-02-24T16:33:40.9408065Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9408159Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9408433Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9408540Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9408616Z             )
2025-02-24T16:33:40.9408687Z     
2025-02-24T16:33:40.9408785Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9408899Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9408985Z             if data.stackgroup:
2025-02-24T16:33:40.9409067Z                 assert (
2025-02-24T16:33:40.9409151Z                     data.stackgroup
2025-02-24T16:33:40.9409234Z                     == getattr(
2025-02-24T16:33:40.9409340Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9409439Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9409521Z                     ).decode()
2025-02-24T16:33:40.9409594Z                 )
2025-02-24T16:33:40.9409676Z             if data.name:
2025-02-24T16:33:40.9409757Z                 assert (
2025-02-24T16:33:40.9409838Z                     data.name
2025-02-24T16:33:40.9409916Z                     == getattr(
2025-02-24T16:33:40.9410023Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9410122Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9410312Z                     ).decode()
2025-02-24T16:33:40.9410386Z                 )
2025-02-24T16:33:40.9410480Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9410614Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9410684Z             )
2025-02-24T16:33:40.9410782Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9410906Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9410976Z             )
2025-02-24T16:33:40.9410980Z 
2025-02-24T16:33:40.9411134Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9411248Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9411256Z 
2025-02-24T16:33:40.9411726Z args = (<function assert_allclose.<locals>.compare at 0x7ff50385f420>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T16:33:40.9411832Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9412076Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9412081Z 
2025-02-24T16:33:40.9412160Z     @wraps(func)
2025-02-24T16:33:40.9412242Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9412331Z         with self._recreate_cm():
2025-02-24T16:33:40.9412423Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9412507Z E           AssertionError: 
2025-02-24T16:33:40.9412616Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9412686Z E           
2025-02-24T16:33:40.9412789Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:40.9412893Z E           Max absolute difference: 2.08771842e-13
2025-02-24T16:33:40.9412994Z E           Max relative difference: 3.01858991
2025-02-24T16:33:40.9413150Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9413234Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9413387Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9413469Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9413473Z 
2025-02-24T16:33:40.9413681Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9413890Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] ______
2025-02-24T16:33:40.9413894Z 
2025-02-24T16:33:40.9414164Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f28f50>
2025-02-24T16:33:40.9414484Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e4e49370>
2025-02-24T16:33:40.9414664Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9414755Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9414863Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9414963Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:33:40.9415173Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9415414Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply2]>>
2025-02-24T16:33:40.9415419Z 
2025-02-24T16:33:40.9415509Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9415680Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9415748Z     ):
2025-02-24T16:33:40.9415848Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9415953Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9416132Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9416199Z     
2025-02-24T16:33:40.9416312Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9416412Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9416554Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9416746Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9416816Z             )
2025-02-24T16:33:40.9416888Z     
2025-02-24T16:33:40.9416984Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9417094Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9417183Z             if data.stackgroup:
2025-02-24T16:33:40.9417363Z                 assert (
2025-02-24T16:33:40.9417452Z                     data.stackgroup
2025-02-24T16:33:40.9417527Z                     == getattr(
2025-02-24T16:33:40.9417636Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9417735Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9417817Z                     ).decode()
2025-02-24T16:33:40.9417892Z                 )
2025-02-24T16:33:40.9417968Z             if data.name:
2025-02-24T16:33:40.9418046Z                 assert (
2025-02-24T16:33:40.9418127Z                     data.name
2025-02-24T16:33:40.9418206Z                     == getattr(
2025-02-24T16:33:40.9418308Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9418403Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9418484Z                     ).decode()
2025-02-24T16:33:40.9418553Z                 )
2025-02-24T16:33:40.9418647Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9418772Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9418846Z             )
2025-02-24T16:33:40.9418935Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9419066Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9419139Z             )
2025-02-24T16:33:40.9419144Z 
2025-02-24T16:33:40.9419288Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9419405Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9419413Z 
2025-02-24T16:33:40.9419875Z args = (<function assert_allclose.<locals>.compare at 0x7ff50385e980>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T16:33:40.9419981Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9420230Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9420235Z 
2025-02-24T16:33:40.9420309Z     @wraps(func)
2025-02-24T16:33:40.9420397Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9420483Z         with self._recreate_cm():
2025-02-24T16:33:40.9420703Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9420787Z E           AssertionError: 
2025-02-24T16:33:40.9420902Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9420977Z E           
2025-02-24T16:33:40.9421073Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:40.9421181Z E           Max absolute difference: 2.08771842e-13
2025-02-24T16:33:40.9421277Z E           Max relative difference: 3.01858991
2025-02-24T16:33:40.9421431Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9421520Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9421662Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9421752Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9421756Z 
2025-02-24T16:33:40.9421959Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9422168Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] ______
2025-02-24T16:33:40.9422172Z 
2025-02-24T16:33:40.9422449Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f29010>
2025-02-24T16:33:40.9422763Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4df7d4e00>
2025-02-24T16:33:40.9422995Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9423082Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9423188Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9423284Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:33:40.9423491Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9423738Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply3]>>
2025-02-24T16:33:40.9423742Z 
2025-02-24T16:33:40.9423827Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9424001Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9424070Z     ):
2025-02-24T16:33:40.9424170Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9424280Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9424452Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9424526Z     
2025-02-24T16:33:40.9424633Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9424733Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9424874Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9424985Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9425059Z             )
2025-02-24T16:33:40.9425124Z     
2025-02-24T16:33:40.9425228Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9425333Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9425427Z             if data.stackgroup:
2025-02-24T16:33:40.9425501Z                 assert (
2025-02-24T16:33:40.9425591Z                     data.stackgroup
2025-02-24T16:33:40.9425671Z                     == getattr(
2025-02-24T16:33:40.9425776Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9425875Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9425955Z                     ).decode()
2025-02-24T16:33:40.9426029Z                 )
2025-02-24T16:33:40.9426106Z             if data.name:
2025-02-24T16:33:40.9426185Z                 assert (
2025-02-24T16:33:40.9426268Z                     data.name
2025-02-24T16:33:40.9426343Z                     == getattr(
2025-02-24T16:33:40.9426448Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9426537Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9426618Z                     ).decode()
2025-02-24T16:33:40.9426689Z                 )
2025-02-24T16:33:40.9426871Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9427001Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9427070Z             )
2025-02-24T16:33:40.9427165Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9427385Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9427463Z             )
2025-02-24T16:33:40.9427467Z 
2025-02-24T16:33:40.9427613Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9427729Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9427734Z 
2025-02-24T16:33:40.9428206Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e7242a20>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T16:33:40.9428308Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9428557Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9428565Z 
2025-02-24T16:33:40.9428643Z     @wraps(func)
2025-02-24T16:33:40.9428724Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9428813Z         with self._recreate_cm():
2025-02-24T16:33:40.9428902Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9429104Z E           AssertionError: 
2025-02-24T16:33:40.9429210Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9429285Z E           
2025-02-24T16:33:40.9429388Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:40.9429487Z E           Max absolute difference: 2.08771842e-13
2025-02-24T16:33:40.9429587Z E           Max relative difference: 3.01858991
2025-02-24T16:33:40.9429735Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9429824Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9429968Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9430065Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9430069Z 
2025-02-24T16:33:40.9430276Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9430476Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] ______
2025-02-24T16:33:40.9430484Z 
2025-02-24T16:33:40.9430754Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f37800>
2025-02-24T16:33:40.9431069Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4fc4fb200>
2025-02-24T16:33:40.9431168Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9431260Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9431360Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9431464Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:33:40.9431669Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9431917Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply4]>>
2025-02-24T16:33:40.9431922Z 
2025-02-24T16:33:40.9432011Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9432181Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9432257Z     ):
2025-02-24T16:33:40.9432351Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9432469Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9432641Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9432713Z     
2025-02-24T16:33:40.9432825Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9432919Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9433063Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9433168Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9433358Z             )
2025-02-24T16:33:40.9433425Z     
2025-02-24T16:33:40.9433529Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9433638Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9433722Z             if data.stackgroup:
2025-02-24T16:33:40.9433806Z                 assert (
2025-02-24T16:33:40.9433889Z                     data.stackgroup
2025-02-24T16:33:40.9433968Z                     == getattr(
2025-02-24T16:33:40.9434073Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9434171Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9434253Z                     ).decode()
2025-02-24T16:33:40.9434322Z                 )
2025-02-24T16:33:40.9434404Z             if data.name:
2025-02-24T16:33:40.9434477Z                 assert (
2025-02-24T16:33:40.9434562Z                     data.name
2025-02-24T16:33:40.9434636Z                     == getattr(
2025-02-24T16:33:40.9434744Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9434839Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9434917Z                     ).decode()
2025-02-24T16:33:40.9434991Z                 )
2025-02-24T16:33:40.9435082Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9435297Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9435367Z             )
2025-02-24T16:33:40.9435461Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9435585Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9435653Z             )
2025-02-24T16:33:40.9435657Z 
2025-02-24T16:33:40.9435808Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9435921Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9435925Z 
2025-02-24T16:33:40.9436395Z args = (<function assert_allclose.<locals>.compare at 0x7ff50384dd00>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T16:33:40.9436505Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9436748Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9436756Z 
2025-02-24T16:33:40.9436833Z     @wraps(func)
2025-02-24T16:33:40.9436915Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9437004Z         with self._recreate_cm():
2025-02-24T16:33:40.9437096Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9437181Z E           AssertionError: 
2025-02-24T16:33:40.9437393Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9437465Z E           
2025-02-24T16:33:40.9437568Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:40.9437666Z E           Max absolute difference: 3.02728422e-13
2025-02-24T16:33:40.9437770Z E           Max relative difference: 15766.1580412
2025-02-24T16:33:40.9437928Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9438014Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9438163Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9438251Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9438255Z 
2025-02-24T16:33:40.9438462Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9438670Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] ______
2025-02-24T16:33:40.9438674Z 
2025-02-24T16:33:40.9438938Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f36d20>
2025-02-24T16:33:40.9439256Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e2141700>
2025-02-24T16:33:40.9439350Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9439562Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9439668Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9439763Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:33:40.9439971Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9440220Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply5]>>
2025-02-24T16:33:40.9440225Z 
2025-02-24T16:33:40.9440315Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9440482Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9440555Z     ):
2025-02-24T16:33:40.9440654Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9440759Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9440935Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9441001Z     
2025-02-24T16:33:40.9441112Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9441215Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9441354Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9441464Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9441533Z             )
2025-02-24T16:33:40.9441715Z     
2025-02-24T16:33:40.9441813Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9441923Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9442012Z             if data.stackgroup:
2025-02-24T16:33:40.9442087Z                 assert (
2025-02-24T16:33:40.9442176Z                     data.stackgroup
2025-02-24T16:33:40.9442251Z                     == getattr(
2025-02-24T16:33:40.9442360Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9442455Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9442537Z                     ).decode()
2025-02-24T16:33:40.9442615Z                 )
2025-02-24T16:33:40.9442695Z             if data.name:
2025-02-24T16:33:40.9442773Z                 assert (
2025-02-24T16:33:40.9442849Z                     data.name
2025-02-24T16:33:40.9442930Z                     == getattr(
2025-02-24T16:33:40.9443031Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9443130Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9443209Z                     ).decode()
2025-02-24T16:33:40.9443280Z                 )
2025-02-24T16:33:40.9443381Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9443508Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9443582Z             )
2025-02-24T16:33:40.9443674Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9443798Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9443872Z             )
2025-02-24T16:33:40.9443876Z 
2025-02-24T16:33:40.9444022Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9444140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9444145Z 
2025-02-24T16:33:40.9444609Z args = (<function assert_allclose.<locals>.compare at 0x7ff50384c400>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T16:33:40.9444718Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9444964Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9444969Z 
2025-02-24T16:33:40.9445042Z     @wraps(func)
2025-02-24T16:33:40.9445131Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9445215Z         with self._recreate_cm():
2025-02-24T16:33:40.9445308Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9445390Z E           AssertionError: 
2025-02-24T16:33:40.9445499Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9445680Z E           
2025-02-24T16:33:40.9445781Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:40.9445886Z E           Max absolute difference: 3.02728422e-13
2025-02-24T16:33:40.9445983Z E           Max relative difference: 15766.1580412
2025-02-24T16:33:40.9446136Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9446224Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9446372Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9446463Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9446468Z 
2025-02-24T16:33:40.9446669Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9446873Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] ______
2025-02-24T16:33:40.9446877Z 
2025-02-24T16:33:40.9447147Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f29310>
2025-02-24T16:33:40.9447562Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e21431d0>
2025-02-24T16:33:40.9447664Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9447750Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9447970Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9448067Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:33:40.9448276Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9448521Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply6]>>
2025-02-24T16:33:40.9448525Z 
2025-02-24T16:33:40.9448610Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9448783Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9448851Z     ):
2025-02-24T16:33:40.9448950Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9449065Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9449235Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9449307Z     
2025-02-24T16:33:40.9449415Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9449517Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9449657Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9449767Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9449840Z             )
2025-02-24T16:33:40.9449906Z     
2025-02-24T16:33:40.9450008Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9450113Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9450201Z             if data.stackgroup:
2025-02-24T16:33:40.9450275Z                 assert (
2025-02-24T16:33:40.9450364Z                     data.stackgroup
2025-02-24T16:33:40.9450447Z                     == getattr(
2025-02-24T16:33:40.9450552Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9450652Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9450729Z                     ).decode()
2025-02-24T16:33:40.9450809Z                 )
2025-02-24T16:33:40.9450890Z             if data.name:
2025-02-24T16:33:40.9450970Z                 assert (
2025-02-24T16:33:40.9451052Z                     data.name
2025-02-24T16:33:40.9451127Z                     == getattr(
2025-02-24T16:33:40.9451232Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9451323Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9451402Z                     ).decode()
2025-02-24T16:33:40.9451471Z                 )
2025-02-24T16:33:40.9451567Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9451697Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9451911Z             )
2025-02-24T16:33:40.9452006Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9452126Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9452200Z             )
2025-02-24T16:33:40.9452204Z 
2025-02-24T16:33:40.9452349Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9452470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9452475Z 
2025-02-24T16:33:40.9452941Z args = (<function assert_allclose.<locals>.compare at 0x7ff503813560>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T16:33:40.9453042Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9453288Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9453293Z 
2025-02-24T16:33:40.9453370Z     @wraps(func)
2025-02-24T16:33:40.9453457Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9453546Z         with self._recreate_cm():
2025-02-24T16:33:40.9453634Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9453723Z E           AssertionError: 
2025-02-24T16:33:40.9453827Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9453903Z E           
2025-02-24T16:33:40.9454083Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:40.9454186Z E           Max absolute difference: 3.02728422e-13
2025-02-24T16:33:40.9454287Z E           Max relative difference: 15766.1580412
2025-02-24T16:33:40.9454436Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9454526Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9454671Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9454761Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9454766Z 
2025-02-24T16:33:40.9454974Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9455172Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] ______
2025-02-24T16:33:40.9455176Z 
2025-02-24T16:33:40.9455449Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f293d0>
2025-02-24T16:33:40.9455763Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4fdd6be60>
2025-02-24T16:33:40.9455863Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9455953Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9456054Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9456156Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:33:40.9456361Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9456606Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply7]>>
2025-02-24T16:33:40.9456614Z 
2025-02-24T16:33:40.9456703Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9456870Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9456944Z     ):
2025-02-24T16:33:40.9457039Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9457151Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9457425Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9457499Z     
2025-02-24T16:33:40.9457612Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9457708Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9457853Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9457957Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9458030Z             )
2025-02-24T16:33:40.9458096Z     
2025-02-24T16:33:40.9458199Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9458427Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9458511Z             if data.stackgroup:
2025-02-24T16:33:40.9458590Z                 assert (
2025-02-24T16:33:40.9458673Z                     data.stackgroup
2025-02-24T16:33:40.9458751Z                     == getattr(
2025-02-24T16:33:40.9458859Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9458958Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9459038Z                     ).decode()
2025-02-24T16:33:40.9459107Z                 )
2025-02-24T16:33:40.9459189Z             if data.name:
2025-02-24T16:33:40.9459262Z                 assert (
2025-02-24T16:33:40.9459342Z                     data.name
2025-02-24T16:33:40.9459416Z                     == getattr(
2025-02-24T16:33:40.9459521Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9459615Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9459694Z                     ).decode()
2025-02-24T16:33:40.9459772Z                 )
2025-02-24T16:33:40.9459864Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9459994Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9460064Z             )
2025-02-24T16:33:40.9460160Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9460473Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9460543Z             )
2025-02-24T16:33:40.9460547Z 
2025-02-24T16:33:40.9460695Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9460806Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9460810Z 
2025-02-24T16:33:40.9461275Z args = (<function assert_allclose.<locals>.compare at 0x7ff50385ef20>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T16:33:40.9461392Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9461635Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9461640Z 
2025-02-24T16:33:40.9461720Z     @wraps(func)
2025-02-24T16:33:40.9461806Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9461903Z         with self._recreate_cm():
2025-02-24T16:33:40.9461998Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9462081Z E           AssertionError: 
2025-02-24T16:33:40.9462193Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9462267Z E           
2025-02-24T16:33:40.9462371Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:40.9462470Z E           Max absolute difference: 3.02728422e-13
2025-02-24T16:33:40.9462575Z E           Max relative difference: 15766.1580412
2025-02-24T16:33:40.9462730Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9462820Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9462969Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:33:40.9463055Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9463059Z 
2025-02-24T16:33:40.9463264Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9463475Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] ______
2025-02-24T16:33:40.9463480Z 
2025-02-24T16:33:40.9463748Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f29490>
2025-02-24T16:33:40.9464066Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e753adb0>
2025-02-24T16:33:40.9464161Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9464253Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9464360Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9464549Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:33:40.9464759Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9465000Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply8]>>
2025-02-24T16:33:40.9465004Z 
2025-02-24T16:33:40.9465098Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9465266Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9465340Z     ):
2025-02-24T16:33:40.9465441Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9465544Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9465723Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9465888Z     
2025-02-24T16:33:40.9466083Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9466209Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9466589Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9466747Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9466904Z             )
2025-02-24T16:33:40.9467037Z     
2025-02-24T16:33:40.9467166Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9467627Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9467936Z             if data.stackgroup:
2025-02-24T16:33:40.9468082Z                 assert (
2025-02-24T16:33:40.9468200Z                     data.stackgroup
2025-02-24T16:33:40.9468341Z                     == getattr(
2025-02-24T16:33:40.9468574Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9468741Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9468885Z                     ).decode()
2025-02-24T16:33:40.9468985Z                 )
2025-02-24T16:33:40.9469131Z             if data.name:
2025-02-24T16:33:40.9469221Z                 assert (
2025-02-24T16:33:40.9469456Z                     data.name
2025-02-24T16:33:40.9469598Z                     == getattr(
2025-02-24T16:33:40.9469739Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9469899Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9469991Z                     ).decode()
2025-02-24T16:33:40.9470210Z                 )
2025-02-24T16:33:40.9470337Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9470538Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9470673Z             )
2025-02-24T16:33:40.9470781Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9471044Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9471145Z             )
2025-02-24T16:33:40.9471150Z 
2025-02-24T16:33:40.9471370Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9471596Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9471614Z 
2025-02-24T16:33:40.9472234Z args = (<function assert_allclose.<locals>.compare at 0x7ff50384fec0>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T16:33:40.9472520Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9472898Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9472940Z 
2025-02-24T16:33:40.9473046Z     @wraps(func)
2025-02-24T16:33:40.9473163Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9481616Z         with self._recreate_cm():
2025-02-24T16:33:40.9481776Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9481915Z E           AssertionError: 
2025-02-24T16:33:40.9482070Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9482187Z E           
2025-02-24T16:33:40.9482390Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:40.9482726Z E           Max absolute difference: 2.49794504e+39
2025-02-24T16:33:40.9482831Z E           Max relative difference: 3.01858991
2025-02-24T16:33:40.9483001Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9483140Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9483379Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9483466Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9483472Z 
2025-02-24T16:33:40.9483697Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9483925Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] ______
2025-02-24T16:33:40.9483933Z 
2025-02-24T16:33:40.9484305Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f29550>
2025-02-24T16:33:40.9484630Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e75384a0>
2025-02-24T16:33:40.9484732Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9484905Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9485044Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9485152Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:33:40.9485502Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9485878Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply9]>>
2025-02-24T16:33:40.9485885Z 
2025-02-24T16:33:40.9485982Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9486160Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9486230Z     ):
2025-02-24T16:33:40.9486331Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9486458Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9486756Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9486833Z     
2025-02-24T16:33:40.9486957Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9487058Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9487203Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9487539Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9487617Z             )
2025-02-24T16:33:40.9487690Z     
2025-02-24T16:33:40.9487794Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9487906Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9487998Z             if data.stackgroup:
2025-02-24T16:33:40.9488076Z                 assert (
2025-02-24T16:33:40.9488197Z                     data.stackgroup
2025-02-24T16:33:40.9488338Z                     == getattr(
2025-02-24T16:33:40.9488471Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9488577Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9488660Z                     ).decode()
2025-02-24T16:33:40.9488734Z                 )
2025-02-24T16:33:40.9488812Z             if data.name:
2025-02-24T16:33:40.9488891Z                 assert (
2025-02-24T16:33:40.9488967Z                     data.name
2025-02-24T16:33:40.9489120Z                     == getattr(
2025-02-24T16:33:40.9489272Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9489372Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9489498Z                     ).decode()
2025-02-24T16:33:40.9489612Z                 )
2025-02-24T16:33:40.9489715Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9489940Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9490051Z             )
2025-02-24T16:33:40.9490146Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9490343Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9490629Z             )
2025-02-24T16:33:40.9490638Z 
2025-02-24T16:33:40.9490908Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9491113Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9491120Z 
2025-02-24T16:33:40.9491790Z args = (<function assert_allclose.<locals>.compare at 0x7ff50384c7c0>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T16:33:40.9491912Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9492167Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9492172Z 
2025-02-24T16:33:40.9492247Z     @wraps(func)
2025-02-24T16:33:40.9492350Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9492511Z         with self._recreate_cm():
2025-02-24T16:33:40.9492627Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9492720Z E           AssertionError: 
2025-02-24T16:33:40.9492842Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9492916Z E           
2025-02-24T16:33:40.9493015Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:40.9493122Z E           Max absolute difference: 2.49794504e+39
2025-02-24T16:33:40.9493461Z E           Max relative difference: 3.01858991
2025-02-24T16:33:40.9493627Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9493723Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9493869Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9493958Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9493962Z 
2025-02-24T16:33:40.9494281Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9494502Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] ______
2025-02-24T16:33:40.9494511Z 
2025-02-24T16:33:40.9494788Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f29610>
2025-02-24T16:33:40.9495220Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff509963710>
2025-02-24T16:33:40.9495332Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9495422Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9495532Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9495634Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:33:40.9495961Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9496219Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply10]>>
2025-02-24T16:33:40.9496224Z 
2025-02-24T16:33:40.9496313Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9496485Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9496579Z     ):
2025-02-24T16:33:40.9496764Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9496885Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9497059Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9497136Z     
2025-02-24T16:33:40.9497374Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9497570Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9497739Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9497853Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9497926Z             )
2025-02-24T16:33:40.9497993Z     
2025-02-24T16:33:40.9498097Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9498205Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9498356Z             if data.stackgroup:
2025-02-24T16:33:40.9498590Z                 assert (
2025-02-24T16:33:40.9498681Z                     data.stackgroup
2025-02-24T16:33:40.9498764Z                     == getattr(
2025-02-24T16:33:40.9498875Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9498978Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9499089Z                     ).decode()
2025-02-24T16:33:40.9499225Z                 )
2025-02-24T16:33:40.9499330Z             if data.name:
2025-02-24T16:33:40.9499409Z                 assert (
2025-02-24T16:33:40.9499492Z                     data.name
2025-02-24T16:33:40.9499568Z                     == getattr(
2025-02-24T16:33:40.9499678Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9499770Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9499897Z                     ).decode()
2025-02-24T16:33:40.9500024Z                 )
2025-02-24T16:33:40.9500140Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9500284Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9500354Z             )
2025-02-24T16:33:40.9500449Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9500570Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9500643Z             )
2025-02-24T16:33:40.9500825Z 
2025-02-24T16:33:40.9501015Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9501142Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9501147Z 
2025-02-24T16:33:40.9501708Z args = (<function assert_allclose.<locals>.compare at 0x7ff50384c180>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T16:33:40.9501818Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9502070Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9502079Z 
2025-02-24T16:33:40.9502157Z     @wraps(func)
2025-02-24T16:33:40.9502240Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9502350Z         with self._recreate_cm():
2025-02-24T16:33:40.9502516Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9502610Z E           AssertionError: 
2025-02-24T16:33:40.9502727Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9502803Z E           
2025-02-24T16:33:40.9502906Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:40.9503007Z E           Max absolute difference: 2.49794504e+39
2025-02-24T16:33:40.9503108Z E           Max relative difference: 3.01858991
2025-02-24T16:33:40.9503350Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9503445Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9503591Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9503685Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9503689Z 
2025-02-24T16:33:40.9503907Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9504207Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] ______
2025-02-24T16:33:40.9504212Z 
2025-02-24T16:33:40.9504491Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f296d0>
2025-02-24T16:33:40.9504873Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e750d430>
2025-02-24T16:33:40.9505020Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9505116Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9505222Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9505326Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:33:40.9505541Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9505973Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply11]>>
2025-02-24T16:33:40.9505979Z 
2025-02-24T16:33:40.9506072Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9506240Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9506317Z     ):
2025-02-24T16:33:40.9506413Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9506526Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9506789Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9506866Z     
2025-02-24T16:33:40.9506983Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9507076Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9507224Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9507549Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9507631Z             )
2025-02-24T16:33:40.9507705Z     
2025-02-24T16:33:40.9507812Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9507921Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9508049Z             if data.stackgroup:
2025-02-24T16:33:40.9508195Z                 assert (
2025-02-24T16:33:40.9508420Z                     data.stackgroup
2025-02-24T16:33:40.9508501Z                     == getattr(
2025-02-24T16:33:40.9508609Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9508711Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9508792Z                     ).decode()
2025-02-24T16:33:40.9508864Z                 )
2025-02-24T16:33:40.9508946Z             if data.name:
2025-02-24T16:33:40.9509020Z                 assert (
2025-02-24T16:33:40.9509103Z                     data.name
2025-02-24T16:33:40.9509177Z                     == getattr(
2025-02-24T16:33:40.9509283Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9509383Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9509458Z                     ).decode()
2025-02-24T16:33:40.9509531Z                 )
2025-02-24T16:33:40.9509624Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9509758Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9509831Z             )
2025-02-24T16:33:40.9509926Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9510053Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9510122Z             )
2025-02-24T16:33:40.9510126Z 
2025-02-24T16:33:40.9510337Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9510534Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9510540Z 
2025-02-24T16:33:40.9511022Z args = (<function assert_allclose.<locals>.compare at 0x7ff4e72ae0c0>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T16:33:40.9511131Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9511376Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9511381Z 
2025-02-24T16:33:40.9511462Z     @wraps(func)
2025-02-24T16:33:40.9511544Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9511634Z         with self._recreate_cm():
2025-02-24T16:33:40.9511727Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9511812Z E           AssertionError: 
2025-02-24T16:33:40.9511923Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9511996Z E           
2025-02-24T16:33:40.9512098Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:40.9512198Z E           Max absolute difference: 2.49794504e+39
2025-02-24T16:33:40.9512301Z E           Max relative difference: 3.01858991
2025-02-24T16:33:40.9512610Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9512698Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9512851Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9512936Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9512945Z 
2025-02-24T16:33:40.9513152Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9513360Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] ______
2025-02-24T16:33:40.9513364Z 
2025-02-24T16:33:40.9513630Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f29790>
2025-02-24T16:33:40.9513947Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e807c680>
2025-02-24T16:33:40.9514042Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9514182Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9514371Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9514477Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:33:40.9514687Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9514935Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply12]>>
2025-02-24T16:33:40.9515026Z 
2025-02-24T16:33:40.9515121Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9515290Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9515363Z     ):
2025-02-24T16:33:40.9515463Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9515568Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9515744Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9515810Z     
2025-02-24T16:33:40.9515924Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9516026Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9516167Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9516277Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9516345Z             )
2025-02-24T16:33:40.9516416Z     
2025-02-24T16:33:40.9516517Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9516627Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9516716Z             if data.stackgroup:
2025-02-24T16:33:40.9516790Z                 assert (
2025-02-24T16:33:40.9516878Z                     data.stackgroup
2025-02-24T16:33:40.9516952Z                     == getattr(
2025-02-24T16:33:40.9517065Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9517161Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9517404Z                     ).decode()
2025-02-24T16:33:40.9517521Z                 )
2025-02-24T16:33:40.9517606Z             if data.name:
2025-02-24T16:33:40.9517685Z                 assert (
2025-02-24T16:33:40.9517762Z                     data.name
2025-02-24T16:33:40.9517841Z                     == getattr(
2025-02-24T16:33:40.9517943Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9518038Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9518117Z                     ).decode()
2025-02-24T16:33:40.9518192Z                 )
2025-02-24T16:33:40.9518288Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9518424Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9518500Z             )
2025-02-24T16:33:40.9518589Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9518713Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9518783Z             )
2025-02-24T16:33:40.9518787Z 
2025-02-24T16:33:40.9518943Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9519195Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9519200Z 
2025-02-24T16:33:40.9519671Z args = (<function assert_allclose.<locals>.compare at 0x7ff50384ca40>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T16:33:40.9519780Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9520023Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9520028Z 
2025-02-24T16:33:40.9520107Z     @wraps(func)
2025-02-24T16:33:40.9520193Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9520278Z         with self._recreate_cm():
2025-02-24T16:33:40.9520369Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9520454Z E           AssertionError: 
2025-02-24T16:33:40.9520569Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9520642Z E           
2025-02-24T16:33:40.9520745Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:40.9520847Z E           Max absolute difference: 3.62213099e+39
2025-02-24T16:33:40.9520940Z E           Max relative difference: 15766.15804934
2025-02-24T16:33:40.9521093Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9521400Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9521574Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9521658Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9521666Z 
2025-02-24T16:33:40.9521869Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9522074Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] ______
2025-02-24T16:33:40.9522079Z 
2025-02-24T16:33:40.9522343Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f29850>
2025-02-24T16:33:40.9522674Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4ea39f320>
2025-02-24T16:33:40.9522775Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9522862Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9522966Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9523068Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:33:40.9523276Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9523519Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply13]>>
2025-02-24T16:33:40.9523529Z 
2025-02-24T16:33:40.9523613Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9523784Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9523852Z     ):
2025-02-24T16:33:40.9523952Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9524061Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9524239Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9524310Z     
2025-02-24T16:33:40.9524417Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9524515Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9524661Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9524771Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9524840Z             )
2025-02-24T16:33:40.9524911Z     
2025-02-24T16:33:40.9525015Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9525125Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9525214Z             if data.stackgroup:
2025-02-24T16:33:40.9525289Z                 assert (
2025-02-24T16:33:40.9525376Z                     data.stackgroup
2025-02-24T16:33:40.9525449Z                     == getattr(
2025-02-24T16:33:40.9525651Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9525749Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9525824Z                     ).decode()
2025-02-24T16:33:40.9525898Z                 )
2025-02-24T16:33:40.9525974Z             if data.name:
2025-02-24T16:33:40.9526055Z                 assert (
2025-02-24T16:33:40.9526130Z                     data.name
2025-02-24T16:33:40.9526209Z                     == getattr(
2025-02-24T16:33:40.9526315Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9526405Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9526484Z                     ).decode()
2025-02-24T16:33:40.9526554Z                 )
2025-02-24T16:33:40.9526648Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9526775Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9526850Z             )
2025-02-24T16:33:40.9526943Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9527063Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9527138Z             )
2025-02-24T16:33:40.9527142Z 
2025-02-24T16:33:40.9527396Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9527515Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9527637Z 
2025-02-24T16:33:40.9528104Z args = (<function assert_allclose.<locals>.compare at 0x7ff503813d80>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T16:33:40.9528208Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9528453Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9528458Z 
2025-02-24T16:33:40.9528529Z     @wraps(func)
2025-02-24T16:33:40.9528616Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9528703Z         with self._recreate_cm():
2025-02-24T16:33:40.9528796Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9528884Z E           AssertionError: 
2025-02-24T16:33:40.9528988Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9529063Z E           
2025-02-24T16:33:40.9529160Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:40.9529263Z E           Max absolute difference: 3.62213099e+39
2025-02-24T16:33:40.9529357Z E           Max relative difference: 15766.15804934
2025-02-24T16:33:40.9529508Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9529599Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9529741Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9529827Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9529832Z 
2025-02-24T16:33:40.9530030Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9530241Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] ______
2025-02-24T16:33:40.9530245Z 
2025-02-24T16:33:40.9530512Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f29910>
2025-02-24T16:33:40.9530823Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff50fb2d5b0>
2025-02-24T16:33:40.9530925Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9531010Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9531117Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9531221Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:33:40.9531425Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9531671Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply14]>>
2025-02-24T16:33:40.9531676Z 
2025-02-24T16:33:40.9531900Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9532069Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9532142Z     ):
2025-02-24T16:33:40.9532235Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9532344Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9532517Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9532591Z     
2025-02-24T16:33:40.9532698Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9532797Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9532942Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9533046Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9533118Z             )
2025-02-24T16:33:40.9533184Z     
2025-02-24T16:33:40.9533286Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9533390Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9533481Z             if data.stackgroup:
2025-02-24T16:33:40.9533562Z                 assert (
2025-02-24T16:33:40.9533645Z                     data.stackgroup
2025-02-24T16:33:40.9533725Z                     == getattr(
2025-02-24T16:33:40.9533827Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9534030Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9534104Z                     ).decode()
2025-02-24T16:33:40.9534178Z                 )
2025-02-24T16:33:40.9534259Z             if data.name:
2025-02-24T16:33:40.9534331Z                 assert (
2025-02-24T16:33:40.9534411Z                     data.name
2025-02-24T16:33:40.9534484Z                     == getattr(
2025-02-24T16:33:40.9534591Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9534716Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9534862Z                     ).decode()
2025-02-24T16:33:40.9534976Z                 )
2025-02-24T16:33:40.9535070Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9535201Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9535270Z             )
2025-02-24T16:33:40.9535364Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9535486Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9535559Z             )
2025-02-24T16:33:40.9535563Z 
2025-02-24T16:33:40.9535712Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9535825Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9535829Z 
2025-02-24T16:33:40.9536291Z args = (<function assert_allclose.<locals>.compare at 0x7ff503811e40>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T16:33:40.9536392Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9536640Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9536645Z 
2025-02-24T16:33:40.9536722Z     @wraps(func)
2025-02-24T16:33:40.9536803Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9536894Z         with self._recreate_cm():
2025-02-24T16:33:40.9536983Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9537071Z E           AssertionError: 
2025-02-24T16:33:40.9537179Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9537348Z E           
2025-02-24T16:33:40.9537454Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:40.9537552Z E           Max absolute difference: 3.62213099e+39
2025-02-24T16:33:40.9537652Z E           Max relative difference: 15766.15804934
2025-02-24T16:33:40.9537799Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9537889Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9538163Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9538245Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9538250Z 
2025-02-24T16:33:40.9538456Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9538658Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] ______
2025-02-24T16:33:40.9538663Z 
2025-02-24T16:33:40.9538933Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7ff511f299d0>
2025-02-24T16:33:40.9539248Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7ff4e753a630>
2025-02-24T16:33:40.9539342Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:33:40.9539433Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:33:40.9539532Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:33:40.9539633Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:33:40.9539851Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7ff5099486e0>)
2025-02-24T16:33:40.9540095Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply15]>>
2025-02-24T16:33:40.9540100Z 
2025-02-24T16:33:40.9540188Z     def test_generate_plot_mpl(
2025-02-24T16:33:40.9540464Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:33:40.9540536Z     ):
2025-02-24T16:33:40.9540631Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:33:40.9540743Z         regression_data = RegressionData(request)
2025-02-24T16:33:40.9540918Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:33:40.9540985Z     
2025-02-24T16:33:40.9541096Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:33:40.9541190Z             np.testing.assert_array_equal(
2025-02-24T16:33:40.9541333Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:33:40.9541439Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:33:40.9541515Z             )
2025-02-24T16:33:40.9541587Z     
2025-02-24T16:33:40.9541686Z         for index, data in enumerate(fig.data):
2025-02-24T16:33:40.9541793Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:33:40.9541880Z             if data.stackgroup:
2025-02-24T16:33:40.9541958Z                 assert (
2025-02-24T16:33:40.9542043Z                     data.stackgroup
2025-02-24T16:33:40.9542123Z                     == getattr(
2025-02-24T16:33:40.9542232Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9542327Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:33:40.9542416Z                     ).decode()
2025-02-24T16:33:40.9542485Z                 )
2025-02-24T16:33:40.9542572Z             if data.name:
2025-02-24T16:33:40.9542646Z                 assert (
2025-02-24T16:33:40.9542727Z                     data.name
2025-02-24T16:33:40.9542809Z                     == getattr(
2025-02-24T16:33:40.9542910Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:33:40.9543005Z                         "_" + str(index) + "name",
2025-02-24T16:33:40.9543083Z                     ).decode()
2025-02-24T16:33:40.9543157Z                 )
2025-02-24T16:33:40.9543252Z             np.testing.assert_allclose(
2025-02-24T16:33:40.9543384Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:33:40.9543459Z             )
2025-02-24T16:33:40.9543549Z >           np.testing.assert_allclose(
2025-02-24T16:33:40.9543672Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:33:40.9543741Z             )
2025-02-24T16:33:40.9543745Z 
2025-02-24T16:33:40.9543892Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:33:40.9544009Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:33:40.9544013Z 
2025-02-24T16:33:40.9544566Z args = (<function assert_allclose.<locals>.compare at 0x7ff50384dd00>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T16:33:40.9544670Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:33:40.9544912Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:33:40.9544921Z 
2025-02-24T16:33:40.9545000Z     @wraps(func)
2025-02-24T16:33:40.9545087Z     def inner(*args, **kwds):
2025-02-24T16:33:40.9545171Z         with self._recreate_cm():
2025-02-24T16:33:40.9545263Z >           return func(*args, **kwds)
2025-02-24T16:33:40.9545347Z E           AssertionError: 
2025-02-24T16:33:40.9545456Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9545525Z E           
2025-02-24T16:33:40.9545627Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:40.9545728Z E           Max absolute difference: 3.62213099e+39
2025-02-24T16:33:40.9545823Z E           Max relative difference: 15766.15804934
2025-02-24T16:33:40.9545976Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9546060Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9546208Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9546375Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9546384Z 
2025-02-24T16:33:40.9546590Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:33:40.9546708Z =============================== warnings summary ===============================
2025-02-24T16:33:40.9546823Z tardis/io/configuration/config_validator.py:6
2025-02-24T16:33:40.9546937Z tardis/io/configuration/config_validator.py:6
2025-02-24T16:33:40.9547397Z   /home/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-02-24T16:33:40.9547551Z   
2025-02-24T16:33:40.9548693Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-02-24T16:33:40.9548704Z 
2025-02-24T16:33:40.9548939Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-02-24T16:33:40.9549299Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-02-24T16:33:40.9549373Z   
2025-02-24T16:33:40.9549523Z   Jupyter is migrating its paths to use standard platformdirs
2025-02-24T16:33:40.9549679Z   given by the platformdirs library.  To remove this warning and
2025-02-24T16:33:40.9549840Z   see the appropriate new directories, set the environment variable
2025-02-24T16:33:40.9549993Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-02-24T16:33:40.9550144Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-02-24T16:33:40.9550154Z 
2025-02-24T16:33:40.9554390Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-02-24T16:33:40.9554693Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T16:33:40.9554924Z   /home/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-02-24T16:33:40.9554999Z   
2025-02-24T16:33:40.9555066Z   
2025-02-24T16:33:40.9555289Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T16:33:40.9555558Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-02-24T16:33:40.9555565Z 
2025-02-24T16:33:40.9555766Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-02-24T16:33:40.9555989Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-02-24T16:33:40.9556414Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-02-24T16:33:40.9556600Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-02-24T16:33:40.9556927Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-02-24T16:33:40.9556999Z   
2025-02-24T16:33:40.9557119Z   The current CMFGEN model parser is deprecated
2025-02-24T16:33:40.9557124Z 
2025-02-24T16:33:40.9557234Z tardis/io/tests/test_model_reader.py: 1 warning
2025-02-24T16:33:40.9557671Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-02-24T16:33:40.9558002Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-02-24T16:33:40.9558072Z   
2025-02-24T16:33:40.9558185Z   The current CMFGEN model parser is deprecated
2025-02-24T16:33:40.9558190Z 
2025-02-24T16:33:40.9558408Z tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances
2025-02-24T16:33:40.9558783Z   /home/runner/work/tardis/tardis/tardis/transport/montecarlo/montecarlo_main_loop.py:123: NumbaTypeSafetyWarning:
2025-02-24T16:33:40.9558851Z   
2025-02-24T16:33:40.9559304Z   [1m[1m[1munsafe cast from uint64 to int64. Precision may be lost.[0m[0m[0m
2025-02-24T16:33:40.9559434Z 
2025-02-24T16:33:40.9559547Z tardis/model/tests/test_base.py: 6 warnings
2025-02-24T16:33:40.9559671Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-02-24T16:33:40.9559857Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-02-24T16:33:40.9560127Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-02-24T16:33:40.9560204Z   
2025-02-24T16:33:40.9560318Z   v_inner_boundary < 0, assuming default value
2025-02-24T16:33:40.9560322Z 
2025-02-24T16:33:40.9560425Z tardis/model/tests/test_base.py: 6 warnings
2025-02-24T16:33:40.9560545Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-02-24T16:33:40.9560726Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-02-24T16:33:40.9561054Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-02-24T16:33:40.9561188Z   
2025-02-24T16:33:40.9561334Z   v_outer_boundary < 0, assuming default value
2025-02-24T16:33:40.9561344Z 
2025-02-24T16:33:40.9561807Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-02-24T16:33:40.9562105Z   /home/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-02-24T16:33:40.9562177Z   
2025-02-24T16:33:40.9562461Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-02-24T16:33:40.9562912Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-02-24T16:33:40.9562989Z   
2025-02-24T16:33:40.9563512Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-02-24T16:33:40.9563520Z 
2025-02-24T16:33:40.9563743Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-02-24T16:33:40.9563954Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-02-24T16:33:40.9564159Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-02-24T16:33:40.9564407Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-02-24T16:33:40.9564474Z   
2025-02-24T16:33:40.9564673Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-02-24T16:33:40.9564677Z 
2025-02-24T16:33:40.9564895Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-02-24T16:33:40.9565249Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:70: UserWarning:
2025-02-24T16:33:40.9565320Z   
2025-02-24T16:33:40.9565648Z   SpectrumSolver.spectrum_virtual_packets is zero. Please run the montecarlo simulation with no_of_virtual_packets > 0
2025-02-24T16:33:40.9565657Z 
2025-02-24T16:33:40.9565868Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-02-24T16:33:40.9566070Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:111: UserWarning:
2025-02-24T16:33:40.9566141Z   
2025-02-24T16:33:40.9566488Z   SpectrumSolver.integrator: The FormalIntegrator is not yet available.Please run the montecarlo simulation at least once.
2025-02-24T16:33:40.9566493Z 
2025-02-24T16:33:40.9566700Z tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_vpacket_volley
2025-02-24T16:33:40.9566820Z   <string>:3: NumbaPendingDeprecationWarning:
2025-02-24T16:33:40.9566888Z   
2025-02-24T16:33:40.9568080Z   [1m[1mCode using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors
2025-02-24T16:33:40.9568171Z   Exception origin:
2025-02-24T16:33:40.9568545Z     File "/home/runner/micromamba/envs/tardis/lib/python3.12/inspect.py", line 3180, in _bind
2025-02-24T16:33:40.9568643Z       raise TypeError(msg) from None
2025-02-24T16:33:40.9568742Z   [0m[0m
2025-02-24T16:33:40.9568747Z 
2025-02-24T16:33:40.9569086Z tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4]
2025-02-24T16:33:40.9569374Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:1225: RuntimeWarning:
2025-02-24T16:33:40.9569441Z   
2025-02-24T16:33:40.9570286Z   More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
2025-02-24T16:33:40.9570296Z 
2025-02-24T16:33:40.9570653Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:33:40.9571002Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:33:40.9571347Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:33:40.9571690Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:33:40.9572032Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:33:40.9572377Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:33:40.9572733Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T16:33:40.9572804Z   
2025-02-24T16:33:40.9573005Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-02-24T16:33:40.9573186Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T16:33:40.9573426Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T16:33:40.9573431Z 
2025-02-24T16:33:40.9573779Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:33:40.9574130Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:33:40.9574482Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T16:33:40.9574671Z   
2025-02-24T16:33:40.9574853Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-02-24T16:33:40.9575025Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T16:33:40.9575271Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T16:33:40.9575279Z 
2025-02-24T16:33:40.9575625Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:33:40.9575980Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T16:33:40.9576054Z   
2025-02-24T16:33:40.9576240Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-02-24T16:33:40.9576414Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T16:33:40.9576643Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T16:33:40.9576651Z 
2025-02-24T16:33:40.9577084Z tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu]
2025-02-24T16:33:40.9577518Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/qgridnext/grid.py:814: DeprecationWarning:
2025-02-24T16:33:40.9577700Z   
2025-02-24T16:33:40.9577946Z   QgridWidget._df_changed is deprecated in traitlets 4.1: use @observe and @unobserve instead.
2025-02-24T16:33:40.9577951Z 
2025-02-24T16:33:40.9578207Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T16:33:40.9578420Z   /home/runner/work/tardis/tardis/tardis/io/util.py:289: PerformanceWarning:
2025-02-24T16:33:40.9578492Z   
2025-02-24T16:33:40.9578557Z   
2025-02-24T16:33:40.9578765Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T16:33:40.9579022Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-02-24T16:33:40.9579031Z 
2025-02-24T16:33:40.9579287Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T16:33:40.9579495Z   /home/runner/work/tardis/tardis/tardis/io/util.py:292: PerformanceWarning:
2025-02-24T16:33:40.9579566Z   
2025-02-24T16:33:40.9579637Z   
2025-02-24T16:33:40.9579836Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T16:33:40.9580013Z   map directly to c-types [inferred_type->mixed,key->values] [items->None]
2025-02-24T16:33:40.9580018Z 
2025-02-24T16:33:40.9580266Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T16:33:40.9580510Z   /home/runner/work/tardis/tardis/tardis/spectrum/formal_integral.py:398: UserWarning:
2025-02-24T16:33:40.9580582Z   
2025-02-24T16:33:40.9580770Z   The number of interpolate_shells was not specified. The value was set to 80.
2025-02-24T16:33:40.9580778Z 
2025-02-24T16:33:40.9580973Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-02-24T16:33:40.9580978Z 
2025-02-24T16:33:40.9581141Z ---------- coverage: platform linux, python 3.12.4-final-0 -----------
2025-02-24T16:33:40.9581269Z Coverage HTML written to dir coverage_html_report
2025-02-24T16:33:40.9581378Z Coverage XML written to file coverage.xml
2025-02-24T16:33:40.9581382Z 
2025-02-24T16:33:40.9581506Z =========================== short test summary info ============================
2025-02-24T16:33:40.9581915Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_sobolev_line_opacity - AssertionError: MultiIndex level [0] are different
2025-02-24T16:33:40.9581921Z 
2025-02-24T16:33:40.9582051Z MultiIndex level [0] values are different (0.09581 %)
2025-02-24T16:33:40.9582174Z [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T16:33:40.9582248Z        ...
2025-02-24T16:33:40.9582335Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T16:33:40.9582587Z       dtype='int64', name='atomic_number', length=29224)
2025-02-24T16:33:40.9582699Z [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T16:33:40.9582772Z        ...
2025-02-24T16:33:40.9582855Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T16:33:40.9582976Z       dtype='int64', name='atomic_number', length=29224)
2025-02-24T16:33:40.9583090Z At positional index 54, first diff: 14 != 12
2025-02-24T16:33:40.9583365Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_beta_sobolevs - AssertionError: 
2025-02-24T16:33:40.9583468Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9583473Z 
2025-02-24T16:33:40.9583566Z Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T16:33:40.9583660Z Max absolute difference: 0.99984222
2025-02-24T16:33:40.9583757Z Max relative difference: 6337.12154973
2025-02-24T16:33:40.9583842Z  x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.9583926Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.9584007Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:33:40.9584093Z  y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.9584168Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.9584249Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:33:40.9584845Z FAILED tardis/plasma/equilibrium/tests/test_rate_matrix.py::test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0] - ModuleNotFoundError: No module named 'numpy._core.numeric'
2025-02-24T16:33:40.9585419Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9585425Z 
2025-02-24T16:33:40.9585556Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9585667Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9585742Z        ...
2025-02-24T16:33:40.9585831Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9585963Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9586079Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9586149Z        ...
2025-02-24T16:33:40.9586238Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9586362Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9586474Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9586982Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9586988Z 
2025-02-24T16:33:40.9587081Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9587702Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9588041Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9588373Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9588885Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9589014Z 
2025-02-24T16:33:40.9589117Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9589478Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9589850Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9590230Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9590829Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9590836Z 
2025-02-24T16:33:40.9590962Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9591075Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9591148Z        ...
2025-02-24T16:33:40.9591237Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9591372Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9591482Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9591571Z        ...
2025-02-24T16:33:40.9591652Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9591777Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9591879Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9592400Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9592410Z 
2025-02-24T16:33:40.9592538Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9592643Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9592725Z        ...
2025-02-24T16:33:40.9592807Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9592934Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9593047Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9593115Z        ...
2025-02-24T16:33:40.9593203Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9593322Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9593428Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9593902Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9593913Z 
2025-02-24T16:33:40.9594034Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9594142Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9594210Z        ...
2025-02-24T16:33:40.9594294Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9594413Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9594610Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9594681Z        ...
2025-02-24T16:33:40.9594760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9594882Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9594979Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9595494Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9595500Z 
2025-02-24T16:33:40.9595623Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9595727Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9595799Z        ...
2025-02-24T16:33:40.9595879Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9596002Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9596108Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9596184Z        ...
2025-02-24T16:33:40.9596268Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9596385Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9596487Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9596989Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9597074Z 
2025-02-24T16:33:40.9597200Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9597510Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9597584Z        ...
2025-02-24T16:33:40.9597670Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9597790Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9597901Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9597968Z        ...
2025-02-24T16:33:40.9598058Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9598182Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9598276Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9598775Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9598784Z 
2025-02-24T16:33:40.9598903Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9599012Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9599085Z        ...
2025-02-24T16:33:40.9599165Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9599287Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9599393Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9599469Z        ...
2025-02-24T16:33:40.9599549Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9599676Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9599777Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9600275Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9600285Z 
2025-02-24T16:33:40.9600411Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9600513Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9600585Z        ...
2025-02-24T16:33:40.9600668Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9600787Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9600897Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9600965Z        ...
2025-02-24T16:33:40.9601048Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9601165Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9601392Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9601876Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9601882Z 
2025-02-24T16:33:40.9601975Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9602339Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9602667Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9602993Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9603612Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9603618Z 
2025-02-24T16:33:40.9603714Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9604071Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9604442Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9604816Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9605278Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9605286Z 
2025-02-24T16:33:40.9605407Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9605517Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9605585Z        ...
2025-02-24T16:33:40.9605670Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9605792Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9605903Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9605975Z        ...
2025-02-24T16:33:40.9606056Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9606178Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9606361Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9606863Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9606868Z 
2025-02-24T16:33:40.9606996Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9607099Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9607170Z        ...
2025-02-24T16:33:40.9607361Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9607490Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9607597Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9607672Z        ...
2025-02-24T16:33:40.9607755Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9607873Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9607977Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9608434Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9608439Z 
2025-02-24T16:33:40.9608565Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9608788Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9608855Z        ...
2025-02-24T16:33:40.9608939Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9609056Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9609167Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9609234Z        ...
2025-02-24T16:33:40.9609323Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9609451Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9609550Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9610057Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9610063Z 
2025-02-24T16:33:40.9610188Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9610301Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9610376Z        ...
2025-02-24T16:33:40.9610458Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9610587Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9610694Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9610767Z        ...
2025-02-24T16:33:40.9610848Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9610969Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9611069Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9611560Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9611568Z 
2025-02-24T16:33:40.9611693Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9611797Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9611868Z        ...
2025-02-24T16:33:40.9611955Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9612073Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9612186Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9612253Z        ...
2025-02-24T16:33:40.9612337Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9612456Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9612564Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9613205Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9613341Z 
2025-02-24T16:33:40.9613476Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9613585Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9613656Z        ...
2025-02-24T16:33:40.9613739Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9613962Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9614122Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9614200Z        ...
2025-02-24T16:33:40.9614288Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9614422Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9614524Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9615015Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9615024Z 
2025-02-24T16:33:40.9615156Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9615265Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9615339Z        ...
2025-02-24T16:33:40.9615423Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9615549Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9615777Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9615844Z        ...
2025-02-24T16:33:40.9615928Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9616047Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9616150Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9616636Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9616646Z 
2025-02-24T16:33:40.9616738Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9617106Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9617543Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9617878Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9618371Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9618380Z 
2025-02-24T16:33:40.9618479Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9618835Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9619206Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9619706Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9620166Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9620180Z 
2025-02-24T16:33:40.9620304Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9620418Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9620487Z        ...
2025-02-24T16:33:40.9620574Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9620697Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9620915Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9620990Z        ...
2025-02-24T16:33:40.9621080Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9621214Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9621311Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9621811Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9621817Z 
2025-02-24T16:33:40.9621942Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9622050Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9622123Z        ...
2025-02-24T16:33:40.9622202Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9622330Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9622441Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9622513Z        ...
2025-02-24T16:33:40.9622602Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9622719Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9622822Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9623278Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9623284Z 
2025-02-24T16:33:40.9623409Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9623518Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9623590Z        ...
2025-02-24T16:33:40.9623673Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9623791Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9623901Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9623972Z        ...
2025-02-24T16:33:40.9624056Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9624178Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9624273Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9624772Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9624778Z 
2025-02-24T16:33:40.9624897Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9625008Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9625168Z        ...
2025-02-24T16:33:40.9625249Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9625374Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9625482Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9625554Z        ...
2025-02-24T16:33:40.9625638Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9625762Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9625867Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9626361Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9626366Z 
2025-02-24T16:33:40.9626491Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9626597Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9626671Z        ...
2025-02-24T16:33:40.9626755Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9626877Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9626988Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9627055Z        ...
2025-02-24T16:33:40.9627140Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9627560Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9627673Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9628155Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9628161Z 
2025-02-24T16:33:40.9628286Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9628398Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9628467Z        ...
2025-02-24T16:33:40.9628559Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9628689Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9628804Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9628876Z        ...
2025-02-24T16:33:40.9628956Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9629079Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9629180Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9629684Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9629689Z 
2025-02-24T16:33:40.9629814Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9629918Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9629999Z        ...
2025-02-24T16:33:40.9630081Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9630206Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9630319Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9630395Z        ...
2025-02-24T16:33:40.9630483Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9630602Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9630707Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9631225Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9631230Z 
2025-02-24T16:33:40.9631331Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9631699Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9632152Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9632495Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9633012Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9633020Z 
2025-02-24T16:33:40.9633112Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9633475Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9633953Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9634338Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9634821Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9634827Z 
2025-02-24T16:33:40.9634955Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9635068Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9635136Z        ...
2025-02-24T16:33:40.9635222Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9635342Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9635458Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9635526Z        ...
2025-02-24T16:33:40.9635612Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9635735Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9635835Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9636362Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9636368Z 
2025-02-24T16:33:40.9636489Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9636597Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9636669Z        ...
2025-02-24T16:33:40.9636747Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9636871Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9637080Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9637153Z        ...
2025-02-24T16:33:40.9637233Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9637565Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9637676Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9638170Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9638175Z 
2025-02-24T16:33:40.9638308Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9638418Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9638493Z        ...
2025-02-24T16:33:40.9638583Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9638705Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9638820Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9638893Z        ...
2025-02-24T16:33:40.9638981Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9639101Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9639206Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9639725Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9639852Z 
2025-02-24T16:33:40.9639979Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9640092Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9640158Z        ...
2025-02-24T16:33:40.9640244Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9640368Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9640474Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9640548Z        ...
2025-02-24T16:33:40.9640631Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9640754Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9640850Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9641375Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9641384Z 
2025-02-24T16:33:40.9641511Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9641616Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9641693Z        ...
2025-02-24T16:33:40.9641773Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9641897Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9642009Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9642075Z        ...
2025-02-24T16:33:40.9642160Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9642281Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9642383Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9642880Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9642895Z 
2025-02-24T16:33:40.9643016Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9643126Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9643195Z        ...
2025-02-24T16:33:40.9643280Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9643399Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9643518Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9643594Z        ...
2025-02-24T16:33:40.9643677Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9643802Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9644015Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9644587Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9644596Z 
2025-02-24T16:33:40.9644722Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9644827Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9644903Z        ...
2025-02-24T16:33:40.9644984Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9645108Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9645214Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9645290Z        ...
2025-02-24T16:33:40.9645376Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9645492Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9645598Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9646172Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9646256Z 
2025-02-24T16:33:40.9646358Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9646728Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9647051Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9647497Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9648081Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9648086Z 
2025-02-24T16:33:40.9648178Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9648545Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9648922Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9649297Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9649962Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9649972Z 
2025-02-24T16:33:40.9650099Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9650210Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9650277Z        ...
2025-02-24T16:33:40.9650365Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9650485Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9650597Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9650664Z        ...
2025-02-24T16:33:40.9650749Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9650875Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9650972Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9651560Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9651671Z 
2025-02-24T16:33:40.9651796Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9651904Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9651980Z        ...
2025-02-24T16:33:40.9652058Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9652183Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9652290Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9652363Z        ...
2025-02-24T16:33:40.9652443Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9652573Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9652674Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9653221Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9653230Z 
2025-02-24T16:33:40.9653359Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9653465Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9653539Z        ...
2025-02-24T16:33:40.9653624Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9653743Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9653856Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9653924Z        ...
2025-02-24T16:33:40.9654010Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9654126Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9654232Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9654817Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9654825Z 
2025-02-24T16:33:40.9654945Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9655054Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9655122Z        ...
2025-02-24T16:33:40.9655207Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9655329Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9655436Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9655511Z        ...
2025-02-24T16:33:40.9655592Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9655716Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9655898Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9656487Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9656493Z 
2025-02-24T16:33:40.9656622Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9656726Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9656801Z        ...
2025-02-24T16:33:40.9656880Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9657004Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9657117Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9657184Z        ...
2025-02-24T16:33:40.9657368Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9657491Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9657597Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9658162Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9658176Z 
2025-02-24T16:33:40.9658296Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9658523Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9658593Z        ...
2025-02-24T16:33:40.9658680Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9658801Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9658918Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9658993Z        ...
2025-02-24T16:33:40.9659072Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9659198Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9659296Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9659829Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9659834Z 
2025-02-24T16:33:40.9659962Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9660073Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9660150Z        ...
2025-02-24T16:33:40.9660229Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9660352Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9660461Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9660537Z        ...
2025-02-24T16:33:40.9660623Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9660740Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9660841Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9661375Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9661381Z 
2025-02-24T16:33:40.9661477Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9661849Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9662174Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9662636Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9663179Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9663184Z 
2025-02-24T16:33:40.9663275Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9663636Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9664010Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9664484Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9664991Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9664996Z 
2025-02-24T16:33:40.9665123Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9665237Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9665305Z        ...
2025-02-24T16:33:40.9665391Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9665511Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9665621Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9665690Z        ...
2025-02-24T16:33:40.9665773Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9665897Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9665994Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9666544Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9666550Z 
2025-02-24T16:33:40.9666671Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9666785Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9666858Z        ...
2025-02-24T16:33:40.9666936Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9667058Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9667164Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9667237Z        ...
2025-02-24T16:33:40.9667524Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9667665Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9667771Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9668282Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9668408Z 
2025-02-24T16:33:40.9668537Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9668642Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9668720Z        ...
2025-02-24T16:33:40.9668805Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9668925Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9669040Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9669107Z        ...
2025-02-24T16:33:40.9669193Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9669310Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9669413Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9669954Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9669963Z 
2025-02-24T16:33:40.9670086Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9670196Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9670373Z        ...
2025-02-24T16:33:40.9670459Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9670585Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9670693Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9670766Z        ...
2025-02-24T16:33:40.9670844Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9670969Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9671065Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9671611Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9671620Z 
2025-02-24T16:33:40.9671749Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9671852Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9671927Z        ...
2025-02-24T16:33:40.9672009Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9672136Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9672251Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9672319Z        ...
2025-02-24T16:33:40.9672406Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9672524Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9672626Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9673147Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9673162Z 
2025-02-24T16:33:40.9673283Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9673393Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9673462Z        ...
2025-02-24T16:33:40.9673548Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9673670Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9673782Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9673856Z        ...
2025-02-24T16:33:40.9673936Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9674061Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9674159Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9674682Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9674776Z 
2025-02-24T16:33:40.9674905Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9675010Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9675082Z        ...
2025-02-24T16:33:40.9675160Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9675281Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9675391Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9675465Z        ...
2025-02-24T16:33:40.9675549Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9675666Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9675772Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9676312Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9676317Z 
2025-02-24T16:33:40.9676419Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9676784Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9677185Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9677716Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9678267Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9678276Z 
2025-02-24T16:33:40.9678370Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9678732Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9679100Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9679475Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9679986Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9680109Z 
2025-02-24T16:33:40.9680242Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9680352Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9680427Z        ...
2025-02-24T16:33:40.9680515Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9680641Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9680755Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9680824Z        ...
2025-02-24T16:33:40.9680912Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9681033Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9681138Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9681704Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9681713Z 
2025-02-24T16:33:40.9681836Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9681948Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9682017Z        ...
2025-02-24T16:33:40.9682105Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9682231Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9682486Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9682564Z        ...
2025-02-24T16:33:40.9682646Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9682773Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9682877Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9683387Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9683392Z 
2025-02-24T16:33:40.9683521Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9683630Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9683707Z        ...
2025-02-24T16:33:40.9683786Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9683912Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9684028Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9684098Z        ...
2025-02-24T16:33:40.9684186Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9684308Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9684412Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9684956Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9684962Z 
2025-02-24T16:33:40.9685084Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9685198Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9685267Z        ...
2025-02-24T16:33:40.9685355Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9685475Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9685588Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9685672Z        ...
2025-02-24T16:33:40.9685754Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9685879Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9685976Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9686520Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9686525Z 
2025-02-24T16:33:40.9686654Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9686758Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9686923Z        ...
2025-02-24T16:33:40.9687005Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9687135Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9687349Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9687433Z        ...
2025-02-24T16:33:40.9687521Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9687640Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9687742Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9688265Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9688271Z 
2025-02-24T16:33:40.9688396Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9688505Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9688579Z        ...
2025-02-24T16:33:40.9688664Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9688784Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9688898Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9688971Z        ...
2025-02-24T16:33:40.9689168Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9689292Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9689389Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9689942Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9689947Z 
2025-02-24T16:33:40.9690067Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9690180Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9690255Z        ...
2025-02-24T16:33:40.9690340Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9690464Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9690570Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9690645Z        ...
2025-02-24T16:33:40.9690726Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9690852Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9690952Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9691518Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9691523Z 
2025-02-24T16:33:40.9691621Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9691984Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9692314Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9692646Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9693333Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9693339Z 
2025-02-24T16:33:40.9693429Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9693794Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9694165Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9694537Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9695146Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9695152Z 
2025-02-24T16:33:40.9695279Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9695386Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9695463Z        ...
2025-02-24T16:33:40.9695551Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9695674Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9695785Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9695853Z        ...
2025-02-24T16:33:40.9695941Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9696060Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9696161Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9696739Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9696744Z 
2025-02-24T16:33:40.9696865Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9696975Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9697046Z        ...
2025-02-24T16:33:40.9697132Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9697356Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9697466Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9697539Z        ...
2025-02-24T16:33:40.9697618Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9697749Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9697849Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9698471Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9698476Z 
2025-02-24T16:33:40.9705810Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9705963Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9706039Z        ...
2025-02-24T16:33:40.9706306Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9706438Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9706560Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9706629Z        ...
2025-02-24T16:33:40.9706719Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9706854Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9706966Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9707876Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9707886Z 
2025-02-24T16:33:40.9708027Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9708148Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9708220Z        ...
2025-02-24T16:33:40.9708315Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9708454Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9708567Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9708640Z        ...
2025-02-24T16:33:40.9708723Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9708849Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9709082Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9709669Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9709675Z 
2025-02-24T16:33:40.9709808Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9709913Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9709986Z        ...
2025-02-24T16:33:40.9710067Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9710198Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9710308Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9710377Z        ...
2025-02-24T16:33:40.9710461Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9710583Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9710691Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9711245Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9711256Z 
2025-02-24T16:33:40.9711380Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9711487Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9711556Z        ...
2025-02-24T16:33:40.9711641Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9711757Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9711871Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9711943Z        ...
2025-02-24T16:33:40.9712021Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9712143Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9712242Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9712775Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9712781Z 
2025-02-24T16:33:40.9712907Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9713010Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9713082Z        ...
2025-02-24T16:33:40.9713163Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9713288Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9713535Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9713608Z        ...
2025-02-24T16:33:40.9713691Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9713807Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9713907Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9714447Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9714452Z 
2025-02-24T16:33:40.9714552Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9714921Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9715248Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9715654Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9716196Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9716204Z 
2025-02-24T16:33:40.9716295Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9716657Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9717030Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9717637Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9718150Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9718156Z 
2025-02-24T16:33:40.9718284Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9718392Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9718461Z        ...
2025-02-24T16:33:40.9718547Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9718666Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9718904Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9718972Z        ...
2025-02-24T16:33:40.9719058Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9719180Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9719277Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9719828Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9719834Z 
2025-02-24T16:33:40.9719957Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9720065Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9720137Z        ...
2025-02-24T16:33:40.9720215Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9720339Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9720448Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9720520Z        ...
2025-02-24T16:33:40.9720599Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9720720Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9720821Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9721436Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9721442Z 
2025-02-24T16:33:40.9721570Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9721672Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9721745Z        ...
2025-02-24T16:33:40.9721831Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9721949Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9722059Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9722130Z        ...
2025-02-24T16:33:40.9722213Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9722330Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9722432Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9722980Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9722989Z 
2025-02-24T16:33:40.9723107Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9723215Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9723282Z        ...
2025-02-24T16:33:40.9723369Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9723491Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9723596Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9723672Z        ...
2025-02-24T16:33:40.9723754Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9723876Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9723971Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9724488Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9724497Z 
2025-02-24T16:33:40.9724622Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9724725Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9724797Z        ...
2025-02-24T16:33:40.9724876Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9724998Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9725107Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9725175Z        ...
2025-02-24T16:33:40.9725260Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9725465Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9725565Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9726083Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9726098Z 
2025-02-24T16:33:40.9726219Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9726328Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9726396Z        ...
2025-02-24T16:33:40.9726479Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9726597Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9726706Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9726777Z        ...
2025-02-24T16:33:40.9726855Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9726979Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9727074Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9727724Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9727853Z 
2025-02-24T16:33:40.9727954Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9728316Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9728640Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9728981Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9729521Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9729526Z 
2025-02-24T16:33:40.9729622Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9729982Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9730351Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9730723Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9731368Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9731377Z 
2025-02-24T16:33:40.9731502Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9731605Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9731681Z        ...
2025-02-24T16:33:40.9731776Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9731902Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9732006Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9732079Z        ...
2025-02-24T16:33:40.9732163Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9732284Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9732387Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9732935Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9733026Z 
2025-02-24T16:33:40.9733155Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9733263Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9733331Z        ...
2025-02-24T16:33:40.9733415Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9733533Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9733645Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9733712Z        ...
2025-02-24T16:33:40.9733795Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9733919Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9734014Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9734535Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9734543Z 
2025-02-24T16:33:40.9734663Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9734783Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9734916Z        ...
2025-02-24T16:33:40.9735049Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9735250Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9735363Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9735439Z        ...
2025-02-24T16:33:40.9735517Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9735638Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9735744Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9736289Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9736294Z 
2025-02-24T16:33:40.9736423Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9736526Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9736599Z        ...
2025-02-24T16:33:40.9736683Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9736800Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9736908Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9736976Z        ...
2025-02-24T16:33:40.9737060Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9737176Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9737534Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9738083Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9738089Z 
2025-02-24T16:33:40.9738207Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9738319Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9738388Z        ...
2025-02-24T16:33:40.9738472Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9738594Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9738699Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9738774Z        ...
2025-02-24T16:33:40.9738853Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9738977Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9739070Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9739598Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9739604Z 
2025-02-24T16:33:40.9739726Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9739941Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9740014Z        ...
2025-02-24T16:33:40.9740092Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9740213Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9740322Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9740388Z        ...
2025-02-24T16:33:40.9740471Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9740590Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9740689Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9741213Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9741224Z 
2025-02-24T16:33:40.9741342Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9741449Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9741520Z        ...
2025-02-24T16:33:40.9741604Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9741719Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9741831Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9741905Z        ...
2025-02-24T16:33:40.9741983Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9742103Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9742200Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9742746Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9742756Z 
2025-02-24T16:33:40.9742851Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9743216Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9743543Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9743973Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9744516Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9744522Z 
2025-02-24T16:33:40.9744618Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9744980Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9745345Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9745793Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9746311Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9746317Z 
2025-02-24T16:33:40.9746435Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9746548Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9746624Z        ...
2025-02-24T16:33:40.9746704Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9746826Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9746930Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9747003Z        ...
2025-02-24T16:33:40.9747081Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9747202Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9747502Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9748083Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9748094Z 
2025-02-24T16:33:40.9748220Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9748324Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9748401Z        ...
2025-02-24T16:33:40.9748486Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9748602Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9748713Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9748781Z        ...
2025-02-24T16:33:40.9748865Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9748985Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9749081Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9749610Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9749740Z 
2025-02-24T16:33:40.9749865Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9749977Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9750051Z        ...
2025-02-24T16:33:40.9750138Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9750257Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9750371Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9750444Z        ...
2025-02-24T16:33:40.9750523Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9750649Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9750744Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9751297Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9751307Z 
2025-02-24T16:33:40.9751433Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9751536Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9751613Z        ...
2025-02-24T16:33:40.9751801Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9751926Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9752031Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9752108Z        ...
2025-02-24T16:33:40.9752192Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9752307Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9752412Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9752954Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9752963Z 
2025-02-24T16:33:40.9753090Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9753202Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9753274Z        ...
2025-02-24T16:33:40.9753358Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9753476Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9753589Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9753657Z        ...
2025-02-24T16:33:40.9753742Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9753863Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9753957Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9754485Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9754493Z 
2025-02-24T16:33:40.9754612Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9754720Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9754791Z        ...
2025-02-24T16:33:40.9754871Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9754996Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9755101Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9755174Z        ...
2025-02-24T16:33:40.9755253Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9755377Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9755479Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9756001Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9756007Z 
2025-02-24T16:33:40.9756215Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9756317Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9756390Z        ...
2025-02-24T16:33:40.9756480Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9756597Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9756710Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9756777Z        ...
2025-02-24T16:33:40.9756862Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9756978Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9757079Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9757826Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9757833Z 
2025-02-24T16:33:40.9757928Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9758297Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9758762Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9759085Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9759631Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9759639Z 
2025-02-24T16:33:40.9759734Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9760093Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9760463Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9760843Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9761364Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9761474Z 
2025-02-24T16:33:40.9761598Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9761708Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9761776Z        ...
2025-02-24T16:33:40.9761861Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9761989Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9762095Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9762169Z        ...
2025-02-24T16:33:40.9762248Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9762369Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9762464Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9763029Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9763034Z 
2025-02-24T16:33:40.9763163Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9763267Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9763341Z        ...
2025-02-24T16:33:40.9763422Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9763547Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9763740Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9763808Z        ...
2025-02-24T16:33:40.9763894Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9764010Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9764112Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9764624Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9764637Z 
2025-02-24T16:33:40.9764758Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9764870Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9764939Z        ...
2025-02-24T16:33:40.9765024Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9765142Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9765259Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9765333Z        ...
2025-02-24T16:33:40.9765412Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9765535Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9765632Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9766183Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9766188Z 
2025-02-24T16:33:40.9766313Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9766419Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9766494Z        ...
2025-02-24T16:33:40.9766572Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9766697Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9766803Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9766880Z        ...
2025-02-24T16:33:40.9766962Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9767080Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9767181Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9767836Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9767842Z 
2025-02-24T16:33:40.9767968Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9768079Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9768264Z        ...
2025-02-24T16:33:40.9768348Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9768466Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9768575Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9768651Z        ...
2025-02-24T16:33:40.9768735Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9768857Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9768952Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9769482Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9769488Z 
2025-02-24T16:33:40.9769607Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9769716Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9769795Z        ...
2025-02-24T16:33:40.9769874Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9769997Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9770105Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9770180Z        ...
2025-02-24T16:33:40.9770369Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9770492Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9770592Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9771117Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9771122Z 
2025-02-24T16:33:40.9771248Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9771351Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9771424Z        ...
2025-02-24T16:33:40.9771515Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9771632Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9771741Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9771809Z        ...
2025-02-24T16:33:40.9771893Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9772015Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9772114Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9772661Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9772666Z 
2025-02-24T16:33:40.9772757Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9773129Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9773456Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9773781Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9774413Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9774418Z 
2025-02-24T16:33:40.9774514Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9774873Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9775243Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9775620Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9776220Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9776226Z 
2025-02-24T16:33:40.9776347Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9776460Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9776532Z        ...
2025-02-24T16:33:40.9776619Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9776746Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9776853Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9776927Z        ...
2025-02-24T16:33:40.9777013Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9777138Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9777235Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9777903Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9777908Z 
2025-02-24T16:33:40.9778036Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9778139Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9778216Z        ...
2025-02-24T16:33:40.9778301Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9778426Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9778542Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9778610Z        ...
2025-02-24T16:33:40.9778696Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9778817Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9778920Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9779437Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9779450Z 
2025-02-24T16:33:40.9779571Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9779682Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9779750Z        ...
2025-02-24T16:33:40.9779835Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9780071Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9780187Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9780258Z        ...
2025-02-24T16:33:40.9780336Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9780457Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9780557Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9781113Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9781119Z 
2025-02-24T16:33:40.9781243Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9781347Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9781419Z        ...
2025-02-24T16:33:40.9781498Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9781624Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9781728Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9781800Z        ...
2025-02-24T16:33:40.9781883Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9782002Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9782233Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9782782Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9782788Z 
2025-02-24T16:33:40.9782912Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9783020Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9783087Z        ...
2025-02-24T16:33:40.9783171Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9783288Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9783407Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9783478Z        ...
2025-02-24T16:33:40.9783564Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9783688Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9783789Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9784326Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9784330Z 
2025-02-24T16:33:40.9784450Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9784561Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9784634Z        ...
2025-02-24T16:33:40.9784713Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9784835Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9784944Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9785017Z        ...
2025-02-24T16:33:40.9785098Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9785219Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9785320Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9785885Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9785891Z 
2025-02-24T16:33:40.9786016Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9786120Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9786194Z        ...
2025-02-24T16:33:40.9786278Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9786396Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9786601Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9786670Z        ...
2025-02-24T16:33:40.9786756Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9786874Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9786977Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9787821Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9787831Z 
2025-02-24T16:33:40.9787928Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9788293Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9788622Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9789070Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9789657Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9789666Z 
2025-02-24T16:33:40.9789764Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9790120Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9790493Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9790868Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9791426Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9791432Z 
2025-02-24T16:33:40.9791554Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9791667Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9791737Z        ...
2025-02-24T16:33:40.9791823Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9792098Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9792206Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9792281Z        ...
2025-02-24T16:33:40.9792362Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9792488Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9792590Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9793193Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9793199Z 
2025-02-24T16:33:40.9793327Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9793432Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9793510Z        ...
2025-02-24T16:33:40.9793591Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9793723Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9793836Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9793905Z        ...
2025-02-24T16:33:40.9793990Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9794108Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9794413Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9795090Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9795103Z 
2025-02-24T16:33:40.9795225Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9795404Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9795519Z        ...
2025-02-24T16:33:40.9795636Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9795838Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9795973Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9796050Z        ...
2025-02-24T16:33:40.9796159Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9796379Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9796487Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9797182Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:33:40.9797188Z 
2025-02-24T16:33:40.9797606Z DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-02-24T16:33:40.9798022Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9802598Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T16:33:40.9807523Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T16:33:40.9807838Z At positional index 124, first diff: 0.9929028359129612 != 0.9928779361771577
2025-02-24T16:33:40.9808466Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9808481Z 
2025-02-24T16:33:40.9808608Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9808722Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9808797Z        ...
2025-02-24T16:33:40.9808887Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9809011Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9809125Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9809201Z        ...
2025-02-24T16:33:40.9809281Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9809405Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9809505Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9810091Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9810223Z 
2025-02-24T16:33:40.9810356Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9810461Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9810535Z        ...
2025-02-24T16:33:40.9810618Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9810739Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9810845Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9810920Z        ...
2025-02-24T16:33:40.9811007Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9811124Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9811228Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9811807Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9811816Z 
2025-02-24T16:33:40.9811942Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9812051Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9812119Z        ...
2025-02-24T16:33:40.9812285Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9812405Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9812516Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9812584Z        ...
2025-02-24T16:33:40.9812675Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9812797Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9812892Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9813460Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9813469Z 
2025-02-24T16:33:40.9813592Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9813700Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9813777Z        ...
2025-02-24T16:33:40.9813857Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9813983Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9814088Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9814161Z        ...
2025-02-24T16:33:40.9814251Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9814374Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9814475Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9815018Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9815026Z 
2025-02-24T16:33:40.9815152Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9815255Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9815330Z        ...
2025-02-24T16:33:40.9815414Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9815536Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9815647Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9815714Z        ...
2025-02-24T16:33:40.9815801Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9815916Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9816015Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9816576Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9816673Z 
2025-02-24T16:33:40.9816767Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9817134Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9817609Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9817933Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9818612Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9818618Z 
2025-02-24T16:33:40.9818712Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9819068Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9819440Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9819816Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9820349Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9820358Z 
2025-02-24T16:33:40.9820479Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9820588Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9820658Z        ...
2025-02-24T16:33:40.9820745Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9820872Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9820977Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9821050Z        ...
2025-02-24T16:33:40.9821129Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9821250Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9821346Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9821922Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9822041Z 
2025-02-24T16:33:40.9822170Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9822275Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9822352Z        ...
2025-02-24T16:33:40.9822434Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9822556Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9822669Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9822737Z        ...
2025-02-24T16:33:40.9822822Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9822940Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9823041Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9823581Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9823595Z 
2025-02-24T16:33:40.9823715Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9823823Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9823891Z        ...
2025-02-24T16:33:40.9824055Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9824172Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9824281Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9824353Z        ...
2025-02-24T16:33:40.9824430Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9824554Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9824650Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9825327Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:33:40.9825337Z 
2025-02-24T16:33:40.9825506Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T16:33:40.9825863Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9830820Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:33:40.9835816Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:33:40.9836113Z At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T16:33:40.9836717Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9836728Z 
2025-02-24T16:33:40.9836848Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9836959Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9837027Z        ...
2025-02-24T16:33:40.9837116Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9837235Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9837591Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9837677Z        ...
2025-02-24T16:33:40.9837758Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9837889Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9837987Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9838578Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9838584Z 
2025-02-24T16:33:40.9838715Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9838821Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9838893Z        ...
2025-02-24T16:33:40.9838975Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9839249Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9839361Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9839429Z        ...
2025-02-24T16:33:40.9839514Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9839635Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9839738Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9840308Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9840318Z 
2025-02-24T16:33:40.9840438Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9840548Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9840615Z        ...
2025-02-24T16:33:40.9840699Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9840822Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9840933Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9841009Z        ...
2025-02-24T16:33:40.9841088Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9841213Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9841420Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9841972Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9841977Z 
2025-02-24T16:33:40.9842101Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9842203Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9842274Z        ...
2025-02-24T16:33:40.9842353Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9842480Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9842585Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9842658Z        ...
2025-02-24T16:33:40.9842740Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9842857Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9842960Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9843434Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9843439Z 
2025-02-24T16:33:40.9843567Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9843674Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9843742Z        ...
2025-02-24T16:33:40.9843825Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9843942Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9844055Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9844125Z        ...
2025-02-24T16:33:40.9844210Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9844332Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9844430Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9844920Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9844925Z 
2025-02-24T16:33:40.9845016Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9845381Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9845819Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9846142Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9846631Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9846640Z 
2025-02-24T16:33:40.9846734Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9847091Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9847811Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9848196Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9848669Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9848675Z 
2025-02-24T16:33:40.9848798Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9848908Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9848975Z        ...
2025-02-24T16:33:40.9849059Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9849184Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9849293Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9849365Z        ...
2025-02-24T16:33:40.9849444Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9849566Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9849665Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9850167Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9850172Z 
2025-02-24T16:33:40.9850296Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9850400Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9850472Z        ...
2025-02-24T16:33:40.9850552Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9850673Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9850911Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9850979Z        ...
2025-02-24T16:33:40.9851063Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9851179Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9851280Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9851746Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9851759Z 
2025-02-24T16:33:40.9851878Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9851987Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9852054Z        ...
2025-02-24T16:33:40.9852138Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9852255Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9852366Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9852443Z        ...
2025-02-24T16:33:40.9852522Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9852641Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9852737Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9853340Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:33:40.9853455Z 
2025-02-24T16:33:40.9853625Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T16:33:40.9853988Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9858943Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:33:40.9863833Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:33:40.9864823Z At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T16:33:40.9865353Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9865368Z 
2025-02-24T16:33:40.9865490Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9865602Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9865673Z        ...
2025-02-24T16:33:40.9865759Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9865881Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9865996Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9866068Z        ...
2025-02-24T16:33:40.9866148Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9866269Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9866366Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9866863Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9866872Z 
2025-02-24T16:33:40.9866999Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9867103Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9867175Z        ...
2025-02-24T16:33:40.9867357Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9867484Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9867590Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9867662Z        ...
2025-02-24T16:33:40.9867745Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9867861Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9867962Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9868455Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9868575Z 
2025-02-24T16:33:40.9868702Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9868810Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9868877Z        ...
2025-02-24T16:33:40.9868961Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9869082Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9869195Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9869263Z        ...
2025-02-24T16:33:40.9869345Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9869467Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9869563Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9870041Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9870050Z 
2025-02-24T16:33:40.9870169Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9870275Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9870347Z        ...
2025-02-24T16:33:40.9870425Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9870657Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9870764Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9870839Z        ...
2025-02-24T16:33:40.9870918Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9871038Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9871139Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9871628Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9871633Z 
2025-02-24T16:33:40.9871763Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9871866Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9871938Z        ...
2025-02-24T16:33:40.9872022Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9872138Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9872250Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9872317Z        ...
2025-02-24T16:33:40.9872402Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9872517Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9872619Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9873127Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9873133Z 
2025-02-24T16:33:40.9873224Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9873591Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9873918Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9874241Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9874829Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9874837Z 
2025-02-24T16:33:40.9874933Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9875286Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9875655Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9876103Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9876580Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9876588Z 
2025-02-24T16:33:40.9876708Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9876820Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9876889Z        ...
2025-02-24T16:33:40.9876974Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9877098Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9877208Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9877410Z        ...
2025-02-24T16:33:40.9877491Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9877615Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9877709Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9878227Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9878232Z 
2025-02-24T16:33:40.9878357Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9878463Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9878535Z        ...
2025-02-24T16:33:40.9878617Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9878740Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9878857Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9878925Z        ...
2025-02-24T16:33:40.9879006Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9879122Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9879222Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9879697Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9879707Z 
2025-02-24T16:33:40.9879826Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9880053Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9880120Z        ...
2025-02-24T16:33:40.9880203Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9880320Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9880429Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9880504Z        ...
2025-02-24T16:33:40.9880582Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9880703Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9880799Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9881311Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9881316Z 
2025-02-24T16:33:40.9881440Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9881541Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9881617Z        ...
2025-02-24T16:33:40.9881696Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9881817Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9881921Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9881993Z        ...
2025-02-24T16:33:40.9882186Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9882302Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9882402Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9882910Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9882915Z 
2025-02-24T16:33:40.9883038Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9883146Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9883213Z        ...
2025-02-24T16:33:40.9883299Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9883415Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9883523Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9883590Z        ...
2025-02-24T16:33:40.9883675Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9883798Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9883894Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9884387Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9884392Z 
2025-02-24T16:33:40.9884511Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9884618Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9884691Z        ...
2025-02-24T16:33:40.9884770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9884897Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9885002Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9885077Z        ...
2025-02-24T16:33:40.9885156Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9885280Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9885385Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9885860Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9885865Z 
2025-02-24T16:33:40.9885989Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9886091Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9886164Z        ...
2025-02-24T16:33:40.9886248Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9886452Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9886562Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9886632Z        ...
2025-02-24T16:33:40.9886719Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9886835Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9886938Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9887570Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9887577Z 
2025-02-24T16:33:40.9887673Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9888036Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9888365Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9888819Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9889314Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9889323Z 
2025-02-24T16:33:40.9889418Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9889773Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9890155Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9890529Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9891001Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9891006Z 
2025-02-24T16:33:40.9891127Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9891236Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9891303Z        ...
2025-02-24T16:33:40.9891388Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9891619Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9891731Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9891803Z        ...
2025-02-24T16:33:40.9891884Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9892006Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9892106Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9892620Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9892626Z 
2025-02-24T16:33:40.9892749Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9892852Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9892928Z        ...
2025-02-24T16:33:40.9893007Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9893137Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9893245Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9893318Z        ...
2025-02-24T16:33:40.9893401Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9893516Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9893616Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9894164Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9894170Z 
2025-02-24T16:33:40.9894293Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9894400Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9894468Z        ...
2025-02-24T16:33:40.9894551Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9894667Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9894777Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9894847Z        ...
2025-02-24T16:33:40.9894935Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9895055Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9895150Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9895655Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9895661Z 
2025-02-24T16:33:40.9895779Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9895887Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9895958Z        ...
2025-02-24T16:33:40.9896036Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9896156Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9896259Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9896339Z        ...
2025-02-24T16:33:40.9896417Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9896538Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9896638Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9897135Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9897143Z 
2025-02-24T16:33:40.9897369Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9897475Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9897548Z        ...
2025-02-24T16:33:40.9897630Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9897746Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9897859Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9897927Z        ...
2025-02-24T16:33:40.9898126Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9898242Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9898341Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9898831Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9898840Z 
2025-02-24T16:33:40.9898960Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9899070Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9899137Z        ...
2025-02-24T16:33:40.9899221Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9899342Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9899447Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9899520Z        ...
2025-02-24T16:33:40.9899599Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9899724Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9899820Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9900366Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9900480Z 
2025-02-24T16:33:40.9900607Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9900710Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9900782Z        ...
2025-02-24T16:33:40.9900862Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9900983Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9901095Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9901162Z        ...
2025-02-24T16:33:40.9901246Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9901362Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9901465Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9901996Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9902013Z 
2025-02-24T16:33:40.9902107Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9902468Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9902788Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9903118Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9903669Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9903674Z 
2025-02-24T16:33:40.9903773Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9904130Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9904580Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9904953Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9905455Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9905536Z 
2025-02-24T16:33:40.9905658Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9905768Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9905837Z        ...
2025-02-24T16:33:40.9905926Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9906045Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9906156Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9906234Z        ...
2025-02-24T16:33:40.9906312Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9906436Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9906532Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9907079Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9907087Z 
2025-02-24T16:33:40.9907212Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9907425Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9907498Z        ...
2025-02-24T16:33:40.9907577Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9907698Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9907803Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9907875Z        ...
2025-02-24T16:33:40.9907958Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9908075Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9908178Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9908681Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9908686Z 
2025-02-24T16:33:40.9908814Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9908922Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9908988Z        ...
2025-02-24T16:33:40.9909071Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9909187Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9909298Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9909365Z        ...
2025-02-24T16:33:40.9909450Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9909572Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9909805Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9910349Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9910354Z 
2025-02-24T16:33:40.9910473Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9910584Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9910656Z        ...
2025-02-24T16:33:40.9910735Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9910857Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9910963Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9911033Z        ...
2025-02-24T16:33:40.9911112Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9911233Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9911333Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9911869Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9911875Z 
2025-02-24T16:33:40.9911997Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9912209Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9912282Z        ...
2025-02-24T16:33:40.9912366Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9912482Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9912591Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9912663Z        ...
2025-02-24T16:33:40.9912746Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9912860Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9912965Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9913485Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9913494Z 
2025-02-24T16:33:40.9913611Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9913718Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9913794Z        ...
2025-02-24T16:33:40.9913878Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9914000Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9914105Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9914176Z        ...
2025-02-24T16:33:40.9914255Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9914377Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9914473Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9915052Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9915061Z 
2025-02-24T16:33:40.9915185Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9915288Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9915363Z        ...
2025-02-24T16:33:40.9915441Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9915565Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9915674Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9915742Z        ...
2025-02-24T16:33:40.9915826Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9915944Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9916043Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9916629Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9916723Z 
2025-02-24T16:33:40.9916815Z Series values are different (4.04858 %)
2025-02-24T16:33:40.9917180Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9917637Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9917968Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:33:40.9918672Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:33:40.9918678Z 
2025-02-24T16:33:40.9918775Z Series values are different (6.47773 %)
2025-02-24T16:33:40.9919131Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9919511Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9919886Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:33:40.9920445Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9920457Z 
2025-02-24T16:33:40.9920577Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9920691Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9920758Z        ...
2025-02-24T16:33:40.9920843Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9920960Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9921070Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9921142Z        ...
2025-02-24T16:33:40.9921220Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9921341Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9921438Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9922150Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9922156Z 
2025-02-24T16:33:40.9922279Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9922381Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9922456Z        ...
2025-02-24T16:33:40.9922536Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9922656Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9922762Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9922835Z        ...
2025-02-24T16:33:40.9922919Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9923033Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9923133Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9923695Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9923703Z 
2025-02-24T16:33:40.9923829Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9923937Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9924107Z        ...
2025-02-24T16:33:40.9924191Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9924309Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9924419Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9924486Z        ...
2025-02-24T16:33:40.9924569Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9924689Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9924784Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9925389Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9925399Z 
2025-02-24T16:33:40.9925517Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9925627Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9925701Z        ...
2025-02-24T16:33:40.9925780Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9925901Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9926006Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9926078Z        ...
2025-02-24T16:33:40.9926157Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9926278Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9926376Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9926968Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9926976Z 
2025-02-24T16:33:40.9927099Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9927206Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9927401Z        ...
2025-02-24T16:33:40.9927489Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9927608Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9927717Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9927785Z        ...
2025-02-24T16:33:40.9927868Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9927983Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9928084Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9928679Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:33:40.9928815Z 
2025-02-24T16:33:40.9928937Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:33:40.9929045Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9929113Z        ...
2025-02-24T16:33:40.9929201Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9929324Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9929429Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:33:40.9929502Z        ...
2025-02-24T16:33:40.9929582Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:33:40.9929716Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:33:40.9929817Z At positional index 75, first diff: 6 != 7
2025-02-24T16:33:40.9930128Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[stimulated_emission_factor] - AssertionError: 
2025-02-24T16:33:40.9930238Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9930243Z 
2025-02-24T16:33:40.9930336Z Mismatched elements: 120 / 584480 (0.0205%)
2025-02-24T16:33:40.9930427Z Max absolute difference: 1.
2025-02-24T16:33:40.9930511Z Max relative difference: 1.
2025-02-24T16:33:40.9930642Z  x: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:33:40.9930858Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:33:40.9930958Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T16:33:40.9931077Z  y: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:33:40.9931169Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:33:40.9931268Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T16:33:40.9931560Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_lower_level_index] - AssertionError: 
2025-02-24T16:33:40.9931671Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9931675Z 
2025-02-24T16:33:40.9931774Z Mismatched elements: 748 / 29224 (2.56%)
2025-02-24T16:33:40.9931863Z Max absolute difference: 4005
2025-02-24T16:33:40.9931960Z Max relative difference: 26.00649351
2025-02-24T16:33:40.9932066Z  x: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T16:33:40.9932170Z  y: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T16:33:40.9932456Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_upper_level_index] - AssertionError: 
2025-02-24T16:33:40.9932554Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9932558Z 
2025-02-24T16:33:40.9932652Z Mismatched elements: 1847 / 29224 (6.32%)
2025-02-24T16:33:40.9932738Z Max absolute difference: 4046
2025-02-24T16:33:40.9932835Z Max relative difference: 24.82208589
2025-02-24T16:33:40.9932938Z  x: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T16:33:40.9933033Z  y: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T16:33:40.9933306Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_sobolev] - AssertionError: 
2025-02-24T16:33:40.9933401Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9933405Z 
2025-02-24T16:33:40.9933503Z Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T16:33:40.9933593Z Max absolute difference: 0.99984222
2025-02-24T16:33:40.9933692Z Max relative difference: 6337.12154973
2025-02-24T16:33:40.9933779Z  x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.9933859Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.9933940Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:33:40.9934021Z  y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.9934101Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:33:40.9934176Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:33:40.9934418Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines] - AssertionError: 
2025-02-24T16:33:40.9934628Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9934632Z 
2025-02-24T16:33:40.9934726Z Mismatched elements: 13335 / 263016 (5.07%)
2025-02-24T16:33:40.9934828Z Max absolute difference: 4.25260542e+12
2025-02-24T16:33:40.9934918Z Max relative difference: 18196.0085861
2025-02-24T16:33:40.9935071Z  x: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T16:33:40.9935157Z         4.043917e+10, 6.677200e-07],
2025-02-24T16:33:40.9935291Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T16:33:40.9935436Z  y: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T16:33:40.9935513Z         4.043917e+10, 6.677200e-07],
2025-02-24T16:33:40.9935646Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T16:33:40.9935886Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[f_lu] - AssertionError: 
2025-02-24T16:33:40.9935986Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9935994Z 
2025-02-24T16:33:40.9936089Z Mismatched elements: 2221 / 29224 (7.6%)
2025-02-24T16:33:40.9936177Z Max absolute difference: 2.92713618
2025-02-24T16:33:40.9936271Z Max relative difference: 18196.0085861
2025-02-24T16:33:40.9936409Z  x: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T16:33:40.9936568Z        1.126883e+00, 4.414472e-04])
2025-02-24T16:33:40.9936708Z  y: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T16:33:40.9936782Z        1.126883e+00, 4.414472e-04])
2025-02-24T16:33:40.9937046Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[tau_sobolevs] - AssertionError: 
2025-02-24T16:33:40.9937140Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9937144Z 
2025-02-24T16:33:40.9937240Z Mismatched elements: 39620 / 584480 (6.78%)
2025-02-24T16:33:40.9937434Z Max absolute difference: 282815.33818472
2025-02-24T16:33:40.9937530Z Max relative difference: 4.12352828e+47
2025-02-24T16:33:40.9937677Z  x: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T16:33:40.9937756Z         0.000000e+00, 0.000000e+00],
2025-02-24T16:33:40.9937888Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T16:33:40.9938022Z  y: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T16:33:40.9938107Z         0.000000e+00, 0.000000e+00],
2025-02-24T16:33:40.9938237Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T16:33:40.9938723Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_w] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:33:40.9938729Z 
2025-02-24T16:33:40.9938892Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:33:40.9938965Z [index]: [0, 1]
2025-02-24T16:33:40.9939069Z [left]:  [0.40039163797855976, 0.45006901732183335]
2025-02-24T16:33:40.9939166Z [right]: [0.40039163797855976, 0.45013644671958974]
2025-02-24T16:33:40.9939344Z At positional index 1, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-24T16:33:40.9939833Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_rad] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:33:40.9939841Z 
2025-02-24T16:33:40.9939995Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:33:40.9940072Z [index]: [0, 1]
2025-02-24T16:33:40.9940166Z [left]:  [9967.488442185557, 10091.396322818857]
2025-02-24T16:33:40.9940264Z [right]: [9967.488442185557, 10090.925208074616]
2025-02-24T16:33:40.9940444Z At positional index 1, first diff: 10091.396322818857 != 10090.925208074616
2025-02-24T16:33:40.9940974Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_electron_densities] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:33:40.9940979Z 
2025-02-24T16:33:40.9941258Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:33:40.9941333Z [index]: [0, 1]
2025-02-24T16:33:40.9941435Z [left]:  [2869544645.3209715, 2881024886.0882797]
2025-02-24T16:33:40.9941537Z [right]: [2869544645.3209715, 2880986026.9779425]
2025-02-24T16:33:40.9941697Z At positional index 1, first diff: 2881024886.0882797 != 2880986026.9779425
2025-02-24T16:33:40.9942079Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[nu_bar_estimator] - AssertionError: Series are different
2025-02-24T16:33:40.9942084Z 
2025-02-24T16:33:40.9942178Z Series values are different (100.0 %)
2025-02-24T16:33:40.9942311Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:33:40.9943533Z [left]:  [1.020204277799175e+29, 8.604643039338653e+28, 7.621843612415334e+28, 6.887796775939623e+28, 6.338143063845976e+28, 5.9617708329702514e+28, 5.583215038688496e+28, 5.2621420110438605e+28, 5.007194689998156e+28, 4.79514420355033e+28, 4.630537292368222e+28, 4.4256902590810215e+28, 4.270865369572798e+28, 4.0945442836573385e+28, 3.972280940559009e+28, 3.88415238527491e+28, 3.7498225331847816e+28, 3.6666118688506595e+28, 3.5319738797726317e+28, 3.4372707153252074e+28]
2025-02-24T16:33:40.9944730Z [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-02-24T16:33:40.9945037Z At positional index 0, first diff: 1.020204277799175e+29 != 1.0190851489144414e+29
2025-02-24T16:33:40.9945406Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[j_estimator] - AssertionError: Series are different
2025-02-24T16:33:40.9945415Z 
2025-02-24T16:33:40.9945507Z Series values are different (100.0 %)
2025-02-24T16:33:40.9945635Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:33:40.9946610Z [left]:  [116635492761989.14, 98171051632121.9, 86872515261187.03, 78289696965689.94, 72209193315676.52, 67743848273202.75, 63510940656107.945, 60117004438842.41, 57572723670164.85, 55316097836075.21, 53398108009568.72, 51391839595543.516, 49914799926154.26, 48252386019894.586, 46984233483222.11, 46076787175987.375, 45005288890715.836, 44179675761282.96, 43040066710169.75, 42141149121109.805]
2025-02-24T16:33:40.9947681Z [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-02-24T16:33:40.9947863Z At positional index 0, first diff: 116635492761989.14 != 116548101693134.0
2025-02-24T16:33:40.9948227Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[t_radiative] - AssertionError: Series are different
2025-02-24T16:33:40.9948232Z 
2025-02-24T16:33:40.9948323Z Series values are different (90.0 %)
2025-02-24T16:33:40.9948454Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:33:40.9949453Z [left]:  [10091.396322818857, 10113.672762424394, 10138.572146470884, 10142.407829541042, 10149.471061360666, 10124.731447668684, 10084.96501000204, 10057.884801342841, 10073.983914823792, 10031.92450183089, 10029.890159447663, 9982.658841271634, 9943.375727608094, 9914.259749796103, 9893.924180562473, 9854.860600288928, 9802.891513260804, 9774.848565783679, 9735.162327402864, 9698.91109582603]
2025-02-24T16:33:40.9950452Z [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-02-24T16:33:40.9950739Z At positional index 0, first diff: 10091.396322818857 != 10090.925208074616
2025-02-24T16:33:40.9951120Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[dilution_factor] - AssertionError: Series are different
2025-02-24T16:33:40.9951125Z 
2025-02-24T16:33:40.9951215Z Series values are different (95.0 %)
2025-02-24T16:33:40.9951338Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:33:40.9952421Z [left]:  [0.45006901732183335, 0.3591778672440068, 0.2993157944909688, 0.2578615845098733, 0.22544220327867867, 0.2010999763061898, 0.18257381854718469, 0.16658101749462778, 0.15049754388199085, 0.13975435818105253, 0.1286220608480736, 0.12092168181342128, 0.11342334056954673, 0.10650389106044367, 0.10016109465785494, 0.09484390983006774, 0.09052533757303853, 0.0858591268281399, 0.08203028321765116, 0.07824287530618096]
2025-02-24T16:33:40.9953508Z [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-02-24T16:33:40.9953787Z At positional index 0, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-24T16:33:40.9954149Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_nus] - AssertionError: Series are different
2025-02-24T16:33:40.9954155Z 
2025-02-24T16:33:40.9954249Z Series values are different (5.1125 %)
2025-02-24T16:33:40.9954620Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9959955Z [left]:  [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.8, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.4, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313315.0, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-02-24T16:33:40.9965187Z [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-02-24T16:33:40.9965492Z At positional index 56, first diff: 657003154645147.8 != 657025184715239.1
2025-02-24T16:33:40.9965881Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_energies] - AssertionError: Series are different
2025-02-24T16:33:40.9965887Z 
2025-02-24T16:33:40.9965987Z Series values are different (1.3025 %)
2025-02-24T16:33:40.9966348Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:33:40.9972640Z [left]:  [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503756e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.558071221185956e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.2709056323648205e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544446e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.5337925181007677e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T16:33:40.9979130Z [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T16:33:40.9979356Z At positional index 414, first diff: 2.5657552576608082e-05 != 2.5347525852067693e-05
2025-02-24T16:33:40.9979720Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets - AssertionError: 
2025-02-24T16:33:40.9979936Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9979941Z 
2025-02-24T16:33:40.9980034Z Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T16:33:40.9980133Z Max absolute difference: 4.30543741e+37
2025-02-24T16:33:40.9980225Z Max relative difference: 1.
2025-02-24T16:33:40.9980381Z  x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9980465Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9980604Z  y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9980685Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9981071Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets_reabsorbed - AssertionError: 
2025-02-24T16:33:40.9981173Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9981178Z 
2025-02-24T16:33:40.9981274Z Mismatched elements: 252 / 10000 (2.52%)
2025-02-24T16:33:40.9981369Z Max absolute difference: 4.15247374e+37
2025-02-24T16:33:40.9981459Z Max relative difference: 1.
2025-02-24T16:33:40.9981597Z  x: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9981678Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9981923Z  y: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9982005Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9982306Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve - AssertionError: 
2025-02-24T16:33:40.9982402Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9982406Z 
2025-02-24T16:33:40.9982500Z Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T16:33:40.9982589Z Max absolute difference: 4.30543741e+37
2025-02-24T16:33:40.9982679Z Max relative difference: 1.
2025-02-24T16:33:40.9989932Z  x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9990063Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9990238Z  y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:33:40.9990318Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9990654Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_j_blue_estimators - AssertionError: 
2025-02-24T16:33:40.9990766Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9990771Z 
2025-02-24T16:33:40.9990871Z Mismatched elements: 491895 / 584480 (84.2%)
2025-02-24T16:33:40.9990971Z Max absolute difference: 5.32418652e-19
2025-02-24T16:33:40.9991060Z Max relative difference: 12.23359055
2025-02-24T16:33:40.9991153Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9991235Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9991318Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.9991405Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9991482Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9991565Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.9991836Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_spectrum - AssertionError: 
2025-02-24T16:33:40.9991943Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9991947Z 
2025-02-24T16:33:40.9992043Z Mismatched elements: 4832 / 10000 (48.3%)
2025-02-24T16:33:40.9992139Z Max absolute difference: 1.38672909e+39
2025-02-24T16:33:40.9992233Z Max relative difference: 5.25284451
2025-02-24T16:33:40.9992387Z  x: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.9992471Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9992610Z  y: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.9992690Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9993000Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_virtual_spectrum - AssertionError: 
2025-02-24T16:33:40.9993100Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9993271Z 
2025-02-24T16:33:40.9993372Z Mismatched elements: 5933 / 10000 (59.3%)
2025-02-24T16:33:40.9993464Z Max absolute difference: 5.26760031e+38
2025-02-24T16:33:40.9993560Z Max relative difference: 35562.41947434
2025-02-24T16:33:40.9993711Z  x: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.9993793Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9993941Z  y: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.9994018Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9994474Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-downbranch] - AssertionError: 
2025-02-24T16:33:40.9994577Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9994586Z 
2025-02-24T16:33:40.9994687Z Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T16:33:40.9994789Z Max absolute difference: 7.03072887e-19
2025-02-24T16:33:40.9994883Z Max relative difference: 7.72237896
2025-02-24T16:33:40.9994972Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9995052Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9995137Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.9995226Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9995301Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9995496Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.9995926Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-downbranch] - AssertionError: 
2025-02-24T16:33:40.9996026Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9996030Z 
2025-02-24T16:33:40.9996119Z Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T16:33:40.9996213Z Max absolute difference: 2.09719426e+39
2025-02-24T16:33:40.9996305Z Max relative difference: 4.0036592
2025-02-24T16:33:40.9996452Z  x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.9996539Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9996678Z  y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T16:33:40.9996762Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:40.9997217Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-downbranch] - AssertionError: 
2025-02-24T16:33:40.9997547Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9997557Z 
2025-02-24T16:33:40.9997718Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:33:40.9997824Z Max absolute difference: 5.00661745e+37
2025-02-24T16:33:40.9997919Z Max relative difference: 17.51202125
2025-02-24T16:33:40.9998058Z  x: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-02-24T16:33:40.9998138Z        2.279436e+31, 2.243943e+31])
2025-02-24T16:33:40.9998279Z  y: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-02-24T16:33:40.9998354Z        2.292907e+31, 2.257206e+31])
2025-02-24T16:33:40.9998798Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-macroatom] - AssertionError: 
2025-02-24T16:33:40.9998892Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:40.9998897Z 
2025-02-24T16:33:40.9999001Z Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T16:33:40.9999101Z Max absolute difference: 4.67863561e-19
2025-02-24T16:33:40.9999187Z Max relative difference: 3.25828651
2025-02-24T16:33:40.9999273Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9999353Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9999436Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:40.9999515Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9999595Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:40.9999675Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:41.0000123Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-macroatom] - AssertionError: 
2025-02-24T16:33:41.0000359Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0000364Z 
2025-02-24T16:33:41.0000452Z Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T16:33:41.0000549Z Max absolute difference: 8.5486318e+38
2025-02-24T16:33:41.0000640Z Max relative difference: 1.86186015
2025-02-24T16:33:41.0000782Z  x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T16:33:41.0000863Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0000997Z  y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T16:33:41.0001078Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0001523Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-macroatom] - AssertionError: 
2025-02-24T16:33:41.0001621Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0001626Z 
2025-02-24T16:33:41.0001719Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:33:41.0001813Z Max absolute difference: 2.90101642e+37
2025-02-24T16:33:41.0001903Z Max relative difference: 0.98973757
2025-02-24T16:33:41.0002039Z  x: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-02-24T16:33:41.0002119Z        1.330497e+31, 1.294462e+31])
2025-02-24T16:33:41.0002387Z  y: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-02-24T16:33:41.0002462Z        1.375141e+31, 1.337928e+31])
2025-02-24T16:33:41.0002900Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-macroatom] - AssertionError: 
2025-02-24T16:33:41.0002999Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0003004Z 
2025-02-24T16:33:41.0003106Z Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T16:33:41.0003200Z Max absolute difference: 4.67863561e-19
2025-02-24T16:33:41.0003285Z Max relative difference: 3.25828651
2025-02-24T16:33:41.0003375Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:41.0003455Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:41.0003537Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:41.0003616Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:41.0003700Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:41.0003780Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:41.0004197Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-macroatom] - AssertionError: 
2025-02-24T16:33:41.0004297Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0004301Z 
2025-02-24T16:33:41.0004388Z Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T16:33:41.0004483Z Max absolute difference: 8.5486318e+38
2025-02-24T16:33:41.0004569Z Max relative difference: 1.86186015
2025-02-24T16:33:41.0004713Z  x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T16:33:41.0004792Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0004928Z  y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T16:33:41.0005009Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0005448Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-macroatom] - AssertionError: 
2025-02-24T16:33:41.0005551Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0005555Z 
2025-02-24T16:33:41.0005650Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:33:41.0005740Z Max absolute difference: 2.99183385e+37
2025-02-24T16:33:41.0005832Z Max relative difference: 0.98992197
2025-02-24T16:33:41.0005967Z  x: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-02-24T16:33:41.0006048Z        1.260980e+31, 1.222587e+31])
2025-02-24T16:33:41.0006183Z  y: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-02-24T16:33:41.0006264Z        1.193005e+31, 1.164854e+31])
2025-02-24T16:33:41.0006705Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-downbranch] - AssertionError: 
2025-02-24T16:33:41.0006918Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0006922Z 
2025-02-24T16:33:41.0007022Z Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T16:33:41.0007112Z Max absolute difference: 7.03072887e-19
2025-02-24T16:33:41.0007208Z Max relative difference: 7.72237896
2025-02-24T16:33:41.0007411Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:41.0007490Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:41.0007572Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:41.0007651Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:41.0007732Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:33:41.0007807Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:33:41.0008227Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-downbranch] - AssertionError: 
2025-02-24T16:33:41.0008330Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0008335Z 
2025-02-24T16:33:41.0008423Z Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T16:33:41.0008516Z Max absolute difference: 2.09719426e+39
2025-02-24T16:33:41.0008604Z Max relative difference: 4.0036592
2025-02-24T16:33:41.0008746Z  x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T16:33:41.0008943Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0009078Z  y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T16:33:41.0009161Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0009603Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-downbranch] - AssertionError: 
2025-02-24T16:33:41.0009702Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0009706Z 
2025-02-24T16:33:41.0009798Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:33:41.0009891Z Max absolute difference: 5.0153284e+37
2025-02-24T16:33:41.0009981Z Max relative difference: 4.90769503
2025-02-24T16:33:41.0010118Z  x: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-02-24T16:33:41.0010197Z        2.088676e+31, 2.060278e+31])
2025-02-24T16:33:41.0010330Z  y: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-02-24T16:33:41.0010415Z        2.124305e+31, 2.101081e+31])
2025-02-24T16:33:41.0010763Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop - AssertionError: 
2025-02-24T16:33:41.0010858Z Not equal to tolerance rtol=1e-13, atol=0
2025-02-24T16:33:41.0010862Z 
2025-02-24T16:33:41.0010950Z Mismatched elements: 20 / 20 (100%)
2025-02-24T16:33:41.0011038Z Max absolute difference: 2.25821059e+25
2025-02-24T16:33:41.0011129Z Max relative difference: 0.00054426
2025-02-24T16:33:41.0011261Z  x: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-02-24T16:33:41.0011383Z        6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-02-24T16:33:41.0011512Z        4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-02-24T16:33:41.0011641Z  y: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-02-24T16:33:41.0011759Z        6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-02-24T16:33:41.0011878Z        4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-02-24T16:33:41.0012267Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop_vpacket_log - AssertionError: 
2025-02-24T16:33:41.0012379Z Not equal to tolerance rtol=1e-12, atol=1e-15
2025-02-24T16:33:41.0012384Z 
2025-02-24T16:33:41.0012468Z Mismatched elements: 20 / 20 (100%)
2025-02-24T16:33:41.0012565Z Max absolute difference: 1.93283629e+25
2025-02-24T16:33:41.0012651Z Max relative difference: 0.00029148
2025-02-24T16:33:41.0012789Z  x: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-02-24T16:33:41.0012908Z        6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-02-24T16:33:41.0013140Z        4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-02-24T16:33:41.0013271Z  y: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-02-24T16:33:41.0013379Z        6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-02-24T16:33:41.0013499Z        4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-02-24T16:33:41.0013832Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_boundary_interactions - AssertionError: 
2025-02-24T16:33:41.0013918Z Arrays are not equal
2025-02-24T16:33:41.0013922Z 
2025-02-24T16:33:41.0014015Z (shapes (4000, 64), (4000, 62) mismatch)
2025-02-24T16:33:41.0014147Z  x: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:33:41.0014233Z         (-1, -1, -1), (-1, -1, -1)],
2025-02-24T16:33:41.0014334Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T16:33:41.0014461Z  y: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:33:41.0014556Z         (-1, -1, -1), (-1, -1, -1)],
2025-02-24T16:33:41.0014654Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T16:33:41.0015078Z FAILED tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py::test_montecarlo_main_loop_weighted - AssertionError: 
2025-02-24T16:33:41.0015254Z Not equal to tolerance rtol=0.01, atol=0
2025-02-24T16:33:41.0015258Z 
2025-02-24T16:33:41.0015354Z Mismatched elements: 33 / 100000 (0.033%)
2025-02-24T16:33:41.0015451Z Max absolute difference: 2.00640487e-05
2025-02-24T16:33:41.0015539Z Max relative difference: 2.06329455
2025-02-24T16:33:41.0015700Z  x: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T16:33:41.0015785Z        -9.757136e-06,  1.019764e-05])
2025-02-24T16:33:41.0015935Z  y: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T16:33:41.0016014Z        -9.757136e-06,  1.019764e-05])
2025-02-24T16:33:41.0016482Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - AssertionError: 
2025-02-24T16:33:41.0016586Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0016589Z 
2025-02-24T16:33:41.0016676Z (shapes (508,), (515,) mismatch)
2025-02-24T16:33:41.0016813Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:33:41.0016927Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:33:41.0017050Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:33:41.0017181Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:33:41.0017393Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:33:41.0017515Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:33:41.0017968Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - AssertionError: 
2025-02-24T16:33:41.0018073Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0018078Z 
2025-02-24T16:33:41.0018164Z (shapes (558,), (560,) mismatch)
2025-02-24T16:33:41.0018290Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:33:41.0018409Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:33:41.0018522Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:33:41.0018650Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:33:41.0018756Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:33:41.0018873Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:33:41.0019325Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - AssertionError: 
2025-02-24T16:33:41.0019537Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0019540Z 
2025-02-24T16:33:41.0019628Z (shapes (147,), (136,) mismatch)
2025-02-24T16:33:41.0019752Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:33:41.0019865Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:33:41.0019987Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:33:41.0020110Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:33:41.0020222Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:33:41.0020334Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:33:41.0020782Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - AssertionError: 
2025-02-24T16:33:41.0020880Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0020885Z 
2025-02-24T16:33:41.0020968Z (shapes (159,), (153,) mismatch)
2025-02-24T16:33:41.0021097Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:33:41.0021203Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:33:41.0021321Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:33:41.0021449Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:33:41.0021664Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:33:41.0021783Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:33:41.0022227Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - AssertionError: 
2025-02-24T16:33:41.0022326Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0022330Z 
2025-02-24T16:33:41.0022414Z (shapes (508,), (515,) mismatch)
2025-02-24T16:33:41.0022541Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:33:41.0022656Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:33:41.0022769Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:33:41.0022896Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:33:41.0023002Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:33:41.0023124Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:33:41.0023579Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - AssertionError: 
2025-02-24T16:33:41.0023674Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0023678Z 
2025-02-24T16:33:41.0023766Z (shapes (1466,), (1481,) mismatch)
2025-02-24T16:33:41.0023909Z  x: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-02-24T16:33:41.0023991Z        11152.962595, 11172.044815])
2025-02-24T16:33:41.0024136Z  y: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-02-24T16:33:41.0024212Z        11398.237865, 11111.204868])
2025-02-24T16:33:41.0024664Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - AssertionError: 
2025-02-24T16:33:41.0024763Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0024767Z 
2025-02-24T16:33:41.0024854Z (shapes (147,), (136,) mismatch)
2025-02-24T16:33:41.0024992Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:33:41.0025106Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:33:41.0025231Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:33:41.0025357Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:33:41.0025471Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:33:41.0025586Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:33:41.0026151Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - AssertionError: 
2025-02-24T16:33:41.0026266Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0026270Z 
2025-02-24T16:33:41.0026351Z (shapes (379,), (381,) mismatch)
2025-02-24T16:33:41.0026485Z  x: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-02-24T16:33:41.0026593Z        11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-02-24T16:33:41.0026710Z        14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-02-24T16:33:41.0026835Z  y: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-02-24T16:33:41.0026946Z        13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-02-24T16:33:41.0027062Z        11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-02-24T16:33:41.0027587Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - AssertionError: 
2025-02-24T16:33:41.0027692Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:41.0027697Z 
2025-02-24T16:33:41.0027784Z Mismatched elements: 4 / 40 (10%)
2025-02-24T16:33:41.0027880Z Max absolute difference: 22.
2025-02-24T16:33:41.0027975Z Max relative difference: 0.8
2025-02-24T16:33:41.0028168Z  x: array([[1.10e+04, 1.67e+02],
2025-02-24T16:33:41.0028251Z        [1.19e+04, 1.67e+02],
2025-02-24T16:33:41.0028327Z        [1.19e+04, 7.60e+01],...
2025-02-24T16:33:41.0028412Z  y: array([[1.10e+04, 1.89e+02],
2025-02-24T16:33:41.0028486Z        [1.19e+04, 1.89e+02],
2025-02-24T16:33:41.0028566Z        [1.19e+04, 8.20e+01],...
2025-02-24T16:33:41.0028988Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - AssertionError: 
2025-02-24T16:33:41.0029081Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:41.0029085Z 
2025-02-24T16:33:41.0029178Z Mismatched elements: 4 / 40 (10%)
2025-02-24T16:33:41.0029262Z Max absolute difference: 22.
2025-02-24T16:33:41.0029356Z Max relative difference: 0.8
2025-02-24T16:33:41.0029433Z  x: array([[1.10e+04, 1.67e+02],
2025-02-24T16:33:41.0029513Z        [1.19e+04, 1.67e+02],
2025-02-24T16:33:41.0029592Z        [1.19e+04, 7.60e+01],...
2025-02-24T16:33:41.0029675Z  y: array([[1.10e+04, 1.89e+02],
2025-02-24T16:33:41.0029753Z        [1.19e+04, 1.89e+02],
2025-02-24T16:33:41.0029826Z        [1.19e+04, 8.20e+01],...
2025-02-24T16:33:41.0030242Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - AssertionError: 
2025-02-24T16:33:41.0030339Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:41.0030343Z 
2025-02-24T16:33:41.0030427Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:33:41.0030518Z Max absolute difference: 34
2025-02-24T16:33:41.0030607Z Max relative difference: 0.71428571
2025-02-24T16:33:41.0030751Z  x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:33:41.0030838Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:33:41.0030970Z  y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:33:41.0031056Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:33:41.0031466Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - AssertionError: 
2025-02-24T16:33:41.0031567Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:41.0031571Z 
2025-02-24T16:33:41.0031654Z Mismatched elements: 4 / 40 (10%)
2025-02-24T16:33:41.0031744Z Max absolute difference: 34.
2025-02-24T16:33:41.0031838Z Max relative difference: 0.65
2025-02-24T16:33:41.0031917Z  x: array([[1.10e+04, 2.72e+02],
2025-02-24T16:33:41.0032000Z        [1.19e+04, 2.72e+02],
2025-02-24T16:33:41.0032074Z        [1.19e+04, 1.10e+02],...
2025-02-24T16:33:41.0032158Z  y: array([[1.10e+04, 3.06e+02],
2025-02-24T16:33:41.0032349Z        [1.19e+04, 3.06e+02],
2025-02-24T16:33:41.0032429Z        [1.19e+04, 1.18e+02],...
2025-02-24T16:33:41.0032839Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - AssertionError: 
2025-02-24T16:33:41.0032930Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:41.0032939Z 
2025-02-24T16:33:41.0033028Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:33:41.0033111Z Max absolute difference: 22
2025-02-24T16:33:41.0033198Z Max relative difference: 0.8
2025-02-24T16:33:41.0033322Z  x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T16:33:41.0033412Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:33:41.0033536Z  y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:33:41.0033613Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:33:41.0034026Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - AssertionError: 
2025-02-24T16:33:41.0034121Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:41.0034125Z 
2025-02-24T16:33:41.0034214Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:33:41.0034304Z Max absolute difference: 22
2025-02-24T16:33:41.0034387Z Max relative difference: 0.8
2025-02-24T16:33:41.0034595Z  x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T16:33:41.0034672Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:33:41.0034797Z  y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:33:41.0034873Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:33:41.0035288Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - AssertionError: 
2025-02-24T16:33:41.0035383Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:41.0035386Z 
2025-02-24T16:33:41.0035470Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:33:41.0035563Z Max absolute difference: 34
2025-02-24T16:33:41.0035651Z Max relative difference: 0.71428571
2025-02-24T16:33:41.0035785Z  x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:33:41.0035868Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:33:41.0035991Z  y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:33:41.0036077Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:33:41.0036484Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - AssertionError: 
2025-02-24T16:33:41.0036581Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:33:41.0036586Z 
2025-02-24T16:33:41.0036675Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:33:41.0036758Z Max absolute difference: 34
2025-02-24T16:33:41.0036850Z Max relative difference: 0.65
2025-02-24T16:33:41.0036974Z  x: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:33:41.0037059Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:33:41.0037181Z  y: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:33:41.0037435Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:33:41.0038009Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - AssertionError: 
2025-02-24T16:33:41.0038113Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0038117Z 
2025-02-24T16:33:41.0038210Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:41.0038304Z Max absolute difference: 4.3299331e-05
2025-02-24T16:33:41.0038400Z Max relative difference: 4.76021355
2025-02-24T16:33:41.0038553Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0038628Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0038772Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0038976Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0039453Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - AssertionError: 
2025-02-24T16:33:41.0039550Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0039559Z 
2025-02-24T16:33:41.0039653Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:41.0039748Z Max absolute difference: 4.3299331e-05
2025-02-24T16:33:41.0039835Z Max relative difference: 4.76021355
2025-02-24T16:33:41.0039977Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0040055Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0040198Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0040278Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0040741Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - AssertionError: 
2025-02-24T16:33:41.0040844Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0040849Z 
2025-02-24T16:33:41.0040937Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:41.0041037Z Max absolute difference: 4.3299331e-05
2025-02-24T16:33:41.0041127Z Max relative difference: 4.76021355
2025-02-24T16:33:41.0041375Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0041456Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0041588Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0041669Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0042126Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - AssertionError: 
2025-02-24T16:33:41.0042232Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0042236Z 
2025-02-24T16:33:41.0042326Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:41.0042419Z Max absolute difference: 4.3299331e-05
2025-02-24T16:33:41.0042508Z Max relative difference: 4.76021355
2025-02-24T16:33:41.0042643Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0042723Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0042860Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0042939Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0043400Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - AssertionError: 
2025-02-24T16:33:41.0043494Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0043499Z 
2025-02-24T16:33:41.0043590Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:41.0043679Z Max absolute difference: 3.16368526e-05
2025-02-24T16:33:41.0043775Z Max relative difference: 178.93768705
2025-02-24T16:33:41.0043921Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0043999Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0044141Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0044216Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0044679Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - AssertionError: 
2025-02-24T16:33:41.0044782Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0044786Z 
2025-02-24T16:33:41.0044873Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:41.0044967Z Max absolute difference: 3.16368526e-05
2025-02-24T16:33:41.0045058Z Max relative difference: 178.93768705
2025-02-24T16:33:41.0045202Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0045278Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0045418Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0045592Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0046076Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - AssertionError: 
2025-02-24T16:33:41.0046178Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0046186Z 
2025-02-24T16:33:41.0046273Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:41.0046370Z Max absolute difference: 3.16368526e-05
2025-02-24T16:33:41.0046462Z Max relative difference: 178.93768705
2025-02-24T16:33:41.0046603Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0046682Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0046815Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0046896Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0047481Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - AssertionError: 
2025-02-24T16:33:41.0047588Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0047593Z 
2025-02-24T16:33:41.0047685Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:41.0047773Z Max absolute difference: 3.16368526e-05
2025-02-24T16:33:41.0047867Z Max relative difference: 178.93768705
2025-02-24T16:33:41.0048118Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0048199Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0048337Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:33:41.0048415Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0048880Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - AssertionError: 
2025-02-24T16:33:41.0048975Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0048979Z 
2025-02-24T16:33:41.0049072Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:41.0049171Z Max absolute difference: 5.1807441e+47
2025-02-24T16:33:41.0049258Z Max relative difference: 4.76021355
2025-02-24T16:33:41.0049399Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0049474Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0049618Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0049690Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0050156Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - AssertionError: 
2025-02-24T16:33:41.0050255Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0050260Z 
2025-02-24T16:33:41.0050347Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:41.0050441Z Max absolute difference: 5.1807441e+47
2025-02-24T16:33:41.0050527Z Max relative difference: 4.76021355
2025-02-24T16:33:41.0050668Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0050755Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0050899Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0050980Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0051450Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - AssertionError: 
2025-02-24T16:33:41.0051560Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0051564Z 
2025-02-24T16:33:41.0051657Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:41.0051753Z Max absolute difference: 5.1807441e+47
2025-02-24T16:33:41.0051844Z Max relative difference: 4.76021355
2025-02-24T16:33:41.0051984Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0052064Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0052200Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0052416Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0052890Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - AssertionError: 
2025-02-24T16:33:41.0052985Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0052993Z 
2025-02-24T16:33:41.0053086Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:33:41.0053177Z Max absolute difference: 5.1807441e+47
2025-02-24T16:33:41.0053268Z Max relative difference: 4.76021355
2025-02-24T16:33:41.0053410Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0053492Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0053632Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0053706Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0054176Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - AssertionError: 
2025-02-24T16:33:41.0054274Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0054283Z 
2025-02-24T16:33:41.0054370Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:41.0054464Z Max absolute difference: 3.78533417e+47
2025-02-24T16:33:41.0054553Z Max relative difference: 178.93768705
2025-02-24T16:33:41.0054779Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0054853Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0054991Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0055071Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0055535Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - AssertionError: 
2025-02-24T16:33:41.0055634Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0055638Z 
2025-02-24T16:33:41.0055728Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:41.0055827Z Max absolute difference: 3.78533417e+47
2025-02-24T16:33:41.0055921Z Max relative difference: 178.93768705
2025-02-24T16:33:41.0056058Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0056137Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0056274Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0056352Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0056812Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - AssertionError: 
2025-02-24T16:33:41.0056910Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0056914Z 
2025-02-24T16:33:41.0057004Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:41.0057094Z Max absolute difference: 3.78533417e+47
2025-02-24T16:33:41.0057191Z Max relative difference: 178.93768705
2025-02-24T16:33:41.0057434Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0057516Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0057656Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0057731Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0058202Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - AssertionError: 
2025-02-24T16:33:41.0058300Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0058305Z 
2025-02-24T16:33:41.0058397Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:33:41.0058485Z Max absolute difference: 3.78533417e+47
2025-02-24T16:33:41.0058579Z Max relative difference: 178.93768705
2025-02-24T16:33:41.0058718Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0058792Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0058930Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:33:41.0059126Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0059558Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - AssertionError: 
2025-02-24T16:33:41.0059658Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0059666Z 
2025-02-24T16:33:41.0059751Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:41.0059851Z Max absolute difference: 2.08771842e-13
2025-02-24T16:33:41.0059936Z Max relative difference: 3.01858991
2025-02-24T16:33:41.0060078Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0060154Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0060294Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0060373Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0060791Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - AssertionError: 
2025-02-24T16:33:41.0060894Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0060898Z 
2025-02-24T16:33:41.0060984Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:41.0061079Z Max absolute difference: 2.08771842e-13
2025-02-24T16:33:41.0061170Z Max relative difference: 3.01858991
2025-02-24T16:33:41.0061414Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0061494Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0061628Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0061709Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0062131Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - AssertionError: 
2025-02-24T16:33:41.0062231Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0062235Z 
2025-02-24T16:33:41.0062326Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:41.0062423Z Max absolute difference: 2.08771842e-13
2025-02-24T16:33:41.0062515Z Max relative difference: 3.01858991
2025-02-24T16:33:41.0062650Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0062730Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0062870Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0062943Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0063363Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - AssertionError: 
2025-02-24T16:33:41.0063459Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0063463Z 
2025-02-24T16:33:41.0063552Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:41.0063647Z Max absolute difference: 2.08771842e-13
2025-02-24T16:33:41.0063733Z Max relative difference: 3.01858991
2025-02-24T16:33:41.0063872Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0063950Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0064089Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0064164Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0064584Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - AssertionError: 
2025-02-24T16:33:41.0064686Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0064690Z 
2025-02-24T16:33:41.0064776Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:41.0064870Z Max absolute difference: 3.02728422e-13
2025-02-24T16:33:41.0064960Z Max relative difference: 15766.1580412
2025-02-24T16:33:41.0065101Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0065181Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0065314Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0065480Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0065895Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - AssertionError: 
2025-02-24T16:33:41.0065995Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0066003Z 
2025-02-24T16:33:41.0066094Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:41.0066183Z Max absolute difference: 3.02728422e-13
2025-02-24T16:33:41.0066276Z Max relative difference: 15766.1580412
2025-02-24T16:33:41.0066411Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0066491Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0066625Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0066705Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0067125Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - AssertionError: 
2025-02-24T16:33:41.0067223Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0067227Z 
2025-02-24T16:33:41.0067417Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:41.0067507Z Max absolute difference: 3.02728422e-13
2025-02-24T16:33:41.0067601Z Max relative difference: 15766.1580412
2025-02-24T16:33:41.0067854Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0067929Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0068066Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0068140Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0068560Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - AssertionError: 
2025-02-24T16:33:41.0068653Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0068662Z 
2025-02-24T16:33:41.0068747Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:41.0068843Z Max absolute difference: 3.02728422e-13
2025-02-24T16:33:41.0068930Z Max relative difference: 15766.1580412
2025-02-24T16:33:41.0069069Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0069146Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0069285Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:33:41.0069369Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0069783Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - AssertionError: 
2025-02-24T16:33:41.0069882Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0069886Z 
2025-02-24T16:33:41.0069970Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:41.0070068Z Max absolute difference: 2.49794504e+39
2025-02-24T16:33:41.0070155Z Max relative difference: 3.01858991
2025-02-24T16:33:41.0070294Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0070376Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0070509Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0070591Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0071005Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - AssertionError: 
2025-02-24T16:33:41.0071107Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0071112Z 
2025-02-24T16:33:41.0071201Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:41.0071289Z Max absolute difference: 2.49794504e+39
2025-02-24T16:33:41.0071380Z Max relative difference: 3.01858991
2025-02-24T16:33:41.0071516Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0071600Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0071734Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0071957Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0072382Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - AssertionError: 
2025-02-24T16:33:41.0072477Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0072481Z 
2025-02-24T16:33:41.0072576Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:41.0072670Z Max absolute difference: 2.49794504e+39
2025-02-24T16:33:41.0072760Z Max relative difference: 3.01858991
2025-02-24T16:33:41.0072897Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0072972Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0073110Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0073184Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0073609Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - AssertionError: 
2025-02-24T16:33:41.0073711Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0073716Z 
2025-02-24T16:33:41.0073801Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:33:41.0073893Z Max absolute difference: 2.49794504e+39
2025-02-24T16:33:41.0073977Z Max relative difference: 3.01858991
2025-02-24T16:33:41.0074116Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0074289Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0074429Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0074509Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0074929Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - AssertionError: 
2025-02-24T16:33:41.0075029Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0075033Z 
2025-02-24T16:33:41.0075119Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:41.0075213Z Max absolute difference: 3.62213099e+39
2025-02-24T16:33:41.0075309Z Max relative difference: 15766.15804934
2025-02-24T16:33:41.0075445Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0075526Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0075660Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0075743Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0076161Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - AssertionError: 
2025-02-24T16:33:41.0076261Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0076265Z 
2025-02-24T16:33:41.0076356Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:41.0076444Z Max absolute difference: 3.62213099e+39
2025-02-24T16:33:41.0076535Z Max relative difference: 15766.15804934
2025-02-24T16:33:41.0076669Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0076752Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0076891Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0076965Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0077532Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - AssertionError: 
2025-02-24T16:33:41.0077632Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0077636Z 
2025-02-24T16:33:41.0077729Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:41.0077821Z Max absolute difference: 3.62213099e+39
2025-02-24T16:33:41.0077909Z Max relative difference: 15766.15804934
2025-02-24T16:33:41.0078049Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0078124Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0078263Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0078338Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0078892Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - AssertionError: 
2025-02-24T16:33:41.0078991Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:33:41.0078995Z 
2025-02-24T16:33:41.0079080Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:33:41.0079177Z Max absolute difference: 3.62213099e+39
2025-02-24T16:33:41.0079265Z Max relative difference: 15766.15804934
2025-02-24T16:33:41.0079403Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0079482Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0079626Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:33:41.0079716Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:33:41.0079991Z = 274 failed, 1136 passed, 357 skipped, 2 deselected, 19 xfailed, 8 xpassed, 63 warnings in 754.26s (0:12:34) =
2025-02-24T16:33:41.0080394Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0080403Z 
2025-02-24T16:33:41.0081126Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data11__.h5
2025-02-24T16:33:41.0081240Z 
2025-02-24T16:33:41.0081557Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0081567Z 
2025-02-24T16:33:41.0082226Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply13__.h5
2025-02-24T16:33:41.0082232Z 
2025-02-24T16:33:41.0082545Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0082550Z 
2025-02-24T16:33:41.0083193Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl4__.h5
2025-02-24T16:33:41.0083206Z 
2025-02-24T16:33:41.0083521Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0083528Z 
2025-02-24T16:33:41.0084177Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply9__.h5
2025-02-24T16:33:41.0084183Z 
2025-02-24T16:33:41.0084492Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0084497Z 
2025-02-24T16:33:41.0085130Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply4__.h5
2025-02-24T16:33:41.0085137Z 
2025-02-24T16:33:41.0085446Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0085451Z 
2025-02-24T16:33:41.0086088Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply1__.h5
2025-02-24T16:33:41.0086096Z 
2025-02-24T16:33:41.0086401Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0086405Z 
2025-02-24T16:33:41.0087055Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply0__.h5
2025-02-24T16:33:41.0087060Z 
2025-02-24T16:33:41.0087464Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0087580Z 
2025-02-24T16:33:41.0088220Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl5__.h5
2025-02-24T16:33:41.0088225Z 
2025-02-24T16:33:41.0088534Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0088542Z 
2025-02-24T16:33:41.0089180Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl1__.h5
2025-02-24T16:33:41.0089184Z 
2025-02-24T16:33:41.0089487Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0089491Z 
2025-02-24T16:33:41.0090182Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data8__.h5
2025-02-24T16:33:41.0090191Z 
2025-02-24T16:33:41.0090514Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0090519Z 
2025-02-24T16:33:41.0091305Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data9__.h5
2025-02-24T16:33:41.0091311Z 
2025-02-24T16:33:41.0091620Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0091625Z 
2025-02-24T16:33:41.0092278Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply5__.h5
2025-02-24T16:33:41.0092287Z 
2025-02-24T16:33:41.0092593Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0092597Z 
2025-02-24T16:33:41.0093235Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply0__.h5
2025-02-24T16:33:41.0093243Z 
2025-02-24T16:33:41.0093561Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0093565Z 
2025-02-24T16:33:41.0094250Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data0__.h5
2025-02-24T16:33:41.0094255Z 
2025-02-24T16:33:41.0094563Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0094571Z 
2025-02-24T16:33:41.0095217Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply4__.h5
2025-02-24T16:33:41.0095222Z 
2025-02-24T16:33:41.0095526Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0095533Z 
2025-02-24T16:33:41.0096219Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data3__.h5
2025-02-24T16:33:41.0096224Z 
2025-02-24T16:33:41.0096535Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0096540Z 
2025-02-24T16:33:41.0097221Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data1__.h5
2025-02-24T16:33:41.0097422Z 
2025-02-24T16:33:41.0097741Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0097746Z 
2025-02-24T16:33:41.0098394Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply11__.h5
2025-02-24T16:33:41.0098403Z 
2025-02-24T16:33:41.0098706Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0098711Z 
2025-02-24T16:33:41.0099394Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data7__.h5
2025-02-24T16:33:41.0099399Z 
2025-02-24T16:33:41.0099711Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0099716Z 
2025-02-24T16:33:41.0100388Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply7__.h5
2025-02-24T16:33:41.0100497Z 
2025-02-24T16:33:41.0100809Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0100814Z 
2025-02-24T16:33:41.0101468Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply14__.h5
2025-02-24T16:33:41.0101473Z 
2025-02-24T16:33:41.0101776Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0101781Z 
2025-02-24T16:33:41.0102475Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data10__.h5
2025-02-24T16:33:41.0102480Z 
2025-02-24T16:33:41.0102788Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0102797Z 
2025-02-24T16:33:41.0103431Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply5__.h5
2025-02-24T16:33:41.0103441Z 
2025-02-24T16:33:41.0103743Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0103748Z 
2025-02-24T16:33:41.0104433Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data5__.h5
2025-02-24T16:33:41.0104440Z 
2025-02-24T16:33:41.0104744Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:33:41.0104748Z 
2025-02-24T16:33:41.0105399Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply12__.h5
2025-02-24T16:33:41.0105407Z 
2025-02-24T16:33:43.3154293Z ##[error]Process completed with exit code 1.
