2025-01-17T11:20:16.5329600Z ##[group]Run pytest tardis --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-01-17T11:20:16.5330630Z [36;1mpytest tardis --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-01-17T11:20:16.5396790Z shell: /bin/bash -l {0}
2025-01-17T11:20:16.5397070Z env:
2025-01-17T11:20:16.5397200Z   CACHE_NUMBER: 0
2025-01-17T11:20:16.5397740Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-17T11:20:16.5398280Z   CODECOV_TOKEN: 
2025-01-17T11:20:16.5398450Z   MAMBA_ROOT_PREFIX: /Users/runner/micromamba
2025-01-17T11:20:16.5398900Z   MAMBA_EXE: /Users/runner/micromamba-bin/micromamba
2025-01-17T11:20:16.5399200Z   CONDARC: /Users/runner/work/_temp/setup-micromamba/.condarc
2025-01-17T11:20:16.5399600Z ##[endgroup]
2025-01-17T11:20:28.5976900Z ============================= test session starts ==============================
2025-01-17T11:20:28.5977450Z platform darwin -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-01-17T11:20:28.5977860Z rootdir: /Users/runner/work/tardis/tardis
2025-01-17T11:20:28.5978200Z configfile: pyproject.toml
2025-01-17T11:20:28.5978620Z plugins: cov-5.0.0, html-4.1.1, metadata-3.1.1, doctestplus-1.2.1, anyio-4.4.0
2025-01-17T11:20:28.5979060Z collected 1796 items / 2 deselected / 1794 selected
2025-01-17T11:20:28.5979320Z 
2025-01-17T11:20:31.5573920Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-01-17T11:20:32.7359230Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-01-17T11:20:33.7575820Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-01-17T11:20:34.7742310Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-01-17T11:20:34.7844030Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-01-17T11:20:35.6510870Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-01-17T11:20:35.8954540Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-01-17T11:20:35.9054170Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-01-17T11:20:38.8208420Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-01-17T11:20:38.8290370Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-01-17T11:20:38.8458210Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-01-17T11:21:07.1358200Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-01-17T11:21:07.1616590Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-01-17T11:21:07.1730630Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-01-17T11:21:07.1959580Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-01-17T11:21:07.2130980Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-01-17T11:21:07.4655610Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-01-17T11:21:08.0654780Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-01-17T11:21:08.0996800Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-01-17T11:21:08.2623820Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-01-17T11:21:08.2678350Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-01-17T11:21:35.6677630Z tardis/model/tests/test_base.py ........................................ [ 10%]
2025-01-17T11:21:36.3484440Z ............                                                             [ 10%]
2025-01-17T11:21:38.6989050Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-01-17T11:21:38.7294230Z tardis/model/tests/test_density.py ..                                    [ 11%]
2025-01-17T11:21:39.9013580Z tardis/opacities/tests/test_opacity_solver.py .....                      [ 11%]
2025-01-17T11:21:40.8504230Z tardis/opacities/tests/test_opacity_state_numba.py .....                 [ 11%]
2025-01-17T11:21:42.4971620Z tardis/opacities/tests/test_tau_sobolev.py FF                            [ 12%]
2025-01-17T11:21:44.7557770Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-01-17T11:22:20.4640640Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-01-17T11:22:29.0626060Z tardis/plasma/equilibrium/tests/test_rate_matrix.py .                    [ 12%]
2025-01-17T11:22:30.4808960Z tardis/plasma/tests/test_complete_plasmas.py ...........FFFs.FFF..s..... [ 13%]
2025-01-17T11:22:33.1354000Z sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FF [ 18%]
2025-01-17T11:22:35.0324260Z Fs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss.... [ 22%]
2025-01-17T11:22:37.9736940Z ........s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....s [ 26%]
2025-01-17T11:22:40.5183230Z FF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFF [ 30%]
2025-01-17T11:22:41.5279590Z s.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFssFssssss..... [ 34%]
2025-01-17T11:22:44.0814710Z .......s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sF [ 38%]
2025-01-17T11:22:46.8001040Z F.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs [ 42%]
2025-01-17T11:22:49.5427450Z .FFF.ss.....sFF.Fssssss............s...FFFs.FFF.s.....FFFF.Fssssss...... [ 46%]
2025-01-17T11:22:51.5884100Z ......s...FFFs.FFF.s.....FFFF.Fssssss............s...FFFs.FFF.s.....FFFF [ 50%]
2025-01-17T11:22:54.5268040Z .Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs. [ 54%]
2025-01-17T11:22:57.6644570Z FFF.ss.....sFF.Fssssss................FFFs.FFF..s.....sFF.Fssss......... [ 58%]
2025-01-17T11:22:58.1926790Z .........FFFs.FFF..s.....sFF.Fssss.......                                [ 60%]
2025-01-17T11:22:58.5062360Z tardis/plasma/tests/test_hdf_plasma.py ....F..F....F.F..........FFF..... [ 62%]
2025-01-17T11:22:58.5163730Z ......                                                                   [ 62%]
2025-01-17T11:22:58.8592160Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-01-17T11:24:38.3417460Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-01-17T11:24:38.3470120Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-01-17T11:24:57.7780130Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-01-17T11:25:07.5598010Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-01-17T11:25:08.0638840Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-01-17T11:25:14.5331080Z tardis/simulation/tests/test_simulation.py FFF.FFFFFF...                 [ 65%]
2025-01-17T11:25:14.5444230Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-01-17T11:25:14.8147940Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-01-17T11:25:14.8188040Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-01-17T11:25:15.5980690Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-01-17T11:25:15.6085090Z ..........                                                               [ 69%]
2025-01-17T11:25:15.7192710Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-01-17T11:25:15.7433940Z .........                                                                [ 72%]
2025-01-17T11:25:33.7152570Z tardis/spectrum/tests/test_spectrum_solver.py .FFF                       [ 72%]
2025-01-17T11:26:25.1757090Z tardis/tests/test_tardis_full.py .FFF                                    [ 72%]
2025-01-17T11:27:56.7436380Z tardis/tests/test_tardis_full_formal_integral.py .FFF.FFF.FFF.FFF        [ 73%]
2025-01-17T11:27:56.7887160Z tardis/tests/test_util.py .............................................  [ 75%]
2025-01-17T11:27:58.7530200Z tardis/transport/montecarlo/tests/test_base.py x.....................    [ 77%]
2025-01-17T11:28:03.7442370Z tardis/transport/montecarlo/tests/test_interaction.py .......            [ 77%]
2025-01-17T11:28:03.8854720Z tardis/transport/montecarlo/tests/test_macro_atom.py ....                [ 77%]
2025-01-17T11:28:03.8956050Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-01-17T11:28:03.9176300Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-01-17T11:28:10.4069100Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py xFF       [ 81%]
2025-01-17T11:28:10.4168300Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-01-17T11:28:12.5786050Z tardis/transport/montecarlo/tests/test_numba_interface.py .....x.        [ 82%]
2025-01-17T11:28:12.9007030Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-01-17T11:28:13.5553780Z tardis/transport/montecarlo/tests/test_packet.py .................xXXXXX [ 84%]
2025-01-17T11:28:13.6403710Z XX.........                                                              [ 84%]
2025-01-17T11:28:13.6649560Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-01-17T11:28:13.8693820Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-01-17T11:28:14.1280790Z .....                                                                    [ 85%]
2025-01-17T11:28:22.5202150Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py ....F.         [ 85%]
2025-01-17T11:28:22.5401500Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-01-17T11:28:22.5420570Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-01-17T11:28:24.1017100Z tardis/transport/montecarlo/tests/test_vpacket.py ..x.                   [ 86%]
2025-01-17T11:28:24.1159750Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-01-17T11:28:26.4862480Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py F [ 86%]
2025-01-17T11:28:26.4863510Z                                                                          [ 86%]
2025-01-17T11:28:26.9535490Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-01-17T11:28:28.4295880Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-01-17T11:28:29.9456070Z ......                                                                   [ 88%]
2025-01-17T11:28:33.4977350Z tardis/visualization/tools/tests/test_liv_plot.py ...F..F..F..F..F..F..F [ 90%]
2025-01-17T11:28:37.0437420Z ..F..FF..FF..........FF..FF..                                            [ 91%]
2025-01-17T11:28:39.8269010Z tardis/visualization/tools/tests/test_rpacket_plot.py .................. [ 92%]
2025-01-17T11:28:46.3002370Z ....                                                                     [ 92%]
2025-01-17T11:28:50.6305430Z tardis/visualization/tools/tests/test_sdec_plot.py ...FFFFFFFFFFFFFFFFFF [ 94%]
2025-01-17T11:28:57.3472220Z FFFFFFFFFFFFFF................                                           [ 95%]
2025-01-17T11:28:57.7088450Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-01-17T11:28:57.7493880Z ....                                                                     [ 96%]
2025-01-17T11:28:58.4950750Z tardis/visualization/widgets/tests/test_line_info.py ................... [ 97%]
2025-01-17T11:28:58.9493970Z ..................                                                       [ 98%]
2025-01-17T11:31:57.6063420Z tardis/visualization/widgets/tests/test_shell_info.py .................. [ 99%]
2025-01-17T11:32:04.3343790Z ......                                                                   [100%]
2025-01-17T11:32:04.3344240Z 
2025-01-17T11:32:04.3344480Z =================================== FAILURES ===================================
2025-01-17T11:32:04.3358120Z _____________________ test_calculate_sobolev_line_opacity ______________________
2025-01-17T11:32:04.3358620Z 
2025-01-17T11:32:04.3358850Z left = array([13, 13, 13, ..., 19, 19, 19], dtype=int8)
2025-01-17T11:32:04.3359240Z right = array([13, 13, 13, ..., 19, 19, 19], dtype=int8), err_msg = None
2025-01-17T11:32:04.3359490Z 
2025-01-17T11:32:04.3361010Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3361370Z         if err_msg is None:
2025-01-17T11:32:04.3361650Z             if left.shape != right.shape:
2025-01-17T11:32:04.3361920Z                 raise_assert_detail(
2025-01-17T11:32:04.3362570Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3362850Z                 )
2025-01-17T11:32:04.3363080Z     
2025-01-17T11:32:04.3363220Z             diff = 0
2025-01-17T11:32:04.3363490Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3363830Z                 # count up differences
2025-01-17T11:32:04.3364170Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3364520Z                     diff += 1
2025-01-17T11:32:04.3364710Z     
2025-01-17T11:32:04.3364950Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3365230Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3365670Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3366000Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3366270Z E           
2025-01-17T11:32:04.3366520Z E           numpy array values are different (0.09581 %)
2025-01-17T11:32:04.3367040Z E           [left]:  [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 13, 11, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-01-17T11:32:04.3367970Z E           [right]: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-01-17T11:32:04.3368420Z 
2025-01-17T11:32:04.3368730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3369100Z 
2025-01-17T11:32:04.3369230Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3369520Z 
2025-01-17T11:32:04.3369790Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x15d539bb0>
2025-01-17T11:32:04.3370290Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x15d54ac60>
2025-01-17T11:32:04.3370620Z 
2025-01-17T11:32:04.3370730Z     def test_calculate_sobolev_line_opacity(
2025-01-17T11:32:04.3371030Z         nb_simulation_verysimple, regression_data
2025-01-17T11:32:04.3371320Z     ):
2025-01-17T11:32:04.3371520Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-01-17T11:32:04.3371890Z     
2025-01-17T11:32:04.3372070Z         actual = calculate_sobolev_line_opacity(
2025-01-17T11:32:04.3372350Z             legacy_plasma.lines,
2025-01-17T11:32:04.3372570Z             legacy_plasma.level_number_density,
2025-01-17T11:32:04.3377410Z             legacy_plasma.time_explosion,
2025-01-17T11:32:04.3377740Z             legacy_plasma.stimulated_emission_factor,
2025-01-17T11:32:04.3378140Z         )
2025-01-17T11:32:04.3378610Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:32:04.3379150Z >       pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.3379360Z 
2025-01-17T11:32:04.3379470Z tardis/opacities/tests/test_tau_sobolev.py:22: 
2025-01-17T11:32:04.3379810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3380160Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3380450Z     ???
2025-01-17T11:32:04.3380610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3380780Z 
2025-01-17T11:32:04.3399610Z >   ???
2025-01-17T11:32:04.3399960Z E   AssertionError: MultiIndex level [0] are different
2025-01-17T11:32:04.3400280Z E   
2025-01-17T11:32:04.3400610Z E   MultiIndex level [0] values are different (0.09581 %)
2025-01-17T11:32:04.3400960Z E   [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-17T11:32:04.3401350Z E          ...
2025-01-17T11:32:04.3401590Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-17T11:32:04.3401880Z E         dtype='int64', name='atomic_number', length=29224)
2025-01-17T11:32:04.3402170Z E   [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-17T11:32:04.3402370Z E          ...
2025-01-17T11:32:04.3402510Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-17T11:32:04.3402750Z E         dtype='int64', name='atomic_number', length=29224)
2025-01-17T11:32:04.3403050Z E   At positional index 54, first diff: 14 != 12
2025-01-17T11:32:04.3403210Z 
2025-01-17T11:32:04.3403280Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3403640Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:32:04.3406380Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-17T11:32:04.3407030Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-17T11:32:04.3407500Z ---------------------------- Captured stderr setup -----------------------------
2025-01-17T11:32:04.3407700Z 
2025-01-17T11:32:04.3408060Z Iterations:████████████████████████████████████████████████████████████████                4/5 [00:09<00:02,  2.02s/it]
2025-01-17T11:32:04.3408260Z 
2025-01-17T11:32:04.3408490Z Packets:                                                                                   4030/? [00:09<00:00, 560.10it/s][A
2025-01-17T11:32:04.3408870Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:32:04.3409460Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-17T11:32:04.3410160Z _________________________ test_calculate_beta_sobolevs _________________________
2025-01-17T11:32:04.3410350Z 
2025-01-17T11:32:04.3410560Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x15d539bb0>
2025-01-17T11:32:04.3411060Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x15d55d8e0>
2025-01-17T11:32:04.3411350Z 
2025-01-17T11:32:04.3411500Z     def test_calculate_beta_sobolevs(nb_simulation_verysimple, regression_data):
2025-01-17T11:32:04.3411810Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-01-17T11:32:04.3412010Z     
2025-01-17T11:32:04.3412200Z         tau_sobolevs = calculate_sobolev_line_opacity(
2025-01-17T11:32:04.3412410Z             legacy_plasma.lines,
2025-01-17T11:32:04.3412600Z             legacy_plasma.level_number_density,
2025-01-17T11:32:04.3412800Z             legacy_plasma.time_explosion,
2025-01-17T11:32:04.3413020Z             legacy_plasma.stimulated_emission_factor,
2025-01-17T11:32:04.3413730Z         )
2025-01-17T11:32:04.3413920Z         actual = calculate_beta_sobolev(tau_sobolevs)
2025-01-17T11:32:04.3414260Z         expected = regression_data.sync_ndarray(actual)
2025-01-17T11:32:04.3414580Z >       npt.assert_allclose(actual, expected)
2025-01-17T11:32:04.3414730Z 
2025-01-17T11:32:04.3414850Z tardis/opacities/tests/test_tau_sobolev.py:36: 
2025-01-17T11:32:04.3415380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3415580Z 
2025-01-17T11:32:04.3415830Z args = (<function assert_allclose.<locals>.compare at 0x315a351c0>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:32:04.3416210Z        [1., 1., 1.,.....,
2025-01-17T11:32:04.3416410Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:32:04.3416660Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:32:04.3416870Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-01-17T11:32:04.3417270Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.3417590Z 
2025-01-17T11:32:04.3417640Z     @wraps(func)
2025-01-17T11:32:04.3417860Z     def inner(*args, **kwds):
2025-01-17T11:32:04.3418070Z         with self._recreate_cm():
2025-01-17T11:32:04.3418350Z >           return func(*args, **kwds)
2025-01-17T11:32:04.3418580Z E           AssertionError: 
2025-01-17T11:32:04.3418900Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.3419190Z E           
2025-01-17T11:32:04.3419370Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-01-17T11:32:04.3419690Z E           Max absolute difference among violations: 0.99984222
2025-01-17T11:32:04.3420030Z E           Max relative difference among violations: 6337.12154973
2025-01-17T11:32:04.3420400Z E            ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:32:04.3420670Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:32:04.3421010Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-17T11:32:04.3421220Z E            DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:32:04.3421540Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:32:04.3421770Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-17T11:32:04.3421980Z 
2025-01-17T11:32:04.3422190Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.3422620Z _________ TestPlasma.test_plasma_properties[ionization:nebular-lines] __________
2025-01-17T11:32:04.3422880Z 
2025-01-17T11:32:04.3423030Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3423350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3423690Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3424000Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3424330Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3424660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3424880Z err_msg = None
2025-01-17T11:32:04.3425030Z 
2025-01-17T11:32:04.3425150Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3425450Z         if err_msg is None:
2025-01-17T11:32:04.3425710Z             if left.shape != right.shape:
2025-01-17T11:32:04.3425940Z                 raise_assert_detail(
2025-01-17T11:32:04.3426250Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3426520Z                 )
2025-01-17T11:32:04.3426750Z     
2025-01-17T11:32:04.3426920Z             diff = 0
2025-01-17T11:32:04.3427140Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3427420Z                 # count up differences
2025-01-17T11:32:04.3427740Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3428290Z                     diff += 1
2025-01-17T11:32:04.3428440Z     
2025-01-17T11:32:04.3428650Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3428950Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3429250Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3429710Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3429950Z E           
2025-01-17T11:32:04.3430200Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3430560Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3431060Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3431340Z 
2025-01-17T11:32:04.3431570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3431890Z 
2025-01-17T11:32:04.3432020Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3432220Z 
2025-01-17T11:32:04.3432440Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133530da0>
2025-01-17T11:32:04.3432880Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c275190>, attr = 'lines'
2025-01-17T11:32:04.3433100Z 
2025-01-17T11:32:04.3433210Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3433470Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3433680Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3433840Z         try:
2025-01-17T11:32:04.3434060Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3434290Z         except KeyError:
2025-01-17T11:32:04.3434500Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3434810Z     
2025-01-17T11:32:04.3434930Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3435110Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3435300Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3435600Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3435900Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3436180Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3436430Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3436670Z             else:
2025-01-17T11:32:04.3436820Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.3437030Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.3437220Z 
2025-01-17T11:32:04.3437340Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.3437600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3437870Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3438150Z     ???
2025-01-17T11:32:04.3438300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3438490Z 
2025-01-17T11:32:04.3438540Z >   ???
2025-01-17T11:32:04.3438700Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3438900Z E   
2025-01-17T11:32:04.3439060Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3439310Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3439510Z E          ...
2025-01-17T11:32:04.3439650Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3440060Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3440320Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3440510Z E          ...
2025-01-17T11:32:04.3440660Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3440880Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3441210Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3441400Z 
2025-01-17T11:32:04.3441460Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3441750Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_lower_level_index] _
2025-01-17T11:32:04.3441990Z 
2025-01-17T11:32:04.3442150Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133530770>
2025-01-17T11:32:04.3442510Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c275190>
2025-01-17T11:32:04.3442760Z attr = 'lines_lower_level_index'
2025-01-17T11:32:04.3442870Z 
2025-01-17T11:32:04.3442980Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3443250Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3443450Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3443600Z         try:
2025-01-17T11:32:04.3443790Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3444020Z         except KeyError:
2025-01-17T11:32:04.3444230Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3444440Z     
2025-01-17T11:32:04.3444560Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3444740Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3444930Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3445160Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3445390Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3445560Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3445810Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3445970Z 
2025-01-17T11:32:04.3446060Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.3446310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3446460Z 
2025-01-17T11:32:04.3446600Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.3446860Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.3447080Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3447290Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.3447520Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.3447760Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.3447970Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3448170Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.3448350Z err_msg = None
2025-01-17T11:32:04.3448420Z 
2025-01-17T11:32:04.3448510Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3448700Z         if err_msg is None:
2025-01-17T11:32:04.3448870Z             if left.shape != right.shape:
2025-01-17T11:32:04.3449050Z                 raise_assert_detail(
2025-01-17T11:32:04.3449340Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3449570Z                 )
2025-01-17T11:32:04.3449690Z     
2025-01-17T11:32:04.3449800Z             diff = 0
2025-01-17T11:32:04.3449960Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3450170Z                 # count up differences
2025-01-17T11:32:04.3450440Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3450690Z                     diff += 1
2025-01-17T11:32:04.3450840Z     
2025-01-17T11:32:04.3450960Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3451190Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3451700Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3451990Z E           AssertionError: Series are different
2025-01-17T11:32:04.3452170Z E           
2025-01-17T11:32:04.3452320Z E           Series values are different (4.04858 %)
2025-01-17T11:32:04.3452870Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.3453510Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3454110Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3454450Z 
2025-01-17T11:32:04.3454700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3455170Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_upper_level_index] _
2025-01-17T11:32:04.3455410Z 
2025-01-17T11:32:04.3455580Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133530530>
2025-01-17T11:32:04.3455940Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c275190>
2025-01-17T11:32:04.3456190Z attr = 'lines_upper_level_index'
2025-01-17T11:32:04.3456320Z 
2025-01-17T11:32:04.3456420Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3456670Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3456890Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3457040Z         try:
2025-01-17T11:32:04.3457220Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3457440Z         except KeyError:
2025-01-17T11:32:04.3457650Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3457870Z     
2025-01-17T11:32:04.3457980Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3458160Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3458350Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3458580Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3458810Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3458990Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3459200Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3459350Z 
2025-01-17T11:32:04.3459440Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.3459690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3459850Z 
2025-01-17T11:32:04.3459950Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.3460190Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.3460400Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.3460670Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.3460910Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.3461150Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.3461600Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.3461810Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.3461980Z err_msg = None
2025-01-17T11:32:04.3462060Z 
2025-01-17T11:32:04.3462140Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3462400Z         if err_msg is None:
2025-01-17T11:32:04.3462570Z             if left.shape != right.shape:
2025-01-17T11:32:04.3462760Z                 raise_assert_detail(
2025-01-17T11:32:04.3462990Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3463210Z                 )
2025-01-17T11:32:04.3463330Z     
2025-01-17T11:32:04.3463430Z             diff = 0
2025-01-17T11:32:04.3463920Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3464130Z                 # count up differences
2025-01-17T11:32:04.3464380Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3464640Z                     diff += 1
2025-01-17T11:32:04.3464790Z     
2025-01-17T11:32:04.3464910Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3465140Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3465450Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3465730Z E           AssertionError: Series are different
2025-01-17T11:32:04.3465940Z E           
2025-01-17T11:32:04.3466090Z E           Series values are different (6.47773 %)
2025-01-17T11:32:04.3466530Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.3467200Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.3467860Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.3468230Z 
2025-01-17T11:32:04.3468470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3468930Z ___________ TestPlasma.test_plasma_properties[ionization:nebular-nu] ___________
2025-01-17T11:32:04.3469150Z 
2025-01-17T11:32:04.3469250Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3469520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3469770Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3470140Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3470430Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3470750Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3471030Z err_msg = None
2025-01-17T11:32:04.3471110Z 
2025-01-17T11:32:04.3471270Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3479940Z         if err_msg is None:
2025-01-17T11:32:04.3480160Z             if left.shape != right.shape:
2025-01-17T11:32:04.3480350Z                 raise_assert_detail(
2025-01-17T11:32:04.3480590Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3481100Z                 )
2025-01-17T11:32:04.3481220Z     
2025-01-17T11:32:04.3481330Z             diff = 0
2025-01-17T11:32:04.3481500Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3481710Z                 # count up differences
2025-01-17T11:32:04.3481970Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3482220Z                     diff += 1
2025-01-17T11:32:04.3482370Z     
2025-01-17T11:32:04.3482490Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3482730Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3483040Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3483330Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3483520Z E           
2025-01-17T11:32:04.3483680Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3484060Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3484550Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3484840Z 
2025-01-17T11:32:04.3485090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3485390Z 
2025-01-17T11:32:04.3485520Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3485720Z 
2025-01-17T11:32:04.3485900Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133530470>
2025-01-17T11:32:04.3486280Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c275190>, attr = 'nu'
2025-01-17T11:32:04.3486500Z 
2025-01-17T11:32:04.3486610Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3486860Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3487070Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3487220Z         try:
2025-01-17T11:32:04.3487400Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3487630Z         except KeyError:
2025-01-17T11:32:04.3487830Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3488050Z     
2025-01-17T11:32:04.3488170Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3488350Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3488540Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3488770Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3489000Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3489190Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3489410Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3489570Z 
2025-01-17T11:32:04.3489670Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.3489910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3490180Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3490400Z     ???
2025-01-17T11:32:04.3490560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3490890Z 
2025-01-17T11:32:04.3490940Z >   ???
2025-01-17T11:32:04.3491100Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3491300Z E   
2025-01-17T11:32:04.3491460Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3491760Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3491960Z E          ...
2025-01-17T11:32:04.3492100Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3492340Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3492590Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3492790Z E          ...
2025-01-17T11:32:04.3492930Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3493160Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3493400Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3493550Z 
2025-01-17T11:32:04.3493610Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3493880Z _____ TestPlasma.test_plasma_properties[ionization:nebular-wavelength_cm] ______
2025-01-17T11:32:04.3494110Z 
2025-01-17T11:32:04.3494210Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3494480Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3494720Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3494980Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3495260Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3495500Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3495680Z err_msg = None
2025-01-17T11:32:04.3495760Z 
2025-01-17T11:32:04.3495840Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3496040Z         if err_msg is None:
2025-01-17T11:32:04.3496210Z             if left.shape != right.shape:
2025-01-17T11:32:04.3496400Z                 raise_assert_detail(
2025-01-17T11:32:04.3496630Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3496860Z                 )
2025-01-17T11:32:04.3496980Z     
2025-01-17T11:32:04.3497080Z             diff = 0
2025-01-17T11:32:04.3497250Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3497460Z                 # count up differences
2025-01-17T11:32:04.3497710Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3497960Z                     diff += 1
2025-01-17T11:32:04.3498110Z     
2025-01-17T11:32:04.3498230Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3498460Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3498770Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3499060Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3499250Z E           
2025-01-17T11:32:04.3499410Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3499770Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3500270Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3500550Z 
2025-01-17T11:32:04.3500940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3501240Z 
2025-01-17T11:32:04.3501380Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3501580Z 
2025-01-17T11:32:04.3501750Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133533a70>
2025-01-17T11:32:04.3502160Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c275190>
2025-01-17T11:32:04.3502400Z attr = 'wavelength_cm'
2025-01-17T11:32:04.3502500Z 
2025-01-17T11:32:04.3502600Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3502850Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3503060Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3503210Z         try:
2025-01-17T11:32:04.3503390Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3503620Z         except KeyError:
2025-01-17T11:32:04.3503830Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3504040Z     
2025-01-17T11:32:04.3504160Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3504340Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3504530Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3504760Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3504990Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3505200Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3505440Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3505630Z 
2025-01-17T11:32:04.3505730Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.3505970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3506240Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3506520Z     ???
2025-01-17T11:32:04.3506700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3506870Z 
2025-01-17T11:32:04.3506920Z >   ???
2025-01-17T11:32:04.3507070Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3507280Z E   
2025-01-17T11:32:04.3507430Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3507680Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3507870Z E          ...
2025-01-17T11:32:04.3508010Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3508240Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3508500Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3508690Z E          ...
2025-01-17T11:32:04.3508820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3509050Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3509290Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3509440Z 
2025-01-17T11:32:04.3509500Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3509760Z __________ TestPlasma.test_plasma_properties[ionization:nebular-f_lu] __________
2025-01-17T11:32:04.3509980Z 
2025-01-17T11:32:04.3510080Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3510360Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3510610Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3510850Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3511120Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3511360Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3511550Z err_msg = None
2025-01-17T11:32:04.3511620Z 
2025-01-17T11:32:04.3511710Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3512240Z         if err_msg is None:
2025-01-17T11:32:04.3512410Z             if left.shape != right.shape:
2025-01-17T11:32:04.3512640Z                 raise_assert_detail(
2025-01-17T11:32:04.3512870Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3513170Z                 )
2025-01-17T11:32:04.3513290Z     
2025-01-17T11:32:04.3513400Z             diff = 0
2025-01-17T11:32:04.3513570Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3513780Z                 # count up differences
2025-01-17T11:32:04.3514030Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3514280Z                     diff += 1
2025-01-17T11:32:04.3514430Z     
2025-01-17T11:32:04.3514550Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3514780Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3515170Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3515460Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3515650Z E           
2025-01-17T11:32:04.3515810Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3516160Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3516650Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3516940Z 
2025-01-17T11:32:04.3517170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3517480Z 
2025-01-17T11:32:04.3517610Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3517810Z 
2025-01-17T11:32:04.3517980Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133533e00>
2025-01-17T11:32:04.3518370Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c275190>, attr = 'f_lu'
2025-01-17T11:32:04.3518600Z 
2025-01-17T11:32:04.3518700Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3518960Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3519170Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3519330Z         try:
2025-01-17T11:32:04.3519500Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3519730Z         except KeyError:
2025-01-17T11:32:04.3519940Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3520160Z     
2025-01-17T11:32:04.3520280Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3520460Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3520650Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3520880Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3521120Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3521300Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3521510Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3521660Z 
2025-01-17T11:32:04.3521750Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.3522000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3522270Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3522490Z     ???
2025-01-17T11:32:04.3522640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3522980Z 
2025-01-17T11:32:04.3523030Z >   ???
2025-01-17T11:32:04.3523190Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3523390Z E   
2025-01-17T11:32:04.3523570Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3523940Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3524140Z E          ...
2025-01-17T11:32:04.3524280Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3524510Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3524770Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3524970Z E          ...
2025-01-17T11:32:04.3525100Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3525330Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3525570Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3525710Z 
2025-01-17T11:32:04.3525780Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3526040Z ______ TestPlasma.test_plasma_properties[ionization:nebular-tau_sobolevs] ______
2025-01-17T11:32:04.3526270Z 
2025-01-17T11:32:04.3526370Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3526650Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3526890Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3527130Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3527410Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3527660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3527840Z err_msg = None
2025-01-17T11:32:04.3527920Z 
2025-01-17T11:32:04.3528000Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3528200Z         if err_msg is None:
2025-01-17T11:32:04.3528370Z             if left.shape != right.shape:
2025-01-17T11:32:04.3528550Z                 raise_assert_detail(
2025-01-17T11:32:04.3528790Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3529010Z                 )
2025-01-17T11:32:04.3529130Z     
2025-01-17T11:32:04.3529240Z             diff = 0
2025-01-17T11:32:04.3529400Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3529610Z                 # count up differences
2025-01-17T11:32:04.3529860Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3530120Z                     diff += 1
2025-01-17T11:32:04.3530260Z     
2025-01-17T11:32:04.3530380Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3530610Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3530920Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3531210Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3531410Z E           
2025-01-17T11:32:04.3531560Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3531920Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3532410Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3532850Z 
2025-01-17T11:32:04.3533090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3533390Z 
2025-01-17T11:32:04.3533520Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3533730Z 
2025-01-17T11:32:04.3533900Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133531010>
2025-01-17T11:32:04.3534310Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c275190>
2025-01-17T11:32:04.3534550Z attr = 'tau_sobolevs'
2025-01-17T11:32:04.3534650Z 
2025-01-17T11:32:04.3534750Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3535000Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3535210Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3535360Z         try:
2025-01-17T11:32:04.3535540Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3535770Z         except KeyError:
2025-01-17T11:32:04.3535980Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3536190Z     
2025-01-17T11:32:04.3536310Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3536490Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3536680Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3536920Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3537150Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3537330Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3537540Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3537730Z             else:
2025-01-17T11:32:04.3537880Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.3538090Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.3538230Z 
2025-01-17T11:32:04.3538330Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.3538570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3538840Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3539060Z     ???
2025-01-17T11:32:04.3539420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3539580Z 
2025-01-17T11:32:04.3539640Z >   ???
2025-01-17T11:32:04.3539890Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3540100Z E   
2025-01-17T11:32:04.3540340Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3540620Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3540830Z E          ...
2025-01-17T11:32:04.3541000Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3541250Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3541570Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3541790Z E          ...
2025-01-17T11:32:04.3547580Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3547880Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3548130Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3548270Z 
2025-01-17T11:32:04.3548340Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3548610Z ______ TestPlasma.test_plasma_properties[ionization:nebular-beta_sobolev] ______
2025-01-17T11:32:04.3548840Z 
2025-01-17T11:32:04.3548950Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3549220Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3549470Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3549710Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3549990Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3550500Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3550680Z err_msg = None
2025-01-17T11:32:04.3550770Z 
2025-01-17T11:32:04.3550850Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3551040Z         if err_msg is None:
2025-01-17T11:32:04.3551210Z             if left.shape != right.shape:
2025-01-17T11:32:04.3551480Z                 raise_assert_detail(
2025-01-17T11:32:04.3551720Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3551940Z                 )
2025-01-17T11:32:04.3552060Z     
2025-01-17T11:32:04.3552170Z             diff = 0
2025-01-17T11:32:04.3552340Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3552550Z                 # count up differences
2025-01-17T11:32:04.3552860Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3553120Z                     diff += 1
2025-01-17T11:32:04.3553270Z     
2025-01-17T11:32:04.3553390Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3553630Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3553940Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3554230Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3554430Z E           
2025-01-17T11:32:04.3554580Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3555040Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3555530Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3556090Z 
2025-01-17T11:32:04.3556330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3556650Z 
2025-01-17T11:32:04.3556780Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3556980Z 
2025-01-17T11:32:04.3557150Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133530ec0>
2025-01-17T11:32:04.3557510Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c275190>
2025-01-17T11:32:04.3557770Z attr = 'beta_sobolev'
2025-01-17T11:32:04.3557880Z 
2025-01-17T11:32:04.3558010Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3558290Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3558510Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3558670Z         try:
2025-01-17T11:32:04.3558860Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3559100Z         except KeyError:
2025-01-17T11:32:04.3559300Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3559520Z     
2025-01-17T11:32:04.3559640Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3559820Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3560030Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3560290Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3560530Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3560710Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3560920Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3561120Z             else:
2025-01-17T11:32:04.3561260Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.3561480Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.3561940Z 
2025-01-17T11:32:04.3562040Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.3562280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3562550Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3562840Z     ???
2025-01-17T11:32:04.3562990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3563150Z 
2025-01-17T11:32:04.3563190Z >   ???
2025-01-17T11:32:04.3563350Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3563550Z E   
2025-01-17T11:32:04.3563710Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3563960Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3564150Z E          ...
2025-01-17T11:32:04.3564300Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3564530Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3564780Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3564990Z E          ...
2025-01-17T11:32:04.3565130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3565370Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3565610Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3565750Z 
2025-01-17T11:32:04.3565820Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3566090Z ________ TestPlasma.test_plasma_properties[ionization:nebular-j_blues] _________
2025-01-17T11:32:04.3566310Z 
2025-01-17T11:32:04.3566410Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3566690Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3566930Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3567180Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3567460Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3567690Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3567880Z err_msg = None
2025-01-17T11:32:04.3567970Z 
2025-01-17T11:32:04.3568040Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3568240Z         if err_msg is None:
2025-01-17T11:32:04.3568410Z             if left.shape != right.shape:
2025-01-17T11:32:04.3568600Z                 raise_assert_detail(
2025-01-17T11:32:04.3568820Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3569050Z                 )
2025-01-17T11:32:04.3569170Z     
2025-01-17T11:32:04.3569280Z             diff = 0
2025-01-17T11:32:04.3569450Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3569650Z                 # count up differences
2025-01-17T11:32:04.3569910Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3570170Z                     diff += 1
2025-01-17T11:32:04.3570310Z     
2025-01-17T11:32:04.3570430Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3570670Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3570970Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3571260Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3571450Z E           
2025-01-17T11:32:04.3571600Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3571960Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3572540Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3572970Z 
2025-01-17T11:32:04.3573210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3573510Z 
2025-01-17T11:32:04.3573640Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3573850Z 
2025-01-17T11:32:04.3574010Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133530560>
2025-01-17T11:32:04.3574400Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c275190>, attr = 'j_blues'
2025-01-17T11:32:04.3574620Z 
2025-01-17T11:32:04.3574720Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3574970Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3575170Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3575320Z         try:
2025-01-17T11:32:04.3575490Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3575710Z         except KeyError:
2025-01-17T11:32:04.3575910Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3576110Z     
2025-01-17T11:32:04.3576220Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3576390Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3576580Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3576800Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3577020Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3577200Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3577400Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3577590Z             else:
2025-01-17T11:32:04.3577740Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.3577940Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.3578080Z 
2025-01-17T11:32:04.3578170Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.3578410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3578670Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3578880Z     ???
2025-01-17T11:32:04.3579030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3579180Z 
2025-01-17T11:32:04.3579220Z >   ???
2025-01-17T11:32:04.3579370Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3579560Z E   
2025-01-17T11:32:04.3579710Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3579950Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3580140Z E          ...
2025-01-17T11:32:04.3580270Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3580490Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3580740Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3580930Z E          ...
2025-01-17T11:32:04.3581060Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3581280Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3581510Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3581650Z 
2025-01-17T11:32:04.3581710Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3581960Z ___________ TestPlasma.test_plasma_properties[ionization:lte-lines] ____________
2025-01-17T11:32:04.3582170Z 
2025-01-17T11:32:04.3582270Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3582530Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3582820Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3583090Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3583370Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3583700Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3583880Z err_msg = None
2025-01-17T11:32:04.3584000Z 
2025-01-17T11:32:04.3584090Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3584290Z         if err_msg is None:
2025-01-17T11:32:04.3584460Z             if left.shape != right.shape:
2025-01-17T11:32:04.3584640Z                 raise_assert_detail(
2025-01-17T11:32:04.3584870Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3585090Z                 )
2025-01-17T11:32:04.3585210Z     
2025-01-17T11:32:04.3585320Z             diff = 0
2025-01-17T11:32:04.3585480Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3585690Z                 # count up differences
2025-01-17T11:32:04.3585950Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3586210Z                     diff += 1
2025-01-17T11:32:04.3586350Z     
2025-01-17T11:32:04.3586470Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3586700Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3587010Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3587300Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3587490Z E           
2025-01-17T11:32:04.3587640Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3587990Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3588480Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3588760Z 
2025-01-17T11:32:04.3589000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3589310Z 
2025-01-17T11:32:04.3589430Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3589630Z 
2025-01-17T11:32:04.3589790Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1335395b0>
2025-01-17T11:32:04.3590170Z plasma = <tardis.plasma.base.BasePlasma object at 0x315947bc0>, attr = 'lines'
2025-01-17T11:32:04.3590390Z 
2025-01-17T11:32:04.3590490Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3590740Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3590950Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3591090Z         try:
2025-01-17T11:32:04.3591270Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3591490Z         except KeyError:
2025-01-17T11:32:04.3591680Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3591890Z     
2025-01-17T11:32:04.3592000Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3592170Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3592350Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3592570Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3592850Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3593030Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3593230Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3593410Z             else:
2025-01-17T11:32:04.3593550Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.3593800Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.3593950Z 
2025-01-17T11:32:04.3594040Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.3594270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3594530Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3594740Z     ???
2025-01-17T11:32:04.3594880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3595030Z 
2025-01-17T11:32:04.3595070Z >   ???
2025-01-17T11:32:04.3595220Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3595420Z E   
2025-01-17T11:32:04.3595570Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3595810Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3596060Z E          ...
2025-01-17T11:32:04.3596200Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3596420Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3596670Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3596850Z E          ...
2025-01-17T11:32:04.3596990Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3597200Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3597430Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3597710Z 
2025-01-17T11:32:04.3597770Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3598030Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_lower_level_index] ___
2025-01-17T11:32:04.3598260Z 
2025-01-17T11:32:04.3598420Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133538e90>
2025-01-17T11:32:04.3598760Z plasma = <tardis.plasma.base.BasePlasma object at 0x315947bc0>
2025-01-17T11:32:04.3599000Z attr = 'lines_lower_level_index'
2025-01-17T11:32:04.3599110Z 
2025-01-17T11:32:04.3599210Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3599460Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3599660Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3599800Z         try:
2025-01-17T11:32:04.3599970Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3600200Z         except KeyError:
2025-01-17T11:32:04.3600390Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3600600Z     
2025-01-17T11:32:04.3600710Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3600880Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3601070Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3601290Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3601530Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3601710Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3601910Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3602060Z 
2025-01-17T11:32:04.3602150Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.3602390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3602550Z 
2025-01-17T11:32:04.3602660Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.3602900Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.3603250Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3609370Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.3609880Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.3610120Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.3610330Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3610540Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.3610770Z err_msg = None
2025-01-17T11:32:04.3610850Z 
2025-01-17T11:32:04.3610940Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3611140Z         if err_msg is None:
2025-01-17T11:32:04.3611300Z             if left.shape != right.shape:
2025-01-17T11:32:04.3611490Z                 raise_assert_detail(
2025-01-17T11:32:04.3611730Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3611950Z                 )
2025-01-17T11:32:04.3612070Z     
2025-01-17T11:32:04.3612180Z             diff = 0
2025-01-17T11:32:04.3612350Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3612560Z                 # count up differences
2025-01-17T11:32:04.3612810Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3613070Z                     diff += 1
2025-01-17T11:32:04.3613210Z     
2025-01-17T11:32:04.3613330Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3613570Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3613880Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3614160Z E           AssertionError: Series are different
2025-01-17T11:32:04.3614340Z E           
2025-01-17T11:32:04.3614490Z E           Series values are different (4.04858 %)
2025-01-17T11:32:04.3614930Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.3615530Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3616110Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3616430Z 
2025-01-17T11:32:04.3616670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3617120Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_upper_level_index] ___
2025-01-17T11:32:04.3617350Z 
2025-01-17T11:32:04.3617510Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133538260>
2025-01-17T11:32:04.3617860Z plasma = <tardis.plasma.base.BasePlasma object at 0x315947bc0>
2025-01-17T11:32:04.3618100Z attr = 'lines_upper_level_index'
2025-01-17T11:32:04.3618210Z 
2025-01-17T11:32:04.3618310Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3618560Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3618760Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3618910Z         try:
2025-01-17T11:32:04.3619080Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3619300Z         except KeyError:
2025-01-17T11:32:04.3619500Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3619750Z     
2025-01-17T11:32:04.3619870Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3620040Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3620230Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3620450Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3620850Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3621030Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3621240Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3621390Z 
2025-01-17T11:32:04.3621480Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.3621730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3621890Z 
2025-01-17T11:32:04.3621990Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.3622230Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.3622440Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.3622650Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.3622880Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.3623120Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.3623330Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.3623530Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.3623700Z err_msg = None
2025-01-17T11:32:04.3623780Z 
2025-01-17T11:32:04.3623860Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3624050Z         if err_msg is None:
2025-01-17T11:32:04.3624220Z             if left.shape != right.shape:
2025-01-17T11:32:04.3624400Z                 raise_assert_detail(
2025-01-17T11:32:04.3624630Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3624860Z                 )
2025-01-17T11:32:04.3624980Z     
2025-01-17T11:32:04.3625080Z             diff = 0
2025-01-17T11:32:04.3625250Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3625450Z                 # count up differences
2025-01-17T11:32:04.3625710Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3625960Z                     diff += 1
2025-01-17T11:32:04.3626110Z     
2025-01-17T11:32:04.3626230Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3626460Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3626760Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3627030Z E           AssertionError: Series are different
2025-01-17T11:32:04.3627200Z E           
2025-01-17T11:32:04.3627340Z E           Series values are different (6.47773 %)
2025-01-17T11:32:04.3627770Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.3628410Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.3629060Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.3629460Z 
2025-01-17T11:32:04.3629730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3630170Z _____________ TestPlasma.test_plasma_properties[ionization:lte-nu] _____________
2025-01-17T11:32:04.3630370Z 
2025-01-17T11:32:04.3630470Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3630730Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3630960Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3631190Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3631460Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3631690Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3631870Z err_msg = None
2025-01-17T11:32:04.3631950Z 
2025-01-17T11:32:04.3632030Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3632220Z         if err_msg is None:
2025-01-17T11:32:04.3632370Z             if left.shape != right.shape:
2025-01-17T11:32:04.3632550Z                 raise_assert_detail(
2025-01-17T11:32:04.3632780Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3632990Z                 )
2025-01-17T11:32:04.3633100Z     
2025-01-17T11:32:04.3633200Z             diff = 0
2025-01-17T11:32:04.3633370Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3633560Z                 # count up differences
2025-01-17T11:32:04.3633810Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3634050Z                     diff += 1
2025-01-17T11:32:04.3634190Z     
2025-01-17T11:32:04.3634310Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3634530Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3634830Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3635110Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3635290Z E           
2025-01-17T11:32:04.3635430Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3635780Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3636300Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3636570Z 
2025-01-17T11:32:04.3636800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3637090Z 
2025-01-17T11:32:04.3637220Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3637410Z 
2025-01-17T11:32:04.3637570Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133538920>
2025-01-17T11:32:04.3637940Z plasma = <tardis.plasma.base.BasePlasma object at 0x315947bc0>, attr = 'nu'
2025-01-17T11:32:04.3638150Z 
2025-01-17T11:32:04.3638250Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3638540Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3638740Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3638900Z         try:
2025-01-17T11:32:04.3639080Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3639310Z         except KeyError:
2025-01-17T11:32:04.3639560Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3639780Z     
2025-01-17T11:32:04.3639890Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3640080Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3640260Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3640490Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3640720Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3640900Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3641110Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3641260Z 
2025-01-17T11:32:04.3641350Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.3641600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3641860Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3642080Z     ???
2025-01-17T11:32:04.3642230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3642390Z 
2025-01-17T11:32:04.3642430Z >   ???
2025-01-17T11:32:04.3642590Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3642790Z E   
2025-01-17T11:32:04.3642950Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3643190Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3643390Z E          ...
2025-01-17T11:32:04.3643520Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3643750Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3644000Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3644200Z E          ...
2025-01-17T11:32:04.3644340Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3644560Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3644800Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3644940Z 
2025-01-17T11:32:04.3645000Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3645270Z _______ TestPlasma.test_plasma_properties[ionization:lte-wavelength_cm] ________
2025-01-17T11:32:04.3645490Z 
2025-01-17T11:32:04.3645590Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3645850Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3646080Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3646310Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3646580Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3646810Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3646990Z err_msg = None
2025-01-17T11:32:04.3647060Z 
2025-01-17T11:32:04.3647140Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3647330Z         if err_msg is None:
2025-01-17T11:32:04.3647490Z             if left.shape != right.shape:
2025-01-17T11:32:04.3647670Z                 raise_assert_detail(
2025-01-17T11:32:04.3647890Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3648110Z                 )
2025-01-17T11:32:04.3648220Z     
2025-01-17T11:32:04.3648320Z             diff = 0
2025-01-17T11:32:04.3648480Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3648680Z                 # count up differences
2025-01-17T11:32:04.3648920Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3649330Z                     diff += 1
2025-01-17T11:32:04.3649470Z     
2025-01-17T11:32:04.3649580Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3649810Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3650140Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3650410Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3650600Z E           
2025-01-17T11:32:04.3650750Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3651100Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3651560Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3651830Z 
2025-01-17T11:32:04.3652080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3652380Z 
2025-01-17T11:32:04.3652510Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3652700Z 
2025-01-17T11:32:04.3652860Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1335391c0>
2025-01-17T11:32:04.3653210Z plasma = <tardis.plasma.base.BasePlasma object at 0x315947bc0>
2025-01-17T11:32:04.3653440Z attr = 'wavelength_cm'
2025-01-17T11:32:04.3653530Z 
2025-01-17T11:32:04.3653630Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3653880Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3654080Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3654220Z         try:
2025-01-17T11:32:04.3654390Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3654610Z         except KeyError:
2025-01-17T11:32:04.3654810Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3655010Z     
2025-01-17T11:32:04.3655130Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3655300Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3655480Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3655700Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3655920Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3656090Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3656320Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3656470Z 
2025-01-17T11:32:04.3656550Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.3656790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3657050Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3657260Z     ???
2025-01-17T11:32:04.3657410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3657570Z 
2025-01-17T11:32:04.3657610Z >   ???
2025-01-17T11:32:04.3657770Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3657970Z E   
2025-01-17T11:32:04.3658130Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3658370Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3658570Z E          ...
2025-01-17T11:32:04.3658710Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3658940Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3659280Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3659470Z E          ...
2025-01-17T11:32:04.3659610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3659830Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3660070Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3660510Z 
2025-01-17T11:32:04.3660580Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3660830Z ____________ TestPlasma.test_plasma_properties[ionization:lte-f_lu] ____________
2025-01-17T11:32:04.3661050Z 
2025-01-17T11:32:04.3661150Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3661440Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3661680Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3661920Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3662200Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3662440Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3662620Z err_msg = None
2025-01-17T11:32:04.3662700Z 
2025-01-17T11:32:04.3662780Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3662980Z         if err_msg is None:
2025-01-17T11:32:04.3663140Z             if left.shape != right.shape:
2025-01-17T11:32:04.3663330Z                 raise_assert_detail(
2025-01-17T11:32:04.3663560Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3663780Z                 )
2025-01-17T11:32:04.3663820Z     
2025-01-17T11:32:04.3663870Z             diff = 0
2025-01-17T11:32:04.3663950Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3664010Z                 # count up differences
2025-01-17T11:32:04.3664140Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3664190Z                     diff += 1
2025-01-17T11:32:04.3664240Z     
2025-01-17T11:32:04.3664400Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3664510Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3664650Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3664740Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3664790Z E           
2025-01-17T11:32:04.3664890Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3665090Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3665370Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3665380Z 
2025-01-17T11:32:04.3665700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3665700Z 
2025-01-17T11:32:04.3665840Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3665840Z 
2025-01-17T11:32:04.3666140Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1335243b0>
2025-01-17T11:32:04.3666290Z plasma = <tardis.plasma.base.BasePlasma object at 0x315947bc0>, attr = 'f_lu'
2025-01-17T11:32:04.3666300Z 
2025-01-17T11:32:04.3666410Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3666690Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3666760Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3666840Z         try:
2025-01-17T11:32:04.3666960Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3667080Z         except KeyError:
2025-01-17T11:32:04.3667270Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3667310Z     
2025-01-17T11:32:04.3667380Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3667460Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3667630Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3667740Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3667800Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3667870Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3667970Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3667970Z 
2025-01-17T11:32:04.3668060Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.3668160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3668270Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3668310Z     ???
2025-01-17T11:32:04.3673060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3673070Z 
2025-01-17T11:32:04.3673130Z >   ???
2025-01-17T11:32:04.3673220Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3673260Z E   
2025-01-17T11:32:04.3673360Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3673440Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3673480Z E          ...
2025-01-17T11:32:04.3673540Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3673630Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3673710Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3673760Z E          ...
2025-01-17T11:32:04.3673820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3673910Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3673990Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3673990Z 
2025-01-17T11:32:04.3674050Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3674200Z ________ TestPlasma.test_plasma_properties[ionization:lte-tau_sobolevs] ________
2025-01-17T11:32:04.3674200Z 
2025-01-17T11:32:04.3674300Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3674400Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3674470Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3674570Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3674670Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3674740Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3674780Z err_msg = None
2025-01-17T11:32:04.3674790Z 
2025-01-17T11:32:04.3674860Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3674910Z         if err_msg is None:
2025-01-17T11:32:04.3674980Z             if left.shape != right.shape:
2025-01-17T11:32:04.3675030Z                 raise_assert_detail(
2025-01-17T11:32:04.3675140Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3675180Z                 )
2025-01-17T11:32:04.3675220Z     
2025-01-17T11:32:04.3675270Z             diff = 0
2025-01-17T11:32:04.3675350Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3675400Z                 # count up differences
2025-01-17T11:32:04.3675530Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3675660Z                     diff += 1
2025-01-17T11:32:04.3675700Z     
2025-01-17T11:32:04.3675760Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3675860Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3676040Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3676180Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3676220Z E           
2025-01-17T11:32:04.3676300Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3676500Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3676730Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3676740Z 
2025-01-17T11:32:04.3676970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3676970Z 
2025-01-17T11:32:04.3677100Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3677100Z 
2025-01-17T11:32:04.3677260Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133524a70>
2025-01-17T11:32:04.3677380Z plasma = <tardis.plasma.base.BasePlasma object at 0x315947bc0>
2025-01-17T11:32:04.3677430Z attr = 'tau_sobolevs'
2025-01-17T11:32:04.3677430Z 
2025-01-17T11:32:04.3677530Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3677620Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3677670Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3677720Z         try:
2025-01-17T11:32:04.3677820Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3677870Z         except KeyError:
2025-01-17T11:32:04.3677980Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3678020Z     
2025-01-17T11:32:04.3678080Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3678150Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3678200Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3678310Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3678370Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3678440Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3678520Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3678570Z             else:
2025-01-17T11:32:04.3678630Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.3678720Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.3678720Z 
2025-01-17T11:32:04.3678810Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.3678900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3679010Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3679050Z     ???
2025-01-17T11:32:04.3679140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3679140Z 
2025-01-17T11:32:04.3679190Z >   ???
2025-01-17T11:32:04.3679280Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3679320Z E   
2025-01-17T11:32:04.3679420Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3679500Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3679650Z E          ...
2025-01-17T11:32:04.3679720Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3679810Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3679900Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3679940Z E          ...
2025-01-17T11:32:04.3680050Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3680150Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3680220Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3680220Z 
2025-01-17T11:32:04.3680290Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3680440Z ________ TestPlasma.test_plasma_properties[ionization:lte-beta_sobolev] ________
2025-01-17T11:32:04.3680440Z 
2025-01-17T11:32:04.3680540Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3680650Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3680720Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3680820Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3680920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3681000Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3681040Z err_msg = None
2025-01-17T11:32:04.3681050Z 
2025-01-17T11:32:04.3681130Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3681180Z         if err_msg is None:
2025-01-17T11:32:04.3681240Z             if left.shape != right.shape:
2025-01-17T11:32:04.3681300Z                 raise_assert_detail(
2025-01-17T11:32:04.3681410Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3681460Z                 )
2025-01-17T11:32:04.3681500Z     
2025-01-17T11:32:04.3681540Z             diff = 0
2025-01-17T11:32:04.3681630Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3681680Z                 # count up differences
2025-01-17T11:32:04.3681830Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3681890Z                     diff += 1
2025-01-17T11:32:04.3681940Z     
2025-01-17T11:32:04.3682000Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3682100Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3682230Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3682320Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3682360Z E           
2025-01-17T11:32:04.3682440Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3682650Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3682870Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3682870Z 
2025-01-17T11:32:04.3683110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3683120Z 
2025-01-17T11:32:04.3683240Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3683250Z 
2025-01-17T11:32:04.3683410Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133524aa0>
2025-01-17T11:32:04.3683610Z plasma = <tardis.plasma.base.BasePlasma object at 0x315947bc0>
2025-01-17T11:32:04.3683660Z attr = 'beta_sobolev'
2025-01-17T11:32:04.3683670Z 
2025-01-17T11:32:04.3683770Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3683850Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3684060Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3684110Z         try:
2025-01-17T11:32:04.3684220Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3684270Z         except KeyError:
2025-01-17T11:32:04.3684380Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3684420Z     
2025-01-17T11:32:04.3684480Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3684540Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3684590Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3684690Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3684750Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3684810Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3684890Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3684940Z             else:
2025-01-17T11:32:04.3685000Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.3685080Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.3685080Z 
2025-01-17T11:32:04.3685170Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.3685250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3685360Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3685410Z     ???
2025-01-17T11:32:04.3685490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3685490Z 
2025-01-17T11:32:04.3685530Z >   ???
2025-01-17T11:32:04.3685620Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3685670Z E   
2025-01-17T11:32:04.3685760Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3685840Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3685880Z E          ...
2025-01-17T11:32:04.3685940Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3686040Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3686120Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3686160Z E          ...
2025-01-17T11:32:04.3686220Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3686310Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3686380Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3686380Z 
2025-01-17T11:32:04.3686440Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3686590Z __________ TestPlasma.test_plasma_properties[ionization:lte-j_blues] ___________
2025-01-17T11:32:04.3686590Z 
2025-01-17T11:32:04.3686690Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3686790Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3686860Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3686960Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3687050Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3687120Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3687170Z err_msg = None
2025-01-17T11:32:04.3687170Z 
2025-01-17T11:32:04.3687250Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3687300Z         if err_msg is None:
2025-01-17T11:32:04.3687360Z             if left.shape != right.shape:
2025-01-17T11:32:04.3687410Z                 raise_assert_detail(
2025-01-17T11:32:04.3687560Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3687610Z                 )
2025-01-17T11:32:04.3687650Z     
2025-01-17T11:32:04.3687690Z             diff = 0
2025-01-17T11:32:04.3687770Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3687870Z                 # count up differences
2025-01-17T11:32:04.3688000Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3688050Z                     diff += 1
2025-01-17T11:32:04.3688090Z     
2025-01-17T11:32:04.3688150Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3688250Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3688370Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3688460Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3688500Z E           
2025-01-17T11:32:04.3688580Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3688780Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3688990Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3688990Z 
2025-01-17T11:32:04.3689220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3689220Z 
2025-01-17T11:32:04.3689350Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3689350Z 
2025-01-17T11:32:04.3689510Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133525490>
2025-01-17T11:32:04.3689670Z plasma = <tardis.plasma.base.BasePlasma object at 0x315947bc0>, attr = 'j_blues'
2025-01-17T11:32:04.3689670Z 
2025-01-17T11:32:04.3689770Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3689850Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3689910Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3689950Z         try:
2025-01-17T11:32:04.3690050Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3690110Z         except KeyError:
2025-01-17T11:32:04.3690210Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3690250Z     
2025-01-17T11:32:04.3690300Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3690370Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3690420Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3690530Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3690580Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3690640Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3690720Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3690770Z             else:
2025-01-17T11:32:04.3690830Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.3690910Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.3690910Z 
2025-01-17T11:32:04.3691000Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.3691080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3691180Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3691230Z     ???
2025-01-17T11:32:04.3691310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3691350Z 
2025-01-17T11:32:04.3691390Z >   ???
2025-01-17T11:32:04.3691480Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3691520Z E   
2025-01-17T11:32:04.3691620Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3691740Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3691780Z E          ...
2025-01-17T11:32:04.3691840Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3691950Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3692040Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3692080Z E          ...
2025-01-17T11:32:04.3692140Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3692230Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3692300Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3692310Z 
2025-01-17T11:32:04.3692370Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3692510Z ___________ TestPlasma.test_plasma_properties[excitation:lte-lines] ____________
2025-01-17T11:32:04.3692510Z 
2025-01-17T11:32:04.3692610Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3692710Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3692780Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3692880Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3692970Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3693040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3693080Z err_msg = None
2025-01-17T11:32:04.3693080Z 
2025-01-17T11:32:04.3693160Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3693210Z         if err_msg is None:
2025-01-17T11:32:04.3693280Z             if left.shape != right.shape:
2025-01-17T11:32:04.3693330Z                 raise_assert_detail(
2025-01-17T11:32:04.3693440Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3693480Z                 )
2025-01-17T11:32:04.3693520Z     
2025-01-17T11:32:04.3693570Z             diff = 0
2025-01-17T11:32:04.3693650Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3693700Z                 # count up differences
2025-01-17T11:32:04.3693830Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3693880Z                     diff += 1
2025-01-17T11:32:04.3693920Z     
2025-01-17T11:32:04.3693980Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3694070Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3694200Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3694280Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3694330Z E           
2025-01-17T11:32:04.3694410Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3694610Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3694810Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3694820Z 
2025-01-17T11:32:04.3695310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3695310Z 
2025-01-17T11:32:04.3695440Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3695440Z 
2025-01-17T11:32:04.3695600Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1335267b0>
2025-01-17T11:32:04.3695800Z plasma = <tardis.plasma.base.BasePlasma object at 0x314c25f10>, attr = 'lines'
2025-01-17T11:32:04.3695810Z 
2025-01-17T11:32:04.3695910Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3695990Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3696040Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3696090Z         try:
2025-01-17T11:32:04.3696190Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3696240Z         except KeyError:
2025-01-17T11:32:04.3696340Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3696380Z     
2025-01-17T11:32:04.3696440Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3696500Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3696560Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3696660Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3696720Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3696780Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3696860Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3696900Z             else:
2025-01-17T11:32:04.3696960Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.3697040Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.3697040Z 
2025-01-17T11:32:04.3697130Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.3697210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3697320Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3697360Z     ???
2025-01-17T11:32:04.3697450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3697450Z 
2025-01-17T11:32:04.3697490Z >   ???
2025-01-17T11:32:04.3697580Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3697630Z E   
2025-01-17T11:32:04.3697720Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3697800Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3697840Z E          ...
2025-01-17T11:32:04.3697900Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3697990Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3698080Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3698120Z E          ...
2025-01-17T11:32:04.3698180Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3698270Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3698340Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3698350Z 
2025-01-17T11:32:04.3698400Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3698560Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_lower_level_index] ___
2025-01-17T11:32:04.3698560Z 
2025-01-17T11:32:04.3698730Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133526510>
2025-01-17T11:32:04.3698840Z plasma = <tardis.plasma.base.BasePlasma object at 0x314c25f10>
2025-01-17T11:32:04.3698900Z attr = 'lines_lower_level_index'
2025-01-17T11:32:04.3698900Z 
2025-01-17T11:32:04.3699000Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3699080Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3699140Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3699180Z         try:
2025-01-17T11:32:04.3699280Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3699380Z         except KeyError:
2025-01-17T11:32:04.3699480Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3699520Z     
2025-01-17T11:32:04.3699580Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3699640Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3699760Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3699850Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3699910Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3699970Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3700050Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3700050Z 
2025-01-17T11:32:04.3700140Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.3700220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3700230Z 
2025-01-17T11:32:04.3700330Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.3700390Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.3700470Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3700530Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.3700640Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.3700700Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.3700780Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3700840Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.3700890Z err_msg = None
2025-01-17T11:32:04.3700890Z 
2025-01-17T11:32:04.3700970Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3701020Z         if err_msg is None:
2025-01-17T11:32:04.3701090Z             if left.shape != right.shape:
2025-01-17T11:32:04.3701140Z                 raise_assert_detail(
2025-01-17T11:32:04.3701250Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3701300Z                 )
2025-01-17T11:32:04.3701340Z     
2025-01-17T11:32:04.3701390Z             diff = 0
2025-01-17T11:32:04.3701470Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3701530Z                 # count up differences
2025-01-17T11:32:04.3701660Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3701720Z                     diff += 1
2025-01-17T11:32:04.3701760Z     
2025-01-17T11:32:04.3701820Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3701920Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3702050Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3702130Z E           AssertionError: Series are different
2025-01-17T11:32:04.3702180Z E           
2025-01-17T11:32:04.3702250Z E           Series values are different (4.04858 %)
2025-01-17T11:32:04.3702550Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.3702820Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3703090Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3703180Z 
2025-01-17T11:32:04.3703420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3703590Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_upper_level_index] ___
2025-01-17T11:32:04.3703590Z 
2025-01-17T11:32:04.3703760Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1335272c0>
2025-01-17T11:32:04.3703880Z plasma = <tardis.plasma.base.BasePlasma object at 0x314c25f10>
2025-01-17T11:32:04.3703940Z attr = 'lines_upper_level_index'
2025-01-17T11:32:04.3703940Z 
2025-01-17T11:32:04.3704040Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3704130Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3704180Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3704230Z         try:
2025-01-17T11:32:04.3704340Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3704390Z         except KeyError:
2025-01-17T11:32:04.3704500Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3704540Z     
2025-01-17T11:32:04.3704600Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3704660Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3704720Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3704820Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3704880Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3704940Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3705020Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3705030Z 
2025-01-17T11:32:04.3705140Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.3705230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3705230Z 
2025-01-17T11:32:04.3705340Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.3705400Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.3705480Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.3705530Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.3705640Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.3705700Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.3705780Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.3705830Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.3705880Z err_msg = None
2025-01-17T11:32:04.3705890Z 
2025-01-17T11:32:04.3705970Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3706020Z         if err_msg is None:
2025-01-17T11:32:04.3706080Z             if left.shape != right.shape:
2025-01-17T11:32:04.3706140Z                 raise_assert_detail(
2025-01-17T11:32:04.3706250Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3706300Z                 )
2025-01-17T11:32:04.3706340Z     
2025-01-17T11:32:04.3706390Z             diff = 0
2025-01-17T11:32:04.3706470Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3706520Z                 # count up differences
2025-01-17T11:32:04.3706660Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3706710Z                     diff += 1
2025-01-17T11:32:04.3706750Z     
2025-01-17T11:32:04.3706810Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3706910Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3707110Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3707180Z E           AssertionError: Series are different
2025-01-17T11:32:04.3707220Z E           
2025-01-17T11:32:04.3707290Z E           Series values are different (6.47773 %)
2025-01-17T11:32:04.3707630Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.3707920Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.3708220Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.3708230Z 
2025-01-17T11:32:04.3708460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3708600Z _____________ TestPlasma.test_plasma_properties[excitation:lte-nu] _____________
2025-01-17T11:32:04.3708600Z 
2025-01-17T11:32:04.3708690Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3708800Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3708860Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3708970Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3709060Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3709130Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3709180Z err_msg = None
2025-01-17T11:32:04.3709180Z 
2025-01-17T11:32:04.3709260Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3709310Z         if err_msg is None:
2025-01-17T11:32:04.3709370Z             if left.shape != right.shape:
2025-01-17T11:32:04.3709420Z                 raise_assert_detail(
2025-01-17T11:32:04.3709530Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3709570Z                 )
2025-01-17T11:32:04.3709620Z     
2025-01-17T11:32:04.3709660Z             diff = 0
2025-01-17T11:32:04.3709740Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3709790Z                 # count up differences
2025-01-17T11:32:04.3709920Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3709970Z                     diff += 1
2025-01-17T11:32:04.3710010Z     
2025-01-17T11:32:04.3710070Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3710170Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3710290Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3710370Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3710420Z E           
2025-01-17T11:32:04.3710500Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3710830Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3711060Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3711070Z 
2025-01-17T11:32:04.3711300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3711300Z 
2025-01-17T11:32:04.3711420Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3711430Z 
2025-01-17T11:32:04.3711590Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133526f90>
2025-01-17T11:32:04.3711740Z plasma = <tardis.plasma.base.BasePlasma object at 0x314c25f10>, attr = 'nu'
2025-01-17T11:32:04.3711740Z 
2025-01-17T11:32:04.3711840Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3711920Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3711980Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3712020Z         try:
2025-01-17T11:32:04.3712120Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3712170Z         except KeyError:
2025-01-17T11:32:04.3712280Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3712310Z     
2025-01-17T11:32:04.3712370Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3712430Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3712490Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3712600Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3712650Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3712710Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3712790Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3712800Z 
2025-01-17T11:32:04.3712880Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.3712970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3713070Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3713120Z     ???
2025-01-17T11:32:04.3713200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3713200Z 
2025-01-17T11:32:04.3713240Z >   ???
2025-01-17T11:32:04.3713330Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3713370Z E   
2025-01-17T11:32:04.3713460Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3713550Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3713590Z E          ...
2025-01-17T11:32:04.3713650Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3713740Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3713820Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3713870Z E          ...
2025-01-17T11:32:04.3713930Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3714020Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3714090Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3714090Z 
2025-01-17T11:32:04.3714150Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3714300Z _______ TestPlasma.test_plasma_properties[excitation:lte-wavelength_cm] ________
2025-01-17T11:32:04.3714300Z 
2025-01-17T11:32:04.3714400Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3714540Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3714610Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3714710Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3714870Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3714940Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3714980Z err_msg = None
2025-01-17T11:32:04.3714990Z 
2025-01-17T11:32:04.3715060Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3715110Z         if err_msg is None:
2025-01-17T11:32:04.3715180Z             if left.shape != right.shape:
2025-01-17T11:32:04.3715230Z                 raise_assert_detail(
2025-01-17T11:32:04.3715330Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3715380Z                 )
2025-01-17T11:32:04.3715420Z     
2025-01-17T11:32:04.3715460Z             diff = 0
2025-01-17T11:32:04.3715540Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3715600Z                 # count up differences
2025-01-17T11:32:04.3715760Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3715810Z                     diff += 1
2025-01-17T11:32:04.3715870Z     
2025-01-17T11:32:04.3715940Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3716050Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3716240Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3716360Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3716410Z E           
2025-01-17T11:32:04.3716500Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3716700Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3716920Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3716930Z 
2025-01-17T11:32:04.3717160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3717170Z 
2025-01-17T11:32:04.3717360Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3717370Z 
2025-01-17T11:32:04.3717600Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133526a20>
2025-01-17T11:32:04.3717720Z plasma = <tardis.plasma.base.BasePlasma object at 0x314c25f10>
2025-01-17T11:32:04.3717790Z attr = 'wavelength_cm'
2025-01-17T11:32:04.3717790Z 
2025-01-17T11:32:04.3722790Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3722910Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3722970Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3723010Z         try:
2025-01-17T11:32:04.3723120Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3723180Z         except KeyError:
2025-01-17T11:32:04.3723280Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3723330Z     
2025-01-17T11:32:04.3723390Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3723460Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3723520Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3723730Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3723790Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3723850Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3723940Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3723980Z 
2025-01-17T11:32:04.3724080Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.3724170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3724290Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3724330Z     ???
2025-01-17T11:32:04.3724420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3724420Z 
2025-01-17T11:32:04.3724460Z >   ???
2025-01-17T11:32:04.3724560Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3724600Z E   
2025-01-17T11:32:04.3724700Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3724780Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3724830Z E          ...
2025-01-17T11:32:04.3724890Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3724980Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3725070Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3725120Z E          ...
2025-01-17T11:32:04.3725180Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3725270Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3725350Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3725350Z 
2025-01-17T11:32:04.3725410Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3725570Z ____________ TestPlasma.test_plasma_properties[excitation:lte-f_lu] ____________
2025-01-17T11:32:04.3725580Z 
2025-01-17T11:32:04.3725680Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3725790Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3725860Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3725960Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3726060Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3726140Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3726180Z err_msg = None
2025-01-17T11:32:04.3726190Z 
2025-01-17T11:32:04.3726270Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3726320Z         if err_msg is None:
2025-01-17T11:32:04.3726380Z             if left.shape != right.shape:
2025-01-17T11:32:04.3726440Z                 raise_assert_detail(
2025-01-17T11:32:04.3726550Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3726600Z                 )
2025-01-17T11:32:04.3726640Z     
2025-01-17T11:32:04.3726690Z             diff = 0
2025-01-17T11:32:04.3726770Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3726830Z                 # count up differences
2025-01-17T11:32:04.3726960Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3727010Z                     diff += 1
2025-01-17T11:32:04.3727050Z     
2025-01-17T11:32:04.3727120Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3727220Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3727350Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3728050Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3728100Z E           
2025-01-17T11:32:04.3728180Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3728470Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3728740Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3728750Z 
2025-01-17T11:32:04.3728980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3728990Z 
2025-01-17T11:32:04.3729120Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3729120Z 
2025-01-17T11:32:04.3729290Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133525df0>
2025-01-17T11:32:04.3729450Z plasma = <tardis.plasma.base.BasePlasma object at 0x314c25f10>, attr = 'f_lu'
2025-01-17T11:32:04.3729450Z 
2025-01-17T11:32:04.3729550Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3729630Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3729690Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3729730Z         try:
2025-01-17T11:32:04.3729830Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3729880Z         except KeyError:
2025-01-17T11:32:04.3729980Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3730020Z     
2025-01-17T11:32:04.3730080Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3730140Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3730200Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3730300Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3730360Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3730420Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3730500Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3730510Z 
2025-01-17T11:32:04.3730590Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.3730680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3730780Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3730830Z     ???
2025-01-17T11:32:04.3730910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3730910Z 
2025-01-17T11:32:04.3730950Z >   ???
2025-01-17T11:32:04.3731040Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3731080Z E   
2025-01-17T11:32:04.3731180Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3731260Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3731300Z E          ...
2025-01-17T11:32:04.3731360Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3731450Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3731540Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3731580Z E          ...
2025-01-17T11:32:04.3731640Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3731730Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3731800Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3731800Z 
2025-01-17T11:32:04.3731860Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3732010Z ________ TestPlasma.test_plasma_properties[excitation:lte-tau_sobolevs] ________
2025-01-17T11:32:04.3732010Z 
2025-01-17T11:32:04.3732110Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3732280Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3732350Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3732440Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3732590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3732650Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3732700Z err_msg = None
2025-01-17T11:32:04.3732700Z 
2025-01-17T11:32:04.3732780Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3732830Z         if err_msg is None:
2025-01-17T11:32:04.3732890Z             if left.shape != right.shape:
2025-01-17T11:32:04.3732950Z                 raise_assert_detail(
2025-01-17T11:32:04.3733050Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3733100Z                 )
2025-01-17T11:32:04.3733140Z     
2025-01-17T11:32:04.3733180Z             diff = 0
2025-01-17T11:32:04.3733260Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3733320Z                 # count up differences
2025-01-17T11:32:04.3733450Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3733500Z                     diff += 1
2025-01-17T11:32:04.3733540Z     
2025-01-17T11:32:04.3733600Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3733700Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3733830Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3733910Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3733950Z E           
2025-01-17T11:32:04.3734030Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3734230Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3734440Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3734440Z 
2025-01-17T11:32:04.3734670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3734670Z 
2025-01-17T11:32:04.3734810Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3734820Z 
2025-01-17T11:32:04.3734990Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133525f40>
2025-01-17T11:32:04.3735100Z plasma = <tardis.plasma.base.BasePlasma object at 0x314c25f10>
2025-01-17T11:32:04.3735150Z attr = 'tau_sobolevs'
2025-01-17T11:32:04.3735150Z 
2025-01-17T11:32:04.3735250Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3735340Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3735390Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3735430Z         try:
2025-01-17T11:32:04.3735540Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3735590Z         except KeyError:
2025-01-17T11:32:04.3735690Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3735730Z     
2025-01-17T11:32:04.3735780Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3735850Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3735900Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3736080Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3736130Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3736190Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3736270Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3736480Z             else:
2025-01-17T11:32:04.3736550Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.3736620Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.3736630Z 
2025-01-17T11:32:04.3736710Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.3736800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3736900Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3736940Z     ???
2025-01-17T11:32:04.3737030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3737030Z 
2025-01-17T11:32:04.3737070Z >   ???
2025-01-17T11:32:04.3737160Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3737200Z E   
2025-01-17T11:32:04.3737300Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3737380Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3737420Z E          ...
2025-01-17T11:32:04.3737480Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3737580Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3737660Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3737700Z E          ...
2025-01-17T11:32:04.3737760Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3737850Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3737920Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3737930Z 
2025-01-17T11:32:04.3737980Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3738130Z ________ TestPlasma.test_plasma_properties[excitation:lte-beta_sobolev] ________
2025-01-17T11:32:04.3738140Z 
2025-01-17T11:32:04.3738230Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3738330Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3738400Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3738500Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3738590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3738660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3738710Z err_msg = None
2025-01-17T11:32:04.3738710Z 
2025-01-17T11:32:04.3738790Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3738840Z         if err_msg is None:
2025-01-17T11:32:04.3738900Z             if left.shape != right.shape:
2025-01-17T11:32:04.3738960Z                 raise_assert_detail(
2025-01-17T11:32:04.3739070Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3739110Z                 )
2025-01-17T11:32:04.3739150Z     
2025-01-17T11:32:04.3739200Z             diff = 0
2025-01-17T11:32:04.3739270Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3739330Z                 # count up differences
2025-01-17T11:32:04.3739460Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3739510Z                     diff += 1
2025-01-17T11:32:04.3739550Z     
2025-01-17T11:32:04.3739610Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3739700Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3739840Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3739970Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3740010Z E           
2025-01-17T11:32:04.3740090Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3740300Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3740560Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3740560Z 
2025-01-17T11:32:04.3740800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3740800Z 
2025-01-17T11:32:04.3740930Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3740940Z 
2025-01-17T11:32:04.3741100Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133527ef0>
2025-01-17T11:32:04.3741230Z plasma = <tardis.plasma.base.BasePlasma object at 0x314c25f10>
2025-01-17T11:32:04.3741280Z attr = 'beta_sobolev'
2025-01-17T11:32:04.3741280Z 
2025-01-17T11:32:04.3741380Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3741470Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3741520Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3741570Z         try:
2025-01-17T11:32:04.3741670Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3741720Z         except KeyError:
2025-01-17T11:32:04.3741830Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3741870Z     
2025-01-17T11:32:04.3741930Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3742000Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3742060Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3742160Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3742220Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3742280Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3742360Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3742410Z             else:
2025-01-17T11:32:04.3742470Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.3742560Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.3742560Z 
2025-01-17T11:32:04.3742650Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.3742730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3742850Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3742890Z     ???
2025-01-17T11:32:04.3742970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3742980Z 
2025-01-17T11:32:04.3743020Z >   ???
2025-01-17T11:32:04.3743120Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3743160Z E   
2025-01-17T11:32:04.3743260Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3743340Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3743380Z E          ...
2025-01-17T11:32:04.3743440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3743540Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3743620Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3743670Z E          ...
2025-01-17T11:32:04.3743730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3743870Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3743940Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3743950Z 
2025-01-17T11:32:04.3744010Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3744160Z __________ TestPlasma.test_plasma_properties[excitation:lte-j_blues] ___________
2025-01-17T11:32:04.3744200Z 
2025-01-17T11:32:04.3744310Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3744410Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3744480Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3744580Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3744680Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3744750Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3744800Z err_msg = None
2025-01-17T11:32:04.3744800Z 
2025-01-17T11:32:04.3744880Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3744930Z         if err_msg is None:
2025-01-17T11:32:04.3744990Z             if left.shape != right.shape:
2025-01-17T11:32:04.3745050Z                 raise_assert_detail(
2025-01-17T11:32:04.3745170Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3745210Z                 )
2025-01-17T11:32:04.3745250Z     
2025-01-17T11:32:04.3745300Z             diff = 0
2025-01-17T11:32:04.3745380Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3745440Z                 # count up differences
2025-01-17T11:32:04.3745570Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3745620Z                     diff += 1
2025-01-17T11:32:04.3745660Z     
2025-01-17T11:32:04.3745720Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3745830Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3745960Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3746050Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3746090Z E           
2025-01-17T11:32:04.3746180Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3746380Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3746580Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3746590Z 
2025-01-17T11:32:04.3746830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3746830Z 
2025-01-17T11:32:04.3746960Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3746960Z 
2025-01-17T11:32:04.3747130Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133525a30>
2025-01-17T11:32:04.3747290Z plasma = <tardis.plasma.base.BasePlasma object at 0x314c25f10>, attr = 'j_blues'
2025-01-17T11:32:04.3747290Z 
2025-01-17T11:32:04.3747390Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3747480Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3747530Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3747580Z         try:
2025-01-17T11:32:04.3747680Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3747930Z         except KeyError:
2025-01-17T11:32:04.3748040Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3748080Z     
2025-01-17T11:32:04.3748140Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3748210Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3748310Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3748410Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3748470Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3748530Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3748610Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3748660Z             else:
2025-01-17T11:32:04.3748720Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.3748800Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.3748800Z 
2025-01-17T11:32:04.3748900Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.3748990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3749090Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3749130Z     ???
2025-01-17T11:32:04.3749220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3749220Z 
2025-01-17T11:32:04.3749260Z >   ???
2025-01-17T11:32:04.3749350Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3749390Z E   
2025-01-17T11:32:04.3749490Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3749560Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3749610Z E          ...
2025-01-17T11:32:04.3749670Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3749760Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3749840Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3749890Z E          ...
2025-01-17T11:32:04.3749950Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3750040Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3750110Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3750120Z 
2025-01-17T11:32:04.3750170Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3750320Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines] ________
2025-01-17T11:32:04.3750330Z 
2025-01-17T11:32:04.3750420Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3750520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3750590Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3750690Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3750790Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3750850Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3750900Z err_msg = None
2025-01-17T11:32:04.3750900Z 
2025-01-17T11:32:04.3750980Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3751030Z         if err_msg is None:
2025-01-17T11:32:04.3751090Z             if left.shape != right.shape:
2025-01-17T11:32:04.3751150Z                 raise_assert_detail(
2025-01-17T11:32:04.3751250Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3751290Z                 )
2025-01-17T11:32:04.3751340Z     
2025-01-17T11:32:04.3751380Z             diff = 0
2025-01-17T11:32:04.3751460Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3751510Z                 # count up differences
2025-01-17T11:32:04.3751640Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3751730Z                     diff += 1
2025-01-17T11:32:04.3751770Z     
2025-01-17T11:32:04.3751830Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3751930Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3752190Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3752270Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3752310Z E           
2025-01-17T11:32:04.3752390Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3752590Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3752800Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3752800Z 
2025-01-17T11:32:04.3753030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3753030Z 
2025-01-17T11:32:04.3753160Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3753160Z 
2025-01-17T11:32:04.3753320Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133527a70>
2025-01-17T11:32:04.3753470Z plasma = <tardis.plasma.base.BasePlasma object at 0x314c4f980>, attr = 'lines'
2025-01-17T11:32:04.3753470Z 
2025-01-17T11:32:04.3753570Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3753660Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3753710Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3753750Z         try:
2025-01-17T11:32:04.3753850Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3753900Z         except KeyError:
2025-01-17T11:32:04.3754010Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3754050Z     
2025-01-17T11:32:04.3754100Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3754170Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3754220Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3754320Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3754380Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3754430Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3754510Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3754560Z             else:
2025-01-17T11:32:04.3754620Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.3754700Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.3754700Z 
2025-01-17T11:32:04.3754790Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.3754870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3754980Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3755020Z     ???
2025-01-17T11:32:04.3755110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3755110Z 
2025-01-17T11:32:04.3755150Z >   ???
2025-01-17T11:32:04.3755240Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3755280Z E   
2025-01-17T11:32:04.3755370Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3755450Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3755500Z E          ...
2025-01-17T11:32:04.3755600Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3755690Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3755770Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3755820Z E          ...
2025-01-17T11:32:04.3755880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3756010Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3756080Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3756080Z 
2025-01-17T11:32:04.3756140Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3756310Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] _
2025-01-17T11:32:04.3756310Z 
2025-01-17T11:32:04.3756470Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133527920>
2025-01-17T11:32:04.3756590Z plasma = <tardis.plasma.base.BasePlasma object at 0x314c4f980>
2025-01-17T11:32:04.3756650Z attr = 'lines_lower_level_index'
2025-01-17T11:32:04.3756650Z 
2025-01-17T11:32:04.3756750Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3756830Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3756890Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3756930Z         try:
2025-01-17T11:32:04.3757040Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3757090Z         except KeyError:
2025-01-17T11:32:04.3757190Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3757230Z     
2025-01-17T11:32:04.3757290Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3757350Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3757410Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3757510Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3757560Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3757620Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3757700Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3757700Z 
2025-01-17T11:32:04.3757790Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.3757880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3757880Z 
2025-01-17T11:32:04.3757980Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.3758040Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.3758120Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3758170Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.3758280Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.3758330Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.3758420Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3758470Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.3758520Z err_msg = None
2025-01-17T11:32:04.3758520Z 
2025-01-17T11:32:04.3758600Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3758650Z         if err_msg is None:
2025-01-17T11:32:04.3758720Z             if left.shape != right.shape:
2025-01-17T11:32:04.3758780Z                 raise_assert_detail(
2025-01-17T11:32:04.3758890Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3758940Z                 )
2025-01-17T11:32:04.3758980Z     
2025-01-17T11:32:04.3759020Z             diff = 0
2025-01-17T11:32:04.3759110Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3759170Z                 # count up differences
2025-01-17T11:32:04.3759300Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3759350Z                     diff += 1
2025-01-17T11:32:04.3759390Z     
2025-01-17T11:32:04.3759490Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3759600Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3759790Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3759870Z E           AssertionError: Series are different
2025-01-17T11:32:04.3759960Z E           
2025-01-17T11:32:04.3760040Z E           Series values are different (4.04858 %)
2025-01-17T11:32:04.3760340Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.3760610Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3760880Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3760890Z 
2025-01-17T11:32:04.3761130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3761310Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] _
2025-01-17T11:32:04.3761310Z 
2025-01-17T11:32:04.3761480Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1335278c0>
2025-01-17T11:32:04.3761600Z plasma = <tardis.plasma.base.BasePlasma object at 0x314c4f980>
2025-01-17T11:32:04.3761660Z attr = 'lines_upper_level_index'
2025-01-17T11:32:04.3761660Z 
2025-01-17T11:32:04.3761770Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3761850Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3761910Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3761950Z         try:
2025-01-17T11:32:04.3762060Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3762110Z         except KeyError:
2025-01-17T11:32:04.3762220Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3762260Z     
2025-01-17T11:32:04.3762320Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3762380Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3762440Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3762550Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3762610Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3762670Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3762750Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3762760Z 
2025-01-17T11:32:04.3762850Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.3762940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3762940Z 
2025-01-17T11:32:04.3763050Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.3763100Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.3763190Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.3763240Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.3763350Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.3763630Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.3763710Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.3763770Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.3763820Z err_msg = None
2025-01-17T11:32:04.3763860Z 
2025-01-17T11:32:04.3763940Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3763990Z         if err_msg is None:
2025-01-17T11:32:04.3764060Z             if left.shape != right.shape:
2025-01-17T11:32:04.3764110Z                 raise_assert_detail(
2025-01-17T11:32:04.3764220Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3764270Z                 )
2025-01-17T11:32:04.3764310Z     
2025-01-17T11:32:04.3764360Z             diff = 0
2025-01-17T11:32:04.3764440Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3764500Z                 # count up differences
2025-01-17T11:32:04.3764630Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3764680Z                     diff += 1
2025-01-17T11:32:04.3764720Z     
2025-01-17T11:32:04.3764780Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3764880Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3765010Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3765080Z E           AssertionError: Series are different
2025-01-17T11:32:04.3765130Z E           
2025-01-17T11:32:04.3765200Z E           Series values are different (6.47773 %)
2025-01-17T11:32:04.3765480Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.3765780Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.3766080Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.3766080Z 
2025-01-17T11:32:04.3766350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3766560Z _________ TestPlasma.test_plasma_properties[excitation:dilute-lte-nu] __________
2025-01-17T11:32:04.3766570Z 
2025-01-17T11:32:04.3766670Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3766780Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3766860Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3766970Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3767070Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3772020Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3772080Z err_msg = None
2025-01-17T11:32:04.3772170Z 
2025-01-17T11:32:04.3772260Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3772310Z         if err_msg is None:
2025-01-17T11:32:04.3772380Z             if left.shape != right.shape:
2025-01-17T11:32:04.3772430Z                 raise_assert_detail(
2025-01-17T11:32:04.3772670Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3772720Z                 )
2025-01-17T11:32:04.3772760Z     
2025-01-17T11:32:04.3772800Z             diff = 0
2025-01-17T11:32:04.3772880Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3772940Z                 # count up differences
2025-01-17T11:32:04.3773070Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3773120Z                     diff += 1
2025-01-17T11:32:04.3773160Z     
2025-01-17T11:32:04.3773220Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3773310Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3773450Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3773530Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3773570Z E           
2025-01-17T11:32:04.3773650Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3773850Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3774060Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3774060Z 
2025-01-17T11:32:04.3774290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3774290Z 
2025-01-17T11:32:04.3774420Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3774430Z 
2025-01-17T11:32:04.3774590Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133525790>
2025-01-17T11:32:04.3774730Z plasma = <tardis.plasma.base.BasePlasma object at 0x314c4f980>, attr = 'nu'
2025-01-17T11:32:04.3774740Z 
2025-01-17T11:32:04.3774830Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3774920Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3774970Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3775010Z         try:
2025-01-17T11:32:04.3775120Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3775170Z         except KeyError:
2025-01-17T11:32:04.3775280Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3775320Z     
2025-01-17T11:32:04.3775370Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3775430Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3775490Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3775590Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3775650Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3775710Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3775790Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3775790Z 
2025-01-17T11:32:04.3775880Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.3775960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3776070Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3776160Z     ???
2025-01-17T11:32:04.3776250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3776250Z 
2025-01-17T11:32:04.3776290Z >   ???
2025-01-17T11:32:04.3776390Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3776430Z E   
2025-01-17T11:32:04.3776570Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3776650Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3776700Z E          ...
2025-01-17T11:32:04.3776770Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3776870Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3776950Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3776990Z E          ...
2025-01-17T11:32:04.3777060Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3777150Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3777230Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3777230Z 
2025-01-17T11:32:04.3777290Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3777460Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-wavelength_cm] ____
2025-01-17T11:32:04.3777460Z 
2025-01-17T11:32:04.3777560Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3777660Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3777730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3777840Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3777940Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3778000Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3778050Z err_msg = None
2025-01-17T11:32:04.3778060Z 
2025-01-17T11:32:04.3778140Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3778190Z         if err_msg is None:
2025-01-17T11:32:04.3778250Z             if left.shape != right.shape:
2025-01-17T11:32:04.3778310Z                 raise_assert_detail(
2025-01-17T11:32:04.3778420Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3778470Z                 )
2025-01-17T11:32:04.3778510Z     
2025-01-17T11:32:04.3778560Z             diff = 0
2025-01-17T11:32:04.3778640Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3778700Z                 # count up differences
2025-01-17T11:32:04.3778830Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3778880Z                     diff += 1
2025-01-17T11:32:04.3778920Z     
2025-01-17T11:32:04.3778980Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3779090Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3779220Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3779310Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3779350Z E           
2025-01-17T11:32:04.3779430Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3779640Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3779850Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3779890Z 
2025-01-17T11:32:04.3780130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3780140Z 
2025-01-17T11:32:04.3780270Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3780310Z 
2025-01-17T11:32:04.3780480Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133526000>
2025-01-17T11:32:04.3780600Z plasma = <tardis.plasma.base.BasePlasma object at 0x314c4f980>
2025-01-17T11:32:04.3780650Z attr = 'wavelength_cm'
2025-01-17T11:32:04.3780660Z 
2025-01-17T11:32:04.3780760Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3780840Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3780900Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3780940Z         try:
2025-01-17T11:32:04.3781050Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3781100Z         except KeyError:
2025-01-17T11:32:04.3781210Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3781250Z     
2025-01-17T11:32:04.3781310Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3781380Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3781440Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3781540Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3781600Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3781660Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3781740Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3781750Z 
2025-01-17T11:32:04.3781840Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.3781920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3782040Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3782080Z     ???
2025-01-17T11:32:04.3782170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3782170Z 
2025-01-17T11:32:04.3782210Z >   ???
2025-01-17T11:32:04.3782310Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3782350Z E   
2025-01-17T11:32:04.3782450Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3782530Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3782580Z E          ...
2025-01-17T11:32:04.3782640Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3782740Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3782820Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3782860Z E          ...
2025-01-17T11:32:04.3782920Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3783010Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3783080Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3783080Z 
2025-01-17T11:32:04.3783140Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3783290Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-f_lu] _________
2025-01-17T11:32:04.3783300Z 
2025-01-17T11:32:04.3783390Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3783490Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3783560Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3783660Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3783750Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3783820Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3783870Z err_msg = None
2025-01-17T11:32:04.3784060Z 
2025-01-17T11:32:04.3784160Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3784210Z         if err_msg is None:
2025-01-17T11:32:04.3784270Z             if left.shape != right.shape:
2025-01-17T11:32:04.3784330Z                 raise_assert_detail(
2025-01-17T11:32:04.3784490Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3784540Z                 )
2025-01-17T11:32:04.3784580Z     
2025-01-17T11:32:04.3784620Z             diff = 0
2025-01-17T11:32:04.3784700Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3784760Z                 # count up differences
2025-01-17T11:32:04.3784890Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3784930Z                     diff += 1
2025-01-17T11:32:04.3784970Z     
2025-01-17T11:32:04.3785030Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3785130Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3785270Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3785350Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3785390Z E           
2025-01-17T11:32:04.3785470Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3785670Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3785870Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3785880Z 
2025-01-17T11:32:04.3786110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3786110Z 
2025-01-17T11:32:04.3786230Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3786240Z 
2025-01-17T11:32:04.3786400Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1335261e0>
2025-01-17T11:32:04.3786550Z plasma = <tardis.plasma.base.BasePlasma object at 0x314c4f980>, attr = 'f_lu'
2025-01-17T11:32:04.3786550Z 
2025-01-17T11:32:04.3786650Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3786730Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3786790Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3786830Z         try:
2025-01-17T11:32:04.3786930Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3786990Z         except KeyError:
2025-01-17T11:32:04.3787090Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3787130Z     
2025-01-17T11:32:04.3787180Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3787250Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3787310Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3787400Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3787460Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3787520Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3787600Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3787600Z 
2025-01-17T11:32:04.3787690Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.3787770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3787880Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3787970Z     ???
2025-01-17T11:32:04.3788050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3788060Z 
2025-01-17T11:32:04.3788100Z >   ???
2025-01-17T11:32:04.3788190Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3788230Z E   
2025-01-17T11:32:04.3788390Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3788470Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3788510Z E          ...
2025-01-17T11:32:04.3788570Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3788660Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3788740Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3788790Z E          ...
2025-01-17T11:32:04.3788840Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3788940Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3789010Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3789010Z 
2025-01-17T11:32:04.3789070Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3789230Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-tau_sobolevs] _____
2025-01-17T11:32:04.3789230Z 
2025-01-17T11:32:04.3789320Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3789420Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3789490Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3789610Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3789710Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3789770Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3789820Z err_msg = None
2025-01-17T11:32:04.3789830Z 
2025-01-17T11:32:04.3789900Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3789950Z         if err_msg is None:
2025-01-17T11:32:04.3790020Z             if left.shape != right.shape:
2025-01-17T11:32:04.3790070Z                 raise_assert_detail(
2025-01-17T11:32:04.3790180Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3790220Z                 )
2025-01-17T11:32:04.3790260Z     
2025-01-17T11:32:04.3790310Z             diff = 0
2025-01-17T11:32:04.3790390Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3790440Z                 # count up differences
2025-01-17T11:32:04.3790570Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3790620Z                     diff += 1
2025-01-17T11:32:04.3790660Z     
2025-01-17T11:32:04.3790720Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3790820Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3790950Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3791030Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3791070Z E           
2025-01-17T11:32:04.3791150Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3791350Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3791550Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3791620Z 
2025-01-17T11:32:04.3791850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3791860Z 
2025-01-17T11:32:04.3791980Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3792030Z 
2025-01-17T11:32:04.3792190Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13335bfb0>
2025-01-17T11:32:04.3792310Z plasma = <tardis.plasma.base.BasePlasma object at 0x314c4f980>
2025-01-17T11:32:04.3792350Z attr = 'tau_sobolevs'
2025-01-17T11:32:04.3792360Z 
2025-01-17T11:32:04.3792460Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3792540Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3792590Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3792640Z         try:
2025-01-17T11:32:04.3792740Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3792790Z         except KeyError:
2025-01-17T11:32:04.3792890Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3792930Z     
2025-01-17T11:32:04.3792990Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3793050Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3793110Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3793220Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3793270Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3793330Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3793410Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3793450Z             else:
2025-01-17T11:32:04.3793520Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.3793590Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.3793600Z 
2025-01-17T11:32:04.3793680Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.3793770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3793870Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3793920Z     ???
2025-01-17T11:32:04.3794000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3794000Z 
2025-01-17T11:32:04.3794040Z >   ???
2025-01-17T11:32:04.3794130Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3794180Z E   
2025-01-17T11:32:04.3794270Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3794350Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3794390Z E          ...
2025-01-17T11:32:04.3794450Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3794540Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3794620Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3794670Z E          ...
2025-01-17T11:32:04.3794730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3794820Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3794890Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3794890Z 
2025-01-17T11:32:04.3794950Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3795110Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-beta_sobolev] _____
2025-01-17T11:32:04.3795110Z 
2025-01-17T11:32:04.3795210Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3795320Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3795380Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3795490Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3795590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3795700Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3795750Z err_msg = None
2025-01-17T11:32:04.3795750Z 
2025-01-17T11:32:04.3795830Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3795930Z         if err_msg is None:
2025-01-17T11:32:04.3795990Z             if left.shape != right.shape:
2025-01-17T11:32:04.3796050Z                 raise_assert_detail(
2025-01-17T11:32:04.3796160Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3796200Z                 )
2025-01-17T11:32:04.3796250Z     
2025-01-17T11:32:04.3796290Z             diff = 0
2025-01-17T11:32:04.3796370Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3796430Z                 # count up differences
2025-01-17T11:32:04.3796560Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3796620Z                     diff += 1
2025-01-17T11:32:04.3796660Z     
2025-01-17T11:32:04.3796720Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3796820Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3796960Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3797040Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3797090Z E           
2025-01-17T11:32:04.3797170Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3797370Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3797580Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3797590Z 
2025-01-17T11:32:04.3797830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3797830Z 
2025-01-17T11:32:04.3797960Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3797960Z 
2025-01-17T11:32:04.3798130Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13335b920>
2025-01-17T11:32:04.3798250Z plasma = <tardis.plasma.base.BasePlasma object at 0x314c4f980>
2025-01-17T11:32:04.3798300Z attr = 'beta_sobolev'
2025-01-17T11:32:04.3798300Z 
2025-01-17T11:32:04.3798400Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3798490Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3798540Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3798590Z         try:
2025-01-17T11:32:04.3798700Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3798750Z         except KeyError:
2025-01-17T11:32:04.3798850Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3798900Z     
2025-01-17T11:32:04.3798960Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3799020Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3799080Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3799180Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3799250Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3799320Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3799410Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3799450Z             else:
2025-01-17T11:32:04.3799760Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.3799840Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.3799850Z 
2025-01-17T11:32:04.3799940Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.3800020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3800190Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3800230Z     ???
2025-01-17T11:32:04.3800310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3800320Z 
2025-01-17T11:32:04.3800360Z >   ???
2025-01-17T11:32:04.3800450Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3800490Z E   
2025-01-17T11:32:04.3800590Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3800670Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3800720Z E          ...
2025-01-17T11:32:04.3800780Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3800880Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3800960Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3801010Z E          ...
2025-01-17T11:32:04.3801070Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3801160Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3801240Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3801240Z 
2025-01-17T11:32:04.3801300Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3801460Z _______ TestPlasma.test_plasma_properties[excitation:dilute-lte-j_blues] _______
2025-01-17T11:32:04.3801460Z 
2025-01-17T11:32:04.3801560Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3801660Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3801740Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3801830Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3801930Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3802000Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3802040Z err_msg = None
2025-01-17T11:32:04.3802050Z 
2025-01-17T11:32:04.3802120Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3802170Z         if err_msg is None:
2025-01-17T11:32:04.3802240Z             if left.shape != right.shape:
2025-01-17T11:32:04.3802290Z                 raise_assert_detail(
2025-01-17T11:32:04.3802400Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3802440Z                 )
2025-01-17T11:32:04.3802480Z     
2025-01-17T11:32:04.3802520Z             diff = 0
2025-01-17T11:32:04.3802600Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3802660Z                 # count up differences
2025-01-17T11:32:04.3802790Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3802840Z                     diff += 1
2025-01-17T11:32:04.3802880Z     
2025-01-17T11:32:04.3802940Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3803040Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3803170Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3803250Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3803290Z E           
2025-01-17T11:32:04.3803370Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3803570Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3803810Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3803970Z 
2025-01-17T11:32:04.3804220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3804220Z 
2025-01-17T11:32:04.3804350Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3804350Z 
2025-01-17T11:32:04.3804510Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13335bcb0>
2025-01-17T11:32:04.3804670Z plasma = <tardis.plasma.base.BasePlasma object at 0x314c4f980>, attr = 'j_blues'
2025-01-17T11:32:04.3804670Z 
2025-01-17T11:32:04.3804770Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3804860Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3804910Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3804950Z         try:
2025-01-17T11:32:04.3805060Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3805110Z         except KeyError:
2025-01-17T11:32:04.3805210Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3805250Z     
2025-01-17T11:32:04.3805310Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3805370Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3805420Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3805520Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3805580Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3805640Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3805720Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3805760Z             else:
2025-01-17T11:32:04.3805830Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.3805900Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.3805910Z 
2025-01-17T11:32:04.3806000Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.3806080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3806180Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3806230Z     ???
2025-01-17T11:32:04.3806310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3806310Z 
2025-01-17T11:32:04.3806350Z >   ???
2025-01-17T11:32:04.3806440Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3806480Z E   
2025-01-17T11:32:04.3806580Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3806660Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3806700Z E          ...
2025-01-17T11:32:04.3806760Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3806850Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3806940Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3806980Z E          ...
2025-01-17T11:32:04.3807040Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3807130Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3807200Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3807200Z 
2025-01-17T11:32:04.3807260Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3807450Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] _
2025-01-17T11:32:04.3807450Z 
2025-01-17T11:32:04.3807550Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3807720Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3807790Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3807890Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3808030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3808100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3808140Z err_msg = None
2025-01-17T11:32:04.3808140Z 
2025-01-17T11:32:04.3808220Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3808270Z         if err_msg is None:
2025-01-17T11:32:04.3808330Z             if left.shape != right.shape:
2025-01-17T11:32:04.3808380Z                 raise_assert_detail(
2025-01-17T11:32:04.3808490Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3808540Z                 )
2025-01-17T11:32:04.3808580Z     
2025-01-17T11:32:04.3808620Z             diff = 0
2025-01-17T11:32:04.3808700Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3808760Z                 # count up differences
2025-01-17T11:32:04.3808890Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3808930Z                     diff += 1
2025-01-17T11:32:04.3808980Z     
2025-01-17T11:32:04.3809030Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3809130Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3809260Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3809340Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.3809380Z E           
2025-01-17T11:32:04.3809460Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.3809660Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3809870Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3809870Z 
2025-01-17T11:32:04.3810100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3810100Z 
2025-01-17T11:32:04.3810230Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.3810230Z 
2025-01-17T11:32:04.3810390Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1335a5550>
2025-01-17T11:32:04.3810540Z plasma = <tardis.plasma.base.BasePlasma object at 0x135ffedb0>, attr = 'lines'
2025-01-17T11:32:04.3810550Z 
2025-01-17T11:32:04.3810640Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3810730Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3810780Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3810830Z         try:
2025-01-17T11:32:04.3810930Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3810980Z         except KeyError:
2025-01-17T11:32:04.3811080Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3811120Z     
2025-01-17T11:32:04.3811180Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3811240Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3811300Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3811430Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3811490Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3811550Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3811630Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3811710Z             else:
2025-01-17T11:32:04.3811780Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.3811860Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.3811860Z 
2025-01-17T11:32:04.3811950Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.3812030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3812130Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.3812180Z     ???
2025-01-17T11:32:04.3812260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3812260Z 
2025-01-17T11:32:04.3812300Z >   ???
2025-01-17T11:32:04.3812400Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.3812440Z E   
2025-01-17T11:32:04.3812530Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.3812610Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3812650Z E          ...
2025-01-17T11:32:04.3812720Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3812810Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3812890Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.3812930Z E          ...
2025-01-17T11:32:04.3812990Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.3813080Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.3813160Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.3813160Z 
2025-01-17T11:32:04.3813210Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.3813460Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] _
2025-01-17T11:32:04.3813470Z 
2025-01-17T11:32:04.3813650Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1335a5610>
2025-01-17T11:32:04.3813770Z plasma = <tardis.plasma.base.BasePlasma object at 0x135ffedb0>
2025-01-17T11:32:04.3813830Z attr = 'lines_lower_level_index'
2025-01-17T11:32:04.3813830Z 
2025-01-17T11:32:04.3813930Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3814010Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3814070Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3814110Z         try:
2025-01-17T11:32:04.3814210Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3814260Z         except KeyError:
2025-01-17T11:32:04.3814360Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3814400Z     
2025-01-17T11:32:04.3814460Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3814530Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3814710Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3814810Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3814880Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3814950Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3815030Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3815040Z 
2025-01-17T11:32:04.3815160Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.3815250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3815260Z 
2025-01-17T11:32:04.3815370Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.3815440Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.3815520Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3815750Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.3815860Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.3815920Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.3823120Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3823340Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.3823400Z err_msg = None
2025-01-17T11:32:04.3823400Z 
2025-01-17T11:32:04.3823500Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3823610Z         if err_msg is None:
2025-01-17T11:32:04.3823680Z             if left.shape != right.shape:
2025-01-17T11:32:04.3823740Z                 raise_assert_detail(
2025-01-17T11:32:04.3823870Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3823940Z                 )
2025-01-17T11:32:04.3823980Z     
2025-01-17T11:32:04.3824040Z             diff = 0
2025-01-17T11:32:04.3824140Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3824210Z                 # count up differences
2025-01-17T11:32:04.3824350Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3824400Z                     diff += 1
2025-01-17T11:32:04.3824450Z     
2025-01-17T11:32:04.3824530Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3824670Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3824830Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3824910Z E           AssertionError: Series are different
2025-01-17T11:32:04.3824960Z E           
2025-01-17T11:32:04.3825040Z E           Series values are different (4.04858 %)
2025-01-17T11:32:04.3825350Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.3825640Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3825920Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.3825930Z 
2025-01-17T11:32:04.3826180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3826420Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] _
2025-01-17T11:32:04.3826430Z 
2025-01-17T11:32:04.3826610Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1335a56d0>
2025-01-17T11:32:04.3826730Z plasma = <tardis.plasma.base.BasePlasma object at 0x135ffedb0>
2025-01-17T11:32:04.3826800Z attr = 'lines_upper_level_index'
2025-01-17T11:32:04.3826800Z 
2025-01-17T11:32:04.3826910Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.3827000Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.3827060Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.3827110Z         try:
2025-01-17T11:32:04.3827220Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.3827420Z         except KeyError:
2025-01-17T11:32:04.3827530Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.3827580Z     
2025-01-17T11:32:04.3827640Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.3828000Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.3828060Z             if attr == "selected_atoms":
2025-01-17T11:32:04.3828170Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.3828230Z             elif actual.ndim == 1:
2025-01-17T11:32:04.3828300Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.3828380Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.3828390Z 
2025-01-17T11:32:04.3828480Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.3828570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.3828580Z 
2025-01-17T11:32:04.3828690Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.3828750Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.3828830Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.3828890Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.3829010Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.3829070Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.3829150Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.3829210Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.3829260Z err_msg = None
2025-01-17T11:32:04.3829260Z 
2025-01-17T11:32:04.3829360Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.3829420Z         if err_msg is None:
2025-01-17T11:32:04.3829490Z             if left.shape != right.shape:
2025-01-17T11:32:04.3829550Z                 raise_assert_detail(
2025-01-17T11:32:04.3829670Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.3829710Z                 )
2025-01-17T11:32:04.3829760Z     
2025-01-17T11:32:04.3829800Z             diff = 0
2025-01-17T11:32:04.3829890Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.3829950Z                 # count up differences
2025-01-17T11:32:04.3830090Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.3830140Z                     diff += 1
2025-01-17T11:32:04.3830190Z     
2025-01-17T11:32:04.3830250Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.3830360Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.3830490Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.3830570Z E           AssertionError: Series are different
2025-01-17T11:32:04.3830620Z E           
2025-01-17T11:32:04.3830690Z E           Series values are different (6.47773 %)
2025-01-17T11:32:04.3831000Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.3831310Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.3831720Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.3831770Z 
2025-01-17T11:32:04.3832030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.3832210Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] _
2025-01-17T11:32:04.3832220Z 
2025-01-17T11:32:04.3832320Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3832430Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3832510Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3832610Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.3832710Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.3832800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.3832860Z err_msg = None
2025-01-17T11:32:04.3832860Z 
2025-01-17T11:32:04.3832940Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4012750Z         if err_msg is None:
2025-01-17T11:32:04.4012940Z             if left.shape != right.shape:
2025-01-17T11:32:04.4013000Z                 raise_assert_detail(
2025-01-17T11:32:04.4013130Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4013180Z                 )
2025-01-17T11:32:04.4013230Z     
2025-01-17T11:32:04.4013270Z             diff = 0
2025-01-17T11:32:04.4013360Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4013500Z                 # count up differences
2025-01-17T11:32:04.4013650Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4013700Z                     diff += 1
2025-01-17T11:32:04.4013740Z     
2025-01-17T11:32:04.4013820Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4013930Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4014060Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4014150Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4014200Z E           
2025-01-17T11:32:04.4014280Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4014500Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4014720Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4014730Z 
2025-01-17T11:32:04.4014980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4014990Z 
2025-01-17T11:32:04.4015120Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4015120Z 
2025-01-17T11:32:04.4015300Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1335a5910>
2025-01-17T11:32:04.4015440Z plasma = <tardis.plasma.base.BasePlasma object at 0x135ffedb0>, attr = 'nu'
2025-01-17T11:32:04.4015770Z 
2025-01-17T11:32:04.4015880Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4015970Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4016030Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4016070Z         try:
2025-01-17T11:32:04.4016330Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4016380Z         except KeyError:
2025-01-17T11:32:04.4016490Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4016530Z     
2025-01-17T11:32:04.4016590Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4016660Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4016720Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4016820Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4016880Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4016950Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4017030Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4017040Z 
2025-01-17T11:32:04.4017130Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4017220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4017330Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4017380Z     ???
2025-01-17T11:32:04.4017470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4017470Z 
2025-01-17T11:32:04.4017510Z >   ???
2025-01-17T11:32:04.4017610Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4017660Z E   
2025-01-17T11:32:04.4017770Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4017850Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4017900Z E          ...
2025-01-17T11:32:04.4018030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4018140Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4018230Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4018270Z E          ...
2025-01-17T11:32:04.4018340Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4018440Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4018510Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4018510Z 
2025-01-17T11:32:04.4018580Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4018800Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] _
2025-01-17T11:32:04.4018800Z 
2025-01-17T11:32:04.4018910Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4019020Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4019100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4019200Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4019300Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4019380Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4019430Z err_msg = None
2025-01-17T11:32:04.4019430Z 
2025-01-17T11:32:04.4019520Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4019570Z         if err_msg is None:
2025-01-17T11:32:04.4019630Z             if left.shape != right.shape:
2025-01-17T11:32:04.4019690Z                 raise_assert_detail(
2025-01-17T11:32:04.4019800Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4019840Z                 )
2025-01-17T11:32:04.4019890Z     
2025-01-17T11:32:04.4019930Z             diff = 0
2025-01-17T11:32:04.4020010Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4020390Z                 # count up differences
2025-01-17T11:32:04.4020520Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4020570Z                     diff += 1
2025-01-17T11:32:04.4020610Z     
2025-01-17T11:32:04.4020720Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4020820Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4020950Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4021030Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4021080Z E           
2025-01-17T11:32:04.4021160Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4021360Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4021570Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4021580Z 
2025-01-17T11:32:04.4021810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4021820Z 
2025-01-17T11:32:04.4021950Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4021950Z 
2025-01-17T11:32:04.4022110Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1335a59d0>
2025-01-17T11:32:04.4022230Z plasma = <tardis.plasma.base.BasePlasma object at 0x135ffedb0>
2025-01-17T11:32:04.4022280Z attr = 'wavelength_cm'
2025-01-17T11:32:04.4022280Z 
2025-01-17T11:32:04.4022390Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4022470Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4022530Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4022570Z         try:
2025-01-17T11:32:04.4022680Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4022730Z         except KeyError:
2025-01-17T11:32:04.4022840Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4022880Z     
2025-01-17T11:32:04.4022930Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4023000Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4023050Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4023160Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4023210Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4023280Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4023350Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4023360Z 
2025-01-17T11:32:04.4023440Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4023530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4023640Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4023680Z     ???
2025-01-17T11:32:04.4023760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4023770Z 
2025-01-17T11:32:04.4023810Z >   ???
2025-01-17T11:32:04.4023900Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4023940Z E   
2025-01-17T11:32:04.4024030Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4024110Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4024150Z E          ...
2025-01-17T11:32:04.4024270Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4024360Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4024450Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4024490Z E          ...
2025-01-17T11:32:04.4024550Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4024710Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4024780Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4024790Z 
2025-01-17T11:32:04.4024840Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4025030Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] _
2025-01-17T11:32:04.4025030Z 
2025-01-17T11:32:04.4025130Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4025230Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4025300Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4025400Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4025490Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4025570Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4025620Z err_msg = None
2025-01-17T11:32:04.4025620Z 
2025-01-17T11:32:04.4025700Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4025750Z         if err_msg is None:
2025-01-17T11:32:04.4025810Z             if left.shape != right.shape:
2025-01-17T11:32:04.4025870Z                 raise_assert_detail(
2025-01-17T11:32:04.4025970Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4026020Z                 )
2025-01-17T11:32:04.4026060Z     
2025-01-17T11:32:04.4026110Z             diff = 0
2025-01-17T11:32:04.4026190Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4026250Z                 # count up differences
2025-01-17T11:32:04.4026380Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4026430Z                     diff += 1
2025-01-17T11:32:04.4026470Z     
2025-01-17T11:32:04.4026530Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4026630Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4026760Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4026840Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4026880Z E           
2025-01-17T11:32:04.4026960Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4027160Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4027370Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4027380Z 
2025-01-17T11:32:04.4027610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4027610Z 
2025-01-17T11:32:04.4027730Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4027740Z 
2025-01-17T11:32:04.4027900Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1335a5a90>
2025-01-17T11:32:04.4028050Z plasma = <tardis.plasma.base.BasePlasma object at 0x135ffedb0>, attr = 'f_lu'
2025-01-17T11:32:04.4028100Z 
2025-01-17T11:32:04.4028200Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4028280Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4028340Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4028420Z         try:
2025-01-17T11:32:04.4028530Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4028580Z         except KeyError:
2025-01-17T11:32:04.4028690Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4028730Z     
2025-01-17T11:32:04.4028790Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4028850Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4028910Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4029000Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4029060Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4029120Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4029210Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4029210Z 
2025-01-17T11:32:04.4029300Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4029380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4029490Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4029540Z     ???
2025-01-17T11:32:04.4029620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4029620Z 
2025-01-17T11:32:04.4029660Z >   ???
2025-01-17T11:32:04.4029750Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4029800Z E   
2025-01-17T11:32:04.4029890Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4029970Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4030010Z E          ...
2025-01-17T11:32:04.4030070Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4030170Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4030250Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4030290Z E          ...
2025-01-17T11:32:04.4030350Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4030440Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4030510Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4030520Z 
2025-01-17T11:32:04.4030580Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4030780Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] _
2025-01-17T11:32:04.4030780Z 
2025-01-17T11:32:04.4030880Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4030980Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4031050Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4031160Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4031270Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4031340Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4031390Z err_msg = None
2025-01-17T11:32:04.4031390Z 
2025-01-17T11:32:04.4031470Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4031520Z         if err_msg is None:
2025-01-17T11:32:04.4031580Z             if left.shape != right.shape:
2025-01-17T11:32:04.4031640Z                 raise_assert_detail(
2025-01-17T11:32:04.4031740Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4031790Z                 )
2025-01-17T11:32:04.4031830Z     
2025-01-17T11:32:04.4031880Z             diff = 0
2025-01-17T11:32:04.4032020Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4032080Z                 # count up differences
2025-01-17T11:32:04.4032220Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4032270Z                     diff += 1
2025-01-17T11:32:04.4032380Z     
2025-01-17T11:32:04.4032440Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4032550Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4032680Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4032760Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4032810Z E           
2025-01-17T11:32:04.4032890Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4033100Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4033310Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4033320Z 
2025-01-17T11:32:04.4033550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4033560Z 
2025-01-17T11:32:04.4033690Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4033690Z 
2025-01-17T11:32:04.4033860Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1335a6210>
2025-01-17T11:32:04.4033990Z plasma = <tardis.plasma.base.BasePlasma object at 0x135ffedb0>
2025-01-17T11:32:04.4034040Z attr = 'tau_sobolevs'
2025-01-17T11:32:04.4034050Z 
2025-01-17T11:32:04.4034150Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4034230Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4034290Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4034340Z         try:
2025-01-17T11:32:04.4034450Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4034500Z         except KeyError:
2025-01-17T11:32:04.4034610Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4034650Z     
2025-01-17T11:32:04.4034710Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4034770Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4034830Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4034940Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4034990Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4035060Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4035140Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4035190Z             else:
2025-01-17T11:32:04.4035260Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4035340Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4035340Z 
2025-01-17T11:32:04.4035430Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4035520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4035630Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4035670Z     ???
2025-01-17T11:32:04.4035760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4035760Z 
2025-01-17T11:32:04.4035800Z >   ???
2025-01-17T11:32:04.4035900Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4036010Z E   
2025-01-17T11:32:04.4036110Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4036190Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4036240Z E          ...
2025-01-17T11:32:04.4036300Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4036400Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4036520Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4036570Z E          ...
2025-01-17T11:32:04.4036630Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4036750Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4036840Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4036840Z 
2025-01-17T11:32:04.4036900Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4037110Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] _
2025-01-17T11:32:04.4037120Z 
2025-01-17T11:32:04.4037220Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4037330Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4037400Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4037510Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4037600Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4037680Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4037720Z err_msg = None
2025-01-17T11:32:04.4037730Z 
2025-01-17T11:32:04.4037810Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4037860Z         if err_msg is None:
2025-01-17T11:32:04.4037920Z             if left.shape != right.shape:
2025-01-17T11:32:04.4037980Z                 raise_assert_detail(
2025-01-17T11:32:04.4038090Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4038140Z                 )
2025-01-17T11:32:04.4038180Z     
2025-01-17T11:32:04.4038220Z             diff = 0
2025-01-17T11:32:04.4038310Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4038370Z                 # count up differences
2025-01-17T11:32:04.4038490Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4038540Z                     diff += 1
2025-01-17T11:32:04.4038580Z     
2025-01-17T11:32:04.4038640Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4038740Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4038870Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4038950Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4038990Z E           
2025-01-17T11:32:04.4039070Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4039280Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4039480Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4039480Z 
2025-01-17T11:32:04.4039720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4039720Z 
2025-01-17T11:32:04.4039840Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4039910Z 
2025-01-17T11:32:04.4040080Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1335a62d0>
2025-01-17T11:32:04.4040200Z plasma = <tardis.plasma.base.BasePlasma object at 0x135ffedb0>
2025-01-17T11:32:04.4040250Z attr = 'beta_sobolev'
2025-01-17T11:32:04.4040320Z 
2025-01-17T11:32:04.4040420Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4040500Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4040560Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4040600Z         try:
2025-01-17T11:32:04.4040700Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4040760Z         except KeyError:
2025-01-17T11:32:04.4040860Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4040900Z     
2025-01-17T11:32:04.4040960Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4041020Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4041080Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4041180Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4041240Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4041300Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4041390Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4041430Z             else:
2025-01-17T11:32:04.4041490Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4041570Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4041570Z 
2025-01-17T11:32:04.4041660Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4041740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4041850Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4041890Z     ???
2025-01-17T11:32:04.4041970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4041980Z 
2025-01-17T11:32:04.4042020Z >   ???
2025-01-17T11:32:04.4042110Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4042150Z E   
2025-01-17T11:32:04.4042240Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4042320Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4042370Z E          ...
2025-01-17T11:32:04.4042430Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4042520Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4042600Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4042650Z E          ...
2025-01-17T11:32:04.4042710Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4042800Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4042870Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4042870Z 
2025-01-17T11:32:04.4042930Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4043120Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] _
2025-01-17T11:32:04.4043130Z 
2025-01-17T11:32:04.4043220Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4043320Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4043390Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4043490Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4043590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4043660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4043700Z err_msg = None
2025-01-17T11:32:04.4043710Z 
2025-01-17T11:32:04.4043780Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4043870Z         if err_msg is None:
2025-01-17T11:32:04.4043940Z             if left.shape != right.shape:
2025-01-17T11:32:04.4043990Z                 raise_assert_detail(
2025-01-17T11:32:04.4044100Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4044180Z                 )
2025-01-17T11:32:04.4044230Z     
2025-01-17T11:32:04.4044270Z             diff = 0
2025-01-17T11:32:04.4044350Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4044410Z                 # count up differences
2025-01-17T11:32:04.4044530Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4044580Z                     diff += 1
2025-01-17T11:32:04.4044630Z     
2025-01-17T11:32:04.4044690Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4044790Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4044920Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4045000Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4045040Z E           
2025-01-17T11:32:04.4045120Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4045330Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4045530Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4045540Z 
2025-01-17T11:32:04.4045760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4045770Z 
2025-01-17T11:32:04.4045890Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4045900Z 
2025-01-17T11:32:04.4046060Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1335a6450>
2025-01-17T11:32:04.4055390Z plasma = <tardis.plasma.base.BasePlasma object at 0x135ffedb0>, attr = 'j_blues'
2025-01-17T11:32:04.4055410Z 
2025-01-17T11:32:04.4055540Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4055630Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4055690Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4055730Z         try:
2025-01-17T11:32:04.4055850Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4055900Z         except KeyError:
2025-01-17T11:32:04.4056010Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4056060Z     
2025-01-17T11:32:04.4056120Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4056190Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4056250Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4056360Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4056420Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4056500Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4056590Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4056630Z             else:
2025-01-17T11:32:04.4056700Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4056780Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4056780Z 
2025-01-17T11:32:04.4056870Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4056960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4057210Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4057250Z     ???
2025-01-17T11:32:04.4057340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4057340Z 
2025-01-17T11:32:04.4057380Z >   ???
2025-01-17T11:32:04.4057550Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4057590Z E   
2025-01-17T11:32:04.4057690Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4057770Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4057820Z E          ...
2025-01-17T11:32:04.4057880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4057980Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4058060Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4058110Z E          ...
2025-01-17T11:32:04.4058170Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4058270Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4058340Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4058350Z 
2025-01-17T11:32:04.4058400Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4058570Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines] ____
2025-01-17T11:32:04.4058570Z 
2025-01-17T11:32:04.4058670Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4058780Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4058850Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4058950Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4059050Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4059130Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4059170Z err_msg = None
2025-01-17T11:32:04.4059180Z 
2025-01-17T11:32:04.4059260Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4059310Z         if err_msg is None:
2025-01-17T11:32:04.4059380Z             if left.shape != right.shape:
2025-01-17T11:32:04.4059440Z                 raise_assert_detail(
2025-01-17T11:32:04.4059550Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4059590Z                 )
2025-01-17T11:32:04.4059640Z     
2025-01-17T11:32:04.4059680Z             diff = 0
2025-01-17T11:32:04.4059760Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4059820Z                 # count up differences
2025-01-17T11:32:04.4059960Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4060010Z                     diff += 1
2025-01-17T11:32:04.4060050Z     
2025-01-17T11:32:04.4060110Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4060220Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4060350Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4060440Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4060480Z E           
2025-01-17T11:32:04.4060570Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4060780Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4060980Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4061050Z 
2025-01-17T11:32:04.4061300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4061340Z 
2025-01-17T11:32:04.4061480Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4061480Z 
2025-01-17T11:32:04.4061650Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1335a71d0>
2025-01-17T11:32:04.4061800Z plasma = <tardis.plasma.base.BasePlasma object at 0x15d6b1100>, attr = 'lines'
2025-01-17T11:32:04.4061810Z 
2025-01-17T11:32:04.4061910Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4062000Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4062050Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4062100Z         try:
2025-01-17T11:32:04.4062210Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4062260Z         except KeyError:
2025-01-17T11:32:04.4062360Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4062410Z     
2025-01-17T11:32:04.4062460Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4062530Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4062590Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4062680Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4062740Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4062800Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4062880Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4062920Z             else:
2025-01-17T11:32:04.4062990Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4063070Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4063070Z 
2025-01-17T11:32:04.4063160Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4063240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4063350Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4063400Z     ???
2025-01-17T11:32:04.4063480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4063480Z 
2025-01-17T11:32:04.4063520Z >   ???
2025-01-17T11:32:04.4063610Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4063650Z E   
2025-01-17T11:32:04.4063750Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4063830Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4063870Z E          ...
2025-01-17T11:32:04.4063930Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4064020Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4064110Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4064150Z E          ...
2025-01-17T11:32:04.4064210Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4064300Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4064380Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4064380Z 
2025-01-17T11:32:04.4064440Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4064630Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] _
2025-01-17T11:32:04.4064640Z 
2025-01-17T11:32:04.4064800Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1335a7290>
2025-01-17T11:32:04.4064920Z plasma = <tardis.plasma.base.BasePlasma object at 0x15d6b1100>
2025-01-17T11:32:04.4064970Z attr = 'lines_lower_level_index'
2025-01-17T11:32:04.4064970Z 
2025-01-17T11:32:04.4065070Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4065200Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4065250Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4065300Z         try:
2025-01-17T11:32:04.4065400Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4065450Z         except KeyError:
2025-01-17T11:32:04.4065790Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4065830Z     
2025-01-17T11:32:04.4065890Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4065950Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4066010Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4066110Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4066160Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4066220Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4066300Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4066310Z 
2025-01-17T11:32:04.4066400Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4066480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4066490Z 
2025-01-17T11:32:04.4066590Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.4066650Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.4066730Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4066780Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.4066890Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.4066940Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.4067020Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4067070Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.4067120Z err_msg = None
2025-01-17T11:32:04.4067120Z 
2025-01-17T11:32:04.4067200Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4067250Z         if err_msg is None:
2025-01-17T11:32:04.4067310Z             if left.shape != right.shape:
2025-01-17T11:32:04.4067370Z                 raise_assert_detail(
2025-01-17T11:32:04.4067470Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4067520Z                 )
2025-01-17T11:32:04.4067560Z     
2025-01-17T11:32:04.4067610Z             diff = 0
2025-01-17T11:32:04.4067690Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4067750Z                 # count up differences
2025-01-17T11:32:04.4067870Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4067920Z                     diff += 1
2025-01-17T11:32:04.4067960Z     
2025-01-17T11:32:04.4068020Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4068120Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4068250Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4068320Z E           AssertionError: Series are different
2025-01-17T11:32:04.4068370Z E           
2025-01-17T11:32:04.4068440Z E           Series values are different (4.04858 %)
2025-01-17T11:32:04.4068730Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4068990Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4069300Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4069340Z 
2025-01-17T11:32:04.4069570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4069770Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] _
2025-01-17T11:32:04.4069770Z 
2025-01-17T11:32:04.4069930Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1335a7350>
2025-01-17T11:32:04.4070050Z plasma = <tardis.plasma.base.BasePlasma object at 0x15d6b1100>
2025-01-17T11:32:04.4070110Z attr = 'lines_upper_level_index'
2025-01-17T11:32:04.4070120Z 
2025-01-17T11:32:04.4070220Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4070310Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4070360Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4070410Z         try:
2025-01-17T11:32:04.4070520Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4070570Z         except KeyError:
2025-01-17T11:32:04.4070680Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4070720Z     
2025-01-17T11:32:04.4070780Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4070850Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4070910Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4071010Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4071070Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4071130Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4071210Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4071220Z 
2025-01-17T11:32:04.4071310Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4071400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4071400Z 
2025-01-17T11:32:04.4071500Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.4071560Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.4071640Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.4071700Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.4071810Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.4071870Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.4071950Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.4072010Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.4072050Z err_msg = None
2025-01-17T11:32:04.4072050Z 
2025-01-17T11:32:04.4072130Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4072190Z         if err_msg is None:
2025-01-17T11:32:04.4072250Z             if left.shape != right.shape:
2025-01-17T11:32:04.4072310Z                 raise_assert_detail(
2025-01-17T11:32:04.4072420Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4072460Z                 )
2025-01-17T11:32:04.4072510Z     
2025-01-17T11:32:04.4072550Z             diff = 0
2025-01-17T11:32:04.4072630Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4072690Z                 # count up differences
2025-01-17T11:32:04.4072830Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4072920Z                     diff += 1
2025-01-17T11:32:04.4072960Z     
2025-01-17T11:32:04.4073020Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4073120Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4073250Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4073370Z E           AssertionError: Series are different
2025-01-17T11:32:04.4073420Z E           
2025-01-17T11:32:04.4073490Z E           Series values are different (6.47773 %)
2025-01-17T11:32:04.4073790Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4074110Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.4074420Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.4074430Z 
2025-01-17T11:32:04.4074670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4074830Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-nu] ______
2025-01-17T11:32:04.4074830Z 
2025-01-17T11:32:04.4074930Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4075030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4075110Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4075210Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4075310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4075380Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4075430Z err_msg = None
2025-01-17T11:32:04.4075430Z 
2025-01-17T11:32:04.4075510Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4075570Z         if err_msg is None:
2025-01-17T11:32:04.4075630Z             if left.shape != right.shape:
2025-01-17T11:32:04.4075690Z                 raise_assert_detail(
2025-01-17T11:32:04.4075800Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4075840Z                 )
2025-01-17T11:32:04.4075890Z     
2025-01-17T11:32:04.4075930Z             diff = 0
2025-01-17T11:32:04.4076010Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4076070Z                 # count up differences
2025-01-17T11:32:04.4076210Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4076260Z                     diff += 1
2025-01-17T11:32:04.4076300Z     
2025-01-17T11:32:04.4076360Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4076460Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4076590Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4076820Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4076860Z E           
2025-01-17T11:32:04.4076950Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4077150Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4077390Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4077400Z 
2025-01-17T11:32:04.4077630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4077630Z 
2025-01-17T11:32:04.4077760Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4077760Z 
2025-01-17T11:32:04.4077920Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1335a7590>
2025-01-17T11:32:04.4078070Z plasma = <tardis.plasma.base.BasePlasma object at 0x15d6b1100>, attr = 'nu'
2025-01-17T11:32:04.4078070Z 
2025-01-17T11:32:04.4078170Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4078250Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4078300Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4078350Z         try:
2025-01-17T11:32:04.4078450Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4078500Z         except KeyError:
2025-01-17T11:32:04.4078600Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4078650Z     
2025-01-17T11:32:04.4078700Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4078760Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4078820Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4078920Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4078980Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4079040Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4079120Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4079120Z 
2025-01-17T11:32:04.4079210Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4079290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4079390Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4079440Z     ???
2025-01-17T11:32:04.4079520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4079520Z 
2025-01-17T11:32:04.4079560Z >   ???
2025-01-17T11:32:04.4079660Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4079700Z E   
2025-01-17T11:32:04.4079790Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4079870Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4079910Z E          ...
2025-01-17T11:32:04.4079970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4080070Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4080150Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4080190Z E          ...
2025-01-17T11:32:04.4080250Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4080340Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4080420Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4080420Z 
2025-01-17T11:32:04.4080520Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4080690Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] _
2025-01-17T11:32:04.4080690Z 
2025-01-17T11:32:04.4080780Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4080880Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4081080Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4081180Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4081280Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4081350Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4081390Z err_msg = None
2025-01-17T11:32:04.4081390Z 
2025-01-17T11:32:04.4081470Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4081520Z         if err_msg is None:
2025-01-17T11:32:04.4081590Z             if left.shape != right.shape:
2025-01-17T11:32:04.4081640Z                 raise_assert_detail(
2025-01-17T11:32:04.4081750Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4081790Z                 )
2025-01-17T11:32:04.4081840Z     
2025-01-17T11:32:04.4081880Z             diff = 0
2025-01-17T11:32:04.4081960Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4082020Z                 # count up differences
2025-01-17T11:32:04.4082140Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4082190Z                     diff += 1
2025-01-17T11:32:04.4082230Z     
2025-01-17T11:32:04.4082290Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4082390Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4082520Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4082600Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4082640Z E           
2025-01-17T11:32:04.4082720Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4082920Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4083120Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4083130Z 
2025-01-17T11:32:04.4083350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4083360Z 
2025-01-17T11:32:04.4083490Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4083490Z 
2025-01-17T11:32:04.4083650Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1335a7650>
2025-01-17T11:32:04.4083770Z plasma = <tardis.plasma.base.BasePlasma object at 0x15d6b1100>
2025-01-17T11:32:04.4083820Z attr = 'wavelength_cm'
2025-01-17T11:32:04.4083820Z 
2025-01-17T11:32:04.4083920Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4084000Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4084050Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4084100Z         try:
2025-01-17T11:32:04.4084200Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4084250Z         except KeyError:
2025-01-17T11:32:04.4084350Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4084440Z     
2025-01-17T11:32:04.4084490Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4084560Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4084610Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4084710Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4084800Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4084870Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4084940Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4084950Z 
2025-01-17T11:32:04.4085030Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4085120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4085230Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4085270Z     ???
2025-01-17T11:32:04.4085350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4085360Z 
2025-01-17T11:32:04.4085400Z >   ???
2025-01-17T11:32:04.4085490Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4085530Z E   
2025-01-17T11:32:04.4085620Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4085700Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4085750Z E          ...
2025-01-17T11:32:04.4085810Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4085900Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4085990Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4086030Z E          ...
2025-01-17T11:32:04.4086090Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4086180Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4086250Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4086250Z 
2025-01-17T11:32:04.4086310Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4086470Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-f_lu] _____
2025-01-17T11:32:04.4086470Z 
2025-01-17T11:32:04.4086570Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4086670Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4086740Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4086840Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4086930Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4087000Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4087040Z err_msg = None
2025-01-17T11:32:04.4087040Z 
2025-01-17T11:32:04.4087120Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4087170Z         if err_msg is None:
2025-01-17T11:32:04.4087240Z             if left.shape != right.shape:
2025-01-17T11:32:04.4087290Z                 raise_assert_detail(
2025-01-17T11:32:04.4087400Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4087440Z                 )
2025-01-17T11:32:04.4087480Z     
2025-01-17T11:32:04.4087530Z             diff = 0
2025-01-17T11:32:04.4087600Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4087660Z                 # count up differences
2025-01-17T11:32:04.4087790Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4087840Z                     diff += 1
2025-01-17T11:32:04.4087880Z     
2025-01-17T11:32:04.4087940Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4088040Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4088170Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4088280Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4088330Z E           
2025-01-17T11:32:04.4088400Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4088610Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4088850Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4088860Z 
2025-01-17T11:32:04.4089100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4089100Z 
2025-01-17T11:32:04.4089230Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4089230Z 
2025-01-17T11:32:04.4089400Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1335a7710>
2025-01-17T11:32:04.4089560Z plasma = <tardis.plasma.base.BasePlasma object at 0x15d6b1100>, attr = 'f_lu'
2025-01-17T11:32:04.4089560Z 
2025-01-17T11:32:04.4089670Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4089750Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4089810Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4089850Z         try:
2025-01-17T11:32:04.4089960Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4090010Z         except KeyError:
2025-01-17T11:32:04.4090110Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4090160Z     
2025-01-17T11:32:04.4090220Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4090280Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4090340Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4090440Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4090510Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4090570Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4090650Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4090650Z 
2025-01-17T11:32:04.4090740Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4090830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4090940Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4090980Z     ???
2025-01-17T11:32:04.4091070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4091070Z 
2025-01-17T11:32:04.4091120Z >   ???
2025-01-17T11:32:04.4091210Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4091250Z E   
2025-01-17T11:32:04.4091350Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4091430Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4091480Z E          ...
2025-01-17T11:32:04.4091540Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4091640Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4091720Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4091770Z E          ...
2025-01-17T11:32:04.4091830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4091920Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4092000Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4092000Z 
2025-01-17T11:32:04.4092340Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4092520Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] _
2025-01-17T11:32:04.4092520Z 
2025-01-17T11:32:04.4092620Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4092790Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4092920Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4093020Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4093120Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4093190Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4093240Z err_msg = None
2025-01-17T11:32:04.4093250Z 
2025-01-17T11:32:04.4093320Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4093380Z         if err_msg is None:
2025-01-17T11:32:04.4093450Z             if left.shape != right.shape:
2025-01-17T11:32:04.4093500Z                 raise_assert_detail(
2025-01-17T11:32:04.4093610Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4093660Z                 )
2025-01-17T11:32:04.4093700Z     
2025-01-17T11:32:04.4093750Z             diff = 0
2025-01-17T11:32:04.4093830Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4093890Z                 # count up differences
2025-01-17T11:32:04.4094020Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4094070Z                     diff += 1
2025-01-17T11:32:04.4094110Z     
2025-01-17T11:32:04.4094170Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4094280Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4094410Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4094500Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4094540Z E           
2025-01-17T11:32:04.4094630Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4094830Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4095050Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4095050Z 
2025-01-17T11:32:04.4095290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4095290Z 
2025-01-17T11:32:04.4095420Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4095420Z 
2025-01-17T11:32:04.4095590Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1335a7e90>
2025-01-17T11:32:04.4095710Z plasma = <tardis.plasma.base.BasePlasma object at 0x15d6b1100>
2025-01-17T11:32:04.4095760Z attr = 'tau_sobolevs'
2025-01-17T11:32:04.4095760Z 
2025-01-17T11:32:04.4095860Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4095940Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4096000Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4096040Z         try:
2025-01-17T11:32:04.4096140Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4096190Z         except KeyError:
2025-01-17T11:32:04.4096290Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4096370Z     
2025-01-17T11:32:04.4096430Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4096500Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4096550Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4096650Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4096830Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4096890Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4096980Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4097020Z             else:
2025-01-17T11:32:04.4097080Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4097160Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4097160Z 
2025-01-17T11:32:04.4097250Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4097340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4097450Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4097490Z     ???
2025-01-17T11:32:04.4097570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4097570Z 
2025-01-17T11:32:04.4097610Z >   ???
2025-01-17T11:32:04.4097710Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4097750Z E   
2025-01-17T11:32:04.4097840Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4097920Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4097970Z E          ...
2025-01-17T11:32:04.4098030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4098120Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4098200Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4098240Z E          ...
2025-01-17T11:32:04.4098310Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4098400Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4098470Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4098480Z 
2025-01-17T11:32:04.4098530Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4098690Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] _
2025-01-17T11:32:04.4098700Z 
2025-01-17T11:32:04.4098790Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4098890Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4098960Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4099060Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4099160Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4099230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4099270Z err_msg = None
2025-01-17T11:32:04.4099270Z 
2025-01-17T11:32:04.4099350Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4099400Z         if err_msg is None:
2025-01-17T11:32:04.4099470Z             if left.shape != right.shape:
2025-01-17T11:32:04.4099520Z                 raise_assert_detail(
2025-01-17T11:32:04.4103960Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4104020Z                 )
2025-01-17T11:32:04.4104070Z     
2025-01-17T11:32:04.4104110Z             diff = 0
2025-01-17T11:32:04.4104190Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4104250Z                 # count up differences
2025-01-17T11:32:04.4104380Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4104430Z                     diff += 1
2025-01-17T11:32:04.4104470Z     
2025-01-17T11:32:04.4104630Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4104740Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4104860Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4104950Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4105030Z E           
2025-01-17T11:32:04.4105110Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4105310Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4105520Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4105520Z 
2025-01-17T11:32:04.4105760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4105760Z 
2025-01-17T11:32:04.4105890Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4105890Z 
2025-01-17T11:32:04.4106050Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1335a7f50>
2025-01-17T11:32:04.4106170Z plasma = <tardis.plasma.base.BasePlasma object at 0x15d6b1100>
2025-01-17T11:32:04.4106220Z attr = 'beta_sobolev'
2025-01-17T11:32:04.4106220Z 
2025-01-17T11:32:04.4106320Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4106400Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4106460Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4106500Z         try:
2025-01-17T11:32:04.4106610Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4106660Z         except KeyError:
2025-01-17T11:32:04.4106760Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4106800Z     
2025-01-17T11:32:04.4106860Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4106920Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4106980Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4107080Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4107130Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4107200Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4107280Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4107320Z             else:
2025-01-17T11:32:04.4107390Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4107470Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4107480Z 
2025-01-17T11:32:04.4107580Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4107670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4107780Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4107820Z     ???
2025-01-17T11:32:04.4107910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4107910Z 
2025-01-17T11:32:04.4107960Z >   ???
2025-01-17T11:32:04.4108050Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4108090Z E   
2025-01-17T11:32:04.4108190Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4108270Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4108310Z E          ...
2025-01-17T11:32:04.4108380Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4108470Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4108600Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4108650Z E          ...
2025-01-17T11:32:04.4108710Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4108810Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4108930Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4108930Z 
2025-01-17T11:32:04.4108990Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4109150Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-j_blues] ___
2025-01-17T11:32:04.4109160Z 
2025-01-17T11:32:04.4109260Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4109360Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4109430Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4109530Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4109640Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4109710Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4109750Z err_msg = None
2025-01-17T11:32:04.4109760Z 
2025-01-17T11:32:04.4109840Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4109890Z         if err_msg is None:
2025-01-17T11:32:04.4109950Z             if left.shape != right.shape:
2025-01-17T11:32:04.4110010Z                 raise_assert_detail(
2025-01-17T11:32:04.4110120Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4110160Z                 )
2025-01-17T11:32:04.4110200Z     
2025-01-17T11:32:04.4110250Z             diff = 0
2025-01-17T11:32:04.4110330Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4110390Z                 # count up differences
2025-01-17T11:32:04.4110520Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4110580Z                     diff += 1
2025-01-17T11:32:04.4110620Z     
2025-01-17T11:32:04.4110680Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4110780Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4110920Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4111000Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4111050Z E           
2025-01-17T11:32:04.4111130Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4111340Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4111550Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4111560Z 
2025-01-17T11:32:04.4111800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4111800Z 
2025-01-17T11:32:04.4111930Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4111930Z 
2025-01-17T11:32:04.4112100Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133624110>
2025-01-17T11:32:04.4112260Z plasma = <tardis.plasma.base.BasePlasma object at 0x15d6b1100>, attr = 'j_blues'
2025-01-17T11:32:04.4112260Z 
2025-01-17T11:32:04.4112360Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4112660Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4112720Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4112760Z         try:
2025-01-17T11:32:04.4112870Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4112970Z         except KeyError:
2025-01-17T11:32:04.4113080Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4113120Z     
2025-01-17T11:32:04.4113180Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4113240Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4113300Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4113410Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4113460Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4113530Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4113610Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4113660Z             else:
2025-01-17T11:32:04.4113720Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4113800Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4113800Z 
2025-01-17T11:32:04.4113890Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4113970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4114080Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4114120Z     ???
2025-01-17T11:32:04.4114200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4114200Z 
2025-01-17T11:32:04.4114250Z >   ???
2025-01-17T11:32:04.4114340Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4114380Z E   
2025-01-17T11:32:04.4114470Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4114550Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4114590Z E          ...
2025-01-17T11:32:04.4114650Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4114750Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4114830Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4114870Z E          ...
2025-01-17T11:32:04.4114930Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4115030Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4115100Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4115100Z 
2025-01-17T11:32:04.4115160Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4115310Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines] ____
2025-01-17T11:32:04.4115320Z 
2025-01-17T11:32:04.4115410Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4115510Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4115580Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4115680Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4115780Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4115850Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4115900Z err_msg = None
2025-01-17T11:32:04.4115900Z 
2025-01-17T11:32:04.4115970Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4116020Z         if err_msg is None:
2025-01-17T11:32:04.4116090Z             if left.shape != right.shape:
2025-01-17T11:32:04.4116140Z                 raise_assert_detail(
2025-01-17T11:32:04.4116250Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4116290Z                 )
2025-01-17T11:32:04.4116330Z     
2025-01-17T11:32:04.4116420Z             diff = 0
2025-01-17T11:32:04.4116500Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4116560Z                 # count up differences
2025-01-17T11:32:04.4116680Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4116850Z                     diff += 1
2025-01-17T11:32:04.4116890Z     
2025-01-17T11:32:04.4116950Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4117050Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4117180Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4117260Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4117300Z E           
2025-01-17T11:32:04.4117380Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4117580Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4117780Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4117790Z 
2025-01-17T11:32:04.4118020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4118020Z 
2025-01-17T11:32:04.4118150Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4118150Z 
2025-01-17T11:32:04.4118310Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133624e90>
2025-01-17T11:32:04.4118460Z plasma = <tardis.plasma.base.BasePlasma object at 0x322583620>, attr = 'lines'
2025-01-17T11:32:04.4118470Z 
2025-01-17T11:32:04.4118570Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4118650Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4118700Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4118750Z         try:
2025-01-17T11:32:04.4118850Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4118900Z         except KeyError:
2025-01-17T11:32:04.4119000Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4119040Z     
2025-01-17T11:32:04.4119100Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4119160Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4119220Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4119320Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4119390Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4119470Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4119540Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4119590Z             else:
2025-01-17T11:32:04.4119650Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4119730Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4119730Z 
2025-01-17T11:32:04.4119820Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4119900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4120010Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4120050Z     ???
2025-01-17T11:32:04.4120130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4120140Z 
2025-01-17T11:32:04.4120180Z >   ???
2025-01-17T11:32:04.4120270Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4120390Z E   
2025-01-17T11:32:04.4120490Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4120570Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4120610Z E          ...
2025-01-17T11:32:04.4120670Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4120820Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4120900Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4120940Z E          ...
2025-01-17T11:32:04.4121000Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4121090Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4121170Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4121170Z 
2025-01-17T11:32:04.4121220Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4121420Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] _
2025-01-17T11:32:04.4121430Z 
2025-01-17T11:32:04.4121590Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133624f50>
2025-01-17T11:32:04.4121710Z plasma = <tardis.plasma.base.BasePlasma object at 0x322583620>
2025-01-17T11:32:04.4121760Z attr = 'lines_lower_level_index'
2025-01-17T11:32:04.4121770Z 
2025-01-17T11:32:04.4121870Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4121950Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4122000Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4122040Z         try:
2025-01-17T11:32:04.4122150Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4122200Z         except KeyError:
2025-01-17T11:32:04.4122300Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4122340Z     
2025-01-17T11:32:04.4122390Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4122460Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4122520Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4122620Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4122670Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4122730Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4122810Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4122810Z 
2025-01-17T11:32:04.4122900Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4122980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4122990Z 
2025-01-17T11:32:04.4123090Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.4123150Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.4123230Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4123280Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.4123380Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.4123440Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.4123520Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4123570Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.4123620Z err_msg = None
2025-01-17T11:32:04.4123620Z 
2025-01-17T11:32:04.4123700Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4123750Z         if err_msg is None:
2025-01-17T11:32:04.4123810Z             if left.shape != right.shape:
2025-01-17T11:32:04.4123860Z                 raise_assert_detail(
2025-01-17T11:32:04.4123970Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4124010Z                 )
2025-01-17T11:32:04.4124050Z     
2025-01-17T11:32:04.4124100Z             diff = 0
2025-01-17T11:32:04.4124180Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4124270Z                 # count up differences
2025-01-17T11:32:04.4124400Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4124450Z                     diff += 1
2025-01-17T11:32:04.4124490Z     
2025-01-17T11:32:04.4124550Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4124690Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4124810Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4124890Z E           AssertionError: Series are different
2025-01-17T11:32:04.4124930Z E           
2025-01-17T11:32:04.4125000Z E           Series values are different (4.04858 %)
2025-01-17T11:32:04.4125290Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4125550Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4125810Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4125820Z 
2025-01-17T11:32:04.4126050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4126250Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] _
2025-01-17T11:32:04.4126250Z 
2025-01-17T11:32:04.4126410Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133625010>
2025-01-17T11:32:04.4126530Z plasma = <tardis.plasma.base.BasePlasma object at 0x322583620>
2025-01-17T11:32:04.4126590Z attr = 'lines_upper_level_index'
2025-01-17T11:32:04.4126590Z 
2025-01-17T11:32:04.4126690Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4126770Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4126820Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4126870Z         try:
2025-01-17T11:32:04.4126970Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4127020Z         except KeyError:
2025-01-17T11:32:04.4127120Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4127170Z     
2025-01-17T11:32:04.4127220Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4127290Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4127340Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4127440Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4127500Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4127560Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4127640Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4127640Z 
2025-01-17T11:32:04.4127730Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4127810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4127810Z 
2025-01-17T11:32:04.4127920Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.4127970Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.4128180Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.4128230Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.4128340Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.4128430Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.4128510Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.4128560Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.4128610Z err_msg = None
2025-01-17T11:32:04.4128610Z 
2025-01-17T11:32:04.4128690Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4128740Z         if err_msg is None:
2025-01-17T11:32:04.4128800Z             if left.shape != right.shape:
2025-01-17T11:32:04.4128850Z                 raise_assert_detail(
2025-01-17T11:32:04.4128960Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4129010Z                 )
2025-01-17T11:32:04.4129050Z     
2025-01-17T11:32:04.4129100Z             diff = 0
2025-01-17T11:32:04.4129180Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4129240Z                 # count up differences
2025-01-17T11:32:04.4129370Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4129430Z                     diff += 1
2025-01-17T11:32:04.4129470Z     
2025-01-17T11:32:04.4129530Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4129640Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4129770Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4129840Z E           AssertionError: Series are different
2025-01-17T11:32:04.4129890Z E           
2025-01-17T11:32:04.4129960Z E           Series values are different (6.47773 %)
2025-01-17T11:32:04.4130260Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4130570Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.4130870Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.4130880Z 
2025-01-17T11:32:04.4131120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4131280Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-nu] _____
2025-01-17T11:32:04.4131280Z 
2025-01-17T11:32:04.4131380Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4131480Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4131560Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4131660Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4131810Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4131880Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4131930Z err_msg = None
2025-01-17T11:32:04.4131930Z 
2025-01-17T11:32:04.4132180Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4132240Z         if err_msg is None:
2025-01-17T11:32:04.4132300Z             if left.shape != right.shape:
2025-01-17T11:32:04.4132360Z                 raise_assert_detail(
2025-01-17T11:32:04.4132470Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4132510Z                 )
2025-01-17T11:32:04.4132550Z     
2025-01-17T11:32:04.4132600Z             diff = 0
2025-01-17T11:32:04.4132680Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4132810Z                 # count up differences
2025-01-17T11:32:04.4132940Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4133000Z                     diff += 1
2025-01-17T11:32:04.4133040Z     
2025-01-17T11:32:04.4133100Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4133200Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4133340Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4133420Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4133460Z E           
2025-01-17T11:32:04.4133550Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4133750Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4133970Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4133970Z 
2025-01-17T11:32:04.4134210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4134210Z 
2025-01-17T11:32:04.4134340Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4134340Z 
2025-01-17T11:32:04.4134510Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133625250>
2025-01-17T11:32:04.4134660Z plasma = <tardis.plasma.base.BasePlasma object at 0x322583620>, attr = 'nu'
2025-01-17T11:32:04.4134660Z 
2025-01-17T11:32:04.4134760Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4134850Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4134910Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4134950Z         try:
2025-01-17T11:32:04.4135060Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4135110Z         except KeyError:
2025-01-17T11:32:04.4135220Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4135260Z     
2025-01-17T11:32:04.4135320Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4135380Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4135440Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4135540Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4135590Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4135650Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4135730Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4135740Z 
2025-01-17T11:32:04.4135870Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4135960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4136070Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4136110Z     ???
2025-01-17T11:32:04.4136190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4136230Z 
2025-01-17T11:32:04.4136280Z >   ???
2025-01-17T11:32:04.4136370Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4136410Z E   
2025-01-17T11:32:04.4136500Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4136580Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4136630Z E          ...
2025-01-17T11:32:04.4136690Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4136780Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4136860Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4136910Z E          ...
2025-01-17T11:32:04.4136970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4137060Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4137130Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4137140Z 
2025-01-17T11:32:04.4137190Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4137370Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] _
2025-01-17T11:32:04.4137370Z 
2025-01-17T11:32:04.4137460Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4137560Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4137630Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4137730Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4137830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4137900Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4137940Z err_msg = None
2025-01-17T11:32:04.4137950Z 
2025-01-17T11:32:04.4138020Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4138070Z         if err_msg is None:
2025-01-17T11:32:04.4138140Z             if left.shape != right.shape:
2025-01-17T11:32:04.4138190Z                 raise_assert_detail(
2025-01-17T11:32:04.4138300Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4138340Z                 )
2025-01-17T11:32:04.4138380Z     
2025-01-17T11:32:04.4138420Z             diff = 0
2025-01-17T11:32:04.4138500Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4138560Z                 # count up differences
2025-01-17T11:32:04.4138690Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4138740Z                     diff += 1
2025-01-17T11:32:04.4138780Z     
2025-01-17T11:32:04.4138840Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4138940Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4139070Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4139150Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4139190Z E           
2025-01-17T11:32:04.4139270Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4139470Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4139710Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4139750Z 
2025-01-17T11:32:04.4139980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4139980Z 
2025-01-17T11:32:04.4140110Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4140110Z 
2025-01-17T11:32:04.4140270Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133625310>
2025-01-17T11:32:04.4140390Z plasma = <tardis.plasma.base.BasePlasma object at 0x322583620>
2025-01-17T11:32:04.4140440Z attr = 'wavelength_cm'
2025-01-17T11:32:04.4140440Z 
2025-01-17T11:32:04.4140540Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4140630Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4140680Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4140720Z         try:
2025-01-17T11:32:04.4140830Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4140880Z         except KeyError:
2025-01-17T11:32:04.4140980Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4141020Z     
2025-01-17T11:32:04.4141080Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4141140Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4141200Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4141300Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4141350Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4141410Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4141490Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4141500Z 
2025-01-17T11:32:04.4141580Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4141670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4141770Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4141810Z     ???
2025-01-17T11:32:04.4141900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4141900Z 
2025-01-17T11:32:04.4141940Z >   ???
2025-01-17T11:32:04.4142040Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4142070Z E   
2025-01-17T11:32:04.4142170Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4142250Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4142290Z E          ...
2025-01-17T11:32:04.4142350Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4142440Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4142520Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4142570Z E          ...
2025-01-17T11:32:04.4142630Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4142720Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4142790Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4142800Z 
2025-01-17T11:32:04.4142850Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4143010Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-f_lu] ____
2025-01-17T11:32:04.4143010Z 
2025-01-17T11:32:04.4143110Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4143210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4143280Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4143380Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4143670Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4143740Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4143790Z err_msg = None
2025-01-17T11:32:04.4143790Z 
2025-01-17T11:32:04.4143910Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4143960Z         if err_msg is None:
2025-01-17T11:32:04.4144030Z             if left.shape != right.shape:
2025-01-17T11:32:04.4144080Z                 raise_assert_detail(
2025-01-17T11:32:04.4144190Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4144230Z                 )
2025-01-17T11:32:04.4144270Z     
2025-01-17T11:32:04.4144320Z             diff = 0
2025-01-17T11:32:04.4144400Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4144450Z                 # count up differences
2025-01-17T11:32:04.4144580Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4144630Z                     diff += 1
2025-01-17T11:32:04.4144670Z     
2025-01-17T11:32:04.4144730Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4144830Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4144960Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4145040Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4145080Z E           
2025-01-17T11:32:04.4145160Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4145360Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4145570Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4145580Z 
2025-01-17T11:32:04.4145800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4145810Z 
2025-01-17T11:32:04.4145930Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4145940Z 
2025-01-17T11:32:04.4146090Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336253d0>
2025-01-17T11:32:04.4146240Z plasma = <tardis.plasma.base.BasePlasma object at 0x322583620>, attr = 'f_lu'
2025-01-17T11:32:04.4146250Z 
2025-01-17T11:32:04.4146340Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4146430Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4146480Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4146530Z         try:
2025-01-17T11:32:04.4146630Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4146680Z         except KeyError:
2025-01-17T11:32:04.4146780Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4146820Z     
2025-01-17T11:32:04.4146880Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4146940Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4147000Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4147100Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4147150Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4147210Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4147290Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4147290Z 
2025-01-17T11:32:04.4147420Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4147510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4147610Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4147660Z     ???
2025-01-17T11:32:04.4147740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4147800Z 
2025-01-17T11:32:04.4147850Z >   ???
2025-01-17T11:32:04.4147950Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4147990Z E   
2025-01-17T11:32:04.4148240Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4148370Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4149030Z E          ...
2025-01-17T11:32:04.4149110Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4153510Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4153610Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4153660Z E          ...
2025-01-17T11:32:04.4153720Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4153820Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4153890Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4153900Z 
2025-01-17T11:32:04.4153960Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4154130Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] _
2025-01-17T11:32:04.4154140Z 
2025-01-17T11:32:04.4154240Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4154340Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4154410Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4154520Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4154620Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4154690Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4154740Z err_msg = None
2025-01-17T11:32:04.4154740Z 
2025-01-17T11:32:04.4154820Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4154880Z         if err_msg is None:
2025-01-17T11:32:04.4154950Z             if left.shape != right.shape:
2025-01-17T11:32:04.4155000Z                 raise_assert_detail(
2025-01-17T11:32:04.4155110Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4155160Z                 )
2025-01-17T11:32:04.4155200Z     
2025-01-17T11:32:04.4155250Z             diff = 0
2025-01-17T11:32:04.4155330Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4155390Z                 # count up differences
2025-01-17T11:32:04.4155520Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4155570Z                     diff += 1
2025-01-17T11:32:04.4155620Z     
2025-01-17T11:32:04.4155680Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4155780Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4155920Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4156000Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4156050Z E           
2025-01-17T11:32:04.4156130Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4156340Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4156670Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4156730Z 
2025-01-17T11:32:04.4156970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4156970Z 
2025-01-17T11:32:04.4157100Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4157110Z 
2025-01-17T11:32:04.4157270Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133625b50>
2025-01-17T11:32:04.4157390Z plasma = <tardis.plasma.base.BasePlasma object at 0x322583620>
2025-01-17T11:32:04.4157440Z attr = 'tau_sobolevs'
2025-01-17T11:32:04.4157450Z 
2025-01-17T11:32:04.4157550Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4157640Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4157700Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4157740Z         try:
2025-01-17T11:32:04.4157850Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4157900Z         except KeyError:
2025-01-17T11:32:04.4158010Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4158050Z     
2025-01-17T11:32:04.4158110Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4158170Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4158230Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4158330Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4158390Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4158460Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4158540Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4158590Z             else:
2025-01-17T11:32:04.4158650Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4158730Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4158740Z 
2025-01-17T11:32:04.4158830Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4158910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4159030Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4159070Z     ???
2025-01-17T11:32:04.4159160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4159160Z 
2025-01-17T11:32:04.4159200Z >   ???
2025-01-17T11:32:04.4159300Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4159350Z E   
2025-01-17T11:32:04.4159440Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4159520Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4159570Z E          ...
2025-01-17T11:32:04.4159630Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4159720Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4159800Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4159840Z E          ...
2025-01-17T11:32:04.4159910Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4160000Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4160070Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4160070Z 
2025-01-17T11:32:04.4160130Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4160300Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] _
2025-01-17T11:32:04.4160300Z 
2025-01-17T11:32:04.4160400Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4160490Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4160600Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4160700Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4160800Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4160910Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4160950Z err_msg = None
2025-01-17T11:32:04.4160960Z 
2025-01-17T11:32:04.4161030Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4161080Z         if err_msg is None:
2025-01-17T11:32:04.4161150Z             if left.shape != right.shape:
2025-01-17T11:32:04.4161200Z                 raise_assert_detail(
2025-01-17T11:32:04.4161310Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4161350Z                 )
2025-01-17T11:32:04.4161390Z     
2025-01-17T11:32:04.4161440Z             diff = 0
2025-01-17T11:32:04.4161520Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4161580Z                 # count up differences
2025-01-17T11:32:04.4161700Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4161750Z                     diff += 1
2025-01-17T11:32:04.4161800Z     
2025-01-17T11:32:04.4161860Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4161960Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4162090Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4162170Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4162210Z E           
2025-01-17T11:32:04.4162290Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4162490Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4162690Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4162700Z 
2025-01-17T11:32:04.4162930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4162930Z 
2025-01-17T11:32:04.4163060Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4163060Z 
2025-01-17T11:32:04.4163220Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133625c10>
2025-01-17T11:32:04.4163340Z plasma = <tardis.plasma.base.BasePlasma object at 0x322583620>
2025-01-17T11:32:04.4163390Z attr = 'beta_sobolev'
2025-01-17T11:32:04.4163390Z 
2025-01-17T11:32:04.4163490Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4163570Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4163630Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4163670Z         try:
2025-01-17T11:32:04.4163770Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4163820Z         except KeyError:
2025-01-17T11:32:04.4163920Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4163970Z     
2025-01-17T11:32:04.4164020Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4164090Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4164140Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4164240Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4164530Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4164590Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4164670Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4164710Z             else:
2025-01-17T11:32:04.4164770Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4164890Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4164890Z 
2025-01-17T11:32:04.4164980Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4165060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4165170Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4165210Z     ???
2025-01-17T11:32:04.4165290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4165300Z 
2025-01-17T11:32:04.4165340Z >   ???
2025-01-17T11:32:04.4165430Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4165480Z E   
2025-01-17T11:32:04.4165570Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4165650Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4165690Z E          ...
2025-01-17T11:32:04.4165750Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4165850Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4165930Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4165970Z E          ...
2025-01-17T11:32:04.4166030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4166120Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4166200Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4166200Z 
2025-01-17T11:32:04.4166250Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4166420Z __ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-j_blues] ___
2025-01-17T11:32:04.4166420Z 
2025-01-17T11:32:04.4166520Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4166630Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4166700Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4166800Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4166900Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4166980Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4167020Z err_msg = None
2025-01-17T11:32:04.4167020Z 
2025-01-17T11:32:04.4167100Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4167160Z         if err_msg is None:
2025-01-17T11:32:04.4167220Z             if left.shape != right.shape:
2025-01-17T11:32:04.4167280Z                 raise_assert_detail(
2025-01-17T11:32:04.4167390Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4167430Z                 )
2025-01-17T11:32:04.4167470Z     
2025-01-17T11:32:04.4167520Z             diff = 0
2025-01-17T11:32:04.4167600Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4167660Z                 # count up differences
2025-01-17T11:32:04.4167800Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4167850Z                     diff += 1
2025-01-17T11:32:04.4167890Z     
2025-01-17T11:32:04.4167950Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4168050Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4168190Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4168270Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4168320Z E           
2025-01-17T11:32:04.4168450Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4168650Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4168920Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4168930Z 
2025-01-17T11:32:04.4169170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4169170Z 
2025-01-17T11:32:04.4169300Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4169310Z 
2025-01-17T11:32:04.4169470Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133625d90>
2025-01-17T11:32:04.4169630Z plasma = <tardis.plasma.base.BasePlasma object at 0x322583620>, attr = 'j_blues'
2025-01-17T11:32:04.4169640Z 
2025-01-17T11:32:04.4169740Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4169820Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4169880Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4169920Z         try:
2025-01-17T11:32:04.4170030Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4170080Z         except KeyError:
2025-01-17T11:32:04.4170190Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4170230Z     
2025-01-17T11:32:04.4170290Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4170350Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4170420Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4170520Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4170580Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4170640Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4170740Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4170790Z             else:
2025-01-17T11:32:04.4170860Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4170940Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4170940Z 
2025-01-17T11:32:04.4171030Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4171120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4171230Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4171270Z     ???
2025-01-17T11:32:04.4171360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4171360Z 
2025-01-17T11:32:04.4171410Z >   ???
2025-01-17T11:32:04.4171500Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4171540Z E   
2025-01-17T11:32:04.4171640Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4171720Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4171770Z E          ...
2025-01-17T11:32:04.4171830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4171930Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4172010Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4172050Z E          ...
2025-01-17T11:32:04.4172120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4172210Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4172290Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4172370Z 
2025-01-17T11:32:04.4172430Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4172600Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] _
2025-01-17T11:32:04.4172610Z 
2025-01-17T11:32:04.4172710Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4172850Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4172920Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4173020Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4173120Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4173190Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4173230Z err_msg = None
2025-01-17T11:32:04.4173240Z 
2025-01-17T11:32:04.4173310Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4173360Z         if err_msg is None:
2025-01-17T11:32:04.4173430Z             if left.shape != right.shape:
2025-01-17T11:32:04.4173480Z                 raise_assert_detail(
2025-01-17T11:32:04.4173590Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4173630Z                 )
2025-01-17T11:32:04.4173670Z     
2025-01-17T11:32:04.4173720Z             diff = 0
2025-01-17T11:32:04.4173790Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4173850Z                 # count up differences
2025-01-17T11:32:04.4173980Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4174030Z                     diff += 1
2025-01-17T11:32:04.4174070Z     
2025-01-17T11:32:04.4174130Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4174230Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4174360Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4174440Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4174480Z E           
2025-01-17T11:32:04.4174560Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4174760Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4174960Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4174970Z 
2025-01-17T11:32:04.4175200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4175200Z 
2025-01-17T11:32:04.4175330Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4175330Z 
2025-01-17T11:32:04.4175490Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133626b10>
2025-01-17T11:32:04.4175640Z plasma = <tardis.plasma.base.BasePlasma object at 0x163b0f980>, attr = 'lines'
2025-01-17T11:32:04.4175650Z 
2025-01-17T11:32:04.4175750Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4175830Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4175880Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4175920Z         try:
2025-01-17T11:32:04.4176020Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4176070Z         except KeyError:
2025-01-17T11:32:04.4176180Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4176250Z     
2025-01-17T11:32:04.4176310Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4176370Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4176430Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4176530Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4176630Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4176690Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4176770Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4176810Z             else:
2025-01-17T11:32:04.4176870Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4176950Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4176960Z 
2025-01-17T11:32:04.4177040Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4177130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4177240Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4177280Z     ???
2025-01-17T11:32:04.4177360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4177360Z 
2025-01-17T11:32:04.4177400Z >   ???
2025-01-17T11:32:04.4177490Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4177540Z E   
2025-01-17T11:32:04.4177630Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4177710Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4177750Z E          ...
2025-01-17T11:32:04.4177810Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4177900Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4177990Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4178030Z E          ...
2025-01-17T11:32:04.4178090Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4178180Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4178250Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4178260Z 
2025-01-17T11:32:04.4178310Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4178530Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] _
2025-01-17T11:32:04.4178530Z 
2025-01-17T11:32:04.4178700Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133626bd0>
2025-01-17T11:32:04.4178810Z plasma = <tardis.plasma.base.BasePlasma object at 0x163b0f980>
2025-01-17T11:32:04.4178870Z attr = 'lines_lower_level_index'
2025-01-17T11:32:04.4178870Z 
2025-01-17T11:32:04.4178970Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4179050Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4179110Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4179150Z         try:
2025-01-17T11:32:04.4179260Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4179310Z         except KeyError:
2025-01-17T11:32:04.4179410Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4179450Z     
2025-01-17T11:32:04.4179500Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4179570Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4179630Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4179730Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4179780Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4179840Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4179920Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4179920Z 
2025-01-17T11:32:04.4180010Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4180090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4180270Z 
2025-01-17T11:32:04.4180380Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.4180440Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.4180520Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4180570Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.4180710Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.4180770Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.4180850Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4180900Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.4180950Z err_msg = None
2025-01-17T11:32:04.4180950Z 
2025-01-17T11:32:04.4181030Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4181070Z         if err_msg is None:
2025-01-17T11:32:04.4181140Z             if left.shape != right.shape:
2025-01-17T11:32:04.4181200Z                 raise_assert_detail(
2025-01-17T11:32:04.4181300Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4181340Z                 )
2025-01-17T11:32:04.4181390Z     
2025-01-17T11:32:04.4181430Z             diff = 0
2025-01-17T11:32:04.4181510Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4181570Z                 # count up differences
2025-01-17T11:32:04.4181700Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4181740Z                     diff += 1
2025-01-17T11:32:04.4181780Z     
2025-01-17T11:32:04.4181840Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4181940Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4182070Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4182140Z E           AssertionError: Series are different
2025-01-17T11:32:04.4182190Z E           
2025-01-17T11:32:04.4182260Z E           Series values are different (4.04858 %)
2025-01-17T11:32:04.4182550Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4182810Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4183070Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4183080Z 
2025-01-17T11:32:04.4183310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4183520Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] _
2025-01-17T11:32:04.4183530Z 
2025-01-17T11:32:04.4183690Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133626c90>
2025-01-17T11:32:04.4183810Z plasma = <tardis.plasma.base.BasePlasma object at 0x163b0f980>
2025-01-17T11:32:04.4183870Z attr = 'lines_upper_level_index'
2025-01-17T11:32:04.4183870Z 
2025-01-17T11:32:04.4183970Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4184090Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4184140Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4184190Z         try:
2025-01-17T11:32:04.4184290Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4184400Z         except KeyError:
2025-01-17T11:32:04.4184500Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4184540Z     
2025-01-17T11:32:04.4184600Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4184660Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4184720Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4184820Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4184870Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4184930Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4185020Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4185030Z 
2025-01-17T11:32:04.4185130Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4185210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4185210Z 
2025-01-17T11:32:04.4185310Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.4185370Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.4185460Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.4185510Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.4185620Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.4185670Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.4185760Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.4185810Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.4185860Z err_msg = None
2025-01-17T11:32:04.4185870Z 
2025-01-17T11:32:04.4185950Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4186000Z         if err_msg is None:
2025-01-17T11:32:04.4186060Z             if left.shape != right.shape:
2025-01-17T11:32:04.4186120Z                 raise_assert_detail(
2025-01-17T11:32:04.4186230Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4186280Z                 )
2025-01-17T11:32:04.4186320Z     
2025-01-17T11:32:04.4186360Z             diff = 0
2025-01-17T11:32:04.4186450Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4186500Z                 # count up differences
2025-01-17T11:32:04.4186640Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4186690Z                     diff += 1
2025-01-17T11:32:04.4186730Z     
2025-01-17T11:32:04.4186790Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4186890Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4187030Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4187110Z E           AssertionError: Series are different
2025-01-17T11:32:04.4187150Z E           
2025-01-17T11:32:04.4187220Z E           Series values are different (6.47773 %)
2025-01-17T11:32:04.4187520Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4187820Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.4188210Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.4188260Z 
2025-01-17T11:32:04.4188500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4188670Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] __
2025-01-17T11:32:04.4188670Z 
2025-01-17T11:32:04.4188780Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4188880Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4188950Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4189060Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4189150Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4189230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4189270Z err_msg = None
2025-01-17T11:32:04.4189280Z 
2025-01-17T11:32:04.4189350Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4189410Z         if err_msg is None:
2025-01-17T11:32:04.4189470Z             if left.shape != right.shape:
2025-01-17T11:32:04.4189530Z                 raise_assert_detail(
2025-01-17T11:32:04.4189640Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4189690Z                 )
2025-01-17T11:32:04.4189730Z     
2025-01-17T11:32:04.4189770Z             diff = 0
2025-01-17T11:32:04.4189850Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4189910Z                 # count up differences
2025-01-17T11:32:04.4190050Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4190100Z                     diff += 1
2025-01-17T11:32:04.4190140Z     
2025-01-17T11:32:04.4190200Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4190310Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4190440Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4190520Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4190560Z E           
2025-01-17T11:32:04.4190650Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4190860Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4191070Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4191070Z 
2025-01-17T11:32:04.4191310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4191310Z 
2025-01-17T11:32:04.4191440Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4191480Z 
2025-01-17T11:32:04.4191650Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133626ed0>
2025-01-17T11:32:04.4191800Z plasma = <tardis.plasma.base.BasePlasma object at 0x163b0f980>, attr = 'nu'
2025-01-17T11:32:04.4191800Z 
2025-01-17T11:32:04.4191940Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4192030Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4192080Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4192120Z         try:
2025-01-17T11:32:04.4192230Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4192280Z         except KeyError:
2025-01-17T11:32:04.4192380Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4192420Z     
2025-01-17T11:32:04.4192480Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4192540Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4192600Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4192700Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4192760Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4192820Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4192900Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4192900Z 
2025-01-17T11:32:04.4192990Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4193070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4193180Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4193220Z     ???
2025-01-17T11:32:04.4193310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4193310Z 
2025-01-17T11:32:04.4193350Z >   ???
2025-01-17T11:32:04.4193440Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4193480Z E   
2025-01-17T11:32:04.4193580Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4193660Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4193700Z E          ...
2025-01-17T11:32:04.4193760Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4193850Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4193930Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4193980Z E          ...
2025-01-17T11:32:04.4194040Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4194130Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4194200Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4194200Z 
2025-01-17T11:32:04.4194260Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4194450Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] _
2025-01-17T11:32:04.4194450Z 
2025-01-17T11:32:04.4194550Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4194650Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4194720Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4194820Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4194920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4194990Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4195030Z err_msg = None
2025-01-17T11:32:04.4195030Z 
2025-01-17T11:32:04.4195110Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4195160Z         if err_msg is None:
2025-01-17T11:32:04.4195220Z             if left.shape != right.shape:
2025-01-17T11:32:04.4195280Z                 raise_assert_detail(
2025-01-17T11:32:04.4195380Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4195480Z                 )
2025-01-17T11:32:04.4195530Z     
2025-01-17T11:32:04.4195570Z             diff = 0
2025-01-17T11:32:04.4195650Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4195710Z                 # count up differences
2025-01-17T11:32:04.4195870Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4195920Z                     diff += 1
2025-01-17T11:32:04.4195960Z     
2025-01-17T11:32:04.4196020Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4196120Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4196250Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4196330Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4196370Z E           
2025-01-17T11:32:04.4196450Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4196650Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4196860Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4196860Z 
2025-01-17T11:32:04.4197090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4197090Z 
2025-01-17T11:32:04.4197220Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4197230Z 
2025-01-17T11:32:04.4197390Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133626f90>
2025-01-17T11:32:04.4197510Z plasma = <tardis.plasma.base.BasePlasma object at 0x163b0f980>
2025-01-17T11:32:04.4197640Z attr = 'wavelength_cm'
2025-01-17T11:32:04.4197650Z 
2025-01-17T11:32:04.4197760Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4197840Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4198010Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4198070Z         try:
2025-01-17T11:32:04.4198190Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4198240Z         except KeyError:
2025-01-17T11:32:04.4198350Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4198400Z     
2025-01-17T11:32:04.4202630Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4202720Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4202780Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4202890Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4202940Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4203000Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4203090Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4203090Z 
2025-01-17T11:32:04.4203180Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4203270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4203370Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4203410Z     ???
2025-01-17T11:32:04.4203500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4203500Z 
2025-01-17T11:32:04.4203540Z >   ???
2025-01-17T11:32:04.4203630Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4203770Z E   
2025-01-17T11:32:04.4203870Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4203960Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4204000Z E          ...
2025-01-17T11:32:04.4204060Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4204330Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4204410Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4204460Z E          ...
2025-01-17T11:32:04.4204520Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4204620Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4204690Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4204690Z 
2025-01-17T11:32:04.4204760Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4204930Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] _
2025-01-17T11:32:04.4204930Z 
2025-01-17T11:32:04.4205030Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4205140Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4205210Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4205310Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4205420Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4205490Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4205530Z err_msg = None
2025-01-17T11:32:04.4205540Z 
2025-01-17T11:32:04.4205610Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4205670Z         if err_msg is None:
2025-01-17T11:32:04.4205730Z             if left.shape != right.shape:
2025-01-17T11:32:04.4205790Z                 raise_assert_detail(
2025-01-17T11:32:04.4205910Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4205950Z                 )
2025-01-17T11:32:04.4205990Z     
2025-01-17T11:32:04.4206040Z             diff = 0
2025-01-17T11:32:04.4206120Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4206180Z                 # count up differences
2025-01-17T11:32:04.4206320Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4206370Z                     diff += 1
2025-01-17T11:32:04.4206410Z     
2025-01-17T11:32:04.4206470Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4206580Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4206710Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4206800Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4206840Z E           
2025-01-17T11:32:04.4206930Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4207130Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4207350Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4207350Z 
2025-01-17T11:32:04.4207590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4207590Z 
2025-01-17T11:32:04.4207720Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4207770Z 
2025-01-17T11:32:04.4207940Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133627050>
2025-01-17T11:32:04.4208090Z plasma = <tardis.plasma.base.BasePlasma object at 0x163b0f980>, attr = 'f_lu'
2025-01-17T11:32:04.4208100Z 
2025-01-17T11:32:04.4208240Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4208330Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4208390Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4208430Z         try:
2025-01-17T11:32:04.4208540Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4208590Z         except KeyError:
2025-01-17T11:32:04.4208690Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4208740Z     
2025-01-17T11:32:04.4208790Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4208860Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4208920Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4209030Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4209080Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4209150Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4209230Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4209230Z 
2025-01-17T11:32:04.4209330Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4209410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4209520Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4209570Z     ???
2025-01-17T11:32:04.4209650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4209660Z 
2025-01-17T11:32:04.4209700Z >   ???
2025-01-17T11:32:04.4209790Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4209830Z E   
2025-01-17T11:32:04.4209930Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4210010Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4210050Z E          ...
2025-01-17T11:32:04.4210120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4210210Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4210290Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4210340Z E          ...
2025-01-17T11:32:04.4210400Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4210490Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4210560Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4210560Z 
2025-01-17T11:32:04.4210620Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4210810Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] _
2025-01-17T11:32:04.4210810Z 
2025-01-17T11:32:04.4210910Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4211010Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4211080Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4211190Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4211280Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4211360Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4211400Z err_msg = None
2025-01-17T11:32:04.4211410Z 
2025-01-17T11:32:04.4211490Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4211540Z         if err_msg is None:
2025-01-17T11:32:04.4211600Z             if left.shape != right.shape:
2025-01-17T11:32:04.4211660Z                 raise_assert_detail(
2025-01-17T11:32:04.4211810Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4211850Z                 )
2025-01-17T11:32:04.4211890Z     
2025-01-17T11:32:04.4211940Z             diff = 0
2025-01-17T11:32:04.4212020Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4212130Z                 # count up differences
2025-01-17T11:32:04.4212260Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4212310Z                     diff += 1
2025-01-17T11:32:04.4212350Z     
2025-01-17T11:32:04.4212410Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4212520Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4212690Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4212770Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4212820Z E           
2025-01-17T11:32:04.4212900Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4213110Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4213320Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4213330Z 
2025-01-17T11:32:04.4213560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4213570Z 
2025-01-17T11:32:04.4213700Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4213700Z 
2025-01-17T11:32:04.4213870Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336277d0>
2025-01-17T11:32:04.4213990Z plasma = <tardis.plasma.base.BasePlasma object at 0x163b0f980>
2025-01-17T11:32:04.4214040Z attr = 'tau_sobolevs'
2025-01-17T11:32:04.4214050Z 
2025-01-17T11:32:04.4214150Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4214240Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4214290Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4214340Z         try:
2025-01-17T11:32:04.4214450Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4214500Z         except KeyError:
2025-01-17T11:32:04.4214610Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4214650Z     
2025-01-17T11:32:04.4214710Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4214770Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4214830Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4214940Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4214990Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4215060Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4215140Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4215190Z             else:
2025-01-17T11:32:04.4215250Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4215340Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4215340Z 
2025-01-17T11:32:04.4215430Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4215510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4215620Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4215670Z     ???
2025-01-17T11:32:04.4215750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4215900Z 
2025-01-17T11:32:04.4215950Z >   ???
2025-01-17T11:32:04.4216040Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4216080Z E   
2025-01-17T11:32:04.4216180Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4216310Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4216350Z E          ...
2025-01-17T11:32:04.4216410Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4216510Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4216590Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4216640Z E          ...
2025-01-17T11:32:04.4216700Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4216800Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4216870Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4216880Z 
2025-01-17T11:32:04.4216930Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4217130Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] _
2025-01-17T11:32:04.4217130Z 
2025-01-17T11:32:04.4217230Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4217330Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4217410Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4217510Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4217610Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4217680Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4217720Z err_msg = None
2025-01-17T11:32:04.4217730Z 
2025-01-17T11:32:04.4217800Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4217860Z         if err_msg is None:
2025-01-17T11:32:04.4217930Z             if left.shape != right.shape:
2025-01-17T11:32:04.4217990Z                 raise_assert_detail(
2025-01-17T11:32:04.4218090Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4218140Z                 )
2025-01-17T11:32:04.4218180Z     
2025-01-17T11:32:04.4218230Z             diff = 0
2025-01-17T11:32:04.4218310Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4218370Z                 # count up differences
2025-01-17T11:32:04.4218500Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4218550Z                     diff += 1
2025-01-17T11:32:04.4218590Z     
2025-01-17T11:32:04.4218660Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4218760Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4218900Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4218980Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4219030Z E           
2025-01-17T11:32:04.4219110Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4219310Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4219520Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4219570Z 
2025-01-17T11:32:04.4219810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4219810Z 
2025-01-17T11:32:04.4219940Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4219950Z 
2025-01-17T11:32:04.4220260Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133627890>
2025-01-17T11:32:04.4220380Z plasma = <tardis.plasma.base.BasePlasma object at 0x163b0f980>
2025-01-17T11:32:04.4220440Z attr = 'beta_sobolev'
2025-01-17T11:32:04.4220440Z 
2025-01-17T11:32:04.4220540Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4220620Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4220680Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4220720Z         try:
2025-01-17T11:32:04.4220830Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4220880Z         except KeyError:
2025-01-17T11:32:04.4220990Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4221030Z     
2025-01-17T11:32:04.4221090Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4221160Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4221220Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4221330Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4221380Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4221450Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4221530Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4221570Z             else:
2025-01-17T11:32:04.4221640Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4221720Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4221720Z 
2025-01-17T11:32:04.4221820Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4221900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4222020Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4222060Z     ???
2025-01-17T11:32:04.4222150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4222150Z 
2025-01-17T11:32:04.4222190Z >   ???
2025-01-17T11:32:04.4222290Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4222330Z E   
2025-01-17T11:32:04.4222430Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4222510Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4222550Z E          ...
2025-01-17T11:32:04.4222620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4222710Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4222800Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4222840Z E          ...
2025-01-17T11:32:04.4222910Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4223000Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4223080Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4223080Z 
2025-01-17T11:32:04.4223140Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4223320Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] _
2025-01-17T11:32:04.4223330Z 
2025-01-17T11:32:04.4223430Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4223550Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4223630Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4223730Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4223830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4223960Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4224010Z err_msg = None
2025-01-17T11:32:04.4224010Z 
2025-01-17T11:32:04.4224090Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4224150Z         if err_msg is None:
2025-01-17T11:32:04.4224260Z             if left.shape != right.shape:
2025-01-17T11:32:04.4224320Z                 raise_assert_detail(
2025-01-17T11:32:04.4224430Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4224480Z                 )
2025-01-17T11:32:04.4224520Z     
2025-01-17T11:32:04.4224570Z             diff = 0
2025-01-17T11:32:04.4224650Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4224710Z                 # count up differences
2025-01-17T11:32:04.4224840Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4224900Z                     diff += 1
2025-01-17T11:32:04.4224950Z     
2025-01-17T11:32:04.4225010Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4225110Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4225250Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4225330Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4225380Z E           
2025-01-17T11:32:04.4225460Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4225670Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4225870Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4225880Z 
2025-01-17T11:32:04.4226110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4226120Z 
2025-01-17T11:32:04.4226250Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4226260Z 
2025-01-17T11:32:04.4226420Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133627a10>
2025-01-17T11:32:04.4226590Z plasma = <tardis.plasma.base.BasePlasma object at 0x163b0f980>, attr = 'j_blues'
2025-01-17T11:32:04.4226590Z 
2025-01-17T11:32:04.4226690Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4226780Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4226830Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4226880Z         try:
2025-01-17T11:32:04.4226990Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4227040Z         except KeyError:
2025-01-17T11:32:04.4227150Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4227190Z     
2025-01-17T11:32:04.4227250Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4227320Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4227380Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4227480Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4227540Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4227600Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4227690Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4227730Z             else:
2025-01-17T11:32:04.4227800Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4227880Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4227920Z 
2025-01-17T11:32:04.4228020Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4228110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4228220Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4228310Z     ???
2025-01-17T11:32:04.4228400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4228400Z 
2025-01-17T11:32:04.4228440Z >   ???
2025-01-17T11:32:04.4228540Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4228580Z E   
2025-01-17T11:32:04.4228670Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4228760Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4228810Z E          ...
2025-01-17T11:32:04.4228870Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4228970Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4229050Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4229100Z E          ...
2025-01-17T11:32:04.4229160Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4229250Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4229330Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4229330Z 
2025-01-17T11:32:04.4229390Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4229550Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines] ____
2025-01-17T11:32:04.4229560Z 
2025-01-17T11:32:04.4229650Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4229760Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4229830Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4229940Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4230040Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4230110Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4230160Z err_msg = None
2025-01-17T11:32:04.4230160Z 
2025-01-17T11:32:04.4230240Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4230300Z         if err_msg is None:
2025-01-17T11:32:04.4230360Z             if left.shape != right.shape:
2025-01-17T11:32:04.4230420Z                 raise_assert_detail(
2025-01-17T11:32:04.4230530Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4230570Z                 )
2025-01-17T11:32:04.4230610Z     
2025-01-17T11:32:04.4230660Z             diff = 0
2025-01-17T11:32:04.4230740Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4230800Z                 # count up differences
2025-01-17T11:32:04.4230930Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4230990Z                     diff += 1
2025-01-17T11:32:04.4231030Z     
2025-01-17T11:32:04.4231090Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4231190Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4231330Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4231410Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4231460Z E           
2025-01-17T11:32:04.4231540Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4231750Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4232350Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4232390Z 
2025-01-17T11:32:04.4232640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4232640Z 
2025-01-17T11:32:04.4232770Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4232770Z 
2025-01-17T11:32:04.4232940Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336587d0>
2025-01-17T11:32:04.4233100Z plasma = <tardis.plasma.base.BasePlasma object at 0x314cb3bc0>, attr = 'lines'
2025-01-17T11:32:04.4233100Z 
2025-01-17T11:32:04.4233200Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4233290Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4233350Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4233400Z         try:
2025-01-17T11:32:04.4233510Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4233560Z         except KeyError:
2025-01-17T11:32:04.4233670Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4233710Z     
2025-01-17T11:32:04.4233770Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4233830Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4233890Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4233990Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4234050Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4234120Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4234200Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4234250Z             else:
2025-01-17T11:32:04.4234320Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4234390Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4234400Z 
2025-01-17T11:32:04.4234490Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4234580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4234690Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4234740Z     ???
2025-01-17T11:32:04.4234820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4234820Z 
2025-01-17T11:32:04.4234870Z >   ???
2025-01-17T11:32:04.4234960Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4235000Z E   
2025-01-17T11:32:04.4235100Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4235180Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4235230Z E          ...
2025-01-17T11:32:04.4235290Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4235380Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4235470Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4235520Z E          ...
2025-01-17T11:32:04.4235580Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4235680Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4235750Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4235760Z 
2025-01-17T11:32:04.4235810Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4236010Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] _
2025-01-17T11:32:04.4236020Z 
2025-01-17T11:32:04.4236180Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133658890>
2025-01-17T11:32:04.4236310Z plasma = <tardis.plasma.base.BasePlasma object at 0x314cb3bc0>
2025-01-17T11:32:04.4236420Z attr = 'lines_lower_level_index'
2025-01-17T11:32:04.4236420Z 
2025-01-17T11:32:04.4236530Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4236610Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4236670Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4236920Z         try:
2025-01-17T11:32:04.4237030Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4237080Z         except KeyError:
2025-01-17T11:32:04.4237190Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4237230Z     
2025-01-17T11:32:04.4237290Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4237360Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4237410Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4237520Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4237570Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4237640Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4237720Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4237720Z 
2025-01-17T11:32:04.4237820Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4237900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4237910Z 
2025-01-17T11:32:04.4238010Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.4238070Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.4238160Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4238210Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.4238320Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.4238380Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.4238460Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4238520Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.4238570Z err_msg = None
2025-01-17T11:32:04.4238570Z 
2025-01-17T11:32:04.4238640Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4238700Z         if err_msg is None:
2025-01-17T11:32:04.4238760Z             if left.shape != right.shape:
2025-01-17T11:32:04.4238830Z                 raise_assert_detail(
2025-01-17T11:32:04.4238940Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4238980Z                 )
2025-01-17T11:32:04.4239020Z     
2025-01-17T11:32:04.4239060Z             diff = 0
2025-01-17T11:32:04.4239150Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4239200Z                 # count up differences
2025-01-17T11:32:04.4239340Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4239390Z                     diff += 1
2025-01-17T11:32:04.4239430Z     
2025-01-17T11:32:04.4239490Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4239600Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4239730Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4239810Z E           AssertionError: Series are different
2025-01-17T11:32:04.4239850Z E           
2025-01-17T11:32:04.4239930Z E           Series values are different (4.04858 %)
2025-01-17T11:32:04.4240230Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4240550Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4240860Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4240870Z 
2025-01-17T11:32:04.4241110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4241310Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] _
2025-01-17T11:32:04.4241320Z 
2025-01-17T11:32:04.4241490Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133658950>
2025-01-17T11:32:04.4241610Z plasma = <tardis.plasma.base.BasePlasma object at 0x314cb3bc0>
2025-01-17T11:32:04.4241670Z attr = 'lines_upper_level_index'
2025-01-17T11:32:04.4241670Z 
2025-01-17T11:32:04.4241780Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4241860Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4241920Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4241960Z         try:
2025-01-17T11:32:04.4242070Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4242120Z         except KeyError:
2025-01-17T11:32:04.4242230Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4242270Z     
2025-01-17T11:32:04.4242330Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4242400Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4242460Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4242560Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4242620Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4242680Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4242770Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4242770Z 
2025-01-17T11:32:04.4242860Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4242950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4242950Z 
2025-01-17T11:32:04.4243060Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.4243110Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.4243200Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.4243250Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.4243360Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.4243420Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.4243500Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.4243560Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.4243610Z err_msg = None
2025-01-17T11:32:04.4243610Z 
2025-01-17T11:32:04.4243690Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4243750Z         if err_msg is None:
2025-01-17T11:32:04.4243810Z             if left.shape != right.shape:
2025-01-17T11:32:04.4243870Z                 raise_assert_detail(
2025-01-17T11:32:04.4243980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4244020Z                 )
2025-01-17T11:32:04.4244060Z     
2025-01-17T11:32:04.4244100Z             diff = 0
2025-01-17T11:32:04.4244190Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4244280Z                 # count up differences
2025-01-17T11:32:04.4244420Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4244470Z                     diff += 1
2025-01-17T11:32:04.4244520Z     
2025-01-17T11:32:04.4244620Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4244730Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4244860Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4244930Z E           AssertionError: Series are different
2025-01-17T11:32:04.4244970Z E           
2025-01-17T11:32:04.4245050Z E           Series values are different (6.47773 %)
2025-01-17T11:32:04.4245340Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4245650Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.4245960Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.4245970Z 
2025-01-17T11:32:04.4246210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4246370Z _____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-nu] ______
2025-01-17T11:32:04.4246380Z 
2025-01-17T11:32:04.4246480Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4246580Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4246650Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4246760Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4246860Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4246930Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4246980Z err_msg = None
2025-01-17T11:32:04.4246980Z 
2025-01-17T11:32:04.4247060Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4247110Z         if err_msg is None:
2025-01-17T11:32:04.4247180Z             if left.shape != right.shape:
2025-01-17T11:32:04.4247240Z                 raise_assert_detail(
2025-01-17T11:32:04.4247350Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4247390Z                 )
2025-01-17T11:32:04.4247430Z     
2025-01-17T11:32:04.4247480Z             diff = 0
2025-01-17T11:32:04.4247560Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4247630Z                 # count up differences
2025-01-17T11:32:04.4247810Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4247860Z                     diff += 1
2025-01-17T11:32:04.4247920Z     
2025-01-17T11:32:04.4248260Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4248380Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4248580Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4255120Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4255390Z E           
2025-01-17T11:32:04.4255480Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4255680Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4255890Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4255900Z 
2025-01-17T11:32:04.4256150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4256150Z 
2025-01-17T11:32:04.4256280Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4256290Z 
2025-01-17T11:32:04.4256460Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133658b90>
2025-01-17T11:32:04.4256610Z plasma = <tardis.plasma.base.BasePlasma object at 0x314cb3bc0>, attr = 'nu'
2025-01-17T11:32:04.4256610Z 
2025-01-17T11:32:04.4256720Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4256800Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4256860Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4256900Z         try:
2025-01-17T11:32:04.4257020Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4257070Z         except KeyError:
2025-01-17T11:32:04.4257170Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4257220Z     
2025-01-17T11:32:04.4257270Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4257340Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4257400Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4257510Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4257560Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4257630Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4257710Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4257710Z 
2025-01-17T11:32:04.4257800Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4257890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4258000Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4258050Z     ???
2025-01-17T11:32:04.4258130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4258140Z 
2025-01-17T11:32:04.4258180Z >   ???
2025-01-17T11:32:04.4258280Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4258320Z E   
2025-01-17T11:32:04.4258420Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4258510Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4258550Z E          ...
2025-01-17T11:32:04.4258620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4258710Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4258800Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4258840Z E          ...
2025-01-17T11:32:04.4258900Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4259100Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4259170Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4259180Z 
2025-01-17T11:32:04.4259230Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4259410Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-wavelength_cm] _
2025-01-17T11:32:04.4259540Z 
2025-01-17T11:32:04.4259640Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4259750Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4259820Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4259930Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4260030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4260100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4260150Z err_msg = None
2025-01-17T11:32:04.4260150Z 
2025-01-17T11:32:04.4260240Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4260290Z         if err_msg is None:
2025-01-17T11:32:04.4260360Z             if left.shape != right.shape:
2025-01-17T11:32:04.4260410Z                 raise_assert_detail(
2025-01-17T11:32:04.4260530Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4260580Z                 )
2025-01-17T11:32:04.4260620Z     
2025-01-17T11:32:04.4260670Z             diff = 0
2025-01-17T11:32:04.4260750Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4260810Z                 # count up differences
2025-01-17T11:32:04.4260940Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4260990Z                     diff += 1
2025-01-17T11:32:04.4261030Z     
2025-01-17T11:32:04.4261100Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4261200Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4261340Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4261430Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4261490Z E           
2025-01-17T11:32:04.4261590Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4261800Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4262010Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4262020Z 
2025-01-17T11:32:04.4262260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4262270Z 
2025-01-17T11:32:04.4262400Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4262400Z 
2025-01-17T11:32:04.4262570Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133658c50>
2025-01-17T11:32:04.4262690Z plasma = <tardis.plasma.base.BasePlasma object at 0x314cb3bc0>
2025-01-17T11:32:04.4262740Z attr = 'wavelength_cm'
2025-01-17T11:32:04.4262750Z 
2025-01-17T11:32:04.4262850Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4262930Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4262990Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4263030Z         try:
2025-01-17T11:32:04.4263220Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4263280Z         except KeyError:
2025-01-17T11:32:04.4263380Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4263420Z     
2025-01-17T11:32:04.4263480Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4263600Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4263660Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4263770Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4263830Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4263890Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4263970Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4263970Z 
2025-01-17T11:32:04.4264070Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4264150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4264260Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4264310Z     ???
2025-01-17T11:32:04.4264400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4264400Z 
2025-01-17T11:32:04.4264440Z >   ???
2025-01-17T11:32:04.4264540Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4264580Z E   
2025-01-17T11:32:04.4264680Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4264760Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4264810Z E          ...
2025-01-17T11:32:04.4264870Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4264970Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4265050Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4265090Z E          ...
2025-01-17T11:32:04.4265160Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4265250Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4265330Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4265330Z 
2025-01-17T11:32:04.4265390Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4265560Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-f_lu] _____
2025-01-17T11:32:04.4265560Z 
2025-01-17T11:32:04.4265660Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4265770Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4265840Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4265950Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4266050Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4266120Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4266170Z err_msg = None
2025-01-17T11:32:04.4266170Z 
2025-01-17T11:32:04.4266250Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4266310Z         if err_msg is None:
2025-01-17T11:32:04.4266370Z             if left.shape != right.shape:
2025-01-17T11:32:04.4266430Z                 raise_assert_detail(
2025-01-17T11:32:04.4266540Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4266590Z                 )
2025-01-17T11:32:04.4266630Z     
2025-01-17T11:32:04.4266680Z             diff = 0
2025-01-17T11:32:04.4266760Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4266820Z                 # count up differences
2025-01-17T11:32:04.4266950Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4267000Z                     diff += 1
2025-01-17T11:32:04.4268600Z     
2025-01-17T11:32:04.4268760Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4268860Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4269000Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4269080Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4269180Z E           
2025-01-17T11:32:04.4269270Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4269470Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4269680Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4269690Z 
2025-01-17T11:32:04.4269930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4269930Z 
2025-01-17T11:32:04.4270070Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4270070Z 
2025-01-17T11:32:04.4270240Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133658d10>
2025-01-17T11:32:04.4270390Z plasma = <tardis.plasma.base.BasePlasma object at 0x314cb3bc0>, attr = 'f_lu'
2025-01-17T11:32:04.4270400Z 
2025-01-17T11:32:04.4270500Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4270590Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4270640Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4270690Z         try:
2025-01-17T11:32:04.4270790Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4270850Z         except KeyError:
2025-01-17T11:32:04.4270950Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4271000Z     
2025-01-17T11:32:04.4271050Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4271120Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4271180Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4271280Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4271340Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4271400Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4271490Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4271490Z 
2025-01-17T11:32:04.4271580Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4271660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4271780Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4271820Z     ???
2025-01-17T11:32:04.4271910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4271910Z 
2025-01-17T11:32:04.4271960Z >   ???
2025-01-17T11:32:04.4272050Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4272090Z E   
2025-01-17T11:32:04.4272190Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4272280Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4272320Z E          ...
2025-01-17T11:32:04.4272380Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4272480Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4272560Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4272610Z E          ...
2025-01-17T11:32:04.4272670Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4272910Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4272980Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4272990Z 
2025-01-17T11:32:04.4273050Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4273220Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] _
2025-01-17T11:32:04.4273260Z 
2025-01-17T11:32:04.4273360Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4273460Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4273530Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4273640Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4273730Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4273810Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4273860Z err_msg = None
2025-01-17T11:32:04.4273860Z 
2025-01-17T11:32:04.4273940Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4273990Z         if err_msg is None:
2025-01-17T11:32:04.4274060Z             if left.shape != right.shape:
2025-01-17T11:32:04.4274120Z                 raise_assert_detail(
2025-01-17T11:32:04.4274230Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4274280Z                 )
2025-01-17T11:32:04.4274320Z     
2025-01-17T11:32:04.4274360Z             diff = 0
2025-01-17T11:32:04.4274450Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4274510Z                 # count up differences
2025-01-17T11:32:04.4274640Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4274690Z                     diff += 1
2025-01-17T11:32:04.4274730Z     
2025-01-17T11:32:04.4274800Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4274900Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4275040Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4275120Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4275170Z E           
2025-01-17T11:32:04.4275270Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4275480Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4275680Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4275690Z 
2025-01-17T11:32:04.4275930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4275940Z 
2025-01-17T11:32:04.4276070Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4276070Z 
2025-01-17T11:32:04.4276240Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133659490>
2025-01-17T11:32:04.4276360Z plasma = <tardis.plasma.base.BasePlasma object at 0x314cb3bc0>
2025-01-17T11:32:04.4276410Z attr = 'tau_sobolevs'
2025-01-17T11:32:04.4276410Z 
2025-01-17T11:32:04.4276510Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4276600Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4276650Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4276700Z         try:
2025-01-17T11:32:04.4276880Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4276940Z         except KeyError:
2025-01-17T11:32:04.4277040Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4277090Z     
2025-01-17T11:32:04.4277140Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4277570Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4277630Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4277740Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4277790Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4277850Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4277940Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4277980Z             else:
2025-01-17T11:32:04.4278050Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4278130Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4278130Z 
2025-01-17T11:32:04.4278230Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4278310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4278430Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4278470Z     ???
2025-01-17T11:32:04.4278560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4278560Z 
2025-01-17T11:32:04.4278600Z >   ???
2025-01-17T11:32:04.4278700Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4278740Z E   
2025-01-17T11:32:04.4278840Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4278920Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4278960Z E          ...
2025-01-17T11:32:04.4279030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4279130Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4279210Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4279260Z E          ...
2025-01-17T11:32:04.4279320Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4279410Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4279490Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4279490Z 
2025-01-17T11:32:04.4279550Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4279710Z ___ TestPlasma.test_plasma_properties[line_interaction_type:scatter-j_blues] ___
2025-01-17T11:32:04.4279720Z 
2025-01-17T11:32:04.4279820Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4279920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4279990Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4280150Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4280260Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4280330Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4280370Z err_msg = None
2025-01-17T11:32:04.4280380Z 
2025-01-17T11:32:04.4280460Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4280510Z         if err_msg is None:
2025-01-17T11:32:04.4280580Z             if left.shape != right.shape:
2025-01-17T11:32:04.4280630Z                 raise_assert_detail(
2025-01-17T11:32:04.4280740Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4280790Z                 )
2025-01-17T11:32:04.4280830Z     
2025-01-17T11:32:04.4280870Z             diff = 0
2025-01-17T11:32:04.4280960Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4281020Z                 # count up differences
2025-01-17T11:32:04.4281230Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4281280Z                     diff += 1
2025-01-17T11:32:04.4281330Z     
2025-01-17T11:32:04.4281390Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4281490Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4281670Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4281760Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4281810Z E           
2025-01-17T11:32:04.4281890Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4282100Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4282310Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4282320Z 
2025-01-17T11:32:04.4282550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4282560Z 
2025-01-17T11:32:04.4282690Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4282690Z 
2025-01-17T11:32:04.4282860Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336596d0>
2025-01-17T11:32:04.4283020Z plasma = <tardis.plasma.base.BasePlasma object at 0x314cb3bc0>, attr = 'j_blues'
2025-01-17T11:32:04.4283020Z 
2025-01-17T11:32:04.4283130Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4283220Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4283270Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4283320Z         try:
2025-01-17T11:32:04.4283420Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4283470Z         except KeyError:
2025-01-17T11:32:04.4283580Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4283630Z     
2025-01-17T11:32:04.4283680Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4283750Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4283810Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4283910Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4283970Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4284030Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4284110Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4284160Z             else:
2025-01-17T11:32:04.4284230Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4284310Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4284310Z 
2025-01-17T11:32:04.4284400Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4284480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4284600Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4284640Z     ???
2025-01-17T11:32:04.4284730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4284730Z 
2025-01-17T11:32:04.4284770Z >   ???
2025-01-17T11:32:04.4284870Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4284910Z E   
2025-01-17T11:32:04.4285000Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4285100Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4285230Z E          ...
2025-01-17T11:32:04.4285300Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4285400Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4285480Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4285530Z E          ...
2025-01-17T11:32:04.4285640Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4285740Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4285820Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4285820Z 
2025-01-17T11:32:04.4285880Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4286040Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines] ___
2025-01-17T11:32:04.4286040Z 
2025-01-17T11:32:04.4286140Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4286240Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4286320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4286420Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4286520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4286600Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4286640Z err_msg = None
2025-01-17T11:32:04.4286640Z 
2025-01-17T11:32:04.4286730Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4286780Z         if err_msg is None:
2025-01-17T11:32:04.4286850Z             if left.shape != right.shape:
2025-01-17T11:32:04.4286900Z                 raise_assert_detail(
2025-01-17T11:32:04.4287010Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4287050Z                 )
2025-01-17T11:32:04.4287100Z     
2025-01-17T11:32:04.4287150Z             diff = 0
2025-01-17T11:32:04.4287230Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4287290Z                 # count up differences
2025-01-17T11:32:04.4287420Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4287470Z                     diff += 1
2025-01-17T11:32:04.4287520Z     
2025-01-17T11:32:04.4287580Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4287680Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4287810Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4287900Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4287940Z E           
2025-01-17T11:32:04.4288020Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4288230Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4288440Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4288450Z 
2025-01-17T11:32:04.4288680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4288680Z 
2025-01-17T11:32:04.4288810Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4288820Z 
2025-01-17T11:32:04.4289060Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13365a450>
2025-01-17T11:32:04.4289400Z plasma = <tardis.plasma.base.BasePlasma object at 0x310273890>, attr = 'lines'
2025-01-17T11:32:04.4289400Z 
2025-01-17T11:32:04.4289510Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4289590Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4289650Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4289740Z         try:
2025-01-17T11:32:04.4289840Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4289890Z         except KeyError:
2025-01-17T11:32:04.4290000Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4290040Z     
2025-01-17T11:32:04.4290100Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4290170Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4290230Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4290330Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4290650Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4290800Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4290890Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4290940Z             else:
2025-01-17T11:32:04.4291010Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4291090Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4291100Z 
2025-01-17T11:32:04.4291200Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4291290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4291410Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4291460Z     ???
2025-01-17T11:32:04.4291550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4291550Z 
2025-01-17T11:32:04.4291600Z >   ???
2025-01-17T11:32:04.4291690Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4291740Z E   
2025-01-17T11:32:04.4291840Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4291920Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4291970Z E          ...
2025-01-17T11:32:04.4292030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4292130Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4292220Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4292270Z E          ...
2025-01-17T11:32:04.4292330Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4292430Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4292500Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4292510Z 
2025-01-17T11:32:04.4292570Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4292780Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] _
2025-01-17T11:32:04.4292780Z 
2025-01-17T11:32:04.4292950Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13365a510>
2025-01-17T11:32:04.4293080Z plasma = <tardis.plasma.base.BasePlasma object at 0x310273890>
2025-01-17T11:32:04.4293140Z attr = 'lines_lower_level_index'
2025-01-17T11:32:04.4293140Z 
2025-01-17T11:32:04.4293250Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4293330Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4293390Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4293440Z         try:
2025-01-17T11:32:04.4293550Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4293600Z         except KeyError:
2025-01-17T11:32:04.4293710Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4293750Z     
2025-01-17T11:32:04.4293810Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4293880Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4293940Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4294220Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4294280Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4294340Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4294430Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4294630Z 
2025-01-17T11:32:04.4294760Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4294850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4294860Z 
2025-01-17T11:32:04.4294970Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.4295030Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.4295110Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4295170Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.4295280Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.4295340Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.4295420Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4295480Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.4295530Z err_msg = None
2025-01-17T11:32:04.4295530Z 
2025-01-17T11:32:04.4295610Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4295670Z         if err_msg is None:
2025-01-17T11:32:04.4295740Z             if left.shape != right.shape:
2025-01-17T11:32:04.4295790Z                 raise_assert_detail(
2025-01-17T11:32:04.4295910Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4295950Z                 )
2025-01-17T11:32:04.4295990Z     
2025-01-17T11:32:04.4296040Z             diff = 0
2025-01-17T11:32:04.4296120Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4296190Z                 # count up differences
2025-01-17T11:32:04.4296320Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4296370Z                     diff += 1
2025-01-17T11:32:04.4296420Z     
2025-01-17T11:32:04.4296480Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4296590Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4296720Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4296800Z E           AssertionError: Series are different
2025-01-17T11:32:04.4296840Z E           
2025-01-17T11:32:04.4296920Z E           Series values are different (4.04858 %)
2025-01-17T11:32:04.4297220Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4297500Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4297770Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4297770Z 
2025-01-17T11:32:04.4298030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4298330Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] _
2025-01-17T11:32:04.4298330Z 
2025-01-17T11:32:04.4298500Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13365a5d0>
2025-01-17T11:32:04.4298680Z plasma = <tardis.plasma.base.BasePlasma object at 0x310273890>
2025-01-17T11:32:04.4298740Z attr = 'lines_upper_level_index'
2025-01-17T11:32:04.4298740Z 
2025-01-17T11:32:04.4298850Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4298930Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4299000Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4299060Z         try:
2025-01-17T11:32:04.4299170Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4299220Z         except KeyError:
2025-01-17T11:32:04.4299330Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4299370Z     
2025-01-17T11:32:04.4299430Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4299500Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4299560Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4299660Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4299720Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4299790Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4299940Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4299940Z 
2025-01-17T11:32:04.4300040Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4300130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4300130Z 
2025-01-17T11:32:04.4300240Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.4300300Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.4300380Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.4300440Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.4300550Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.4300600Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.4300690Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.4300740Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.4300790Z err_msg = None
2025-01-17T11:32:04.4300790Z 
2025-01-17T11:32:04.4300870Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4300930Z         if err_msg is None:
2025-01-17T11:32:04.4300990Z             if left.shape != right.shape:
2025-01-17T11:32:04.4301050Z                 raise_assert_detail(
2025-01-17T11:32:04.4301160Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4301210Z                 )
2025-01-17T11:32:04.4301250Z     
2025-01-17T11:32:04.4301300Z             diff = 0
2025-01-17T11:32:04.4301380Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4301440Z                 # count up differences
2025-01-17T11:32:04.4301570Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4301620Z                     diff += 1
2025-01-17T11:32:04.4301670Z     
2025-01-17T11:32:04.4301730Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4301830Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4301960Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4302040Z E           AssertionError: Series are different
2025-01-17T11:32:04.4302080Z E           
2025-01-17T11:32:04.4307920Z E           Series values are different (6.47773 %)
2025-01-17T11:32:04.4308270Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4308760Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.4309060Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.4309070Z 
2025-01-17T11:32:04.4309320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4309480Z ____ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-nu] _____
2025-01-17T11:32:04.4309490Z 
2025-01-17T11:32:04.4309590Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4309690Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4309770Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4309870Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4309970Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4310040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4310090Z err_msg = None
2025-01-17T11:32:04.4310100Z 
2025-01-17T11:32:04.4310180Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4310230Z         if err_msg is None:
2025-01-17T11:32:04.4310300Z             if left.shape != right.shape:
2025-01-17T11:32:04.4310360Z                 raise_assert_detail(
2025-01-17T11:32:04.4310470Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4310520Z                 )
2025-01-17T11:32:04.4310560Z     
2025-01-17T11:32:04.4310610Z             diff = 0
2025-01-17T11:32:04.4310690Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4310750Z                 # count up differences
2025-01-17T11:32:04.4310880Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4310930Z                     diff += 1
2025-01-17T11:32:04.4310980Z     
2025-01-17T11:32:04.4311040Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4311140Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4311280Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4311370Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4311410Z E           
2025-01-17T11:32:04.4311490Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4311700Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4312190Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4312240Z 
2025-01-17T11:32:04.4312480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4312490Z 
2025-01-17T11:32:04.4312620Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4312620Z 
2025-01-17T11:32:04.4312790Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13365a810>
2025-01-17T11:32:04.4312940Z plasma = <tardis.plasma.base.BasePlasma object at 0x310273890>, attr = 'nu'
2025-01-17T11:32:04.4312940Z 
2025-01-17T11:32:04.4313050Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4313140Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4313200Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4313240Z         try:
2025-01-17T11:32:04.4313350Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4313400Z         except KeyError:
2025-01-17T11:32:04.4313510Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4313560Z     
2025-01-17T11:32:04.4313610Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4313680Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4313740Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4313840Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4313900Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4313970Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4314050Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4314050Z 
2025-01-17T11:32:04.4314140Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4314230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4314340Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4314390Z     ???
2025-01-17T11:32:04.4314470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4314480Z 
2025-01-17T11:32:04.4314520Z >   ???
2025-01-17T11:32:04.4314620Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4314660Z E   
2025-01-17T11:32:04.4314750Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4314840Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4314880Z E          ...
2025-01-17T11:32:04.4314940Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4315040Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4315130Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4315170Z E          ...
2025-01-17T11:32:04.4315240Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4315330Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4315410Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4315410Z 
2025-01-17T11:32:04.4315470Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4315650Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] _
2025-01-17T11:32:04.4315660Z 
2025-01-17T11:32:04.4315760Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4315860Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4315930Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4316030Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4316180Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4316260Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4316300Z err_msg = None
2025-01-17T11:32:04.4316310Z 
2025-01-17T11:32:04.4316390Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4316580Z         if err_msg is None:
2025-01-17T11:32:04.4316650Z             if left.shape != right.shape:
2025-01-17T11:32:04.4316710Z                 raise_assert_detail(
2025-01-17T11:32:04.4316820Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4316870Z                 )
2025-01-17T11:32:04.4316910Z     
2025-01-17T11:32:04.4316950Z             diff = 0
2025-01-17T11:32:04.4317040Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4317100Z                 # count up differences
2025-01-17T11:32:04.4317230Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4317280Z                     diff += 1
2025-01-17T11:32:04.4317320Z     
2025-01-17T11:32:04.4317380Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4317490Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4317640Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4317740Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4317780Z E           
2025-01-17T11:32:04.4317860Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4318090Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4318310Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4318320Z 
2025-01-17T11:32:04.4318570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4318580Z 
2025-01-17T11:32:04.4318720Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4318730Z 
2025-01-17T11:32:04.4318900Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13365a8d0>
2025-01-17T11:32:04.4319020Z plasma = <tardis.plasma.base.BasePlasma object at 0x310273890>
2025-01-17T11:32:04.4319080Z attr = 'wavelength_cm'
2025-01-17T11:32:04.4319080Z 
2025-01-17T11:32:04.4319190Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4319290Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4319350Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4319400Z         try:
2025-01-17T11:32:04.4319510Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4319580Z         except KeyError:
2025-01-17T11:32:04.4319690Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4319740Z     
2025-01-17T11:32:04.4319800Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4319870Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4319930Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4320040Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4320100Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4320160Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4320250Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4320250Z 
2025-01-17T11:32:04.4320440Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4320530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4320650Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4320690Z     ???
2025-01-17T11:32:04.4320780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4320840Z 
2025-01-17T11:32:04.4320890Z >   ???
2025-01-17T11:32:04.4320990Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4321030Z E   
2025-01-17T11:32:04.4321130Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4321220Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4321260Z E          ...
2025-01-17T11:32:04.4321320Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4321420Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4321510Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4321550Z E          ...
2025-01-17T11:32:04.4321620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4321710Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4321780Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4321790Z 
2025-01-17T11:32:04.4321850Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4322020Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-f_lu] ____
2025-01-17T11:32:04.4322020Z 
2025-01-17T11:32:04.4322120Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4322220Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4322290Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4322390Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4322500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4322570Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4322610Z err_msg = None
2025-01-17T11:32:04.4322620Z 
2025-01-17T11:32:04.4322700Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4322750Z         if err_msg is None:
2025-01-17T11:32:04.4322820Z             if left.shape != right.shape:
2025-01-17T11:32:04.4322870Z                 raise_assert_detail(
2025-01-17T11:32:04.4322990Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4323030Z                 )
2025-01-17T11:32:04.4323070Z     
2025-01-17T11:32:04.4323120Z             diff = 0
2025-01-17T11:32:04.4323200Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4323260Z                 # count up differences
2025-01-17T11:32:04.4323390Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4323440Z                     diff += 1
2025-01-17T11:32:04.4323490Z     
2025-01-17T11:32:04.4323550Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4323650Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4323790Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4323870Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4323920Z E           
2025-01-17T11:32:04.4324000Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4324210Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4324500Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4324540Z 
2025-01-17T11:32:04.4324780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4324780Z 
2025-01-17T11:32:04.4324920Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4324920Z 
2025-01-17T11:32:04.4325080Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13365a990>
2025-01-17T11:32:04.4325240Z plasma = <tardis.plasma.base.BasePlasma object at 0x310273890>, attr = 'f_lu'
2025-01-17T11:32:04.4325240Z 
2025-01-17T11:32:04.4325340Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4325440Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4325490Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4325540Z         try:
2025-01-17T11:32:04.4325650Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4325710Z         except KeyError:
2025-01-17T11:32:04.4325810Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4325860Z     
2025-01-17T11:32:04.4325920Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4325980Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4326040Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4326140Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4326200Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4326260Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4326340Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4326350Z 
2025-01-17T11:32:04.4326440Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4326530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4326640Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4326680Z     ???
2025-01-17T11:32:04.4326770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4326770Z 
2025-01-17T11:32:04.4326810Z >   ???
2025-01-17T11:32:04.4326910Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4326950Z E   
2025-01-17T11:32:04.4327040Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4327130Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4327170Z E          ...
2025-01-17T11:32:04.4327240Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4327330Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4327410Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4327460Z E          ...
2025-01-17T11:32:04.4327520Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4327620Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4327690Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4327700Z 
2025-01-17T11:32:04.4327760Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4327930Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] _
2025-01-17T11:32:04.4327940Z 
2025-01-17T11:32:04.4328040Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4328140Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4328210Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4328310Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4328590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4328660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4328710Z err_msg = None
2025-01-17T11:32:04.4328710Z 
2025-01-17T11:32:04.4328790Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4328880Z         if err_msg is None:
2025-01-17T11:32:04.4328950Z             if left.shape != right.shape:
2025-01-17T11:32:04.4329010Z                 raise_assert_detail(
2025-01-17T11:32:04.4329120Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4329160Z                 )
2025-01-17T11:32:04.4329200Z     
2025-01-17T11:32:04.4329250Z             diff = 0
2025-01-17T11:32:04.4329330Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4329390Z                 # count up differences
2025-01-17T11:32:04.4329520Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4329580Z                     diff += 1
2025-01-17T11:32:04.4329620Z     
2025-01-17T11:32:04.4329680Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4329780Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4329920Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4330010Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4330050Z E           
2025-01-17T11:32:04.4330130Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4330330Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4330550Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4330560Z 
2025-01-17T11:32:04.4330900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4330900Z 
2025-01-17T11:32:04.4331040Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4331040Z 
2025-01-17T11:32:04.4331210Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13365b110>
2025-01-17T11:32:04.4331330Z plasma = <tardis.plasma.base.BasePlasma object at 0x310273890>
2025-01-17T11:32:04.4331380Z attr = 'tau_sobolevs'
2025-01-17T11:32:04.4331390Z 
2025-01-17T11:32:04.4331490Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4331580Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4331630Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4331680Z         try:
2025-01-17T11:32:04.4331780Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4331840Z         except KeyError:
2025-01-17T11:32:04.4331940Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4331990Z     
2025-01-17T11:32:04.4332050Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4332110Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4332170Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4332270Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4332330Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4332390Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4332480Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4332520Z             else:
2025-01-17T11:32:04.4332640Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4332720Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4332720Z 
2025-01-17T11:32:04.4332820Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4332900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4333080Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4333130Z     ???
2025-01-17T11:32:04.4333220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4333220Z 
2025-01-17T11:32:04.4333260Z >   ???
2025-01-17T11:32:04.4333420Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4333470Z E   
2025-01-17T11:32:04.4333560Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4333640Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4333690Z E          ...
2025-01-17T11:32:04.4333760Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4333850Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4333940Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4333980Z E          ...
2025-01-17T11:32:04.4334050Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4334140Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4334220Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4334220Z 
2025-01-17T11:32:04.4334280Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4334450Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] _
2025-01-17T11:32:04.4334460Z 
2025-01-17T11:32:04.4334550Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4334660Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4334730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4334840Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4334940Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4335010Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4335060Z err_msg = None
2025-01-17T11:32:04.4335060Z 
2025-01-17T11:32:04.4335140Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4335200Z         if err_msg is None:
2025-01-17T11:32:04.4335260Z             if left.shape != right.shape:
2025-01-17T11:32:04.4335320Z                 raise_assert_detail(
2025-01-17T11:32:04.4335430Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4335470Z                 )
2025-01-17T11:32:04.4335520Z     
2025-01-17T11:32:04.4335560Z             diff = 0
2025-01-17T11:32:04.4335650Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4335710Z                 # count up differences
2025-01-17T11:32:04.4335840Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4335890Z                     diff += 1
2025-01-17T11:32:04.4335930Z     
2025-01-17T11:32:04.4335990Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4336100Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4336230Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4336310Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4336360Z E           
2025-01-17T11:32:04.4336440Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4336650Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4336940Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4337000Z 
2025-01-17T11:32:04.4337230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4337240Z 
2025-01-17T11:32:04.4337370Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4337370Z 
2025-01-17T11:32:04.4337540Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13365b1d0>
2025-01-17T11:32:04.4337660Z plasma = <tardis.plasma.base.BasePlasma object at 0x310273890>
2025-01-17T11:32:04.4337710Z attr = 'beta_sobolev'
2025-01-17T11:32:04.4337720Z 
2025-01-17T11:32:04.4337820Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4337900Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4337960Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4338010Z         try:
2025-01-17T11:32:04.4338110Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4338170Z         except KeyError:
2025-01-17T11:32:04.4338270Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4338310Z     
2025-01-17T11:32:04.4338370Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4338430Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4338490Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4338600Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4338660Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4338720Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4338800Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4338850Z             else:
2025-01-17T11:32:04.4338910Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4338990Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4339000Z 
2025-01-17T11:32:04.4339090Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4339180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4339290Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4339330Z     ???
2025-01-17T11:32:04.4339420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4339420Z 
2025-01-17T11:32:04.4339460Z >   ???
2025-01-17T11:32:04.4339550Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4339600Z E   
2025-01-17T11:32:04.4339700Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4339780Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4339820Z E          ...
2025-01-17T11:32:04.4339890Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4339990Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4340070Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4340110Z E          ...
2025-01-17T11:32:04.4340170Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4340270Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4340340Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4340340Z 
2025-01-17T11:32:04.4340400Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4340570Z __ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-j_blues] __
2025-01-17T11:32:04.4340610Z 
2025-01-17T11:32:04.4340720Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4340820Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4340890Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4341040Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4341140Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4341210Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4341260Z err_msg = None
2025-01-17T11:32:04.4341260Z 
2025-01-17T11:32:04.4341340Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4341390Z         if err_msg is None:
2025-01-17T11:32:04.4341460Z             if left.shape != right.shape:
2025-01-17T11:32:04.4341510Z                 raise_assert_detail(
2025-01-17T11:32:04.4341630Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4341670Z                 )
2025-01-17T11:32:04.4341710Z     
2025-01-17T11:32:04.4341760Z             diff = 0
2025-01-17T11:32:04.4341840Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4341900Z                 # count up differences
2025-01-17T11:32:04.4342040Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4342080Z                     diff += 1
2025-01-17T11:32:04.4342130Z     
2025-01-17T11:32:04.4342190Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4342290Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4342430Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4342510Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4342550Z E           
2025-01-17T11:32:04.4342640Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4342850Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4343060Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4343070Z 
2025-01-17T11:32:04.4343300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4343310Z 
2025-01-17T11:32:04.4343430Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4343440Z 
2025-01-17T11:32:04.4343610Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13365b350>
2025-01-17T11:32:04.4343760Z plasma = <tardis.plasma.base.BasePlasma object at 0x310273890>, attr = 'j_blues'
2025-01-17T11:32:04.4343770Z 
2025-01-17T11:32:04.4343870Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4343960Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4344010Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4344060Z         try:
2025-01-17T11:32:04.4344170Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4344220Z         except KeyError:
2025-01-17T11:32:04.4344320Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4344370Z     
2025-01-17T11:32:04.4344420Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4344490Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4344620Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4344730Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4344780Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4344850Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4344930Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4345010Z             else:
2025-01-17T11:32:04.4345080Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4345170Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4345170Z 
2025-01-17T11:32:04.4345260Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4345340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4345450Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4345500Z     ???
2025-01-17T11:32:04.4345580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4345590Z 
2025-01-17T11:32:04.4345630Z >   ???
2025-01-17T11:32:04.4345720Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4345770Z E   
2025-01-17T11:32:04.4345860Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4345960Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4346020Z E          ...
2025-01-17T11:32:04.4346080Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4346180Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4346260Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4346310Z E          ...
2025-01-17T11:32:04.4346370Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4346460Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4346530Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4346540Z 
2025-01-17T11:32:04.4346600Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4346770Z __ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines] ___
2025-01-17T11:32:04.4346770Z 
2025-01-17T11:32:04.4346870Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4346970Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4347050Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4347150Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4347250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4347320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4347370Z err_msg = None
2025-01-17T11:32:04.4347370Z 
2025-01-17T11:32:04.4347450Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4347510Z         if err_msg is None:
2025-01-17T11:32:04.4347570Z             if left.shape != right.shape:
2025-01-17T11:32:04.4347630Z                 raise_assert_detail(
2025-01-17T11:32:04.4347740Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4347780Z                 )
2025-01-17T11:32:04.4347830Z     
2025-01-17T11:32:04.4347880Z             diff = 0
2025-01-17T11:32:04.4347960Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4348020Z                 # count up differences
2025-01-17T11:32:04.4348150Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4348200Z                     diff += 1
2025-01-17T11:32:04.4348240Z     
2025-01-17T11:32:04.4348300Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4348410Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4348540Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4348710Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4348750Z E           
2025-01-17T11:32:04.4348830Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4349040Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4349450Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4349450Z 
2025-01-17T11:32:04.4349690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4349700Z 
2025-01-17T11:32:04.4349830Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4349830Z 
2025-01-17T11:32:04.4350000Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13367c110>
2025-01-17T11:32:04.4350160Z plasma = <tardis.plasma.base.BasePlasma object at 0x3158da7b0>, attr = 'lines'
2025-01-17T11:32:04.4350160Z 
2025-01-17T11:32:04.4350260Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4350350Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4350400Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4350450Z         try:
2025-01-17T11:32:04.4350560Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4350610Z         except KeyError:
2025-01-17T11:32:04.4350710Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4350760Z     
2025-01-17T11:32:04.4350820Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4350880Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4350940Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4351040Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4351100Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4351170Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4351250Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4351290Z             else:
2025-01-17T11:32:04.4351360Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4351440Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4351440Z 
2025-01-17T11:32:04.4351530Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4351620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4351730Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4351770Z     ???
2025-01-17T11:32:04.4351860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4351860Z 
2025-01-17T11:32:04.4351900Z >   ???
2025-01-17T11:32:04.4352000Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4352040Z E   
2025-01-17T11:32:04.4352140Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4352230Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4352270Z E          ...
2025-01-17T11:32:04.4352330Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4352430Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4352510Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4352560Z E          ...
2025-01-17T11:32:04.4352620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4352770Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4352840Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4352840Z 
2025-01-17T11:32:04.4352900Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4353110Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] _
2025-01-17T11:32:04.4353160Z 
2025-01-17T11:32:04.4353330Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13367c1d0>
2025-01-17T11:32:04.4353450Z plasma = <tardis.plasma.base.BasePlasma object at 0x3158da7b0>
2025-01-17T11:32:04.4353520Z attr = 'lines_lower_level_index'
2025-01-17T11:32:04.4353520Z 
2025-01-17T11:32:04.4353620Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4353710Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4353760Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4353810Z         try:
2025-01-17T11:32:04.4353910Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4353970Z         except KeyError:
2025-01-17T11:32:04.4354080Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4354120Z     
2025-01-17T11:32:04.4359480Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4359600Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4359670Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4359770Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4359830Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4359890Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4359980Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4359980Z 
2025-01-17T11:32:04.4360070Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4360160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4360160Z 
2025-01-17T11:32:04.4360270Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.4360330Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.4360420Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4360470Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.4360580Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.4360640Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.4360720Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4360780Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.4360830Z err_msg = None
2025-01-17T11:32:04.4360830Z 
2025-01-17T11:32:04.4360910Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4360960Z         if err_msg is None:
2025-01-17T11:32:04.4361020Z             if left.shape != right.shape:
2025-01-17T11:32:04.4361080Z                 raise_assert_detail(
2025-01-17T11:32:04.4361190Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4361240Z                 )
2025-01-17T11:32:04.4361280Z     
2025-01-17T11:32:04.4361330Z             diff = 0
2025-01-17T11:32:04.4361410Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4361470Z                 # count up differences
2025-01-17T11:32:04.4361610Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4361660Z                     diff += 1
2025-01-17T11:32:04.4361700Z     
2025-01-17T11:32:04.4361760Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4361860Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4362000Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4362070Z E           AssertionError: Series are different
2025-01-17T11:32:04.4362290Z E           
2025-01-17T11:32:04.4362360Z E           Series values are different (4.04858 %)
2025-01-17T11:32:04.4362670Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4363010Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4363280Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4363290Z 
2025-01-17T11:32:04.4363540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4363740Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] _
2025-01-17T11:32:04.4363750Z 
2025-01-17T11:32:04.4363910Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13367c290>
2025-01-17T11:32:04.4364040Z plasma = <tardis.plasma.base.BasePlasma object at 0x3158da7b0>
2025-01-17T11:32:04.4364100Z attr = 'lines_upper_level_index'
2025-01-17T11:32:04.4364100Z 
2025-01-17T11:32:04.4364200Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4364290Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4364350Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4364400Z         try:
2025-01-17T11:32:04.4364530Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4364580Z         except KeyError:
2025-01-17T11:32:04.4364690Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4364740Z     
2025-01-17T11:32:04.4364800Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4364870Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4364930Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4365040Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4365100Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4365160Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4365240Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4365250Z 
2025-01-17T11:32:04.4365340Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4365420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4365430Z 
2025-01-17T11:32:04.4365530Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.4365590Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.4365680Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.4365730Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.4365840Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.4365900Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.4365980Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.4366040Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.4366090Z err_msg = None
2025-01-17T11:32:04.4366310Z 
2025-01-17T11:32:04.4366390Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4366450Z         if err_msg is None:
2025-01-17T11:32:04.4366510Z             if left.shape != right.shape:
2025-01-17T11:32:04.4366560Z                 raise_assert_detail(
2025-01-17T11:32:04.4366670Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4366770Z                 )
2025-01-17T11:32:04.4366810Z     
2025-01-17T11:32:04.4366860Z             diff = 0
2025-01-17T11:32:04.4366940Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4367000Z                 # count up differences
2025-01-17T11:32:04.4367130Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4367180Z                     diff += 1
2025-01-17T11:32:04.4367230Z     
2025-01-17T11:32:04.4367290Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4367390Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4367520Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4367600Z E           AssertionError: Series are different
2025-01-17T11:32:04.4367640Z E           
2025-01-17T11:32:04.4367720Z E           Series values are different (6.47773 %)
2025-01-17T11:32:04.4368020Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4368330Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.4368630Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.4368640Z 
2025-01-17T11:32:04.4368880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4369040Z ____ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-nu] ____
2025-01-17T11:32:04.4369050Z 
2025-01-17T11:32:04.4369140Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4369250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4369320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4369430Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4369530Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4369600Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4369650Z err_msg = None
2025-01-17T11:32:04.4369650Z 
2025-01-17T11:32:04.4369730Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4369780Z         if err_msg is None:
2025-01-17T11:32:04.4369850Z             if left.shape != right.shape:
2025-01-17T11:32:04.4369900Z                 raise_assert_detail(
2025-01-17T11:32:04.4370010Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4370110Z                 )
2025-01-17T11:32:04.4370150Z     
2025-01-17T11:32:04.4370190Z             diff = 0
2025-01-17T11:32:04.4370280Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4370340Z                 # count up differences
2025-01-17T11:32:04.4370590Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4370640Z                     diff += 1
2025-01-17T11:32:04.4370690Z     
2025-01-17T11:32:04.4370840Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4370950Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4371080Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4371160Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4371210Z E           
2025-01-17T11:32:04.4371290Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4371500Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4371710Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4371720Z 
2025-01-17T11:32:04.4371960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4371960Z 
2025-01-17T11:32:04.4372090Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4372100Z 
2025-01-17T11:32:04.4372270Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13367c4d0>
2025-01-17T11:32:04.4372410Z plasma = <tardis.plasma.base.BasePlasma object at 0x3158da7b0>, attr = 'nu'
2025-01-17T11:32:04.4372420Z 
2025-01-17T11:32:04.4372520Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4372610Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4372670Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4372710Z         try:
2025-01-17T11:32:04.4372820Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4372880Z         except KeyError:
2025-01-17T11:32:04.4372980Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4373030Z     
2025-01-17T11:32:04.4373080Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4373150Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4373210Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4373310Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4373380Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4373440Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4373520Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4373530Z 
2025-01-17T11:32:04.4373620Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4373710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4373820Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4373860Z     ???
2025-01-17T11:32:04.4373940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4373950Z 
2025-01-17T11:32:04.4373990Z >   ???
2025-01-17T11:32:04.4374090Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4374130Z E   
2025-01-17T11:32:04.4374220Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4374360Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4374410Z E          ...
2025-01-17T11:32:04.4374470Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4374570Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4374700Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4374740Z E          ...
2025-01-17T11:32:04.4374800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4374900Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4374970Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4374980Z 
2025-01-17T11:32:04.4375040Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4375220Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] _
2025-01-17T11:32:04.4375220Z 
2025-01-17T11:32:04.4375320Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4375430Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4375500Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4375600Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4375700Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4375770Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4375820Z err_msg = None
2025-01-17T11:32:04.4375820Z 
2025-01-17T11:32:04.4375900Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4375960Z         if err_msg is None:
2025-01-17T11:32:04.4376020Z             if left.shape != right.shape:
2025-01-17T11:32:04.4376080Z                 raise_assert_detail(
2025-01-17T11:32:04.4376190Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4376230Z                 )
2025-01-17T11:32:04.4376280Z     
2025-01-17T11:32:04.4376330Z             diff = 0
2025-01-17T11:32:04.4376410Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4376470Z                 # count up differences
2025-01-17T11:32:04.4376600Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4376660Z                     diff += 1
2025-01-17T11:32:04.4376700Z     
2025-01-17T11:32:04.4376760Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4376860Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4377000Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4377080Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4377120Z E           
2025-01-17T11:32:04.4377210Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4377420Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4377630Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4377630Z 
2025-01-17T11:32:04.4377870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4377880Z 
2025-01-17T11:32:04.4378000Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4378040Z 
2025-01-17T11:32:04.4378220Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13367c590>
2025-01-17T11:32:04.4378330Z plasma = <tardis.plasma.base.BasePlasma object at 0x3158da7b0>
2025-01-17T11:32:04.4378390Z attr = 'wavelength_cm'
2025-01-17T11:32:04.4378390Z 
2025-01-17T11:32:04.4378530Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4378620Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4378680Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4378720Z         try:
2025-01-17T11:32:04.4378830Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4378880Z         except KeyError:
2025-01-17T11:32:04.4378990Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4379030Z     
2025-01-17T11:32:04.4379090Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4379150Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4379220Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4379320Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4379380Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4379440Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4379520Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4379530Z 
2025-01-17T11:32:04.4379620Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4379710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4379820Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4379860Z     ???
2025-01-17T11:32:04.4379950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4379950Z 
2025-01-17T11:32:04.4379990Z >   ???
2025-01-17T11:32:04.4380090Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4380130Z E   
2025-01-17T11:32:04.4380230Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4380320Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4380360Z E          ...
2025-01-17T11:32:04.4380430Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4380520Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4380610Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4380660Z E          ...
2025-01-17T11:32:04.4380720Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4380810Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4380890Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4380890Z 
2025-01-17T11:32:04.4380950Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4381110Z ___ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-f_lu] ___
2025-01-17T11:32:04.4381120Z 
2025-01-17T11:32:04.4381210Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4381320Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4381390Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4381490Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4381590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4381660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4381710Z err_msg = None
2025-01-17T11:32:04.4381720Z 
2025-01-17T11:32:04.4381800Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4381850Z         if err_msg is None:
2025-01-17T11:32:04.4381910Z             if left.shape != right.shape:
2025-01-17T11:32:04.4381970Z                 raise_assert_detail(
2025-01-17T11:32:04.4382080Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4382390Z                 )
2025-01-17T11:32:04.4382430Z     
2025-01-17T11:32:04.4382480Z             diff = 0
2025-01-17T11:32:04.4382560Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4382620Z                 # count up differences
2025-01-17T11:32:04.4382800Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4382850Z                     diff += 1
2025-01-17T11:32:04.4382890Z     
2025-01-17T11:32:04.4382950Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4383050Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4383190Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4383270Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4383310Z E           
2025-01-17T11:32:04.4383400Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4383610Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4383820Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4383820Z 
2025-01-17T11:32:04.4384060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4384060Z 
2025-01-17T11:32:04.4384190Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4384200Z 
2025-01-17T11:32:04.4384370Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13367c650>
2025-01-17T11:32:04.4384520Z plasma = <tardis.plasma.base.BasePlasma object at 0x3158da7b0>, attr = 'f_lu'
2025-01-17T11:32:04.4384520Z 
2025-01-17T11:32:04.4384630Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4384720Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4384770Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4384820Z         try:
2025-01-17T11:32:04.4384930Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4384980Z         except KeyError:
2025-01-17T11:32:04.4385110Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4385150Z     
2025-01-17T11:32:04.4385210Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4385280Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4385340Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4385470Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4385530Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4385590Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4385670Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4385680Z 
2025-01-17T11:32:04.4385790Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4385880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4385990Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4386040Z     ???
2025-01-17T11:32:04.4386120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4386120Z 
2025-01-17T11:32:04.4386160Z >   ???
2025-01-17T11:32:04.4386260Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4386300Z E   
2025-01-17T11:32:04.4386400Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4386570Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4386610Z E          ...
2025-01-17T11:32:04.4386680Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4386780Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4387010Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4387050Z E          ...
2025-01-17T11:32:04.4387120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4387210Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4387290Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4387290Z 
2025-01-17T11:32:04.4387350Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4387520Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] _
2025-01-17T11:32:04.4387530Z 
2025-01-17T11:32:04.4387630Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4387730Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4387800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4387910Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4388010Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4388080Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4388130Z err_msg = None
2025-01-17T11:32:04.4388130Z 
2025-01-17T11:32:04.4388210Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4388260Z         if err_msg is None:
2025-01-17T11:32:04.4388330Z             if left.shape != right.shape:
2025-01-17T11:32:04.4388380Z                 raise_assert_detail(
2025-01-17T11:32:04.4388490Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4388540Z                 )
2025-01-17T11:32:04.4388580Z     
2025-01-17T11:32:04.4388630Z             diff = 0
2025-01-17T11:32:04.4388710Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4388770Z                 # count up differences
2025-01-17T11:32:04.4388910Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4388960Z                     diff += 1
2025-01-17T11:32:04.4389000Z     
2025-01-17T11:32:04.4389060Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4389160Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4389290Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4389380Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4389420Z E           
2025-01-17T11:32:04.4389500Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4389770Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4389990Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4390000Z 
2025-01-17T11:32:04.4390330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4390330Z 
2025-01-17T11:32:04.4390460Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4390520Z 
2025-01-17T11:32:04.4390690Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13367cdd0>
2025-01-17T11:32:04.4390820Z plasma = <tardis.plasma.base.BasePlasma object at 0x3158da7b0>
2025-01-17T11:32:04.4390870Z attr = 'tau_sobolevs'
2025-01-17T11:32:04.4390870Z 
2025-01-17T11:32:04.4391020Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4391100Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4391160Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4391200Z         try:
2025-01-17T11:32:04.4391310Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4391360Z         except KeyError:
2025-01-17T11:32:04.4391470Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4391510Z     
2025-01-17T11:32:04.4391570Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4391660Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4391720Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4391840Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4391910Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4391980Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4392070Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4392130Z             else:
2025-01-17T11:32:04.4392200Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4392280Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4392280Z 
2025-01-17T11:32:04.4392370Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4392460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4392570Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4392610Z     ???
2025-01-17T11:32:04.4392700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4392700Z 
2025-01-17T11:32:04.4392750Z >   ???
2025-01-17T11:32:04.4392840Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4392880Z E   
2025-01-17T11:32:04.4392980Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4393060Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4393110Z E          ...
2025-01-17T11:32:04.4393170Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4393270Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4393350Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4393400Z E          ...
2025-01-17T11:32:04.4393460Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4393550Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4393630Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4393630Z 
2025-01-17T11:32:04.4393690Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4393870Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] _
2025-01-17T11:32:04.4393870Z 
2025-01-17T11:32:04.4393970Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4394070Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4394150Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4394250Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4394350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4394420Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4394470Z err_msg = None
2025-01-17T11:32:04.4394470Z 
2025-01-17T11:32:04.4394550Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4394670Z         if err_msg is None:
2025-01-17T11:32:04.4394740Z             if left.shape != right.shape:
2025-01-17T11:32:04.4394790Z                 raise_assert_detail(
2025-01-17T11:32:04.4394900Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4394950Z                 )
2025-01-17T11:32:04.4395040Z     
2025-01-17T11:32:04.4395090Z             diff = 0
2025-01-17T11:32:04.4395170Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4395230Z                 # count up differences
2025-01-17T11:32:04.4395360Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4395410Z                     diff += 1
2025-01-17T11:32:04.4395450Z     
2025-01-17T11:32:04.4395510Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4395620Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4395750Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4395840Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4395880Z E           
2025-01-17T11:32:04.4395970Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4396180Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4396400Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4396400Z 
2025-01-17T11:32:04.4396640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4396640Z 
2025-01-17T11:32:04.4396770Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4396770Z 
2025-01-17T11:32:04.4396940Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13367ce90>
2025-01-17T11:32:04.4397060Z plasma = <tardis.plasma.base.BasePlasma object at 0x3158da7b0>
2025-01-17T11:32:04.4397120Z attr = 'beta_sobolev'
2025-01-17T11:32:04.4397120Z 
2025-01-17T11:32:04.4397220Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4397300Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4397360Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4397400Z         try:
2025-01-17T11:32:04.4397510Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4397560Z         except KeyError:
2025-01-17T11:32:04.4397670Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4397710Z     
2025-01-17T11:32:04.4397770Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4397840Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4397900Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4398000Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4398060Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4398120Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4398200Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4398250Z             else:
2025-01-17T11:32:04.4398310Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4398390Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4398400Z 
2025-01-17T11:32:04.4398490Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4398570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4398790Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4398830Z     ???
2025-01-17T11:32:04.4398920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4398920Z 
2025-01-17T11:32:04.4398970Z >   ???
2025-01-17T11:32:04.4399100Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4399150Z E   
2025-01-17T11:32:04.4399240Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4399330Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4399380Z E          ...
2025-01-17T11:32:04.4399440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4399540Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4399620Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4399670Z E          ...
2025-01-17T11:32:04.4399730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4399830Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4399900Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4399900Z 
2025-01-17T11:32:04.4399960Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4400130Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-j_blues] __
2025-01-17T11:32:04.4400140Z 
2025-01-17T11:32:04.4400230Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4400340Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4400410Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4400510Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4400610Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4400690Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4400730Z err_msg = None
2025-01-17T11:32:04.4400740Z 
2025-01-17T11:32:04.4400820Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4400870Z         if err_msg is None:
2025-01-17T11:32:04.4400930Z             if left.shape != right.shape:
2025-01-17T11:32:04.4400990Z                 raise_assert_detail(
2025-01-17T11:32:04.4401100Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4401150Z                 )
2025-01-17T11:32:04.4401190Z     
2025-01-17T11:32:04.4401230Z             diff = 0
2025-01-17T11:32:04.4401310Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4401370Z                 # count up differences
2025-01-17T11:32:04.4401500Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4401560Z                     diff += 1
2025-01-17T11:32:04.4401600Z     
2025-01-17T11:32:04.4401660Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4401760Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4401900Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4401980Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4402030Z E           
2025-01-17T11:32:04.4402110Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4402320Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4402520Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4402580Z 
2025-01-17T11:32:04.4402840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4403060Z 
2025-01-17T11:32:04.4403200Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4403200Z 
2025-01-17T11:32:04.4403370Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13367d010>
2025-01-17T11:32:04.4403530Z plasma = <tardis.plasma.base.BasePlasma object at 0x3158da7b0>, attr = 'j_blues'
2025-01-17T11:32:04.4403530Z 
2025-01-17T11:32:04.4403640Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4403720Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4403780Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4403820Z         try:
2025-01-17T11:32:04.4403930Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4403980Z         except KeyError:
2025-01-17T11:32:04.4404090Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4404130Z     
2025-01-17T11:32:04.4404190Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4404260Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4404320Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4404420Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4404480Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4404540Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4404630Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4404670Z             else:
2025-01-17T11:32:04.4404740Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4404820Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4404820Z 
2025-01-17T11:32:04.4404910Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4405000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4405110Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4405160Z     ???
2025-01-17T11:32:04.4405240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4405250Z 
2025-01-17T11:32:04.4405290Z >   ???
2025-01-17T11:32:04.4405380Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4405430Z E   
2025-01-17T11:32:04.4405520Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4405610Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4405650Z E          ...
2025-01-17T11:32:04.4405710Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4411780Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4411870Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4411920Z E          ...
2025-01-17T11:32:04.4411990Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4412090Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4412170Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4412170Z 
2025-01-17T11:32:04.4412240Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4412400Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines] ___
2025-01-17T11:32:04.4412400Z 
2025-01-17T11:32:04.4412510Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4412610Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4412690Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4412790Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4413080Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4413160Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4413200Z err_msg = None
2025-01-17T11:32:04.4413210Z 
2025-01-17T11:32:04.4413360Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4413420Z         if err_msg is None:
2025-01-17T11:32:04.4413480Z             if left.shape != right.shape:
2025-01-17T11:32:04.4413540Z                 raise_assert_detail(
2025-01-17T11:32:04.4413650Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4413700Z                 )
2025-01-17T11:32:04.4413740Z     
2025-01-17T11:32:04.4413790Z             diff = 0
2025-01-17T11:32:04.4413870Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4413930Z                 # count up differences
2025-01-17T11:32:04.4414070Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4414120Z                     diff += 1
2025-01-17T11:32:04.4414170Z     
2025-01-17T11:32:04.4414230Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4414340Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4414470Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4414560Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4414600Z E           
2025-01-17T11:32:04.4414690Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4414900Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4415110Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4415120Z 
2025-01-17T11:32:04.4415370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4415370Z 
2025-01-17T11:32:04.4415500Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4415500Z 
2025-01-17T11:32:04.4415670Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13367dd90>
2025-01-17T11:32:04.4415830Z plasma = <tardis.plasma.base.BasePlasma object at 0x17920f980>, attr = 'lines'
2025-01-17T11:32:04.4415830Z 
2025-01-17T11:32:04.4415940Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4416020Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4416080Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4416130Z         try:
2025-01-17T11:32:04.4416240Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4416290Z         except KeyError:
2025-01-17T11:32:04.4416400Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4416440Z     
2025-01-17T11:32:04.4416500Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4416570Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4416620Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4416730Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4416790Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4416850Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4416930Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4417030Z             else:
2025-01-17T11:32:04.4417100Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4417180Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4417180Z 
2025-01-17T11:32:04.4417270Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4417360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4417520Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4417570Z     ???
2025-01-17T11:32:04.4417650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4417650Z 
2025-01-17T11:32:04.4417700Z >   ???
2025-01-17T11:32:04.4417790Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4417840Z E   
2025-01-17T11:32:04.4417930Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4418010Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4418060Z E          ...
2025-01-17T11:32:04.4418130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4418230Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4418310Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4418360Z E          ...
2025-01-17T11:32:04.4418420Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4418520Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4418600Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4418600Z 
2025-01-17T11:32:04.4418660Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4418870Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] _
2025-01-17T11:32:04.4418870Z 
2025-01-17T11:32:04.4419040Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13367de50>
2025-01-17T11:32:04.4419160Z plasma = <tardis.plasma.base.BasePlasma object at 0x17920f980>
2025-01-17T11:32:04.4419230Z attr = 'lines_lower_level_index'
2025-01-17T11:32:04.4419230Z 
2025-01-17T11:32:04.4419330Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4419420Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4419470Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4419520Z         try:
2025-01-17T11:32:04.4419630Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4419680Z         except KeyError:
2025-01-17T11:32:04.4419780Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4419830Z     
2025-01-17T11:32:04.4419890Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4419950Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4420010Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4420120Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4420170Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4420240Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4420320Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4420330Z 
2025-01-17T11:32:04.4420420Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4420510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4420520Z 
2025-01-17T11:32:04.4420620Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.4420680Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.4420760Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4420820Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.4420920Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.4420980Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.4421060Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4421410Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.4421460Z err_msg = None
2025-01-17T11:32:04.4421460Z 
2025-01-17T11:32:04.4421540Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4421590Z         if err_msg is None:
2025-01-17T11:32:04.4421710Z             if left.shape != right.shape:
2025-01-17T11:32:04.4421770Z                 raise_assert_detail(
2025-01-17T11:32:04.4421880Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4421930Z                 )
2025-01-17T11:32:04.4421970Z     
2025-01-17T11:32:04.4422020Z             diff = 0
2025-01-17T11:32:04.4422100Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4422160Z                 # count up differences
2025-01-17T11:32:04.4422290Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4422350Z                     diff += 1
2025-01-17T11:32:04.4422390Z     
2025-01-17T11:32:04.4422460Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4422560Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4422700Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4422770Z E           AssertionError: Series are different
2025-01-17T11:32:04.4422820Z E           
2025-01-17T11:32:04.4422900Z E           Series values are different (4.04858 %)
2025-01-17T11:32:04.4423210Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4423490Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4423790Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4423790Z 
2025-01-17T11:32:04.4424040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4424240Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] _
2025-01-17T11:32:04.4424250Z 
2025-01-17T11:32:04.4424420Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13367df10>
2025-01-17T11:32:04.4424550Z plasma = <tardis.plasma.base.BasePlasma object at 0x17920f980>
2025-01-17T11:32:04.4424620Z attr = 'lines_upper_level_index'
2025-01-17T11:32:04.4424620Z 
2025-01-17T11:32:04.4424720Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4424810Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4424870Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4424910Z         try:
2025-01-17T11:32:04.4425020Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4425080Z         except KeyError:
2025-01-17T11:32:04.4425180Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4425220Z     
2025-01-17T11:32:04.4425280Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4425350Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4425470Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4425580Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4425640Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4425700Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4426130Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4426130Z 
2025-01-17T11:32:04.4426220Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4426310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4426320Z 
2025-01-17T11:32:04.4426420Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.4426480Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.4426560Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.4426620Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.4426730Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.4426790Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.4426880Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.4426940Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.4426980Z err_msg = None
2025-01-17T11:32:04.4426990Z 
2025-01-17T11:32:04.4427070Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4427120Z         if err_msg is None:
2025-01-17T11:32:04.4427190Z             if left.shape != right.shape:
2025-01-17T11:32:04.4427240Z                 raise_assert_detail(
2025-01-17T11:32:04.4427360Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4427400Z                 )
2025-01-17T11:32:04.4427450Z     
2025-01-17T11:32:04.4427490Z             diff = 0
2025-01-17T11:32:04.4427570Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4427640Z                 # count up differences
2025-01-17T11:32:04.4427770Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4427830Z                     diff += 1
2025-01-17T11:32:04.4427870Z     
2025-01-17T11:32:04.4427930Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4428040Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4428180Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4428250Z E           AssertionError: Series are different
2025-01-17T11:32:04.4428300Z E           
2025-01-17T11:32:04.4428370Z E           Series values are different (6.47773 %)
2025-01-17T11:32:04.4428670Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4428970Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.4429290Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.4429350Z 
2025-01-17T11:32:04.4429600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4429760Z ____ TestPlasma.test_plasma_properties[disable_electron_scattering:True-nu] ____
2025-01-17T11:32:04.4429820Z 
2025-01-17T11:32:04.4429920Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4430030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4430100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4430200Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4430310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4430380Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4430430Z err_msg = None
2025-01-17T11:32:04.4430430Z 
2025-01-17T11:32:04.4430510Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4430570Z         if err_msg is None:
2025-01-17T11:32:04.4430630Z             if left.shape != right.shape:
2025-01-17T11:32:04.4430690Z                 raise_assert_detail(
2025-01-17T11:32:04.4430800Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4430850Z                 )
2025-01-17T11:32:04.4430890Z     
2025-01-17T11:32:04.4430940Z             diff = 0
2025-01-17T11:32:04.4431020Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4431080Z                 # count up differences
2025-01-17T11:32:04.4431220Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4431270Z                     diff += 1
2025-01-17T11:32:04.4431310Z     
2025-01-17T11:32:04.4431370Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4431470Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4431610Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4431700Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4431740Z E           
2025-01-17T11:32:04.4431830Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4432040Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4432250Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4432250Z 
2025-01-17T11:32:04.4432490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4432490Z 
2025-01-17T11:32:04.4432630Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4432630Z 
2025-01-17T11:32:04.4432800Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13367e150>
2025-01-17T11:32:04.4432940Z plasma = <tardis.plasma.base.BasePlasma object at 0x17920f980>, attr = 'nu'
2025-01-17T11:32:04.4432950Z 
2025-01-17T11:32:04.4433050Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4433140Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4433190Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4433240Z         try:
2025-01-17T11:32:04.4433340Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4433440Z         except KeyError:
2025-01-17T11:32:04.4433550Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4433590Z     
2025-01-17T11:32:04.4433650Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4433720Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4433820Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4433930Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4433990Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4434050Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4434130Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4434130Z 
2025-01-17T11:32:04.4434220Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4434310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4434420Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4434470Z     ???
2025-01-17T11:32:04.4434560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4434560Z 
2025-01-17T11:32:04.4434600Z >   ???
2025-01-17T11:32:04.4434690Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4434740Z E   
2025-01-17T11:32:04.4434840Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4434920Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4434970Z E          ...
2025-01-17T11:32:04.4435030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4435130Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4435210Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4435260Z E          ...
2025-01-17T11:32:04.4435320Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4435420Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4435490Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4435500Z 
2025-01-17T11:32:04.4435560Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4435740Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-wavelength_cm] _
2025-01-17T11:32:04.4435740Z 
2025-01-17T11:32:04.4435840Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4435950Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4436020Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4436130Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4436230Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4436300Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4436350Z err_msg = None
2025-01-17T11:32:04.4436350Z 
2025-01-17T11:32:04.4436430Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4436480Z         if err_msg is None:
2025-01-17T11:32:04.4436550Z             if left.shape != right.shape:
2025-01-17T11:32:04.4436610Z                 raise_assert_detail(
2025-01-17T11:32:04.4436720Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4436770Z                 )
2025-01-17T11:32:04.4436810Z     
2025-01-17T11:32:04.4436860Z             diff = 0
2025-01-17T11:32:04.4436940Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4437000Z                 # count up differences
2025-01-17T11:32:04.4437130Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4437180Z                     diff += 1
2025-01-17T11:32:04.4437220Z     
2025-01-17T11:32:04.4437280Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4437460Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4437600Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4437680Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4437730Z E           
2025-01-17T11:32:04.4437850Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4438060Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4438270Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4438280Z 
2025-01-17T11:32:04.4438520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4438520Z 
2025-01-17T11:32:04.4438650Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4438660Z 
2025-01-17T11:32:04.4438820Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13367e210>
2025-01-17T11:32:04.4438940Z plasma = <tardis.plasma.base.BasePlasma object at 0x17920f980>
2025-01-17T11:32:04.4438990Z attr = 'wavelength_cm'
2025-01-17T11:32:04.4439000Z 
2025-01-17T11:32:04.4439100Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4439180Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4439240Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4439290Z         try:
2025-01-17T11:32:04.4439400Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4439450Z         except KeyError:
2025-01-17T11:32:04.4439560Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4439600Z     
2025-01-17T11:32:04.4439660Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4439720Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4439780Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4439880Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4439940Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4440000Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4440080Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4440090Z 
2025-01-17T11:32:04.4440180Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4440260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4440380Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4440420Z     ???
2025-01-17T11:32:04.4440510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4440510Z 
2025-01-17T11:32:04.4440560Z >   ???
2025-01-17T11:32:04.4440650Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4440690Z E   
2025-01-17T11:32:04.4440790Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4440880Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4440920Z E          ...
2025-01-17T11:32:04.4440980Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4441080Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4441160Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4441210Z E          ...
2025-01-17T11:32:04.4441270Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4441410Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4441490Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4441490Z 
2025-01-17T11:32:04.4441550Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4441710Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:True-f_lu] ___
2025-01-17T11:32:04.4441870Z 
2025-01-17T11:32:04.4442010Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4442120Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4442190Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4442300Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4442390Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4442470Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4442520Z err_msg = None
2025-01-17T11:32:04.4442520Z 
2025-01-17T11:32:04.4442600Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4442650Z         if err_msg is None:
2025-01-17T11:32:04.4442720Z             if left.shape != right.shape:
2025-01-17T11:32:04.4442770Z                 raise_assert_detail(
2025-01-17T11:32:04.4442890Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4442930Z                 )
2025-01-17T11:32:04.4442980Z     
2025-01-17T11:32:04.4443020Z             diff = 0
2025-01-17T11:32:04.4443100Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4443160Z                 # count up differences
2025-01-17T11:32:04.4443290Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4443340Z                     diff += 1
2025-01-17T11:32:04.4443380Z     
2025-01-17T11:32:04.4443450Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4443550Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4443690Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4443770Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4443820Z E           
2025-01-17T11:32:04.4443900Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4444110Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4444320Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4444330Z 
2025-01-17T11:32:04.4444560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4444570Z 
2025-01-17T11:32:04.4444700Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4444700Z 
2025-01-17T11:32:04.4444870Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13367e2d0>
2025-01-17T11:32:04.4445020Z plasma = <tardis.plasma.base.BasePlasma object at 0x17920f980>, attr = 'f_lu'
2025-01-17T11:32:04.4445030Z 
2025-01-17T11:32:04.4445130Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4445220Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4445270Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4445320Z         try:
2025-01-17T11:32:04.4445420Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4445520Z         except KeyError:
2025-01-17T11:32:04.4445630Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4445680Z     
2025-01-17T11:32:04.4445740Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4445800Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4445910Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4446010Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4446070Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4446130Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4446210Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4446220Z 
2025-01-17T11:32:04.4446310Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4446400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4446510Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4446550Z     ???
2025-01-17T11:32:04.4446640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4446640Z 
2025-01-17T11:32:04.4446680Z >   ???
2025-01-17T11:32:04.4446780Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4446820Z E   
2025-01-17T11:32:04.4446920Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4447010Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4447060Z E          ...
2025-01-17T11:32:04.4447120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4447220Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4447310Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4447350Z E          ...
2025-01-17T11:32:04.4447420Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4447510Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4447590Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4447590Z 
2025-01-17T11:32:04.4447650Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4447830Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] _
2025-01-17T11:32:04.4447830Z 
2025-01-17T11:32:04.4447930Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4448040Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4448110Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4448210Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4448310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4448380Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4448440Z err_msg = None
2025-01-17T11:32:04.4448440Z 
2025-01-17T11:32:04.4448520Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4448570Z         if err_msg is None:
2025-01-17T11:32:04.4448640Z             if left.shape != right.shape:
2025-01-17T11:32:04.4448690Z                 raise_assert_detail(
2025-01-17T11:32:04.4448810Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4448850Z                 )
2025-01-17T11:32:04.4448890Z     
2025-01-17T11:32:04.4448940Z             diff = 0
2025-01-17T11:32:04.4449020Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4449080Z                 # count up differences
2025-01-17T11:32:04.4449210Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4449260Z                     diff += 1
2025-01-17T11:32:04.4449300Z     
2025-01-17T11:32:04.4449360Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4449510Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4449640Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4449730Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4449780Z E           
2025-01-17T11:32:04.4449910Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4450120Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4450330Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4450340Z 
2025-01-17T11:32:04.4450570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4450580Z 
2025-01-17T11:32:04.4450710Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4450720Z 
2025-01-17T11:32:04.4450880Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13367ea50>
2025-01-17T11:32:04.4451070Z plasma = <tardis.plasma.base.BasePlasma object at 0x17920f980>
2025-01-17T11:32:04.4451120Z attr = 'tau_sobolevs'
2025-01-17T11:32:04.4451120Z 
2025-01-17T11:32:04.4451230Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4451310Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4451370Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4451420Z         try:
2025-01-17T11:32:04.4451530Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4451580Z         except KeyError:
2025-01-17T11:32:04.4451690Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4451740Z     
2025-01-17T11:32:04.4451800Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4451860Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4451920Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4452030Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4452080Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4452140Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4452230Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4452270Z             else:
2025-01-17T11:32:04.4452340Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4452420Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4452420Z 
2025-01-17T11:32:04.4452510Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4452600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4452710Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4452750Z     ???
2025-01-17T11:32:04.4452840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4452840Z 
2025-01-17T11:32:04.4452890Z >   ???
2025-01-17T11:32:04.4452980Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4453020Z E   
2025-01-17T11:32:04.4453120Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4453200Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4453250Z E          ...
2025-01-17T11:32:04.4453310Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4453400Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4453770Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4453810Z E          ...
2025-01-17T11:32:04.4453880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4453970Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4454050Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4454090Z 
2025-01-17T11:32:04.4454150Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4454340Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-beta_sobolev] _
2025-01-17T11:32:04.4454340Z 
2025-01-17T11:32:04.4454470Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4454570Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4454640Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4454740Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4454840Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4454920Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4454970Z err_msg = None
2025-01-17T11:32:04.4454970Z 
2025-01-17T11:32:04.4455050Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4455100Z         if err_msg is None:
2025-01-17T11:32:04.4455170Z             if left.shape != right.shape:
2025-01-17T11:32:04.4455220Z                 raise_assert_detail(
2025-01-17T11:32:04.4455330Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4455380Z                 )
2025-01-17T11:32:04.4455420Z     
2025-01-17T11:32:04.4455470Z             diff = 0
2025-01-17T11:32:04.4455550Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4455610Z                 # count up differences
2025-01-17T11:32:04.4455740Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4455790Z                     diff += 1
2025-01-17T11:32:04.4455840Z     
2025-01-17T11:32:04.4455900Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4456000Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4456140Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4456220Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4456270Z E           
2025-01-17T11:32:04.4456350Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4456550Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4456760Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4456770Z 
2025-01-17T11:32:04.4457010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4457010Z 
2025-01-17T11:32:04.4457140Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4457150Z 
2025-01-17T11:32:04.4457320Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13367eb10>
2025-01-17T11:32:04.4457440Z plasma = <tardis.plasma.base.BasePlasma object at 0x17920f980>
2025-01-17T11:32:04.4457490Z attr = 'beta_sobolev'
2025-01-17T11:32:04.4457490Z 
2025-01-17T11:32:04.4457590Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4457720Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4457780Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4457820Z         try:
2025-01-17T11:32:04.4457930Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4458120Z         except KeyError:
2025-01-17T11:32:04.4458220Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4458270Z     
2025-01-17T11:32:04.4458330Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4458390Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4458450Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4458580Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4458810Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4458890Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4464400Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4464500Z             else:
2025-01-17T11:32:04.4464570Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4464650Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4464650Z 
2025-01-17T11:32:04.4464740Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4464830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4464950Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4464990Z     ???
2025-01-17T11:32:04.4465080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4465080Z 
2025-01-17T11:32:04.4465120Z >   ???
2025-01-17T11:32:04.4465220Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4465260Z E   
2025-01-17T11:32:04.4465360Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4465440Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4465490Z E          ...
2025-01-17T11:32:04.4465550Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4465650Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4465730Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4465780Z E          ...
2025-01-17T11:32:04.4465840Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4465940Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4466010Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4466020Z 
2025-01-17T11:32:04.4466070Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4466240Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-j_blues] __
2025-01-17T11:32:04.4466240Z 
2025-01-17T11:32:04.4466340Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4466450Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4466520Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4466620Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4466720Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4466790Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4466840Z err_msg = None
2025-01-17T11:32:04.4466840Z 
2025-01-17T11:32:04.4466920Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4466980Z         if err_msg is None:
2025-01-17T11:32:04.4467040Z             if left.shape != right.shape:
2025-01-17T11:32:04.4467100Z                 raise_assert_detail(
2025-01-17T11:32:04.4467210Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4467250Z                 )
2025-01-17T11:32:04.4467300Z     
2025-01-17T11:32:04.4467520Z             diff = 0
2025-01-17T11:32:04.4467610Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4467670Z                 # count up differences
2025-01-17T11:32:04.4467800Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4467850Z                     diff += 1
2025-01-17T11:32:04.4467970Z     
2025-01-17T11:32:04.4468030Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4468130Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4468270Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4468350Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4468400Z E           
2025-01-17T11:32:04.4468480Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4468690Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4468900Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4468910Z 
2025-01-17T11:32:04.4469150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4469150Z 
2025-01-17T11:32:04.4469290Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4469290Z 
2025-01-17T11:32:04.4469460Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13367ec90>
2025-01-17T11:32:04.4469620Z plasma = <tardis.plasma.base.BasePlasma object at 0x17920f980>, attr = 'j_blues'
2025-01-17T11:32:04.4469620Z 
2025-01-17T11:32:04.4469730Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4469820Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4469870Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4469920Z         try:
2025-01-17T11:32:04.4470030Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4470080Z         except KeyError:
2025-01-17T11:32:04.4470190Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4470230Z     
2025-01-17T11:32:04.4470290Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4470350Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4470410Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4470510Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4470570Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4470640Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4470720Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4470760Z             else:
2025-01-17T11:32:04.4470830Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4470910Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4470910Z 
2025-01-17T11:32:04.4471010Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4471090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4471210Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4471250Z     ???
2025-01-17T11:32:04.4471340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4471340Z 
2025-01-17T11:32:04.4471390Z >   ???
2025-01-17T11:32:04.4471480Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4471570Z E   
2025-01-17T11:32:04.4471670Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4471750Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4471810Z E          ...
2025-01-17T11:32:04.4471870Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4472010Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4472100Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4472140Z E          ...
2025-01-17T11:32:04.4472210Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4472300Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4472380Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4472380Z 
2025-01-17T11:32:04.4472440Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4472610Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines] __
2025-01-17T11:32:04.4472610Z 
2025-01-17T11:32:04.4472710Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4472820Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4472880Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4472990Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4473090Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4473160Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4473210Z err_msg = None
2025-01-17T11:32:04.4473210Z 
2025-01-17T11:32:04.4473290Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4473340Z         if err_msg is None:
2025-01-17T11:32:04.4473410Z             if left.shape != right.shape:
2025-01-17T11:32:04.4473460Z                 raise_assert_detail(
2025-01-17T11:32:04.4473570Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4473620Z                 )
2025-01-17T11:32:04.4473660Z     
2025-01-17T11:32:04.4473700Z             diff = 0
2025-01-17T11:32:04.4473790Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4473850Z                 # count up differences
2025-01-17T11:32:04.4473980Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4474030Z                     diff += 1
2025-01-17T11:32:04.4474070Z     
2025-01-17T11:32:04.4474130Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4474240Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4474370Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4474450Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4474500Z E           
2025-01-17T11:32:04.4474590Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4474790Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4475000Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4475010Z 
2025-01-17T11:32:04.4475240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4475250Z 
2025-01-17T11:32:04.4475380Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4475540Z 
2025-01-17T11:32:04.4475710Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13367fa10>
2025-01-17T11:32:04.4475870Z plasma = <tardis.plasma.base.BasePlasma object at 0x313da8800>, attr = 'lines'
2025-01-17T11:32:04.4475870Z 
2025-01-17T11:32:04.4476020Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4476110Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4476160Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4476210Z         try:
2025-01-17T11:32:04.4476310Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4476370Z         except KeyError:
2025-01-17T11:32:04.4476480Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4476520Z     
2025-01-17T11:32:04.4476580Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4476640Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4476700Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4476810Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4476860Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4476930Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4477010Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4477060Z             else:
2025-01-17T11:32:04.4477130Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4477210Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4477210Z 
2025-01-17T11:32:04.4477300Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4477390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4477490Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4477540Z     ???
2025-01-17T11:32:04.4477620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4477630Z 
2025-01-17T11:32:04.4477670Z >   ???
2025-01-17T11:32:04.4477770Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4477810Z E   
2025-01-17T11:32:04.4477900Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4477990Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4478030Z E          ...
2025-01-17T11:32:04.4478100Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4478200Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4478280Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4478330Z E          ...
2025-01-17T11:32:04.4478390Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4478480Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4478550Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4478560Z 
2025-01-17T11:32:04.4478620Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4478830Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] _
2025-01-17T11:32:04.4478830Z 
2025-01-17T11:32:04.4479000Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13367fad0>
2025-01-17T11:32:04.4479120Z plasma = <tardis.plasma.base.BasePlasma object at 0x313da8800>
2025-01-17T11:32:04.4479190Z attr = 'lines_lower_level_index'
2025-01-17T11:32:04.4479190Z 
2025-01-17T11:32:04.4479290Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4479380Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4479430Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4479470Z         try:
2025-01-17T11:32:04.4479580Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4479630Z         except KeyError:
2025-01-17T11:32:04.4479740Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4479830Z     
2025-01-17T11:32:04.4479880Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4479950Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4480010Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4480110Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4480340Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4480400Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4480480Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4480490Z 
2025-01-17T11:32:04.4480580Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4480670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4480670Z 
2025-01-17T11:32:04.4480770Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.4480830Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.4480910Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4480970Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.4481080Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.4481140Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.4481230Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4481280Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.4481330Z err_msg = None
2025-01-17T11:32:04.4481330Z 
2025-01-17T11:32:04.4481410Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4481460Z         if err_msg is None:
2025-01-17T11:32:04.4481530Z             if left.shape != right.shape:
2025-01-17T11:32:04.4481580Z                 raise_assert_detail(
2025-01-17T11:32:04.4481690Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4481740Z                 )
2025-01-17T11:32:04.4481780Z     
2025-01-17T11:32:04.4481830Z             diff = 0
2025-01-17T11:32:04.4481910Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4481970Z                 # count up differences
2025-01-17T11:32:04.4482100Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4482150Z                     diff += 1
2025-01-17T11:32:04.4482200Z     
2025-01-17T11:32:04.4482260Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4482360Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4482500Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4482570Z E           AssertionError: Series are different
2025-01-17T11:32:04.4482610Z E           
2025-01-17T11:32:04.4482690Z E           Series values are different (4.04858 %)
2025-01-17T11:32:04.4482990Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4483260Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4483530Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4483580Z 
2025-01-17T11:32:04.4483820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4484030Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] _
2025-01-17T11:32:04.4484070Z 
2025-01-17T11:32:04.4484250Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13367fb90>
2025-01-17T11:32:04.4484370Z plasma = <tardis.plasma.base.BasePlasma object at 0x313da8800>
2025-01-17T11:32:04.4484430Z attr = 'lines_upper_level_index'
2025-01-17T11:32:04.4484430Z 
2025-01-17T11:32:04.4484530Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4484620Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4484680Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4484720Z         try:
2025-01-17T11:32:04.4484830Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4484890Z         except KeyError:
2025-01-17T11:32:04.4484990Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4485030Z     
2025-01-17T11:32:04.4485090Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4485160Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4485220Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4485320Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4485380Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4485440Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4485530Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4485530Z 
2025-01-17T11:32:04.4485620Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4485700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4485710Z 
2025-01-17T11:32:04.4485810Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.4485880Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.4485960Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.4486020Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.4486120Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.4486180Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.4486260Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.4486320Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.4486360Z err_msg = None
2025-01-17T11:32:04.4486360Z 
2025-01-17T11:32:04.4486440Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4486490Z         if err_msg is None:
2025-01-17T11:32:04.4486560Z             if left.shape != right.shape:
2025-01-17T11:32:04.4486620Z                 raise_assert_detail(
2025-01-17T11:32:04.4486730Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4486780Z                 )
2025-01-17T11:32:04.4486820Z     
2025-01-17T11:32:04.4486870Z             diff = 0
2025-01-17T11:32:04.4486960Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4487020Z                 # count up differences
2025-01-17T11:32:04.4487150Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4487200Z                     diff += 1
2025-01-17T11:32:04.4487240Z     
2025-01-17T11:32:04.4487300Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4487410Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4487540Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4487610Z E           AssertionError: Series are different
2025-01-17T11:32:04.4487700Z E           
2025-01-17T11:32:04.4487770Z E           Series values are different (6.47773 %)
2025-01-17T11:32:04.4488080Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4488430Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.4488740Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.4488750Z 
2025-01-17T11:32:04.4488990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4489150Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:False-nu] ____
2025-01-17T11:32:04.4489150Z 
2025-01-17T11:32:04.4489250Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4489350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4489430Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4489530Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4489630Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4489710Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4489780Z err_msg = None
2025-01-17T11:32:04.4489790Z 
2025-01-17T11:32:04.4489870Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4489920Z         if err_msg is None:
2025-01-17T11:32:04.4489980Z             if left.shape != right.shape:
2025-01-17T11:32:04.4490040Z                 raise_assert_detail(
2025-01-17T11:32:04.4490150Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4490200Z                 )
2025-01-17T11:32:04.4490240Z     
2025-01-17T11:32:04.4490280Z             diff = 0
2025-01-17T11:32:04.4490370Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4490420Z                 # count up differences
2025-01-17T11:32:04.4490560Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4490610Z                     diff += 1
2025-01-17T11:32:04.4490650Z     
2025-01-17T11:32:04.4490710Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4490820Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4490950Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4491100Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4491150Z E           
2025-01-17T11:32:04.4491230Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4491440Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4491800Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4491850Z 
2025-01-17T11:32:04.4492080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4492090Z 
2025-01-17T11:32:04.4492220Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4492220Z 
2025-01-17T11:32:04.4492390Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13367fdd0>
2025-01-17T11:32:04.4492540Z plasma = <tardis.plasma.base.BasePlasma object at 0x313da8800>, attr = 'nu'
2025-01-17T11:32:04.4492540Z 
2025-01-17T11:32:04.4492650Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4492730Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4492790Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4492830Z         try:
2025-01-17T11:32:04.4492940Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4493000Z         except KeyError:
2025-01-17T11:32:04.4493100Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4493140Z     
2025-01-17T11:32:04.4493200Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4493270Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4493320Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4493430Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4493480Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4493550Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4493630Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4493630Z 
2025-01-17T11:32:04.4493720Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4493810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4493920Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4493970Z     ???
2025-01-17T11:32:04.4494050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4494060Z 
2025-01-17T11:32:04.4494100Z >   ???
2025-01-17T11:32:04.4494190Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4494230Z E   
2025-01-17T11:32:04.4494330Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4494410Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4494460Z E          ...
2025-01-17T11:32:04.4494520Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4494620Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4494710Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4494750Z E          ...
2025-01-17T11:32:04.4494820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4494910Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4494990Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4494990Z 
2025-01-17T11:32:04.4495050Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4495230Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-wavelength_cm] _
2025-01-17T11:32:04.4495230Z 
2025-01-17T11:32:04.4495330Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4495440Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4495550Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4495660Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4495760Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4496020Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4496070Z err_msg = None
2025-01-17T11:32:04.4496070Z 
2025-01-17T11:32:04.4496150Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4496200Z         if err_msg is None:
2025-01-17T11:32:04.4496270Z             if left.shape != right.shape:
2025-01-17T11:32:04.4496330Z                 raise_assert_detail(
2025-01-17T11:32:04.4496440Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4496480Z                 )
2025-01-17T11:32:04.4496520Z     
2025-01-17T11:32:04.4496570Z             diff = 0
2025-01-17T11:32:04.4496650Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4496720Z                 # count up differences
2025-01-17T11:32:04.4496850Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4496900Z                     diff += 1
2025-01-17T11:32:04.4496940Z     
2025-01-17T11:32:04.4497010Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4497110Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4497240Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4497320Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4497370Z E           
2025-01-17T11:32:04.4497450Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4497660Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4497870Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4497880Z 
2025-01-17T11:32:04.4498110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4498120Z 
2025-01-17T11:32:04.4498240Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4498250Z 
2025-01-17T11:32:04.4498420Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13367fe90>
2025-01-17T11:32:04.4498540Z plasma = <tardis.plasma.base.BasePlasma object at 0x313da8800>
2025-01-17T11:32:04.4498590Z attr = 'wavelength_cm'
2025-01-17T11:32:04.4498590Z 
2025-01-17T11:32:04.4498700Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4498780Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4498830Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4498880Z         try:
2025-01-17T11:32:04.4498990Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4499040Z         except KeyError:
2025-01-17T11:32:04.4499140Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4499190Z     
2025-01-17T11:32:04.4499240Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4499310Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4499370Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4499470Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4499530Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4499640Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4499720Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4499720Z 
2025-01-17T11:32:04.4499810Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4499900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4500050Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4500100Z     ???
2025-01-17T11:32:04.4500180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4500190Z 
2025-01-17T11:32:04.4500230Z >   ???
2025-01-17T11:32:04.4500320Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4500360Z E   
2025-01-17T11:32:04.4500460Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4500540Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4500590Z E          ...
2025-01-17T11:32:04.4500650Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4500750Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4500840Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4500880Z E          ...
2025-01-17T11:32:04.4500950Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4501040Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4501110Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4501120Z 
2025-01-17T11:32:04.4501180Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4501340Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-f_lu] ___
2025-01-17T11:32:04.4501340Z 
2025-01-17T11:32:04.4501440Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4501540Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4501620Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4501720Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4501820Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4501890Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4501940Z err_msg = None
2025-01-17T11:32:04.4501940Z 
2025-01-17T11:32:04.4502020Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4502070Z         if err_msg is None:
2025-01-17T11:32:04.4502140Z             if left.shape != right.shape:
2025-01-17T11:32:04.4502200Z                 raise_assert_detail(
2025-01-17T11:32:04.4502310Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4502350Z                 )
2025-01-17T11:32:04.4502390Z     
2025-01-17T11:32:04.4502440Z             diff = 0
2025-01-17T11:32:04.4502520Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4502590Z                 # count up differences
2025-01-17T11:32:04.4502710Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4502770Z                     diff += 1
2025-01-17T11:32:04.4502810Z     
2025-01-17T11:32:04.4502880Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4502980Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4503110Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4503190Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4503240Z E           
2025-01-17T11:32:04.4503320Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4503530Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4503770Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4503820Z 
2025-01-17T11:32:04.4504060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4504060Z 
2025-01-17T11:32:04.4504190Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4504190Z 
2025-01-17T11:32:04.4504360Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13367ff50>
2025-01-17T11:32:04.4504510Z plasma = <tardis.plasma.base.BasePlasma object at 0x313da8800>, attr = 'f_lu'
2025-01-17T11:32:04.4504520Z 
2025-01-17T11:32:04.4504620Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4504700Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4504760Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4504810Z         try:
2025-01-17T11:32:04.4504920Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4504970Z         except KeyError:
2025-01-17T11:32:04.4505080Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4505120Z     
2025-01-17T11:32:04.4505180Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4505240Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4505300Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4505400Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4505460Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4505520Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4505610Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4505610Z 
2025-01-17T11:32:04.4505700Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4505790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4505900Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4505950Z     ???
2025-01-17T11:32:04.4506030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4506030Z 
2025-01-17T11:32:04.4506080Z >   ???
2025-01-17T11:32:04.4506170Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4506210Z E   
2025-01-17T11:32:04.4506310Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4506390Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4506430Z E          ...
2025-01-17T11:32:04.4506500Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4506600Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4506680Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4506720Z E          ...
2025-01-17T11:32:04.4506790Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4506880Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4506960Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4506960Z 
2025-01-17T11:32:04.4507020Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4507200Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] _
2025-01-17T11:32:04.4507200Z 
2025-01-17T11:32:04.4507300Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4507400Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4507680Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4507780Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4507880Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4508000Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4508050Z err_msg = None
2025-01-17T11:32:04.4508050Z 
2025-01-17T11:32:04.4508130Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4508180Z         if err_msg is None:
2025-01-17T11:32:04.4508250Z             if left.shape != right.shape:
2025-01-17T11:32:04.4508300Z                 raise_assert_detail(
2025-01-17T11:32:04.4508410Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4508450Z                 )
2025-01-17T11:32:04.4508500Z     
2025-01-17T11:32:04.4508540Z             diff = 0
2025-01-17T11:32:04.4508630Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4508690Z                 # count up differences
2025-01-17T11:32:04.4508820Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4508870Z                     diff += 1
2025-01-17T11:32:04.4508920Z     
2025-01-17T11:32:04.4508970Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4509080Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4509210Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4509300Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4509340Z E           
2025-01-17T11:32:04.4509420Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4509680Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4509950Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4509960Z 
2025-01-17T11:32:04.4510200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4510200Z 
2025-01-17T11:32:04.4510350Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4510360Z 
2025-01-17T11:32:04.4510620Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336a4710>
2025-01-17T11:32:04.4510740Z plasma = <tardis.plasma.base.BasePlasma object at 0x313da8800>
2025-01-17T11:32:04.4526570Z attr = 'tau_sobolevs'
2025-01-17T11:32:04.4526600Z 
2025-01-17T11:32:04.4526740Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4526830Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4526890Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4526950Z         try:
2025-01-17T11:32:04.4527060Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4527110Z         except KeyError:
2025-01-17T11:32:04.4527220Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4527260Z     
2025-01-17T11:32:04.4527320Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4527380Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4527440Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4527550Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4527600Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4527870Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4527950Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4528000Z             else:
2025-01-17T11:32:04.4528070Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4528140Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4528460Z 
2025-01-17T11:32:04.4528560Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4528650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4528770Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4528810Z     ???
2025-01-17T11:32:04.4528900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4528910Z 
2025-01-17T11:32:04.4528950Z >   ???
2025-01-17T11:32:04.4529040Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4529080Z E   
2025-01-17T11:32:04.4529180Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4529270Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4529310Z E          ...
2025-01-17T11:32:04.4529370Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4529470Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4529560Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4529600Z E          ...
2025-01-17T11:32:04.4529660Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4529760Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4529830Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4529830Z 
2025-01-17T11:32:04.4529890Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4530070Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-beta_sobolev] _
2025-01-17T11:32:04.4530080Z 
2025-01-17T11:32:04.4530180Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4530290Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4530360Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4530470Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4530570Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4530640Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4530680Z err_msg = None
2025-01-17T11:32:04.4530690Z 
2025-01-17T11:32:04.4530760Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4530820Z         if err_msg is None:
2025-01-17T11:32:04.4530880Z             if left.shape != right.shape:
2025-01-17T11:32:04.4530930Z                 raise_assert_detail(
2025-01-17T11:32:04.4531050Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4531160Z                 )
2025-01-17T11:32:04.4531200Z     
2025-01-17T11:32:04.4531250Z             diff = 0
2025-01-17T11:32:04.4531330Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4531390Z                 # count up differences
2025-01-17T11:32:04.4531520Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4531580Z                     diff += 1
2025-01-17T11:32:04.4531620Z     
2025-01-17T11:32:04.4531680Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4531780Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4531910Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4532000Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4532040Z E           
2025-01-17T11:32:04.4532180Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4532400Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4532650Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4532650Z 
2025-01-17T11:32:04.4532900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4532900Z 
2025-01-17T11:32:04.4533030Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4533040Z 
2025-01-17T11:32:04.4533210Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336a47d0>
2025-01-17T11:32:04.4533330Z plasma = <tardis.plasma.base.BasePlasma object at 0x313da8800>
2025-01-17T11:32:04.4533380Z attr = 'beta_sobolev'
2025-01-17T11:32:04.4533380Z 
2025-01-17T11:32:04.4533480Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4533570Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4533620Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4533660Z         try:
2025-01-17T11:32:04.4533770Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4533820Z         except KeyError:
2025-01-17T11:32:04.4533930Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4533970Z     
2025-01-17T11:32:04.4534020Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4534090Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4534150Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4534250Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4534300Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4534370Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4534450Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4534490Z             else:
2025-01-17T11:32:04.4534560Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4534630Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4534640Z 
2025-01-17T11:32:04.4534730Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4534810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4534920Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4534960Z     ???
2025-01-17T11:32:04.4535050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4535050Z 
2025-01-17T11:32:04.4535090Z >   ???
2025-01-17T11:32:04.4535190Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4535230Z E   
2025-01-17T11:32:04.4535320Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4535410Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4535450Z E          ...
2025-01-17T11:32:04.4535510Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4535610Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4535690Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4535730Z E          ...
2025-01-17T11:32:04.4535790Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4535880Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4535960Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4536000Z 
2025-01-17T11:32:04.4536060Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4536230Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-j_blues] _
2025-01-17T11:32:04.4536230Z 
2025-01-17T11:32:04.4536330Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4536480Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4536550Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4536650Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4536750Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4536820Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4536870Z err_msg = None
2025-01-17T11:32:04.4536870Z 
2025-01-17T11:32:04.4536940Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4537000Z         if err_msg is None:
2025-01-17T11:32:04.4537060Z             if left.shape != right.shape:
2025-01-17T11:32:04.4537120Z                 raise_assert_detail(
2025-01-17T11:32:04.4537230Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4537280Z                 )
2025-01-17T11:32:04.4537320Z     
2025-01-17T11:32:04.4537360Z             diff = 0
2025-01-17T11:32:04.4537440Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4537500Z                 # count up differences
2025-01-17T11:32:04.4537630Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4537680Z                     diff += 1
2025-01-17T11:32:04.4537730Z     
2025-01-17T11:32:04.4537780Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4537890Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4538020Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4538120Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4538160Z E           
2025-01-17T11:32:04.4538240Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4538440Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4538660Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4538660Z 
2025-01-17T11:32:04.4538900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4538900Z 
2025-01-17T11:32:04.4539040Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4539040Z 
2025-01-17T11:32:04.4539210Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336a4950>
2025-01-17T11:32:04.4539370Z plasma = <tardis.plasma.base.BasePlasma object at 0x313da8800>, attr = 'j_blues'
2025-01-17T11:32:04.4539370Z 
2025-01-17T11:32:04.4539470Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4539560Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4539610Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4539660Z         try:
2025-01-17T11:32:04.4539760Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4539810Z         except KeyError:
2025-01-17T11:32:04.4539920Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4540260Z     
2025-01-17T11:32:04.4540320Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4540380Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4540440Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4540540Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4540650Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4540710Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4540800Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4540840Z             else:
2025-01-17T11:32:04.4540910Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4540980Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4540990Z 
2025-01-17T11:32:04.4541080Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4541160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4541270Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4541320Z     ???
2025-01-17T11:32:04.4541400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4541400Z 
2025-01-17T11:32:04.4541450Z >   ???
2025-01-17T11:32:04.4541540Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4541580Z E   
2025-01-17T11:32:04.4541680Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4541760Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4541800Z E          ...
2025-01-17T11:32:04.4541860Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4541960Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4542040Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4542080Z E          ...
2025-01-17T11:32:04.4542140Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4542230Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4542310Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4542310Z 
2025-01-17T11:32:04.4542370Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4542580Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] _
2025-01-17T11:32:04.4542590Z 
2025-01-17T11:32:04.4542680Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4542790Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4542850Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4542960Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4543050Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4543130Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4543170Z err_msg = None
2025-01-17T11:32:04.4543180Z 
2025-01-17T11:32:04.4543250Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4543300Z         if err_msg is None:
2025-01-17T11:32:04.4543370Z             if left.shape != right.shape:
2025-01-17T11:32:04.4543420Z                 raise_assert_detail(
2025-01-17T11:32:04.4543540Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4543580Z                 )
2025-01-17T11:32:04.4543620Z     
2025-01-17T11:32:04.4543660Z             diff = 0
2025-01-17T11:32:04.4543740Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4543800Z                 # count up differences
2025-01-17T11:32:04.4543940Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4543990Z                     diff += 1
2025-01-17T11:32:04.4544080Z     
2025-01-17T11:32:04.4544140Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4544250Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4544380Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4544460Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4544630Z E           
2025-01-17T11:32:04.4544710Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4544910Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4545130Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4545130Z 
2025-01-17T11:32:04.4545370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4545370Z 
2025-01-17T11:32:04.4545510Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4545510Z 
2025-01-17T11:32:04.4545680Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336a56d0>
2025-01-17T11:32:04.4545830Z plasma = <tardis.plasma.base.BasePlasma object at 0x1369e6450>, attr = 'lines'
2025-01-17T11:32:04.4545840Z 
2025-01-17T11:32:04.4545930Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4546020Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4546070Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4546120Z         try:
2025-01-17T11:32:04.4546220Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4546270Z         except KeyError:
2025-01-17T11:32:04.4546380Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4546420Z     
2025-01-17T11:32:04.4546470Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4546540Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4546600Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4546710Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4546760Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4546820Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4546900Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4546940Z             else:
2025-01-17T11:32:04.4547010Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4547090Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4547090Z 
2025-01-17T11:32:04.4547180Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4547270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4547380Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4547420Z     ???
2025-01-17T11:32:04.4547510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4547510Z 
2025-01-17T11:32:04.4547560Z >   ???
2025-01-17T11:32:04.4547650Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4547690Z E   
2025-01-17T11:32:04.4547780Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4547860Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4547900Z E          ...
2025-01-17T11:32:04.4547970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4548060Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4548200Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4548240Z E          ...
2025-01-17T11:32:04.4548300Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4548400Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4548510Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4548520Z 
2025-01-17T11:32:04.4548580Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4548820Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] _
2025-01-17T11:32:04.4548830Z 
2025-01-17T11:32:04.4549000Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336a5790>
2025-01-17T11:32:04.4549120Z plasma = <tardis.plasma.base.BasePlasma object at 0x1369e6450>
2025-01-17T11:32:04.4549180Z attr = 'lines_lower_level_index'
2025-01-17T11:32:04.4549180Z 
2025-01-17T11:32:04.4549280Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4549370Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4549420Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4549460Z         try:
2025-01-17T11:32:04.4549570Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4549630Z         except KeyError:
2025-01-17T11:32:04.4549730Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4549770Z     
2025-01-17T11:32:04.4549830Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4549890Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4549950Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4550050Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4550110Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4550170Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4550250Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4550250Z 
2025-01-17T11:32:04.4550340Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4550430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4550440Z 
2025-01-17T11:32:04.4550540Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.4550600Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.4550690Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4550740Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.4550850Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.4550910Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.4550980Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4551040Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.4551090Z err_msg = None
2025-01-17T11:32:04.4551090Z 
2025-01-17T11:32:04.4551170Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4551220Z         if err_msg is None:
2025-01-17T11:32:04.4551280Z             if left.shape != right.shape:
2025-01-17T11:32:04.4551340Z                 raise_assert_detail(
2025-01-17T11:32:04.4551450Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4551490Z                 )
2025-01-17T11:32:04.4551540Z     
2025-01-17T11:32:04.4551580Z             diff = 0
2025-01-17T11:32:04.4551660Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4551720Z                 # count up differences
2025-01-17T11:32:04.4551850Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4551900Z                     diff += 1
2025-01-17T11:32:04.4551940Z     
2025-01-17T11:32:04.4552000Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4552100Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4552280Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4552350Z E           AssertionError: Series are different
2025-01-17T11:32:04.4552390Z E           
2025-01-17T11:32:04.4552460Z E           Series values are different (4.04858 %)
2025-01-17T11:32:04.4552810Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4553080Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4553360Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4553360Z 
2025-01-17T11:32:04.4553600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4553850Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] _
2025-01-17T11:32:04.4553850Z 
2025-01-17T11:32:04.4554020Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336a5850>
2025-01-17T11:32:04.4554140Z plasma = <tardis.plasma.base.BasePlasma object at 0x1369e6450>
2025-01-17T11:32:04.4554210Z attr = 'lines_upper_level_index'
2025-01-17T11:32:04.4554210Z 
2025-01-17T11:32:04.4554310Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4554390Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4554450Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4554500Z         try:
2025-01-17T11:32:04.4554600Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4554650Z         except KeyError:
2025-01-17T11:32:04.4554760Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4554800Z     
2025-01-17T11:32:04.4554850Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4554910Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4554970Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4555070Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4555130Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4555190Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4555270Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4555280Z 
2025-01-17T11:32:04.4555360Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4555450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4555450Z 
2025-01-17T11:32:04.4555560Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.4555610Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.4555690Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.4555750Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.4555850Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.4556080Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.4556160Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.4556220Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.4556270Z err_msg = None
2025-01-17T11:32:04.4556270Z 
2025-01-17T11:32:04.4556340Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4556440Z         if err_msg is None:
2025-01-17T11:32:04.4556500Z             if left.shape != right.shape:
2025-01-17T11:32:04.4556560Z                 raise_assert_detail(
2025-01-17T11:32:04.4556670Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4556710Z                 )
2025-01-17T11:32:04.4556760Z     
2025-01-17T11:32:04.4556800Z             diff = 0
2025-01-17T11:32:04.4556880Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4556940Z                 # count up differences
2025-01-17T11:32:04.4557070Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4557120Z                     diff += 1
2025-01-17T11:32:04.4557160Z     
2025-01-17T11:32:04.4557220Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4557340Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4557490Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4557560Z E           AssertionError: Series are different
2025-01-17T11:32:04.4557610Z E           
2025-01-17T11:32:04.4557680Z E           Series values are different (6.47773 %)
2025-01-17T11:32:04.4557970Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4558270Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.4558580Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.4558590Z 
2025-01-17T11:32:04.4558830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4559030Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] _
2025-01-17T11:32:04.4559040Z 
2025-01-17T11:32:04.4559140Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4559240Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4559320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4559420Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4559510Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4559580Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4559630Z err_msg = None
2025-01-17T11:32:04.4559640Z 
2025-01-17T11:32:04.4559800Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4559850Z         if err_msg is None:
2025-01-17T11:32:04.4559910Z             if left.shape != right.shape:
2025-01-17T11:32:04.4559970Z                 raise_assert_detail(
2025-01-17T11:32:04.4560080Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4560190Z                 )
2025-01-17T11:32:04.4560230Z     
2025-01-17T11:32:04.4560270Z             diff = 0
2025-01-17T11:32:04.4560350Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4560410Z                 # count up differences
2025-01-17T11:32:04.4560550Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4560590Z                     diff += 1
2025-01-17T11:32:04.4560640Z     
2025-01-17T11:32:04.4560690Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4560800Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4560930Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4561010Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4561060Z E           
2025-01-17T11:32:04.4561140Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4561350Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4561560Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4561560Z 
2025-01-17T11:32:04.4561800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4561800Z 
2025-01-17T11:32:04.4561930Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4561940Z 
2025-01-17T11:32:04.4562110Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336a5a90>
2025-01-17T11:32:04.4562250Z plasma = <tardis.plasma.base.BasePlasma object at 0x1369e6450>, attr = 'nu'
2025-01-17T11:32:04.4562250Z 
2025-01-17T11:32:04.4562360Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4562440Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4562490Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4562540Z         try:
2025-01-17T11:32:04.4562640Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4562690Z         except KeyError:
2025-01-17T11:32:04.4562800Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4562850Z     
2025-01-17T11:32:04.4562900Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4562970Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4563020Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4563130Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4563180Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4563250Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4563330Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4563330Z 
2025-01-17T11:32:04.4563420Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4563500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4563610Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4563650Z     ???
2025-01-17T11:32:04.4563740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4563780Z 
2025-01-17T11:32:04.4563820Z >   ???
2025-01-17T11:32:04.4563920Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4563960Z E   
2025-01-17T11:32:04.4564050Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4564180Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4564220Z E          ...
2025-01-17T11:32:04.4564280Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4564380Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4564460Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4564500Z E          ...
2025-01-17T11:32:04.4564560Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4564660Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4564730Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4564740Z 
2025-01-17T11:32:04.4564790Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4565020Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] _
2025-01-17T11:32:04.4565020Z 
2025-01-17T11:32:04.4565120Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4565220Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4565290Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4565390Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4565490Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4565560Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4565600Z err_msg = None
2025-01-17T11:32:04.4565610Z 
2025-01-17T11:32:04.4565690Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4565740Z         if err_msg is None:
2025-01-17T11:32:04.4565800Z             if left.shape != right.shape:
2025-01-17T11:32:04.4565850Z                 raise_assert_detail(
2025-01-17T11:32:04.4565960Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4566010Z                 )
2025-01-17T11:32:04.4566050Z     
2025-01-17T11:32:04.4566100Z             diff = 0
2025-01-17T11:32:04.4566180Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4566240Z                 # count up differences
2025-01-17T11:32:04.4566370Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4566420Z                     diff += 1
2025-01-17T11:32:04.4566460Z     
2025-01-17T11:32:04.4566520Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4566620Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4566750Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4566830Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4566880Z E           
2025-01-17T11:32:04.4566960Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4567170Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4567400Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4567470Z 
2025-01-17T11:32:04.4567710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4567720Z 
2025-01-17T11:32:04.4567840Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4567900Z 
2025-01-17T11:32:04.4568060Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336a5b50>
2025-01-17T11:32:04.4568190Z plasma = <tardis.plasma.base.BasePlasma object at 0x1369e6450>
2025-01-17T11:32:04.4568240Z attr = 'wavelength_cm'
2025-01-17T11:32:04.4568240Z 
2025-01-17T11:32:04.4568340Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4568420Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4568480Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4568520Z         try:
2025-01-17T11:32:04.4568630Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4568690Z         except KeyError:
2025-01-17T11:32:04.4568790Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4568830Z     
2025-01-17T11:32:04.4568890Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4568950Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4569010Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4569110Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4569170Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4569230Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4569310Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4569310Z 
2025-01-17T11:32:04.4569400Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4569480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4569590Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4569640Z     ???
2025-01-17T11:32:04.4569720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4569720Z 
2025-01-17T11:32:04.4569760Z >   ???
2025-01-17T11:32:04.4569860Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4569900Z E   
2025-01-17T11:32:04.4569990Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4570070Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4570120Z E          ...
2025-01-17T11:32:04.4570180Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4570270Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4570360Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4570400Z E          ...
2025-01-17T11:32:04.4570460Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4570550Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4570630Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4570630Z 
2025-01-17T11:32:04.4570690Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4570890Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] _
2025-01-17T11:32:04.4570900Z 
2025-01-17T11:32:04.4571000Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4571100Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4571230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4571340Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4571440Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4571510Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4571560Z err_msg = None
2025-01-17T11:32:04.4571830Z 
2025-01-17T11:32:04.4571910Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4571970Z         if err_msg is None:
2025-01-17T11:32:04.4576640Z             if left.shape != right.shape:
2025-01-17T11:32:04.4576720Z                 raise_assert_detail(
2025-01-17T11:32:04.4576940Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4576990Z                 )
2025-01-17T11:32:04.4577030Z     
2025-01-17T11:32:04.4577070Z             diff = 0
2025-01-17T11:32:04.4577150Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4577210Z                 # count up differences
2025-01-17T11:32:04.4577350Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4577400Z                     diff += 1
2025-01-17T11:32:04.4577440Z     
2025-01-17T11:32:04.4577500Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4577600Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4577740Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4577820Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4577860Z E           
2025-01-17T11:32:04.4577940Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4578150Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4578360Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4578360Z 
2025-01-17T11:32:04.4578610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4578620Z 
2025-01-17T11:32:04.4578750Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4578750Z 
2025-01-17T11:32:04.4578920Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336a5c10>
2025-01-17T11:32:04.4579080Z plasma = <tardis.plasma.base.BasePlasma object at 0x1369e6450>, attr = 'f_lu'
2025-01-17T11:32:04.4579080Z 
2025-01-17T11:32:04.4579180Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4579270Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4579320Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4579360Z         try:
2025-01-17T11:32:04.4579470Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4579520Z         except KeyError:
2025-01-17T11:32:04.4579630Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4579670Z     
2025-01-17T11:32:04.4579730Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4579790Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4579860Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4579960Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4580010Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4580070Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4580160Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4580160Z 
2025-01-17T11:32:04.4580250Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4580330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4580440Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4580540Z     ???
2025-01-17T11:32:04.4580630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4580630Z 
2025-01-17T11:32:04.4580670Z >   ???
2025-01-17T11:32:04.4580760Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4580800Z E   
2025-01-17T11:32:04.4581230Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4581310Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4581350Z E          ...
2025-01-17T11:32:04.4581410Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4581510Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4581610Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4581670Z E          ...
2025-01-17T11:32:04.4581730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4581820Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4581900Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4581900Z 
2025-01-17T11:32:04.4581960Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4582210Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] _
2025-01-17T11:32:04.4582220Z 
2025-01-17T11:32:04.4582390Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336a6210>
2025-01-17T11:32:04.4582510Z plasma = <tardis.plasma.base.BasePlasma object at 0x1369e6450>
2025-01-17T11:32:04.4582570Z attr = 'stimulated_emission_factor'
2025-01-17T11:32:04.4582570Z 
2025-01-17T11:32:04.4582670Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4582760Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4582810Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4582850Z         try:
2025-01-17T11:32:04.4582960Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4583010Z         except KeyError:
2025-01-17T11:32:04.4583110Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4583160Z     
2025-01-17T11:32:04.4583210Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4583280Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4583330Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4583440Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4583500Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4583560Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4583640Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4583680Z             else:
2025-01-17T11:32:04.4583740Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4583820Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4583830Z 
2025-01-17T11:32:04.4583910Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4584000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4584110Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4584150Z     ???
2025-01-17T11:32:04.4584240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4584240Z 
2025-01-17T11:32:04.4584280Z >   ???
2025-01-17T11:32:04.4584420Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:32:04.4584460Z E   
2025-01-17T11:32:04.4584590Z E   DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-01-17T11:32:04.4584890Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4588570Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464476, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812783, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235581, ...]
2025-01-17T11:32:04.4592310Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-01-17T11:32:04.4592470Z E   At positional index 124, first diff: 0.9929028359129612 != 0.9928779361771577
2025-01-17T11:32:04.4592480Z 
2025-01-17T11:32:04.4592530Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4592770Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] _
2025-01-17T11:32:04.4592780Z 
2025-01-17T11:32:04.4592920Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4593020Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4593100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4593250Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4593350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4593420Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4593470Z err_msg = None
2025-01-17T11:32:04.4593470Z 
2025-01-17T11:32:04.4593550Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4593600Z         if err_msg is None:
2025-01-17T11:32:04.4593660Z             if left.shape != right.shape:
2025-01-17T11:32:04.4593720Z                 raise_assert_detail(
2025-01-17T11:32:04.4593830Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4593880Z                 )
2025-01-17T11:32:04.4593920Z     
2025-01-17T11:32:04.4593960Z             diff = 0
2025-01-17T11:32:04.4594040Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4594100Z                 # count up differences
2025-01-17T11:32:04.4594230Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4594280Z                     diff += 1
2025-01-17T11:32:04.4594320Z     
2025-01-17T11:32:04.4594380Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4594490Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4594620Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4594700Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4594740Z E           
2025-01-17T11:32:04.4594830Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4595030Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4595240Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4595250Z 
2025-01-17T11:32:04.4595490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4595490Z 
2025-01-17T11:32:04.4595620Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4595630Z 
2025-01-17T11:32:04.4595790Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336a62d0>
2025-01-17T11:32:04.4595910Z plasma = <tardis.plasma.base.BasePlasma object at 0x1369e6450>
2025-01-17T11:32:04.4595970Z attr = 'previous_beta_sobolev'
2025-01-17T11:32:04.4595980Z 
2025-01-17T11:32:04.4596080Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4596160Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4596220Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4596260Z         try:
2025-01-17T11:32:04.4596370Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4596420Z         except KeyError:
2025-01-17T11:32:04.4596520Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4596560Z     
2025-01-17T11:32:04.4596620Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4596680Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4596880Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4596990Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4597040Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4597100Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4597230Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4597270Z             else:
2025-01-17T11:32:04.4597340Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4597410Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4597420Z 
2025-01-17T11:32:04.4597510Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4597590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4597700Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4597740Z     ???
2025-01-17T11:32:04.4597830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4597830Z 
2025-01-17T11:32:04.4597870Z >   ???
2025-01-17T11:32:04.4597970Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4598010Z E   
2025-01-17T11:32:04.4598100Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4598190Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4598230Z E          ...
2025-01-17T11:32:04.4598290Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4598380Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4598470Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4598510Z E          ...
2025-01-17T11:32:04.4598570Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4598670Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4598740Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4598750Z 
2025-01-17T11:32:04.4598800Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4599020Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] _
2025-01-17T11:32:04.4599030Z 
2025-01-17T11:32:04.4599130Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4599230Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4599300Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4599400Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4599500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4599570Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4599610Z err_msg = None
2025-01-17T11:32:04.4599620Z 
2025-01-17T11:32:04.4599690Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4599750Z         if err_msg is None:
2025-01-17T11:32:04.4599810Z             if left.shape != right.shape:
2025-01-17T11:32:04.4599870Z                 raise_assert_detail(
2025-01-17T11:32:04.4599980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4600020Z                 )
2025-01-17T11:32:04.4600060Z     
2025-01-17T11:32:04.4600110Z             diff = 0
2025-01-17T11:32:04.4600190Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4600240Z                 # count up differences
2025-01-17T11:32:04.4600370Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4600420Z                     diff += 1
2025-01-17T11:32:04.4600460Z     
2025-01-17T11:32:04.4600530Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4600630Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4600810Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4600900Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4600940Z E           
2025-01-17T11:32:04.4601020Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4601350Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4601560Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4601560Z 
2025-01-17T11:32:04.4601800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4601800Z 
2025-01-17T11:32:04.4601930Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4601940Z 
2025-01-17T11:32:04.4602100Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336a6390>
2025-01-17T11:32:04.4602220Z plasma = <tardis.plasma.base.BasePlasma object at 0x1369e6450>
2025-01-17T11:32:04.4602270Z attr = 'tau_sobolevs'
2025-01-17T11:32:04.4602270Z 
2025-01-17T11:32:04.4602380Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4602460Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4602510Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4602560Z         try:
2025-01-17T11:32:04.4602660Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4602710Z         except KeyError:
2025-01-17T11:32:04.4602820Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4602860Z     
2025-01-17T11:32:04.4602920Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4602980Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4603040Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4603150Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4603210Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4603270Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4603350Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4603390Z             else:
2025-01-17T11:32:04.4603460Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4603540Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4603540Z 
2025-01-17T11:32:04.4603630Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4603710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4603830Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4603870Z     ???
2025-01-17T11:32:04.4603950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4603960Z 
2025-01-17T11:32:04.4604000Z >   ???
2025-01-17T11:32:04.4604090Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4604140Z E   
2025-01-17T11:32:04.4604230Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4604310Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4604350Z E          ...
2025-01-17T11:32:04.4604420Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4604510Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4604590Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4604630Z E          ...
2025-01-17T11:32:04.4604740Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4604830Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4604910Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4604910Z 
2025-01-17T11:32:04.4604970Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4605230Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] _
2025-01-17T11:32:04.4605230Z 
2025-01-17T11:32:04.4605330Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4605430Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4605500Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4605600Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4605700Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4605770Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4605820Z err_msg = None
2025-01-17T11:32:04.4605820Z 
2025-01-17T11:32:04.4605900Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4605950Z         if err_msg is None:
2025-01-17T11:32:04.4606020Z             if left.shape != right.shape:
2025-01-17T11:32:04.4606070Z                 raise_assert_detail(
2025-01-17T11:32:04.4606180Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4606220Z                 )
2025-01-17T11:32:04.4606260Z     
2025-01-17T11:32:04.4606310Z             diff = 0
2025-01-17T11:32:04.4606390Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4606450Z                 # count up differences
2025-01-17T11:32:04.4606580Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4606630Z                     diff += 1
2025-01-17T11:32:04.4606670Z     
2025-01-17T11:32:04.4606730Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4606830Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4606960Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4607050Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4607090Z E           
2025-01-17T11:32:04.4607170Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4607380Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4607580Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4607590Z 
2025-01-17T11:32:04.4607830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4607830Z 
2025-01-17T11:32:04.4607960Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4607970Z 
2025-01-17T11:32:04.4608130Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336a6450>
2025-01-17T11:32:04.4608250Z plasma = <tardis.plasma.base.BasePlasma object at 0x1369e6450>
2025-01-17T11:32:04.4608300Z attr = 'beta_sobolev'
2025-01-17T11:32:04.4608300Z 
2025-01-17T11:32:04.4608400Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4608480Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4608580Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4608620Z         try:
2025-01-17T11:32:04.4608730Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4608780Z         except KeyError:
2025-01-17T11:32:04.4608880Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4608960Z     
2025-01-17T11:32:04.4609020Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4609090Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4609140Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4609250Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4609300Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4609360Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4609450Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4609490Z             else:
2025-01-17T11:32:04.4609560Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4609630Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4609640Z 
2025-01-17T11:32:04.4609730Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4609810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4609930Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4609970Z     ???
2025-01-17T11:32:04.4610050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4610050Z 
2025-01-17T11:32:04.4610090Z >   ???
2025-01-17T11:32:04.4610190Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4610230Z E   
2025-01-17T11:32:04.4610320Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4610400Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4610450Z E          ...
2025-01-17T11:32:04.4610510Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4610600Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4610690Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4610730Z E          ...
2025-01-17T11:32:04.4610790Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4610890Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4610960Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4610960Z 
2025-01-17T11:32:04.4611020Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4611290Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] _
2025-01-17T11:32:04.4611300Z 
2025-01-17T11:32:04.4611400Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4611500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4611570Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4611670Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4611770Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4611840Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4611890Z err_msg = None
2025-01-17T11:32:04.4611890Z 
2025-01-17T11:32:04.4611970Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4612020Z         if err_msg is None:
2025-01-17T11:32:04.4612080Z             if left.shape != right.shape:
2025-01-17T11:32:04.4612140Z                 raise_assert_detail(
2025-01-17T11:32:04.4612250Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4612290Z                 )
2025-01-17T11:32:04.4612330Z     
2025-01-17T11:32:04.4612380Z             diff = 0
2025-01-17T11:32:04.4612460Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4612750Z                 # count up differences
2025-01-17T11:32:04.4612880Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4612930Z                     diff += 1
2025-01-17T11:32:04.4612970Z     
2025-01-17T11:32:04.4613070Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4613170Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4613300Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4613380Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4613420Z E           
2025-01-17T11:32:04.4613500Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4613710Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4613920Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4613930Z 
2025-01-17T11:32:04.4614160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4614170Z 
2025-01-17T11:32:04.4614290Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4614300Z 
2025-01-17T11:32:04.4614470Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336a65d0>
2025-01-17T11:32:04.4614620Z plasma = <tardis.plasma.base.BasePlasma object at 0x1369e6450>, attr = 'j_blues'
2025-01-17T11:32:04.4614630Z 
2025-01-17T11:32:04.4614730Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4614810Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4614870Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4614910Z         try:
2025-01-17T11:32:04.4615020Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4615070Z         except KeyError:
2025-01-17T11:32:04.4615170Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4615210Z     
2025-01-17T11:32:04.4615270Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4615330Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4615390Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4615490Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4615550Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4615610Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4615690Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4615730Z             else:
2025-01-17T11:32:04.4615800Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4615880Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4615880Z 
2025-01-17T11:32:04.4615970Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4616050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4616160Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4616210Z     ???
2025-01-17T11:32:04.4616290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4616290Z 
2025-01-17T11:32:04.4616330Z >   ???
2025-01-17T11:32:04.4616430Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4616470Z E   
2025-01-17T11:32:04.4616570Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4616690Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4616740Z E          ...
2025-01-17T11:32:04.4616800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4616890Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4617110Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4617150Z E          ...
2025-01-17T11:32:04.4617210Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4617300Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4617380Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4617380Z 
2025-01-17T11:32:04.4617440Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4617640Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] _
2025-01-17T11:32:04.4617640Z 
2025-01-17T11:32:04.4617740Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4617850Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4617920Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4618020Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4618120Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4618190Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4618230Z err_msg = None
2025-01-17T11:32:04.4618240Z 
2025-01-17T11:32:04.4618320Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4618370Z         if err_msg is None:
2025-01-17T11:32:04.4618430Z             if left.shape != right.shape:
2025-01-17T11:32:04.4618490Z                 raise_assert_detail(
2025-01-17T11:32:04.4618600Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4618640Z                 )
2025-01-17T11:32:04.4618680Z     
2025-01-17T11:32:04.4618730Z             diff = 0
2025-01-17T11:32:04.4618810Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4618860Z                 # count up differences
2025-01-17T11:32:04.4619000Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4619050Z                     diff += 1
2025-01-17T11:32:04.4619090Z     
2025-01-17T11:32:04.4619150Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4619250Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4619380Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4619460Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4619510Z E           
2025-01-17T11:32:04.4619590Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4619790Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4620000Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4620010Z 
2025-01-17T11:32:04.4620240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4620240Z 
2025-01-17T11:32:04.4620370Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4620420Z 
2025-01-17T11:32:04.4620590Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336a7350>
2025-01-17T11:32:04.4620740Z plasma = <tardis.plasma.base.BasePlasma object at 0x313cdf980>, attr = 'lines'
2025-01-17T11:32:04.4620740Z 
2025-01-17T11:32:04.4620850Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4620970Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4621030Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4621070Z         try:
2025-01-17T11:32:04.4621170Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4621230Z         except KeyError:
2025-01-17T11:32:04.4621330Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4621370Z     
2025-01-17T11:32:04.4621430Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4621490Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4621550Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4621660Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4621710Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4621780Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4621860Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4621900Z             else:
2025-01-17T11:32:04.4621970Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4622050Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4622050Z 
2025-01-17T11:32:04.4622140Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4622220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4622330Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4622380Z     ???
2025-01-17T11:32:04.4622460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4622460Z 
2025-01-17T11:32:04.4622500Z >   ???
2025-01-17T11:32:04.4622600Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4622640Z E   
2025-01-17T11:32:04.4622730Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4622810Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4622860Z E          ...
2025-01-17T11:32:04.4622920Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4623010Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4623100Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4623140Z E          ...
2025-01-17T11:32:04.4623200Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4623290Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4623360Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4623370Z 
2025-01-17T11:32:04.4623420Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4623660Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] _
2025-01-17T11:32:04.4623660Z 
2025-01-17T11:32:04.4623830Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336a7410>
2025-01-17T11:32:04.4623950Z plasma = <tardis.plasma.base.BasePlasma object at 0x313cdf980>
2025-01-17T11:32:04.4624010Z attr = 'lines_lower_level_index'
2025-01-17T11:32:04.4624010Z 
2025-01-17T11:32:04.4624110Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4624200Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4624250Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4624290Z         try:
2025-01-17T11:32:04.4624400Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4624450Z         except KeyError:
2025-01-17T11:32:04.4624550Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4624590Z     
2025-01-17T11:32:04.4624690Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4624750Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4624820Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4624920Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4624970Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4625080Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4625160Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4625160Z 
2025-01-17T11:32:04.4625250Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4625340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4625340Z 
2025-01-17T11:32:04.4625440Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.4625500Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.4625580Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4625640Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.4625750Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.4625800Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.4625880Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4625940Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.4625980Z err_msg = None
2025-01-17T11:32:04.4625990Z 
2025-01-17T11:32:04.4626060Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4626110Z         if err_msg is None:
2025-01-17T11:32:04.4626170Z             if left.shape != right.shape:
2025-01-17T11:32:04.4626230Z                 raise_assert_detail(
2025-01-17T11:32:04.4626330Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4626380Z                 )
2025-01-17T11:32:04.4626420Z     
2025-01-17T11:32:04.4626470Z             diff = 0
2025-01-17T11:32:04.4626550Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4626610Z                 # count up differences
2025-01-17T11:32:04.4626730Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4626790Z                     diff += 1
2025-01-17T11:32:04.4626830Z     
2025-01-17T11:32:04.4626890Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4626990Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4627120Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4627190Z E           AssertionError: Series are different
2025-01-17T11:32:04.4627240Z E           
2025-01-17T11:32:04.4627310Z E           Series values are different (4.04858 %)
2025-01-17T11:32:04.4627610Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4627880Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4628150Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4628290Z 
2025-01-17T11:32:04.4628540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4628770Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] _
2025-01-17T11:32:04.4628810Z 
2025-01-17T11:32:04.4628980Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336a74d0>
2025-01-17T11:32:04.4629110Z plasma = <tardis.plasma.base.BasePlasma object at 0x313cdf980>
2025-01-17T11:32:04.4629170Z attr = 'lines_upper_level_index'
2025-01-17T11:32:04.4629170Z 
2025-01-17T11:32:04.4633460Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4633600Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4633650Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4633700Z         try:
2025-01-17T11:32:04.4633820Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4633880Z         except KeyError:
2025-01-17T11:32:04.4633990Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4634030Z     
2025-01-17T11:32:04.4634080Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4634160Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4634210Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4634320Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4634370Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4634440Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4634540Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4634540Z 
2025-01-17T11:32:04.4634640Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4634720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4634730Z 
2025-01-17T11:32:04.4634830Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.4634890Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.4634970Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.4635030Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.4635140Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.4635200Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.4635280Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.4635330Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.4635380Z err_msg = None
2025-01-17T11:32:04.4635380Z 
2025-01-17T11:32:04.4635460Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4635510Z         if err_msg is None:
2025-01-17T11:32:04.4635580Z             if left.shape != right.shape:
2025-01-17T11:32:04.4635630Z                 raise_assert_detail(
2025-01-17T11:32:04.4635740Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4635790Z                 )
2025-01-17T11:32:04.4635830Z     
2025-01-17T11:32:04.4635870Z             diff = 0
2025-01-17T11:32:04.4635960Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4636010Z                 # count up differences
2025-01-17T11:32:04.4636140Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4636190Z                     diff += 1
2025-01-17T11:32:04.4636230Z     
2025-01-17T11:32:04.4636290Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4636400Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4636530Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4636600Z E           AssertionError: Series are different
2025-01-17T11:32:04.4636810Z E           
2025-01-17T11:32:04.4636890Z E           Series values are different (6.47773 %)
2025-01-17T11:32:04.4637190Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4637660Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.4637980Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.4638000Z 
2025-01-17T11:32:04.4638240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4638430Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] _
2025-01-17T11:32:04.4638430Z 
2025-01-17T11:32:04.4638540Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4638640Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4638720Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4638820Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4638920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4638990Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4639040Z err_msg = None
2025-01-17T11:32:04.4639040Z 
2025-01-17T11:32:04.4639120Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4639170Z         if err_msg is None:
2025-01-17T11:32:04.4639240Z             if left.shape != right.shape:
2025-01-17T11:32:04.4639300Z                 raise_assert_detail(
2025-01-17T11:32:04.4639410Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4639450Z                 )
2025-01-17T11:32:04.4639490Z     
2025-01-17T11:32:04.4639540Z             diff = 0
2025-01-17T11:32:04.4639620Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4639680Z                 # count up differences
2025-01-17T11:32:04.4639810Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4639860Z                     diff += 1
2025-01-17T11:32:04.4639910Z     
2025-01-17T11:32:04.4639960Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4640070Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4640200Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4640280Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4640320Z E           
2025-01-17T11:32:04.4640410Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4640610Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4640930Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4641040Z 
2025-01-17T11:32:04.4641290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4641290Z 
2025-01-17T11:32:04.4641420Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4641420Z 
2025-01-17T11:32:04.4641610Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336a7710>
2025-01-17T11:32:04.4641770Z plasma = <tardis.plasma.base.BasePlasma object at 0x313cdf980>, attr = 'nu'
2025-01-17T11:32:04.4641780Z 
2025-01-17T11:32:04.4641890Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4641970Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4642030Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4642070Z         try:
2025-01-17T11:32:04.4642190Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4642250Z         except KeyError:
2025-01-17T11:32:04.4642360Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4642400Z     
2025-01-17T11:32:04.4642460Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4642540Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4642600Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4642720Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4642780Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4642850Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4642930Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4642930Z 
2025-01-17T11:32:04.4643040Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4643130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4643260Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4643310Z     ???
2025-01-17T11:32:04.4643400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4643400Z 
2025-01-17T11:32:04.4643450Z >   ???
2025-01-17T11:32:04.4643550Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4643590Z E   
2025-01-17T11:32:04.4643710Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4643790Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4643850Z E          ...
2025-01-17T11:32:04.4643920Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4644020Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4644120Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4644160Z E          ...
2025-01-17T11:32:04.4644230Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4644340Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4644420Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4644420Z 
2025-01-17T11:32:04.4644500Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4644720Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] _
2025-01-17T11:32:04.4644730Z 
2025-01-17T11:32:04.4644830Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4644950Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4645110Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4645230Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4645330Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4645500Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4645550Z err_msg = None
2025-01-17T11:32:04.4645560Z 
2025-01-17T11:32:04.4645640Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4645690Z         if err_msg is None:
2025-01-17T11:32:04.4645750Z             if left.shape != right.shape:
2025-01-17T11:32:04.4645820Z                 raise_assert_detail(
2025-01-17T11:32:04.4645940Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4645980Z                 )
2025-01-17T11:32:04.4646030Z     
2025-01-17T11:32:04.4646070Z             diff = 0
2025-01-17T11:32:04.4646170Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4646240Z                 # count up differences
2025-01-17T11:32:04.4646370Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4646440Z                     diff += 1
2025-01-17T11:32:04.4646480Z     
2025-01-17T11:32:04.4646540Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4646660Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4646800Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4646880Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4646930Z E           
2025-01-17T11:32:04.4647010Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4647240Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4647470Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4647490Z 
2025-01-17T11:32:04.4647720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4647720Z 
2025-01-17T11:32:04.4647870Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4647880Z 
2025-01-17T11:32:04.4648060Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336a77d0>
2025-01-17T11:32:04.4648180Z plasma = <tardis.plasma.base.BasePlasma object at 0x313cdf980>
2025-01-17T11:32:04.4648240Z attr = 'wavelength_cm'
2025-01-17T11:32:04.4648240Z 
2025-01-17T11:32:04.4648360Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4648450Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4648510Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4648570Z         try:
2025-01-17T11:32:04.4648680Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4648740Z         except KeyError:
2025-01-17T11:32:04.4648860Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4648900Z     
2025-01-17T11:32:04.4648950Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4649020Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4649090Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4649200Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4649260Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4649530Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4649610Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4649620Z 
2025-01-17T11:32:04.4649710Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4649790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4649990Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4650050Z     ???
2025-01-17T11:32:04.4650130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4650140Z 
2025-01-17T11:32:04.4650180Z >   ???
2025-01-17T11:32:04.4650290Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4650330Z E   
2025-01-17T11:32:04.4650430Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4650520Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4650580Z E          ...
2025-01-17T11:32:04.4650640Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4650730Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4650820Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4650860Z E          ...
2025-01-17T11:32:04.4650940Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4651040Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4651110Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4651120Z 
2025-01-17T11:32:04.4651190Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4651500Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] _
2025-01-17T11:32:04.4651500Z 
2025-01-17T11:32:04.4651600Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4651720Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4651800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4651900Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4652010Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4652100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4652140Z err_msg = None
2025-01-17T11:32:04.4652140Z 
2025-01-17T11:32:04.4652220Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4652270Z         if err_msg is None:
2025-01-17T11:32:04.4652350Z             if left.shape != right.shape:
2025-01-17T11:32:04.4652410Z                 raise_assert_detail(
2025-01-17T11:32:04.4652520Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4652560Z                 )
2025-01-17T11:32:04.4652610Z     
2025-01-17T11:32:04.4652670Z             diff = 0
2025-01-17T11:32:04.4652760Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4652830Z                 # count up differences
2025-01-17T11:32:04.4652970Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4653020Z                     diff += 1
2025-01-17T11:32:04.4653070Z     
2025-01-17T11:32:04.4653140Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4653240Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4653390Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4653480Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4653520Z E           
2025-01-17T11:32:04.4653620Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4653840Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4654160Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4654510Z 
2025-01-17T11:32:04.4654770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4654780Z 
2025-01-17T11:32:04.4654910Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4654910Z 
2025-01-17T11:32:04.4655080Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336a7890>
2025-01-17T11:32:04.4655240Z plasma = <tardis.plasma.base.BasePlasma object at 0x313cdf980>, attr = 'f_lu'
2025-01-17T11:32:04.4655240Z 
2025-01-17T11:32:04.4655350Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4655450Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4655500Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4655560Z         try:
2025-01-17T11:32:04.4655670Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4655730Z         except KeyError:
2025-01-17T11:32:04.4655840Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4655890Z     
2025-01-17T11:32:04.4655940Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4656000Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4656060Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4656160Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4656220Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4656290Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4656370Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4656380Z 
2025-01-17T11:32:04.4656470Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4656560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4656670Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4656710Z     ???
2025-01-17T11:32:04.4656790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4656800Z 
2025-01-17T11:32:04.4656840Z >   ???
2025-01-17T11:32:04.4656920Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4656960Z E   
2025-01-17T11:32:04.4657050Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4657130Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4657170Z E          ...
2025-01-17T11:32:04.4657240Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4657340Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4657430Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4657470Z E          ...
2025-01-17T11:32:04.4657530Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4657630Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4657710Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4657710Z 
2025-01-17T11:32:04.4657770Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4658020Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] _
2025-01-17T11:32:04.4658030Z 
2025-01-17T11:32:04.4658200Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336a7e90>
2025-01-17T11:32:04.4658340Z plasma = <tardis.plasma.base.BasePlasma object at 0x313cdf980>
2025-01-17T11:32:04.4658480Z attr = 'stimulated_emission_factor'
2025-01-17T11:32:04.4658500Z 
2025-01-17T11:32:04.4658600Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4658680Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4658740Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4658860Z         try:
2025-01-17T11:32:04.4658980Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4659030Z         except KeyError:
2025-01-17T11:32:04.4659130Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4659180Z     
2025-01-17T11:32:04.4659240Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4659310Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4659360Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4659470Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4659540Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4659600Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4659690Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4659740Z             else:
2025-01-17T11:32:04.4659800Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4659880Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4659890Z 
2025-01-17T11:32:04.4659980Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4660060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4660160Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4660200Z     ???
2025-01-17T11:32:04.4660300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4660310Z 
2025-01-17T11:32:04.4660350Z >   ???
2025-01-17T11:32:04.4660480Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:32:04.4660530Z E   
2025-01-17T11:32:04.4660670Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-01-17T11:32:04.4660980Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4664760Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834782, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-17T11:32:04.4668700Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-17T11:32:04.4668870Z E   At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-01-17T11:32:04.4668880Z 
2025-01-17T11:32:04.4668940Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4669170Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] _
2025-01-17T11:32:04.4669180Z 
2025-01-17T11:32:04.4669290Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4669390Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4669470Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4669570Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4669680Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4669750Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4669800Z err_msg = None
2025-01-17T11:32:04.4669800Z 
2025-01-17T11:32:04.4669880Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4669950Z         if err_msg is None:
2025-01-17T11:32:04.4670010Z             if left.shape != right.shape:
2025-01-17T11:32:04.4670060Z                 raise_assert_detail(
2025-01-17T11:32:04.4670170Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4670210Z                 )
2025-01-17T11:32:04.4670260Z     
2025-01-17T11:32:04.4670310Z             diff = 0
2025-01-17T11:32:04.4670390Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4670660Z                 # count up differences
2025-01-17T11:32:04.4670800Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4670840Z                     diff += 1
2025-01-17T11:32:04.4670890Z     
2025-01-17T11:32:04.4670940Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4671120Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4671250Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4671340Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4671390Z E           
2025-01-17T11:32:04.4671470Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4671690Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4671900Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4671920Z 
2025-01-17T11:32:04.4672170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4672180Z 
2025-01-17T11:32:04.4672310Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4672310Z 
2025-01-17T11:32:04.4672470Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336a7f50>
2025-01-17T11:32:04.4672580Z plasma = <tardis.plasma.base.BasePlasma object at 0x313cdf980>
2025-01-17T11:32:04.4672640Z attr = 'previous_beta_sobolev'
2025-01-17T11:32:04.4672640Z 
2025-01-17T11:32:04.4672740Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4672820Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4672880Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4672930Z         try:
2025-01-17T11:32:04.4673040Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4673090Z         except KeyError:
2025-01-17T11:32:04.4673190Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4673240Z     
2025-01-17T11:32:04.4673310Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4673370Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4673430Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4673540Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4673600Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4673680Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4673760Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4673820Z             else:
2025-01-17T11:32:04.4673890Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4673960Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4673970Z 
2025-01-17T11:32:04.4674070Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4674170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4674270Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4674320Z     ???
2025-01-17T11:32:04.4674410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4674410Z 
2025-01-17T11:32:04.4674450Z >   ???
2025-01-17T11:32:04.4674540Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4674590Z E   
2025-01-17T11:32:04.4674690Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4674860Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4674910Z E          ...
2025-01-17T11:32:04.4674970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4675070Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4675160Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4675300Z E          ...
2025-01-17T11:32:04.4675360Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4675460Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4675540Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4675540Z 
2025-01-17T11:32:04.4675610Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4675820Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] _
2025-01-17T11:32:04.4675830Z 
2025-01-17T11:32:04.4675930Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4676040Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4676120Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4676220Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4676330Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4676400Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4676440Z err_msg = None
2025-01-17T11:32:04.4676450Z 
2025-01-17T11:32:04.4676520Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4676570Z         if err_msg is None:
2025-01-17T11:32:04.4676630Z             if left.shape != right.shape:
2025-01-17T11:32:04.4676700Z                 raise_assert_detail(
2025-01-17T11:32:04.4676810Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4676860Z                 )
2025-01-17T11:32:04.4676900Z     
2025-01-17T11:32:04.4676950Z             diff = 0
2025-01-17T11:32:04.4677040Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4677100Z                 # count up differences
2025-01-17T11:32:04.4677220Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4677270Z                     diff += 1
2025-01-17T11:32:04.4677310Z     
2025-01-17T11:32:04.4677370Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4677470Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4677600Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4677690Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4677730Z E           
2025-01-17T11:32:04.4677810Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4678030Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4678250Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4678260Z 
2025-01-17T11:32:04.4678480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4678480Z 
2025-01-17T11:32:04.4678610Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4678610Z 
2025-01-17T11:32:04.4678880Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336d0050>
2025-01-17T11:32:04.4679000Z plasma = <tardis.plasma.base.BasePlasma object at 0x313cdf980>
2025-01-17T11:32:04.4679050Z attr = 'tau_sobolevs'
2025-01-17T11:32:04.4679050Z 
2025-01-17T11:32:04.4679160Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4679330Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4679400Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4679450Z         try:
2025-01-17T11:32:04.4679560Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4679610Z         except KeyError:
2025-01-17T11:32:04.4679710Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4679750Z     
2025-01-17T11:32:04.4679810Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4679880Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4679940Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4680040Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4680100Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4680160Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4680240Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4680280Z             else:
2025-01-17T11:32:04.4680340Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4680420Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4680420Z 
2025-01-17T11:32:04.4680510Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4680600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4680710Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4680750Z     ???
2025-01-17T11:32:04.4680840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4680840Z 
2025-01-17T11:32:04.4680880Z >   ???
2025-01-17T11:32:04.4680990Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4681030Z E   
2025-01-17T11:32:04.4681130Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4681200Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4681250Z E          ...
2025-01-17T11:32:04.4681310Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4681400Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4681480Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4681520Z E          ...
2025-01-17T11:32:04.4681580Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4681670Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4681740Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4681740Z 
2025-01-17T11:32:04.4681800Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4682020Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] _
2025-01-17T11:32:04.4682020Z 
2025-01-17T11:32:04.4682120Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4682220Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4682290Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4682390Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4682480Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4682560Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4682620Z err_msg = None
2025-01-17T11:32:04.4682620Z 
2025-01-17T11:32:04.4682700Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4682750Z         if err_msg is None:
2025-01-17T11:32:04.4682880Z             if left.shape != right.shape:
2025-01-17T11:32:04.4682930Z                 raise_assert_detail(
2025-01-17T11:32:04.4683050Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4683100Z                 )
2025-01-17T11:32:04.4683220Z     
2025-01-17T11:32:04.4683260Z             diff = 0
2025-01-17T11:32:04.4683340Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4683390Z                 # count up differences
2025-01-17T11:32:04.4683520Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4683570Z                     diff += 1
2025-01-17T11:32:04.4683610Z     
2025-01-17T11:32:04.4683670Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4683760Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4683890Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4683970Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4684020Z E           
2025-01-17T11:32:04.4684090Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4684290Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4684490Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4684500Z 
2025-01-17T11:32:04.4684730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4684740Z 
2025-01-17T11:32:04.4684860Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4684860Z 
2025-01-17T11:32:04.4685020Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336d0110>
2025-01-17T11:32:04.4685140Z plasma = <tardis.plasma.base.BasePlasma object at 0x313cdf980>
2025-01-17T11:32:04.4685190Z attr = 'beta_sobolev'
2025-01-17T11:32:04.4685190Z 
2025-01-17T11:32:04.4685290Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4685370Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4685420Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4685460Z         try:
2025-01-17T11:32:04.4685560Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4685610Z         except KeyError:
2025-01-17T11:32:04.4685710Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4685760Z     
2025-01-17T11:32:04.4685810Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4685870Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4685930Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4686030Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4686080Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4686140Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4686220Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4686260Z             else:
2025-01-17T11:32:04.4686320Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4686400Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4686400Z 
2025-01-17T11:32:04.4686480Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4686560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4686920Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4686960Z     ???
2025-01-17T11:32:04.4687050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4687050Z 
2025-01-17T11:32:04.4687090Z >   ???
2025-01-17T11:32:04.4687180Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4687260Z E   
2025-01-17T11:32:04.4687350Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4687430Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4687470Z E          ...
2025-01-17T11:32:04.4687530Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4687630Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4687700Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4687750Z E          ...
2025-01-17T11:32:04.4687800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4687900Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4687970Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4687970Z 
2025-01-17T11:32:04.4688030Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4688230Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] _
2025-01-17T11:32:04.4688240Z 
2025-01-17T11:32:04.4688340Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4688450Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4688520Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4694730Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4694890Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4694980Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4695030Z err_msg = None
2025-01-17T11:32:04.4695040Z 
2025-01-17T11:32:04.4695180Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4695240Z         if err_msg is None:
2025-01-17T11:32:04.4695310Z             if left.shape != right.shape:
2025-01-17T11:32:04.4695370Z                 raise_assert_detail(
2025-01-17T11:32:04.4695490Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4695530Z                 )
2025-01-17T11:32:04.4695580Z     
2025-01-17T11:32:04.4695620Z             diff = 0
2025-01-17T11:32:04.4695710Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4695770Z                 # count up differences
2025-01-17T11:32:04.4695900Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4695960Z                     diff += 1
2025-01-17T11:32:04.4696000Z     
2025-01-17T11:32:04.4696060Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4696170Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4696310Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4696400Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4696440Z E           
2025-01-17T11:32:04.4696530Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4696740Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4696960Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4697140Z 
2025-01-17T11:32:04.4697400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4697550Z 
2025-01-17T11:32:04.4697690Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4697690Z 
2025-01-17T11:32:04.4697870Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336d0290>
2025-01-17T11:32:04.4698030Z plasma = <tardis.plasma.base.BasePlasma object at 0x313cdf980>, attr = 'j_blues'
2025-01-17T11:32:04.4698030Z 
2025-01-17T11:32:04.4698140Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4698220Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4698280Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4698320Z         try:
2025-01-17T11:32:04.4698430Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4698490Z         except KeyError:
2025-01-17T11:32:04.4698600Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4698650Z     
2025-01-17T11:32:04.4698700Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4698780Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4698830Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4698940Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4699000Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4827530Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4827850Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4827900Z             else:
2025-01-17T11:32:04.4827970Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4828060Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4828120Z 
2025-01-17T11:32:04.4828210Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4828320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4828440Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4828490Z     ???
2025-01-17T11:32:04.4828590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4828590Z 
2025-01-17T11:32:04.4828650Z >   ???
2025-01-17T11:32:04.4828750Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4828800Z E   
2025-01-17T11:32:04.4828910Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4829000Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4829050Z E          ...
2025-01-17T11:32:04.4829110Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4829240Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4829350Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4829420Z E          ...
2025-01-17T11:32:04.4829500Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4829650Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4829750Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4829760Z 
2025-01-17T11:32:04.4829860Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4830050Z _____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines] ______
2025-01-17T11:32:04.4830070Z 
2025-01-17T11:32:04.4830190Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4830310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4830410Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4830520Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4831000Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4831080Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4831130Z err_msg = None
2025-01-17T11:32:04.4831130Z 
2025-01-17T11:32:04.4831380Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4831430Z         if err_msg is None:
2025-01-17T11:32:04.4831510Z             if left.shape != right.shape:
2025-01-17T11:32:04.4831580Z                 raise_assert_detail(
2025-01-17T11:32:04.4831730Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4831790Z                 )
2025-01-17T11:32:04.4831850Z     
2025-01-17T11:32:04.4831920Z             diff = 0
2025-01-17T11:32:04.4832050Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4832130Z                 # count up differences
2025-01-17T11:32:04.4832300Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4832410Z                     diff += 1
2025-01-17T11:32:04.4832480Z     
2025-01-17T11:32:04.4832550Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4832650Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4832810Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4832910Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4832960Z E           
2025-01-17T11:32:04.4833040Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4833270Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4833500Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4833520Z 
2025-01-17T11:32:04.4833780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4833790Z 
2025-01-17T11:32:04.4833940Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4833950Z 
2025-01-17T11:32:04.4834130Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336d1010>
2025-01-17T11:32:04.4834290Z plasma = <tardis.plasma.base.BasePlasma object at 0x328744620>, attr = 'lines'
2025-01-17T11:32:04.4834300Z 
2025-01-17T11:32:04.4834410Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4834500Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4834560Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4834600Z         try:
2025-01-17T11:32:04.4834720Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4834770Z         except KeyError:
2025-01-17T11:32:04.4834890Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4834940Z     
2025-01-17T11:32:04.4834990Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4835060Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4835130Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4835240Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4835310Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4835380Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4835480Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4835610Z             else:
2025-01-17T11:32:04.4835690Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4835760Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4835770Z 
2025-01-17T11:32:04.4835860Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4835960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4836170Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4836230Z     ???
2025-01-17T11:32:04.4836330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4836340Z 
2025-01-17T11:32:04.4836390Z >   ???
2025-01-17T11:32:04.4836490Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4836530Z E   
2025-01-17T11:32:04.4836620Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4836730Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4836780Z E          ...
2025-01-17T11:32:04.4836860Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4836980Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4837080Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4837150Z E          ...
2025-01-17T11:32:04.4837250Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4837370Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4837470Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4837480Z 
2025-01-17T11:32:04.4837550Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4837770Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] _
2025-01-17T11:32:04.4837780Z 
2025-01-17T11:32:04.4837960Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336d10d0>
2025-01-17T11:32:04.4838100Z plasma = <tardis.plasma.base.BasePlasma object at 0x328744620>
2025-01-17T11:32:04.4838170Z attr = 'lines_lower_level_index'
2025-01-17T11:32:04.4838170Z 
2025-01-17T11:32:04.4838270Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4838350Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4838420Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4838470Z         try:
2025-01-17T11:32:04.4838580Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4838630Z         except KeyError:
2025-01-17T11:32:04.4838750Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4838800Z     
2025-01-17T11:32:04.4838860Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4838930Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4839000Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4839100Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4839160Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4839220Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4839300Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4839300Z 
2025-01-17T11:32:04.4839400Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4839490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4839500Z 
2025-01-17T11:32:04.4839600Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.4839660Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.4839760Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4839810Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.4839940Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.4840010Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.4840100Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4840440Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.4840500Z err_msg = None
2025-01-17T11:32:04.4840500Z 
2025-01-17T11:32:04.4840580Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4840640Z         if err_msg is None:
2025-01-17T11:32:04.4840710Z             if left.shape != right.shape:
2025-01-17T11:32:04.4840850Z                 raise_assert_detail(
2025-01-17T11:32:04.4840970Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4841020Z                 )
2025-01-17T11:32:04.4841060Z     
2025-01-17T11:32:04.4841100Z             diff = 0
2025-01-17T11:32:04.4841180Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4841240Z                 # count up differences
2025-01-17T11:32:04.4841390Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4841450Z                     diff += 1
2025-01-17T11:32:04.4841510Z     
2025-01-17T11:32:04.4841590Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4841710Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4841860Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4841940Z E           AssertionError: Series are different
2025-01-17T11:32:04.4842000Z E           
2025-01-17T11:32:04.4842090Z E           Series values are different (4.04858 %)
2025-01-17T11:32:04.4842390Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4842660Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4842930Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4842940Z 
2025-01-17T11:32:04.4843200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4843400Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] _
2025-01-17T11:32:04.4843410Z 
2025-01-17T11:32:04.4843590Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336d1190>
2025-01-17T11:32:04.4843730Z plasma = <tardis.plasma.base.BasePlasma object at 0x328744620>
2025-01-17T11:32:04.4843800Z attr = 'lines_upper_level_index'
2025-01-17T11:32:04.4843810Z 
2025-01-17T11:32:04.4843920Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4844010Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4844090Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4844130Z         try:
2025-01-17T11:32:04.4844240Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4844290Z         except KeyError:
2025-01-17T11:32:04.4844400Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4844450Z     
2025-01-17T11:32:04.4844520Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4844590Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4844730Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4844850Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4844910Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4844980Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4845070Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4845210Z 
2025-01-17T11:32:04.4845310Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4845410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4845410Z 
2025-01-17T11:32:04.4845530Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.4845610Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.4845700Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.4845760Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.4845860Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.4845920Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.4846000Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.4846060Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.4846120Z err_msg = None
2025-01-17T11:32:04.4846130Z 
2025-01-17T11:32:04.4846210Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4846260Z         if err_msg is None:
2025-01-17T11:32:04.4846330Z             if left.shape != right.shape:
2025-01-17T11:32:04.4846390Z                 raise_assert_detail(
2025-01-17T11:32:04.4846520Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4846570Z                 )
2025-01-17T11:32:04.4846610Z     
2025-01-17T11:32:04.4846650Z             diff = 0
2025-01-17T11:32:04.4846740Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4846810Z                 # count up differences
2025-01-17T11:32:04.4846950Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4847000Z                     diff += 1
2025-01-17T11:32:04.4847060Z     
2025-01-17T11:32:04.4847140Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4847260Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4847400Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4847470Z E           AssertionError: Series are different
2025-01-17T11:32:04.4847530Z E           
2025-01-17T11:32:04.4847610Z E           Series values are different (6.47773 %)
2025-01-17T11:32:04.4847930Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4848250Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.4848590Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.4848700Z 
2025-01-17T11:32:04.4848980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4849140Z _______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-nu] _______
2025-01-17T11:32:04.4849230Z 
2025-01-17T11:32:04.4849350Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4849460Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4849530Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4849630Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4849730Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4849810Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4849860Z err_msg = None
2025-01-17T11:32:04.4849870Z 
2025-01-17T11:32:04.4849940Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4850000Z         if err_msg is None:
2025-01-17T11:32:04.4850070Z             if left.shape != right.shape:
2025-01-17T11:32:04.4850140Z                 raise_assert_detail(
2025-01-17T11:32:04.4850260Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4850330Z                 )
2025-01-17T11:32:04.4850380Z     
2025-01-17T11:32:04.4850420Z             diff = 0
2025-01-17T11:32:04.4850500Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4850560Z                 # count up differences
2025-01-17T11:32:04.4850700Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4850750Z                     diff += 1
2025-01-17T11:32:04.4850810Z     
2025-01-17T11:32:04.4850870Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4850970Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4851110Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4851210Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4851260Z E           
2025-01-17T11:32:04.4851350Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4851560Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4851780Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4851800Z 
2025-01-17T11:32:04.4852050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4852060Z 
2025-01-17T11:32:04.4852210Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4852220Z 
2025-01-17T11:32:04.4852390Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336d13d0>
2025-01-17T11:32:04.4852540Z plasma = <tardis.plasma.base.BasePlasma object at 0x328744620>, attr = 'nu'
2025-01-17T11:32:04.4852550Z 
2025-01-17T11:32:04.4852650Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4852750Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4852820Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4852870Z         try:
2025-01-17T11:32:04.4852970Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4853080Z         except KeyError:
2025-01-17T11:32:04.4853180Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4853220Z     
2025-01-17T11:32:04.4853290Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4853360Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4853490Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4853590Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4853640Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4853710Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4853810Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4853820Z 
2025-01-17T11:32:04.4853920Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4854030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4854160Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4854210Z     ???
2025-01-17T11:32:04.4854300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4854300Z 
2025-01-17T11:32:04.4854350Z >   ???
2025-01-17T11:32:04.4854460Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4854500Z E   
2025-01-17T11:32:04.4854610Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4854690Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4854740Z E          ...
2025-01-17T11:32:04.4854810Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4854910Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4854980Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4855030Z E          ...
2025-01-17T11:32:04.4855110Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4855200Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4855280Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4855280Z 
2025-01-17T11:32:04.4855340Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4855500Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] __
2025-01-17T11:32:04.4855510Z 
2025-01-17T11:32:04.4855610Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4855730Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4855810Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4855910Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4856000Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4856070Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4856130Z err_msg = None
2025-01-17T11:32:04.4856140Z 
2025-01-17T11:32:04.4856230Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4856290Z         if err_msg is None:
2025-01-17T11:32:04.4856370Z             if left.shape != right.shape:
2025-01-17T11:32:04.4856420Z                 raise_assert_detail(
2025-01-17T11:32:04.4856550Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4856610Z                 )
2025-01-17T11:32:04.4856660Z     
2025-01-17T11:32:04.4856700Z             diff = 0
2025-01-17T11:32:04.4856800Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4856870Z                 # count up differences
2025-01-17T11:32:04.4856990Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4857040Z                     diff += 1
2025-01-17T11:32:04.4857090Z     
2025-01-17T11:32:04.4857180Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4857500Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4857650Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4857720Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4857770Z E           
2025-01-17T11:32:04.4857930Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4858150Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4858370Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4858400Z 
2025-01-17T11:32:04.4858630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4858630Z 
2025-01-17T11:32:04.4858760Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4858770Z 
2025-01-17T11:32:04.4858950Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336d1490>
2025-01-17T11:32:04.4859110Z plasma = <tardis.plasma.base.BasePlasma object at 0x328744620>
2025-01-17T11:32:04.4859170Z attr = 'wavelength_cm'
2025-01-17T11:32:04.4859180Z 
2025-01-17T11:32:04.4859300Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4859410Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4859480Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4859530Z         try:
2025-01-17T11:32:04.4859650Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4859700Z         except KeyError:
2025-01-17T11:32:04.4859800Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4859850Z     
2025-01-17T11:32:04.4859920Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4859980Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4860040Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4860160Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4860210Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4860280Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4860360Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4860360Z 
2025-01-17T11:32:04.4860450Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4860550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4860690Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4860740Z     ???
2025-01-17T11:32:04.4860840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4860850Z 
2025-01-17T11:32:04.4860900Z >   ???
2025-01-17T11:32:04.4861000Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4861050Z E   
2025-01-17T11:32:04.4861150Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4861260Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4861310Z E          ...
2025-01-17T11:32:04.4861370Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4861460Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4861560Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4861610Z E          ...
2025-01-17T11:32:04.4861670Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4861780Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4861950Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4861960Z 
2025-01-17T11:32:04.4862020Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4862170Z ______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-f_lu] ______
2025-01-17T11:32:04.4862500Z 
2025-01-17T11:32:04.4862620Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4862750Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4862830Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4862950Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4863050Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4863140Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4863200Z err_msg = None
2025-01-17T11:32:04.4863200Z 
2025-01-17T11:32:04.4863280Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4863330Z         if err_msg is None:
2025-01-17T11:32:04.4863420Z             if left.shape != right.shape:
2025-01-17T11:32:04.4863480Z                 raise_assert_detail(
2025-01-17T11:32:04.4863600Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4863650Z                 )
2025-01-17T11:32:04.4863710Z     
2025-01-17T11:32:04.4863760Z             diff = 0
2025-01-17T11:32:04.4863840Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4863890Z                 # count up differences
2025-01-17T11:32:04.4864030Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4864100Z                     diff += 1
2025-01-17T11:32:04.4864140Z     
2025-01-17T11:32:04.4864200Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4864310Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4864450Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4864530Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4864570Z E           
2025-01-17T11:32:04.4864650Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4864850Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4865070Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4865090Z 
2025-01-17T11:32:04.4865330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4865340Z 
2025-01-17T11:32:04.4865470Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4865470Z 
2025-01-17T11:32:04.4865660Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336d1550>
2025-01-17T11:32:04.4865840Z plasma = <tardis.plasma.base.BasePlasma object at 0x328744620>, attr = 'f_lu'
2025-01-17T11:32:04.4865850Z 
2025-01-17T11:32:04.4865970Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4866080Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4866150Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4866200Z         try:
2025-01-17T11:32:04.4866320Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4866490Z         except KeyError:
2025-01-17T11:32:04.4866610Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4866660Z     
2025-01-17T11:32:04.4866730Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4866800Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4866950Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4867070Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4867130Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4867200Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4867310Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4867310Z 
2025-01-17T11:32:04.4867470Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4867560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4867670Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4867720Z     ???
2025-01-17T11:32:04.4867800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4867800Z 
2025-01-17T11:32:04.4867850Z >   ???
2025-01-17T11:32:04.4867940Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4867990Z E   
2025-01-17T11:32:04.4868090Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4868180Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4868230Z E          ...
2025-01-17T11:32:04.4868290Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4868410Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4868500Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4868540Z E          ...
2025-01-17T11:32:04.4868620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4868720Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4868810Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4868820Z 
2025-01-17T11:32:04.4868890Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4869090Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] _
2025-01-17T11:32:04.4869110Z 
2025-01-17T11:32:04.4869280Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336d1b50>
2025-01-17T11:32:04.4869420Z plasma = <tardis.plasma.base.BasePlasma object at 0x328744620>
2025-01-17T11:32:04.4869490Z attr = 'stimulated_emission_factor'
2025-01-17T11:32:04.4869500Z 
2025-01-17T11:32:04.4869620Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4869720Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4869780Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4869830Z         try:
2025-01-17T11:32:04.4879680Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4879810Z         except KeyError:
2025-01-17T11:32:04.4879940Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4879990Z     
2025-01-17T11:32:04.4880060Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4880120Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4880180Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4880290Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4880350Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4880440Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4880540Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4880590Z             else:
2025-01-17T11:32:04.4880650Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4880730Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4880730Z 
2025-01-17T11:32:04.4880830Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4881060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4881160Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4881210Z     ???
2025-01-17T11:32:04.4881290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4881400Z 
2025-01-17T11:32:04.4881460Z >   ???
2025-01-17T11:32:04.4881630Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:32:04.4881680Z E   
2025-01-17T11:32:04.4881820Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-01-17T11:32:04.4882150Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4886000Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834782, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-17T11:32:04.4889900Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-17T11:32:04.4890250Z E   At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-01-17T11:32:04.4890260Z 
2025-01-17T11:32:04.4890320Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4890530Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] _
2025-01-17T11:32:04.4890550Z 
2025-01-17T11:32:04.4890670Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4890780Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4890850Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4890970Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4891080Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4891150Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4891200Z err_msg = None
2025-01-17T11:32:04.4891200Z 
2025-01-17T11:32:04.4891270Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4891320Z         if err_msg is None:
2025-01-17T11:32:04.4891390Z             if left.shape != right.shape:
2025-01-17T11:32:04.4891440Z                 raise_assert_detail(
2025-01-17T11:32:04.4891550Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4891590Z                 )
2025-01-17T11:32:04.4891640Z     
2025-01-17T11:32:04.4891700Z             diff = 0
2025-01-17T11:32:04.4891810Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4891870Z                 # count up differences
2025-01-17T11:32:04.4892030Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4892080Z                     diff += 1
2025-01-17T11:32:04.4892130Z     
2025-01-17T11:32:04.4892180Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4892290Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4892430Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4892540Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4892590Z E           
2025-01-17T11:32:04.4892680Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4892920Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4893150Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4893150Z 
2025-01-17T11:32:04.4893410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4893500Z 
2025-01-17T11:32:04.4893640Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4893640Z 
2025-01-17T11:32:04.4893820Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336d1c10>
2025-01-17T11:32:04.4894130Z plasma = <tardis.plasma.base.BasePlasma object at 0x328744620>
2025-01-17T11:32:04.4894190Z attr = 'previous_beta_sobolev'
2025-01-17T11:32:04.4894200Z 
2025-01-17T11:32:04.4894300Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4894390Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4894460Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4894510Z         try:
2025-01-17T11:32:04.4894630Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4894690Z         except KeyError:
2025-01-17T11:32:04.4894810Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4894870Z     
2025-01-17T11:32:04.4894930Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4895000Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4895070Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4895180Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4895260Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4895340Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4895440Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4895500Z             else:
2025-01-17T11:32:04.4895570Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4895670Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4895680Z 
2025-01-17T11:32:04.4895770Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4895870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4895990Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4896040Z     ???
2025-01-17T11:32:04.4896120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4896120Z 
2025-01-17T11:32:04.4896160Z >   ???
2025-01-17T11:32:04.4896270Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4896320Z E   
2025-01-17T11:32:04.4896420Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4896520Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4896560Z E          ...
2025-01-17T11:32:04.4896620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4896730Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4896840Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4896890Z E          ...
2025-01-17T11:32:04.4896950Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4897060Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4897160Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4897170Z 
2025-01-17T11:32:04.4897230Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4897400Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] __
2025-01-17T11:32:04.4897410Z 
2025-01-17T11:32:04.4897530Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4897640Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4897730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4897850Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4897950Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4898010Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4898160Z err_msg = None
2025-01-17T11:32:04.4898170Z 
2025-01-17T11:32:04.4898260Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4898330Z         if err_msg is None:
2025-01-17T11:32:04.4898410Z             if left.shape != right.shape:
2025-01-17T11:32:04.4898590Z                 raise_assert_detail(
2025-01-17T11:32:04.4898720Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4898770Z                 )
2025-01-17T11:32:04.4898820Z     
2025-01-17T11:32:04.4898890Z             diff = 0
2025-01-17T11:32:04.4899000Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4899070Z                 # count up differences
2025-01-17T11:32:04.4899220Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4899300Z                     diff += 1
2025-01-17T11:32:04.4899350Z     
2025-01-17T11:32:04.4899420Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4899560Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4899710Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4899820Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4899880Z E           
2025-01-17T11:32:04.4899980Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4900200Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4900430Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4900440Z 
2025-01-17T11:32:04.4900690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4900710Z 
2025-01-17T11:32:04.4900850Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4900860Z 
2025-01-17T11:32:04.4901040Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336d1cd0>
2025-01-17T11:32:04.4901180Z plasma = <tardis.plasma.base.BasePlasma object at 0x328744620>
2025-01-17T11:32:04.4901230Z attr = 'tau_sobolevs'
2025-01-17T11:32:04.4901240Z 
2025-01-17T11:32:04.4901340Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4901420Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4901470Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4901520Z         try:
2025-01-17T11:32:04.4901650Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4901710Z         except KeyError:
2025-01-17T11:32:04.4901840Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4901890Z     
2025-01-17T11:32:04.4901940Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4902010Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4902070Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4902190Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4902240Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4902300Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4902380Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4902420Z             else:
2025-01-17T11:32:04.4902490Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4902560Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4902640Z 
2025-01-17T11:32:04.4902750Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4902840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4902950Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4903000Z     ???
2025-01-17T11:32:04.4903210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4903220Z 
2025-01-17T11:32:04.4903260Z >   ???
2025-01-17T11:32:04.4903360Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4903410Z E   
2025-01-17T11:32:04.4903500Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4903580Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4903620Z E          ...
2025-01-17T11:32:04.4903680Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4903770Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4903870Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4903920Z E          ...
2025-01-17T11:32:04.4903980Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4904080Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4904180Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4904180Z 
2025-01-17T11:32:04.4904240Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4904400Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] __
2025-01-17T11:32:04.4904400Z 
2025-01-17T11:32:04.4904490Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4904590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4904660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4904760Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4904860Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4904940Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4905010Z err_msg = None
2025-01-17T11:32:04.4905010Z 
2025-01-17T11:32:04.4905090Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4905140Z         if err_msg is None:
2025-01-17T11:32:04.4905200Z             if left.shape != right.shape:
2025-01-17T11:32:04.4905250Z                 raise_assert_detail(
2025-01-17T11:32:04.4905360Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4905400Z                 )
2025-01-17T11:32:04.4905440Z     
2025-01-17T11:32:04.4905480Z             diff = 0
2025-01-17T11:32:04.4905560Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4905620Z                 # count up differences
2025-01-17T11:32:04.4905750Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4905800Z                     diff += 1
2025-01-17T11:32:04.4905830Z     
2025-01-17T11:32:04.4905890Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4906010Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4906170Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4906280Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4906330Z E           
2025-01-17T11:32:04.4906420Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4906640Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4907150Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4907220Z 
2025-01-17T11:32:04.4907540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4907550Z 
2025-01-17T11:32:04.4907670Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4907670Z 
2025-01-17T11:32:04.4907840Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336d1d90>
2025-01-17T11:32:04.4907970Z plasma = <tardis.plasma.base.BasePlasma object at 0x328744620>
2025-01-17T11:32:04.4908030Z attr = 'beta_sobolev'
2025-01-17T11:32:04.4908030Z 
2025-01-17T11:32:04.4908130Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4908230Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4908280Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4908320Z         try:
2025-01-17T11:32:04.4908430Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4908500Z         except KeyError:
2025-01-17T11:32:04.4908610Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4908670Z     
2025-01-17T11:32:04.4908730Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4908800Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4908880Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4908980Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4909040Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4909110Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4909210Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4909270Z             else:
2025-01-17T11:32:04.4909340Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4909420Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4909420Z 
2025-01-17T11:32:04.4909520Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4909620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4909750Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4909800Z     ???
2025-01-17T11:32:04.4909880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4909890Z 
2025-01-17T11:32:04.4909920Z >   ???
2025-01-17T11:32:04.4910010Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4910050Z E   
2025-01-17T11:32:04.4910160Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4910260Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4910320Z E          ...
2025-01-17T11:32:04.4910380Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4910500Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4910600Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4910660Z E          ...
2025-01-17T11:32:04.4910750Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4910840Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4910920Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4910930Z 
2025-01-17T11:32:04.4910990Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4911150Z ____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-j_blues] _____
2025-01-17T11:32:04.4911160Z 
2025-01-17T11:32:04.4911270Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4911380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4911570Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4911680Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4911790Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4912120Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4912180Z err_msg = None
2025-01-17T11:32:04.4912180Z 
2025-01-17T11:32:04.4912260Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4912330Z         if err_msg is None:
2025-01-17T11:32:04.4912390Z             if left.shape != right.shape:
2025-01-17T11:32:04.4912460Z                 raise_assert_detail(
2025-01-17T11:32:04.4912570Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4912630Z                 )
2025-01-17T11:32:04.4912690Z     
2025-01-17T11:32:04.4912750Z             diff = 0
2025-01-17T11:32:04.4912850Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4912910Z                 # count up differences
2025-01-17T11:32:04.4913050Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4913100Z                     diff += 1
2025-01-17T11:32:04.4913140Z     
2025-01-17T11:32:04.4913210Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4913330Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4913470Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4913560Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4913610Z E           
2025-01-17T11:32:04.4913690Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4913900Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4914120Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4914150Z 
2025-01-17T11:32:04.4914390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4914400Z 
2025-01-17T11:32:04.4914540Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4914550Z 
2025-01-17T11:32:04.4914710Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336d1f10>
2025-01-17T11:32:04.4914860Z plasma = <tardis.plasma.base.BasePlasma object at 0x328744620>, attr = 'j_blues'
2025-01-17T11:32:04.4914870Z 
2025-01-17T11:32:04.4914980Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4915070Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4915160Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4915210Z         try:
2025-01-17T11:32:04.4915320Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4915390Z         except KeyError:
2025-01-17T11:32:04.4915510Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4915560Z     
2025-01-17T11:32:04.4915610Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4915670Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4915730Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4915830Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4916000Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4916060Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4916140Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4916180Z             else:
2025-01-17T11:32:04.4916250Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4916440Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4916440Z 
2025-01-17T11:32:04.4916530Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4916610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4916720Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4916760Z     ???
2025-01-17T11:32:04.4916850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4916850Z 
2025-01-17T11:32:04.4916890Z >   ???
2025-01-17T11:32:04.4917000Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4917050Z E   
2025-01-17T11:32:04.4917150Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4917230Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4917280Z E          ...
2025-01-17T11:32:04.4917340Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4917450Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4917540Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4917580Z E          ...
2025-01-17T11:32:04.4917650Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4917760Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4917840Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4917840Z 
2025-01-17T11:32:04.4917910Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4918100Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines] _______
2025-01-17T11:32:04.4918110Z 
2025-01-17T11:32:04.4918210Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4918320Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4918400Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4918510Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4918620Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4918700Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4918740Z err_msg = None
2025-01-17T11:32:04.4918750Z 
2025-01-17T11:32:04.4918840Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4918900Z         if err_msg is None:
2025-01-17T11:32:04.4918960Z             if left.shape != right.shape:
2025-01-17T11:32:04.4919010Z                 raise_assert_detail(
2025-01-17T11:32:04.4919130Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4919180Z                 )
2025-01-17T11:32:04.4919220Z     
2025-01-17T11:32:04.4919260Z             diff = 0
2025-01-17T11:32:04.4919340Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4919410Z                 # count up differences
2025-01-17T11:32:04.4919550Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4919600Z                     diff += 1
2025-01-17T11:32:04.4919640Z     
2025-01-17T11:32:04.4919690Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4919800Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4919940Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4920020Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4920080Z E           
2025-01-17T11:32:04.4920220Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4920440Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4920760Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4920770Z 
2025-01-17T11:32:04.4921030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4921040Z 
2025-01-17T11:32:04.4921180Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4921190Z 
2025-01-17T11:32:04.4921350Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336d2c90>
2025-01-17T11:32:04.4921500Z plasma = <tardis.plasma.base.BasePlasma object at 0x15d240b60>, attr = 'lines'
2025-01-17T11:32:04.4921510Z 
2025-01-17T11:32:04.4921610Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4921690Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4921740Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4921780Z         try:
2025-01-17T11:32:04.4921890Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4921940Z         except KeyError:
2025-01-17T11:32:04.4922050Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4922100Z     
2025-01-17T11:32:04.4922160Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4922230Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4922310Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4922410Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4922480Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4922560Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4922640Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4922680Z             else:
2025-01-17T11:32:04.4922750Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4922820Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4922820Z 
2025-01-17T11:32:04.4922910Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4923000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4923120Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4923160Z     ???
2025-01-17T11:32:04.4923240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4923240Z 
2025-01-17T11:32:04.4923280Z >   ???
2025-01-17T11:32:04.4923370Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4923420Z E   
2025-01-17T11:32:04.4923530Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4923630Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4923690Z E          ...
2025-01-17T11:32:04.4923750Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4923840Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4923940Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4923980Z E          ...
2025-01-17T11:32:04.4924040Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4924130Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4924200Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4924390Z 
2025-01-17T11:32:04.4924470Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4924680Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] _
2025-01-17T11:32:04.4924690Z 
2025-01-17T11:32:04.4924880Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336d2d50>
2025-01-17T11:32:04.4925090Z plasma = <tardis.plasma.base.BasePlasma object at 0x15d240b60>
2025-01-17T11:32:04.4925160Z attr = 'lines_lower_level_index'
2025-01-17T11:32:04.4925160Z 
2025-01-17T11:32:04.4925260Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4925340Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4925390Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4925430Z         try:
2025-01-17T11:32:04.4925550Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4925610Z         except KeyError:
2025-01-17T11:32:04.4925710Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4925760Z     
2025-01-17T11:32:04.4925810Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4925880Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4925940Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4926060Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4926120Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4926190Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4926280Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4926290Z 
2025-01-17T11:32:04.4926390Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4926490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4926500Z 
2025-01-17T11:32:04.4926630Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.4926690Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.4926790Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4926860Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.4926990Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.4927050Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.4927180Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4927240Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.4927290Z err_msg = None
2025-01-17T11:32:04.4927290Z 
2025-01-17T11:32:04.4927380Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4927440Z         if err_msg is None:
2025-01-17T11:32:04.4927520Z             if left.shape != right.shape:
2025-01-17T11:32:04.4927580Z                 raise_assert_detail(
2025-01-17T11:32:04.4927700Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4927770Z                 )
2025-01-17T11:32:04.4927820Z     
2025-01-17T11:32:04.4927860Z             diff = 0
2025-01-17T11:32:04.4927950Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4928030Z                 # count up differences
2025-01-17T11:32:04.4928160Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4928220Z                     diff += 1
2025-01-17T11:32:04.4928270Z     
2025-01-17T11:32:04.4928340Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4928460Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4928600Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4928700Z E           AssertionError: Series are different
2025-01-17T11:32:04.4928740Z E           
2025-01-17T11:32:04.4928820Z E           Series values are different (4.04858 %)
2025-01-17T11:32:04.4929140Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4929680Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4929980Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4930000Z 
2025-01-17T11:32:04.4930260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4930460Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] _
2025-01-17T11:32:04.4930470Z 
2025-01-17T11:32:04.4930630Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336d2e10>
2025-01-17T11:32:04.4930770Z plasma = <tardis.plasma.base.BasePlasma object at 0x15d240b60>
2025-01-17T11:32:04.4930830Z attr = 'lines_upper_level_index'
2025-01-17T11:32:04.4930840Z 
2025-01-17T11:32:04.4931090Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4931210Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4931270Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4931320Z         try:
2025-01-17T11:32:04.4931430Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4931480Z         except KeyError:
2025-01-17T11:32:04.4931600Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4931650Z     
2025-01-17T11:32:04.4931700Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4931770Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4931830Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4931930Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4931980Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4932040Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4932120Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4932120Z 
2025-01-17T11:32:04.4932210Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4932290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4932300Z 
2025-01-17T11:32:04.4932420Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.4932490Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.4932590Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.4932650Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.4932780Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.4932850Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.4932950Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.4933010Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.4933060Z err_msg = None
2025-01-17T11:32:04.4933060Z 
2025-01-17T11:32:04.4933130Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4933200Z         if err_msg is None:
2025-01-17T11:32:04.4933260Z             if left.shape != right.shape:
2025-01-17T11:32:04.4933480Z                 raise_assert_detail(
2025-01-17T11:32:04.4933590Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4933640Z                 )
2025-01-17T11:32:04.4933690Z     
2025-01-17T11:32:04.4933730Z             diff = 0
2025-01-17T11:32:04.4933930Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4934010Z                 # count up differences
2025-01-17T11:32:04.4934150Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4934210Z                     diff += 1
2025-01-17T11:32:04.4934260Z     
2025-01-17T11:32:04.4934330Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4934430Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4934560Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4934640Z E           AssertionError: Series are different
2025-01-17T11:32:04.4934700Z E           
2025-01-17T11:32:04.4934780Z E           Series values are different (6.47773 %)
2025-01-17T11:32:04.4935080Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4935390Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.4935730Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.4935740Z 
2025-01-17T11:32:04.4936000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4936170Z ________ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-nu] _________
2025-01-17T11:32:04.4936180Z 
2025-01-17T11:32:04.4936280Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4936380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4936480Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4936580Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4936680Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4936750Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4936800Z err_msg = None
2025-01-17T11:32:04.4936800Z 
2025-01-17T11:32:04.4936900Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4936970Z         if err_msg is None:
2025-01-17T11:32:04.4937050Z             if left.shape != right.shape:
2025-01-17T11:32:04.4937130Z                 raise_assert_detail(
2025-01-17T11:32:04.4937240Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4937290Z                 )
2025-01-17T11:32:04.4937340Z     
2025-01-17T11:32:04.4937390Z             diff = 0
2025-01-17T11:32:04.4937540Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4937620Z                 # count up differences
2025-01-17T11:32:04.4937780Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4937830Z                     diff += 1
2025-01-17T11:32:04.4937990Z     
2025-01-17T11:32:04.4938060Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4938170Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4938320Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4938440Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4938490Z E           
2025-01-17T11:32:04.4943740Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4944000Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4944230Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4944250Z 
2025-01-17T11:32:04.4944510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4944520Z 
2025-01-17T11:32:04.4944660Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4944670Z 
2025-01-17T11:32:04.4944850Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336d3050>
2025-01-17T11:32:04.4945020Z plasma = <tardis.plasma.base.BasePlasma object at 0x15d240b60>, attr = 'nu'
2025-01-17T11:32:04.4945030Z 
2025-01-17T11:32:04.4945130Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4945230Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4945300Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4945350Z         try:
2025-01-17T11:32:04.4945460Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4945530Z         except KeyError:
2025-01-17T11:32:04.4945650Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4945700Z     
2025-01-17T11:32:04.4945770Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4945840Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4945890Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4946010Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4946090Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4946160Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4946260Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4946270Z 
2025-01-17T11:32:04.4946360Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4946440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4946550Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4946610Z     ???
2025-01-17T11:32:04.4946700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4946700Z 
2025-01-17T11:32:04.4946740Z >   ???
2025-01-17T11:32:04.4946830Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4946870Z E   
2025-01-17T11:32:04.4946970Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4947050Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4947090Z E          ...
2025-01-17T11:32:04.4947390Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4947510Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4947710Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4947770Z E          ...
2025-01-17T11:32:04.4947840Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4948040Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4948130Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4948130Z 
2025-01-17T11:32:04.4948190Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4948350Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] ___
2025-01-17T11:32:04.4948360Z 
2025-01-17T11:32:04.4948450Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4948550Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4948620Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4948740Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4948840Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4948910Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4948950Z err_msg = None
2025-01-17T11:32:04.4948950Z 
2025-01-17T11:32:04.4949030Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4949100Z         if err_msg is None:
2025-01-17T11:32:04.4949180Z             if left.shape != right.shape:
2025-01-17T11:32:04.4949240Z                 raise_assert_detail(
2025-01-17T11:32:04.4949350Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4949410Z                 )
2025-01-17T11:32:04.4949440Z     
2025-01-17T11:32:04.4949490Z             diff = 0
2025-01-17T11:32:04.4949580Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4949650Z                 # count up differences
2025-01-17T11:32:04.4949790Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4949860Z                     diff += 1
2025-01-17T11:32:04.4949920Z     
2025-01-17T11:32:04.4949980Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4950080Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4950200Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4950290Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4950330Z E           
2025-01-17T11:32:04.4950410Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4950630Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4950870Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4950890Z 
2025-01-17T11:32:04.4951150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4951160Z 
2025-01-17T11:32:04.4951310Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4951320Z 
2025-01-17T11:32:04.4951500Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336d3110>
2025-01-17T11:32:04.4951620Z plasma = <tardis.plasma.base.BasePlasma object at 0x15d240b60>
2025-01-17T11:32:04.4951740Z attr = 'wavelength_cm'
2025-01-17T11:32:04.4951750Z 
2025-01-17T11:32:04.4951850Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4951930Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4951980Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4952330Z         try:
2025-01-17T11:32:04.4952440Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4952490Z         except KeyError:
2025-01-17T11:32:04.4952590Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4952630Z     
2025-01-17T11:32:04.4952710Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4952780Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4952830Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4952930Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4952990Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4953070Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4953150Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4953150Z 
2025-01-17T11:32:04.4953230Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4953330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4953450Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4953500Z     ???
2025-01-17T11:32:04.4953600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4953610Z 
2025-01-17T11:32:04.4953660Z >   ???
2025-01-17T11:32:04.4953750Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4953800Z E   
2025-01-17T11:32:04.4953890Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4953990Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4954030Z E          ...
2025-01-17T11:32:04.4954100Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4954190Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4954270Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4954310Z E          ...
2025-01-17T11:32:04.4954380Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4954490Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4954560Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4954560Z 
2025-01-17T11:32:04.4954620Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4954760Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-f_lu] ________
2025-01-17T11:32:04.4954770Z 
2025-01-17T11:32:04.4954870Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4954960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4955050Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4955150Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4955240Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4955310Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4955360Z err_msg = None
2025-01-17T11:32:04.4955360Z 
2025-01-17T11:32:04.4955440Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4955520Z         if err_msg is None:
2025-01-17T11:32:04.4955590Z             if left.shape != right.shape:
2025-01-17T11:32:04.4955670Z                 raise_assert_detail(
2025-01-17T11:32:04.4955780Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4955830Z                 )
2025-01-17T11:32:04.4955880Z     
2025-01-17T11:32:04.4955930Z             diff = 0
2025-01-17T11:32:04.4956090Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4956170Z                 # count up differences
2025-01-17T11:32:04.4956310Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4956360Z                     diff += 1
2025-01-17T11:32:04.4956460Z     
2025-01-17T11:32:04.4956520Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4956620Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4956750Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4956840Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4956880Z E           
2025-01-17T11:32:04.4956960Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4957170Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4957400Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4957400Z 
2025-01-17T11:32:04.4957660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4957670Z 
2025-01-17T11:32:04.4957800Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4957800Z 
2025-01-17T11:32:04.4957960Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336d31d0>
2025-01-17T11:32:04.4958120Z plasma = <tardis.plasma.base.BasePlasma object at 0x15d240b60>, attr = 'f_lu'
2025-01-17T11:32:04.4958140Z 
2025-01-17T11:32:04.4958260Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4958360Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4958420Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4958480Z         try:
2025-01-17T11:32:04.4958600Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4958660Z         except KeyError:
2025-01-17T11:32:04.4958760Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4958810Z     
2025-01-17T11:32:04.4958870Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4958940Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4959010Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4959110Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4959160Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4959220Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4959320Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4959320Z 
2025-01-17T11:32:04.4959410Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4959490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4959600Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4959640Z     ???
2025-01-17T11:32:04.4959730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4959730Z 
2025-01-17T11:32:04.4959780Z >   ???
2025-01-17T11:32:04.4959880Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4959920Z E   
2025-01-17T11:32:04.4960010Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4960100Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4960160Z E          ...
2025-01-17T11:32:04.4960290Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4960400Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4960490Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4960530Z E          ...
2025-01-17T11:32:04.4960610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4960780Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4960870Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4960880Z 
2025-01-17T11:32:04.4960940Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4961110Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] ____
2025-01-17T11:32:04.4961120Z 
2025-01-17T11:32:04.4961230Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4961350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4961430Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4961550Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4961660Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4961730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4961780Z err_msg = None
2025-01-17T11:32:04.4961780Z 
2025-01-17T11:32:04.4961850Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4961900Z         if err_msg is None:
2025-01-17T11:32:04.4961970Z             if left.shape != right.shape:
2025-01-17T11:32:04.4962020Z                 raise_assert_detail(
2025-01-17T11:32:04.4962120Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4962160Z                 )
2025-01-17T11:32:04.4962210Z     
2025-01-17T11:32:04.4962250Z             diff = 0
2025-01-17T11:32:04.4962330Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4962380Z                 # count up differences
2025-01-17T11:32:04.4962520Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4962570Z                     diff += 1
2025-01-17T11:32:04.4962610Z     
2025-01-17T11:32:04.4962670Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4962790Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4962940Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4963030Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4963070Z E           
2025-01-17T11:32:04.4963150Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4963370Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4963590Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4963600Z 
2025-01-17T11:32:04.4963840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4963850Z 
2025-01-17T11:32:04.4963980Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4963980Z 
2025-01-17T11:32:04.4964150Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336d3950>
2025-01-17T11:32:04.4964280Z plasma = <tardis.plasma.base.BasePlasma object at 0x15d240b60>
2025-01-17T11:32:04.4964510Z attr = 'tau_sobolevs'
2025-01-17T11:32:04.4964510Z 
2025-01-17T11:32:04.4964630Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4964730Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4964790Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4964940Z         try:
2025-01-17T11:32:04.4965060Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4965130Z         except KeyError:
2025-01-17T11:32:04.4965240Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4965300Z     
2025-01-17T11:32:04.4965370Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4965440Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4965500Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4965590Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4965650Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4965710Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4965800Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4965850Z             else:
2025-01-17T11:32:04.4965920Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4966000Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4966000Z 
2025-01-17T11:32:04.4966090Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4966180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4966300Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4966350Z     ???
2025-01-17T11:32:04.4966440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4966440Z 
2025-01-17T11:32:04.4966480Z >   ???
2025-01-17T11:32:04.4966570Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4966610Z E   
2025-01-17T11:32:04.4966710Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4966790Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4966830Z E          ...
2025-01-17T11:32:04.4966890Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4967010Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4967100Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4967140Z E          ...
2025-01-17T11:32:04.4967210Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4967320Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4967400Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4967400Z 
2025-01-17T11:32:04.4967460Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4967630Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] ____
2025-01-17T11:32:04.4967630Z 
2025-01-17T11:32:04.4967730Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4967830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4967900Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4968010Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4968110Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4968180Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4968240Z err_msg = None
2025-01-17T11:32:04.4968240Z 
2025-01-17T11:32:04.4968320Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4968390Z         if err_msg is None:
2025-01-17T11:32:04.4968470Z             if left.shape != right.shape:
2025-01-17T11:32:04.4968540Z                 raise_assert_detail(
2025-01-17T11:32:04.4968670Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4968810Z                 )
2025-01-17T11:32:04.4968860Z     
2025-01-17T11:32:04.4968910Z             diff = 0
2025-01-17T11:32:04.4968980Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4969060Z                 # count up differences
2025-01-17T11:32:04.4969570Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4969630Z                     diff += 1
2025-01-17T11:32:04.4969670Z     
2025-01-17T11:32:04.4969730Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4970020Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4970260Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4970350Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4970390Z E           
2025-01-17T11:32:04.4970480Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4970690Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4970910Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4970920Z 
2025-01-17T11:32:04.4971190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4971190Z 
2025-01-17T11:32:04.4971340Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4971350Z 
2025-01-17T11:32:04.4971520Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336d3a10>
2025-01-17T11:32:04.4971640Z plasma = <tardis.plasma.base.BasePlasma object at 0x15d240b60>
2025-01-17T11:32:04.4971690Z attr = 'beta_sobolev'
2025-01-17T11:32:04.4971700Z 
2025-01-17T11:32:04.4971800Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4971880Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4971940Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4971980Z         try:
2025-01-17T11:32:04.4972090Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4972140Z         except KeyError:
2025-01-17T11:32:04.4972240Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4972280Z     
2025-01-17T11:32:04.4972330Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4972400Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4972460Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4972560Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4972620Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4972670Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4972760Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4972800Z             else:
2025-01-17T11:32:04.4972860Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4972940Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4972940Z 
2025-01-17T11:32:04.4973030Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4973120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4973230Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4973270Z     ???
2025-01-17T11:32:04.4973350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4973490Z 
2025-01-17T11:32:04.4973530Z >   ???
2025-01-17T11:32:04.4973630Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4973670Z E   
2025-01-17T11:32:04.4973760Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4973840Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4973940Z E          ...
2025-01-17T11:32:04.4974000Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4974100Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4974170Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4974220Z E          ...
2025-01-17T11:32:04.4974280Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4974370Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4974440Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4974450Z 
2025-01-17T11:32:04.4974500Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4974650Z ______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-j_blues] ______
2025-01-17T11:32:04.4974660Z 
2025-01-17T11:32:04.4974750Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4974870Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4974950Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4975050Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4975140Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4975210Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4975250Z err_msg = None
2025-01-17T11:32:04.4975260Z 
2025-01-17T11:32:04.4975330Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4975390Z         if err_msg is None:
2025-01-17T11:32:04.4975450Z             if left.shape != right.shape:
2025-01-17T11:32:04.4975500Z                 raise_assert_detail(
2025-01-17T11:32:04.4975610Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4975650Z                 )
2025-01-17T11:32:04.4975700Z     
2025-01-17T11:32:04.4975740Z             diff = 0
2025-01-17T11:32:04.4975820Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4975890Z                 # count up differences
2025-01-17T11:32:04.4976040Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4976090Z                     diff += 1
2025-01-17T11:32:04.4976130Z     
2025-01-17T11:32:04.4976200Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4976310Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4976450Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4976550Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4976600Z E           
2025-01-17T11:32:04.4976680Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4976900Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4977110Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4977110Z 
2025-01-17T11:32:04.4977460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4977470Z 
2025-01-17T11:32:04.4977610Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4977610Z 
2025-01-17T11:32:04.4977800Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336d3b90>
2025-01-17T11:32:04.4978080Z plasma = <tardis.plasma.base.BasePlasma object at 0x15d240b60>, attr = 'j_blues'
2025-01-17T11:32:04.4978090Z 
2025-01-17T11:32:04.4978190Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4978290Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4978360Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4978410Z         try:
2025-01-17T11:32:04.4978510Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4978560Z         except KeyError:
2025-01-17T11:32:04.4978660Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4978720Z     
2025-01-17T11:32:04.4978790Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4978860Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4978940Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4979050Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4979120Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4979190Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4979280Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4979330Z             else:
2025-01-17T11:32:04.4979400Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4979530Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4979540Z 
2025-01-17T11:32:04.4979650Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4979740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4979850Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4979890Z     ???
2025-01-17T11:32:04.4979970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4979980Z 
2025-01-17T11:32:04.4980030Z >   ???
2025-01-17T11:32:04.4980140Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4980190Z E   
2025-01-17T11:32:04.4980280Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4980360Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4980400Z E          ...
2025-01-17T11:32:04.4980460Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4980550Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4980630Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4980670Z E          ...
2025-01-17T11:32:04.4980730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4980820Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4980900Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4980900Z 
2025-01-17T11:32:04.4980960Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4981100Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines] ________
2025-01-17T11:32:04.4981110Z 
2025-01-17T11:32:04.4981200Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4981300Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4981370Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4981470Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.4981570Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4981630Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.4982130Z err_msg = None
2025-01-17T11:32:04.4982140Z 
2025-01-17T11:32:04.4982230Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4982290Z         if err_msg is None:
2025-01-17T11:32:04.4982380Z             if left.shape != right.shape:
2025-01-17T11:32:04.4982510Z                 raise_assert_detail(
2025-01-17T11:32:04.4982620Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4982670Z                 )
2025-01-17T11:32:04.4982720Z     
2025-01-17T11:32:04.4982770Z             diff = 0
2025-01-17T11:32:04.4982860Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4982950Z                 # count up differences
2025-01-17T11:32:04.4983080Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4983130Z                     diff += 1
2025-01-17T11:32:04.4983180Z     
2025-01-17T11:32:04.4983240Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4983350Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4983500Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4983600Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.4983650Z E           
2025-01-17T11:32:04.4983730Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.4983930Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4984150Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4984170Z 
2025-01-17T11:32:04.4984400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4984400Z 
2025-01-17T11:32:04.4984550Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.4984560Z 
2025-01-17T11:32:04.4984750Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336f8950>
2025-01-17T11:32:04.4984940Z plasma = <tardis.plasma.base.BasePlasma object at 0x1533cb710>, attr = 'lines'
2025-01-17T11:32:04.4984940Z 
2025-01-17T11:32:04.4985060Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4985180Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4985250Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4985300Z         try:
2025-01-17T11:32:04.4985400Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4985460Z         except KeyError:
2025-01-17T11:32:04.4985560Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4985600Z     
2025-01-17T11:32:04.4985670Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4985740Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4985800Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4985900Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4985950Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4986010Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4986100Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4986140Z             else:
2025-01-17T11:32:04.4986210Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.4986300Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.4986310Z 
2025-01-17T11:32:04.4986480Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.4986560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4986670Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.4986710Z     ???
2025-01-17T11:32:04.4986960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4986960Z 
2025-01-17T11:32:04.4987000Z >   ???
2025-01-17T11:32:04.4987090Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.4987130Z E   
2025-01-17T11:32:04.4987240Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.4987340Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4987390Z E          ...
2025-01-17T11:32:04.4987450Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4987560Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4987680Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.4987720Z E          ...
2025-01-17T11:32:04.4987800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.4987890Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.4987970Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.4987970Z 
2025-01-17T11:32:04.4988050Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.4988240Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] _
2025-01-17T11:32:04.4988250Z 
2025-01-17T11:32:04.4988410Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336f8a10>
2025-01-17T11:32:04.4988550Z plasma = <tardis.plasma.base.BasePlasma object at 0x1533cb710>
2025-01-17T11:32:04.4988610Z attr = 'lines_lower_level_index'
2025-01-17T11:32:04.4988610Z 
2025-01-17T11:32:04.4988730Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4988840Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4988910Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4988960Z         try:
2025-01-17T11:32:04.4989080Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4989150Z         except KeyError:
2025-01-17T11:32:04.4989280Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.4989330Z     
2025-01-17T11:32:04.4989390Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.4989470Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.4989520Z             if attr == "selected_atoms":
2025-01-17T11:32:04.4989620Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.4989680Z             elif actual.ndim == 1:
2025-01-17T11:32:04.4989760Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.4989850Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.4989860Z 
2025-01-17T11:32:04.4989950Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.4990040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.4990040Z 
2025-01-17T11:32:04.4990150Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.4990200Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.4990290Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4990340Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.4990460Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.4990520Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.4990610Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.4990670Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.4990720Z err_msg = None
2025-01-17T11:32:04.4990720Z 
2025-01-17T11:32:04.4990810Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.4990940Z         if err_msg is None:
2025-01-17T11:32:04.4991000Z             if left.shape != right.shape:
2025-01-17T11:32:04.4991050Z                 raise_assert_detail(
2025-01-17T11:32:04.4991150Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.4991270Z                 )
2025-01-17T11:32:04.4991320Z     
2025-01-17T11:32:04.4991360Z             diff = 0
2025-01-17T11:32:04.4991460Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.4991520Z                 # count up differences
2025-01-17T11:32:04.4991660Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.4991720Z                     diff += 1
2025-01-17T11:32:04.4991760Z     
2025-01-17T11:32:04.4991820Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.4991930Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.4992060Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.4992130Z E           AssertionError: Series are different
2025-01-17T11:32:04.4992170Z E           
2025-01-17T11:32:04.4992260Z E           Series values are different (4.04858 %)
2025-01-17T11:32:04.4992550Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.4992850Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4993130Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.4993140Z 
2025-01-17T11:32:04.4993380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.4993580Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] _
2025-01-17T11:32:04.4993590Z 
2025-01-17T11:32:04.4993780Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336f8ad0>
2025-01-17T11:32:04.4993920Z plasma = <tardis.plasma.base.BasePlasma object at 0x1533cb710>
2025-01-17T11:32:04.4999340Z attr = 'lines_upper_level_index'
2025-01-17T11:32:04.4999360Z 
2025-01-17T11:32:04.4999470Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.4999560Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.4999620Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.4999670Z         try:
2025-01-17T11:32:04.4999790Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.4999840Z         except KeyError:
2025-01-17T11:32:04.4999950Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.5000000Z     
2025-01-17T11:32:04.5000060Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.5000130Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.5000190Z             if attr == "selected_atoms":
2025-01-17T11:32:04.5000290Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.5000350Z             elif actual.ndim == 1:
2025-01-17T11:32:04.5000530Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.5000610Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.5000610Z 
2025-01-17T11:32:04.5000710Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.5000800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5000860Z 
2025-01-17T11:32:04.5000970Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.5001030Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.5001120Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.5001170Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.5001280Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.5001340Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.5001430Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.5001490Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.5001530Z err_msg = None
2025-01-17T11:32:04.5001540Z 
2025-01-17T11:32:04.5001620Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.5001670Z         if err_msg is None:
2025-01-17T11:32:04.5001740Z             if left.shape != right.shape:
2025-01-17T11:32:04.5001800Z                 raise_assert_detail(
2025-01-17T11:32:04.5001910Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.5001950Z                 )
2025-01-17T11:32:04.5001990Z     
2025-01-17T11:32:04.5002040Z             diff = 0
2025-01-17T11:32:04.5002120Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.5002180Z                 # count up differences
2025-01-17T11:32:04.5002310Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.5002360Z                     diff += 1
2025-01-17T11:32:04.5002410Z     
2025-01-17T11:32:04.5002470Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.5002580Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.5002710Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.5002790Z E           AssertionError: Series are different
2025-01-17T11:32:04.5002840Z E           
2025-01-17T11:32:04.5002910Z E           Series values are different (6.47773 %)
2025-01-17T11:32:04.5003210Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.5003510Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.5003820Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.5003830Z 
2025-01-17T11:32:04.5004070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.5004640Z _________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-nu] __________
2025-01-17T11:32:04.5004640Z 
2025-01-17T11:32:04.5004750Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5004860Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5005050Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5005160Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5005260Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5005330Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5005380Z err_msg = None
2025-01-17T11:32:04.5005390Z 
2025-01-17T11:32:04.5005690Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.5005760Z         if err_msg is None:
2025-01-17T11:32:04.5005840Z             if left.shape != right.shape:
2025-01-17T11:32:04.5005900Z                 raise_assert_detail(
2025-01-17T11:32:04.5006020Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.5006090Z                 )
2025-01-17T11:32:04.5006140Z     
2025-01-17T11:32:04.5006200Z             diff = 0
2025-01-17T11:32:04.5006290Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.5006350Z                 # count up differences
2025-01-17T11:32:04.5006500Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.5006570Z                     diff += 1
2025-01-17T11:32:04.5006610Z     
2025-01-17T11:32:04.5006680Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.5006810Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.5006950Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.5007040Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.5007080Z E           
2025-01-17T11:32:04.5007190Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.5007430Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5007660Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5007660Z 
2025-01-17T11:32:04.5007940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.5007950Z 
2025-01-17T11:32:04.5008080Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.5008090Z 
2025-01-17T11:32:04.5008280Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336f8d10>
2025-01-17T11:32:04.5008460Z plasma = <tardis.plasma.base.BasePlasma object at 0x1533cb710>, attr = 'nu'
2025-01-17T11:32:04.5008460Z 
2025-01-17T11:32:04.5008580Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.5008690Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.5008760Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.5008810Z         try:
2025-01-17T11:32:04.5008920Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.5008970Z         except KeyError:
2025-01-17T11:32:04.5009090Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.5009140Z     
2025-01-17T11:32:04.5009300Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.5009380Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.5100090Z             if attr == "selected_atoms":
2025-01-17T11:32:04.5100430Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.5100490Z             elif actual.ndim == 1:
2025-01-17T11:32:04.5101270Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.5101360Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.5101370Z 
2025-01-17T11:32:04.5101470Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.5101560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5101670Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5101750Z     ???
2025-01-17T11:32:04.5101840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5101850Z 
2025-01-17T11:32:04.5101900Z >   ???
2025-01-17T11:32:04.5102000Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.5102040Z E   
2025-01-17T11:32:04.5102140Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.5102220Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5102270Z E          ...
2025-01-17T11:32:04.5102330Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5102430Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5102520Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5102560Z E          ...
2025-01-17T11:32:04.5102620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5102720Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5102790Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.5102790Z 
2025-01-17T11:32:04.5102850Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5103010Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] ____
2025-01-17T11:32:04.5103010Z 
2025-01-17T11:32:04.5103110Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5103210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5103280Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5103390Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5103480Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5103560Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5103600Z err_msg = None
2025-01-17T11:32:04.5103600Z 
2025-01-17T11:32:04.5103680Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.5103730Z         if err_msg is None:
2025-01-17T11:32:04.5103800Z             if left.shape != right.shape:
2025-01-17T11:32:04.5103850Z                 raise_assert_detail(
2025-01-17T11:32:04.5103960Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.5104000Z                 )
2025-01-17T11:32:04.5104050Z     
2025-01-17T11:32:04.5104090Z             diff = 0
2025-01-17T11:32:04.5104180Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.5104230Z                 # count up differences
2025-01-17T11:32:04.5104360Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.5104400Z                     diff += 1
2025-01-17T11:32:04.5104440Z     
2025-01-17T11:32:04.5104500Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.5104600Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.5104730Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.5104960Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.5105010Z E           
2025-01-17T11:32:04.5105080Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.5105290Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5105540Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5105550Z 
2025-01-17T11:32:04.5105780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.5105790Z 
2025-01-17T11:32:04.5105920Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.5105920Z 
2025-01-17T11:32:04.5106080Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336f8dd0>
2025-01-17T11:32:04.5106210Z plasma = <tardis.plasma.base.BasePlasma object at 0x1533cb710>
2025-01-17T11:32:04.5106260Z attr = 'wavelength_cm'
2025-01-17T11:32:04.5106260Z 
2025-01-17T11:32:04.5106370Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.5106450Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.5106510Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.5106550Z         try:
2025-01-17T11:32:04.5106650Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.5106700Z         except KeyError:
2025-01-17T11:32:04.5106800Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.5106840Z     
2025-01-17T11:32:04.5106900Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.5106960Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.5107020Z             if attr == "selected_atoms":
2025-01-17T11:32:04.5107120Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.5107180Z             elif actual.ndim == 1:
2025-01-17T11:32:04.5107240Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.5107320Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.5107320Z 
2025-01-17T11:32:04.5107400Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.5107490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5107590Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5107630Z     ???
2025-01-17T11:32:04.5107710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5107720Z 
2025-01-17T11:32:04.5107760Z >   ???
2025-01-17T11:32:04.5107850Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.5107890Z E   
2025-01-17T11:32:04.5107990Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.5108060Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5108110Z E          ...
2025-01-17T11:32:04.5108170Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5108260Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5108340Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5108390Z E          ...
2025-01-17T11:32:04.5108450Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5108540Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5108610Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.5108610Z 
2025-01-17T11:32:04.5108670Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5108860Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-f_lu] _________
2025-01-17T11:32:04.5108870Z 
2025-01-17T11:32:04.5108970Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5109070Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5109180Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5109280Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5109380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5109450Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5109490Z err_msg = None
2025-01-17T11:32:04.5109490Z 
2025-01-17T11:32:04.5109570Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.5109620Z         if err_msg is None:
2025-01-17T11:32:04.5109680Z             if left.shape != right.shape:
2025-01-17T11:32:04.5109740Z                 raise_assert_detail(
2025-01-17T11:32:04.5109850Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.5109890Z                 )
2025-01-17T11:32:04.5109930Z     
2025-01-17T11:32:04.5109970Z             diff = 0
2025-01-17T11:32:04.5110050Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.5110110Z                 # count up differences
2025-01-17T11:32:04.5110230Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.5110280Z                     diff += 1
2025-01-17T11:32:04.5110320Z     
2025-01-17T11:32:04.5110380Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.5110480Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.5110610Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.5110690Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.5110730Z E           
2025-01-17T11:32:04.5110810Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.5111010Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5111210Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5111220Z 
2025-01-17T11:32:04.5111460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.5111470Z 
2025-01-17T11:32:04.5111590Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.5111590Z 
2025-01-17T11:32:04.5111760Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336f8e90>
2025-01-17T11:32:04.5111910Z plasma = <tardis.plasma.base.BasePlasma object at 0x1533cb710>, attr = 'f_lu'
2025-01-17T11:32:04.5111910Z 
2025-01-17T11:32:04.5112010Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.5112090Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.5112150Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.5112190Z         try:
2025-01-17T11:32:04.5112290Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.5112340Z         except KeyError:
2025-01-17T11:32:04.5112440Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.5112480Z     
2025-01-17T11:32:04.5112780Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.5112840Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.5112900Z             if attr == "selected_atoms":
2025-01-17T11:32:04.5113000Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.5113060Z             elif actual.ndim == 1:
2025-01-17T11:32:04.5113170Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.5113250Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.5113250Z 
2025-01-17T11:32:04.5113340Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.5113420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5113530Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5113570Z     ???
2025-01-17T11:32:04.5113650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5113660Z 
2025-01-17T11:32:04.5113700Z >   ???
2025-01-17T11:32:04.5113790Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.5113830Z E   
2025-01-17T11:32:04.5113920Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.5114000Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5114040Z E          ...
2025-01-17T11:32:04.5114100Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5114200Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5114280Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5114320Z E          ...
2025-01-17T11:32:04.5114380Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5114470Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5114540Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.5114540Z 
2025-01-17T11:32:04.5114600Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5114750Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] _____
2025-01-17T11:32:04.5114750Z 
2025-01-17T11:32:04.5114850Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5114950Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5115020Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5115120Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5115210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5115280Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5115330Z err_msg = None
2025-01-17T11:32:04.5115330Z 
2025-01-17T11:32:04.5115400Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.5115450Z         if err_msg is None:
2025-01-17T11:32:04.5115520Z             if left.shape != right.shape:
2025-01-17T11:32:04.5115570Z                 raise_assert_detail(
2025-01-17T11:32:04.5115680Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.5115720Z                 )
2025-01-17T11:32:04.5115760Z     
2025-01-17T11:32:04.5115810Z             diff = 0
2025-01-17T11:32:04.5115890Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.5115940Z                 # count up differences
2025-01-17T11:32:04.5116080Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.5116120Z                     diff += 1
2025-01-17T11:32:04.5116160Z     
2025-01-17T11:32:04.5116220Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.5116320Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.5116450Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.5116570Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.5116620Z E           
2025-01-17T11:32:04.5116700Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.5116900Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5117410Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5117410Z 
2025-01-17T11:32:04.5117640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.5117650Z 
2025-01-17T11:32:04.5117770Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.5117770Z 
2025-01-17T11:32:04.5117930Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336f9610>
2025-01-17T11:32:04.5118050Z plasma = <tardis.plasma.base.BasePlasma object at 0x1533cb710>
2025-01-17T11:32:04.5118100Z attr = 'tau_sobolevs'
2025-01-17T11:32:04.5118110Z 
2025-01-17T11:32:04.5118200Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.5118280Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.5118330Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.5118380Z         try:
2025-01-17T11:32:04.5118480Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.5118530Z         except KeyError:
2025-01-17T11:32:04.5118630Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.5118670Z     
2025-01-17T11:32:04.5118720Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.5118790Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.5118840Z             if attr == "selected_atoms":
2025-01-17T11:32:04.5118940Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.5118990Z             elif actual.ndim == 1:
2025-01-17T11:32:04.5119060Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.5119130Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.5119170Z             else:
2025-01-17T11:32:04.5119240Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.5119310Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.5119310Z 
2025-01-17T11:32:04.5119400Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.5119480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5119590Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5119630Z     ???
2025-01-17T11:32:04.5119710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5119720Z 
2025-01-17T11:32:04.5119760Z >   ???
2025-01-17T11:32:04.5119840Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.5119890Z E   
2025-01-17T11:32:04.5119980Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.5120060Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5120110Z E          ...
2025-01-17T11:32:04.5120160Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5120260Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5120330Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5120380Z E          ...
2025-01-17T11:32:04.5120440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5120530Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5120670Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.5120680Z 
2025-01-17T11:32:04.5120740Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5120890Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] _____
2025-01-17T11:32:04.5120930Z 
2025-01-17T11:32:04.5121040Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5121140Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5121200Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5121300Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5121400Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5121470Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5121510Z err_msg = None
2025-01-17T11:32:04.5121520Z 
2025-01-17T11:32:04.5121590Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.5121640Z         if err_msg is None:
2025-01-17T11:32:04.5121700Z             if left.shape != right.shape:
2025-01-17T11:32:04.5121760Z                 raise_assert_detail(
2025-01-17T11:32:04.5121860Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.5121900Z                 )
2025-01-17T11:32:04.5121940Z     
2025-01-17T11:32:04.5121980Z             diff = 0
2025-01-17T11:32:04.5122060Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.5122120Z                 # count up differences
2025-01-17T11:32:04.5122250Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.5122290Z                     diff += 1
2025-01-17T11:32:04.5122340Z     
2025-01-17T11:32:04.5122390Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.5122500Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.5122620Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.5122700Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.5122740Z E           
2025-01-17T11:32:04.5122820Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.5123020Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5123220Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5123230Z 
2025-01-17T11:32:04.5123450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.5123460Z 
2025-01-17T11:32:04.5123590Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.5123590Z 
2025-01-17T11:32:04.5123760Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336f96d0>
2025-01-17T11:32:04.5123880Z plasma = <tardis.plasma.base.BasePlasma object at 0x1533cb710>
2025-01-17T11:32:04.5123920Z attr = 'beta_sobolev'
2025-01-17T11:32:04.5123920Z 
2025-01-17T11:32:04.5124020Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.5124100Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.5124150Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.5124190Z         try:
2025-01-17T11:32:04.5124300Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.5124380Z         except KeyError:
2025-01-17T11:32:04.5124490Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.5124530Z     
2025-01-17T11:32:04.5124580Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.5124690Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.5124750Z             if attr == "selected_atoms":
2025-01-17T11:32:04.5124850Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.5124910Z             elif actual.ndim == 1:
2025-01-17T11:32:04.5124960Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.5125040Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.5125080Z             else:
2025-01-17T11:32:04.5125150Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.5125220Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.5125220Z 
2025-01-17T11:32:04.5125310Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.5125400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5125500Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5125550Z     ???
2025-01-17T11:32:04.5125630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5125630Z 
2025-01-17T11:32:04.5125680Z >   ???
2025-01-17T11:32:04.5125770Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.5125810Z E   
2025-01-17T11:32:04.5125900Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.5125980Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5126020Z E          ...
2025-01-17T11:32:04.5126080Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5126170Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5126250Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5126290Z E          ...
2025-01-17T11:32:04.5126350Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5126440Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5126510Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.5126510Z 
2025-01-17T11:32:04.5126570Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5126720Z _______ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-j_blues] _______
2025-01-17T11:32:04.5126720Z 
2025-01-17T11:32:04.5126810Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5126910Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5126980Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5127080Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5127180Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5127250Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5127290Z err_msg = None
2025-01-17T11:32:04.5127300Z 
2025-01-17T11:32:04.5127370Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.5127420Z         if err_msg is None:
2025-01-17T11:32:04.5127480Z             if left.shape != right.shape:
2025-01-17T11:32:04.5127540Z                 raise_assert_detail(
2025-01-17T11:32:04.5127640Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.5127680Z                 )
2025-01-17T11:32:04.5127730Z     
2025-01-17T11:32:04.5127770Z             diff = 0
2025-01-17T11:32:04.5127850Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.5127910Z                 # count up differences
2025-01-17T11:32:04.5128040Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.5128430Z                     diff += 1
2025-01-17T11:32:04.5128470Z     
2025-01-17T11:32:04.5128520Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.5128620Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.5128810Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.5128890Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.5128930Z E           
2025-01-17T11:32:04.5129010Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.5129200Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5129400Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5129410Z 
2025-01-17T11:32:04.5129640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.5129650Z 
2025-01-17T11:32:04.5129770Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.5129770Z 
2025-01-17T11:32:04.5129930Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336f9850>
2025-01-17T11:32:04.5130080Z plasma = <tardis.plasma.base.BasePlasma object at 0x1533cb710>, attr = 'j_blues'
2025-01-17T11:32:04.5130090Z 
2025-01-17T11:32:04.5130190Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.5130280Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.5130330Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.5130370Z         try:
2025-01-17T11:32:04.5130480Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.5130530Z         except KeyError:
2025-01-17T11:32:04.5130630Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.5130670Z     
2025-01-17T11:32:04.5130720Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.5130790Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.5130840Z             if attr == "selected_atoms":
2025-01-17T11:32:04.5130940Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.5130990Z             elif actual.ndim == 1:
2025-01-17T11:32:04.5131050Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.5131130Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.5131260Z             else:
2025-01-17T11:32:04.5131330Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.5131410Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.5131410Z 
2025-01-17T11:32:04.5131500Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.5131580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5131700Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5131750Z     ???
2025-01-17T11:32:04.5131830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5131840Z 
2025-01-17T11:32:04.5131880Z >   ???
2025-01-17T11:32:04.5131970Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.5132010Z E   
2025-01-17T11:32:04.5132100Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.5132180Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5132230Z E          ...
2025-01-17T11:32:04.5132360Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5132460Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5132550Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5132590Z E          ...
2025-01-17T11:32:04.5132650Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5132920Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5133000Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.5133010Z 
2025-01-17T11:32:04.5133070Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5133220Z ____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines] _____
2025-01-17T11:32:04.5133220Z 
2025-01-17T11:32:04.5133320Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5133420Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5133490Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5133590Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5133690Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5133750Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5133800Z err_msg = None
2025-01-17T11:32:04.5133800Z 
2025-01-17T11:32:04.5133880Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.5133930Z         if err_msg is None:
2025-01-17T11:32:04.5133990Z             if left.shape != right.shape:
2025-01-17T11:32:04.5134050Z                 raise_assert_detail(
2025-01-17T11:32:04.5134150Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.5134190Z                 )
2025-01-17T11:32:04.5134230Z     
2025-01-17T11:32:04.5134270Z             diff = 0
2025-01-17T11:32:04.5134350Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.5134410Z                 # count up differences
2025-01-17T11:32:04.5134540Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.5134590Z                     diff += 1
2025-01-17T11:32:04.5134630Z     
2025-01-17T11:32:04.5134690Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.5134790Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.5134910Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.5134990Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.5135030Z E           
2025-01-17T11:32:04.5135110Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.5135310Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5135510Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5135520Z 
2025-01-17T11:32:04.5135740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.5135750Z 
2025-01-17T11:32:04.5135880Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.5135880Z 
2025-01-17T11:32:04.5136040Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336fa5d0>
2025-01-17T11:32:04.5136190Z plasma = <tardis.plasma.base.BasePlasma object at 0x308462a20>, attr = 'lines'
2025-01-17T11:32:04.5136240Z 
2025-01-17T11:32:04.5136350Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.5136430Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.5136480Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.5136560Z         try:
2025-01-17T11:32:04.5136670Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.5136720Z         except KeyError:
2025-01-17T11:32:04.5136820Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.5136860Z     
2025-01-17T11:32:04.5136910Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.5136980Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.5137030Z             if attr == "selected_atoms":
2025-01-17T11:32:04.5137130Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.5137180Z             elif actual.ndim == 1:
2025-01-17T11:32:04.5137240Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.5137320Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.5137360Z             else:
2025-01-17T11:32:04.5137420Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.5144340Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.5144380Z 
2025-01-17T11:32:04.5144500Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.5144590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5144700Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5144730Z     ???
2025-01-17T11:32:04.5144820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5144820Z 
2025-01-17T11:32:04.5144860Z >   ???
2025-01-17T11:32:04.5144950Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.5144990Z E   
2025-01-17T11:32:04.5145080Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.5145160Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5145210Z E          ...
2025-01-17T11:32:04.5145270Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5145360Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5145440Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5145490Z E          ...
2025-01-17T11:32:04.5145540Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5145630Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5145700Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.5145710Z 
2025-01-17T11:32:04.5145760Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5145950Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] _
2025-01-17T11:32:04.5145950Z 
2025-01-17T11:32:04.5146110Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336fa690>
2025-01-17T11:32:04.5146230Z plasma = <tardis.plasma.base.BasePlasma object at 0x308462a20>
2025-01-17T11:32:04.5146290Z attr = 'lines_lower_level_index'
2025-01-17T11:32:04.5146290Z 
2025-01-17T11:32:04.5146390Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.5146470Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.5146530Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.5146570Z         try:
2025-01-17T11:32:04.5146680Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.5146720Z         except KeyError:
2025-01-17T11:32:04.5146830Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.5146870Z     
2025-01-17T11:32:04.5146920Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.5146980Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.5147040Z             if attr == "selected_atoms":
2025-01-17T11:32:04.5147360Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.5147420Z             elif actual.ndim == 1:
2025-01-17T11:32:04.5147470Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.5147550Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.5147560Z 
2025-01-17T11:32:04.5147720Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.5147810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5147810Z 
2025-01-17T11:32:04.5147920Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.5147970Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.5148050Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5148100Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.5148210Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.5148260Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.5148340Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5148390Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.5148440Z err_msg = None
2025-01-17T11:32:04.5148440Z 
2025-01-17T11:32:04.5148510Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.5148560Z         if err_msg is None:
2025-01-17T11:32:04.5148620Z             if left.shape != right.shape:
2025-01-17T11:32:04.5148680Z                 raise_assert_detail(
2025-01-17T11:32:04.5148780Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.5148820Z                 )
2025-01-17T11:32:04.5148860Z     
2025-01-17T11:32:04.5148900Z             diff = 0
2025-01-17T11:32:04.5148980Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.5149040Z                 # count up differences
2025-01-17T11:32:04.5149170Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.5149220Z                     diff += 1
2025-01-17T11:32:04.5149260Z     
2025-01-17T11:32:04.5149320Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.5149420Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.5149540Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.5149620Z E           AssertionError: Series are different
2025-01-17T11:32:04.5149660Z E           
2025-01-17T11:32:04.5149730Z E           Series values are different (4.04858 %)
2025-01-17T11:32:04.5150020Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.5150280Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5150540Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5150550Z 
2025-01-17T11:32:04.5150770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.5151410Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] _
2025-01-17T11:32:04.5151420Z 
2025-01-17T11:32:04.5151580Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336fa750>
2025-01-17T11:32:04.5151780Z plasma = <tardis.plasma.base.BasePlasma object at 0x308462a20>
2025-01-17T11:32:04.5151840Z attr = 'lines_upper_level_index'
2025-01-17T11:32:04.5151850Z 
2025-01-17T11:32:04.5151950Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.5152020Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.5152080Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.5152120Z         try:
2025-01-17T11:32:04.5152220Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.5152270Z         except KeyError:
2025-01-17T11:32:04.5152380Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.5152420Z     
2025-01-17T11:32:04.5152480Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.5152540Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.5152590Z             if attr == "selected_atoms":
2025-01-17T11:32:04.5152690Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.5152740Z             elif actual.ndim == 1:
2025-01-17T11:32:04.5152800Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.5152880Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.5152880Z 
2025-01-17T11:32:04.5152970Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.5153050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5153050Z 
2025-01-17T11:32:04.5153150Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.5153210Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.5153290Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.5153340Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.5153450Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.5153500Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.5153580Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.5153630Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.5153680Z err_msg = None
2025-01-17T11:32:04.5153690Z 
2025-01-17T11:32:04.5153760Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.5153810Z         if err_msg is None:
2025-01-17T11:32:04.5153870Z             if left.shape != right.shape:
2025-01-17T11:32:04.5153930Z                 raise_assert_detail(
2025-01-17T11:32:04.5154030Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.5154070Z                 )
2025-01-17T11:32:04.5154120Z     
2025-01-17T11:32:04.5154170Z             diff = 0
2025-01-17T11:32:04.5154240Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.5154300Z                 # count up differences
2025-01-17T11:32:04.5154420Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.5154470Z                     diff += 1
2025-01-17T11:32:04.5154510Z     
2025-01-17T11:32:04.5154570Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.5154670Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.5154790Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.5154870Z E           AssertionError: Series are different
2025-01-17T11:32:04.5154910Z E           
2025-01-17T11:32:04.5154980Z E           Series values are different (6.47773 %)
2025-01-17T11:32:04.5155260Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.5155740Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.5156040Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.5156050Z 
2025-01-17T11:32:04.5156270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.5156430Z ______ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-nu] ______
2025-01-17T11:32:04.5156430Z 
2025-01-17T11:32:04.5156530Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5156630Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5156700Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5156810Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5156900Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5156970Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5157020Z err_msg = None
2025-01-17T11:32:04.5157020Z 
2025-01-17T11:32:04.5157090Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.5157140Z         if err_msg is None:
2025-01-17T11:32:04.5157210Z             if left.shape != right.shape:
2025-01-17T11:32:04.5157260Z                 raise_assert_detail(
2025-01-17T11:32:04.5157370Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.5157410Z                 )
2025-01-17T11:32:04.5157450Z     
2025-01-17T11:32:04.5157490Z             diff = 0
2025-01-17T11:32:04.5157570Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.5157630Z                 # count up differences
2025-01-17T11:32:04.5157750Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.5157800Z                     diff += 1
2025-01-17T11:32:04.5157840Z     
2025-01-17T11:32:04.5157900Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.5158000Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.5158120Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.5158210Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.5158250Z E           
2025-01-17T11:32:04.5158330Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.5158530Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5158730Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5158790Z 
2025-01-17T11:32:04.5159080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.5159080Z 
2025-01-17T11:32:04.5159210Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.5159210Z 
2025-01-17T11:32:04.5159370Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336fa990>
2025-01-17T11:32:04.5159520Z plasma = <tardis.plasma.base.BasePlasma object at 0x308462a20>, attr = 'nu'
2025-01-17T11:32:04.5159520Z 
2025-01-17T11:32:04.5159620Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.5159700Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.5159750Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.5159820Z         try:
2025-01-17T11:32:04.5159930Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.5159970Z         except KeyError:
2025-01-17T11:32:04.5160080Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.5160120Z     
2025-01-17T11:32:04.5160180Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.5160240Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.5160300Z             if attr == "selected_atoms":
2025-01-17T11:32:04.5160390Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.5160450Z             elif actual.ndim == 1:
2025-01-17T11:32:04.5160500Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.5160590Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.5160590Z 
2025-01-17T11:32:04.5160670Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.5160760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5160860Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5160910Z     ???
2025-01-17T11:32:04.5160990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5160990Z 
2025-01-17T11:32:04.5161040Z >   ???
2025-01-17T11:32:04.5161130Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.5161170Z E   
2025-01-17T11:32:04.5161260Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.5161340Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5161380Z E          ...
2025-01-17T11:32:04.5161440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5161530Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5161610Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5161660Z E          ...
2025-01-17T11:32:04.5161720Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5161800Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5161870Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.5161880Z 
2025-01-17T11:32:04.5161930Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5162100Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] _
2025-01-17T11:32:04.5162100Z 
2025-01-17T11:32:04.5162200Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5162300Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5162360Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5162460Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5162560Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5162670Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5162710Z err_msg = None
2025-01-17T11:32:04.5162710Z 
2025-01-17T11:32:04.5162790Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.5162880Z         if err_msg is None:
2025-01-17T11:32:04.5162940Z             if left.shape != right.shape:
2025-01-17T11:32:04.5162990Z                 raise_assert_detail(
2025-01-17T11:32:04.5163100Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.5163140Z                 )
2025-01-17T11:32:04.5163190Z     
2025-01-17T11:32:04.5163230Z             diff = 0
2025-01-17T11:32:04.5163300Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.5163360Z                 # count up differences
2025-01-17T11:32:04.5163490Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.5163530Z                     diff += 1
2025-01-17T11:32:04.5163580Z     
2025-01-17T11:32:04.5163630Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.5163730Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.5163860Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.5163940Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.5163980Z E           
2025-01-17T11:32:04.5164060Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.5164260Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5164460Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5164470Z 
2025-01-17T11:32:04.5164700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.5164700Z 
2025-01-17T11:32:04.5164830Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.5164830Z 
2025-01-17T11:32:04.5164990Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336faa50>
2025-01-17T11:32:04.5165110Z plasma = <tardis.plasma.base.BasePlasma object at 0x308462a20>
2025-01-17T11:32:04.5165160Z attr = 'wavelength_cm'
2025-01-17T11:32:04.5165160Z 
2025-01-17T11:32:04.5165260Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.5165330Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.5165390Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.5165440Z         try:
2025-01-17T11:32:04.5165540Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.5165590Z         except KeyError:
2025-01-17T11:32:04.5165690Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.5165730Z     
2025-01-17T11:32:04.5165790Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.5165850Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.5165910Z             if attr == "selected_atoms":
2025-01-17T11:32:04.5166000Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.5166060Z             elif actual.ndim == 1:
2025-01-17T11:32:04.5166120Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.5166190Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.5166200Z 
2025-01-17T11:32:04.5166280Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.5166530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5166640Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5166670Z     ???
2025-01-17T11:32:04.5166760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5166800Z 
2025-01-17T11:32:04.5166840Z >   ???
2025-01-17T11:32:04.5166930Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.5166970Z E   
2025-01-17T11:32:04.5167060Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.5167140Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5167190Z E          ...
2025-01-17T11:32:04.5167250Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5167340Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5167420Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5167460Z E          ...
2025-01-17T11:32:04.5167520Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5167610Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5167680Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.5167680Z 
2025-01-17T11:32:04.5167740Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5167890Z _____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-f_lu] _____
2025-01-17T11:32:04.5167890Z 
2025-01-17T11:32:04.5167990Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5168090Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5168150Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5168250Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5168350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5168420Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5168460Z err_msg = None
2025-01-17T11:32:04.5168460Z 
2025-01-17T11:32:04.5168540Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.5168590Z         if err_msg is None:
2025-01-17T11:32:04.5168650Z             if left.shape != right.shape:
2025-01-17T11:32:04.5168710Z                 raise_assert_detail(
2025-01-17T11:32:04.5168810Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.5168850Z                 )
2025-01-17T11:32:04.5168890Z     
2025-01-17T11:32:04.5168930Z             diff = 0
2025-01-17T11:32:04.5169010Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.5169060Z                 # count up differences
2025-01-17T11:32:04.5169190Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.5169240Z                     diff += 1
2025-01-17T11:32:04.5169280Z     
2025-01-17T11:32:04.5169340Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.5169440Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.5169560Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.5169640Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.5169690Z E           
2025-01-17T11:32:04.5169760Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.5169960Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5170150Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5170200Z 
2025-01-17T11:32:04.5170560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.5170560Z 
2025-01-17T11:32:04.5170690Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.5170700Z 
2025-01-17T11:32:04.5170860Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336fab10>
2025-01-17T11:32:04.5171000Z plasma = <tardis.plasma.base.BasePlasma object at 0x308462a20>, attr = 'f_lu'
2025-01-17T11:32:04.5171010Z 
2025-01-17T11:32:04.5171100Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.5171180Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.5171240Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.5171280Z         try:
2025-01-17T11:32:04.5171380Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.5171430Z         except KeyError:
2025-01-17T11:32:04.5171530Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.5171570Z     
2025-01-17T11:32:04.5171630Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.5171690Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.5171750Z             if attr == "selected_atoms":
2025-01-17T11:32:04.5171840Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.5171900Z             elif actual.ndim == 1:
2025-01-17T11:32:04.5171950Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.5172030Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.5172040Z 
2025-01-17T11:32:04.5172120Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.5172210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5172310Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5172350Z     ???
2025-01-17T11:32:04.5172430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5172440Z 
2025-01-17T11:32:04.5172480Z >   ???
2025-01-17T11:32:04.5172570Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.5172610Z E   
2025-01-17T11:32:04.5172710Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.5172780Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5172830Z E          ...
2025-01-17T11:32:04.5172890Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5172970Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5173050Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5173100Z E          ...
2025-01-17T11:32:04.5173160Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5173250Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5173320Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.5173320Z 
2025-01-17T11:32:04.5173380Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5173540Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] _
2025-01-17T11:32:04.5173540Z 
2025-01-17T11:32:04.5173630Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5173730Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5173800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5173890Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5173990Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5174090Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5174140Z err_msg = None
2025-01-17T11:32:04.5174140Z 
2025-01-17T11:32:04.5174220Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.5174310Z         if err_msg is None:
2025-01-17T11:32:04.5174380Z             if left.shape != right.shape:
2025-01-17T11:32:04.5174430Z                 raise_assert_detail(
2025-01-17T11:32:04.5174540Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.5174580Z                 )
2025-01-17T11:32:04.5174620Z     
2025-01-17T11:32:04.5174660Z             diff = 0
2025-01-17T11:32:04.5174730Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.5174790Z                 # count up differences
2025-01-17T11:32:04.5174910Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.5174960Z                     diff += 1
2025-01-17T11:32:04.5175000Z     
2025-01-17T11:32:04.5175060Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.5175160Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.5175280Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.5175370Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.5175410Z E           
2025-01-17T11:32:04.5175490Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.5175680Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5175880Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5175890Z 
2025-01-17T11:32:04.5176120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.5176120Z 
2025-01-17T11:32:04.5176240Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.5176250Z 
2025-01-17T11:32:04.5176410Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336fb290>
2025-01-17T11:32:04.5176520Z plasma = <tardis.plasma.base.BasePlasma object at 0x308462a20>
2025-01-17T11:32:04.5176570Z attr = 'tau_sobolevs'
2025-01-17T11:32:04.5176570Z 
2025-01-17T11:32:04.5176670Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.5176750Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.5176800Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.5176850Z         try:
2025-01-17T11:32:04.5176950Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.5177000Z         except KeyError:
2025-01-17T11:32:04.5177100Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.5177140Z     
2025-01-17T11:32:04.5177200Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.5177260Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.5177310Z             if attr == "selected_atoms":
2025-01-17T11:32:04.5177410Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.5177470Z             elif actual.ndim == 1:
2025-01-17T11:32:04.5177520Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.5177600Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.5177640Z             else:
2025-01-17T11:32:04.5177710Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.5177820Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.5177820Z 
2025-01-17T11:32:04.5177910Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.5177990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5178150Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5178190Z     ???
2025-01-17T11:32:04.5178280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5178280Z 
2025-01-17T11:32:04.5178320Z >   ???
2025-01-17T11:32:04.5178410Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.5178450Z E   
2025-01-17T11:32:04.5178540Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.5178630Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5178670Z E          ...
2025-01-17T11:32:04.5178730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5178820Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5178900Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5178940Z E          ...
2025-01-17T11:32:04.5179000Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5179090Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5179170Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.5179170Z 
2025-01-17T11:32:04.5179220Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5179380Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] _
2025-01-17T11:32:04.5179390Z 
2025-01-17T11:32:04.5179480Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5179580Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5179650Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5179760Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5179850Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5180090Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5180140Z err_msg = None
2025-01-17T11:32:04.5180140Z 
2025-01-17T11:32:04.5180220Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.5180270Z         if err_msg is None:
2025-01-17T11:32:04.5180330Z             if left.shape != right.shape:
2025-01-17T11:32:04.5180380Z                 raise_assert_detail(
2025-01-17T11:32:04.5180480Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.5180520Z                 )
2025-01-17T11:32:04.5180560Z     
2025-01-17T11:32:04.5180600Z             diff = 0
2025-01-17T11:32:04.5180680Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.5180740Z                 # count up differences
2025-01-17T11:32:04.5180870Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.5180910Z                     diff += 1
2025-01-17T11:32:04.5180950Z     
2025-01-17T11:32:04.5181010Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.5181110Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.5181270Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.5181350Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.5181390Z E           
2025-01-17T11:32:04.5181460Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.5181660Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5182120Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5182160Z 
2025-01-17T11:32:04.5182390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.5182390Z 
2025-01-17T11:32:04.5182510Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.5182520Z 
2025-01-17T11:32:04.5182680Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336fb350>
2025-01-17T11:32:04.5182790Z plasma = <tardis.plasma.base.BasePlasma object at 0x308462a20>
2025-01-17T11:32:04.5182850Z attr = 'beta_sobolev'
2025-01-17T11:32:04.5182850Z 
2025-01-17T11:32:04.5182950Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.5183030Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.5183080Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.5183120Z         try:
2025-01-17T11:32:04.5183230Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.5183280Z         except KeyError:
2025-01-17T11:32:04.5183380Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.5183420Z     
2025-01-17T11:32:04.5183480Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.5183540Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.5183590Z             if attr == "selected_atoms":
2025-01-17T11:32:04.5183690Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.5183740Z             elif actual.ndim == 1:
2025-01-17T11:32:04.5183800Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.5183880Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.5183920Z             else:
2025-01-17T11:32:04.5183980Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.5184060Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.5184070Z 
2025-01-17T11:32:04.5184150Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.5184230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5184340Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5184380Z     ???
2025-01-17T11:32:04.5184460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5184460Z 
2025-01-17T11:32:04.5184500Z >   ???
2025-01-17T11:32:04.5184590Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.5184630Z E   
2025-01-17T11:32:04.5184720Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.5184800Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5184840Z E          ...
2025-01-17T11:32:04.5184900Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5184990Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5185070Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5185110Z E          ...
2025-01-17T11:32:04.5185170Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5185260Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5185330Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.5185340Z 
2025-01-17T11:32:04.5185390Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5185550Z ___ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-j_blues] ____
2025-01-17T11:32:04.5185550Z 
2025-01-17T11:32:04.5185640Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5185780Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5185850Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5185950Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5186220Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5186290Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5186330Z err_msg = None
2025-01-17T11:32:04.5186340Z 
2025-01-17T11:32:04.5186410Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.5186460Z         if err_msg is None:
2025-01-17T11:32:04.5186520Z             if left.shape != right.shape:
2025-01-17T11:32:04.5186570Z                 raise_assert_detail(
2025-01-17T11:32:04.5186680Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.5186730Z                 )
2025-01-17T11:32:04.5186760Z     
2025-01-17T11:32:04.5186810Z             diff = 0
2025-01-17T11:32:04.5186880Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.5186940Z                 # count up differences
2025-01-17T11:32:04.5187070Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.5187120Z                     diff += 1
2025-01-17T11:32:04.5187160Z     
2025-01-17T11:32:04.5187220Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.5187310Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.5187440Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.5187520Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.5187560Z E           
2025-01-17T11:32:04.5187640Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.5187840Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5188040Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5188050Z 
2025-01-17T11:32:04.5188270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.5188280Z 
2025-01-17T11:32:04.5188400Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.5188410Z 
2025-01-17T11:32:04.5188570Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1336fb4d0>
2025-01-17T11:32:04.5188720Z plasma = <tardis.plasma.base.BasePlasma object at 0x308462a20>, attr = 'j_blues'
2025-01-17T11:32:04.5188720Z 
2025-01-17T11:32:04.5188820Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.5188900Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.5188950Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.5188990Z         try:
2025-01-17T11:32:04.5189100Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.5189140Z         except KeyError:
2025-01-17T11:32:04.5189240Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.5189280Z     
2025-01-17T11:32:04.5189340Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.5189400Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.5189450Z             if attr == "selected_atoms":
2025-01-17T11:32:04.5189590Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.5193420Z             elif actual.ndim == 1:
2025-01-17T11:32:04.5193510Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.5193590Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.5193830Z             else:
2025-01-17T11:32:04.5193890Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.5193970Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.5193980Z 
2025-01-17T11:32:04.5194060Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.5194150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5194250Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5194300Z     ???
2025-01-17T11:32:04.5194380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5194380Z 
2025-01-17T11:32:04.5194420Z >   ???
2025-01-17T11:32:04.5194510Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.5194550Z E   
2025-01-17T11:32:04.5194640Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.5194720Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5194770Z E          ...
2025-01-17T11:32:04.5194830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5194920Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5195000Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5195050Z E          ...
2025-01-17T11:32:04.5195100Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5195190Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5195260Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.5195270Z 
2025-01-17T11:32:04.5195320Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5195520Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] _
2025-01-17T11:32:04.5195520Z 
2025-01-17T11:32:04.5195620Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5195720Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5195790Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5195890Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5195990Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5196050Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5196100Z err_msg = None
2025-01-17T11:32:04.5196100Z 
2025-01-17T11:32:04.5196180Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.5196230Z         if err_msg is None:
2025-01-17T11:32:04.5196290Z             if left.shape != right.shape:
2025-01-17T11:32:04.5196350Z                 raise_assert_detail(
2025-01-17T11:32:04.5196450Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.5196500Z                 )
2025-01-17T11:32:04.5196540Z     
2025-01-17T11:32:04.5196580Z             diff = 0
2025-01-17T11:32:04.5196660Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.5196720Z                 # count up differences
2025-01-17T11:32:04.5196850Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.5196890Z                     diff += 1
2025-01-17T11:32:04.5196930Z     
2025-01-17T11:32:04.5196990Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.5197090Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.5197210Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.5197340Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.5197380Z E           
2025-01-17T11:32:04.5197460Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.5197660Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5197900Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5197910Z 
2025-01-17T11:32:04.5198140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.5198140Z 
2025-01-17T11:32:04.5198260Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.5198270Z 
2025-01-17T11:32:04.5198430Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133720290>
2025-01-17T11:32:04.5198580Z plasma = <tardis.plasma.base.BasePlasma object at 0x30eae0470>, attr = 'lines'
2025-01-17T11:32:04.5198580Z 
2025-01-17T11:32:04.5198690Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.5198770Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.5198830Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.5198870Z         try:
2025-01-17T11:32:04.5198980Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.5199020Z         except KeyError:
2025-01-17T11:32:04.5199130Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.5199170Z     
2025-01-17T11:32:04.5199230Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.5199300Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.5199360Z             if attr == "selected_atoms":
2025-01-17T11:32:04.5199450Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.5199510Z             elif actual.ndim == 1:
2025-01-17T11:32:04.5199570Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.5199720Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.5199770Z             else:
2025-01-17T11:32:04.5199830Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.5199900Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.5199910Z 
2025-01-17T11:32:04.5199990Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.5200070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5200180Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5200220Z     ???
2025-01-17T11:32:04.5200300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5200300Z 
2025-01-17T11:32:04.5200340Z >   ???
2025-01-17T11:32:04.5200430Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.5200470Z E   
2025-01-17T11:32:04.5200560Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.5200640Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5200680Z E          ...
2025-01-17T11:32:04.5200740Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5200830Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5200910Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5200960Z E          ...
2025-01-17T11:32:04.5201010Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5201100Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5201310Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.5201310Z 
2025-01-17T11:32:04.5201370Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5201610Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] _
2025-01-17T11:32:04.5201650Z 
2025-01-17T11:32:04.5201820Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133720350>
2025-01-17T11:32:04.5201930Z plasma = <tardis.plasma.base.BasePlasma object at 0x30eae0470>
2025-01-17T11:32:04.5201990Z attr = 'lines_lower_level_index'
2025-01-17T11:32:04.5202000Z 
2025-01-17T11:32:04.5202090Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.5202170Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.5202220Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.5202260Z         try:
2025-01-17T11:32:04.5202360Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.5202420Z         except KeyError:
2025-01-17T11:32:04.5202520Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.5202560Z     
2025-01-17T11:32:04.5202610Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.5202670Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.5202730Z             if attr == "selected_atoms":
2025-01-17T11:32:04.5202830Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.5202880Z             elif actual.ndim == 1:
2025-01-17T11:32:04.5202940Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.5203020Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.5203020Z 
2025-01-17T11:32:04.5203110Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.5203190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5203190Z 
2025-01-17T11:32:04.5203290Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.5203350Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.5203430Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5203490Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.5203600Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-17T11:32:04.5203650Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-17T11:32:04.5203730Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5203780Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-17T11:32:04.5203820Z err_msg = None
2025-01-17T11:32:04.5203820Z 
2025-01-17T11:32:04.5203900Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.5203940Z         if err_msg is None:
2025-01-17T11:32:04.5204010Z             if left.shape != right.shape:
2025-01-17T11:32:04.5204060Z                 raise_assert_detail(
2025-01-17T11:32:04.5204160Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.5204200Z                 )
2025-01-17T11:32:04.5204250Z     
2025-01-17T11:32:04.5204290Z             diff = 0
2025-01-17T11:32:04.5204370Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.5204430Z                 # count up differences
2025-01-17T11:32:04.5204550Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.5204600Z                     diff += 1
2025-01-17T11:32:04.5204640Z     
2025-01-17T11:32:04.5204700Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.5204800Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.5204920Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.5204990Z E           AssertionError: Series are different
2025-01-17T11:32:04.5205030Z E           
2025-01-17T11:32:04.5205140Z E           Series values are different (4.04858 %)
2025-01-17T11:32:04.5205440Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.5205830Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5206090Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5206100Z 
2025-01-17T11:32:04.5206330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.5206560Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] _
2025-01-17T11:32:04.5206560Z 
2025-01-17T11:32:04.5206730Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133720410>
2025-01-17T11:32:04.5206840Z plasma = <tardis.plasma.base.BasePlasma object at 0x30eae0470>
2025-01-17T11:32:04.5206900Z attr = 'lines_upper_level_index'
2025-01-17T11:32:04.5206900Z 
2025-01-17T11:32:04.5207000Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.5207080Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.5207140Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.5207180Z         try:
2025-01-17T11:32:04.5207280Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.5207330Z         except KeyError:
2025-01-17T11:32:04.5207430Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.5207480Z     
2025-01-17T11:32:04.5207530Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.5207590Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.5207650Z             if attr == "selected_atoms":
2025-01-17T11:32:04.5207740Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.5207800Z             elif actual.ndim == 1:
2025-01-17T11:32:04.5207860Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.5207940Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.5207940Z 
2025-01-17T11:32:04.5208030Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.5208110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5208110Z 
2025-01-17T11:32:04.5208210Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.5208270Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.5208350Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.5208400Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.5208500Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-17T11:32:04.5208560Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-17T11:32:04.5208640Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-17T11:32:04.5208690Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-17T11:32:04.5208730Z err_msg = None
2025-01-17T11:32:04.5208740Z 
2025-01-17T11:32:04.5208860Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.5208910Z         if err_msg is None:
2025-01-17T11:32:04.5208970Z             if left.shape != right.shape:
2025-01-17T11:32:04.5209020Z                 raise_assert_detail(
2025-01-17T11:32:04.5209120Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.5209210Z                 )
2025-01-17T11:32:04.5209250Z     
2025-01-17T11:32:04.5209300Z             diff = 0
2025-01-17T11:32:04.5209370Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.5209430Z                 # count up differences
2025-01-17T11:32:04.5209550Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.5209600Z                     diff += 1
2025-01-17T11:32:04.5209640Z     
2025-01-17T11:32:04.5209700Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.5209800Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.5209930Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.5210000Z E           AssertionError: Series are different
2025-01-17T11:32:04.5210040Z E           
2025-01-17T11:32:04.5210110Z E           Series values are different (6.47773 %)
2025-01-17T11:32:04.5210400Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.5210690Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.5210990Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.5210990Z 
2025-01-17T11:32:04.5211220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.5211400Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] _
2025-01-17T11:32:04.5211410Z 
2025-01-17T11:32:04.5211500Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5211600Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5211670Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5211770Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5211860Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5211930Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5211980Z err_msg = None
2025-01-17T11:32:04.5211980Z 
2025-01-17T11:32:04.5212050Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.5212100Z         if err_msg is None:
2025-01-17T11:32:04.5212160Z             if left.shape != right.shape:
2025-01-17T11:32:04.5212220Z                 raise_assert_detail(
2025-01-17T11:32:04.5212320Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.5212400Z                 )
2025-01-17T11:32:04.5212440Z     
2025-01-17T11:32:04.5212480Z             diff = 0
2025-01-17T11:32:04.5212560Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.5212610Z                 # count up differences
2025-01-17T11:32:04.5212780Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.5212830Z                     diff += 1
2025-01-17T11:32:04.5212870Z     
2025-01-17T11:32:04.5212930Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.5213030Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.5213150Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.5213230Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.5213280Z E           
2025-01-17T11:32:04.5213350Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.5213550Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5213750Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5213760Z 
2025-01-17T11:32:04.5213990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.5213990Z 
2025-01-17T11:32:04.5214120Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.5214120Z 
2025-01-17T11:32:04.5214290Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133720650>
2025-01-17T11:32:04.5214430Z plasma = <tardis.plasma.base.BasePlasma object at 0x30eae0470>, attr = 'nu'
2025-01-17T11:32:04.5214430Z 
2025-01-17T11:32:04.5214530Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.5214610Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.5214660Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.5214700Z         try:
2025-01-17T11:32:04.5214800Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.5214850Z         except KeyError:
2025-01-17T11:32:04.5214950Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.5214990Z     
2025-01-17T11:32:04.5215050Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.5215110Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.5215160Z             if attr == "selected_atoms":
2025-01-17T11:32:04.5215260Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.5215320Z             elif actual.ndim == 1:
2025-01-17T11:32:04.5215380Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.5215450Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.5215460Z 
2025-01-17T11:32:04.5215540Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.5215630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5215730Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5215770Z     ???
2025-01-17T11:32:04.5215850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5215850Z 
2025-01-17T11:32:04.5215900Z >   ???
2025-01-17T11:32:04.5215980Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.5216020Z E   
2025-01-17T11:32:04.5216110Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.5216610Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5216660Z E          ...
2025-01-17T11:32:04.5216720Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5216810Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5216920Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5216970Z E          ...
2025-01-17T11:32:04.5217030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5217120Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5217190Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.5217190Z 
2025-01-17T11:32:04.5217250Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5217460Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] _
2025-01-17T11:32:04.5217460Z 
2025-01-17T11:32:04.5217560Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5217660Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5217730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5217830Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5217940Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5218000Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5218050Z err_msg = None
2025-01-17T11:32:04.5218050Z 
2025-01-17T11:32:04.5218120Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.5218170Z         if err_msg is None:
2025-01-17T11:32:04.5218230Z             if left.shape != right.shape:
2025-01-17T11:32:04.5218290Z                 raise_assert_detail(
2025-01-17T11:32:04.5218390Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.5218440Z                 )
2025-01-17T11:32:04.5218480Z     
2025-01-17T11:32:04.5218520Z             diff = 0
2025-01-17T11:32:04.5218600Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.5218650Z                 # count up differences
2025-01-17T11:32:04.5218780Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.5218830Z                     diff += 1
2025-01-17T11:32:04.5218870Z     
2025-01-17T11:32:04.5218930Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.5219020Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.5219150Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.5219230Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.5219270Z E           
2025-01-17T11:32:04.5219350Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.5219550Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5219750Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5219760Z 
2025-01-17T11:32:04.5219990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.5219990Z 
2025-01-17T11:32:04.5220210Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.5220260Z 
2025-01-17T11:32:04.5220430Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133720710>
2025-01-17T11:32:04.5220550Z plasma = <tardis.plasma.base.BasePlasma object at 0x30eae0470>
2025-01-17T11:32:04.5220600Z attr = 'wavelength_cm'
2025-01-17T11:32:04.5220600Z 
2025-01-17T11:32:04.5220830Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.5220920Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.5220970Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.5221010Z         try:
2025-01-17T11:32:04.5221110Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.5221160Z         except KeyError:
2025-01-17T11:32:04.5221260Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.5221300Z     
2025-01-17T11:32:04.5221360Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.5221420Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.5221480Z             if attr == "selected_atoms":
2025-01-17T11:32:04.5221580Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.5221630Z             elif actual.ndim == 1:
2025-01-17T11:32:04.5221690Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.5221770Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.5221780Z 
2025-01-17T11:32:04.5221860Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.5221950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5222050Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5222090Z     ???
2025-01-17T11:32:04.5222170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5222170Z 
2025-01-17T11:32:04.5222210Z >   ???
2025-01-17T11:32:04.5222300Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.5222340Z E   
2025-01-17T11:32:04.5222430Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.5222510Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5222560Z E          ...
2025-01-17T11:32:04.5222610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5222710Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5222790Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5222830Z E          ...
2025-01-17T11:32:04.5222890Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5222980Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5223050Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.5223050Z 
2025-01-17T11:32:04.5223110Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5223300Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] _
2025-01-17T11:32:04.5223300Z 
2025-01-17T11:32:04.5223400Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5223490Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5223560Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5223660Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5223760Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5223820Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5223870Z err_msg = None
2025-01-17T11:32:04.5223870Z 
2025-01-17T11:32:04.5223950Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.5224000Z         if err_msg is None:
2025-01-17T11:32:04.5224060Z             if left.shape != right.shape:
2025-01-17T11:32:04.5224110Z                 raise_assert_detail(
2025-01-17T11:32:04.5224260Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.5224300Z                 )
2025-01-17T11:32:04.5224340Z     
2025-01-17T11:32:04.5224380Z             diff = 0
2025-01-17T11:32:04.5224460Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.5224560Z                 # count up differences
2025-01-17T11:32:04.5224680Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.5224730Z                     diff += 1
2025-01-17T11:32:04.5224770Z     
2025-01-17T11:32:04.5224830Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.5224930Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.5225050Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.5225130Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.5225170Z E           
2025-01-17T11:32:04.5225260Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.5225460Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5225660Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5225660Z 
2025-01-17T11:32:04.5225890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.5225890Z 
2025-01-17T11:32:04.5226020Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.5226020Z 
2025-01-17T11:32:04.5226180Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x1337207d0>
2025-01-17T11:32:04.5226330Z plasma = <tardis.plasma.base.BasePlasma object at 0x30eae0470>, attr = 'f_lu'
2025-01-17T11:32:04.5226330Z 
2025-01-17T11:32:04.5226430Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.5226510Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.5226570Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.5226610Z         try:
2025-01-17T11:32:04.5226710Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.5226760Z         except KeyError:
2025-01-17T11:32:04.5226860Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.5226900Z     
2025-01-17T11:32:04.5226950Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.5227020Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.5227070Z             if attr == "selected_atoms":
2025-01-17T11:32:04.5227180Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.5227230Z             elif actual.ndim == 1:
2025-01-17T11:32:04.5227290Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.5227360Z >               pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.5227370Z 
2025-01-17T11:32:04.5227450Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-17T11:32:04.5227530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5227640Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5227680Z     ???
2025-01-17T11:32:04.5227760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5227770Z 
2025-01-17T11:32:04.5227810Z >   ???
2025-01-17T11:32:04.5227890Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.5227930Z E   
2025-01-17T11:32:04.5228070Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.5228150Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5228190Z E          ...
2025-01-17T11:32:04.5228250Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5228340Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5228460Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5228500Z E          ...
2025-01-17T11:32:04.5228570Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5228650Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5228730Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.5228730Z 
2025-01-17T11:32:04.5228790Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5229000Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] _
2025-01-17T11:32:04.5229000Z 
2025-01-17T11:32:04.5229100Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5229200Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5229270Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5229370Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5229460Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5229530Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5229570Z err_msg = None
2025-01-17T11:32:04.5229570Z 
2025-01-17T11:32:04.5229650Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.5229700Z         if err_msg is None:
2025-01-17T11:32:04.5229760Z             if left.shape != right.shape:
2025-01-17T11:32:04.5229810Z                 raise_assert_detail(
2025-01-17T11:32:04.5229920Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.5229960Z                 )
2025-01-17T11:32:04.5230000Z     
2025-01-17T11:32:04.5230040Z             diff = 0
2025-01-17T11:32:04.5230120Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.5230170Z                 # count up differences
2025-01-17T11:32:04.5230300Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.5230350Z                     diff += 1
2025-01-17T11:32:04.5230390Z     
2025-01-17T11:32:04.5230450Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.5230550Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.5230670Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.5230750Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.5230790Z E           
2025-01-17T11:32:04.5230870Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.5231070Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5231270Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5231280Z 
2025-01-17T11:32:04.5231510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.5231510Z 
2025-01-17T11:32:04.5231630Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.5231860Z 
2025-01-17T11:32:04.5232030Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133720f50>
2025-01-17T11:32:04.5232140Z plasma = <tardis.plasma.base.BasePlasma object at 0x30eae0470>
2025-01-17T11:32:04.5232190Z attr = 'tau_sobolevs'
2025-01-17T11:32:04.5232240Z 
2025-01-17T11:32:04.5232350Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.5232430Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.5232480Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.5232520Z         try:
2025-01-17T11:32:04.5232620Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.5232670Z         except KeyError:
2025-01-17T11:32:04.5232770Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.5232810Z     
2025-01-17T11:32:04.5232860Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.5232930Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.5232980Z             if attr == "selected_atoms":
2025-01-17T11:32:04.5233080Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.5233140Z             elif actual.ndim == 1:
2025-01-17T11:32:04.5233190Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.5233270Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.5233320Z             else:
2025-01-17T11:32:04.5233380Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.5233460Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.5233460Z 
2025-01-17T11:32:04.5233540Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.5233630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5233740Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5233780Z     ???
2025-01-17T11:32:04.5233860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5233860Z 
2025-01-17T11:32:04.5233900Z >   ???
2025-01-17T11:32:04.5233990Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.5234030Z E   
2025-01-17T11:32:04.5234120Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.5234200Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5234250Z E          ...
2025-01-17T11:32:04.5234310Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5234400Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5234480Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5234520Z E          ...
2025-01-17T11:32:04.5234580Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5234670Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5234730Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.5234740Z 
2025-01-17T11:32:04.5234800Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5235010Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] _
2025-01-17T11:32:04.5235010Z 
2025-01-17T11:32:04.5235110Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5235210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5235280Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5235380Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5235470Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5235540Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5235580Z err_msg = None
2025-01-17T11:32:04.5235590Z 
2025-01-17T11:32:04.5235660Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.5235760Z         if err_msg is None:
2025-01-17T11:32:04.5235820Z             if left.shape != right.shape:
2025-01-17T11:32:04.5235880Z                 raise_assert_detail(
2025-01-17T11:32:04.5235980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.5236220Z                 )
2025-01-17T11:32:04.5236260Z     
2025-01-17T11:32:04.5236300Z             diff = 0
2025-01-17T11:32:04.5236380Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.5236430Z                 # count up differences
2025-01-17T11:32:04.5236560Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.5236610Z                     diff += 1
2025-01-17T11:32:04.5236650Z     
2025-01-17T11:32:04.5236700Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.5236800Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.5236930Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.5237010Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.5237050Z E           
2025-01-17T11:32:04.5237130Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.5237330Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5237530Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5237530Z 
2025-01-17T11:32:04.5237760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.5237770Z 
2025-01-17T11:32:04.5237890Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.5237890Z 
2025-01-17T11:32:04.5238050Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133721010>
2025-01-17T11:32:04.5238170Z plasma = <tardis.plasma.base.BasePlasma object at 0x30eae0470>
2025-01-17T11:32:04.5238220Z attr = 'beta_sobolev'
2025-01-17T11:32:04.5238220Z 
2025-01-17T11:32:04.5238320Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.5238400Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.5238450Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.5238490Z         try:
2025-01-17T11:32:04.5238590Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.5238640Z         except KeyError:
2025-01-17T11:32:04.5238750Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.5242290Z     
2025-01-17T11:32:04.5242380Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.5242440Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.5242500Z             if attr == "selected_atoms":
2025-01-17T11:32:04.5242600Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.5242660Z             elif actual.ndim == 1:
2025-01-17T11:32:04.5242720Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.5242800Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.5242840Z             else:
2025-01-17T11:32:04.5242900Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.5242970Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.5242980Z 
2025-01-17T11:32:04.5243060Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.5243150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5243410Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5243450Z     ???
2025-01-17T11:32:04.5243530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5243530Z 
2025-01-17T11:32:04.5243610Z >   ???
2025-01-17T11:32:04.5243710Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.5243750Z E   
2025-01-17T11:32:04.5243840Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.5243920Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5243960Z E          ...
2025-01-17T11:32:04.5244020Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5244110Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5244190Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5244230Z E          ...
2025-01-17T11:32:04.5244290Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5244390Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5244460Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.5244460Z 
2025-01-17T11:32:04.5244520Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5244720Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] _
2025-01-17T11:32:04.5244720Z 
2025-01-17T11:32:04.5244820Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5244920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5244990Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5245080Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-17T11:32:04.5245180Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-17T11:32:04.5245250Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-17T11:32:04.5245290Z err_msg = None
2025-01-17T11:32:04.5245300Z 
2025-01-17T11:32:04.5245370Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-17T11:32:04.5245420Z         if err_msg is None:
2025-01-17T11:32:04.5245490Z             if left.shape != right.shape:
2025-01-17T11:32:04.5245540Z                 raise_assert_detail(
2025-01-17T11:32:04.5245640Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-17T11:32:04.5245680Z                 )
2025-01-17T11:32:04.5245730Z     
2025-01-17T11:32:04.5245770Z             diff = 0
2025-01-17T11:32:04.5245850Z             for left_arr, right_arr in zip(left, right):
2025-01-17T11:32:04.5245900Z                 # count up differences
2025-01-17T11:32:04.5246030Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-17T11:32:04.5246070Z                     diff += 1
2025-01-17T11:32:04.5246120Z     
2025-01-17T11:32:04.5246170Z             diff = diff * 100.0 / left.size
2025-01-17T11:32:04.5246270Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-17T11:32:04.5246400Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-17T11:32:04.5246480Z E           AssertionError: numpy array are different
2025-01-17T11:32:04.5246520Z E           
2025-01-17T11:32:04.5246600Z E           numpy array values are different (4.04858 %)
2025-01-17T11:32:04.5246800Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5247000Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.5247040Z 
2025-01-17T11:32:04.5247270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-17T11:32:04.5247320Z 
2025-01-17T11:32:04.5247450Z During handling of the above exception, another exception occurred:
2025-01-17T11:32:04.5247450Z 
2025-01-17T11:32:04.5247610Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x133721190>
2025-01-17T11:32:04.5247770Z plasma = <tardis.plasma.base.BasePlasma object at 0x30eae0470>, attr = 'j_blues'
2025-01-17T11:32:04.5247770Z 
2025-01-17T11:32:04.5247870Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-17T11:32:04.5247950Z     def test_plasma_properties(self, plasma, attr):
2025-01-17T11:32:04.5248000Z         key = f"plasma/{attr}"
2025-01-17T11:32:04.5248050Z         try:
2025-01-17T11:32:04.5248150Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-17T11:32:04.5248200Z         except KeyError:
2025-01-17T11:32:04.5248300Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-17T11:32:04.5248340Z     
2025-01-17T11:32:04.5248390Z         if hasattr(plasma, attr):
2025-01-17T11:32:04.5248460Z             actual = getattr(plasma, attr)
2025-01-17T11:32:04.5248510Z             if attr == "selected_atoms":
2025-01-17T11:32:04.5248610Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-17T11:32:04.5248670Z             elif actual.ndim == 1:
2025-01-17T11:32:04.5248720Z                 actual = pd.Series(actual)
2025-01-17T11:32:04.5248800Z                 pdt.assert_series_equal(actual, expected)
2025-01-17T11:32:04.5248840Z             else:
2025-01-17T11:32:04.5248910Z                 actual = pd.DataFrame(actual)
2025-01-17T11:32:04.5248980Z >               pdt.assert_frame_equal(actual, expected)
2025-01-17T11:32:04.5248990Z 
2025-01-17T11:32:04.5249070Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-17T11:32:04.5249150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5249260Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5249300Z     ???
2025-01-17T11:32:04.5249380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5249390Z 
2025-01-17T11:32:04.5249420Z >   ???
2025-01-17T11:32:04.5249510Z E   AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.5249550Z E   
2025-01-17T11:32:04.5249650Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.5249720Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5249770Z E          ...
2025-01-17T11:32:04.5249820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5249920Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5250000Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.5250040Z E          ...
2025-01-17T11:32:04.5250100Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.5250190Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.5250260Z E   At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.5250260Z 
2025-01-17T11:32:04.5250320Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5250450Z _________________ test_hdf_plasma[stimulated_emission_factor] __________________
2025-01-17T11:32:04.5250460Z 
2025-01-17T11:32:04.5250620Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x16bc10620>
2025-01-17T11:32:04.5250680Z attr = 'stimulated_emission_factor'
2025-01-17T11:32:04.5250880Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x1336fa660>
2025-01-17T11:32:04.5250890Z 
2025-01-17T11:32:04.5251080Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-17T11:32:04.5251210Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-17T11:32:04.5251310Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-17T11:32:04.5251410Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-17T11:32:04.5251540Z             expected = regression_data.sync_ndarray(actual)
2025-01-17T11:32:04.5251600Z             if hasattr(actual, "cgs"):
2025-01-17T11:32:04.5251670Z                 actual = actual.cgs.value
2025-01-17T11:32:04.5251740Z >           npt.assert_allclose(actual, expected)
2025-01-17T11:32:04.5251740Z 
2025-01-17T11:32:04.5251820Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-17T11:32:04.5251900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5251900Z 
2025-01-17T11:32:04.5252140Z args = (<function assert_allclose.<locals>.compare at 0x135f47e20>, array([[0.        , 0.        , 0.        , ..., 0.      ...1,
2025-01-17T11:32:04.5252190Z         0.01476858],
2025-01-17T11:32:04.5252280Z        [0.01433244, 0.01435378, 0.01437513, ..., 0.0146952 , 0.01471653,
2025-01-17T11:32:04.5252330Z         0.01473787]]))
2025-01-17T11:32:04.5252530Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5252530Z 
2025-01-17T11:32:04.5252580Z     @wraps(func)
2025-01-17T11:32:04.5252630Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5252690Z         with self._recreate_cm():
2025-01-17T11:32:04.5252740Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5252800Z E           AssertionError: 
2025-01-17T11:32:04.5252870Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5252910Z E           
2025-01-17T11:32:04.5252980Z E           Mismatched elements: 120 / 584480 (0.0205%)
2025-01-17T11:32:04.5253060Z E           Max absolute difference among violations: 1.
2025-01-17T11:32:04.5253140Z E           Max relative difference among violations: 1.
2025-01-17T11:32:04.5253250Z E            ACTUAL: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-17T11:32:04.5253330Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-17T11:32:04.5253410Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-17T11:32:04.5253520Z E            DESIRED: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-17T11:32:04.5253600Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-17T11:32:04.5253670Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-17T11:32:04.5253680Z 
2025-01-17T11:32:04.5253830Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5253950Z ___________________ test_hdf_plasma[lines_lower_level_index] ___________________
2025-01-17T11:32:04.5253960Z 
2025-01-17T11:32:04.5254120Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x16bc10620>
2025-01-17T11:32:04.5254180Z attr = 'lines_lower_level_index'
2025-01-17T11:32:04.5254370Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x32295ed80>
2025-01-17T11:32:04.5254380Z 
2025-01-17T11:32:04.5254480Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-17T11:32:04.5254610Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-17T11:32:04.5254700Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-17T11:32:04.5254790Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-17T11:32:04.5254880Z             expected = regression_data.sync_ndarray(actual)
2025-01-17T11:32:04.5254940Z             if hasattr(actual, "cgs"):
2025-01-17T11:32:04.5255000Z                 actual = actual.cgs.value
2025-01-17T11:32:04.5255070Z >           npt.assert_allclose(actual, expected)
2025-01-17T11:32:04.5255110Z 
2025-01-17T11:32:04.5255180Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-17T11:32:04.5255270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5255270Z 
2025-01-17T11:32:04.5255560Z args = (<function assert_allclose.<locals>.compare at 0x31510a160>, array([2577, 2577, 2577, ..., 3886, 3846, 3885]), array([2577, 2577, 2577, ..., 3886, 3846, 3885]))
2025-01-17T11:32:04.5255900Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5255910Z 
2025-01-17T11:32:04.5255950Z     @wraps(func)
2025-01-17T11:32:04.5256010Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5256060Z         with self._recreate_cm():
2025-01-17T11:32:04.5256120Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5256170Z E           AssertionError: 
2025-01-17T11:32:04.5256240Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5256280Z E           
2025-01-17T11:32:04.5256360Z E           Mismatched elements: 748 / 29224 (2.56%)
2025-01-17T11:32:04.5256440Z E           Max absolute difference among violations: 4005
2025-01-17T11:32:04.5256540Z E           Max relative difference among violations: 26.00649351
2025-01-17T11:32:04.5256630Z E            ACTUAL: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-17T11:32:04.5256720Z E            DESIRED: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-17T11:32:04.5256730Z 
2025-01-17T11:32:04.5256870Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5257030Z ___________________ test_hdf_plasma[lines_upper_level_index] ___________________
2025-01-17T11:32:04.5257030Z 
2025-01-17T11:32:04.5257190Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x16bc10620>
2025-01-17T11:32:04.5257250Z attr = 'lines_upper_level_index'
2025-01-17T11:32:04.5257440Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x32295c8f0>
2025-01-17T11:32:04.5257450Z 
2025-01-17T11:32:04.5257560Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-17T11:32:04.5257680Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-17T11:32:04.5257760Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-17T11:32:04.5257860Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-17T11:32:04.5257950Z             expected = regression_data.sync_ndarray(actual)
2025-01-17T11:32:04.5258000Z             if hasattr(actual, "cgs"):
2025-01-17T11:32:04.5258060Z                 actual = actual.cgs.value
2025-01-17T11:32:04.5258130Z >           npt.assert_allclose(actual, expected)
2025-01-17T11:32:04.5258130Z 
2025-01-17T11:32:04.5258200Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-17T11:32:04.5258280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5258280Z 
2025-01-17T11:32:04.5258580Z args = (<function assert_allclose.<locals>.compare at 0x30eb07ce0>, array([2613, 2612, 2611, ..., 3899, 3852, 3898]), array([2613, 2612, 2611, ..., 3899, 3852, 3898]))
2025-01-17T11:32:04.5258770Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5258780Z 
2025-01-17T11:32:04.5258820Z     @wraps(func)
2025-01-17T11:32:04.5258870Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5258930Z         with self._recreate_cm():
2025-01-17T11:32:04.5258980Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5259030Z E           AssertionError: 
2025-01-17T11:32:04.5259110Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5259150Z E           
2025-01-17T11:32:04.5259220Z E           Mismatched elements: 1847 / 29224 (6.32%)
2025-01-17T11:32:04.5259300Z E           Max absolute difference among violations: 4046
2025-01-17T11:32:04.5259400Z E           Max relative difference among violations: 24.82208589
2025-01-17T11:32:04.5259530Z E            ACTUAL: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-17T11:32:04.5259630Z E            DESIRED: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-17T11:32:04.5259630Z 
2025-01-17T11:32:04.5259780Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5259930Z ________________________ test_hdf_plasma[beta_sobolev] _________________________
2025-01-17T11:32:04.5259940Z 
2025-01-17T11:32:04.5260210Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x16bc10620>
2025-01-17T11:32:04.5260260Z attr = 'beta_sobolev'
2025-01-17T11:32:04.5260460Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x3113b9520>
2025-01-17T11:32:04.5260460Z 
2025-01-17T11:32:04.5260560Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-17T11:32:04.5260690Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-17T11:32:04.5260770Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-17T11:32:04.5260870Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-17T11:32:04.5260950Z             expected = regression_data.sync_ndarray(actual)
2025-01-17T11:32:04.5261010Z             if hasattr(actual, "cgs"):
2025-01-17T11:32:04.5261070Z                 actual = actual.cgs.value
2025-01-17T11:32:04.5261150Z >           npt.assert_allclose(actual, expected)
2025-01-17T11:32:04.5261150Z 
2025-01-17T11:32:04.5261220Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-17T11:32:04.5261300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5261300Z 
2025-01-17T11:32:04.5264460Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5264470Z 
2025-01-17T11:32:04.5264980Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply2__.h5
2025-01-17T11:32:04.5265020Z 
2025-01-17T11:32:04.5265260Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5265260Z 
2025-01-17T11:32:04.5265750Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply5__.h5
2025-01-17T11:32:04.5265760Z 
2025-01-17T11:32:04.5266000Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5266000Z 
2025-01-17T11:32:04.5266530Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data7__.h5
2025-01-17T11:32:04.5266530Z 
2025-01-17T11:32:04.5266770Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5266770Z 
2025-01-17T11:32:04.5267300Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data12__.h5
2025-01-17T11:32:04.5267310Z 
2025-01-17T11:32:04.5267550Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5267550Z 
2025-01-17T11:32:04.5268050Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply10__.h5
2025-01-17T11:32:04.5268050Z 
2025-01-17T11:32:04.5268290Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5268290Z 
2025-01-17T11:32:04.5269000Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data9__.h5
2025-01-17T11:32:04.5269000Z 
2025-01-17T11:32:04.5269240Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5269350Z 
2025-01-17T11:32:04.5269870Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data11__.h5
2025-01-17T11:32:04.5269880Z 
2025-01-17T11:32:04.5270110Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5270120Z 
2025-01-17T11:32:04.5270610Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply12__.h5
2025-01-17T11:32:04.5270620Z 
2025-01-17T11:32:04.5270850Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5270850Z 
2025-01-17T11:32:04.5271350Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply4__.h5
2025-01-17T11:32:04.5271360Z 
2025-01-17T11:32:04.5271590Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5271590Z 
2025-01-17T11:32:04.5272080Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl5__.h5
2025-01-17T11:32:04.5272090Z 
2025-01-17T11:32:04.5272320Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5272330Z 
2025-01-17T11:32:04.5272850Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data4__.h5
2025-01-17T11:32:04.5272850Z 
2025-01-17T11:32:04.5273090Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5273100Z 
2025-01-17T11:32:04.5273590Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply6__.h5
2025-01-17T11:32:04.5273590Z 
2025-01-17T11:32:04.5273830Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5273830Z 
2025-01-17T11:32:04.5274350Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data1__.h5
2025-01-17T11:32:04.5274350Z 
2025-01-17T11:32:04.5274600Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5274600Z 
2025-01-17T11:32:04.5275100Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply14__.h5
2025-01-17T11:32:04.5275100Z 
2025-01-17T11:32:04.5275340Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5275340Z 
2025-01-17T11:32:04.5275870Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data10__.h5
2025-01-17T11:32:04.5275940Z 
2025-01-17T11:32:04.5276180Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5276180Z 
2025-01-17T11:32:04.5276680Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply7__.h5
2025-01-17T11:32:04.5276710Z 
2025-01-17T11:32:04.5276950Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5276950Z 
2025-01-17T11:32:04.5277440Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply4__.h5
2025-01-17T11:32:04.5277440Z 
2025-01-17T11:32:04.5277670Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5277680Z 
2025-01-17T11:32:04.5278200Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data5__.h5
2025-01-17T11:32:04.5278210Z 
2025-01-17T11:32:04.5278440Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5278450Z 
2025-01-17T11:32:04.5278940Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply0__.h5
2025-01-17T11:32:04.5278940Z 
2025-01-17T11:32:04.5279180Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5279180Z 
2025-01-17T11:32:04.5279710Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data15__.h5
2025-01-17T11:32:04.5279710Z 
2025-01-17T11:32:04.5279960Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5279970Z 
2025-01-17T11:32:04.5280490Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data3__.h5
2025-01-17T11:32:04.5280490Z 
2025-01-17T11:32:04.5280740Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5280740Z 
2025-01-17T11:32:04.5281270Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data13__.h5
2025-01-17T11:32:04.5281270Z 
2025-01-17T11:32:04.5281510Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5281520Z 
2025-01-17T11:32:04.5282020Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply13__.h5
2025-01-17T11:32:04.5282020Z 
2025-01-17T11:32:04.5282260Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5282260Z 
2025-01-17T11:32:04.5282750Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl0__.h5
2025-01-17T11:32:04.5282750Z 
2025-01-17T11:32:04.5282990Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5283030Z 
2025-01-17T11:32:04.5283530Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply3__.h5
2025-01-17T11:32:04.5283660Z 
2025-01-17T11:32:04.5283930Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5283940Z 
2025-01-17T11:32:04.5284420Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply0__.h5
2025-01-17T11:32:04.5284420Z 
2025-01-17T11:32:04.5284660Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5284660Z 
2025-01-17T11:32:04.5285150Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply5__.h5
2025-01-17T11:32:04.5285160Z 
2025-01-17T11:32:04.5285400Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5285400Z 
2025-01-17T11:32:04.5285920Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data0__.h5
2025-01-17T11:32:04.5285930Z 
2025-01-17T11:32:04.5286170Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5286170Z 
2025-01-17T11:32:04.5286660Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply1__.h5
2025-01-17T11:32:04.5286660Z 
2025-01-17T11:32:04.5286900Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5286900Z 
2025-01-17T11:32:04.5287390Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl4__.h5
2025-01-17T11:32:04.5287390Z 
2025-01-17T11:32:04.5287630Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5287630Z 
2025-01-17T11:32:04.5288120Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl1__.h5
2025-01-17T11:32:04.5288120Z 
2025-01-17T11:32:04.5288360Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5288360Z 
2025-01-17T11:32:04.5288850Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply1__.h5
2025-01-17T11:32:04.5288860Z 
2025-01-17T11:32:04.5289090Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5289100Z 
2025-01-17T11:32:04.5289600Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply11__.h5
2025-01-17T11:32:04.5289600Z 
2025-01-17T11:32:04.5289830Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5289840Z 
2025-01-17T11:32:04.5290330Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply15__.h5
2025-01-17T11:32:04.5290380Z 
2025-01-17T11:32:04.5290630Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5290630Z 
2025-01-17T11:32:04.5291190Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data6__.h5
2025-01-17T11:32:04.5291200Z 
2025-01-17T11:32:04.5291440Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5291440Z 
2025-01-17T11:32:04.5291960Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data8__.h5
2025-01-17T11:32:04.5291970Z 
2025-01-17T11:32:04.5292200Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5292210Z 
2025-01-17T11:32:04.5292700Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply8__.h5
2025-01-17T11:32:04.5292710Z 
2025-01-17T11:32:04.5292940Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5292940Z 
2025-01-17T11:32:04.5293470Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data14__.h5
2025-01-17T11:32:04.5293480Z 
2025-01-17T11:32:04.5293710Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5293720Z 
2025-01-17T11:32:04.5294240Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data2__.h5
2025-01-17T11:32:04.5294240Z 
2025-01-17T11:32:04.5294480Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-17T11:32:04.5294490Z 
2025-01-17T11:32:04.5294980Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply9__.h5
2025-01-17T11:32:04.5294980Z 
2025-01-17T11:32:04.5295180Z args = (<function assert_allclose.<locals>.compare at 0x322e28ae0>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:32:04.5295220Z        [1., 1., 1.,.....,
2025-01-17T11:32:04.5295280Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:32:04.5295330Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:32:04.5295380Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-01-17T11:32:04.5295580Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5295580Z 
2025-01-17T11:32:04.5295630Z     @wraps(func)
2025-01-17T11:32:04.5295680Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5295740Z         with self._recreate_cm():
2025-01-17T11:32:04.5295790Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5295850Z E           AssertionError: 
2025-01-17T11:32:04.5295930Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5295970Z E           
2025-01-17T11:32:04.5296050Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-01-17T11:32:04.5296140Z E           Max absolute difference among violations: 0.99984222
2025-01-17T11:32:04.5296240Z E           Max relative difference among violations: 6337.12154973
2025-01-17T11:32:04.5296350Z E            ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:32:04.5296410Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:32:04.5296470Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-17T11:32:04.5296550Z E            DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:32:04.5296650Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:32:04.5296710Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-17T11:32:04.5296710Z 
2025-01-17T11:32:04.5296860Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5296980Z ____________________________ test_hdf_plasma[lines] ____________________________
2025-01-17T11:32:04.5296980Z 
2025-01-17T11:32:04.5297140Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x16bc10620>
2025-01-17T11:32:04.5297190Z attr = 'lines'
2025-01-17T11:32:04.5297380Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x1337204a0>
2025-01-17T11:32:04.5297390Z 
2025-01-17T11:32:04.5297500Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-17T11:32:04.5297620Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-17T11:32:04.5297710Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-17T11:32:04.5297810Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-17T11:32:04.5297900Z             expected = regression_data.sync_ndarray(actual)
2025-01-17T11:32:04.5297950Z             if hasattr(actual, "cgs"):
2025-01-17T11:32:04.5298010Z                 actual = actual.cgs.value
2025-01-17T11:32:04.5298080Z >           npt.assert_allclose(actual, expected)
2025-01-17T11:32:04.5298080Z 
2025-01-17T11:32:04.5298150Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-17T11:32:04.5298230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5298240Z 
2025-01-17T11:32:04.5298580Z args = (<function assert_allclose.<locals>.compare at 0x1636eede0>, array([[6.78130000e+04, 6.67720000e+01, 2.70301683e-02, ....       [1.04462000e+05, 9.99900019e+05, 2.64868307e-04, ...,
2025-01-17T11:32:04.5298650Z         4.44653904e+09, 1.76709163e+00, 9.99900019e-03]]))
2025-01-17T11:32:04.5298850Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5298860Z 
2025-01-17T11:32:04.5298900Z     @wraps(func)
2025-01-17T11:32:04.5298960Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5299010Z         with self._recreate_cm():
2025-01-17T11:32:04.5299060Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5299120Z E           AssertionError: 
2025-01-17T11:32:04.5299190Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5299240Z E           
2025-01-17T11:32:04.5299310Z E           Mismatched elements: 13335 / 263016 (5.07%)
2025-01-17T11:32:04.5299410Z E           Max absolute difference among violations: 4.25260542e+12
2025-01-17T11:32:04.5299510Z E           Max relative difference among violations: 18196.0085861
2025-01-17T11:32:04.5299640Z E            ACTUAL: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-17T11:32:04.5299700Z E                   4.043917e+10, 6.677200e-07],
2025-01-17T11:32:04.5299880Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-17T11:32:04.5300010Z E            DESIRED: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-17T11:32:04.5300070Z E                   4.043917e+10, 6.677200e-07],
2025-01-17T11:32:04.5300170Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-17T11:32:04.5300170Z 
2025-01-17T11:32:04.5300450Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5300560Z ____________________________ test_hdf_plasma[f_lu] _____________________________
2025-01-17T11:32:04.5300560Z 
2025-01-17T11:32:04.5300960Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x16bc10620>
2025-01-17T11:32:04.5301000Z attr = 'f_lu'
2025-01-17T11:32:04.5301210Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x32295d0a0>
2025-01-17T11:32:04.5301210Z 
2025-01-17T11:32:04.5301310Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-17T11:32:04.5301480Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-17T11:32:04.5301570Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-17T11:32:04.5301670Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-17T11:32:04.5301750Z             expected = regression_data.sync_ndarray(actual)
2025-01-17T11:32:04.5301820Z             if hasattr(actual, "cgs"):
2025-01-17T11:32:04.5301870Z                 actual = actual.cgs.value
2025-01-17T11:32:04.5301940Z >           npt.assert_allclose(actual, expected)
2025-01-17T11:32:04.5301940Z 
2025-01-17T11:32:04.5302010Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-17T11:32:04.5302100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5302110Z 
2025-01-17T11:32:04.5302450Z args = (<function assert_allclose.<locals>.compare at 0x324f22c00>, array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02, .....), array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02, ...,
2025-01-17T11:32:04.5302530Z        9.93184643e-04, 1.12688279e+00, 4.41447178e-04]))
2025-01-17T11:32:04.5302730Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5302730Z 
2025-01-17T11:32:04.5302770Z     @wraps(func)
2025-01-17T11:32:04.5302820Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5302880Z         with self._recreate_cm():
2025-01-17T11:32:04.5302930Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5302990Z E           AssertionError: 
2025-01-17T11:32:04.5303060Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5303100Z E           
2025-01-17T11:32:04.5303170Z E           Mismatched elements: 2221 / 29224 (7.6%)
2025-01-17T11:32:04.5303270Z E           Max absolute difference among violations: 2.92713618
2025-01-17T11:32:04.5303360Z E           Max relative difference among violations: 18196.0085861
2025-01-17T11:32:04.5303490Z E            ACTUAL: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-17T11:32:04.5303550Z E                  1.126883e+00, 4.414472e-04])
2025-01-17T11:32:04.5303680Z E            DESIRED: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-17T11:32:04.5303740Z E                  1.126883e+00, 4.414472e-04])
2025-01-17T11:32:04.5303740Z 
2025-01-17T11:32:04.5303890Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5304010Z ________________________ test_hdf_plasma[tau_sobolevs] _________________________
2025-01-17T11:32:04.5304010Z 
2025-01-17T11:32:04.5304180Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x16bc10620>
2025-01-17T11:32:04.5304230Z attr = 'tau_sobolevs'
2025-01-17T11:32:04.5304430Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x315916360>
2025-01-17T11:32:04.5304440Z 
2025-01-17T11:32:04.5304540Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-17T11:32:04.5304670Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-17T11:32:04.5304770Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-17T11:32:04.5304860Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-17T11:32:04.5304950Z             expected = regression_data.sync_ndarray(actual)
2025-01-17T11:32:04.5305010Z             if hasattr(actual, "cgs"):
2025-01-17T11:32:04.5305080Z                 actual = actual.cgs.value
2025-01-17T11:32:04.5305150Z >           npt.assert_allclose(actual, expected)
2025-01-17T11:32:04.5305150Z 
2025-01-17T11:32:04.5305270Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-17T11:32:04.5305350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5305350Z 
2025-01-17T11:32:04.5305700Z args = (<function assert_allclose.<locals>.compare at 0x315a60360>, array([[0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ....       [7.57366002e-14, 3.42661945e-14, 1.59795775e-14, ...,
2025-01-17T11:32:04.5306000Z         2.25618458e-18, 1.41426559e-18, 8.96636158e-19]]))
2025-01-17T11:32:04.5306210Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5306210Z 
2025-01-17T11:32:04.5306260Z     @wraps(func)
2025-01-17T11:32:04.5306310Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5306370Z         with self._recreate_cm():
2025-01-17T11:32:04.5306430Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5306480Z E           AssertionError: 
2025-01-17T11:32:04.5306560Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5306600Z E           
2025-01-17T11:32:04.5306680Z E           Mismatched elements: 39620 / 584480 (6.78%)
2025-01-17T11:32:04.5306790Z E           Max absolute difference among violations: 282815.33818472
2025-01-17T11:32:04.5306890Z E           Max relative difference among violations: 4.12352828e+47
2025-01-17T11:32:04.5307020Z E            ACTUAL: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-17T11:32:04.5307090Z E                   0.000000e+00, 0.000000e+00],
2025-01-17T11:32:04.5307190Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-17T11:32:04.5307330Z E            DESIRED: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-17T11:32:04.5307390Z E                   0.000000e+00, 0.000000e+00],
2025-01-17T11:32:04.5307490Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-17T11:32:04.5307500Z 
2025-01-17T11:32:04.5307650Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5307790Z __________________ test_plasma_state_iterations[iterations_w] __________________
2025-01-17T11:32:04.5307790Z 
2025-01-17T11:32:04.5307950Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x309448d40>
2025-01-17T11:32:04.5308010Z attr = 'iterations_w'
2025-01-17T11:32:04.5308210Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x15224e6f0>
2025-01-17T11:32:04.5308210Z 
2025-01-17T11:32:04.5308270Z     @pytest.mark.parametrize(
2025-01-17T11:32:04.5308310Z         "attr",
2025-01-17T11:32:04.5308350Z         [
2025-01-17T11:32:04.5308410Z             "iterations_w",
2025-01-17T11:32:04.5308460Z             "iterations_t_rad",
2025-01-17T11:32:04.5308530Z             "iterations_electron_densities",
2025-01-17T11:32:04.5308580Z             "iterations_t_inner",
2025-01-17T11:32:04.5308630Z         ],
2025-01-17T11:32:04.5308670Z     )
2025-01-17T11:32:04.5308820Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-17T11:32:04.5308900Z         actual = getattr(simulation_one_loop, attr)
2025-01-17T11:32:04.5308960Z         if hasattr(actual, "value"):
2025-01-17T11:32:04.5309010Z             actual = actual.value
2025-01-17T11:32:04.5309080Z         actual = pd.DataFrame(actual)
2025-01-17T11:32:04.5309170Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:32:04.5309310Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:32:04.5309310Z 
2025-01-17T11:32:04.5309390Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-17T11:32:04.5309480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5309590Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5309630Z     ???
2025-01-17T11:32:04.5309710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5309760Z 
2025-01-17T11:32:04.5309810Z >   ???
2025-01-17T11:32:04.5309950Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:32:04.5309990Z E   
2025-01-17T11:32:04.5310110Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-17T11:32:04.5310160Z E   [index]: [0, 1]
2025-01-17T11:32:04.5310280Z E   [left]:  [0.40039163797855976, 0.4500690173218345]
2025-01-17T11:32:04.5310360Z E   [right]: [0.40039163797855976, 0.45013644671958974]
2025-01-17T11:32:04.5310490Z E   At positional index 1, first diff: 0.4500690173218345 != 0.45013644671958974
2025-01-17T11:32:04.5310490Z 
2025-01-17T11:32:04.5310550Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5310670Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:32:04.5311060Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-17T11:32:04.5311410Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-17T11:32:04.5311530Z ---------------------------- Captured stderr setup -----------------------------
2025-01-17T11:32:04.5311530Z 
2025-01-17T11:32:04.5311540Z 
2025-01-17T11:32:04.5311710Z Packets:                                                                                   4031/? [03:37<00:00, 13.12it/s] [A
2025-01-17T11:32:04.5311720Z 
2025-01-17T11:32:04.5311880Z Packets:                                                                                   17806/? [03:37<00:00, 104.29it/s][A
2025-01-17T11:32:04.5311890Z 
2025-01-17T11:32:04.5312050Z Packets:                                                                                   31778/? [03:38<00:00, 236.17it/s][A
2025-01-17T11:32:04.5318170Z Iterations:████████████████████████████████████████████████████████████████████████████████5/5 [03:38<00:00, 76.68s/it]
2025-01-17T11:32:04.5318230Z 
2025-01-17T11:32:04.5318470Z Packets:                                                                                   44030/? [03:38<00:00, 236.17it/s][A
2025-01-17T11:32:04.5318500Z 
2025-01-17T11:32:04.5318670Z Packets:                                                                                   0/40000 [00:00<?, ?it/s]         [A
2025-01-17T11:32:04.5318680Z 
2025-01-17T11:32:04.5318870Z Packets:   █████████████████████▌                                                          10795/40000 [00:00<00:00, 51199.21it/s][A
2025-01-17T11:32:04.5318880Z 
2025-01-17T11:32:04.5319080Z Packets:   ████████████████████████████████▎                                               16137/40000 [00:00<00:00, 52095.09it/s][A
2025-01-17T11:32:04.5319090Z 
2025-01-17T11:32:04.5319290Z Packets:   ██████████████████████████████████████████▊                                     21388/40000 [00:00<00:00, 51120.58it/s][A
2025-01-17T11:32:04.5319290Z 
2025-01-17T11:32:04.5319500Z Packets:   █████████████████████████████████████████████████████                           26539/40000 [00:00<00:00, 51251.29it/s][A
2025-01-17T11:32:04.5319510Z 
2025-01-17T11:32:04.5319730Z Packets:   ███████████████████████████████████████████████████████████████▎                31684/40000 [00:00<00:00, 51313.50it/s][A
2025-01-17T11:32:04.5319730Z 
2025-01-17T11:32:04.5319950Z Packets:   █████████████████████████████████████████████████████████████████████████▋      36819/40000 [00:00<00:00, 51198.60it/s][A
2025-01-17T11:32:04.5320360Z Iterations:                                                                                6/? [03:39<00:00, 51.16s/it]
2025-01-17T11:32:04.5320370Z 
2025-01-17T11:32:04.5320600Z Packets:   ████████████████████████████████████████████████████████████████████████████████40000/40000 [00:00<00:00, 51198.60it/s][A
2025-01-17T11:32:04.5320740Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:32:04.5321140Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-17T11:32:04.5321390Z ________________ test_plasma_state_iterations[iterations_t_rad] ________________
2025-01-17T11:32:04.5321400Z 
2025-01-17T11:32:04.5321560Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x309448d40>
2025-01-17T11:32:04.5321620Z attr = 'iterations_t_rad'
2025-01-17T11:32:04.5321830Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x1522404d0>
2025-01-17T11:32:04.5321840Z 
2025-01-17T11:32:04.5321900Z     @pytest.mark.parametrize(
2025-01-17T11:32:04.5321940Z         "attr",
2025-01-17T11:32:04.5321990Z         [
2025-01-17T11:32:04.5322050Z             "iterations_w",
2025-01-17T11:32:04.5322100Z             "iterations_t_rad",
2025-01-17T11:32:04.5322170Z             "iterations_electron_densities",
2025-01-17T11:32:04.5322220Z             "iterations_t_inner",
2025-01-17T11:32:04.5322270Z         ],
2025-01-17T11:32:04.5322310Z     )
2025-01-17T11:32:04.5322470Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-17T11:32:04.5322550Z         actual = getattr(simulation_one_loop, attr)
2025-01-17T11:32:04.5322620Z         if hasattr(actual, "value"):
2025-01-17T11:32:04.5322670Z             actual = actual.value
2025-01-17T11:32:04.5322730Z         actual = pd.DataFrame(actual)
2025-01-17T11:32:04.5322830Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:32:04.5322980Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:32:04.5322980Z 
2025-01-17T11:32:04.5323070Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-17T11:32:04.5323160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5323270Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5323310Z     ???
2025-01-17T11:32:04.5323400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5323400Z 
2025-01-17T11:32:04.5323450Z >   ???
2025-01-17T11:32:04.5323590Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:32:04.5323630Z E   
2025-01-17T11:32:04.5323760Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-17T11:32:04.5323800Z E   [index]: [0, 1]
2025-01-17T11:32:04.5323880Z E   [left]:  [9967.488442185557, 10091.396322818851]
2025-01-17T11:32:04.5323960Z E   [right]: [9967.488442185557, 10090.925208074616]
2025-01-17T11:32:04.5324090Z E   At positional index 1, first diff: 10091.396322818851 != 10090.925208074616
2025-01-17T11:32:04.5324100Z 
2025-01-17T11:32:04.5360420Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5360690Z _________ test_plasma_state_iterations[iterations_electron_densities] __________
2025-01-17T11:32:04.5360690Z 
2025-01-17T11:32:04.5360860Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x309448d40>
2025-01-17T11:32:04.5360930Z attr = 'iterations_electron_densities'
2025-01-17T11:32:04.5361150Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x1522bdbb0>
2025-01-17T11:32:04.5361490Z 
2025-01-17T11:32:04.5361550Z     @pytest.mark.parametrize(
2025-01-17T11:32:04.5361600Z         "attr",
2025-01-17T11:32:04.5361640Z         [
2025-01-17T11:32:04.5361700Z             "iterations_w",
2025-01-17T11:32:04.5361850Z             "iterations_t_rad",
2025-01-17T11:32:04.5361930Z             "iterations_electron_densities",
2025-01-17T11:32:04.5361980Z             "iterations_t_inner",
2025-01-17T11:32:04.5362030Z         ],
2025-01-17T11:32:04.5362070Z     )
2025-01-17T11:32:04.5362230Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-17T11:32:04.5362310Z         actual = getattr(simulation_one_loop, attr)
2025-01-17T11:32:04.5362370Z         if hasattr(actual, "value"):
2025-01-17T11:32:04.5362420Z             actual = actual.value
2025-01-17T11:32:04.5362490Z         actual = pd.DataFrame(actual)
2025-01-17T11:32:04.5362580Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:32:04.5362720Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:32:04.5362720Z 
2025-01-17T11:32:04.5362810Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-17T11:32:04.5362900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5363020Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5363060Z     ???
2025-01-17T11:32:04.5363150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5363160Z 
2025-01-17T11:32:04.5363200Z >   ???
2025-01-17T11:32:04.5363340Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:32:04.5363380Z E   
2025-01-17T11:32:04.5363510Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-17T11:32:04.5363550Z E   [index]: [0, 1]
2025-01-17T11:32:04.5363630Z E   [left]:  [2869544645.3209715, 2881024886.0882792]
2025-01-17T11:32:04.5363700Z E   [right]: [2869544645.3209715, 2880986026.9779425]
2025-01-17T11:32:04.5363840Z E   At positional index 1, first diff: 2881024886.0882792 != 2880986026.9779425
2025-01-17T11:32:04.5363840Z 
2025-01-17T11:32:04.5363900Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5364030Z ___________________ test_plasma_estimates[nu_bar_estimator] ____________________
2025-01-17T11:32:04.5364050Z 
2025-01-17T11:32:04.5364210Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x309448d40>
2025-01-17T11:32:04.5364270Z attr = 'nu_bar_estimator'
2025-01-17T11:32:04.5364470Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x1522bda90>
2025-01-17T11:32:04.5364470Z 
2025-01-17T11:32:04.5364540Z     @pytest.mark.parametrize(
2025-01-17T11:32:04.5364580Z         "attr",
2025-01-17T11:32:04.5364620Z         [
2025-01-17T11:32:04.5364680Z             "nu_bar_estimator",
2025-01-17T11:32:04.5364730Z             "j_estimator",
2025-01-17T11:32:04.5364780Z             "t_radiative",
2025-01-17T11:32:04.5364830Z             "dilution_factor",
2025-01-17T11:32:04.5364880Z             "output_nus",
2025-01-17T11:32:04.5364930Z             "output_energies",
2025-01-17T11:32:04.5364980Z         ],
2025-01-17T11:32:04.5365020Z     )
2025-01-17T11:32:04.5365160Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-17T11:32:04.5365240Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-17T11:32:04.5365300Z             actual = getattr(
2025-01-17T11:32:04.5365450Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-17T11:32:04.5365490Z                 attr,
2025-01-17T11:32:04.5365540Z             )
2025-01-17T11:32:04.5365620Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-17T11:32:04.5365740Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-17T11:32:04.5365830Z         elif attr in ["output_nus", "output_energies"]:
2025-01-17T11:32:04.5365940Z             actual = getattr(
2025-01-17T11:32:04.5366080Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-17T11:32:04.5366130Z                 attr,
2025-01-17T11:32:04.5366170Z             )
2025-01-17T11:32:04.5366220Z         else:
2025-01-17T11:32:04.5385880Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-17T11:32:04.5385930Z     
2025-01-17T11:32:04.5385990Z         if hasattr(actual, "value"):
2025-01-17T11:32:04.5386050Z             actual = actual.value
2025-01-17T11:32:04.5386110Z         actual = pd.Series(actual)
2025-01-17T11:32:04.5386200Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:32:04.5386340Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:32:04.5386350Z 
2025-01-17T11:32:04.5386440Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-17T11:32:04.5386520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5386640Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5386690Z     ???
2025-01-17T11:32:04.5386770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5386780Z 
2025-01-17T11:32:04.5386820Z >   ???
2025-01-17T11:32:04.5386890Z E   AssertionError: Series are different
2025-01-17T11:32:04.5386930Z E   
2025-01-17T11:32:04.5387000Z E   Series values are different (100.0 %)
2025-01-17T11:32:04.5387100Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-17T11:32:04.5388070Z E   [left]:  [1.0202042777991753e+29, 8.604643039338655e+28, 7.621843612415326e+28, 6.887796775939633e+28, 6.338143063845967e+28, 5.961770832970249e+28, 5.583215038688499e+28, 5.26214201104387e+28, 5.00719468999816e+28, 4.795144203550334e+28, 4.630537292368217e+28, 4.425690259081018e+28, 4.270865369572798e+28, 4.094544283657345e+28, 3.972280940559004e+28, 3.884152385274923e+28, 3.7498225331847723e+28, 3.6666118688506634e+28, 3.5319738797726287e+28, 3.437270715325205e+28]
2025-01-17T11:32:04.5389040Z E   [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-01-17T11:32:04.5389200Z E   At positional index 0, first diff: 1.0202042777991753e+29 != 1.0190851489144414e+29
2025-01-17T11:32:04.5389200Z 
2025-01-17T11:32:04.5389260Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5389390Z ______________________ test_plasma_estimates[j_estimator] ______________________
2025-01-17T11:32:04.5389400Z 
2025-01-17T11:32:04.5389560Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x309448d40>
2025-01-17T11:32:04.5389610Z attr = 'j_estimator'
2025-01-17T11:32:04.5389820Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x15e4180e0>
2025-01-17T11:32:04.5389820Z 
2025-01-17T11:32:04.5389890Z     @pytest.mark.parametrize(
2025-01-17T11:32:04.5389930Z         "attr",
2025-01-17T11:32:04.5389980Z         [
2025-01-17T11:32:04.5390040Z             "nu_bar_estimator",
2025-01-17T11:32:04.5390090Z             "j_estimator",
2025-01-17T11:32:04.5390140Z             "t_radiative",
2025-01-17T11:32:04.5390190Z             "dilution_factor",
2025-01-17T11:32:04.5390240Z             "output_nus",
2025-01-17T11:32:04.5390290Z             "output_energies",
2025-01-17T11:32:04.5390340Z         ],
2025-01-17T11:32:04.5390380Z     )
2025-01-17T11:32:04.5390520Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-17T11:32:04.5390600Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-17T11:32:04.5390660Z             actual = getattr(
2025-01-17T11:32:04.5390890Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-17T11:32:04.5390940Z                 attr,
2025-01-17T11:32:04.5390980Z             )
2025-01-17T11:32:04.5391070Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-17T11:32:04.5391230Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-17T11:32:04.5391320Z         elif attr in ["output_nus", "output_energies"]:
2025-01-17T11:32:04.5391370Z             actual = getattr(
2025-01-17T11:32:04.5391510Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-17T11:32:04.5391550Z                 attr,
2025-01-17T11:32:04.5391600Z             )
2025-01-17T11:32:04.5391640Z         else:
2025-01-17T11:32:04.5391750Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-17T11:32:04.5391790Z     
2025-01-17T11:32:04.5391850Z         if hasattr(actual, "value"):
2025-01-17T11:32:04.5391910Z             actual = actual.value
2025-01-17T11:32:04.5391970Z         actual = pd.Series(actual)
2025-01-17T11:32:04.5392070Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:32:04.5392210Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:32:04.5392210Z 
2025-01-17T11:32:04.5392300Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-17T11:32:04.5392380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5392500Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5392540Z     ???
2025-01-17T11:32:04.5392630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5392630Z 
2025-01-17T11:32:04.5392670Z >   ???
2025-01-17T11:32:04.5392740Z E   AssertionError: Series are different
2025-01-17T11:32:04.5392780Z E   
2025-01-17T11:32:04.5392850Z E   Series values are different (100.0 %)
2025-01-17T11:32:04.5392950Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-17T11:32:04.5393720Z E   [left]:  [116635492761989.08, 98171051632121.94, 86872515261186.84, 78289696965690.05, 72209193315676.42, 67743848273202.76, 63510940656108.0, 60117004438842.5, 57572723670164.91, 55316097836075.18, 53398108009568.71, 51391839595543.54, 49914799926154.195, 48252386019894.61, 46984233483222.1, 46076787175987.44, 45005288890715.74, 44179675761283.02, 43040066710169.69, 42141149121109.82]
2025-01-17T11:32:04.5394500Z E   [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-01-17T11:32:04.5394640Z E   At positional index 0, first diff: 116635492761989.08 != 116548101693134.0
2025-01-17T11:32:04.5394640Z 
2025-01-17T11:32:04.5394700Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5394830Z ______________________ test_plasma_estimates[t_radiative] ______________________
2025-01-17T11:32:04.5394830Z 
2025-01-17T11:32:04.5394990Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x309448d40>
2025-01-17T11:32:04.5395050Z attr = 't_radiative'
2025-01-17T11:32:04.5395250Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x399c7d7c0>
2025-01-17T11:32:04.5395250Z 
2025-01-17T11:32:04.5395320Z     @pytest.mark.parametrize(
2025-01-17T11:32:04.5395360Z         "attr",
2025-01-17T11:32:04.5395410Z         [
2025-01-17T11:32:04.5395460Z             "nu_bar_estimator",
2025-01-17T11:32:04.5395510Z             "j_estimator",
2025-01-17T11:32:04.5395560Z             "t_radiative",
2025-01-17T11:32:04.5395620Z             "dilution_factor",
2025-01-17T11:32:04.5395670Z             "output_nus",
2025-01-17T11:32:04.5395730Z             "output_energies",
2025-01-17T11:32:04.5395810Z         ],
2025-01-17T11:32:04.5395860Z     )
2025-01-17T11:32:04.5396000Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-17T11:32:04.5396080Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-17T11:32:04.5396140Z             actual = getattr(
2025-01-17T11:32:04.5396340Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-17T11:32:04.5396390Z                 attr,
2025-01-17T11:32:04.5396430Z             )
2025-01-17T11:32:04.5396520Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-17T11:32:04.5396640Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-17T11:32:04.5396730Z         elif attr in ["output_nus", "output_energies"]:
2025-01-17T11:32:04.5396780Z             actual = getattr(
2025-01-17T11:32:04.5396920Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-17T11:32:04.5396960Z                 attr,
2025-01-17T11:32:04.5397010Z             )
2025-01-17T11:32:04.5397050Z         else:
2025-01-17T11:32:04.5397160Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-17T11:32:04.5397200Z     
2025-01-17T11:32:04.5397270Z         if hasattr(actual, "value"):
2025-01-17T11:32:04.5397320Z             actual = actual.value
2025-01-17T11:32:04.5397380Z         actual = pd.Series(actual)
2025-01-17T11:32:04.5397470Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:32:04.5397610Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:32:04.5397610Z 
2025-01-17T11:32:04.5397700Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-17T11:32:04.5397790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5397900Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5397940Z     ???
2025-01-17T11:32:04.5398030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5398030Z 
2025-01-17T11:32:04.5398070Z >   ???
2025-01-17T11:32:04.5398140Z E   AssertionError: Series are different
2025-01-17T11:32:04.5398190Z E   
2025-01-17T11:32:04.5398250Z E   Series values are different (90.0 %)
2025-01-17T11:32:04.5398350Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-17T11:32:04.5399150Z E   [left]:  [10091.396322818851, 10113.672762424394, 10138.57214647089, 10142.40782954104, 10149.471061360664, 10124.731447668686, 10084.96501000204, 10057.88480134284, 10073.983914823793, 10031.924501830883, 10029.890159447663, 9982.658841271636, 9943.375727608092, 9914.259749796103, 9893.924180562475, 9854.860600288932, 9802.891513260798, 9774.848565783677, 9735.162327402864, 9698.911095826039]
2025-01-17T11:32:04.5400060Z E   [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-01-17T11:32:04.5400210Z E   At positional index 0, first diff: 10091.396322818851 != 10090.925208074616
2025-01-17T11:32:04.5400220Z 
2025-01-17T11:32:04.5400280Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5400410Z ____________________ test_plasma_estimates[dilution_factor] ____________________
2025-01-17T11:32:04.5400410Z 
2025-01-17T11:32:04.5400580Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x309448d40>
2025-01-17T11:32:04.5400640Z attr = 'dilution_factor'
2025-01-17T11:32:04.5400850Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x1522bfa40>
2025-01-17T11:32:04.5400850Z 
2025-01-17T11:32:04.5400910Z     @pytest.mark.parametrize(
2025-01-17T11:32:04.5400960Z         "attr",
2025-01-17T11:32:04.5404940Z         [
2025-01-17T11:32:04.5404990Z             "nu_bar_estimator",
2025-01-17T11:32:04.5405040Z             "j_estimator",
2025-01-17T11:32:04.5405090Z             "t_radiative",
2025-01-17T11:32:04.5405150Z             "dilution_factor",
2025-01-17T11:32:04.5405200Z             "output_nus",
2025-01-17T11:32:04.5405350Z             "output_energies",
2025-01-17T11:32:04.5405390Z         ],
2025-01-17T11:32:04.5405430Z     )
2025-01-17T11:32:04.5405570Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-17T11:32:04.5405660Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-17T11:32:04.5405710Z             actual = getattr(
2025-01-17T11:32:04.5405860Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-17T11:32:04.5405910Z                 attr,
2025-01-17T11:32:04.5405950Z             )
2025-01-17T11:32:04.5406040Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-17T11:32:04.5406150Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-17T11:32:04.5406240Z         elif attr in ["output_nus", "output_energies"]:
2025-01-17T11:32:04.5406290Z             actual = getattr(
2025-01-17T11:32:04.5406430Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-17T11:32:04.5406480Z                 attr,
2025-01-17T11:32:04.5406520Z             )
2025-01-17T11:32:04.5406570Z         else:
2025-01-17T11:32:04.5406670Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-17T11:32:04.5406710Z     
2025-01-17T11:32:04.5406760Z         if hasattr(actual, "value"):
2025-01-17T11:32:04.5406820Z             actual = actual.value
2025-01-17T11:32:04.5406880Z         actual = pd.Series(actual)
2025-01-17T11:32:04.5406970Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:32:04.5407110Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:32:04.5407110Z 
2025-01-17T11:32:04.5407200Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-17T11:32:04.5407280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5407390Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5407430Z     ???
2025-01-17T11:32:04.5407520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5407530Z 
2025-01-17T11:32:04.5407570Z >   ???
2025-01-17T11:32:04.5407640Z E   AssertionError: Series are different
2025-01-17T11:32:04.5407680Z E   
2025-01-17T11:32:04.5407740Z E   Series values are different (95.0 %)
2025-01-17T11:32:04.5407840Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-17T11:32:04.5408680Z E   [left]:  [0.4500690173218345, 0.3591778672440072, 0.299315794490968, 0.2578615845098735, 0.2254422032786788, 0.20109997630618956, 0.18257381854718482, 0.166581017494628, 0.15049754388199085, 0.13975435818105286, 0.12862206084807348, 0.12092168181342122, 0.1134233405695467, 0.10650389106044364, 0.10016109465785483, 0.09484390983006763, 0.09052533757303871, 0.08585912682814001, 0.0820302832176511, 0.07824287530618068]
2025-01-17T11:32:04.5409530Z E   [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-01-17T11:32:04.5409670Z E   At positional index 0, first diff: 0.4500690173218345 != 0.45013644671958974
2025-01-17T11:32:04.5409670Z 
2025-01-17T11:32:04.5409730Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5409850Z ______________________ test_plasma_estimates[output_nus] _______________________
2025-01-17T11:32:04.5409860Z 
2025-01-17T11:32:04.5410010Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x309448d40>
2025-01-17T11:32:04.5410210Z attr = 'output_nus'
2025-01-17T11:32:04.5410420Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x15e425880>
2025-01-17T11:32:04.5410420Z 
2025-01-17T11:32:04.5410480Z     @pytest.mark.parametrize(
2025-01-17T11:32:04.5410760Z         "attr",
2025-01-17T11:32:04.5410800Z         [
2025-01-17T11:32:04.5410850Z             "nu_bar_estimator",
2025-01-17T11:32:04.5410910Z             "j_estimator",
2025-01-17T11:32:04.5410950Z             "t_radiative",
2025-01-17T11:32:04.5411010Z             "dilution_factor",
2025-01-17T11:32:04.5411050Z             "output_nus",
2025-01-17T11:32:04.5411110Z             "output_energies",
2025-01-17T11:32:04.5411150Z         ],
2025-01-17T11:32:04.5411190Z     )
2025-01-17T11:32:04.5411330Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-17T11:32:04.5411420Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-17T11:32:04.5411470Z             actual = getattr(
2025-01-17T11:32:04.5411620Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-17T11:32:04.5411660Z                 attr,
2025-01-17T11:32:04.5411700Z             )
2025-01-17T11:32:04.5411790Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-17T11:32:04.5411910Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-17T11:32:04.5412000Z         elif attr in ["output_nus", "output_energies"]:
2025-01-17T11:32:04.5412050Z             actual = getattr(
2025-01-17T11:32:04.5412180Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-17T11:32:04.5412230Z                 attr,
2025-01-17T11:32:04.5412270Z             )
2025-01-17T11:32:04.5412310Z         else:
2025-01-17T11:32:04.5412410Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-17T11:32:04.5412450Z     
2025-01-17T11:32:04.5412510Z         if hasattr(actual, "value"):
2025-01-17T11:32:04.5412570Z             actual = actual.value
2025-01-17T11:32:04.5412620Z         actual = pd.Series(actual)
2025-01-17T11:32:04.5412720Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:32:04.5412850Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:32:04.5412860Z 
2025-01-17T11:32:04.5412940Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-17T11:32:04.5413030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5413140Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5413180Z     ???
2025-01-17T11:32:04.5413270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5413270Z 
2025-01-17T11:32:04.5413310Z >   ???
2025-01-17T11:32:04.5413380Z E   AssertionError: Series are different
2025-01-17T11:32:04.5413420Z E   
2025-01-17T11:32:04.5413480Z E   Series values are different (5.1125 %)
2025-01-17T11:32:04.5413780Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.5417800Z E   [left]:  [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.94, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.25, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313314.8, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-01-17T11:32:04.5422020Z E   [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-01-17T11:32:04.5422180Z E   At positional index 56, first diff: 657003154645147.8 != 657025184715239.1
2025-01-17T11:32:04.5422180Z 
2025-01-17T11:32:04.5422240Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5422370Z ____________________ test_plasma_estimates[output_energies] ____________________
2025-01-17T11:32:04.5422370Z 
2025-01-17T11:32:04.5422530Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x309448d40>
2025-01-17T11:32:04.5422590Z attr = 'output_energies'
2025-01-17T11:32:04.5422790Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x15e426d20>
2025-01-17T11:32:04.5422790Z 
2025-01-17T11:32:04.5422910Z     @pytest.mark.parametrize(
2025-01-17T11:32:04.5422960Z         "attr",
2025-01-17T11:32:04.5423000Z         [
2025-01-17T11:32:04.5423050Z             "nu_bar_estimator",
2025-01-17T11:32:04.5423100Z             "j_estimator",
2025-01-17T11:32:04.5423150Z             "t_radiative",
2025-01-17T11:32:04.5423200Z             "dilution_factor",
2025-01-17T11:32:04.5423290Z             "output_nus",
2025-01-17T11:32:04.5423350Z             "output_energies",
2025-01-17T11:32:04.5423390Z         ],
2025-01-17T11:32:04.5423430Z     )
2025-01-17T11:32:04.5423570Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-17T11:32:04.5423660Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-17T11:32:04.5423710Z             actual = getattr(
2025-01-17T11:32:04.5423860Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-17T11:32:04.5423900Z                 attr,
2025-01-17T11:32:04.5423940Z             )
2025-01-17T11:32:04.5424040Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-17T11:32:04.5424150Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-17T11:32:04.5424230Z         elif attr in ["output_nus", "output_energies"]:
2025-01-17T11:32:04.5424280Z             actual = getattr(
2025-01-17T11:32:04.5424420Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-17T11:32:04.5424470Z                 attr,
2025-01-17T11:32:04.5424510Z             )
2025-01-17T11:32:04.5424550Z         else:
2025-01-17T11:32:04.5424650Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-17T11:32:04.5424690Z     
2025-01-17T11:32:04.5424750Z         if hasattr(actual, "value"):
2025-01-17T11:32:04.5424810Z             actual = actual.value
2025-01-17T11:32:04.5424860Z         actual = pd.Series(actual)
2025-01-17T11:32:04.5424950Z         expected = regression_data.sync_dataframe(actual)
2025-01-17T11:32:04.5425090Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-17T11:32:04.5425090Z 
2025-01-17T11:32:04.5425180Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-17T11:32:04.5425260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5425370Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-17T11:32:04.5425410Z     ???
2025-01-17T11:32:04.5425500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5425510Z 
2025-01-17T11:32:04.5425550Z >   ???
2025-01-17T11:32:04.5425620Z E   AssertionError: Series are different
2025-01-17T11:32:04.5425650Z E   
2025-01-17T11:32:04.5425720Z E   Series values are different (1.3025 %)
2025-01-17T11:32:04.5426020Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.5430950Z E   [left]:  [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503752e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.5580712211859562e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.270905632364821e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544443e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.533792518100767e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-17T11:32:04.5436590Z E   [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-17T11:32:04.5436770Z E   At positional index 414, first diff: 2.5657552576608082e-05 != 2.5347525852067693e-05
2025-01-17T11:32:04.5436820Z 
2025-01-17T11:32:04.5436890Z testing.pyx:173: AssertionError
2025-01-17T11:32:04.5437030Z ________________ TestSpectrumSolver.test_spectrum_real_packets _________________
2025-01-17T11:32:04.5437040Z 
2025-01-17T11:32:04.5437230Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x133822810>
2025-01-17T11:32:04.5437710Z simulation = <tardis.simulation.base.Simulation object at 0x1785c66c0>
2025-01-17T11:32:04.5437710Z 
2025-01-17T11:32:04.5437800Z     def test_spectrum_real_packets(self, simulation):
2025-01-17T11:32:04.5437910Z         transport_state = simulation.transport.transport_state
2025-01-17T11:32:04.5438060Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-01-17T11:32:04.5438100Z     
2025-01-17T11:32:04.5438250Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-01-17T11:32:04.5438340Z         result = solver.spectrum_real_packets.luminosity
2025-01-17T11:32:04.5438480Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-01-17T11:32:04.5438560Z         expected = self.get_expected_data(key)
2025-01-17T11:32:04.5438600Z     
2025-01-17T11:32:04.5438680Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-17T11:32:04.5438720Z     
2025-01-17T11:32:04.5438780Z >       assert_quantity_allclose(
2025-01-17T11:32:04.5438830Z             result,
2025-01-17T11:32:04.5438880Z             luminosity,
2025-01-17T11:32:04.5438920Z         )
2025-01-17T11:32:04.5438920Z 
2025-01-17T11:32:04.5439020Z tardis/spectrum/tests/test_spectrum_solver.py:71: 
2025-01-17T11:32:04.5439100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5439380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:32:04.5439440Z     np.testing.assert_allclose(
2025-01-17T11:32:04.5439530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5439530Z 
2025-01-17T11:32:04.5440010Z args = (<function assert_allclose.<locals>.compare at 0x1785a32e0>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, .....), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-01-17T11:32:04.5440100Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5440310Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5440310Z 
2025-01-17T11:32:04.5440360Z     @wraps(func)
2025-01-17T11:32:04.5440410Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5440470Z         with self._recreate_cm():
2025-01-17T11:32:04.5440530Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5440590Z E           AssertionError: 
2025-01-17T11:32:04.5440670Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5440710Z E           
2025-01-17T11:32:04.5440800Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-01-17T11:32:04.5440900Z E           Max absolute difference among violations: 4.30543741e+37
2025-01-17T11:32:04.5440990Z E           Max relative difference among violations: 1.
2025-01-17T11:32:04.5441120Z E            ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.5441190Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5441330Z E            DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.5441390Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5441390Z 
2025-01-17T11:32:04.5441550Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5441710Z ___________ TestSpectrumSolver.test_spectrum_real_packets_reabsorbed ___________
2025-01-17T11:32:04.5441710Z 
2025-01-17T11:32:04.5441910Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x1338226f0>
2025-01-17T11:32:04.5442130Z simulation = <tardis.simulation.base.Simulation object at 0x1785c66c0>
2025-01-17T11:32:04.5442140Z 
2025-01-17T11:32:04.5442250Z     def test_spectrum_real_packets_reabsorbed(self, simulation):
2025-01-17T11:32:04.5442360Z         transport_state = simulation.transport.transport_state
2025-01-17T11:32:04.5442560Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-01-17T11:32:04.5442600Z     
2025-01-17T11:32:04.5442750Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-01-17T11:32:04.5442880Z         result = solver.spectrum_real_packets_reabsorbed.luminosity
2025-01-17T11:32:04.5443040Z         key = "simulation/spectrum_solver/spectrum_real_packets_reabsorbed/luminosity"
2025-01-17T11:32:04.5443120Z         expected = self.get_expected_data(key)
2025-01-17T11:32:04.5443160Z     
2025-01-17T11:32:04.5443240Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-17T11:32:04.5443280Z     
2025-01-17T11:32:04.5443350Z >       assert_quantity_allclose(
2025-01-17T11:32:04.5443390Z             result,
2025-01-17T11:32:04.5443440Z             luminosity,
2025-01-17T11:32:04.5443480Z         )
2025-01-17T11:32:04.5443490Z 
2025-01-17T11:32:04.5443580Z tardis/spectrum/tests/test_spectrum_solver.py:87: 
2025-01-17T11:32:04.5443670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5443930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:32:04.5443990Z     np.testing.assert_allclose(
2025-01-17T11:32:04.5444080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5444080Z 
2025-01-17T11:32:04.5444450Z args = (<function assert_allclose.<locals>.compare at 0x1785a2f20>, array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38, .....), array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38, ...,
2025-01-17T11:32:04.5444530Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5444740Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5444740Z 
2025-01-17T11:32:04.5444800Z     @wraps(func)
2025-01-17T11:32:04.5444850Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5444910Z         with self._recreate_cm():
2025-01-17T11:32:04.5444970Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5445030Z E           AssertionError: 
2025-01-17T11:32:04.5445110Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5445150Z E           
2025-01-17T11:32:04.5445230Z E           Mismatched elements: 252 / 10000 (2.52%)
2025-01-17T11:32:04.5445340Z E           Max absolute difference among violations: 4.15247374e+37
2025-01-17T11:32:04.5445420Z E           Max relative difference among violations: 1.
2025-01-17T11:32:04.5445560Z E            ACTUAL: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.5445620Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5445760Z E            DESIRED: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.5445820Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5445820Z 
2025-01-17T11:32:04.5445990Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5446130Z ________________________ TestSpectrumSolver.test_solve _________________________
2025-01-17T11:32:04.5446130Z 
2025-01-17T11:32:04.5446330Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x133820b60>
2025-01-17T11:32:04.5446480Z simulation = <tardis.simulation.base.Simulation object at 0x1785c66c0>
2025-01-17T11:32:04.5446480Z 
2025-01-17T11:32:04.5446550Z     def test_solve(self, simulation):
2025-01-17T11:32:04.5446660Z         transport_state = simulation.transport.transport_state
2025-01-17T11:32:04.5446820Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-01-17T11:32:04.5446910Z     
2025-01-17T11:32:04.5447060Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-01-17T11:32:04.5447180Z         result_real, result_virtual, result_integrated = solver.solve(
2025-01-17T11:32:04.5447290Z             transport_state
2025-01-17T11:32:04.5447330Z         )
2025-01-17T11:32:04.5447480Z         key_real = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-01-17T11:32:04.5447570Z         expected_real = self.get_expected_data(key_real)
2025-01-17T11:32:04.5447610Z     
2025-01-17T11:32:04.5447710Z         luminosity_real = u.Quantity(expected_real, "erg /s")
2025-01-17T11:32:04.5447750Z     
2025-01-17T11:32:04.5447810Z >       assert_quantity_allclose(
2025-01-17T11:32:04.5447870Z             result_real.luminosity,
2025-01-17T11:32:04.5447930Z             luminosity_real,
2025-01-17T11:32:04.5447970Z         )
2025-01-17T11:32:04.5447970Z 
2025-01-17T11:32:04.5448070Z tardis/spectrum/tests/test_spectrum_solver.py:105: 
2025-01-17T11:32:04.5448160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5448430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:32:04.5448500Z     np.testing.assert_allclose(
2025-01-17T11:32:04.5448590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5448590Z 
2025-01-17T11:32:04.5448950Z args = (<function assert_allclose.<locals>.compare at 0x17839c720>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, .....), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-01-17T11:32:04.5449030Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5449240Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5449240Z 
2025-01-17T11:32:04.5449290Z     @wraps(func)
2025-01-17T11:32:04.5449350Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5449410Z         with self._recreate_cm():
2025-01-17T11:32:04.5449470Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5449530Z E           AssertionError: 
2025-01-17T11:32:04.5449610Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5449650Z E           
2025-01-17T11:32:04.5449730Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-01-17T11:32:04.5449830Z E           Max absolute difference among violations: 4.30543741e+37
2025-01-17T11:32:04.5449920Z E           Max relative difference among violations: 1.
2025-01-17T11:32:04.5450050Z E            ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.5450110Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5450240Z E            DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.5450300Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5450310Z 
2025-01-17T11:32:04.5450460Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5450600Z __________________ TestTransportSimple.test_j_blue_estimators __________________
2025-01-17T11:32:04.5450600Z 
2025-01-17T11:32:04.5450760Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x1338210d0>
2025-01-17T11:32:04.5450910Z simulation = <tardis.simulation.base.Simulation object at 0x1786fbd40>
2025-01-17T11:32:04.5450910Z 
2025-01-17T11:32:04.5450990Z     def test_j_blue_estimators(self, simulation):
2025-01-17T11:32:04.5451110Z         key = "simulation/transport/transport_state/j_blue_estimator"
2025-01-17T11:32:04.5451170Z         expected = self.get_expected_data(key)
2025-01-17T11:32:04.5451220Z     
2025-01-17T11:32:04.5451270Z >       npt.assert_allclose(
2025-01-17T11:32:04.5451440Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator,
2025-01-17T11:32:04.5452170Z             expected.values,
2025-01-17T11:32:04.5452220Z         )
2025-01-17T11:32:04.5452220Z 
2025-01-17T11:32:04.5452280Z tardis/tests/test_tardis_full.py:70: 
2025-01-17T11:32:04.5452370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5452370Z 
2025-01-17T11:32:04.5452630Z args = (<function assert_allclose.<locals>.compare at 0x135bd7740>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5452680Z        [0., 0., 0.,.....,
2025-01-17T11:32:04.5452730Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5452780Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5452830Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-17T11:32:04.5453030Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5453030Z 
2025-01-17T11:32:04.5453080Z     @wraps(func)
2025-01-17T11:32:04.5453130Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5453190Z         with self._recreate_cm():
2025-01-17T11:32:04.5453250Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5453300Z E           AssertionError: 
2025-01-17T11:32:04.5453380Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5453420Z E           
2025-01-17T11:32:04.5453500Z E           Mismatched elements: 491895 / 584480 (84.2%)
2025-01-17T11:32:04.5453620Z E           Max absolute difference among violations: 5.32418652e-19
2025-01-17T11:32:04.5453720Z E           Max relative difference among violations: 12.23359055
2025-01-17T11:32:04.5453800Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5453850Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5453920Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:32:04.5453990Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5454050Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5454120Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:32:04.5454120Z 
2025-01-17T11:32:04.5454270Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5454400Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:32:04.5454750Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5454810Z 	
2025-01-17T11:32:04.5455230Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-17T11:32:04.5455360Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5455690Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-17T11:32:04.5455810Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5456180Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-17T11:32:04.5456370Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-17T11:32:04.5456700Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-17T11:32:04.5456840Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5457000Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-17T11:32:04.5457120Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5457170Z 	
2025-01-17T11:32:04.5457280Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-17T11:32:04.5457400Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5457440Z 	
2025-01-17T11:32:04.5457510Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-01-17T11:32:04.5462120Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-01-17T11:32:04.5462180Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:32:04.5462520Z  ([1mbase.py[0m:657)
2025-01-17T11:32:04.5462640Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5462680Z 	
2025-01-17T11:32:04.5462790Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-17T11:32:04.5462910Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5464960Z 	
2025-01-17T11:32:04.5465040Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-17T11:32:04.5465100Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-01-17T11:32:04.5465160Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-01-17T11:32:04.5465220Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-01-17T11:32:04.5465280Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-01-17T11:32:04.5465350Z  ([1mbase.py[0m:650)
2025-01-17T11:32:04.5465470Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5465510Z 	
2025-01-17T11:32:04.5465570Z 	Current t_inner = 9974.969 K
2025-01-17T11:32:04.5465660Z 	Expected t_inner for next iteration = 10736.790 K
2025-01-17T11:32:04.5465720Z  ([1mbase.py[0m:652)
2025-01-17T11:32:04.5465850Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5465880Z 	
2025-01-17T11:32:04.5466000Z 	Starting iteration 2 of 5 ([1mbase.py[0m:444)
2025-01-17T11:32:04.5466120Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5466160Z 	
2025-01-17T11:32:04.5466220Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-01-17T11:32:04.5466280Z 	Luminosity absorbed  = 3.623e+42 erg / s
2025-01-17T11:32:04.5466340Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:32:04.5466410Z  ([1mbase.py[0m:657)
2025-01-17T11:32:04.5466530Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5466570Z 	
2025-01-17T11:32:04.5466670Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-17T11:32:04.5466790Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5466830Z 	
2025-01-17T11:32:04.5466910Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-17T11:32:04.5466970Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-01-17T11:32:04.5467030Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-01-17T11:32:04.5467090Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-01-17T11:32:04.5467140Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-01-17T11:32:04.5467220Z  ([1mbase.py[0m:650)
2025-01-17T11:32:04.5467330Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5467380Z 	
2025-01-17T11:32:04.5467430Z 	Current t_inner = 10736.790 K
2025-01-17T11:32:04.5467510Z 	Expected t_inner for next iteration = 10718.574 K
2025-01-17T11:32:04.5467580Z  ([1mbase.py[0m:652)
2025-01-17T11:32:04.5467700Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5467740Z 	
2025-01-17T11:32:04.5467850Z 	Starting iteration 3 of 5 ([1mbase.py[0m:444)
2025-01-17T11:32:04.5467970Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5468010Z 	
2025-01-17T11:32:04.5468070Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-01-17T11:32:04.5468130Z 	Luminosity absorbed  = 3.512e+42 erg / s
2025-01-17T11:32:04.5468200Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:32:04.5468260Z  ([1mbase.py[0m:657)
2025-01-17T11:32:04.5468390Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5468550Z 	Iteration converged 1/4 consecutive times. ([1mbase.py[0m:260)
2025-01-17T11:32:04.5468670Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5468710Z 	
2025-01-17T11:32:04.5468820Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-17T11:32:04.5468940Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5468980Z 	
2025-01-17T11:32:04.5469060Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-17T11:32:04.5469120Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-01-17T11:32:04.5469170Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-01-17T11:32:04.5469230Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-01-17T11:32:04.5469350Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0922
2025-01-17T11:32:04.5469420Z  ([1mbase.py[0m:650)
2025-01-17T11:32:04.5469540Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5469590Z 	
2025-01-17T11:32:04.5469640Z 	Current t_inner = 10718.574 K
2025-01-17T11:32:04.5469770Z 	Expected t_inner for next iteration = 10696.150 K
2025-01-17T11:32:04.5469850Z  ([1mbase.py[0m:652)
2025-01-17T11:32:04.5469960Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5470010Z 	
2025-01-17T11:32:04.5470110Z 	Starting iteration 4 of 5 ([1mbase.py[0m:444)
2025-01-17T11:32:04.5470230Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5470280Z 	
2025-01-17T11:32:04.5470340Z 	Luminosity emitted   = 1.083e+43 erg / s
2025-01-17T11:32:04.5470400Z 	Luminosity absorbed  = 3.426e+42 erg / s
2025-01-17T11:32:04.5470460Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:32:04.5470530Z  ([1mbase.py[0m:657)
2025-01-17T11:32:04.5470650Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5470810Z 	Iteration converged 2/4 consecutive times. ([1mbase.py[0m:260)
2025-01-17T11:32:04.5470930Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5470970Z 	
2025-01-17T11:32:04.5471080Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-17T11:32:04.5471200Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5471240Z 	
2025-01-17T11:32:04.5471310Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-17T11:32:04.5471370Z 	0         1.07e+04 K  1.09e+04 K  0.491   0.489
2025-01-17T11:32:04.5471430Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-01-17T11:32:04.5471490Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-01-17T11:32:04.5471540Z 	15        1.04e+04 K  1.05e+04 K 0.0922  0.0902
2025-01-17T11:32:04.5471610Z  ([1mbase.py[0m:650)
2025-01-17T11:32:04.5471730Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5471780Z 	
2025-01-17T11:32:04.5471830Z 	Current t_inner = 10696.150 K
2025-01-17T11:32:04.5471910Z 	Expected t_inner for next iteration = 10681.168 K
2025-01-17T11:32:04.5471980Z  ([1mbase.py[0m:652)
2025-01-17T11:32:04.5472100Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5472140Z 	
2025-01-17T11:32:04.5472210Z 	Simulation finished in 4 iterations 
2025-01-17T11:32:04.5472260Z 	Simulation took 9.69 s
2025-01-17T11:32:04.5472330Z  ([1mbase.py[0m:542)
2025-01-17T11:32:04.5472440Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5472490Z 	
2025-01-17T11:32:04.5472600Z 	Starting iteration 5 of 5 ([1mbase.py[0m:444)
2025-01-17T11:32:04.5472720Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5472760Z 	
2025-01-17T11:32:04.5472820Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-01-17T11:32:04.5472880Z 	Luminosity absorbed  = 3.438e+42 erg / s
2025-01-17T11:32:04.5472940Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:32:04.5473010Z  ([1mbase.py[0m:657)
2025-01-17T11:32:04.5473140Z ---------------------------- Captured stderr setup -----------------------------
2025-01-17T11:32:04.5473140Z 
2025-01-17T11:32:04.5473140Z 
2025-01-17T11:32:04.5473330Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                [A
2025-01-17T11:32:04.5473330Z 
2025-01-17T11:32:04.5473510Z Packets:                                                                                   0/200000 [00:00<?, ?it/s][A
2025-01-17T11:32:04.5473510Z 
2025-01-17T11:32:04.5473700Z Packets:   ████▉                                                                           12289/200000 [00:00<00:01, 122881.33it/s][A
2025-01-17T11:32:04.5473700Z 
2025-01-17T11:32:04.5473890Z Packets:   ██████████▌                                                                     26336/200000 [00:00<00:01, 133226.63it/s][A
2025-01-17T11:32:04.5473890Z 
2025-01-17T11:32:04.5474140Z Packets:   ████████████████▍                                                               41063/200000 [00:00<00:01, 139634.36it/s][A
2025-01-17T11:32:04.5474140Z 
2025-01-17T11:32:04.5474330Z Packets:   ██████████████████████▎                                                         55720/200000 [00:00<00:01, 142369.09it/s][A
2025-01-17T11:32:04.5474380Z 
2025-01-17T11:32:04.5474570Z Packets:   ███████████████████████████▉                                                    69957/200000 [00:00<00:00, 141875.72it/s][A
2025-01-17T11:32:04.5474580Z 
2025-01-17T11:32:04.5474770Z Packets:   █████████████████████████████████▋                                              84145/200000 [00:00<00:00, 140650.52it/s][A
2025-01-17T11:32:04.5474770Z 
2025-01-17T11:32:04.5474970Z Packets:   ███████████████████████████████████████▌                                        98875/200000 [00:00<00:00, 142806.94it/s][A
2025-01-17T11:32:04.5474970Z 
2025-01-17T11:32:04.5475180Z Packets:   █████████████████████████████████████████████▌                                  113828/200000 [00:00<00:00, 144935.15it/s][A
2025-01-17T11:32:04.5475190Z 
2025-01-17T11:32:04.5475400Z Packets:   ███████████████████████████████████████████████████▋                            129081/200000 [00:00<00:00, 147299.21it/s][A
2025-01-17T11:32:04.5475410Z 
2025-01-17T11:32:04.5475630Z Packets:   █████████████████████████████████████████████████████████▋                      144165/200000 [00:01<00:00, 148387.98it/s][A
2025-01-17T11:32:04.5475630Z 
2025-01-17T11:32:04.5475850Z Packets:   ███████████████████████████████████████████████████████████████▌                159007/200000 [00:01<00:00, 142386.81it/s][A
2025-01-17T11:32:04.5475850Z 
2025-01-17T11:32:04.5476070Z Packets:   █████████████████████████████████████████████████████████████████████▎          173297/200000 [00:01<00:00, 139876.53it/s][A
2025-01-17T11:32:04.5476070Z 
2025-01-17T11:32:04.5476290Z Packets:   ███████████████████████████████████████████████████████████████████████████▎    188133/200000 [00:01<00:00, 142359.21it/s][A
2025-01-17T11:32:04.5476420Z Iterations:                                                                                13/? [04:30<00:00,  9.69s/it]
2025-01-17T11:32:04.5476430Z 
2025-01-17T11:32:04.5476670Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉199999/200000 [00:01<00:00, 142359.21it/s][A
2025-01-17T11:32:04.5476690Z 
2025-01-17T11:32:04.5476860Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-01-17T11:32:04.5476870Z 
2025-01-17T11:32:04.5477040Z Packets:   ██████                                                                          15223/200000 [00:00<00:01, 152225.06it/s][A
2025-01-17T11:32:04.5477050Z 
2025-01-17T11:32:04.5477230Z Packets:   ████████████▏                                                                   30446/200000 [00:00<00:01, 151123.20it/s][A
2025-01-17T11:32:04.5477230Z 
2025-01-17T11:32:04.5477610Z Packets:   ██████████████████▏                                                             45559/200000 [00:00<00:01, 147432.11it/s][A
2025-01-17T11:32:04.5477620Z 
2025-01-17T11:32:04.5477810Z Packets:   ████████████████████████▎                                                       60814/200000 [00:00<00:00, 149414.05it/s][A
2025-01-17T11:32:04.5477860Z 
2025-01-17T11:32:04.5478060Z Packets:   ██████████████████████████████▎                                                 75765/200000 [00:00<00:00, 147394.39it/s][A
2025-01-17T11:32:04.5478060Z 
2025-01-17T11:32:04.5478260Z Packets:   ████████████████████████████████████▏                                           90513/200000 [00:00<00:00, 144249.03it/s][A
2025-01-17T11:32:04.5478260Z 
2025-01-17T11:32:04.5478460Z Packets:   ██████████████████████████████████████████                                      105042/200000 [00:00<00:00, 144578.79it/s][A
2025-01-17T11:32:04.5478470Z 
2025-01-17T11:32:04.5478670Z Packets:   ███████████████████████████████████████████████▉                                119886/200000 [00:00<00:00, 145785.40it/s][A
2025-01-17T11:32:04.5478680Z 
2025-01-17T11:32:04.5478900Z Packets:   █████████████████████████████████████████████████████▊                          134488/200000 [00:00<00:00, 145857.35it/s][A
2025-01-17T11:32:04.5478910Z 
2025-01-17T11:32:04.5479140Z Packets:   ███████████████████████████████████████████████████████████▋                    149080/200000 [00:01<00:00, 144721.61it/s][A
2025-01-17T11:32:04.5479140Z 
2025-01-17T11:32:04.5479370Z Packets:   █████████████████████████████████████████████████████████████████▍              163558/200000 [00:01<00:00, 144723.97it/s][A
2025-01-17T11:32:04.5479370Z 
2025-01-17T11:32:04.5479600Z Packets:   ███████████████████████████████████████████████████████████████████████▏        178035/200000 [00:01<00:00, 143963.65it/s][A
2025-01-17T11:32:04.5479600Z 
2025-01-17T11:32:04.5479840Z Packets:   ████████████████████████████████████████████████████████████████████████████▉   192435/200000 [00:01<00:00, 143548.45it/s][A
2025-01-17T11:32:04.5480070Z Iterations:                                                                                14/? [04:33<00:00,  7.50s/it]
2025-01-17T11:32:04.5480080Z 
2025-01-17T11:32:04.5480320Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 143548.45it/s][A
2025-01-17T11:32:04.5480340Z 
2025-01-17T11:32:04.5480510Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-01-17T11:32:04.5480520Z 
2025-01-17T11:32:04.5480700Z Packets:   █████▊                                                                          14588/200000 [00:00<00:01, 145875.97it/s][A
2025-01-17T11:32:04.5480700Z 
2025-01-17T11:32:04.5480890Z Packets:   ███████████▋                                                                    29176/200000 [00:00<00:01, 143976.94it/s][A
2025-01-17T11:32:04.5480890Z 
2025-01-17T11:32:04.5481160Z Packets:   █████████████████▍                                                              43576/200000 [00:00<00:01, 140249.39it/s][A
2025-01-17T11:32:04.5481170Z 
2025-01-17T11:32:04.5481360Z Packets:   ███████████████████████                                                         57611/200000 [00:00<00:01, 127860.50it/s][A
2025-01-17T11:32:04.5481440Z 
2025-01-17T11:32:04.5481650Z Packets:   █████████████████████████████                                                   72623/200000 [00:00<00:00, 135315.43it/s][A
2025-01-17T11:32:04.5481650Z 
2025-01-17T11:32:04.5481850Z Packets:   ██████████████████████████████████▉                                             87224/200000 [00:00<00:00, 138773.00it/s][A
2025-01-17T11:32:04.5481850Z 
2025-01-17T11:32:04.5482050Z Packets:   ████████████████████████████████████████▍                                       101214/200000 [00:00<00:00, 136242.03it/s][A
2025-01-17T11:32:04.5482060Z 
2025-01-17T11:32:04.5482280Z Packets:   ██████████████████████████████████████████████▏                                 115374/200000 [00:00<00:00, 137884.21it/s][A
2025-01-17T11:32:04.5482290Z 
2025-01-17T11:32:04.5482510Z Packets:   ████████████████████████████████████████████████████▏                           130383/200000 [00:00<00:00, 141601.12it/s][A
2025-01-17T11:32:04.5482520Z 
2025-01-17T11:32:04.5482740Z Packets:   ██████████████████████████████████████████████████████████                      145117/200000 [00:01<00:00, 143340.38it/s][A
2025-01-17T11:32:04.5482750Z 
2025-01-17T11:32:04.5482970Z Packets:   ███████████████████████████████████████████████████████████████▊                159490/200000 [00:01<00:00, 141860.59it/s][A
2025-01-17T11:32:04.5482970Z 
2025-01-17T11:32:04.5483200Z Packets:   █████████████████████████████████████████████████████████████████████▊          174613/200000 [00:01<00:00, 144661.01it/s][A
2025-01-17T11:32:04.5483200Z 
2025-01-17T11:32:04.5483430Z Packets:   ███████████████████████████████████████████████████████████████████████████▋    189183/200000 [00:01<00:00, 144972.07it/s][A
2025-01-17T11:32:04.5483560Z Iterations:                                                                                15/? [04:35<00:00,  5.98s/it]
2025-01-17T11:32:04.5483560Z 
2025-01-17T11:32:04.5483800Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 144972.07it/s][A
2025-01-17T11:32:04.5483820Z 
2025-01-17T11:32:04.5483990Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-01-17T11:32:04.5483990Z 
2025-01-17T11:32:04.5484170Z Packets:   █████▊                                                                          14515/200000 [00:00<00:01, 125479.87it/s][A
2025-01-17T11:32:04.5484180Z 
2025-01-17T11:32:04.5484360Z Packets:   ███████████▏                                                                    27957/200000 [00:00<00:01, 130413.44it/s][A
2025-01-17T11:32:04.5484420Z 
2025-01-17T11:32:04.5484600Z Packets:   ████████████████▋                                                               41681/200000 [00:00<00:01, 133421.85it/s][A
2025-01-17T11:32:04.5484610Z 
2025-01-17T11:32:04.5484800Z Packets:   ██████████████████████▌                                                         56402/200000 [00:00<00:01, 138751.49it/s][A
2025-01-17T11:32:04.5484840Z 
2025-01-17T11:32:04.5485040Z Packets:   ████████████████████████████▏                                                   70548/200000 [00:00<00:00, 139713.60it/s][A
2025-01-17T11:32:04.5485040Z 
2025-01-17T11:32:04.5485240Z Packets:   █████████████████████████████████▊                                              84539/200000 [00:00<00:00, 139380.62it/s][A
2025-01-17T11:32:04.5485240Z 
2025-01-17T11:32:04.5485450Z Packets:   ███████████████████████████████████████▋                                        99241/200000 [00:00<00:00, 141855.51it/s][A
2025-01-17T11:32:04.5485450Z 
2025-01-17T11:32:04.5485660Z Packets:   █████████████████████████████████████████████▍                                  113438/200000 [00:00<00:00, 140704.41it/s][A
2025-01-17T11:32:04.5485670Z 
2025-01-17T11:32:04.5485870Z Packets:   ███████████████████████████████████████████████████                             127518/200000 [00:00<00:00, 140714.83it/s][A
2025-01-17T11:32:04.5485890Z 
2025-01-17T11:32:04.5486100Z Packets:   ████████████████████████████████████████████████████████▉                       142232/200000 [00:01<00:00, 142683.86it/s][A
2025-01-17T11:32:04.5486110Z 
2025-01-17T11:32:04.5486320Z Packets:   ██████████████████████████████████████████████████████████████▌                 156506/200000 [00:01<00:00, 139961.26it/s][A
2025-01-17T11:32:04.5486330Z 
2025-01-17T11:32:04.5486550Z Packets:   ████████████████████████████████████████████████████████████████████▎           170751/200000 [00:01<00:00, 140702.38it/s][A
2025-01-17T11:32:04.5486550Z 
2025-01-17T11:32:04.5486770Z Packets:   █████████████████████████████████████████████████████████████████████████▉      184833/200000 [00:01<00:00, 139825.28it/s][A
2025-01-17T11:32:04.5486790Z 
2025-01-17T11:32:04.5487010Z Packets:   ███████████████████████████████████████████████████████████████████████████████▌198824/200000 [00:01<00:00, 138786.45it/s][A
2025-01-17T11:32:04.5487140Z Iterations:                                                                                16/? [04:38<00:00,  4.92s/it]
2025-01-17T11:32:04.5487200Z 
2025-01-17T11:32:04.5487430Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 138786.45it/s][A
2025-01-17T11:32:04.5487430Z 
2025-01-17T11:32:04.5487600Z Packets:                                                                                   0/500000 [00:00<?, ?it/s]                 [A
2025-01-17T11:32:04.5487610Z 
2025-01-17T11:32:04.5487780Z Packets:   ██▏                                                                             13885/500000 [00:00<00:09, 49263.40it/s][A
2025-01-17T11:32:04.5487840Z 
2025-01-17T11:32:04.5488020Z Packets:   ███                                                                             19227/500000 [00:00<00:09, 50659.31it/s][A
2025-01-17T11:32:04.5488020Z 
2025-01-17T11:32:04.5488190Z Packets:   ███▉                                                                            24398/500000 [00:00<00:09, 48309.81it/s][A
2025-01-17T11:32:04.5488210Z 
2025-01-17T11:32:04.5488370Z Packets:   ████▋                                                                           29601/500000 [00:00<00:09, 49445.06it/s][A
2025-01-17T11:32:04.5488380Z 
2025-01-17T11:32:04.5488540Z Packets:   █████▌                                                                          34861/500000 [00:00<00:09, 50401.66it/s][A
2025-01-17T11:32:04.5488540Z 
2025-01-17T11:32:04.5488710Z Packets:   ██████▍                                                                         40227/500000 [00:00<00:08, 51384.22it/s][A
2025-01-17T11:32:04.5488720Z 
2025-01-17T11:32:04.5488880Z Packets:   ███████▎                                                                        45402/500000 [00:00<00:09, 49111.16it/s][A
2025-01-17T11:32:04.5488890Z 
2025-01-17T11:32:04.5489060Z Packets:   ████████                                                                        50343/500000 [00:01<00:09, 49037.77it/s][A
2025-01-17T11:32:04.5489070Z 
2025-01-17T11:32:04.5489240Z Packets:   ████████▊                                                                       55291/500000 [00:01<00:09, 49163.39it/s][A
2025-01-17T11:32:04.5489250Z 
2025-01-17T11:32:04.5489410Z Packets:   █████████▋                                                                      60487/500000 [00:01<00:08, 49985.53it/s][A
2025-01-17T11:32:04.5489420Z 
2025-01-17T11:32:04.5489590Z Packets:   ██████████▌                                                                     65632/500000 [00:01<00:08, 50419.45it/s][A
2025-01-17T11:32:04.5489590Z 
2025-01-17T11:32:04.5489760Z Packets:   ███████████▎                                                                    70685/500000 [00:01<00:08, 48090.16it/s][A
2025-01-17T11:32:04.5489770Z 
2025-01-17T11:32:04.5489950Z Packets:   ████████████▏                                                                   75895/500000 [00:01<00:08, 49243.13it/s][A
2025-01-17T11:32:04.5489950Z 
2025-01-17T11:32:04.5490120Z Packets:   ████████████▉                                                                   80844/500000 [00:01<00:08, 49107.86it/s][A
2025-01-17T11:32:04.5490130Z 
2025-01-17T11:32:04.5490310Z Packets:   █████████████▋                                                                  85772/500000 [00:01<00:08, 48712.28it/s][A
2025-01-17T11:32:04.5490310Z 
2025-01-17T11:32:04.5490490Z Packets:   ██████████████▌                                                                 90655/500000 [00:01<00:08, 48610.62it/s][A
2025-01-17T11:32:04.5490490Z 
2025-01-17T11:32:04.5490660Z Packets:   ███████████████▎                                                                95595/500000 [00:01<00:08, 48842.86it/s][A
2025-01-17T11:32:04.5490890Z 
2025-01-17T11:32:04.5491110Z Packets:   ████████████████                                                                100486/500000 [00:02<00:08, 46518.89it/s][A
2025-01-17T11:32:04.5491110Z 
2025-01-17T11:32:04.5491290Z Packets:   ████████████████▉                                                               105620/500000 [00:02<00:08, 47901.78it/s][A
2025-01-17T11:32:04.5491340Z 
2025-01-17T11:32:04.5491520Z Packets:   █████████████████▋                                                              110731/500000 [00:02<00:07, 48834.77it/s][A
2025-01-17T11:32:04.5491530Z 
2025-01-17T11:32:04.5491700Z Packets:   ██████████████████▌                                                             115635/500000 [00:02<00:08, 47890.38it/s][A
2025-01-17T11:32:04.5491710Z 
2025-01-17T11:32:04.5491890Z Packets:   ███████████████████▎                                                            120610/500000 [00:02<00:07, 48430.01it/s][A
2025-01-17T11:32:04.5491950Z 
2025-01-17T11:32:04.5492240Z Packets:   ████████████████████                                                            125709/500000 [00:02<00:07, 49181.52it/s][A
2025-01-17T11:32:04.5492250Z 
2025-01-17T11:32:04.5492440Z Packets:   ████████████████████▉                                                           130851/500000 [00:02<00:07, 49841.63it/s][A
2025-01-17T11:32:04.5492450Z 
2025-01-17T11:32:04.5492640Z Packets:   █████████████████████▋                                                          135844/500000 [00:02<00:07, 46933.32it/s][A
2025-01-17T11:32:04.5492660Z 
2025-01-17T11:32:04.5492870Z Packets:   ██████████████████████▍                                                         140577/500000 [00:02<00:07, 46383.13it/s][A
2025-01-17T11:32:04.5492880Z 
2025-01-17T11:32:04.5493070Z Packets:   ███████████████████████▏                                                        145242/500000 [00:03<00:08, 40523.75it/s][A
2025-01-17T11:32:04.5493070Z 
2025-01-17T11:32:04.5493260Z Packets:   ███████████████████████▉                                                        149928/500000 [00:03<00:08, 42190.06it/s][A
2025-01-17T11:32:04.5493270Z 
2025-01-17T11:32:04.5493460Z Packets:   ████████████████████████▊                                                       154817/500000 [00:03<00:07, 44018.78it/s][A
2025-01-17T11:32:04.5493470Z 
2025-01-17T11:32:04.5493650Z Packets:   █████████████████████████▌                                                      159701/500000 [00:03<00:07, 45372.02it/s][A
2025-01-17T11:32:04.5493660Z 
2025-01-17T11:32:04.5493850Z Packets:   ██████████████████████████▎                                                     164320/500000 [00:03<00:07, 44863.02it/s][A
2025-01-17T11:32:04.5493850Z 
2025-01-17T11:32:04.5494040Z Packets:   ███████████████████████████                                                     169263/500000 [00:03<00:07, 46172.34it/s][A
2025-01-17T11:32:04.5494040Z 
2025-01-17T11:32:04.5494230Z Packets:   ███████████████████████████▊                                                    174124/500000 [00:03<00:06, 46879.44it/s][A
2025-01-17T11:32:04.5494250Z 
2025-01-17T11:32:04.5494430Z Packets:   ████████████████████████████▋                                                   179209/500000 [00:03<00:06, 48033.87it/s][A
2025-01-17T11:32:04.5494440Z 
2025-01-17T11:32:04.5494630Z Packets:   █████████████████████████████▍                                                  184258/500000 [00:03<00:06, 48758.31it/s][A
2025-01-17T11:32:04.5495280Z 
2025-01-17T11:32:04.5495580Z Packets:   ██████████████████████████████▎                                                 189154/500000 [00:03<00:06, 47440.03it/s][A
2025-01-17T11:32:04.5495580Z 
2025-01-17T11:32:04.5495780Z Packets:   ███████████████████████████████                                                 194046/500000 [00:04<00:06, 47868.93it/s][A
2025-01-17T11:32:04.5495790Z 
2025-01-17T11:32:04.5495980Z Packets:   ███████████████████████████████▊                                                198897/500000 [00:04<00:06, 48054.01it/s][A
2025-01-17T11:32:04.5496100Z 
2025-01-17T11:32:04.5496320Z Packets:   ████████████████████████████████▌                                               203714/500000 [00:04<00:06, 46616.17it/s][A
2025-01-17T11:32:04.5496330Z 
2025-01-17T11:32:04.5496540Z Packets:   █████████████████████████████████▎                                              208392/500000 [00:04<00:06, 45812.01it/s][A
2025-01-17T11:32:04.5496560Z 
2025-01-17T11:32:04.5496780Z Packets:   ██████████████████████████████████                                              212986/500000 [00:04<00:06, 44621.26it/s][A
2025-01-17T11:32:04.5496790Z 
2025-01-17T11:32:04.5496990Z Packets:   ██████████████████████████████████▉                                             218023/500000 [00:04<00:06, 46266.35it/s][A
2025-01-17T11:32:04.5496990Z 
2025-01-17T11:32:04.5497210Z Packets:   ███████████████████████████████████▋                                            222951/500000 [00:04<00:05, 47142.67it/s][A
2025-01-17T11:32:04.5497230Z 
2025-01-17T11:32:04.5497420Z Packets:   ████████████████████████████████████▍                                           227679/500000 [00:04<00:05, 46409.06it/s][A
2025-01-17T11:32:04.5497420Z 
2025-01-17T11:32:04.5497620Z Packets:   █████████████████████████████████████▏                                          232531/500000 [00:04<00:05, 47020.36it/s][A
2025-01-17T11:32:04.5497640Z 
2025-01-17T11:32:04.5497830Z Packets:   █████████████████████████████████████▉                                          237243/500000 [00:04<00:05, 46155.15it/s][A
2025-01-17T11:32:04.5497830Z 
2025-01-17T11:32:04.5498030Z Packets:   ██████████████████████████████████████▋                                         241868/500000 [00:05<00:05, 43677.81it/s][A
2025-01-17T11:32:04.5498040Z 
2025-01-17T11:32:04.5498230Z Packets:   ███████████████████████████████████████▍                                        246825/500000 [00:05<00:05, 45344.55it/s][A
2025-01-17T11:32:04.5498230Z 
2025-01-17T11:32:04.5498440Z Packets:   ████████████████████████████████████████▏                                       251390/500000 [00:05<00:05, 44174.69it/s][A
2025-01-17T11:32:04.5498450Z 
2025-01-17T11:32:04.5498680Z Packets:   ████████████████████████████████████████▉                                       255958/500000 [00:05<00:05, 44603.61it/s][A
2025-01-17T11:32:04.5498770Z 
2025-01-17T11:32:04.5498970Z Packets:   █████████████████████████████████████████▋                                      260911/500000 [00:05<00:05, 46025.02it/s][A
2025-01-17T11:32:04.5498980Z 
2025-01-17T11:32:04.5499180Z Packets:   ██████████████████████████████████████████▌                                     265646/500000 [00:05<00:05, 46410.16it/s][A
2025-01-17T11:32:04.5499190Z 
2025-01-17T11:32:04.5499390Z Packets:   ███████████████████████████████████████████▏                                    270301/500000 [00:05<00:05, 45179.11it/s][A
2025-01-17T11:32:04.5499390Z 
2025-01-17T11:32:04.5499600Z Packets:   ████████████████████████████████████████████                                    275349/500000 [00:05<00:04, 46716.47it/s][A
2025-01-17T11:32:04.5499660Z 
2025-01-17T11:32:04.5499860Z Packets:   ████████████████████████████████████████████▊                                   280037/500000 [00:05<00:04, 45700.60it/s][A
2025-01-17T11:32:04.5499870Z 
2025-01-17T11:32:04.5500070Z Packets:   █████████████████████████████████████████████▋                                  285188/500000 [00:06<00:04, 47388.36it/s][A
2025-01-17T11:32:04.5500080Z 
2025-01-17T11:32:04.5500290Z Packets:   ██████████████████████████████████████████████▍                                 290206/500000 [00:06<00:04, 48206.36it/s][A
2025-01-17T11:32:04.5500290Z 
2025-01-17T11:32:04.5500520Z Packets:   ███████████████████████████████████████████████▏                                295040/500000 [00:06<00:04, 46580.28it/s][A
2025-01-17T11:32:04.5500530Z 
2025-01-17T11:32:04.5500740Z Packets:   ████████████████████████████████████████████████                                300303/500000 [00:06<00:04, 48330.29it/s][A
2025-01-17T11:32:04.5500760Z 
2025-01-17T11:32:04.5500960Z Packets:   ████████████████████████████████████████████████▊                               305269/500000 [00:06<00:03, 48718.98it/s][A
2025-01-17T11:32:04.5500960Z 
2025-01-17T11:32:04.5501170Z Packets:   █████████████████████████████████████████████████▌                              310156/500000 [00:06<00:04, 46960.30it/s][A
2025-01-17T11:32:04.5501190Z 
2025-01-17T11:32:04.5501390Z Packets:   ██████████████████████████████████████████████████▍                             315334/500000 [00:06<00:03, 48344.47it/s][A
2025-01-17T11:32:04.5501390Z 
2025-01-17T11:32:04.5501600Z Packets:   ███████████████████████████████████████████████████▏                            320190/500000 [00:06<00:03, 48152.86it/s][A
2025-01-17T11:32:04.5501600Z 
2025-01-17T11:32:04.5501810Z Packets:   ████████████████████████████████████████████████████                            325020/500000 [00:06<00:03, 46583.71it/s][A
2025-01-17T11:32:04.5501890Z 
2025-01-17T11:32:04.5502100Z Packets:   ████████████████████████████████████████████████████▊                           330201/500000 [00:06<00:03, 48088.02it/s][A
2025-01-17T11:32:04.5502110Z 
2025-01-17T11:32:04.5502310Z Packets:   █████████████████████████████████████████████████████▌                          335029/500000 [00:07<00:03, 45945.52it/s][A
2025-01-17T11:32:04.5502380Z 
2025-01-17T11:32:04.5502600Z Packets:   ██████████████████████████████████████████████████████▎                         339653/500000 [00:07<00:03, 44991.86it/s][A
2025-01-17T11:32:04.5502600Z 
2025-01-17T11:32:04.5502820Z Packets:   ███████████████████████████████████████████████████████▏                        344922/500000 [00:07<00:03, 47174.82it/s][A
2025-01-17T11:32:04.5502820Z 
2025-01-17T11:32:04.5503030Z Packets:   ███████████████████████████████████████████████████████▉                        349780/500000 [00:07<00:03, 47578.85it/s][A
2025-01-17T11:32:04.5503040Z 
2025-01-17T11:32:04.5503250Z Packets:   ████████████████████████████████████████████████████████▋                       354558/500000 [00:07<00:03, 45219.69it/s][A
2025-01-17T11:32:04.5503270Z 
2025-01-17T11:32:04.5503480Z Packets:   █████████████████████████████████████████████████████████▌                      359393/500000 [00:07<00:03, 46105.26it/s][A
2025-01-17T11:32:04.5503490Z 
2025-01-17T11:32:04.5503710Z Packets:   ██████████████████████████████████████████████████████████▎                     364416/500000 [00:07<00:02, 47293.56it/s][A
2025-01-17T11:32:04.5503710Z 
2025-01-17T11:32:04.5503920Z Packets:   ███████████████████████████████████████████████████████████                     369171/500000 [00:07<00:02, 46357.08it/s][A
2025-01-17T11:32:04.5503920Z 
2025-01-17T11:32:04.5504140Z Packets:   ███████████████████████████████████████████████████████████▉                    374258/500000 [00:07<00:02, 47664.06it/s][A
2025-01-17T11:32:04.5504140Z 
2025-01-17T11:32:04.5504350Z Packets:   ████████████████████████████████████████████████████████████▋                   379348/500000 [00:08<00:02, 48611.21it/s][A
2025-01-17T11:32:04.5504370Z 
2025-01-17T11:32:04.5504580Z Packets:   █████████████████████████████████████████████████████████████▍                  384225/500000 [00:08<00:02, 45613.32it/s][A
2025-01-17T11:32:04.5504580Z 
2025-01-17T11:32:04.5504830Z Packets:   ██████████████████████████████████████████████████████████████▎                 389179/500000 [00:08<00:02, 46723.49it/s][A
2025-01-17T11:32:04.5504900Z 
2025-01-17T11:32:04.5505140Z Packets:   ███████████████████████████████████████████████████████████████                 394258/500000 [00:08<00:02, 47891.86it/s][A
2025-01-17T11:32:04.5505140Z 
2025-01-17T11:32:04.5505370Z Packets:   ███████████████████████████████████████████████████████████████▊                399079/500000 [00:08<00:02, 47156.38it/s][A
2025-01-17T11:32:04.5505370Z 
2025-01-17T11:32:04.5505590Z Packets:   ████████████████████████████████████████████████████████████████▋               403964/500000 [00:08<00:02, 47647.44it/s][A
2025-01-17T11:32:04.5512220Z 
2025-01-17T11:32:04.5512550Z Packets:   █████████████████████████████████████████████████████████████████▍              408838/500000 [00:08<00:01, 47966.37it/s][A
2025-01-17T11:32:04.5512560Z 
2025-01-17T11:32:04.5512760Z Packets:   ██████████████████████████████████████████████████████████████████▏             413688/500000 [00:08<00:01, 48123.74it/s][A
2025-01-17T11:32:04.5512780Z 
2025-01-17T11:32:04.5512990Z Packets:   ██████████████████████████████████████████████████████████████████▉             418510/500000 [00:08<00:01, 46805.86it/s][A
2025-01-17T11:32:04.5512990Z 
2025-01-17T11:32:04.5513210Z Packets:   ███████████████████████████████████████████████████████████████████▋            423259/500000 [00:08<00:01, 47003.83it/s][A
2025-01-17T11:32:04.5513210Z 
2025-01-17T11:32:04.5513430Z Packets:   ████████████████████████████████████████████████████████████████████▌           428324/500000 [00:09<00:01, 48074.26it/s][A
2025-01-17T11:32:04.5513430Z 
2025-01-17T11:32:04.5513660Z Packets:   █████████████████████████████████████████████████████████████████████▎          433141/500000 [00:09<00:01, 46466.27it/s][A
2025-01-17T11:32:04.5513670Z 
2025-01-17T11:32:04.5513880Z Packets:   ██████████████████████████████████████████████████████████████████████          437863/500000 [00:09<00:01, 46176.34it/s][A
2025-01-17T11:32:04.5513900Z 
2025-01-17T11:32:04.5514110Z Packets:   ██████████████████████████████████████████████████████████████████████▊         442492/500000 [00:09<00:01, 46140.59it/s][A
2025-01-17T11:32:04.5514120Z 
2025-01-17T11:32:04.5514330Z Packets:   ███████████████████████████████████████████████████████████████████████▌        447342/500000 [00:09<00:01, 46830.51it/s][A
2025-01-17T11:32:04.5514340Z 
2025-01-17T11:32:04.5514560Z Packets:   ████████████████████████████████████████████████████████████████████████▎       452033/500000 [00:09<00:01, 45817.43it/s][A
2025-01-17T11:32:04.5514560Z 
2025-01-17T11:32:04.5514780Z Packets:   █████████████████████████████████████████████████████████████████████████       456872/500000 [00:09<00:00, 46567.68it/s][A
2025-01-17T11:32:04.5514840Z 
2025-01-17T11:32:04.5515070Z Packets:   █████████████████████████████████████████████████████████████████████████▊      461537/500000 [00:09<00:00, 44471.48it/s][A
2025-01-17T11:32:04.5515170Z 
2025-01-17T11:32:04.5515400Z Packets:   ██████████████████████████████████████████████████████████████████████████▋     466497/500000 [00:09<00:00, 45939.46it/s][A
2025-01-17T11:32:04.5515410Z 
2025-01-17T11:32:04.5515630Z Packets:   ███████████████████████████████████████████████████████████████████████████▍    471466/500000 [00:10<00:00, 47027.49it/s][A
2025-01-17T11:32:04.5515630Z 
2025-01-17T11:32:04.5515850Z Packets:   ████████████████████████████████████████████████████████████████████████████▏   476189/500000 [00:10<00:00, 44955.07it/s][A
2025-01-17T11:32:04.5515860Z 
2025-01-17T11:32:04.5516080Z Packets:   ████████████████████████████████████████████████████████████████████████████▉   481056/500000 [00:10<00:00, 46015.23it/s][A
2025-01-17T11:32:04.5516100Z 
2025-01-17T11:32:04.5516320Z Packets:   █████████████████████████████████████████████████████████████████████████████▋  485684/500000 [00:10<00:00, 45541.09it/s][A
2025-01-17T11:32:04.5516320Z 
2025-01-17T11:32:04.5516540Z Packets:   ██████████████████████████████████████████████████████████████████████████████▍ 490529/500000 [00:10<00:00, 45238.94it/s][A
2025-01-17T11:32:04.5516560Z 
2025-01-17T11:32:04.5516800Z Packets:   ███████████████████████████████████████████████████████████████████████████████▏495218/500000 [00:10<00:00, 45712.17it/s][A
2025-01-17T11:32:04.5516810Z 
2025-01-17T11:32:04.5517030Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉499904/500000 [00:10<00:00, 46045.75it/s][A
2025-01-17T11:32:04.5517150Z Iterations:                                                                                17/? [04:52<00:00,  7.71s/it]
2025-01-17T11:32:04.5517200Z 
2025-01-17T11:32:04.5517430Z Packets:   ████████████████████████████████████████████████████████████████████████████████500000/500000 [00:12<00:00, 46045.75it/s][A
2025-01-17T11:32:04.5517560Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:32:04.5517670Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-17T11:32:04.5518000Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-17T11:32:04.5518300Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-17T11:32:04.5518650Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-17T11:32:04.5519040Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-17T11:32:04.5519220Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-17T11:32:04.5519310Z INFO     tardis.simulation.base:base.py:444 
2025-01-17T11:32:04.5519370Z 	Starting iteration 1 of 5
2025-01-17T11:32:04.5519450Z INFO     tardis.simulation.base:base.py:657 
2025-01-17T11:32:04.5519510Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-01-17T11:32:04.5519580Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-01-17T11:32:04.5519640Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:32:04.5519640Z 
2025-01-17T11:32:04.5519710Z INFO     tardis.simulation.base:base.py:649 
2025-01-17T11:32:04.5519770Z 	Plasma stratification:
2025-01-17T11:32:04.5519840Z INFO     tardis.simulation.base:base.py:650 
2025-01-17T11:32:04.5519910Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-17T11:32:04.5520100Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-01-17T11:32:04.5520170Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-01-17T11:32:04.5520240Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-01-17T11:32:04.5520300Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-01-17T11:32:04.5520300Z 
2025-01-17T11:32:04.5520370Z INFO     tardis.simulation.base:base.py:652 
2025-01-17T11:32:04.5520430Z 	Current t_inner = 9974.969 K
2025-01-17T11:32:04.5520510Z 	Expected t_inner for next iteration = 10736.790 K
2025-01-17T11:32:04.5520520Z 
2025-01-17T11:32:04.5520590Z INFO     tardis.simulation.base:base.py:444 
2025-01-17T11:32:04.5520650Z 	Starting iteration 2 of 5
2025-01-17T11:32:04.5520720Z INFO     tardis.simulation.base:base.py:657 
2025-01-17T11:32:04.5520790Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-01-17T11:32:04.5520860Z 	Luminosity absorbed  = 3.623e+42 erg / s
2025-01-17T11:32:04.5520930Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:32:04.5520930Z 
2025-01-17T11:32:04.5521000Z INFO     tardis.simulation.base:base.py:649 
2025-01-17T11:32:04.5521060Z 	Plasma stratification:
2025-01-17T11:32:04.5521130Z INFO     tardis.simulation.base:base.py:650 
2025-01-17T11:32:04.5521210Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-17T11:32:04.5521270Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-01-17T11:32:04.5521330Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-01-17T11:32:04.5521390Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-01-17T11:32:04.5521450Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-01-17T11:32:04.5521450Z 
2025-01-17T11:32:04.5521520Z INFO     tardis.simulation.base:base.py:652 
2025-01-17T11:32:04.5521580Z 	Current t_inner = 10736.790 K
2025-01-17T11:32:04.5521660Z 	Expected t_inner for next iteration = 10718.574 K
2025-01-17T11:32:04.5521660Z 
2025-01-17T11:32:04.5521740Z INFO     tardis.simulation.base:base.py:444 
2025-01-17T11:32:04.5521790Z 	Starting iteration 3 of 5
2025-01-17T11:32:04.5521860Z INFO     tardis.simulation.base:base.py:657 
2025-01-17T11:32:04.5521920Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-01-17T11:32:04.5522050Z 	Luminosity absorbed  = 3.512e+42 erg / s
2025-01-17T11:32:04.5522120Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:32:04.5522120Z 
2025-01-17T11:32:04.5522300Z INFO     tardis.simulation.base:base.py:260 Iteration converged 1/4 consecutive times.
2025-01-17T11:32:04.5522380Z INFO     tardis.simulation.base:base.py:649 
2025-01-17T11:32:04.5522490Z 	Plasma stratification:
2025-01-17T11:32:04.5522570Z INFO     tardis.simulation.base:base.py:650 
2025-01-17T11:32:04.5522650Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-17T11:32:04.5522710Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-01-17T11:32:04.5522760Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-01-17T11:32:04.5522820Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-01-17T11:32:04.5522880Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0922
2025-01-17T11:32:04.5522880Z 
2025-01-17T11:32:04.5522960Z INFO     tardis.simulation.base:base.py:652 
2025-01-17T11:32:04.5523010Z 	Current t_inner = 10718.574 K
2025-01-17T11:32:04.5523100Z 	Expected t_inner for next iteration = 10696.150 K
2025-01-17T11:32:04.5523100Z 
2025-01-17T11:32:04.5523170Z INFO     tardis.simulation.base:base.py:444 
2025-01-17T11:32:04.5523230Z 	Starting iteration 4 of 5
2025-01-17T11:32:04.5523300Z INFO     tardis.simulation.base:base.py:657 
2025-01-17T11:32:04.5523360Z 	Luminosity emitted   = 1.083e+43 erg / s
2025-01-17T11:32:04.5523430Z 	Luminosity absorbed  = 3.426e+42 erg / s
2025-01-17T11:32:04.5523490Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:32:04.5523490Z 
2025-01-17T11:32:04.5523660Z INFO     tardis.simulation.base:base.py:260 Iteration converged 2/4 consecutive times.
2025-01-17T11:32:04.5523730Z INFO     tardis.simulation.base:base.py:649 
2025-01-17T11:32:04.5523790Z 	Plasma stratification:
2025-01-17T11:32:04.5523860Z INFO     tardis.simulation.base:base.py:650 
2025-01-17T11:32:04.5523930Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-17T11:32:04.5523990Z 	0         1.07e+04 K  1.09e+04 K  0.491   0.489
2025-01-17T11:32:04.5524040Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-01-17T11:32:04.5524110Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-01-17T11:32:04.5524160Z 	15        1.04e+04 K  1.05e+04 K 0.0922  0.0902
2025-01-17T11:32:04.5524170Z 
2025-01-17T11:32:04.5524240Z INFO     tardis.simulation.base:base.py:652 
2025-01-17T11:32:04.5524300Z 	Current t_inner = 10696.150 K
2025-01-17T11:32:04.5524380Z 	Expected t_inner for next iteration = 10681.168 K
2025-01-17T11:32:04.5524390Z 
2025-01-17T11:32:04.5524460Z INFO     tardis.simulation.base:base.py:542 
2025-01-17T11:32:04.5524520Z 	Simulation finished in 4 iterations 
2025-01-17T11:32:04.5524570Z 	Simulation took 9.69 s
2025-01-17T11:32:04.5524570Z 
2025-01-17T11:32:04.5524640Z INFO     tardis.simulation.base:base.py:444 
2025-01-17T11:32:04.5524700Z 	Starting iteration 5 of 5
2025-01-17T11:32:04.5524770Z INFO     tardis.simulation.base:base.py:657 
2025-01-17T11:32:04.5524830Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-01-17T11:32:04.5524890Z 	Luminosity absorbed  = 3.438e+42 erg / s
2025-01-17T11:32:04.5524960Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:32:04.5525100Z ______________________ TestTransportSimple.test_spectrum _______________________
2025-01-17T11:32:04.5525100Z 
2025-01-17T11:32:04.5525260Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x1338213d0>
2025-01-17T11:32:04.5525410Z simulation = <tardis.simulation.base.Simulation object at 0x1786fbd40>
2025-01-17T11:32:04.5525410Z 
2025-01-17T11:32:04.5525480Z     def test_spectrum(self, simulation):
2025-01-17T11:32:04.5525610Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-01-17T11:32:04.5525680Z         expected = self.get_expected_data(key)
2025-01-17T11:32:04.5525730Z     
2025-01-17T11:32:04.5525810Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-17T11:32:04.5525850Z     
2025-01-17T11:32:04.5525920Z >       assert_quantity_allclose(
2025-01-17T11:32:04.5547720Z             simulation.spectrum_solver.spectrum_real_packets.luminosity,
2025-01-17T11:32:04.5547790Z             luminosity,
2025-01-17T11:32:04.5547830Z         )
2025-01-17T11:32:04.5547840Z 
2025-01-17T11:32:04.5547910Z tardis/tests/test_tardis_full.py:81: 
2025-01-17T11:32:04.5548000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5548490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:32:04.5548560Z     np.testing.assert_allclose(
2025-01-17T11:32:04.5548650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5548650Z 
2025-01-17T11:32:04.5549020Z args = (<function assert_allclose.<locals>.compare at 0x1528abba0>, array([1.47119190e+39, 1.69564189e+39, 1.35368464e+39, .....), array([1.41445923e+39, 1.75365002e+39, 1.41304405e+39, ...,
2025-01-17T11:32:04.5549110Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5549320Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5549320Z 
2025-01-17T11:32:04.5549370Z     @wraps(func)
2025-01-17T11:32:04.5549420Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5549480Z         with self._recreate_cm():
2025-01-17T11:32:04.5549540Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5549600Z E           AssertionError: 
2025-01-17T11:32:04.5549690Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5549730Z E           
2025-01-17T11:32:04.5549820Z E           Mismatched elements: 4832 / 10000 (48.3%)
2025-01-17T11:32:04.5549940Z E           Max absolute difference among violations: 1.38672909e+39
2025-01-17T11:32:04.5550050Z E           Max relative difference among violations: 5.25284451
2025-01-17T11:32:04.5550190Z E            ACTUAL: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-01-17T11:32:04.5550260Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5550400Z E            DESIRED: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-01-17T11:32:04.5550460Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5550470Z 
2025-01-17T11:32:04.5550630Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5550770Z __________________ TestTransportSimple.test_virtual_spectrum ___________________
2025-01-17T11:32:04.5550780Z 
2025-01-17T11:32:04.5550930Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x133821670>
2025-01-17T11:32:04.5551090Z simulation = <tardis.simulation.base.Simulation object at 0x1786fbd40>
2025-01-17T11:32:04.5551090Z 
2025-01-17T11:32:04.5551170Z     def test_virtual_spectrum(self, simulation):
2025-01-17T11:32:04.5551310Z         key = "simulation/spectrum_solver/spectrum_virtual_packets/luminosity"
2025-01-17T11:32:04.5551390Z         expected = self.get_expected_data(key)
2025-01-17T11:32:04.5551430Z     
2025-01-17T11:32:04.5551510Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-17T11:32:04.5551560Z     
2025-01-17T11:32:04.5551620Z >       assert_quantity_allclose(
2025-01-17T11:32:04.5551760Z             simulation.spectrum_solver.spectrum_virtual_packets.luminosity,
2025-01-17T11:32:04.5551810Z             luminosity,
2025-01-17T11:32:04.5551860Z         )
2025-01-17T11:32:04.5551860Z 
2025-01-17T11:32:04.5551930Z tardis/tests/test_tardis_full.py:92: 
2025-01-17T11:32:04.5552020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5552280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:32:04.5552340Z     np.testing.assert_allclose(
2025-01-17T11:32:04.5552430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5552430Z 
2025-01-17T11:32:04.5552780Z args = (<function assert_allclose.<locals>.compare at 0x1635b32e0>, array([1.44033177e+39, 1.35611403e+39, 1.39755698e+39, .....), array([1.45484259e+39, 1.36306291e+39, 1.38939833e+39, ...,
2025-01-17T11:32:04.5552970Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5553180Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5554160Z 
2025-01-17T11:32:04.5554230Z     @wraps(func)
2025-01-17T11:32:04.5554290Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5554350Z         with self._recreate_cm():
2025-01-17T11:32:04.5554420Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5554480Z E           AssertionError: 
2025-01-17T11:32:04.5554560Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5554610Z E           
2025-01-17T11:32:04.5554680Z E           Mismatched elements: 5933 / 10000 (59.3%)
2025-01-17T11:32:04.5554800Z E           Max absolute difference among violations: 5.26760031e+38
2025-01-17T11:32:04.5554910Z E           Max relative difference among violations: 35562.41947434
2025-01-17T11:32:04.5555050Z E            ACTUAL: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-01-17T11:32:04.5555110Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5555260Z E            DESIRED: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-01-17T11:32:04.5555320Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5555330Z 
2025-01-17T11:32:04.5555500Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5555740Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-downbranch] ____
2025-01-17T11:32:04.5555750Z 
2025-01-17T11:32:04.5556020Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x133822090>
2025-01-17T11:32:04.5556180Z simulation = <tardis.simulation.base.Simulation object at 0x317822960>
2025-01-17T11:32:04.5556350Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-downbranch]>>
2025-01-17T11:32:04.5556350Z 
2025-01-17T11:32:04.5556450Z     def test_j_blue_estimators(self, simulation, request):
2025-01-17T11:32:04.5556530Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5556590Z         j_blue_estimator = (
2025-01-17T11:32:04.5556770Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-17T11:32:04.5556820Z         )
2025-01-17T11:32:04.5556940Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-17T11:32:04.5557030Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-17T11:32:04.5557030Z 
2025-01-17T11:32:04.5557130Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-17T11:32:04.5557220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5557220Z 
2025-01-17T11:32:04.5557440Z args = (<function assert_allclose.<locals>.compare at 0x308494ae0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5557490Z        [0., 0., 0.,.....,
2025-01-17T11:32:04.5557550Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5557600Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5557660Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-17T11:32:04.5557870Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5557880Z 
2025-01-17T11:32:04.5557930Z     @wraps(func)
2025-01-17T11:32:04.5557990Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5558050Z         with self._recreate_cm():
2025-01-17T11:32:04.5558110Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5558180Z E           AssertionError: 
2025-01-17T11:32:04.5558260Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5558300Z E           
2025-01-17T11:32:04.5558390Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-01-17T11:32:04.5558600Z E           Max absolute difference among violations: 7.03072887e-19
2025-01-17T11:32:04.5558720Z E           Max relative difference among violations: 7.72237896
2025-01-17T11:32:04.5558790Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5558870Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5558990Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:32:04.5559090Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5559150Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5559220Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:32:04.5559220Z 
2025-01-17T11:32:04.5559400Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5559590Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-downbranch] ________
2025-01-17T11:32:04.5559590Z 
2025-01-17T11:32:04.5559860Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x133822720>
2025-01-17T11:32:04.5560030Z simulation = <tardis.simulation.base.Simulation object at 0x317822960>
2025-01-17T11:32:04.5560300Z request = <FixtureRequest for <Function test_spectrum[-1-downbranch]>>
2025-01-17T11:32:04.5560300Z 
2025-01-17T11:32:04.5560400Z     def test_spectrum(self, simulation, request):
2025-01-17T11:32:04.5560490Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5560650Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-17T11:32:04.5560780Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-17T11:32:04.5560860Z         expected = u.Quantity(expected, "erg /s")
2025-01-17T11:32:04.5560970Z >       assert_quantity_allclose(luminosity, expected)
2025-01-17T11:32:04.5560980Z 
2025-01-17T11:32:04.5561080Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-17T11:32:04.5561170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5561470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:32:04.5561540Z     np.testing.assert_allclose(
2025-01-17T11:32:04.5561630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5561640Z 
2025-01-17T11:32:04.5562020Z args = (<function assert_allclose.<locals>.compare at 0x158d04f40>, array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39, .....), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-01-17T11:32:04.5562100Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5562320Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5562320Z 
2025-01-17T11:32:04.5562370Z     @wraps(func)
2025-01-17T11:32:04.5562430Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5562490Z         with self._recreate_cm():
2025-01-17T11:32:04.5562560Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5562620Z E           AssertionError: 
2025-01-17T11:32:04.5562700Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5562760Z E           
2025-01-17T11:32:04.5562850Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-01-17T11:32:04.5562970Z E           Max absolute difference among violations: 2.09719426e+39
2025-01-17T11:32:04.5563070Z E           Max relative difference among violations: 4.0036592
2025-01-17T11:32:04.5563210Z E            ACTUAL: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-01-17T11:32:04.5563270Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5563400Z E            DESIRED: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-01-17T11:32:04.5563470Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5563470Z 
2025-01-17T11:32:04.5568750Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5569200Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-downbranch] ___
2025-01-17T11:32:04.5569210Z 
2025-01-17T11:32:04.5569470Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x133822f30>
2025-01-17T11:32:04.5569740Z simulation = <tardis.simulation.base.Simulation object at 0x317822960>
2025-01-17T11:32:04.5569910Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-downbranch]>>
2025-01-17T11:32:04.5569910Z 
2025-01-17T11:32:04.5570020Z     def test_spectrum_integrated(self, simulation, request):
2025-01-17T11:32:04.5570110Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5570270Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-17T11:32:04.5570390Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-17T11:32:04.5570460Z         expected = u.Quantity(expected, "erg /s")
2025-01-17T11:32:04.5570560Z >       assert_quantity_allclose(luminosity, expected)
2025-01-17T11:32:04.5570570Z 
2025-01-17T11:32:04.5570670Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-17T11:32:04.5570760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5571050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:32:04.5571120Z     np.testing.assert_allclose(
2025-01-17T11:32:04.5571210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5571210Z 
2025-01-17T11:32:04.5571620Z args = (<function assert_allclose.<locals>.compare at 0x1745a1ee0>, array([1.55114238e+39, 1.55522613e+39, 1.54887955e+39, .....), array([1.54178275e+39, 1.54564497e+39, 1.54031038e+39, ...,
2025-01-17T11:32:04.5571700Z        2.27470694e+31, 2.29290738e+31, 2.25720643e+31]))
2025-01-17T11:32:04.5571920Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5571930Z 
2025-01-17T11:32:04.5571980Z     @wraps(func)
2025-01-17T11:32:04.5572040Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5572100Z         with self._recreate_cm():
2025-01-17T11:32:04.5572160Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5572220Z E           AssertionError: 
2025-01-17T11:32:04.5572310Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5572360Z E           
2025-01-17T11:32:04.5572430Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-17T11:32:04.5572530Z E           Max absolute difference among violations: 5.00661745e+37
2025-01-17T11:32:04.5572640Z E           Max relative difference among violations: 17.51202125
2025-01-17T11:32:04.5572780Z E            ACTUAL: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-01-17T11:32:04.5572850Z E                  2.279436e+31, 2.243943e+31])
2025-01-17T11:32:04.5572990Z E            DESIRED: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-01-17T11:32:04.5573050Z E                  2.292907e+31, 2.257206e+31])
2025-01-17T11:32:04.5573060Z 
2025-01-17T11:32:04.5573220Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5573400Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-macroatom] ____
2025-01-17T11:32:04.5573410Z 
2025-01-17T11:32:04.5573660Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x133822990>
2025-01-17T11:32:04.5573820Z simulation = <tardis.simulation.base.Simulation object at 0x178692210>
2025-01-17T11:32:04.5573970Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-macroatom]>>
2025-01-17T11:32:04.5573980Z 
2025-01-17T11:32:04.5574080Z     def test_j_blue_estimators(self, simulation, request):
2025-01-17T11:32:04.5574170Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5574220Z         j_blue_estimator = (
2025-01-17T11:32:04.5576660Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-17T11:32:04.5576710Z         )
2025-01-17T11:32:04.5576830Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-17T11:32:04.5576920Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-17T11:32:04.5576990Z 
2025-01-17T11:32:04.5577090Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-17T11:32:04.5577190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5577190Z 
2025-01-17T11:32:04.5577400Z args = (<function assert_allclose.<locals>.compare at 0x1637e4f40>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5577450Z        [0., 0., 0.,.....,
2025-01-17T11:32:04.5577510Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5577560Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5577610Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-17T11:32:04.5577820Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5577830Z 
2025-01-17T11:32:04.5577880Z     @wraps(func)
2025-01-17T11:32:04.5577930Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5577990Z         with self._recreate_cm():
2025-01-17T11:32:04.5578060Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5578120Z E           AssertionError: 
2025-01-17T11:32:04.5578210Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5578260Z E           
2025-01-17T11:32:04.5578350Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-01-17T11:32:04.5578460Z E           Max absolute difference among violations: 4.67863561e-19
2025-01-17T11:32:04.5578560Z E           Max relative difference among violations: 3.25828651
2025-01-17T11:32:04.5578640Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5578700Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5578770Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:32:04.5578860Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5578920Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5578990Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:32:04.5578990Z 
2025-01-17T11:32:04.5579160Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5579340Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-macroatom] _________
2025-01-17T11:32:04.5579340Z 
2025-01-17T11:32:04.5579610Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x133823110>
2025-01-17T11:32:04.5579760Z simulation = <tardis.simulation.base.Simulation object at 0x178692210>
2025-01-17T11:32:04.5579900Z request = <FixtureRequest for <Function test_spectrum[-1-macroatom]>>
2025-01-17T11:32:04.5579900Z 
2025-01-17T11:32:04.5579980Z     def test_spectrum(self, simulation, request):
2025-01-17T11:32:04.5580070Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5580220Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-17T11:32:04.5580350Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-17T11:32:04.5580440Z         expected = u.Quantity(expected, "erg /s")
2025-01-17T11:32:04.5580530Z >       assert_quantity_allclose(luminosity, expected)
2025-01-17T11:32:04.5580540Z 
2025-01-17T11:32:04.5580640Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-17T11:32:04.5580720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5581000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:32:04.5581070Z     np.testing.assert_allclose(
2025-01-17T11:32:04.5581160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5581220Z 
2025-01-17T11:32:04.5581600Z args = (<function assert_allclose.<locals>.compare at 0x17ef018a0>, array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39, .....), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-01-17T11:32:04.5581680Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5582080Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5582080Z 
2025-01-17T11:32:04.5582130Z     @wraps(func)
2025-01-17T11:32:04.5582190Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5582240Z         with self._recreate_cm():
2025-01-17T11:32:04.5582300Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5582360Z E           AssertionError: 
2025-01-17T11:32:04.5582440Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5582490Z E           
2025-01-17T11:32:04.5582560Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-01-17T11:32:04.5582680Z E           Max absolute difference among violations: 8.5486318e+38
2025-01-17T11:32:04.5582790Z E           Max relative difference among violations: 1.86186015
2025-01-17T11:32:04.5582930Z E            ACTUAL: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-01-17T11:32:04.5582990Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5583130Z E            DESIRED: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-01-17T11:32:04.5583190Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5583200Z 
2025-01-17T11:32:04.5583430Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5583640Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-macroatom] ___
2025-01-17T11:32:04.5583640Z 
2025-01-17T11:32:04.5583910Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x133823710>
2025-01-17T11:32:04.5584060Z simulation = <tardis.simulation.base.Simulation object at 0x178692210>
2025-01-17T11:32:04.5584230Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-macroatom]>>
2025-01-17T11:32:04.5584230Z 
2025-01-17T11:32:04.5584330Z     def test_spectrum_integrated(self, simulation, request):
2025-01-17T11:32:04.5584410Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5584570Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-17T11:32:04.5584700Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-17T11:32:04.5584770Z         expected = u.Quantity(expected, "erg /s")
2025-01-17T11:32:04.5584860Z >       assert_quantity_allclose(luminosity, expected)
2025-01-17T11:32:04.5584860Z 
2025-01-17T11:32:04.5584960Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-17T11:32:04.5585040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5585300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:32:04.5585370Z     np.testing.assert_allclose(
2025-01-17T11:32:04.5585450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5585460Z 
2025-01-17T11:32:04.5585820Z args = (<function assert_allclose.<locals>.compare at 0x165421120>, array([1.54556181e+39, 1.55660766e+39, 1.54591210e+39, .....), array([1.54634964e+39, 1.55739996e+39, 1.54657082e+39, ...,
2025-01-17T11:32:04.5585890Z        1.40040337e+31, 1.37514142e+31, 1.33792800e+31]))
2025-01-17T11:32:04.5586100Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5586100Z 
2025-01-17T11:32:04.5586140Z     @wraps(func)
2025-01-17T11:32:04.5586200Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5586250Z         with self._recreate_cm():
2025-01-17T11:32:04.5586310Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5586500Z E           AssertionError: 
2025-01-17T11:32:04.5586580Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5586620Z E           
2025-01-17T11:32:04.5586690Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-17T11:32:04.5586790Z E           Max absolute difference among violations: 2.90101642e+37
2025-01-17T11:32:04.5586940Z E           Max relative difference among violations: 0.98973757
2025-01-17T11:32:04.5587080Z E            ACTUAL: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-01-17T11:32:04.5587130Z E                  1.330497e+31, 1.294462e+31])
2025-01-17T11:32:04.5587270Z E            DESIRED: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-01-17T11:32:04.5587320Z E                  1.375141e+31, 1.337928e+31])
2025-01-17T11:32:04.5587330Z 
2025-01-17T11:32:04.5587480Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5587650Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-macroatom] ____
2025-01-17T11:32:04.5587650Z 
2025-01-17T11:32:04.5587900Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x133822c90>
2025-01-17T11:32:04.5588040Z simulation = <tardis.simulation.base.Simulation object at 0x150acb080>
2025-01-17T11:32:04.5588190Z request = <FixtureRequest for <Function test_j_blue_estimators[30-macroatom]>>
2025-01-17T11:32:04.5588190Z 
2025-01-17T11:32:04.5588290Z     def test_j_blue_estimators(self, simulation, request):
2025-01-17T11:32:04.5588360Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5588410Z         j_blue_estimator = (
2025-01-17T11:32:04.5588580Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-17T11:32:04.5588620Z         )
2025-01-17T11:32:04.5588730Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-17T11:32:04.5588810Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-17T11:32:04.5588820Z 
2025-01-17T11:32:04.5588910Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-17T11:32:04.5588990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5589000Z 
2025-01-17T11:32:04.5589190Z args = (<function assert_allclose.<locals>.compare at 0x17f034680>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5589230Z        [0., 0., 0.,.....,
2025-01-17T11:32:04.5589290Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5589340Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5589390Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-17T11:32:04.5589580Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5589590Z 
2025-01-17T11:32:04.5589640Z     @wraps(func)
2025-01-17T11:32:04.5589690Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5589750Z         with self._recreate_cm():
2025-01-17T11:32:04.5589800Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5589870Z E           AssertionError: 
2025-01-17T11:32:04.5589940Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5589980Z E           
2025-01-17T11:32:04.5590050Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-01-17T11:32:04.5590160Z E           Max absolute difference among violations: 4.67863561e-19
2025-01-17T11:32:04.5590260Z E           Max relative difference among violations: 3.25828651
2025-01-17T11:32:04.5590330Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5590390Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5590440Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:32:04.5590520Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5590580Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5590640Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:32:04.5590690Z 
2025-01-17T11:32:04.5590840Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5591010Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-macroatom] _________
2025-01-17T11:32:04.5591010Z 
2025-01-17T11:32:04.5591240Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x133823320>
2025-01-17T11:32:04.5591430Z simulation = <tardis.simulation.base.Simulation object at 0x150acb080>
2025-01-17T11:32:04.5591560Z request = <FixtureRequest for <Function test_spectrum[30-macroatom]>>
2025-01-17T11:32:04.5591560Z 
2025-01-17T11:32:04.5591640Z     def test_spectrum(self, simulation, request):
2025-01-17T11:32:04.5591720Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5591860Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-17T11:32:04.5591980Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-17T11:32:04.5592060Z         expected = u.Quantity(expected, "erg /s")
2025-01-17T11:32:04.5592140Z >       assert_quantity_allclose(luminosity, expected)
2025-01-17T11:32:04.5592140Z 
2025-01-17T11:32:04.5592240Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-17T11:32:04.5592320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5592570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:32:04.5592630Z     np.testing.assert_allclose(
2025-01-17T11:32:04.5592710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5592720Z 
2025-01-17T11:32:04.5593060Z args = (<function assert_allclose.<locals>.compare at 0x17f0354e0>, array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39, .....), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-01-17T11:32:04.5593140Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5593340Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5593340Z 
2025-01-17T11:32:04.5593380Z     @wraps(func)
2025-01-17T11:32:04.5593440Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5593490Z         with self._recreate_cm():
2025-01-17T11:32:04.5593550Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5593600Z E           AssertionError: 
2025-01-17T11:32:04.5593680Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5593720Z E           
2025-01-17T11:32:04.5593800Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-01-17T11:32:04.5593890Z E           Max absolute difference among violations: 8.5486318e+38
2025-01-17T11:32:04.5593990Z E           Max relative difference among violations: 1.86186015
2025-01-17T11:32:04.5594110Z E            ACTUAL: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-01-17T11:32:04.5594180Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5594300Z E            DESIRED: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-01-17T11:32:04.5594370Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5594370Z 
2025-01-17T11:32:04.5594520Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5594690Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-macroatom] ___
2025-01-17T11:32:04.5594690Z 
2025-01-17T11:32:04.5594930Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x133823950>
2025-01-17T11:32:04.5595080Z simulation = <tardis.simulation.base.Simulation object at 0x150acb080>
2025-01-17T11:32:04.5595230Z request = <FixtureRequest for <Function test_spectrum_integrated[30-macroatom]>>
2025-01-17T11:32:04.5595230Z 
2025-01-17T11:32:04.5595330Z     def test_spectrum_integrated(self, simulation, request):
2025-01-17T11:32:04.5595400Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5595850Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-17T11:32:04.5595970Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-17T11:32:04.5596050Z         expected = u.Quantity(expected, "erg /s")
2025-01-17T11:32:04.5596210Z >       assert_quantity_allclose(luminosity, expected)
2025-01-17T11:32:04.5596210Z 
2025-01-17T11:32:04.5596320Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-17T11:32:04.5596400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5596650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:32:04.5596710Z     np.testing.assert_allclose(
2025-01-17T11:32:04.5596790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5596800Z 
2025-01-17T11:32:04.5597140Z args = (<function assert_allclose.<locals>.compare at 0x17f037ec0>, array([1.54421084e+39, 1.55253343e+39, 1.54295780e+39, .....), array([1.54506418e+39, 1.55336544e+39, 1.54364274e+39, ...,
2025-01-17T11:32:04.5597220Z        1.22296100e+31, 1.19300497e+31, 1.16485419e+31]))
2025-01-17T11:32:04.5597410Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5597420Z 
2025-01-17T11:32:04.5597470Z     @wraps(func)
2025-01-17T11:32:04.5597520Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5597570Z         with self._recreate_cm():
2025-01-17T11:32:04.5597630Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5597680Z E           AssertionError: 
2025-01-17T11:32:04.5597750Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5597800Z E           
2025-01-17T11:32:04.5597880Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-17T11:32:04.5597980Z E           Max absolute difference among violations: 2.99183385e+37
2025-01-17T11:32:04.5598070Z E           Max relative difference among violations: 0.98992197
2025-01-17T11:32:04.5598200Z E            ACTUAL: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-01-17T11:32:04.5598260Z E                  1.260980e+31, 1.222587e+31])
2025-01-17T11:32:04.5598390Z E            DESIRED: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-01-17T11:32:04.5598450Z E                  1.193005e+31, 1.164854e+31])
2025-01-17T11:32:04.5598450Z 
2025-01-17T11:32:04.5598600Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5598720Z ----------------------------- Captured stderr call -----------------------------
2025-01-17T11:32:04.5598720Z 
2025-01-17T11:32:04.5598720Z 
2025-01-17T11:32:04.5599180Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:14<00:00, 147852.06it/s][A
2025-01-17T11:32:04.5599360Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-downbranch] ____
2025-01-17T11:32:04.5599370Z 
2025-01-17T11:32:04.5599610Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x133822b70>
2025-01-17T11:32:04.5599750Z simulation = <tardis.simulation.base.Simulation object at 0x1369e5c40>
2025-01-17T11:32:04.5599910Z request = <FixtureRequest for <Function test_j_blue_estimators[30-downbranch]>>
2025-01-17T11:32:04.5599910Z 
2025-01-17T11:32:04.5600000Z     def test_j_blue_estimators(self, simulation, request):
2025-01-17T11:32:04.5600080Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5600130Z         j_blue_estimator = (
2025-01-17T11:32:04.5600430Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-17T11:32:04.5600470Z         )
2025-01-17T11:32:04.5600580Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-17T11:32:04.5600660Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-17T11:32:04.5600770Z 
2025-01-17T11:32:04.5600870Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-17T11:32:04.5600950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5600950Z 
2025-01-17T11:32:04.5601150Z args = (<function assert_allclose.<locals>.compare at 0x1785ff060>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5601380Z        [0., 0., 0.,.....,
2025-01-17T11:32:04.5601430Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5601480Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5601530Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-17T11:32:04.5601730Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5601730Z 
2025-01-17T11:32:04.5601770Z     @wraps(func)
2025-01-17T11:32:04.5601820Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5601880Z         with self._recreate_cm():
2025-01-17T11:32:04.5601940Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5601990Z E           AssertionError: 
2025-01-17T11:32:04.5602070Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5602110Z E           
2025-01-17T11:32:04.5602190Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-01-17T11:32:04.5602290Z E           Max absolute difference among violations: 7.03072887e-19
2025-01-17T11:32:04.5602390Z E           Max relative difference among violations: 7.72237896
2025-01-17T11:32:04.5602460Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5602520Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5602580Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:32:04.5602650Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5602710Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.5602770Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:32:04.5602780Z 
2025-01-17T11:32:04.5602930Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5603090Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-downbranch] ________
2025-01-17T11:32:04.5603100Z 
2025-01-17T11:32:04.5603330Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x133823260>
2025-01-17T11:32:04.5603480Z simulation = <tardis.simulation.base.Simulation object at 0x1369e5c40>
2025-01-17T11:32:04.5603610Z request = <FixtureRequest for <Function test_spectrum[30-downbranch]>>
2025-01-17T11:32:04.5603610Z 
2025-01-17T11:32:04.5603690Z     def test_spectrum(self, simulation, request):
2025-01-17T11:32:04.5603760Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5603910Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-17T11:32:04.5604030Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-17T11:32:04.5604100Z         expected = u.Quantity(expected, "erg /s")
2025-01-17T11:32:04.5604190Z >       assert_quantity_allclose(luminosity, expected)
2025-01-17T11:32:04.5604190Z 
2025-01-17T11:32:04.5604290Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-17T11:32:04.5604370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5604620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:32:04.5604680Z     np.testing.assert_allclose(
2025-01-17T11:32:04.5604770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5604770Z 
2025-01-17T11:32:04.5605120Z args = (<function assert_allclose.<locals>.compare at 0x1785fc900>, array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39, .....), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-01-17T11:32:04.5605190Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5605460Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5605460Z 
2025-01-17T11:32:04.5605510Z     @wraps(func)
2025-01-17T11:32:04.5605560Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5605620Z         with self._recreate_cm():
2025-01-17T11:32:04.5605720Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5605780Z E           AssertionError: 
2025-01-17T11:32:04.5605850Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5605890Z E           
2025-01-17T11:32:04.5605960Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-01-17T11:32:04.5606060Z E           Max absolute difference among violations: 2.09719426e+39
2025-01-17T11:32:04.5606160Z E           Max relative difference among violations: 4.0036592
2025-01-17T11:32:04.5606290Z E            ACTUAL: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-01-17T11:32:04.5606350Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5606480Z E            DESIRED: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-01-17T11:32:04.5606550Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5606550Z 
2025-01-17T11:32:04.5606700Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5606880Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-downbranch] ___
2025-01-17T11:32:04.5606880Z 
2025-01-17T11:32:04.5607120Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x133823860>
2025-01-17T11:32:04.5607260Z simulation = <tardis.simulation.base.Simulation object at 0x1369e5c40>
2025-01-17T11:32:04.5607410Z request = <FixtureRequest for <Function test_spectrum_integrated[30-downbranch]>>
2025-01-17T11:32:04.5607420Z 
2025-01-17T11:32:04.5607520Z     def test_spectrum_integrated(self, simulation, request):
2025-01-17T11:32:04.5607590Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5607750Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-17T11:32:04.5607870Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-17T11:32:04.5607940Z         expected = u.Quantity(expected, "erg /s")
2025-01-17T11:32:04.5608030Z >       assert_quantity_allclose(luminosity, expected)
2025-01-17T11:32:04.5608030Z 
2025-01-17T11:32:04.5608130Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-17T11:32:04.5608210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5608460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-17T11:32:04.5608510Z     np.testing.assert_allclose(
2025-01-17T11:32:04.5608600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5608600Z 
2025-01-17T11:32:04.5608940Z args = (<function assert_allclose.<locals>.compare at 0x30ea834c0>, array([1.54917411e+39, 1.55043938e+39, 1.54507053e+39, .....), array([1.54059874e+39, 1.54119479e+39, 1.53707604e+39, ...,
2025-01-17T11:32:04.5609030Z        2.12049684e+31, 2.12430514e+31, 2.10108056e+31]))
2025-01-17T11:32:04.5609220Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5609230Z 
2025-01-17T11:32:04.5609280Z     @wraps(func)
2025-01-17T11:32:04.5609330Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5609390Z         with self._recreate_cm():
2025-01-17T11:32:04.5609440Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5609490Z E           AssertionError: 
2025-01-17T11:32:04.5609570Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5609610Z E           
2025-01-17T11:32:04.5609680Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-17T11:32:04.5609780Z E           Max absolute difference among violations: 5.0153284e+37
2025-01-17T11:32:04.5609920Z E           Max relative difference among violations: 4.90769503
2025-01-17T11:32:04.5610050Z E            ACTUAL: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-01-17T11:32:04.5610110Z E                  2.088676e+31, 2.060278e+31])
2025-01-17T11:32:04.5610240Z E            DESIRED: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-01-17T11:32:04.5610350Z E                  2.124305e+31, 2.101081e+31])
2025-01-17T11:32:04.5610360Z 
2025-01-17T11:32:04.5610510Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5610620Z __________________________ test_montecarlo_main_loop ___________________________
2025-01-17T11:32:04.5610630Z 
2025-01-17T11:32:04.5611150Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-17T11:32:04.5611350Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x3102cf9e0>
2025-01-17T11:32:04.5611630Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-17T11:32:04.5611630Z 
2025-01-17T11:32:04.5611690Z     def test_montecarlo_main_loop(
2025-01-17T11:32:04.5611750Z         montecarlo_main_loop_config,
2025-01-17T11:32:04.5611800Z         regression_data,
2025-01-17T11:32:04.5611850Z         atomic_dataset,
2025-01-17T11:32:04.5611890Z     ):
2025-01-17T11:32:04.5611960Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-17T11:32:04.5612080Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-01-17T11:32:04.5612140Z             montecarlo_main_loop_config,
2025-01-17T11:32:04.5612200Z             atom_data=atomic_dataset,
2025-01-17T11:32:04.5612250Z             virtual_packet_logging=False,
2025-01-17T11:32:04.5612310Z             legacy_mode_enabled=True,
2025-01-17T11:32:04.5612350Z         )
2025-01-17T11:32:04.5612440Z         montecarlo_main_loop_simulation.run_convergence()
2025-01-17T11:32:04.5612520Z         montecarlo_main_loop_simulation.run_final()
2025-01-17T11:32:04.5612560Z     
2025-01-17T11:32:04.5612660Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-01-17T11:32:04.5612730Z             montecarlo_main_loop_simulation
2025-01-17T11:32:04.5612770Z         )
2025-01-17T11:32:04.5612810Z     
2025-01-17T11:32:04.5612870Z         # Load compare data from refdata
2025-01-17T11:32:04.5612910Z     
2025-01-17T11:32:04.5612970Z         expected_nu = expected_hdf_store[
2025-01-17T11:32:04.5613060Z             "/simulation/transport/transport_state/output_nu"
2025-01-17T11:32:04.5613100Z         ]
2025-01-17T11:32:04.5613170Z         expected_energy = expected_hdf_store[
2025-01-17T11:32:04.5613270Z             "/simulation/transport/transport_state/output_energy"
2025-01-17T11:32:04.5613310Z         ]
2025-01-17T11:32:04.5613400Z         expected_nu_bar_estimator = expected_hdf_store[
2025-01-17T11:32:04.5613500Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-01-17T11:32:04.5613550Z         ]
2025-01-17T11:32:04.5613620Z         expected_j_estimator = expected_hdf_store[
2025-01-17T11:32:04.5613720Z             "/simulation/transport/transport_state/j_estimator"
2025-01-17T11:32:04.5613760Z         ]
2025-01-17T11:32:04.5613820Z         expected_hdf_store.close()
2025-01-17T11:32:04.5613980Z         transport_state = montecarlo_main_loop_simulation.transport.transport_state
2025-01-17T11:32:04.5614100Z         actual_energy = transport_state.packet_collection.output_energies
2025-01-17T11:32:04.5614210Z         actual_nu = transport_state.packet_collection.output_nus
2025-01-17T11:32:04.5614270Z         actual_nu_bar_estimator = (
2025-01-17T11:32:04.5614370Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-01-17T11:32:04.5614410Z         )
2025-01-17T11:32:04.5614640Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-01-17T11:32:04.5614680Z     
2025-01-17T11:32:04.5614730Z         # Compare
2025-01-17T11:32:04.5614780Z >       npt.assert_allclose(
2025-01-17T11:32:04.5614900Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-13
2025-01-17T11:32:04.5614980Z         )
2025-01-17T11:32:04.5614980Z 
2025-01-17T11:32:04.5615120Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:57: 
2025-01-17T11:32:04.5615200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5615210Z 
2025-01-17T11:32:04.5615530Z args = (<function assert_allclose.<locals>.compare at 0x17878d8a0>, array([9.40870445e+28, 8.06711783e+28, 7.20241369e+28, 6.....88346865e+28, 3.76096031e+28, 3.64350318e+28,
2025-01-17T11:32:04.5615630Z        3.53452939e+28, 3.45323083e+28, 3.34513540e+28, 3.26811629e+28]))
2025-01-17T11:32:04.5615830Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-13, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5615840Z 
2025-01-17T11:32:04.5615880Z     @wraps(func)
2025-01-17T11:32:04.5615940Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5615990Z         with self._recreate_cm():
2025-01-17T11:32:04.5616050Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5616100Z E           AssertionError: 
2025-01-17T11:32:04.5616180Z E           Not equal to tolerance rtol=1e-13, atol=0
2025-01-17T11:32:04.5616220Z E           
2025-01-17T11:32:04.5616290Z E           Mismatched elements: 20 / 20 (100%)
2025-01-17T11:32:04.5616390Z E           Max absolute difference among violations: 2.25821059e+25
2025-01-17T11:32:04.5616480Z E           Max relative difference among violations: 0.00054426
2025-01-17T11:32:04.5616600Z E            ACTUAL: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-01-17T11:32:04.5616690Z E                  6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-01-17T11:32:04.5616790Z E                  4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-01-17T11:32:04.5616910Z E            DESIRED: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-01-17T11:32:04.5616990Z E                  6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-01-17T11:32:04.5617090Z E                  4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-01-17T11:32:04.5617090Z 
2025-01-17T11:32:04.5617240Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5617360Z ----------------------------- Captured stdout call -----------------------------
2025-01-17T11:32:04.5617610Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-17T11:32:04.5617940Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-17T11:32:04.5618080Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5618230Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-17T11:32:04.5618360Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5618410Z 	
2025-01-17T11:32:04.5618470Z 	Simulation finished in 0 iterations 
2025-01-17T11:32:04.5618520Z 	Simulation took 0.00 s
2025-01-17T11:32:04.5618590Z  ([1mbase.py[0m:542)
2025-01-17T11:32:04.5618710Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5618750Z 	
2025-01-17T11:32:04.5618860Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-17T11:32:04.5618980Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5619020Z 	
2025-01-17T11:32:04.5619090Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-17T11:32:04.5619140Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-17T11:32:04.5619200Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:32:04.5619270Z  ([1mbase.py[0m:657)
2025-01-17T11:32:04.5619390Z ----------------------------- Captured stderr call -----------------------------
2025-01-17T11:32:04.5619470Z 
2025-01-17T11:32:04.5619470Z 
2025-01-17T11:32:04.5619660Z Packets:                                                                                   15027/? [00:07<00:00, 2102.80it/s][A
2025-01-17T11:32:04.5619660Z 
2025-01-17T11:32:04.5619830Z Packets:                                                                                   29951/? [00:07<00:00, 4986.53it/s][A
2025-01-17T11:32:04.5620150Z 
2025-01-17T11:32:04.5620340Z Packets:                                                                                   44367/? [00:07<00:00, 8777.02it/s][A
2025-01-17T11:32:04.5620340Z 
2025-01-17T11:32:04.5620510Z Packets:                                                                                   59132/? [00:07<00:00, 13977.95it/s][A
2025-01-17T11:32:04.5620510Z 
2025-01-17T11:32:04.5620670Z Packets:                                                                                   74281/? [00:07<00:00, 20961.43it/s][A
2025-01-17T11:32:04.5620670Z 
2025-01-17T11:32:04.5620830Z Packets:                                                                                   89516/? [00:07<00:00, 29848.79it/s][A
2025-01-17T11:32:04.5620830Z 
2025-01-17T11:32:04.5620990Z Packets:                                                                                   103728/? [00:07<00:00, 39741.54it/s][A
2025-01-17T11:32:04.5621120Z Iterations:                                                                                40/? [06:33<00:00,  5.50s/it]
2025-01-17T11:32:04.5621120Z 
2025-01-17T11:32:04.5621280Z Packets:                                                                                   104009/? [00:07<00:00, 39741.54it/s][A
2025-01-17T11:32:04.5621400Z ------------------------------ Captured log call -------------------------------
2025-01-17T11:32:04.5621780Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-17T11:32:04.5621950Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-17T11:32:04.5622030Z INFO     tardis.simulation.base:base.py:542 
2025-01-17T11:32:04.5622090Z 	Simulation finished in 0 iterations 
2025-01-17T11:32:04.5622140Z 	Simulation took 0.00 s
2025-01-17T11:32:04.5622150Z 
2025-01-17T11:32:04.5622220Z INFO     tardis.simulation.base:base.py:444 
2025-01-17T11:32:04.5622270Z 	Starting iteration 1 of 1
2025-01-17T11:32:04.5622350Z INFO     tardis.simulation.base:base.py:657 
2025-01-17T11:32:04.5622410Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-17T11:32:04.5622460Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-17T11:32:04.5622520Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:32:04.5622650Z ____________________ test_montecarlo_main_loop_vpacket_log _____________________
2025-01-17T11:32:04.5622650Z 
2025-01-17T11:32:04.5623160Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-17T11:32:04.5623370Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x30d5f8800>
2025-01-17T11:32:04.5623630Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-17T11:32:04.5623640Z 
2025-01-17T11:32:04.5623720Z     def test_montecarlo_main_loop_vpacket_log(
2025-01-17T11:32:04.5623780Z         montecarlo_main_loop_config,
2025-01-17T11:32:04.5623830Z         regression_data,
2025-01-17T11:32:04.5623870Z         atomic_dataset,
2025-01-17T11:32:04.5623910Z     ):
2025-01-17T11:32:04.5623980Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-17T11:32:04.5624110Z         montecarlo_main_loop_config.montecarlo.no_of_virtual_packets = 5
2025-01-17T11:32:04.5624150Z     
2025-01-17T11:32:04.5624320Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-01-17T11:32:04.5624380Z             montecarlo_main_loop_config,
2025-01-17T11:32:04.5624440Z             atom_data=atomic_dataset,
2025-01-17T11:32:04.5624500Z             virtual_packet_logging=True,
2025-01-17T11:32:04.5624560Z             legacy_mode_enabled=True,
2025-01-17T11:32:04.5624650Z         )
2025-01-17T11:32:04.5624750Z         montecarlo_main_loop_simulation.run_convergence()
2025-01-17T11:32:04.5624820Z         montecarlo_main_loop_simulation.run_final()
2025-01-17T11:32:04.5624860Z     
2025-01-17T11:32:04.5624960Z         transport = montecarlo_main_loop_simulation.transport
2025-01-17T11:32:04.5625000Z     
2025-01-17T11:32:04.5625150Z         assert transport.montecarlo_configuration.ENABLE_VPACKET_TRACKING is True
2025-01-17T11:32:04.5625190Z     
2025-01-17T11:32:04.5625290Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-01-17T11:32:04.5625360Z             montecarlo_main_loop_simulation
2025-01-17T11:32:04.5625400Z         )
2025-01-17T11:32:04.5625440Z     
2025-01-17T11:32:04.5625500Z         expected_nu = expected_hdf_store[
2025-01-17T11:32:04.5625590Z             "/simulation/transport/transport_state/output_nu"
2025-01-17T11:32:04.5625630Z         ]
2025-01-17T11:32:04.5625700Z         expected_energy = expected_hdf_store[
2025-01-17T11:32:04.5625800Z             "/simulation/transport/transport_state/output_energy"
2025-01-17T11:32:04.5625840Z         ]
2025-01-17T11:32:04.5625930Z         expected_nu_bar_estimator = expected_hdf_store[
2025-01-17T11:32:04.5626030Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-01-17T11:32:04.5626070Z         ]
2025-01-17T11:32:04.5626140Z         expected_j_estimator = expected_hdf_store[
2025-01-17T11:32:04.5626240Z             "/simulation/transport/transport_state/j_estimator"
2025-01-17T11:32:04.5626280Z         ]
2025-01-17T11:32:04.5626360Z         expected_vpacket_log_nus = expected_hdf_store[
2025-01-17T11:32:04.5626470Z             "/simulation/transport/transport_state/virt_packet_nus"
2025-01-17T11:32:04.5626510Z         ]
2025-01-17T11:32:04.5626610Z         expected_vpacket_log_energies = expected_hdf_store[
2025-01-17T11:32:04.5626720Z             "/simulation/transport/transport_state/virt_packet_energies"
2025-01-17T11:32:04.5626770Z         ]
2025-01-17T11:32:04.5626810Z     
2025-01-17T11:32:04.5626890Z         transport_state = transport.transport_state
2025-01-17T11:32:04.5626930Z     
2025-01-17T11:32:04.5627050Z         actual_energy = transport_state.packet_collection.output_energies
2025-01-17T11:32:04.5627150Z         actual_nu = transport_state.packet_collection.output_nus
2025-01-17T11:32:04.5627270Z         actual_nu_bar_estimator = transport_state.nu_bar_estimator
2025-01-17T11:32:04.5627350Z         actual_j_estimator = transport_state.j_estimator
2025-01-17T11:32:04.5627460Z         actual_vpacket_log_nus = transport_state.vpacket_tracker.nus
2025-01-17T11:32:04.5627590Z         actual_vpacket_log_energies = transport_state.vpacket_tracker.energies
2025-01-17T11:32:04.5627640Z     
2025-01-17T11:32:04.5627690Z         expected_hdf_store.close()
2025-01-17T11:32:04.5627730Z         # Compare
2025-01-17T11:32:04.5631590Z >       npt.assert_allclose(
2025-01-17T11:32:04.5631690Z             actual_nu_bar_estimator,
2025-01-17T11:32:04.5631760Z             expected_nu_bar_estimator,
2025-01-17T11:32:04.5631810Z             rtol=1e-12,
2025-01-17T11:32:04.5631850Z             atol=1e-15,
2025-01-17T11:32:04.5631890Z         )
2025-01-17T11:32:04.5631900Z 
2025-01-17T11:32:04.5632040Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:120: 
2025-01-17T11:32:04.5632130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5632130Z 
2025-01-17T11:32:04.5632460Z args = (<function assert_allclose.<locals>.compare at 0x17efeca40>, array([9.39734166e+28, 8.06437183e+28, 7.18947883e+28, 6.....86533431e+28, 3.76643623e+28, 3.65210990e+28,
2025-01-17T11:32:04.5632780Z        3.55628656e+28, 3.45781813e+28, 3.35045159e+28, 3.25557336e+28]))
2025-01-17T11:32:04.5632990Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-12, atol=1e-15', 'strict': False, ...}
2025-01-17T11:32:04.5632990Z 
2025-01-17T11:32:04.5633040Z     @wraps(func)
2025-01-17T11:32:04.5633160Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5633220Z         with self._recreate_cm():
2025-01-17T11:32:04.5633280Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5633330Z E           AssertionError: 
2025-01-17T11:32:04.5633410Z E           Not equal to tolerance rtol=1e-12, atol=1e-15
2025-01-17T11:32:04.5633450Z E           
2025-01-17T11:32:04.5633530Z E           Mismatched elements: 20 / 20 (100%)
2025-01-17T11:32:04.5633630Z E           Max absolute difference among violations: 1.93283629e+25
2025-01-17T11:32:04.5633720Z E           Max relative difference among violations: 0.00029148
2025-01-17T11:32:04.5633840Z E            ACTUAL: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-01-17T11:32:04.5633930Z E                  6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-01-17T11:32:04.5634020Z E                  4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-01-17T11:32:04.5634150Z E            DESIRED: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-01-17T11:32:04.5634230Z E                  6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-01-17T11:32:04.5634330Z E                  4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-01-17T11:32:04.5634330Z 
2025-01-17T11:32:04.5634480Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5634600Z ----------------------------- Captured stdout call -----------------------------
2025-01-17T11:32:04.5634860Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-17T11:32:04.5635190Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-17T11:32:04.5635320Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5635480Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-17T11:32:04.5635600Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5635640Z 	
2025-01-17T11:32:04.5635700Z 	Simulation finished in 0 iterations 
2025-01-17T11:32:04.5635760Z 	Simulation took 0.00 s
2025-01-17T11:32:04.5635830Z  ([1mbase.py[0m:542)
2025-01-17T11:32:04.5635940Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5635980Z 	
2025-01-17T11:32:04.5636090Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-17T11:32:04.5636210Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5636250Z 	
2025-01-17T11:32:04.5636310Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-01-17T11:32:04.5636360Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-01-17T11:32:04.5636430Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:32:04.5636500Z  ([1mbase.py[0m:657)
2025-01-17T11:32:04.5636620Z ----------------------------- Captured stderr call -----------------------------
2025-01-17T11:32:04.5636630Z 
2025-01-17T11:32:04.5636630Z 
2025-01-17T11:32:04.5636800Z Packets:                                                                                   117903/? [00:09<00:00, 15513.67it/s][A
2025-01-17T11:32:04.5636800Z 
2025-01-17T11:32:04.5636970Z Packets:                                                                                   127775/? [00:10<00:00, 18541.78it/s][A
2025-01-17T11:32:04.5636980Z 
2025-01-17T11:32:04.5637130Z Packets:                                                                                   136141/? [00:10<00:00, 21305.13it/s][A
2025-01-17T11:32:04.5637140Z 
2025-01-17T11:32:04.5637290Z Packets:                                                                                   143302/? [00:10<00:00, 24315.06it/s][A
2025-01-17T11:32:04.5637300Z 
2025-01-17T11:32:04.5637810Z Packets:                                                                                   149823/? [00:10<00:00, 26974.08it/s][A
2025-01-17T11:32:04.5637820Z 
2025-01-17T11:32:04.5637970Z Packets:                                                                                   155714/? [00:10<00:00, 30083.98it/s][A
2025-01-17T11:32:04.5638040Z 
2025-01-17T11:32:04.5638210Z Packets:                                                                                   161368/? [00:10<00:00, 33110.13it/s][A
2025-01-17T11:32:04.5638210Z 
2025-01-17T11:32:04.5638380Z Packets:                                                                                   166818/? [00:10<00:00, 36379.23it/s][A
2025-01-17T11:32:04.5638380Z 
2025-01-17T11:32:04.5638550Z Packets:                                                                                   172216/? [00:11<00:00, 38006.47it/s][A
2025-01-17T11:32:04.5638550Z 
2025-01-17T11:32:04.5638710Z Packets:                                                                                   177375/? [00:11<00:00, 40773.40it/s][A
2025-01-17T11:32:04.5638720Z 
2025-01-17T11:32:04.5638880Z Packets:                                                                                   182643/? [00:11<00:00, 43456.52it/s][A
2025-01-17T11:32:04.5638880Z 
2025-01-17T11:32:04.5639040Z Packets:                                                                                   187800/? [00:11<00:00, 45323.72it/s][A
2025-01-17T11:32:04.5639050Z 
2025-01-17T11:32:04.5639210Z Packets:                                                                                   192942/? [00:11<00:00, 44794.01it/s][A
2025-01-17T11:32:04.5639220Z 
2025-01-17T11:32:04.5639380Z Packets:                                                                                   198000/? [00:11<00:00, 46297.80it/s][A
2025-01-17T11:32:04.5639380Z 
2025-01-17T11:32:04.5639540Z Packets:                                                                                   202951/? [00:11<00:00, 46950.14it/s][A
2025-01-17T11:32:04.5639660Z Iterations:                                                                                41/? [06:37<00:00,  5.08s/it]
2025-01-17T11:32:04.5639660Z 
2025-01-17T11:32:04.5639810Z Packets:                                                                                   204009/? [00:11<00:00, 46950.14it/s][A
2025-01-17T11:32:04.5639940Z ------------------------------ Captured log call -------------------------------
2025-01-17T11:32:04.5640480Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-17T11:32:04.5640660Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-17T11:32:04.5640740Z INFO     tardis.simulation.base:base.py:542 
2025-01-17T11:32:04.5640800Z 	Simulation finished in 0 iterations 
2025-01-17T11:32:04.5640850Z 	Simulation took 0.00 s
2025-01-17T11:32:04.5640850Z 
2025-01-17T11:32:04.5640930Z INFO     tardis.simulation.base:base.py:444 
2025-01-17T11:32:04.5640980Z 	Starting iteration 1 of 1
2025-01-17T11:32:04.5641050Z INFO     tardis.simulation.base:base.py:657 
2025-01-17T11:32:04.5641110Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-01-17T11:32:04.5641170Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-01-17T11:32:04.5641240Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:32:04.5641360Z __________________________ test_boundary_interactions __________________________
2025-01-17T11:32:04.5641360Z 
2025-01-17T11:32:04.5641960Z rpacket_tracker = ListType[instance.jitclass.RPacketTracker#122ec23c0<seed:int64,index:int64,status:array(int64, 1d, A),r:array(float64,...xing.RPacketTracker object at 0x15d6e9c00>, <numba.experimental.jitclass.boxing.RPacketTracker object at 0x17f03de40>])
2025-01-17T11:32:04.5642160Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x158c986e0>
2025-01-17T11:32:04.5642160Z 
2025-01-17T11:32:04.5642290Z     def test_boundary_interactions(rpacket_tracker, regression_data):
2025-01-17T11:32:04.5642440Z         no_of_packets = len(rpacket_tracker)
2025-01-17T11:32:04.5642480Z     
2025-01-17T11:32:04.5642540Z         # Hard coding the number of columns
2025-01-17T11:32:04.5642660Z         # Based on the largest size of boundary_interaction array (60)
2025-01-17T11:32:04.5642910Z         obtained_boundary_interaction = np.full(
2025-01-17T11:32:04.5642960Z             (no_of_packets, 64),
2025-01-17T11:32:04.5643000Z             [-1],
2025-01-17T11:32:04.5643110Z             dtype=rpacket_tracker[0].boundary_interaction.dtype,
2025-01-17T11:32:04.5643150Z         )
2025-01-17T11:32:04.5643190Z     
2025-01-17T11:32:04.5643280Z         for i, tracker in enumerate(rpacket_tracker):
2025-01-17T11:32:04.5643340Z             obtained_boundary_interaction[
2025-01-17T11:32:04.5643420Z                 i, : tracker.boundary_interaction.size
2025-01-17T11:32:04.5643490Z             ] = tracker.boundary_interaction
2025-01-17T11:32:04.5643530Z     
2025-01-17T11:32:04.5643660Z         expected_boundary_interaction = regression_data.sync_ndarray(
2025-01-17T11:32:04.5643720Z             obtained_boundary_interaction
2025-01-17T11:32:04.5643770Z         )
2025-01-17T11:32:04.5643820Z >       npt.assert_array_equal(
2025-01-17T11:32:04.5643940Z             obtained_boundary_interaction, expected_boundary_interaction
2025-01-17T11:32:04.5643990Z         )
2025-01-17T11:32:04.5643990Z 
2025-01-17T11:32:04.5644130Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:154: 
2025-01-17T11:32:04.5644220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5644430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/numpy/_utils/__init__.py:85: in wrapper
2025-01-17T11:32:04.5644490Z     return fun(*args, **kwargs)
2025-01-17T11:32:04.5644580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5644580Z 
2025-01-17T11:32:04.5644790Z args = (<built-in function eq>, array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-01-17T11:32:04.5644870Z         (-1, -1, -1), (-...-1, -1, -1), (-1, -1, -1)]],
2025-01-17T11:32:04.5645010Z       dtype=[('event_id', '<i8'), ('current_shell_id', '<i8'), ('next_shell_id', '<i8')]))
2025-01-17T11:32:04.5645160Z kwds = {'err_msg': '', 'header': 'Arrays are not equal', 'strict': False, 'verbose': True}
2025-01-17T11:32:04.5645160Z 
2025-01-17T11:32:04.5645210Z     @wraps(func)
2025-01-17T11:32:04.5645270Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5645320Z         with self._recreate_cm():
2025-01-17T11:32:04.5645390Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5645440Z E           AssertionError: 
2025-01-17T11:32:04.5645500Z E           Arrays are not equal
2025-01-17T11:32:04.5645550Z E           
2025-01-17T11:32:04.5645620Z E           (shapes (4000, 64), (4000, 62) mismatch)
2025-01-17T11:32:04.5645750Z E            ACTUAL: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-01-17T11:32:04.5645820Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-01-17T11:32:04.5645900Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-01-17T11:32:04.5646020Z E            DESIRED: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-01-17T11:32:04.5646090Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-01-17T11:32:04.5646170Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-01-17T11:32:04.5646170Z 
2025-01-17T11:32:04.5646330Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5646460Z ______________________ test_montecarlo_main_loop_weighted ______________________
2025-01-17T11:32:04.5646460Z 
2025-01-17T11:32:04.5647010Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-17T11:32:04.5647290Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x1786caf00>
2025-01-17T11:32:04.5647570Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-17T11:32:04.5647920Z simple_weighted_packet_source = <tardis.transport.montecarlo.weighted_packet_source.BlackBodyWeightedSource object at 0x1786c8350>
2025-01-17T11:32:04.5647920Z 
2025-01-17T11:32:04.5648000Z     def test_montecarlo_main_loop_weighted(
2025-01-17T11:32:04.5648060Z         montecarlo_main_loop_config,
2025-01-17T11:32:04.5648110Z         regression_data,
2025-01-17T11:32:04.5648150Z         atomic_dataset,
2025-01-17T11:32:04.5648220Z         simple_weighted_packet_source,
2025-01-17T11:32:04.5648260Z     ):
2025-01-17T11:32:04.5648340Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-17T11:32:04.5648480Z         montecarlo_main_loop_simulation_weighted = Simulation.from_config(
2025-01-17T11:32:04.5648550Z             montecarlo_main_loop_config,
2025-01-17T11:32:04.5648610Z             atom_data=atomic_dataset,
2025-01-17T11:32:04.5648670Z             virtual_packet_logging=False,
2025-01-17T11:32:04.5648730Z             legacy_mode_enabled=True,
2025-01-17T11:32:04.5648780Z         )
2025-01-17T11:32:04.5648900Z         montecarlo_main_loop_simulation_weighted.packet_source = (
2025-01-17T11:32:04.5648960Z             simple_weighted_packet_source
2025-01-17T11:32:04.5649010Z         )
2025-01-17T11:32:04.5649120Z         montecarlo_main_loop_simulation_weighted.run_convergence()
2025-01-17T11:32:04.5649220Z         montecarlo_main_loop_simulation_weighted.run_final()
2025-01-17T11:32:04.5649260Z     
2025-01-17T11:32:04.5649340Z         # Get the montecarlo simple regression data
2025-01-17T11:32:04.5649400Z         regression_data_dir = (
2025-01-17T11:32:04.5649540Z             regression_data.absolute_regression_data_dir.absolute().parents[0]
2025-01-17T11:32:04.5649650Z             / "test_montecarlo_main_loop/test_montecarlo_main_loop.h5"
2025-01-17T11:32:04.5649700Z         )
2025-01-17T11:32:04.5649820Z         expected_hdf_store = pd.HDFStore(regression_data_dir, mode="r")
2025-01-17T11:32:04.5649860Z     
2025-01-17T11:32:04.5649920Z         # Load compare data from refdata
2025-01-17T11:32:04.5649970Z     
2025-01-17T11:32:04.5650030Z         expected_nu = expected_hdf_store[
2025-01-17T11:32:04.5650130Z             "/simulation/transport/transport_state/output_nu"
2025-01-17T11:32:04.5650170Z         ]
2025-01-17T11:32:04.5650240Z         expected_energy = expected_hdf_store[
2025-01-17T11:32:04.5650340Z             "/simulation/transport/transport_state/output_energy"
2025-01-17T11:32:04.5650380Z         ]
2025-01-17T11:32:04.5650470Z         expected_nu_bar_estimator = expected_hdf_store[
2025-01-17T11:32:04.5650580Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-01-17T11:32:04.5650630Z         ]
2025-01-17T11:32:04.5650710Z         expected_j_estimator = expected_hdf_store[
2025-01-17T11:32:04.5650800Z             "/simulation/transport/transport_state/j_estimator"
2025-01-17T11:32:04.5650850Z         ]
2025-01-17T11:32:04.5650910Z         expected_hdf_store.close()
2025-01-17T11:32:04.5650970Z         transport_state = (
2025-01-17T11:32:04.5651110Z             montecarlo_main_loop_simulation_weighted.transport.transport_state
2025-01-17T11:32:04.5651150Z         )
2025-01-17T11:32:04.5651280Z         actual_energy = transport_state.packet_collection.output_energies
2025-01-17T11:32:04.5651390Z         actual_nu = transport_state.packet_collection.output_nus
2025-01-17T11:32:04.5651460Z         actual_nu_bar_estimator = (
2025-01-17T11:32:04.5651570Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-01-17T11:32:04.5651610Z         )
2025-01-17T11:32:04.5651750Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-01-17T11:32:04.5651860Z     
2025-01-17T11:32:04.5651910Z         # Compare
2025-01-17T11:32:04.5651970Z         npt.assert_allclose(
2025-01-17T11:32:04.5652090Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-2
2025-01-17T11:32:04.5652130Z         )
2025-01-17T11:32:04.5652280Z         npt.assert_allclose(actual_j_estimator, expected_j_estimator, rtol=1e-2)
2025-01-17T11:32:04.5652460Z >       npt.assert_allclose(actual_energy, expected_energy, rtol=1e-2)
2025-01-17T11:32:04.5652460Z 
2025-01-17T11:32:04.5652640Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py:65: 
2025-01-17T11:32:04.5652720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5652730Z 
2025-01-17T11:32:04.5653090Z args = (<function assert_allclose.<locals>.compare at 0x1745a0f40>, array([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-05,...ay([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-05, ...,
2025-01-17T11:32:04.5653180Z         1.03375439e-05, -9.75713585e-06,  1.01976360e-05]))
2025-01-17T11:32:04.5653380Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.01, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5653390Z 
2025-01-17T11:32:04.5653440Z     @wraps(func)
2025-01-17T11:32:04.5653490Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5653550Z         with self._recreate_cm():
2025-01-17T11:32:04.5653610Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5653660Z E           AssertionError: 
2025-01-17T11:32:04.5653740Z E           Not equal to tolerance rtol=0.01, atol=0
2025-01-17T11:32:04.5653780Z E           
2025-01-17T11:32:04.5653860Z E           Mismatched elements: 33 / 100000 (0.033%)
2025-01-17T11:32:04.5653960Z E           Max absolute difference among violations: 2.00640487e-05
2025-01-17T11:32:04.5654060Z E           Max relative difference among violations: 2.06329455
2025-01-17T11:32:04.5654200Z E            ACTUAL: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-17T11:32:04.5654270Z E                  -9.757136e-06,  1.019764e-05])
2025-01-17T11:32:04.5654410Z E            DESIRED: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-17T11:32:04.5654470Z E                  -9.757136e-06,  1.019764e-05])
2025-01-17T11:32:04.5654480Z 
2025-01-17T11:32:04.5654640Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5654760Z ----------------------------- Captured stdout call -----------------------------
2025-01-17T11:32:04.5655020Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-17T11:32:04.5655350Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-17T11:32:04.5655490Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5655650Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-17T11:32:04.5655780Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5655820Z 	
2025-01-17T11:32:04.5655890Z 	Simulation finished in 0 iterations 
2025-01-17T11:32:04.5655940Z 	Simulation took 0.00 s
2025-01-17T11:32:04.5656010Z  ([1mbase.py[0m:542)
2025-01-17T11:32:04.5656130Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5656170Z 	
2025-01-17T11:32:04.5656280Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-17T11:32:04.5656400Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5656450Z 	
2025-01-17T11:32:04.5656510Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-17T11:32:04.5656570Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-17T11:32:04.5656630Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:32:04.5656700Z  ([1mbase.py[0m:657)
2025-01-17T11:32:04.5656820Z ----------------------------- Captured stderr call -----------------------------
2025-01-17T11:32:04.5656820Z 
2025-01-17T11:32:04.5656820Z 
2025-01-17T11:32:04.5657000Z Packets:                                                                                   0/100000 [00:00<?, ?it/s]            [A
2025-01-17T11:32:04.5657260Z 
2025-01-17T11:32:04.5657440Z Packets:                                                                                   0/100000 [00:00<?, ?it/s][A
2025-01-17T11:32:04.5657440Z 
2025-01-17T11:32:04.5657700Z Packets:   ███████████▍                                                                    14374/100000 [00:00<00:00, 143737.05it/s][A
2025-01-17T11:32:04.5657700Z 
2025-01-17T11:32:04.5657900Z Packets:   ███████████████████████▌                                                        29487/100000 [00:00<00:00, 148077.17it/s][A
2025-01-17T11:32:04.5657910Z 
2025-01-17T11:32:04.5658100Z Packets:   ███████████████████████████████████▊                                            44743/100000 [00:00<00:00, 150123.30it/s][A
2025-01-17T11:32:04.5658100Z 
2025-01-17T11:32:04.5658310Z Packets:   ████████████████████████████████████████████████                                60088/100000 [00:00<00:00, 151434.67it/s][A
2025-01-17T11:32:04.5658320Z 
2025-01-17T11:32:04.5658540Z Packets:   ████████████████████████████████████████████████████████████▏                   75239/100000 [00:00<00:00, 151460.19it/s][A
2025-01-17T11:32:04.5658540Z 
2025-01-17T11:32:04.5658760Z Packets:   ████████████████████████████████████████████████████████████████████████▎       90386/100000 [00:00<00:00, 148476.93it/s][A
2025-01-17T11:32:04.5658890Z Iterations:                                                                                45/? [06:53<00:00,  3.85s/it]
2025-01-17T11:32:04.5658890Z 
2025-01-17T11:32:04.5659130Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉99999/100000 [00:00<00:00, 148476.93it/s][A
2025-01-17T11:32:04.5659250Z ------------------------------ Captured log call -------------------------------
2025-01-17T11:32:04.5659650Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-17T11:32:04.5659830Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-17T11:32:04.5659910Z INFO     tardis.simulation.base:base.py:542 
2025-01-17T11:32:04.5659980Z 	Simulation finished in 0 iterations 
2025-01-17T11:32:04.5660040Z 	Simulation took 0.00 s
2025-01-17T11:32:04.5660040Z 
2025-01-17T11:32:04.5660110Z INFO     tardis.simulation.base:base.py:444 
2025-01-17T11:32:04.5660170Z 	Starting iteration 1 of 1
2025-01-17T11:32:04.5660240Z INFO     tardis.simulation.base:base.py:657 
2025-01-17T11:32:04.5660300Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-17T11:32:04.5660360Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-17T11:32:04.5660420Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-17T11:32:04.5660590Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] __
2025-01-17T11:32:04.5660590Z 
2025-01-17T11:32:04.5660790Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x1339b7f50>
2025-01-17T11:32:04.5661060Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15a3de8d0>
2025-01-17T11:32:04.5661280Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data0-plot_data]>>
2025-01-17T11:32:04.5661580Z attribute = 'plot_data'
2025-01-17T11:32:04.5661590Z 
2025-01-17T11:32:04.5661650Z     @pytest.mark.parametrize(
2025-01-17T11:32:04.5661700Z         "attribute",
2025-01-17T11:32:04.5661740Z         [
2025-01-17T11:32:04.5661790Z             "plot_data",
2025-01-17T11:32:04.5661840Z             "plot_colors",
2025-01-17T11:32:04.5661890Z             "new_bin_edges",
2025-01-17T11:32:04.5661930Z         ],
2025-01-17T11:32:04.5661970Z     )
2025-01-17T11:32:04.5662030Z     def test_prepare_plot_data(
2025-01-17T11:32:04.5662070Z         self,
2025-01-17T11:32:04.5662130Z         plotter_prepare_plot_data,
2025-01-17T11:32:04.5662170Z         request,
2025-01-17T11:32:04.5662220Z         attribute,
2025-01-17T11:32:04.5662260Z     ):
2025-01-17T11:32:04.5662300Z         """
2025-01-17T11:32:04.5662400Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:32:04.5662440Z     
2025-01-17T11:32:04.5662490Z         Parameters:
2025-01-17T11:32:04.5662540Z         -----------
2025-01-17T11:32:04.5662670Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:32:04.5662740Z         request: Pytest's request fixture.
2025-01-17T11:32:04.5662870Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:32:04.5662920Z         """
2025-01-17T11:32:04.5662990Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5663100Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:32:04.5663210Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:32:04.5663340Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:32:04.5663460Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:32:04.5663550Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:32:04.5663640Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:32:04.5663730Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:32:04.5663730Z 
2025-01-17T11:32:04.5663840Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:32:04.5663930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5663930Z 
2025-01-17T11:32:04.5664290Z args = (<function assert_allclose.<locals>.compare at 0x17815ce00>, array([12955.14169787, 12955.14169787, 12955.14169787, 11...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-01-17T11:32:04.5664370Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-01-17T11:32:04.5664580Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5664580Z 
2025-01-17T11:32:04.5664630Z     @wraps(func)
2025-01-17T11:32:04.5664680Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5664740Z         with self._recreate_cm():
2025-01-17T11:32:04.5664790Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5664850Z E           AssertionError: 
2025-01-17T11:32:04.5664930Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5664980Z E           
2025-01-17T11:32:04.5665040Z E           (shapes (508,), (515,) mismatch)
2025-01-17T11:32:04.5665160Z E            ACTUAL: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-17T11:32:04.5665250Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-17T11:32:04.5665340Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-17T11:32:04.5665460Z E            DESIRED: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-17T11:32:04.5665600Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-17T11:32:04.5665710Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-17T11:32:04.5665710Z 
2025-01-17T11:32:04.5665860Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5666030Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:32:04.5666220Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5666420Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:32:04.5666540Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:32:04.5666780Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-17T11:32:04.5666950Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] __
2025-01-17T11:32:04.5666950Z 
2025-01-17T11:32:04.5667150Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x1339bc290>
2025-01-17T11:32:04.5667370Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15a3de8d0>
2025-01-17T11:32:04.5667590Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data1-plot_data]>>
2025-01-17T11:32:04.5667640Z attribute = 'plot_data'
2025-01-17T11:32:04.5667650Z 
2025-01-17T11:32:04.5667720Z     @pytest.mark.parametrize(
2025-01-17T11:32:04.5667760Z         "attribute",
2025-01-17T11:32:04.5667810Z         [
2025-01-17T11:32:04.5667860Z             "plot_data",
2025-01-17T11:32:04.5667910Z             "plot_colors",
2025-01-17T11:32:04.5667960Z             "new_bin_edges",
2025-01-17T11:32:04.5668100Z         ],
2025-01-17T11:32:04.5668140Z     )
2025-01-17T11:32:04.5668200Z     def test_prepare_plot_data(
2025-01-17T11:32:04.5668240Z         self,
2025-01-17T11:32:04.5668310Z         plotter_prepare_plot_data,
2025-01-17T11:32:04.5668350Z         request,
2025-01-17T11:32:04.5668390Z         attribute,
2025-01-17T11:32:04.5668440Z     ):
2025-01-17T11:32:04.5668480Z         """
2025-01-17T11:32:04.5668580Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:32:04.5668620Z     
2025-01-17T11:32:04.5668670Z         Parameters:
2025-01-17T11:32:04.5668720Z         -----------
2025-01-17T11:32:04.5668860Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:32:04.5668920Z         request: Pytest's request fixture.
2025-01-17T11:32:04.5669060Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:32:04.5669100Z         """
2025-01-17T11:32:04.5669170Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5669280Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:32:04.5669400Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:32:04.5669520Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:32:04.5669640Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:32:04.5669730Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:32:04.5669820Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:32:04.5669910Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:32:04.5669910Z 
2025-01-17T11:32:04.5670020Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:32:04.5670100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5670110Z 
2025-01-17T11:32:04.5670440Z args = (<function assert_allclose.<locals>.compare at 0x152e16520>, array([12955.14169787, 12955.14169787, 12955.14169787, 11...2507.1391254 , 12507.1391254 , 11042.97481792,
2025-01-17T11:32:04.5670540Z        13068.12089331, 13068.12089331, 11398.23786534, 11111.20486813]))
2025-01-17T11:32:04.5670850Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5670860Z 
2025-01-17T11:32:04.5670910Z     @wraps(func)
2025-01-17T11:32:04.5670960Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5671080Z         with self._recreate_cm():
2025-01-17T11:32:04.5671150Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5671200Z E           AssertionError: 
2025-01-17T11:32:04.5671280Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5671320Z E           
2025-01-17T11:32:04.5671380Z E           (shapes (558,), (560,) mismatch)
2025-01-17T11:32:04.5671500Z E            ACTUAL: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-17T11:32:04.5671590Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-17T11:32:04.5671690Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-17T11:32:04.5671810Z E            DESIRED: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-17T11:32:04.5671910Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-17T11:32:04.5672000Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-17T11:32:04.5672000Z 
2025-01-17T11:32:04.5672160Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5672320Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] __
2025-01-17T11:32:04.5672320Z 
2025-01-17T11:32:04.5672530Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x1339bc4d0>
2025-01-17T11:32:04.5672740Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15a3de8d0>
2025-01-17T11:32:04.5672950Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data2-plot_data]>>
2025-01-17T11:32:04.5673010Z attribute = 'plot_data'
2025-01-17T11:32:04.5673010Z 
2025-01-17T11:32:04.5673080Z     @pytest.mark.parametrize(
2025-01-17T11:32:04.5673120Z         "attribute",
2025-01-17T11:32:04.5673160Z         [
2025-01-17T11:32:04.5673210Z             "plot_data",
2025-01-17T11:32:04.5673260Z             "plot_colors",
2025-01-17T11:32:04.5673310Z             "new_bin_edges",
2025-01-17T11:32:04.5673350Z         ],
2025-01-17T11:32:04.5673390Z     )
2025-01-17T11:32:04.5673450Z     def test_prepare_plot_data(
2025-01-17T11:32:04.5673490Z         self,
2025-01-17T11:32:04.5673550Z         plotter_prepare_plot_data,
2025-01-17T11:32:04.5673600Z         request,
2025-01-17T11:32:04.5673640Z         attribute,
2025-01-17T11:32:04.5673680Z     ):
2025-01-17T11:32:04.5673720Z         """
2025-01-17T11:32:04.5673820Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:32:04.5673860Z     
2025-01-17T11:32:04.5673910Z         Parameters:
2025-01-17T11:32:04.5673950Z         -----------
2025-01-17T11:32:04.5674090Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:32:04.5674160Z         request: Pytest's request fixture.
2025-01-17T11:32:04.5674290Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:32:04.5674330Z         """
2025-01-17T11:32:04.5674410Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5674510Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:32:04.5674620Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:32:04.5674750Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:32:04.5674860Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:32:04.5674950Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:32:04.5675040Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:32:04.5675360Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:32:04.5675370Z 
2025-01-17T11:32:04.5675470Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:32:04.5675560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5675560Z 
2025-01-17T11:32:04.5675950Z args = (<function assert_allclose.<locals>.compare at 0x152e167a0>, array([12079.52986884, 11966.99134279, 11263.63770779, 14...1064.78967159, 11163.13661084, 11172.32922889,
2025-01-17T11:32:04.5676060Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-01-17T11:32:04.5676300Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5676310Z 
2025-01-17T11:32:04.5676360Z     @wraps(func)
2025-01-17T11:32:04.5676410Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5676470Z         with self._recreate_cm():
2025-01-17T11:32:04.5676530Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5676590Z E           AssertionError: 
2025-01-17T11:32:04.5676660Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5676710Z E           
2025-01-17T11:32:04.5676770Z E           (shapes (147,), (136,) mismatch)
2025-01-17T11:32:04.5676890Z E            ACTUAL: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-17T11:32:04.5676980Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-17T11:32:04.5677080Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-17T11:32:04.5677200Z E            DESIRED: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-17T11:32:04.5677290Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-17T11:32:04.5677380Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-17T11:32:04.5677390Z 
2025-01-17T11:32:04.5677540Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5677660Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:32:04.5677910Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5678090Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:32:04.5678220Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:32:04.5678450Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-17T11:32:04.5678620Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] __
2025-01-17T11:32:04.5678620Z 
2025-01-17T11:32:04.5678820Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x1339bc710>
2025-01-17T11:32:04.5679040Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15a3de8d0>
2025-01-17T11:32:04.5679250Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data3-plot_data]>>
2025-01-17T11:32:04.5679300Z attribute = 'plot_data'
2025-01-17T11:32:04.5679310Z 
2025-01-17T11:32:04.5679370Z     @pytest.mark.parametrize(
2025-01-17T11:32:04.5679420Z         "attribute",
2025-01-17T11:32:04.5679460Z         [
2025-01-17T11:32:04.5679520Z             "plot_data",
2025-01-17T11:32:04.5679560Z             "plot_colors",
2025-01-17T11:32:04.5679620Z             "new_bin_edges",
2025-01-17T11:32:04.5679660Z         ],
2025-01-17T11:32:04.5679700Z     )
2025-01-17T11:32:04.5679750Z     def test_prepare_plot_data(
2025-01-17T11:32:04.5679790Z         self,
2025-01-17T11:32:04.5679850Z         plotter_prepare_plot_data,
2025-01-17T11:32:04.5679900Z         request,
2025-01-17T11:32:04.5679940Z         attribute,
2025-01-17T11:32:04.5679980Z     ):
2025-01-17T11:32:04.5680020Z         """
2025-01-17T11:32:04.5680120Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:32:04.5680250Z     
2025-01-17T11:32:04.5680300Z         Parameters:
2025-01-17T11:32:04.5680350Z         -----------
2025-01-17T11:32:04.5680590Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:32:04.5680660Z         request: Pytest's request fixture.
2025-01-17T11:32:04.5680790Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:32:04.5681060Z         """
2025-01-17T11:32:04.5681140Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5681250Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:32:04.5681370Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:32:04.5681490Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:32:04.5681610Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:32:04.5681700Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:32:04.5681800Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:32:04.5681880Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:32:04.5681880Z 
2025-01-17T11:32:04.5681990Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:32:04.5682070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5682080Z 
2025-01-17T11:32:04.5682380Z args = (<function assert_allclose.<locals>.compare at 0x152e16020>, array([12079.52986884, 11966.99134279, 11263.63770779, 14...210447, 12126.50399598,
2025-01-17T11:32:04.5682480Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-01-17T11:32:04.5682530Z        11042.97481792]))
2025-01-17T11:32:04.5682740Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5682740Z 
2025-01-17T11:32:04.5682790Z     @wraps(func)
2025-01-17T11:32:04.5682840Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5682900Z         with self._recreate_cm():
2025-01-17T11:32:04.5682960Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5683020Z E           AssertionError: 
2025-01-17T11:32:04.5683090Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5683140Z E           
2025-01-17T11:32:04.5683200Z E           (shapes (159,), (153,) mismatch)
2025-01-17T11:32:04.5683330Z E            ACTUAL: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-17T11:32:04.5683410Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-17T11:32:04.5683510Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-17T11:32:04.5683620Z E            DESIRED: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-17T11:32:04.5683710Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-17T11:32:04.5683800Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-17T11:32:04.5683810Z 
2025-01-17T11:32:04.5683970Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5684130Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] __
2025-01-17T11:32:04.5684130Z 
2025-01-17T11:32:04.5684340Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x1339bc950>
2025-01-17T11:32:04.5684550Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15a3de8d0>
2025-01-17T11:32:04.5684770Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data4-plot_data]>>
2025-01-17T11:32:04.5684830Z attribute = 'plot_data'
2025-01-17T11:32:04.5684830Z 
2025-01-17T11:32:04.5684890Z     @pytest.mark.parametrize(
2025-01-17T11:32:04.5684940Z         "attribute",
2025-01-17T11:32:04.5684980Z         [
2025-01-17T11:32:04.5685030Z             "plot_data",
2025-01-17T11:32:04.5685080Z             "plot_colors",
2025-01-17T11:32:04.5685190Z             "new_bin_edges",
2025-01-17T11:32:04.5685230Z         ],
2025-01-17T11:32:04.5685280Z     )
2025-01-17T11:32:04.5685330Z     def test_prepare_plot_data(
2025-01-17T11:32:04.5685380Z         self,
2025-01-17T11:32:04.5685430Z         plotter_prepare_plot_data,
2025-01-17T11:32:04.5685530Z         request,
2025-01-17T11:32:04.5685570Z         attribute,
2025-01-17T11:32:04.5685620Z     ):
2025-01-17T11:32:04.5685660Z         """
2025-01-17T11:32:04.5685760Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:32:04.5685800Z     
2025-01-17T11:32:04.5685840Z         Parameters:
2025-01-17T11:32:04.5685890Z         -----------
2025-01-17T11:32:04.5686020Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:32:04.5686090Z         request: Pytest's request fixture.
2025-01-17T11:32:04.5686210Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:32:04.5686260Z         """
2025-01-17T11:32:04.5686330Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5686440Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:32:04.5690270Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:32:04.5690450Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:32:04.5690580Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:32:04.5690680Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:32:04.5690760Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:32:04.5690850Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:32:04.5690860Z 
2025-01-17T11:32:04.5690960Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:32:04.5691050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5691060Z 
2025-01-17T11:32:04.5691430Z args = (<function assert_allclose.<locals>.compare at 0x152e17e20>, array([12955.14169787, 12955.14169787, 12955.14169787, 11...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-01-17T11:32:04.5691500Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-01-17T11:32:04.5691710Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5691710Z 
2025-01-17T11:32:04.5691760Z     @wraps(func)
2025-01-17T11:32:04.5691820Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5691870Z         with self._recreate_cm():
2025-01-17T11:32:04.5691930Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5691980Z E           AssertionError: 
2025-01-17T11:32:04.5692060Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5692110Z E           
2025-01-17T11:32:04.5692170Z E           (shapes (508,), (515,) mismatch)
2025-01-17T11:32:04.5692290Z E            ACTUAL: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-17T11:32:04.5692380Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-17T11:32:04.5692480Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-17T11:32:04.5692600Z E            DESIRED: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-17T11:32:04.5692690Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-17T11:32:04.5692780Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-17T11:32:04.5692790Z 
2025-01-17T11:32:04.5692940Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5693060Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:32:04.5693320Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5693510Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:32:04.5693840Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:32:04.5694070Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-17T11:32:04.5694240Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] __
2025-01-17T11:32:04.5694320Z 
2025-01-17T11:32:04.5694530Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x1339bcbc0>
2025-01-17T11:32:04.5694750Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15a3de8d0>
2025-01-17T11:32:04.5694960Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data5-plot_data]>>
2025-01-17T11:32:04.5695010Z attribute = 'plot_data'
2025-01-17T11:32:04.5695020Z 
2025-01-17T11:32:04.5695080Z     @pytest.mark.parametrize(
2025-01-17T11:32:04.5695130Z         "attribute",
2025-01-17T11:32:04.5695170Z         [
2025-01-17T11:32:04.5695220Z             "plot_data",
2025-01-17T11:32:04.5695270Z             "plot_colors",
2025-01-17T11:32:04.5695330Z             "new_bin_edges",
2025-01-17T11:32:04.5695370Z         ],
2025-01-17T11:32:04.5695410Z     )
2025-01-17T11:32:04.5695470Z     def test_prepare_plot_data(
2025-01-17T11:32:04.5695510Z         self,
2025-01-17T11:32:04.5695570Z         plotter_prepare_plot_data,
2025-01-17T11:32:04.5695620Z         request,
2025-01-17T11:32:04.5695660Z         attribute,
2025-01-17T11:32:04.5695700Z     ):
2025-01-17T11:32:04.5695750Z         """
2025-01-17T11:32:04.5695850Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:32:04.5695890Z     
2025-01-17T11:32:04.5695930Z         Parameters:
2025-01-17T11:32:04.5695980Z         -----------
2025-01-17T11:32:04.5696110Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:32:04.5696190Z         request: Pytest's request fixture.
2025-01-17T11:32:04.5696310Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:32:04.5696360Z         """
2025-01-17T11:32:04.5696430Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5696540Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:32:04.5696660Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:32:04.5696780Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:32:04.5696890Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:32:04.5696990Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:32:04.5697080Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:32:04.5697170Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:32:04.5697170Z 
2025-01-17T11:32:04.5697280Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:32:04.5697360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5697370Z 
2025-01-17T11:32:04.5697740Z args = (<function assert_allclose.<locals>.compare at 0x152e16c00>, array([13692.75973672, 11362.93720064, 12466.53861691, .....), array([12467.89648692, 12467.89648692, 12357.74827994, ...,
2025-01-17T11:32:04.5697820Z        13068.12089331, 11398.23786534, 11111.20486813]))
2025-01-17T11:32:04.5698020Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5698020Z 
2025-01-17T11:32:04.5698070Z     @wraps(func)
2025-01-17T11:32:04.5698130Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5698190Z         with self._recreate_cm():
2025-01-17T11:32:04.5698240Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5698300Z E           AssertionError: 
2025-01-17T11:32:04.5698380Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5698420Z E           
2025-01-17T11:32:04.5698660Z E           (shapes (1466,), (1481,) mismatch)
2025-01-17T11:32:04.5698790Z E            ACTUAL: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-01-17T11:32:04.5698860Z E                  11152.962595, 11172.044815])
2025-01-17T11:32:04.5698980Z E            DESIRED: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-01-17T11:32:04.5699100Z E                  11398.237865, 11111.204868])
2025-01-17T11:32:04.5699110Z 
2025-01-17T11:32:04.5699270Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5699390Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:32:04.5699560Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5699820Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:32:04.5699940Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:32:04.5700220Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-01-17T11:32:04.5700390Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] __
2025-01-17T11:32:04.5700400Z 
2025-01-17T11:32:04.5700600Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x1339bce00>
2025-01-17T11:32:04.5700810Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15a3de8d0>
2025-01-17T11:32:04.5701030Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data6-plot_data]>>
2025-01-17T11:32:04.5701080Z attribute = 'plot_data'
2025-01-17T11:32:04.5701080Z 
2025-01-17T11:32:04.5701140Z     @pytest.mark.parametrize(
2025-01-17T11:32:04.5701190Z         "attribute",
2025-01-17T11:32:04.5701230Z         [
2025-01-17T11:32:04.5701280Z             "plot_data",
2025-01-17T11:32:04.5701330Z             "plot_colors",
2025-01-17T11:32:04.5701380Z             "new_bin_edges",
2025-01-17T11:32:04.5701420Z         ],
2025-01-17T11:32:04.5701460Z     )
2025-01-17T11:32:04.5701520Z     def test_prepare_plot_data(
2025-01-17T11:32:04.5701560Z         self,
2025-01-17T11:32:04.5701620Z         plotter_prepare_plot_data,
2025-01-17T11:32:04.5701670Z         request,
2025-01-17T11:32:04.5701710Z         attribute,
2025-01-17T11:32:04.5701750Z     ):
2025-01-17T11:32:04.5701790Z         """
2025-01-17T11:32:04.5701890Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:32:04.5701930Z     
2025-01-17T11:32:04.5701980Z         Parameters:
2025-01-17T11:32:04.5702030Z         -----------
2025-01-17T11:32:04.5702160Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:32:04.5702230Z         request: Pytest's request fixture.
2025-01-17T11:32:04.5702350Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:32:04.5702410Z         """
2025-01-17T11:32:04.5702480Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5702590Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:32:04.5702700Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:32:04.5702830Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:32:04.5702940Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:32:04.5703040Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:32:04.5703120Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:32:04.5703210Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:32:04.5703210Z 
2025-01-17T11:32:04.5703320Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:32:04.5703410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5703470Z 
2025-01-17T11:32:04.5703810Z args = (<function assert_allclose.<locals>.compare at 0x1588ae700>, array([12079.52986884, 11966.99134279, 11263.63770779, 14...1064.78967159, 11163.13661084, 11172.32922889,
2025-01-17T11:32:04.5703920Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-01-17T11:32:04.5704410Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5704420Z 
2025-01-17T11:32:04.5704470Z     @wraps(func)
2025-01-17T11:32:04.5704520Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5704580Z         with self._recreate_cm():
2025-01-17T11:32:04.5704630Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5704690Z E           AssertionError: 
2025-01-17T11:32:04.5704770Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5704820Z E           
2025-01-17T11:32:04.5704880Z E           (shapes (147,), (136,) mismatch)
2025-01-17T11:32:04.5705000Z E            ACTUAL: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-17T11:32:04.5705090Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-17T11:32:04.5705190Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-17T11:32:04.5705320Z E            DESIRED: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-17T11:32:04.5705410Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-17T11:32:04.5705500Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-17T11:32:04.5705500Z 
2025-01-17T11:32:04.5705660Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5705780Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:32:04.5705970Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5706170Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:32:04.5706290Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:32:04.5706530Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-17T11:32:04.5706700Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] __
2025-01-17T11:32:04.5706700Z 
2025-01-17T11:32:04.5706900Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x1339bcfe0>
2025-01-17T11:32:04.5707120Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15a3de8d0>
2025-01-17T11:32:04.5707330Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data7-plot_data]>>
2025-01-17T11:32:04.5707390Z attribute = 'plot_data'
2025-01-17T11:32:04.5707390Z 
2025-01-17T11:32:04.5707450Z     @pytest.mark.parametrize(
2025-01-17T11:32:04.5707500Z         "attribute",
2025-01-17T11:32:04.5707540Z         [
2025-01-17T11:32:04.5707590Z             "plot_data",
2025-01-17T11:32:04.5707640Z             "plot_colors",
2025-01-17T11:32:04.5707690Z             "new_bin_edges",
2025-01-17T11:32:04.5707730Z         ],
2025-01-17T11:32:04.5707770Z     )
2025-01-17T11:32:04.5707830Z     def test_prepare_plot_data(
2025-01-17T11:32:04.5707870Z         self,
2025-01-17T11:32:04.5707930Z         plotter_prepare_plot_data,
2025-01-17T11:32:04.5707980Z         request,
2025-01-17T11:32:04.5708020Z         attribute,
2025-01-17T11:32:04.5708060Z     ):
2025-01-17T11:32:04.5708100Z         """
2025-01-17T11:32:04.5708200Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-17T11:32:04.5708240Z     
2025-01-17T11:32:04.5708290Z         Parameters:
2025-01-17T11:32:04.5708330Z         -----------
2025-01-17T11:32:04.5708470Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-17T11:32:04.5708640Z         request: Pytest's request fixture.
2025-01-17T11:32:04.5708770Z         attribute: The attribute to test after preparing the plot data.
2025-01-17T11:32:04.5708810Z         """
2025-01-17T11:32:04.5708890Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5708990Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-17T11:32:04.5709150Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-17T11:32:04.5709280Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-17T11:32:04.5709390Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-17T11:32:04.5709490Z                 plot_object = [item.value for item in plot_object]
2025-01-17T11:32:04.5709580Z             data = regression_data.sync_ndarray(plot_object)
2025-01-17T11:32:04.5709670Z >           np.testing.assert_allclose(plot_object, data)
2025-01-17T11:32:04.5709670Z 
2025-01-17T11:32:04.5709780Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-17T11:32:04.5709870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5709870Z 
2025-01-17T11:32:04.5710170Z args = (<function assert_allclose.<locals>.compare at 0x1588af240>, array([12466.53861691, 14269.7609746 , 11910.79400472, 11...210447, 12126.50399598,
2025-01-17T11:32:04.5710280Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-01-17T11:32:04.5710320Z        11042.97481792]))
2025-01-17T11:32:04.5710520Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5710530Z 
2025-01-17T11:32:04.5710570Z     @wraps(func)
2025-01-17T11:32:04.5710630Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5710690Z         with self._recreate_cm():
2025-01-17T11:32:04.5710740Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5710800Z E           AssertionError: 
2025-01-17T11:32:04.5710880Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5710920Z E           
2025-01-17T11:32:04.5710990Z E           (shapes (379,), (381,) mismatch)
2025-01-17T11:32:04.5711110Z E            ACTUAL: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-01-17T11:32:04.5711200Z E                  11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-01-17T11:32:04.5711290Z E                  14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-01-17T11:32:04.5711410Z E            DESIRED: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-01-17T11:32:04.5711500Z E                  13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-01-17T11:32:04.5711590Z E                  11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-01-17T11:32:04.5711600Z 
2025-01-17T11:32:04.5711750Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5711870Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:32:04.5712050Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5712260Z 	['O III', 'Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:32:04.5712390Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:32:04.5712640Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV'] were not found in the provided wavelength range.
2025-01-17T11:32:04.5712790Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _______
2025-01-17T11:32:04.5712800Z 
2025-01-17T11:32:04.5713000Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x1339bd460>
2025-01-17T11:32:04.5713240Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x31782bf80>
2025-01-17T11:32:04.5713610Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15a3de8d0>)
2025-01-17T11:32:04.5713860Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl0]>>
2025-01-17T11:32:04.5713860Z 
2025-01-17T11:32:04.5713930Z     def test_generate_plot_mpl(
2025-01-17T11:32:04.5714100Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-17T11:32:04.5714150Z     ):
2025-01-17T11:32:04.5714190Z         """
2025-01-17T11:32:04.5714290Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-17T11:32:04.5714330Z     
2025-01-17T11:32:04.5714430Z         Compares generated plot data with regression data.
2025-01-17T11:32:04.5714470Z     
2025-01-17T11:32:04.5714520Z         Parameters:
2025-01-17T11:32:04.5714560Z         -----------
2025-01-17T11:32:04.5714680Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-17T11:32:04.5714800Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-17T11:32:04.5714860Z         request: Pytest's request fixture.
2025-01-17T11:32:04.5714910Z         """
2025-01-17T11:32:04.5714980Z         fig, _ = plotter_generate_plot_mpl
2025-01-17T11:32:04.5715060Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5715180Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-17T11:32:04.5715300Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-17T11:32:04.5715360Z             expected_values = expected.get(
2025-01-17T11:32:04.5715430Z                 "plot_data_hdf/" + item
2025-01-17T11:32:04.5715480Z             ).values.flatten()
2025-01-17T11:32:04.5715580Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-17T11:32:04.5715620Z     
2025-01-17T11:32:04.5715720Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-17T11:32:04.5715780Z                 np.testing.assert_allclose(
2025-01-17T11:32:04.5715840Z                     expected_values,
2025-01-17T11:32:04.5715890Z                     actual_values,
2025-01-17T11:32:04.5715940Z                     rtol=0.3,
2025-01-17T11:32:04.5715990Z                     atol=3,
2025-01-17T11:32:04.5716030Z                 )
2025-01-17T11:32:04.5716080Z             else:
2025-01-17T11:32:04.5716180Z                 assert np.array_equal(expected_values, actual_values)
2025-01-17T11:32:04.5716230Z     
2025-01-17T11:32:04.5716300Z         labels = expected["plot_data_hdf/scalars"]
2025-01-17T11:32:04.5716400Z         for index1, data in enumerate(fig.get_children()):
2025-01-17T11:32:04.5716470Z             if isinstance(data.get_label(), str):
2025-01-17T11:32:04.5716520Z                 assert (
2025-01-17T11:32:04.5716610Z                     getattr(labels, "label" + str(index1)).decode()
2025-01-17T11:32:04.5716660Z                     == data.get_label()
2025-01-17T11:32:04.5716710Z                 )
2025-01-17T11:32:04.5716770Z             if isinstance(data, Line2D):
2025-01-17T11:32:04.5716840Z >               np.testing.assert_allclose(
2025-01-17T11:32:04.5716900Z                     data.get_xydata(),
2025-01-17T11:32:04.5717000Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-01-17T11:32:04.5717050Z                     rtol=0.3,
2025-01-17T11:32:04.5717100Z                     atol=3,
2025-01-17T11:32:04.5717140Z                 )
2025-01-17T11:32:04.5717150Z 
2025-01-17T11:32:04.5717260Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-01-17T11:32:04.5717340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5717340Z 
2025-01-17T11:32:04.5717530Z args = (<function assert_allclose.<locals>.compare at 0x17edb1760>, array([[1.10e+04, 1.67e+02],
2025-01-17T11:32:04.5717580Z        [1.19e+04, 1.67e+02],...,
2025-01-17T11:32:04.5717630Z        [1.82e+04, 0.00e+00],
2025-01-17T11:32:04.5717680Z        [1.91e+04, 0.00e+00],
2025-01-17T11:32:04.5717720Z        [1.91e+04, 0.00e+00],
2025-01-17T11:32:04.5718120Z        [2.00e+04, 0.00e+00]]))
2025-01-17T11:32:04.5718320Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-17T11:32:04.5718330Z 
2025-01-17T11:32:04.5718370Z     @wraps(func)
2025-01-17T11:32:04.5718430Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5718540Z         with self._recreate_cm():
2025-01-17T11:32:04.5718610Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5718660Z E           AssertionError: 
2025-01-17T11:32:04.5718730Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:32:04.5718780Z E           
2025-01-17T11:32:04.5718840Z E           Mismatched elements: 4 / 40 (10%)
2025-01-17T11:32:04.5718930Z E           Max absolute difference among violations: 12.
2025-01-17T11:32:04.5719020Z E           Max relative difference among violations: 0.8
2025-01-17T11:32:04.5719090Z E            ACTUAL: array([[1.10e+04, 1.67e+02],
2025-01-17T11:32:04.5719150Z E                  [1.19e+04, 1.67e+02],
2025-01-17T11:32:04.5719220Z E                  [1.19e+04, 7.60e+01],...
2025-01-17T11:32:04.5719280Z E            DESIRED: array([[1.10e+04, 1.89e+02],
2025-01-17T11:32:04.5719340Z E                  [1.19e+04, 1.89e+02],
2025-01-17T11:32:04.5719390Z E                  [1.19e+04, 8.20e+01],...
2025-01-17T11:32:04.5719400Z 
2025-01-17T11:32:04.5719560Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5719670Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:32:04.5719890Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5720220Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:420)
2025-01-17T11:32:04.5720340Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:32:04.5720830Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:420 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-01-17T11:32:04.5721000Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _______
2025-01-17T11:32:04.5721000Z 
2025-01-17T11:32:04.5721200Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x1339bd520>
2025-01-17T11:32:04.5721440Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x17820d190>
2025-01-17T11:32:04.5721810Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15a3de8d0>)
2025-01-17T11:32:04.5722000Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl1]>>
2025-01-17T11:32:04.5722000Z 
2025-01-17T11:32:04.5722060Z     def test_generate_plot_mpl(
2025-01-17T11:32:04.5722180Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-17T11:32:04.5722230Z     ):
2025-01-17T11:32:04.5722280Z         """
2025-01-17T11:32:04.5722370Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-17T11:32:04.5722410Z     
2025-01-17T11:32:04.5722500Z         Compares generated plot data with regression data.
2025-01-17T11:32:04.5722550Z     
2025-01-17T11:32:04.5722590Z         Parameters:
2025-01-17T11:32:04.5722640Z         -----------
2025-01-17T11:32:04.5722770Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-17T11:32:04.5722880Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-17T11:32:04.5722950Z         request: Pytest's request fixture.
2025-01-17T11:32:04.5722990Z         """
2025-01-17T11:32:04.5723060Z         fig, _ = plotter_generate_plot_mpl
2025-01-17T11:32:04.5723130Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5723260Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-17T11:32:04.5723380Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-17T11:32:04.5723560Z             expected_values = expected.get(
2025-01-17T11:32:04.5723630Z                 "plot_data_hdf/" + item
2025-01-17T11:32:04.5723680Z             ).values.flatten()
2025-01-17T11:32:04.5723780Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-17T11:32:04.5724360Z     
2025-01-17T11:32:04.5724470Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-17T11:32:04.5724530Z                 np.testing.assert_allclose(
2025-01-17T11:32:04.5724590Z                     expected_values,
2025-01-17T11:32:04.5724640Z                     actual_values,
2025-01-17T11:32:04.5724690Z                     rtol=0.3,
2025-01-17T11:32:04.5724740Z                     atol=3,
2025-01-17T11:32:04.5724780Z                 )
2025-01-17T11:32:04.5724830Z             else:
2025-01-17T11:32:04.5724930Z                 assert np.array_equal(expected_values, actual_values)
2025-01-17T11:32:04.5724970Z     
2025-01-17T11:32:04.5725050Z         labels = expected["plot_data_hdf/scalars"]
2025-01-17T11:32:04.5725140Z         for index1, data in enumerate(fig.get_children()):
2025-01-17T11:32:04.5725210Z             if isinstance(data.get_label(), str):
2025-01-17T11:32:04.5725260Z                 assert (
2025-01-17T11:32:04.5725350Z                     getattr(labels, "label" + str(index1)).decode()
2025-01-17T11:32:04.5725410Z                     == data.get_label()
2025-01-17T11:32:04.5725460Z                 )
2025-01-17T11:32:04.5725510Z             if isinstance(data, Line2D):
2025-01-17T11:32:04.5725580Z >               np.testing.assert_allclose(
2025-01-17T11:32:04.5725630Z                     data.get_xydata(),
2025-01-17T11:32:04.5725730Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-01-17T11:32:04.5725780Z                     rtol=0.3,
2025-01-17T11:32:04.5725830Z                     atol=3,
2025-01-17T11:32:04.5725870Z                 )
2025-01-17T11:32:04.5725870Z 
2025-01-17T11:32:04.5725980Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-01-17T11:32:04.5726060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5726070Z 
2025-01-17T11:32:04.5726250Z args = (<function assert_allclose.<locals>.compare at 0x32314b1a0>, array([[1.10e+04, 1.67e+02],
2025-01-17T11:32:04.5726300Z        [1.19e+04, 1.67e+02],...,
2025-01-17T11:32:04.5726360Z        [1.82e+04, 0.00e+00],
2025-01-17T11:32:04.5726400Z        [1.91e+04, 0.00e+00],
2025-01-17T11:32:04.5726450Z        [1.91e+04, 0.00e+00],
2025-01-17T11:32:04.5726500Z        [2.00e+04, 0.00e+00]]))
2025-01-17T11:32:04.5726700Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-17T11:32:04.5726700Z 
2025-01-17T11:32:04.5726750Z     @wraps(func)
2025-01-17T11:32:04.5726800Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5726860Z         with self._recreate_cm():
2025-01-17T11:32:04.5726910Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5726970Z E           AssertionError: 
2025-01-17T11:32:04.5727040Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:32:04.5727090Z E           
2025-01-17T11:32:04.5727150Z E           Mismatched elements: 4 / 40 (10%)
2025-01-17T11:32:04.5727240Z E           Max absolute difference among violations: 12.
2025-01-17T11:32:04.5727330Z E           Max relative difference among violations: 0.8
2025-01-17T11:32:04.5727400Z E            ACTUAL: array([[1.10e+04, 1.67e+02],
2025-01-17T11:32:04.5727450Z E                  [1.19e+04, 1.67e+02],
2025-01-17T11:32:04.5727510Z E                  [1.19e+04, 7.60e+01],...
2025-01-17T11:32:04.5727570Z E            DESIRED: array([[1.10e+04, 1.89e+02],
2025-01-17T11:32:04.5727630Z E                  [1.19e+04, 1.89e+02],
2025-01-17T11:32:04.5727680Z E                  [1.19e+04, 8.20e+01],...
2025-01-17T11:32:04.5727690Z 
2025-01-17T11:32:04.5727840Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5728110Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _______
2025-01-17T11:32:04.5728110Z 
2025-01-17T11:32:04.5728310Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x1339bd910>
2025-01-17T11:32:04.5728540Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x15e99ba10>
2025-01-17T11:32:04.5728970Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15a3de8d0>)
2025-01-17T11:32:04.5729160Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl4]>>
2025-01-17T11:32:04.5729170Z 
2025-01-17T11:32:04.5729230Z     def test_generate_plot_mpl(
2025-01-17T11:32:04.5729350Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-17T11:32:04.5729390Z     ):
2025-01-17T11:32:04.5729440Z         """
2025-01-17T11:32:04.5729530Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-17T11:32:04.5729580Z     
2025-01-17T11:32:04.5729680Z         Compares generated plot data with regression data.
2025-01-17T11:32:04.5729720Z     
2025-01-17T11:32:04.5729760Z         Parameters:
2025-01-17T11:32:04.5729810Z         -----------
2025-01-17T11:32:04.5729940Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-17T11:32:04.5730060Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-17T11:32:04.5730120Z         request: Pytest's request fixture.
2025-01-17T11:32:04.5730170Z         """
2025-01-17T11:32:04.5730230Z         fig, _ = plotter_generate_plot_mpl
2025-01-17T11:32:04.5730310Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5730430Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-17T11:32:04.5730540Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-17T11:32:04.5730610Z             expected_values = expected.get(
2025-01-17T11:32:04.5730670Z                 "plot_data_hdf/" + item
2025-01-17T11:32:04.5730720Z             ).values.flatten()
2025-01-17T11:32:04.5730820Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-17T11:32:04.5730860Z     
2025-01-17T11:32:04.5730960Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-17T11:32:04.5731030Z >               np.testing.assert_allclose(
2025-01-17T11:32:04.5731080Z                     expected_values,
2025-01-17T11:32:04.5731140Z                     actual_values,
2025-01-17T11:32:04.5731190Z                     rtol=0.3,
2025-01-17T11:32:04.5731240Z                     atol=3,
2025-01-17T11:32:04.5731280Z                 )
2025-01-17T11:32:04.5731280Z 
2025-01-17T11:32:04.5731390Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-01-17T11:32:04.5731470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5731480Z 
2025-01-17T11:32:04.5731810Z args = (<function assert_allclose.<locals>.compare at 0x15eb004a0>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12, ...]), array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-17T11:32:04.5731860Z          2,   5,   5,   5,   5,   0,   0]))
2025-01-17T11:32:04.5732070Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-17T11:32:04.5732080Z 
2025-01-17T11:32:04.5732120Z     @wraps(func)
2025-01-17T11:32:04.5732180Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5732230Z         with self._recreate_cm():
2025-01-17T11:32:04.5732290Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5732350Z E           AssertionError: 
2025-01-17T11:32:04.5732420Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:32:04.5732460Z E           
2025-01-17T11:32:04.5732530Z E           Mismatched elements: 4 / 20 (20%)
2025-01-17T11:32:04.5732610Z E           Max absolute difference among violations: 24
2025-01-17T11:32:04.5732760Z E           Max relative difference among violations: 0.39393939
2025-01-17T11:32:04.5732890Z E            ACTUAL: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-17T11:32:04.5732950Z E                    2,   5,   5,   5,   5,   0,   0])
2025-01-17T11:32:04.5733130Z E            DESIRED: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-17T11:32:04.5733200Z E                    2,   5,   5,   5,   5,   0,   0])
2025-01-17T11:32:04.5733200Z 
2025-01-17T11:32:04.5733360Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5733480Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:32:04.5733770Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5733970Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:32:04.5734090Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:32:04.5734330Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-17T11:32:04.5734490Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _______
2025-01-17T11:32:04.5734500Z 
2025-01-17T11:32:04.5734700Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x1339bd9d0>
2025-01-17T11:32:04.5734930Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x17f0e8ce0>
2025-01-17T11:32:04.5735300Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15a3de8d0>)
2025-01-17T11:32:04.5735500Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl5]>>
2025-01-17T11:32:04.5735500Z 
2025-01-17T11:32:04.5735560Z     def test_generate_plot_mpl(
2025-01-17T11:32:04.5735690Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-17T11:32:04.5735730Z     ):
2025-01-17T11:32:04.5735770Z         """
2025-01-17T11:32:04.5735870Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-17T11:32:04.5735910Z     
2025-01-17T11:32:04.5736010Z         Compares generated plot data with regression data.
2025-01-17T11:32:04.5736050Z     
2025-01-17T11:32:04.5736100Z         Parameters:
2025-01-17T11:32:04.5736140Z         -----------
2025-01-17T11:32:04.5736260Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-17T11:32:04.5736380Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-17T11:32:04.5736440Z         request: Pytest's request fixture.
2025-01-17T11:32:04.5736490Z         """
2025-01-17T11:32:04.5736550Z         fig, _ = plotter_generate_plot_mpl
2025-01-17T11:32:04.5736630Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5736760Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-17T11:32:04.5736870Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-17T11:32:04.5736940Z             expected_values = expected.get(
2025-01-17T11:32:04.5737000Z                 "plot_data_hdf/" + item
2025-01-17T11:32:04.5737060Z             ).values.flatten()
2025-01-17T11:32:04.5737150Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-17T11:32:04.5737200Z     
2025-01-17T11:32:04.5737290Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-17T11:32:04.5737360Z                 np.testing.assert_allclose(
2025-01-17T11:32:04.5737410Z                     expected_values,
2025-01-17T11:32:04.5737470Z                     actual_values,
2025-01-17T11:32:04.5737510Z                     rtol=0.3,
2025-01-17T11:32:04.5737560Z                     atol=3,
2025-01-17T11:32:04.5737600Z                 )
2025-01-17T11:32:04.5737650Z             else:
2025-01-17T11:32:04.5738100Z                 assert np.array_equal(expected_values, actual_values)
2025-01-17T11:32:04.5738140Z     
2025-01-17T11:32:04.5738220Z         labels = expected["plot_data_hdf/scalars"]
2025-01-17T11:32:04.5738310Z         for index1, data in enumerate(fig.get_children()):
2025-01-17T11:32:04.5738390Z             if isinstance(data.get_label(), str):
2025-01-17T11:32:04.5738490Z                 assert (
2025-01-17T11:32:04.5738590Z                     getattr(labels, "label" + str(index1)).decode()
2025-01-17T11:32:04.5738640Z                     == data.get_label()
2025-01-17T11:32:04.5738690Z                 )
2025-01-17T11:32:04.5738750Z             if isinstance(data, Line2D):
2025-01-17T11:32:04.5738820Z >               np.testing.assert_allclose(
2025-01-17T11:32:04.5738870Z                     data.get_xydata(),
2025-01-17T11:32:04.5738980Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-01-17T11:32:04.5739030Z                     rtol=0.3,
2025-01-17T11:32:04.5739080Z                     atol=3,
2025-01-17T11:32:04.5739120Z                 )
2025-01-17T11:32:04.5739130Z 
2025-01-17T11:32:04.5739230Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-01-17T11:32:04.5739320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5739320Z 
2025-01-17T11:32:04.5739510Z args = (<function assert_allclose.<locals>.compare at 0x15a423380>, array([[1.10e+04, 2.72e+02],
2025-01-17T11:32:04.5739560Z        [1.19e+04, 2.72e+02],...,
2025-01-17T11:32:04.5739620Z        [1.82e+04, 5.00e+00],
2025-01-17T11:32:04.5739670Z        [1.91e+04, 5.00e+00],
2025-01-17T11:32:04.5739720Z        [1.91e+04, 0.00e+00],
2025-01-17T11:32:04.5739770Z        [2.00e+04, 0.00e+00]]))
2025-01-17T11:32:04.5739970Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-17T11:32:04.5739970Z 
2025-01-17T11:32:04.5740020Z     @wraps(func)
2025-01-17T11:32:04.5740070Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5740130Z         with self._recreate_cm():
2025-01-17T11:32:04.5740190Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5740250Z E           AssertionError: 
2025-01-17T11:32:04.5740320Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:32:04.5740370Z E           
2025-01-17T11:32:04.5740440Z E           Mismatched elements: 4 / 40 (10%)
2025-01-17T11:32:04.5740530Z E           Max absolute difference among violations: 24.
2025-01-17T11:32:04.5740610Z E           Max relative difference among violations: 0.65
2025-01-17T11:32:04.5740690Z E            ACTUAL: array([[1.10e+04, 2.72e+02],
2025-01-17T11:32:04.5740740Z E                  [1.19e+04, 2.72e+02],
2025-01-17T11:32:04.5740790Z E                  [1.19e+04, 1.10e+02],...
2025-01-17T11:32:04.5740860Z E            DESIRED: array([[1.10e+04, 3.06e+02],
2025-01-17T11:32:04.5740910Z E                  [1.19e+04, 3.06e+02],
2025-01-17T11:32:04.5740960Z E                  [1.19e+04, 1.18e+02],...
2025-01-17T11:32:04.5740970Z 
2025-01-17T11:32:04.5741130Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5741250Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:32:04.5741450Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5741700Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:32:04.5741820Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:32:04.5742110Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-01-17T11:32:04.5746600Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _______
2025-01-17T11:32:04.5746630Z 
2025-01-17T11:32:04.5746880Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x1339be840>
2025-01-17T11:32:04.5747360Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x17ef639e0>
2025-01-17T11:32:04.5747420Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:32:04.5747540Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-17T11:32:04.5747830Z               'mode': 'lines...': 'e', 'title': {'text': 'Packet Count'}}}
2025-01-17T11:32:04.5747990Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15a3de8d0>)
2025-01-17T11:32:04.5748180Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply0]>>
2025-01-17T11:32:04.5748180Z 
2025-01-17T11:32:04.5748240Z     def test_generate_plot_ply(
2025-01-17T11:32:04.5748370Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:32:04.5748420Z     ):
2025-01-17T11:32:04.5748460Z         """
2025-01-17T11:32:04.5748550Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-17T11:32:04.5748600Z     
2025-01-17T11:32:04.5748700Z         Compares generated plot data with regression data.
2025-01-17T11:32:04.5748740Z     
2025-01-17T11:32:04.5748790Z         Parameters:
2025-01-17T11:32:04.5748830Z         ----------
2025-01-17T11:32:04.5748960Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-17T11:32:04.5749070Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-17T11:32:04.5749140Z         request: Pytest's request fixture.
2025-01-17T11:32:04.5749180Z         """
2025-01-17T11:32:04.5749240Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:32:04.5749320Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5749450Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:32:04.5749500Z     
2025-01-17T11:32:04.5749610Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-17T11:32:04.5749680Z             expected_values = expected.get(
2025-01-17T11:32:04.5749740Z                 "plot_data_hdf/" + item
2025-01-17T11:32:04.5749800Z             ).values.flatten()
2025-01-17T11:32:04.5749900Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-17T11:32:04.5749940Z     
2025-01-17T11:32:04.5750040Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-17T11:32:04.5750110Z                 np.testing.assert_allclose(
2025-01-17T11:32:04.5750160Z                     expected_values,
2025-01-17T11:32:04.5750220Z                     actual_values,
2025-01-17T11:32:04.5750270Z                     rtol=0.3,
2025-01-17T11:32:04.5750320Z                     atol=3,
2025-01-17T11:32:04.5750360Z                 )
2025-01-17T11:32:04.5750400Z             else:
2025-01-17T11:32:04.5750500Z                 assert np.array_equal(expected_values, actual_values)
2025-01-17T11:32:04.5750580Z         for index, data in enumerate(fig.data):
2025-01-17T11:32:04.5750660Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:32:04.5750710Z             if data.stackgroup:
2025-01-17T11:32:04.5750770Z                 assert (
2025-01-17T11:32:04.5750820Z                     data.stackgroup
2025-01-17T11:32:04.5750870Z                     == getattr(
2025-01-17T11:32:04.5750950Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5751030Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:32:04.5751070Z                     ).decode()
2025-01-17T11:32:04.5751120Z                 )
2025-01-17T11:32:04.5751170Z             if data.name:
2025-01-17T11:32:04.5751220Z                 assert (
2025-01-17T11:32:04.5751260Z                     data.name
2025-01-17T11:32:04.5751310Z                     == getattr(
2025-01-17T11:32:04.5751390Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5751450Z                         "_" + str(index) + "name",
2025-01-17T11:32:04.5751500Z                     ).decode()
2025-01-17T11:32:04.5751620Z                 )
2025-01-17T11:32:04.5751680Z             np.testing.assert_allclose(
2025-01-17T11:32:04.5751730Z                 data.x,
2025-01-17T11:32:04.5751820Z                 expected.get(group + "x").values.flatten(),
2025-01-17T11:32:04.5751860Z                 rtol=0.3,
2025-01-17T11:32:04.5751970Z                 atol=3,
2025-01-17T11:32:04.5752010Z             )
2025-01-17T11:32:04.5752070Z >           np.testing.assert_allclose(
2025-01-17T11:32:04.5752120Z                 data.y,
2025-01-17T11:32:04.5752200Z                 expected.get(group + "y").values.flatten(),
2025-01-17T11:32:04.5752250Z                 rtol=0.3,
2025-01-17T11:32:04.5752290Z                 atol=3,
2025-01-17T11:32:04.5752330Z             )
2025-01-17T11:32:04.5752330Z 
2025-01-17T11:32:04.5752440Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-01-17T11:32:04.5752530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5752530Z 
2025-01-17T11:32:04.5752850Z args = (<function assert_allclose.<locals>.compare at 0x17cad5b20>, array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3, ...]), array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-01-17T11:32:04.5752910Z          0,   0,   0,   0,   0,   0,   0]))
2025-01-17T11:32:04.5753110Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-17T11:32:04.5753120Z 
2025-01-17T11:32:04.5753160Z     @wraps(func)
2025-01-17T11:32:04.5753220Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5753280Z         with self._recreate_cm():
2025-01-17T11:32:04.5753340Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5753390Z E           AssertionError: 
2025-01-17T11:32:04.5753470Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:32:04.5753510Z E           
2025-01-17T11:32:04.5753570Z E           Mismatched elements: 4 / 20 (20%)
2025-01-17T11:32:04.5753660Z E           Max absolute difference among violations: 12
2025-01-17T11:32:04.5753750Z E           Max relative difference among violations: 0.8
2025-01-17T11:32:04.5753880Z E            ACTUAL: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-01-17T11:32:04.5753940Z E                    0,   0,   0,   0,   0,   0,   0])
2025-01-17T11:32:04.5754070Z E            DESIRED: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-01-17T11:32:04.5754130Z E                    0,   0,   0,   0,   0,   0,   0])
2025-01-17T11:32:04.5754130Z 
2025-01-17T11:32:04.5754290Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5754410Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:32:04.5754670Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5755000Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:522)
2025-01-17T11:32:04.5755120Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:32:04.5755470Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:522 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-01-17T11:32:04.5755630Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _______
2025-01-17T11:32:04.5755630Z 
2025-01-17T11:32:04.5755830Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x1339be930>
2025-01-17T11:32:04.5756070Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x314386fc0>
2025-01-17T11:32:04.5756130Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:32:04.5756250Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-17T11:32:04.5756350Z               'mode': 'lines...': 'e', 'title': {'text': 'Packet Count'}}}
2025-01-17T11:32:04.5756510Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15a3de8d0>)
2025-01-17T11:32:04.5756760Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply1]>>
2025-01-17T11:32:04.5756770Z 
2025-01-17T11:32:04.5756830Z     def test_generate_plot_ply(
2025-01-17T11:32:04.5756950Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:32:04.5757060Z     ):
2025-01-17T11:32:04.5757100Z         """
2025-01-17T11:32:04.5757200Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-17T11:32:04.5757240Z     
2025-01-17T11:32:04.5757340Z         Compares generated plot data with regression data.
2025-01-17T11:32:04.5757380Z     
2025-01-17T11:32:04.5757430Z         Parameters:
2025-01-17T11:32:04.5757470Z         ----------
2025-01-17T11:32:04.5757590Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-17T11:32:04.5757690Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-17T11:32:04.5757760Z         request: Pytest's request fixture.
2025-01-17T11:32:04.5757810Z         """
2025-01-17T11:32:04.5757870Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:32:04.5757950Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5758080Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:32:04.5758120Z     
2025-01-17T11:32:04.5758230Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-17T11:32:04.5758300Z             expected_values = expected.get(
2025-01-17T11:32:04.5758360Z                 "plot_data_hdf/" + item
2025-01-17T11:32:04.5758420Z             ).values.flatten()
2025-01-17T11:32:04.5758520Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-17T11:32:04.5758570Z     
2025-01-17T11:32:04.5758660Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-17T11:32:04.5758720Z                 np.testing.assert_allclose(
2025-01-17T11:32:04.5758780Z                     expected_values,
2025-01-17T11:32:04.5758830Z                     actual_values,
2025-01-17T11:32:04.5758890Z                     rtol=0.3,
2025-01-17T11:32:04.5758930Z                     atol=3,
2025-01-17T11:32:04.5758980Z                 )
2025-01-17T11:32:04.5759020Z             else:
2025-01-17T11:32:04.5759130Z                 assert np.array_equal(expected_values, actual_values)
2025-01-17T11:32:04.5759200Z         for index, data in enumerate(fig.data):
2025-01-17T11:32:04.5759280Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:32:04.5759340Z             if data.stackgroup:
2025-01-17T11:32:04.5759390Z                 assert (
2025-01-17T11:32:04.5759440Z                     data.stackgroup
2025-01-17T11:32:04.5759490Z                     == getattr(
2025-01-17T11:32:04.5759560Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5759630Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:32:04.5759680Z                     ).decode()
2025-01-17T11:32:04.5759730Z                 )
2025-01-17T11:32:04.5759790Z             if data.name:
2025-01-17T11:32:04.5759830Z                 assert (
2025-01-17T11:32:04.5759880Z                     data.name
2025-01-17T11:32:04.5759930Z                     == getattr(
2025-01-17T11:32:04.5760000Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5760070Z                         "_" + str(index) + "name",
2025-01-17T11:32:04.5760120Z                     ).decode()
2025-01-17T11:32:04.5760170Z                 )
2025-01-17T11:32:04.5760230Z             np.testing.assert_allclose(
2025-01-17T11:32:04.5760270Z                 data.x,
2025-01-17T11:32:04.5760350Z                 expected.get(group + "x").values.flatten(),
2025-01-17T11:32:04.5760400Z                 rtol=0.3,
2025-01-17T11:32:04.5760450Z                 atol=3,
2025-01-17T11:32:04.5760490Z             )
2025-01-17T11:32:04.5760550Z >           np.testing.assert_allclose(
2025-01-17T11:32:04.5760590Z                 data.y,
2025-01-17T11:32:04.5761150Z                 expected.get(group + "y").values.flatten(),
2025-01-17T11:32:04.5761200Z                 rtol=0.3,
2025-01-17T11:32:04.5761250Z                 atol=3,
2025-01-17T11:32:04.5761290Z             )
2025-01-17T11:32:04.5761290Z 
2025-01-17T11:32:04.5761400Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-01-17T11:32:04.5761530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5761530Z 
2025-01-17T11:32:04.5761840Z args = (<function assert_allclose.<locals>.compare at 0x17cad7920>, array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3, ...]), array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-01-17T11:32:04.5761890Z          0,   0,   0,   0,   0,   0,   0]))
2025-01-17T11:32:04.5762090Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-17T11:32:04.5762100Z 
2025-01-17T11:32:04.5762150Z     @wraps(func)
2025-01-17T11:32:04.5762200Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5762260Z         with self._recreate_cm():
2025-01-17T11:32:04.5762320Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5762370Z E           AssertionError: 
2025-01-17T11:32:04.5762440Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:32:04.5762490Z E           
2025-01-17T11:32:04.5762560Z E           Mismatched elements: 4 / 20 (20%)
2025-01-17T11:32:04.5762640Z E           Max absolute difference among violations: 12
2025-01-17T11:32:04.5762730Z E           Max relative difference among violations: 0.8
2025-01-17T11:32:04.5762850Z E            ACTUAL: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-01-17T11:32:04.5762910Z E                    0,   0,   0,   0,   0,   0,   0])
2025-01-17T11:32:04.5763040Z E            DESIRED: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-01-17T11:32:04.5763100Z E                    0,   0,   0,   0,   0,   0,   0])
2025-01-17T11:32:04.5763110Z 
2025-01-17T11:32:04.5763270Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5763430Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _______
2025-01-17T11:32:04.5763430Z 
2025-01-17T11:32:04.5763630Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x1339bed50>
2025-01-17T11:32:04.5763870Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x15314f4d0>
2025-01-17T11:32:04.5763940Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:32:04.5764060Z     'data': [{'line': {'color': 'rgb(127, 0, 0)', 'shape': 'hv', 'width': 2.5},
2025-01-17T11:32:04.5764160Z               'mode': 'lines...': 'e', 'title': {'text': 'Packet Count'}}}
2025-01-17T11:32:04.5764310Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15a3de8d0>)
2025-01-17T11:32:04.5764490Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply4]>>
2025-01-17T11:32:04.5764500Z 
2025-01-17T11:32:04.5764560Z     def test_generate_plot_ply(
2025-01-17T11:32:04.5764690Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:32:04.5764730Z     ):
2025-01-17T11:32:04.5764770Z         """
2025-01-17T11:32:04.5764870Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-17T11:32:04.5764910Z     
2025-01-17T11:32:04.5765010Z         Compares generated plot data with regression data.
2025-01-17T11:32:04.5765050Z     
2025-01-17T11:32:04.5765100Z         Parameters:
2025-01-17T11:32:04.5765140Z         ----------
2025-01-17T11:32:04.5765270Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-17T11:32:04.5765370Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-17T11:32:04.5765430Z         request: Pytest's request fixture.
2025-01-17T11:32:04.5765480Z         """
2025-01-17T11:32:04.5765540Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:32:04.5765670Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5765810Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:32:04.5765850Z     
2025-01-17T11:32:04.5765960Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-17T11:32:04.5766110Z             expected_values = expected.get(
2025-01-17T11:32:04.5766170Z                 "plot_data_hdf/" + item
2025-01-17T11:32:04.5766230Z             ).values.flatten()
2025-01-17T11:32:04.5766330Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-17T11:32:04.5766380Z     
2025-01-17T11:32:04.5766470Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-17T11:32:04.5766530Z >               np.testing.assert_allclose(
2025-01-17T11:32:04.5766590Z                     expected_values,
2025-01-17T11:32:04.5766640Z                     actual_values,
2025-01-17T11:32:04.5766690Z                     rtol=0.3,
2025-01-17T11:32:04.5766740Z                     atol=3,
2025-01-17T11:32:04.5766790Z                 )
2025-01-17T11:32:04.5766790Z 
2025-01-17T11:32:04.5766890Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-01-17T11:32:04.5766990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5766990Z 
2025-01-17T11:32:04.5767310Z args = (<function assert_allclose.<locals>.compare at 0x17ca79800>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12, ...]), array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-17T11:32:04.5767370Z          2,   5,   5,   5,   5,   0,   0]))
2025-01-17T11:32:04.5767560Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-17T11:32:04.5767570Z 
2025-01-17T11:32:04.5767620Z     @wraps(func)
2025-01-17T11:32:04.5767670Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5767740Z         with self._recreate_cm():
2025-01-17T11:32:04.5767800Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5767850Z E           AssertionError: 
2025-01-17T11:32:04.5767930Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:32:04.5767970Z E           
2025-01-17T11:32:04.5768030Z E           Mismatched elements: 4 / 20 (20%)
2025-01-17T11:32:04.5768120Z E           Max absolute difference among violations: 24
2025-01-17T11:32:04.5768220Z E           Max relative difference among violations: 0.39393939
2025-01-17T11:32:04.5768350Z E            ACTUAL: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-17T11:32:04.5768410Z E                    2,   5,   5,   5,   5,   0,   0])
2025-01-17T11:32:04.5768540Z E            DESIRED: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-17T11:32:04.5768600Z E                    2,   5,   5,   5,   5,   0,   0])
2025-01-17T11:32:04.5768600Z 
2025-01-17T11:32:04.5768760Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5768880Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:32:04.5769100Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5769290Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:32:04.5769420Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:32:04.5769660Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-17T11:32:04.5769820Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _______
2025-01-17T11:32:04.5769830Z 
2025-01-17T11:32:04.5770020Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x1339bee40>
2025-01-17T11:32:04.5770260Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x399caf020>
2025-01-17T11:32:04.5770400Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:32:04.5770520Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-17T11:32:04.5770620Z               'mode': 'lines...': 'e', 'title': {'text': 'Packet Count'}}}
2025-01-17T11:32:04.5770770Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15a3de8d0>)
2025-01-17T11:32:04.5771000Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply5]>>
2025-01-17T11:32:04.5771010Z 
2025-01-17T11:32:04.5771070Z     def test_generate_plot_ply(
2025-01-17T11:32:04.5771200Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:32:04.5771240Z     ):
2025-01-17T11:32:04.5771280Z         """
2025-01-17T11:32:04.5771370Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-17T11:32:04.5771420Z     
2025-01-17T11:32:04.5771510Z         Compares generated plot data with regression data.
2025-01-17T11:32:04.5771550Z     
2025-01-17T11:32:04.5771600Z         Parameters:
2025-01-17T11:32:04.5771650Z         ----------
2025-01-17T11:32:04.5771770Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-17T11:32:04.5771870Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-17T11:32:04.5771930Z         request: Pytest's request fixture.
2025-01-17T11:32:04.5771990Z         """
2025-01-17T11:32:04.5772050Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:32:04.5772130Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5772260Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:32:04.5772300Z     
2025-01-17T11:32:04.5772410Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-17T11:32:04.5772480Z             expected_values = expected.get(
2025-01-17T11:32:04.5772530Z                 "plot_data_hdf/" + item
2025-01-17T11:32:04.5772590Z             ).values.flatten()
2025-01-17T11:32:04.5772690Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-17T11:32:04.5772730Z     
2025-01-17T11:32:04.5772830Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-17T11:32:04.5772900Z                 np.testing.assert_allclose(
2025-01-17T11:32:04.5772950Z                     expected_values,
2025-01-17T11:32:04.5773010Z                     actual_values,
2025-01-17T11:32:04.5773060Z                     rtol=0.3,
2025-01-17T11:32:04.5773110Z                     atol=3,
2025-01-17T11:32:04.5773150Z                 )
2025-01-17T11:32:04.5773190Z             else:
2025-01-17T11:32:04.5773290Z                 assert np.array_equal(expected_values, actual_values)
2025-01-17T11:32:04.5773360Z         for index, data in enumerate(fig.data):
2025-01-17T11:32:04.5773440Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:32:04.5773500Z             if data.stackgroup:
2025-01-17T11:32:04.5773540Z                 assert (
2025-01-17T11:32:04.5773600Z                     data.stackgroup
2025-01-17T11:32:04.5773650Z                     == getattr(
2025-01-17T11:32:04.5773730Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5773800Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:32:04.5773850Z                     ).decode()
2025-01-17T11:32:04.5773890Z                 )
2025-01-17T11:32:04.5773940Z             if data.name:
2025-01-17T11:32:04.5773990Z                 assert (
2025-01-17T11:32:04.5774040Z                     data.name
2025-01-17T11:32:04.5774080Z                     == getattr(
2025-01-17T11:32:04.5774160Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5774220Z                         "_" + str(index) + "name",
2025-01-17T11:32:04.5774270Z                     ).decode()
2025-01-17T11:32:04.5774310Z                 )
2025-01-17T11:32:04.5774370Z             np.testing.assert_allclose(
2025-01-17T11:32:04.5774420Z                 data.x,
2025-01-17T11:32:04.5774500Z                 expected.get(group + "x").values.flatten(),
2025-01-17T11:32:04.5774600Z                 rtol=0.3,
2025-01-17T11:32:04.5774640Z                 atol=3,
2025-01-17T11:32:04.5774690Z             )
2025-01-17T11:32:04.5774750Z >           np.testing.assert_allclose(
2025-01-17T11:32:04.5774790Z                 data.y,
2025-01-17T11:32:04.5774920Z                 expected.get(group + "y").values.flatten(),
2025-01-17T11:32:04.5774970Z                 rtol=0.3,
2025-01-17T11:32:04.5775010Z                 atol=3,
2025-01-17T11:32:04.5775060Z             )
2025-01-17T11:32:04.5775060Z 
2025-01-17T11:32:04.5775160Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-01-17T11:32:04.5775250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5775250Z 
2025-01-17T11:32:04.5775570Z args = (<function assert_allclose.<locals>.compare at 0x17cad7880>, array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7, ...]), array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-17T11:32:04.5775630Z          2,   5,   5,   5,   5,   0,   0]))
2025-01-17T11:32:04.5775830Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-17T11:32:04.5775830Z 
2025-01-17T11:32:04.5775880Z     @wraps(func)
2025-01-17T11:32:04.5775930Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5775990Z         with self._recreate_cm():
2025-01-17T11:32:04.5776050Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5776100Z E           AssertionError: 
2025-01-17T11:32:04.5776170Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:32:04.5776220Z E           
2025-01-17T11:32:04.5776380Z E           Mismatched elements: 4 / 20 (20%)
2025-01-17T11:32:04.5776460Z E           Max absolute difference among violations: 24
2025-01-17T11:32:04.5776550Z E           Max relative difference among violations: 0.65
2025-01-17T11:32:04.5776680Z E            ACTUAL: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-17T11:32:04.5776740Z E                    2,   5,   5,   5,   5,   0,   0])
2025-01-17T11:32:04.5776870Z E            DESIRED: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-17T11:32:04.5776930Z E                    2,   5,   5,   5,   5,   0,   0])
2025-01-17T11:32:04.5776930Z 
2025-01-17T11:32:04.5777090Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5777210Z ---------------------------- Captured stdout setup -----------------------------
2025-01-17T11:32:04.5777390Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-17T11:32:04.5777640Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-17T11:32:04.5777750Z ------------------------------ Captured log setup ------------------------------
2025-01-17T11:32:04.5778030Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-01-17T11:32:04.5778210Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-01-17T11:32:04.5778210Z 
2025-01-17T11:32:04.5778420Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133aba720>
2025-01-17T11:32:04.5778660Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>
2025-01-17T11:32:04.5778910Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x15ea95a00>
2025-01-17T11:32:04.5779130Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data0]>>
2025-01-17T11:32:04.5779130Z 
2025-01-17T11:32:04.5779200Z     def test_calculate_plotting_data(
2025-01-17T11:32:04.5779240Z         self,
2025-01-17T11:32:04.5779310Z         plotter_calculate_plotting_data,
2025-01-17T11:32:04.5779370Z         calculate_plotting_data_hdf,
2025-01-17T11:32:04.5779710Z         request,
2025-01-17T11:32:04.5779770Z     ):
2025-01-17T11:32:04.5779850Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5779990Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:32:04.5780040Z         group = "plot_data_hdf/"
2025-01-17T11:32:04.5780230Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:32:04.5780290Z             plot_object = getattr(
2025-01-17T11:32:04.5780380Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:32:04.5780430Z             )
2025-01-17T11:32:04.5780500Z             if attribute_type == "attributes_np":
2025-01-17T11:32:04.5780620Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:32:04.5780700Z                     plot_object = plot_object.cgs.value
2025-01-17T11:32:04.5780760Z >               np.testing.assert_allclose(
2025-01-17T11:32:04.5780860Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:32:04.5780910Z                 )
2025-01-17T11:32:04.5780910Z 
2025-01-17T11:32:04.5781020Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:32:04.5781100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5781110Z 
2025-01-17T11:32:04.5781470Z args = (<function assert_allclose.<locals>.compare at 0x150ca65c0>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, .....), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-01-17T11:32:04.5781550Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5781750Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5781760Z 
2025-01-17T11:32:04.5781800Z     @wraps(func)
2025-01-17T11:32:04.5781860Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5781910Z         with self._recreate_cm():
2025-01-17T11:32:04.5781970Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5782020Z E           AssertionError: 
2025-01-17T11:32:04.5782100Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5782140Z E           
2025-01-17T11:32:04.5782220Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-17T11:32:04.5782320Z E           Max absolute difference among violations: 4.3299331e-05
2025-01-17T11:32:04.5782430Z E           Max relative difference among violations: 4.76021355
2025-01-17T11:32:04.5782560Z E            ACTUAL: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.5782620Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5782750Z E            DESIRED: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.5782810Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5782810Z 
2025-01-17T11:32:04.5782960Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5783150Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-01-17T11:32:04.5783150Z 
2025-01-17T11:32:04.5783350Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133abae70>
2025-01-17T11:32:04.5783600Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>
2025-01-17T11:32:04.5783850Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x15ea95dc0>
2025-01-17T11:32:04.5784060Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data1]>>
2025-01-17T11:32:04.5784070Z 
2025-01-17T11:32:04.5784130Z     def test_calculate_plotting_data(
2025-01-17T11:32:04.5784180Z         self,
2025-01-17T11:32:04.5784240Z         plotter_calculate_plotting_data,
2025-01-17T11:32:04.5784300Z         calculate_plotting_data_hdf,
2025-01-17T11:32:04.5784390Z         request,
2025-01-17T11:32:04.5784430Z     ):
2025-01-17T11:32:04.5784500Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5784650Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:32:04.5784700Z         group = "plot_data_hdf/"
2025-01-17T11:32:04.5785060Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:32:04.5785120Z             plot_object = getattr(
2025-01-17T11:32:04.5785210Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:32:04.5785250Z             )
2025-01-17T11:32:04.5785330Z             if attribute_type == "attributes_np":
2025-01-17T11:32:04.5785450Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:32:04.5785520Z                     plot_object = plot_object.cgs.value
2025-01-17T11:32:04.5785590Z >               np.testing.assert_allclose(
2025-01-17T11:32:04.5785690Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:32:04.5785730Z                 )
2025-01-17T11:32:04.5785740Z 
2025-01-17T11:32:04.5785840Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:32:04.5785930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5785930Z 
2025-01-17T11:32:04.5786290Z args = (<function assert_allclose.<locals>.compare at 0x150c687c0>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, .....), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-01-17T11:32:04.5786370Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5786570Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5786570Z 
2025-01-17T11:32:04.5786620Z     @wraps(func)
2025-01-17T11:32:04.5786670Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5786730Z         with self._recreate_cm():
2025-01-17T11:32:04.5786790Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5786840Z E           AssertionError: 
2025-01-17T11:32:04.5786920Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5786960Z E           
2025-01-17T11:32:04.5787030Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-17T11:32:04.5787140Z E           Max absolute difference among violations: 4.3299331e-05
2025-01-17T11:32:04.5787240Z E           Max relative difference among violations: 4.76021355
2025-01-17T11:32:04.5787370Z E            ACTUAL: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.5787430Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5787560Z E            DESIRED: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.5787620Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5787620Z 
2025-01-17T11:32:04.5787780Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5787960Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-01-17T11:32:04.5787960Z 
2025-01-17T11:32:04.5788170Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133abb2f0>
2025-01-17T11:32:04.5788400Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>
2025-01-17T11:32:04.5788660Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1533fcd10>
2025-01-17T11:32:04.5788880Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data2]>>
2025-01-17T11:32:04.5788880Z 
2025-01-17T11:32:04.5788950Z     def test_calculate_plotting_data(
2025-01-17T11:32:04.5788990Z         self,
2025-01-17T11:32:04.5789050Z         plotter_calculate_plotting_data,
2025-01-17T11:32:04.5789110Z         calculate_plotting_data_hdf,
2025-01-17T11:32:04.5789160Z         request,
2025-01-17T11:32:04.5789200Z     ):
2025-01-17T11:32:04.5789320Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5789470Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:32:04.5789530Z         group = "plot_data_hdf/"
2025-01-17T11:32:04.5789670Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:32:04.5789770Z             plot_object = getattr(
2025-01-17T11:32:04.5789870Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:32:04.5789910Z             )
2025-01-17T11:32:04.5789990Z             if attribute_type == "attributes_np":
2025-01-17T11:32:04.5790110Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:32:04.5790190Z                     plot_object = plot_object.cgs.value
2025-01-17T11:32:04.5790260Z >               np.testing.assert_allclose(
2025-01-17T11:32:04.5790360Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:32:04.5790400Z                 )
2025-01-17T11:32:04.5790410Z 
2025-01-17T11:32:04.5790520Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:32:04.5790600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5790600Z 
2025-01-17T11:32:04.5790960Z args = (<function assert_allclose.<locals>.compare at 0x150c6b920>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, .....), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-01-17T11:32:04.5791040Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5791250Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5791250Z 
2025-01-17T11:32:04.5791290Z     @wraps(func)
2025-01-17T11:32:04.5791350Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5791410Z         with self._recreate_cm():
2025-01-17T11:32:04.5791470Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5791520Z E           AssertionError: 
2025-01-17T11:32:04.5791610Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5791650Z E           
2025-01-17T11:32:04.5791720Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-17T11:32:04.5791820Z E           Max absolute difference among violations: 4.3299331e-05
2025-01-17T11:32:04.5791920Z E           Max relative difference among violations: 4.76021355
2025-01-17T11:32:04.5792050Z E            ACTUAL: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.5792110Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5792240Z E            DESIRED: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.5792300Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5792310Z 
2025-01-17T11:32:04.5792460Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5792630Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-01-17T11:32:04.5792640Z 
2025-01-17T11:32:04.5792850Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133abb3e0>
2025-01-17T11:32:04.5793080Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>
2025-01-17T11:32:04.5793340Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x173873e60>
2025-01-17T11:32:04.5793560Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data3]>>
2025-01-17T11:32:04.5793560Z 
2025-01-17T11:32:04.5793620Z     def test_calculate_plotting_data(
2025-01-17T11:32:04.5793680Z         self,
2025-01-17T11:32:04.5793740Z         plotter_calculate_plotting_data,
2025-01-17T11:32:04.5793800Z         calculate_plotting_data_hdf,
2025-01-17T11:32:04.5793850Z         request,
2025-01-17T11:32:04.5793890Z     ):
2025-01-17T11:32:04.5793970Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5794160Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:32:04.5794220Z         group = "plot_data_hdf/"
2025-01-17T11:32:04.5794360Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:32:04.5794410Z             plot_object = getattr(
2025-01-17T11:32:04.5794560Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:32:04.5794600Z             )
2025-01-17T11:32:04.5794670Z             if attribute_type == "attributes_np":
2025-01-17T11:32:04.5794800Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:32:04.5794870Z                     plot_object = plot_object.cgs.value
2025-01-17T11:32:04.5794940Z >               np.testing.assert_allclose(
2025-01-17T11:32:04.5795040Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:32:04.5795080Z                 )
2025-01-17T11:32:04.5795090Z 
2025-01-17T11:32:04.5795190Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:32:04.5795280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5795290Z 
2025-01-17T11:32:04.5795650Z args = (<function assert_allclose.<locals>.compare at 0x150c68c20>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, .....), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-01-17T11:32:04.5795730Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5795930Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5795930Z 
2025-01-17T11:32:04.5795980Z     @wraps(func)
2025-01-17T11:32:04.5796030Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5796090Z         with self._recreate_cm():
2025-01-17T11:32:04.5796140Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5796200Z E           AssertionError: 
2025-01-17T11:32:04.5796280Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5796320Z E           
2025-01-17T11:32:04.5796390Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-17T11:32:04.5796500Z E           Max absolute difference among violations: 4.3299331e-05
2025-01-17T11:32:04.5800240Z E           Max relative difference among violations: 4.76021355
2025-01-17T11:32:04.5800440Z E            ACTUAL: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.5800500Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5800630Z E            DESIRED: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.5800690Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5800700Z 
2025-01-17T11:32:04.5800860Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5801190Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-01-17T11:32:04.5801200Z 
2025-01-17T11:32:04.5801410Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133abb4d0>
2025-01-17T11:32:04.5801650Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>
2025-01-17T11:32:04.5801900Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1744a39e0>
2025-01-17T11:32:04.5802130Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data4]>>
2025-01-17T11:32:04.5802130Z 
2025-01-17T11:32:04.5802200Z     def test_calculate_plotting_data(
2025-01-17T11:32:04.5802250Z         self,
2025-01-17T11:32:04.5802310Z         plotter_calculate_plotting_data,
2025-01-17T11:32:04.5802370Z         calculate_plotting_data_hdf,
2025-01-17T11:32:04.5802410Z         request,
2025-01-17T11:32:04.5802450Z     ):
2025-01-17T11:32:04.5802530Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5803260Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:32:04.5803320Z         group = "plot_data_hdf/"
2025-01-17T11:32:04.5803460Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:32:04.5803520Z             plot_object = getattr(
2025-01-17T11:32:04.5803710Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:32:04.5803750Z             )
2025-01-17T11:32:04.5803830Z             if attribute_type == "attributes_np":
2025-01-17T11:32:04.5803950Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:32:04.5804030Z                     plot_object = plot_object.cgs.value
2025-01-17T11:32:04.5804090Z >               np.testing.assert_allclose(
2025-01-17T11:32:04.5804190Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:32:04.5804240Z                 )
2025-01-17T11:32:04.5804240Z 
2025-01-17T11:32:04.5804350Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:32:04.5804430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5804440Z 
2025-01-17T11:32:04.5804800Z args = (<function assert_allclose.<locals>.compare at 0x150ca2fc0>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, .....), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-01-17T11:32:04.5804870Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5805080Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5805080Z 
2025-01-17T11:32:04.5805130Z     @wraps(func)
2025-01-17T11:32:04.5805180Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5805240Z         with self._recreate_cm():
2025-01-17T11:32:04.5805300Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5805360Z E           AssertionError: 
2025-01-17T11:32:04.5805430Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5805480Z E           
2025-01-17T11:32:04.5805560Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-17T11:32:04.5805660Z E           Max absolute difference among violations: 3.16368526e-05
2025-01-17T11:32:04.5805770Z E           Max relative difference among violations: 178.93768705
2025-01-17T11:32:04.5805900Z E            ACTUAL: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.5805970Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5806090Z E            DESIRED: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.5806160Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5806160Z 
2025-01-17T11:32:04.5806310Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5806490Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-01-17T11:32:04.5806490Z 
2025-01-17T11:32:04.5806700Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133abb590>
2025-01-17T11:32:04.5806940Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>
2025-01-17T11:32:04.5807190Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1744a1a00>
2025-01-17T11:32:04.5807410Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data5]>>
2025-01-17T11:32:04.5807410Z 
2025-01-17T11:32:04.5807480Z     def test_calculate_plotting_data(
2025-01-17T11:32:04.5807520Z         self,
2025-01-17T11:32:04.5807590Z         plotter_calculate_plotting_data,
2025-01-17T11:32:04.5807650Z         calculate_plotting_data_hdf,
2025-01-17T11:32:04.5807700Z         request,
2025-01-17T11:32:04.5807740Z     ):
2025-01-17T11:32:04.5807820Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5807960Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:32:04.5808080Z         group = "plot_data_hdf/"
2025-01-17T11:32:04.5808220Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:32:04.5808280Z             plot_object = getattr(
2025-01-17T11:32:04.5808370Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:32:04.5808670Z             )
2025-01-17T11:32:04.5808740Z             if attribute_type == "attributes_np":
2025-01-17T11:32:04.5808860Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:32:04.5808940Z                     plot_object = plot_object.cgs.value
2025-01-17T11:32:04.5809010Z >               np.testing.assert_allclose(
2025-01-17T11:32:04.5809100Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:32:04.5809150Z                 )
2025-01-17T11:32:04.5809150Z 
2025-01-17T11:32:04.5809260Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:32:04.5809350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5809350Z 
2025-01-17T11:32:04.5809700Z args = (<function assert_allclose.<locals>.compare at 0x3141df100>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, .....), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-01-17T11:32:04.5809780Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5809980Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5809980Z 
2025-01-17T11:32:04.5810040Z     @wraps(func)
2025-01-17T11:32:04.5810090Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5810150Z         with self._recreate_cm():
2025-01-17T11:32:04.5810200Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5810260Z E           AssertionError: 
2025-01-17T11:32:04.5810330Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5810370Z E           
2025-01-17T11:32:04.5810450Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-17T11:32:04.5810560Z E           Max absolute difference among violations: 3.16368526e-05
2025-01-17T11:32:04.5810660Z E           Max relative difference among violations: 178.93768705
2025-01-17T11:32:04.5810790Z E            ACTUAL: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.5810850Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5810980Z E            DESIRED: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.5811050Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5811050Z 
2025-01-17T11:32:04.5811200Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5811380Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-01-17T11:32:04.5811380Z 
2025-01-17T11:32:04.5811580Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133abb650>
2025-01-17T11:32:04.5811820Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>
2025-01-17T11:32:04.5812070Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1786bf680>
2025-01-17T11:32:04.5812290Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data6]>>
2025-01-17T11:32:04.5812300Z 
2025-01-17T11:32:04.5812360Z     def test_calculate_plotting_data(
2025-01-17T11:32:04.5812400Z         self,
2025-01-17T11:32:04.5812470Z         plotter_calculate_plotting_data,
2025-01-17T11:32:04.5812530Z         calculate_plotting_data_hdf,
2025-01-17T11:32:04.5812570Z         request,
2025-01-17T11:32:04.5812620Z     ):
2025-01-17T11:32:04.5812690Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5812840Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:32:04.5812970Z         group = "plot_data_hdf/"
2025-01-17T11:32:04.5813110Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:32:04.5813160Z             plot_object = getattr(
2025-01-17T11:32:04.5813260Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:32:04.5813350Z             )
2025-01-17T11:32:04.5813430Z             if attribute_type == "attributes_np":
2025-01-17T11:32:04.5813550Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:32:04.5813630Z                     plot_object = plot_object.cgs.value
2025-01-17T11:32:04.5813690Z >               np.testing.assert_allclose(
2025-01-17T11:32:04.5813780Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:32:04.5813830Z                 )
2025-01-17T11:32:04.5813830Z 
2025-01-17T11:32:04.5813940Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:32:04.5814020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5814030Z 
2025-01-17T11:32:04.5814380Z args = (<function assert_allclose.<locals>.compare at 0x150c687c0>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, .....), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-01-17T11:32:04.5814460Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5814670Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5814670Z 
2025-01-17T11:32:04.5814720Z     @wraps(func)
2025-01-17T11:32:04.5814770Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5814820Z         with self._recreate_cm():
2025-01-17T11:32:04.5814880Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5814930Z E           AssertionError: 
2025-01-17T11:32:04.5815010Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5815060Z E           
2025-01-17T11:32:04.5815120Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-17T11:32:04.5815230Z E           Max absolute difference among violations: 3.16368526e-05
2025-01-17T11:32:04.5815330Z E           Max relative difference among violations: 178.93768705
2025-01-17T11:32:04.5815470Z E            ACTUAL: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.5815530Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5815660Z E            DESIRED: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.5815720Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5815730Z 
2025-01-17T11:32:04.5815890Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5816060Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-01-17T11:32:04.5816060Z 
2025-01-17T11:32:04.5816270Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133abb710>
2025-01-17T11:32:04.5816510Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>
2025-01-17T11:32:04.5816760Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x17ec40350>
2025-01-17T11:32:04.5816970Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data7]>>
2025-01-17T11:32:04.5816980Z 
2025-01-17T11:32:04.5817050Z     def test_calculate_plotting_data(
2025-01-17T11:32:04.5817090Z         self,
2025-01-17T11:32:04.5817160Z         plotter_calculate_plotting_data,
2025-01-17T11:32:04.5817220Z         calculate_plotting_data_hdf,
2025-01-17T11:32:04.5817270Z         request,
2025-01-17T11:32:04.5817310Z     ):
2025-01-17T11:32:04.5817390Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5817530Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:32:04.5817590Z         group = "plot_data_hdf/"
2025-01-17T11:32:04.5817790Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:32:04.5817850Z             plot_object = getattr(
2025-01-17T11:32:04.5817940Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:32:04.5817980Z             )
2025-01-17T11:32:04.5818060Z             if attribute_type == "attributes_np":
2025-01-17T11:32:04.5818230Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:32:04.5818320Z                     plot_object = plot_object.cgs.value
2025-01-17T11:32:04.5818380Z >               np.testing.assert_allclose(
2025-01-17T11:32:04.5818480Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:32:04.5818530Z                 )
2025-01-17T11:32:04.5818530Z 
2025-01-17T11:32:04.5818640Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:32:04.5818730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5818730Z 
2025-01-17T11:32:04.5819090Z args = (<function assert_allclose.<locals>.compare at 0x150c6af20>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, .....), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-01-17T11:32:04.5819170Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5819380Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5819380Z 
2025-01-17T11:32:04.5819420Z     @wraps(func)
2025-01-17T11:32:04.5819480Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5819540Z         with self._recreate_cm():
2025-01-17T11:32:04.5819600Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5819650Z E           AssertionError: 
2025-01-17T11:32:04.5819730Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5819780Z E           
2025-01-17T11:32:04.5819850Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-17T11:32:04.5819960Z E           Max absolute difference among violations: 3.16368526e-05
2025-01-17T11:32:04.5820060Z E           Max relative difference among violations: 178.93768705
2025-01-17T11:32:04.5820190Z E            ACTUAL: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.5820260Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5820390Z E            DESIRED: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.5820450Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5820460Z 
2025-01-17T11:32:04.5820610Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5820780Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-01-17T11:32:04.5820790Z 
2025-01-17T11:32:04.5820990Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133abb7d0>
2025-01-17T11:32:04.5821220Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>
2025-01-17T11:32:04.5821480Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x36d977740>
2025-01-17T11:32:04.5821690Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data8]>>
2025-01-17T11:32:04.5821700Z 
2025-01-17T11:32:04.5821760Z     def test_calculate_plotting_data(
2025-01-17T11:32:04.5821810Z         self,
2025-01-17T11:32:04.5821880Z         plotter_calculate_plotting_data,
2025-01-17T11:32:04.5821930Z         calculate_plotting_data_hdf,
2025-01-17T11:32:04.5821980Z         request,
2025-01-17T11:32:04.5822020Z     ):
2025-01-17T11:32:04.5822100Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5822240Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:32:04.5822290Z         group = "plot_data_hdf/"
2025-01-17T11:32:04.5822430Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:32:04.5822850Z             plot_object = getattr(
2025-01-17T11:32:04.5822940Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:32:04.5822990Z             )
2025-01-17T11:32:04.5823060Z             if attribute_type == "attributes_np":
2025-01-17T11:32:04.5823250Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:32:04.5823330Z                     plot_object = plot_object.cgs.value
2025-01-17T11:32:04.5823390Z >               np.testing.assert_allclose(
2025-01-17T11:32:04.5823490Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:32:04.5823530Z                 )
2025-01-17T11:32:04.5823540Z 
2025-01-17T11:32:04.5823640Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:32:04.5823730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5823730Z 
2025-01-17T11:32:04.5824090Z args = (<function assert_allclose.<locals>.compare at 0x3164299e0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, .....), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-01-17T11:32:04.5824170Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5824380Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5824380Z 
2025-01-17T11:32:04.5824430Z     @wraps(func)
2025-01-17T11:32:04.5824480Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5824540Z         with self._recreate_cm():
2025-01-17T11:32:04.5824600Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5824650Z E           AssertionError: 
2025-01-17T11:32:04.5824730Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5824780Z E           
2025-01-17T11:32:04.5824850Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-17T11:32:04.5824950Z E           Max absolute difference among violations: 5.1807441e+47
2025-01-17T11:32:04.5825050Z E           Max relative difference among violations: 4.76021355
2025-01-17T11:32:04.5825180Z E            ACTUAL: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.5825250Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5825390Z E            DESIRED: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.5825450Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5825450Z 
2025-01-17T11:32:04.5825600Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5825780Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-01-17T11:32:04.5825780Z 
2025-01-17T11:32:04.5825980Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133abb890>
2025-01-17T11:32:04.5826220Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>
2025-01-17T11:32:04.5826470Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x36d9d7170>
2025-01-17T11:32:04.5826700Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data9]>>
2025-01-17T11:32:04.5826700Z 
2025-01-17T11:32:04.5826770Z     def test_calculate_plotting_data(
2025-01-17T11:32:04.5826820Z         self,
2025-01-17T11:32:04.5826880Z         plotter_calculate_plotting_data,
2025-01-17T11:32:04.5826940Z         calculate_plotting_data_hdf,
2025-01-17T11:32:04.5826980Z         request,
2025-01-17T11:32:04.5827020Z     ):
2025-01-17T11:32:04.5827100Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5827240Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:32:04.5827300Z         group = "plot_data_hdf/"
2025-01-17T11:32:04.5827430Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:32:04.5827570Z             plot_object = getattr(
2025-01-17T11:32:04.5827660Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:32:04.5827710Z             )
2025-01-17T11:32:04.5827780Z             if attribute_type == "attributes_np":
2025-01-17T11:32:04.5827900Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:32:04.5828190Z                     plot_object = plot_object.cgs.value
2025-01-17T11:32:04.5828260Z >               np.testing.assert_allclose(
2025-01-17T11:32:04.5828360Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:32:04.5828400Z                 )
2025-01-17T11:32:04.5828400Z 
2025-01-17T11:32:04.5828510Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:32:04.5828600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5828600Z 
2025-01-17T11:32:04.5828960Z args = (<function assert_allclose.<locals>.compare at 0x31641c0e0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, .....), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-01-17T11:32:04.5829030Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5829240Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5829240Z 
2025-01-17T11:32:04.5829290Z     @wraps(func)
2025-01-17T11:32:04.5829340Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5829400Z         with self._recreate_cm():
2025-01-17T11:32:04.5829450Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5829510Z E           AssertionError: 
2025-01-17T11:32:04.5829590Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5829630Z E           
2025-01-17T11:32:04.5829700Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-17T11:32:04.5829800Z E           Max absolute difference among violations: 5.1807441e+47
2025-01-17T11:32:04.5829900Z E           Max relative difference among violations: 4.76021355
2025-01-17T11:32:04.5830030Z E            ACTUAL: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.5830100Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5830230Z E            DESIRED: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.5830290Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5830300Z 
2025-01-17T11:32:04.5830450Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5830630Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-01-17T11:32:04.5830630Z 
2025-01-17T11:32:04.5830840Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133abb950>
2025-01-17T11:32:04.5831070Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>
2025-01-17T11:32:04.5831330Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x15224cfb0>
2025-01-17T11:32:04.5831550Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data10]>>
2025-01-17T11:32:04.5831550Z 
2025-01-17T11:32:04.5831630Z     def test_calculate_plotting_data(
2025-01-17T11:32:04.5831670Z         self,
2025-01-17T11:32:04.5831730Z         plotter_calculate_plotting_data,
2025-01-17T11:32:04.5831800Z         calculate_plotting_data_hdf,
2025-01-17T11:32:04.5831840Z         request,
2025-01-17T11:32:04.5831880Z     ):
2025-01-17T11:32:04.5831960Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5832100Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:32:04.5832150Z         group = "plot_data_hdf/"
2025-01-17T11:32:04.5832300Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:32:04.5832350Z             plot_object = getattr(
2025-01-17T11:32:04.5832530Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:32:04.5832580Z             )
2025-01-17T11:32:04.5832650Z             if attribute_type == "attributes_np":
2025-01-17T11:32:04.5832770Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:32:04.5832900Z                     plot_object = plot_object.cgs.value
2025-01-17T11:32:04.5832970Z >               np.testing.assert_allclose(
2025-01-17T11:32:04.5833070Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:32:04.5833110Z                 )
2025-01-17T11:32:04.5833110Z 
2025-01-17T11:32:04.5833230Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:32:04.5833310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5833310Z 
2025-01-17T11:32:04.5833670Z args = (<function assert_allclose.<locals>.compare at 0x31641c360>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, .....), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-01-17T11:32:04.5833750Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5833950Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5833960Z 
2025-01-17T11:32:04.5834010Z     @wraps(func)
2025-01-17T11:32:04.5834070Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5834130Z         with self._recreate_cm():
2025-01-17T11:32:04.5834190Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5834250Z E           AssertionError: 
2025-01-17T11:32:04.5834320Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5834370Z E           
2025-01-17T11:32:04.5834440Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-17T11:32:04.5834540Z E           Max absolute difference among violations: 5.1807441e+47
2025-01-17T11:32:04.5834640Z E           Max relative difference among violations: 4.76021355
2025-01-17T11:32:04.5834770Z E            ACTUAL: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.5834830Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5834960Z E            DESIRED: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.5835020Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5835030Z 
2025-01-17T11:32:04.5835180Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5835360Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-01-17T11:32:04.5835360Z 
2025-01-17T11:32:04.5835560Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133abba10>
2025-01-17T11:32:04.5835800Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>
2025-01-17T11:32:04.5836060Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x135eb0680>
2025-01-17T11:32:04.5836280Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data11]>>
2025-01-17T11:32:04.5836280Z 
2025-01-17T11:32:04.5836350Z     def test_calculate_plotting_data(
2025-01-17T11:32:04.5836390Z         self,
2025-01-17T11:32:04.5836460Z         plotter_calculate_plotting_data,
2025-01-17T11:32:04.5836520Z         calculate_plotting_data_hdf,
2025-01-17T11:32:04.5836560Z         request,
2025-01-17T11:32:04.5836600Z     ):
2025-01-17T11:32:04.5836680Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5836810Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:32:04.5836870Z         group = "plot_data_hdf/"
2025-01-17T11:32:04.5837010Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:32:04.5837060Z             plot_object = getattr(
2025-01-17T11:32:04.5837150Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:32:04.5837250Z             )
2025-01-17T11:32:04.5837320Z             if attribute_type == "attributes_np":
2025-01-17T11:32:04.5837440Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:32:04.5837520Z                     plot_object = plot_object.cgs.value
2025-01-17T11:32:04.5837640Z >               np.testing.assert_allclose(
2025-01-17T11:32:04.5837740Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:32:04.5837780Z                 )
2025-01-17T11:32:04.5837780Z 
2025-01-17T11:32:04.5837900Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:32:04.5837980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5837990Z 
2025-01-17T11:32:04.5838350Z args = (<function assert_allclose.<locals>.compare at 0x1528a6c00>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, .....), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-01-17T11:32:04.5838420Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5838620Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5838630Z 
2025-01-17T11:32:04.5838670Z     @wraps(func)
2025-01-17T11:32:04.5838730Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5838790Z         with self._recreate_cm():
2025-01-17T11:32:04.5838850Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5838900Z E           AssertionError: 
2025-01-17T11:32:04.5838980Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5839020Z E           
2025-01-17T11:32:04.5839100Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-17T11:32:04.5839200Z E           Max absolute difference among violations: 5.1807441e+47
2025-01-17T11:32:04.5839300Z E           Max relative difference among violations: 4.76021355
2025-01-17T11:32:04.5839420Z E            ACTUAL: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.5839490Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5839620Z E            DESIRED: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.5839680Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5839690Z 
2025-01-17T11:32:04.5839840Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5840020Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-01-17T11:32:04.5840030Z 
2025-01-17T11:32:04.5840230Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133abbb00>
2025-01-17T11:32:04.5840470Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>
2025-01-17T11:32:04.5840710Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x15d4d4f20>
2025-01-17T11:32:04.5840940Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data12]>>
2025-01-17T11:32:04.5840940Z 
2025-01-17T11:32:04.5841000Z     def test_calculate_plotting_data(
2025-01-17T11:32:04.5841050Z         self,
2025-01-17T11:32:04.5841240Z         plotter_calculate_plotting_data,
2025-01-17T11:32:04.5841310Z         calculate_plotting_data_hdf,
2025-01-17T11:32:04.5841360Z         request,
2025-01-17T11:32:04.5841400Z     ):
2025-01-17T11:32:04.5841470Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5841610Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:32:04.5841680Z         group = "plot_data_hdf/"
2025-01-17T11:32:04.5841810Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:32:04.5841870Z             plot_object = getattr(
2025-01-17T11:32:04.5841960Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:32:04.5842260Z             )
2025-01-17T11:32:04.5842330Z             if attribute_type == "attributes_np":
2025-01-17T11:32:04.5842460Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:32:04.5842530Z                     plot_object = plot_object.cgs.value
2025-01-17T11:32:04.5842650Z >               np.testing.assert_allclose(
2025-01-17T11:32:04.5842750Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:32:04.5842790Z                 )
2025-01-17T11:32:04.5842800Z 
2025-01-17T11:32:04.5842900Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:32:04.5842990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5842990Z 
2025-01-17T11:32:04.5843350Z args = (<function assert_allclose.<locals>.compare at 0x150ca7a60>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, .....), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-01-17T11:32:04.5843420Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5843630Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5843630Z 
2025-01-17T11:32:04.5843680Z     @wraps(func)
2025-01-17T11:32:04.5843730Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5843790Z         with self._recreate_cm():
2025-01-17T11:32:04.5843850Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5843910Z E           AssertionError: 
2025-01-17T11:32:04.5843980Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5844030Z E           
2025-01-17T11:32:04.5844100Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-17T11:32:04.5844200Z E           Max absolute difference among violations: 3.78533417e+47
2025-01-17T11:32:04.5844300Z E           Max relative difference among violations: 178.93768705
2025-01-17T11:32:04.5844430Z E            ACTUAL: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.5844500Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5844630Z E            DESIRED: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.5844690Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5844690Z 
2025-01-17T11:32:04.5844850Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5845030Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-01-17T11:32:04.5845030Z 
2025-01-17T11:32:04.5845240Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133abbc50>
2025-01-17T11:32:04.5845480Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>
2025-01-17T11:32:04.5845730Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x314c105c0>
2025-01-17T11:32:04.5845950Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data13]>>
2025-01-17T11:32:04.5845960Z 
2025-01-17T11:32:04.5846020Z     def test_calculate_plotting_data(
2025-01-17T11:32:04.5846060Z         self,
2025-01-17T11:32:04.5846130Z         plotter_calculate_plotting_data,
2025-01-17T11:32:04.5846190Z         calculate_plotting_data_hdf,
2025-01-17T11:32:04.5846230Z         request,
2025-01-17T11:32:04.5846280Z     ):
2025-01-17T11:32:04.5846350Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5846490Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:32:04.5846550Z         group = "plot_data_hdf/"
2025-01-17T11:32:04.5846690Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:32:04.5846740Z             plot_object = getattr(
2025-01-17T11:32:04.5846840Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:32:04.5846880Z             )
2025-01-17T11:32:04.5847010Z             if attribute_type == "attributes_np":
2025-01-17T11:32:04.5847130Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:32:04.5847210Z                     plot_object = plot_object.cgs.value
2025-01-17T11:32:04.5847270Z >               np.testing.assert_allclose(
2025-01-17T11:32:04.5847550Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:32:04.5847600Z                 )
2025-01-17T11:32:04.5847600Z 
2025-01-17T11:32:04.5847710Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:32:04.5847790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5847800Z 
2025-01-17T11:32:04.5848160Z args = (<function assert_allclose.<locals>.compare at 0x150c6b560>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, .....), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-01-17T11:32:04.5848230Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5848440Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5848440Z 
2025-01-17T11:32:04.5848490Z     @wraps(func)
2025-01-17T11:32:04.5848540Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5848600Z         with self._recreate_cm():
2025-01-17T11:32:04.5848660Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5848710Z E           AssertionError: 
2025-01-17T11:32:04.5848790Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5848830Z E           
2025-01-17T11:32:04.5848910Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-17T11:32:04.5849010Z E           Max absolute difference among violations: 3.78533417e+47
2025-01-17T11:32:04.5849110Z E           Max relative difference among violations: 178.93768705
2025-01-17T11:32:04.5849240Z E            ACTUAL: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.5849310Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5849440Z E            DESIRED: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.5849500Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5849500Z 
2025-01-17T11:32:04.5849660Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5849830Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-01-17T11:32:04.5849840Z 
2025-01-17T11:32:04.5850040Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133abbd70>
2025-01-17T11:32:04.5850280Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>
2025-01-17T11:32:04.5850530Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x159119100>
2025-01-17T11:32:04.5850750Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data14]>>
2025-01-17T11:32:04.5850760Z 
2025-01-17T11:32:04.5850820Z     def test_calculate_plotting_data(
2025-01-17T11:32:04.5850860Z         self,
2025-01-17T11:32:04.5850930Z         plotter_calculate_plotting_data,
2025-01-17T11:32:04.5850990Z         calculate_plotting_data_hdf,
2025-01-17T11:32:04.5851040Z         request,
2025-01-17T11:32:04.5851080Z     ):
2025-01-17T11:32:04.5851160Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5851300Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:32:04.5851360Z         group = "plot_data_hdf/"
2025-01-17T11:32:04.5851490Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:32:04.5851550Z             plot_object = getattr(
2025-01-17T11:32:04.5851650Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:32:04.5851690Z             )
2025-01-17T11:32:04.5851760Z             if attribute_type == "attributes_np":
2025-01-17T11:32:04.5851980Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:32:04.5852060Z                     plot_object = plot_object.cgs.value
2025-01-17T11:32:04.5852120Z >               np.testing.assert_allclose(
2025-01-17T11:32:04.5852220Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:32:04.5852310Z                 )
2025-01-17T11:32:04.5852320Z 
2025-01-17T11:32:04.5852430Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:32:04.5852520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5852520Z 
2025-01-17T11:32:04.5852880Z args = (<function assert_allclose.<locals>.compare at 0x31641fd80>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, .....), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-01-17T11:32:04.5852960Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5853160Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5853170Z 
2025-01-17T11:32:04.5853210Z     @wraps(func)
2025-01-17T11:32:04.5853260Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5853320Z         with self._recreate_cm():
2025-01-17T11:32:04.5853380Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5853440Z E           AssertionError: 
2025-01-17T11:32:04.5853510Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5853550Z E           
2025-01-17T11:32:04.5853630Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-17T11:32:04.5853730Z E           Max absolute difference among violations: 3.78533417e+47
2025-01-17T11:32:04.5853830Z E           Max relative difference among violations: 178.93768705
2025-01-17T11:32:04.5853960Z E            ACTUAL: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.5854030Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5854160Z E            DESIRED: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.5854230Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5854230Z 
2025-01-17T11:32:04.5854380Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5854560Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-01-17T11:32:04.5854570Z 
2025-01-17T11:32:04.5854760Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133abbe30>
2025-01-17T11:32:04.5855010Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>
2025-01-17T11:32:04.5855260Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x15d6ea7e0>
2025-01-17T11:32:04.5855480Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data15]>>
2025-01-17T11:32:04.5855480Z 
2025-01-17T11:32:04.5855550Z     def test_calculate_plotting_data(
2025-01-17T11:32:04.5855590Z         self,
2025-01-17T11:32:04.5855650Z         plotter_calculate_plotting_data,
2025-01-17T11:32:04.5855710Z         calculate_plotting_data_hdf,
2025-01-17T11:32:04.5855760Z         request,
2025-01-17T11:32:04.5855800Z     ):
2025-01-17T11:32:04.5855870Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5856020Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-17T11:32:04.5856070Z         group = "plot_data_hdf/"
2025-01-17T11:32:04.5856210Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-17T11:32:04.5856270Z             plot_object = getattr(
2025-01-17T11:32:04.5856360Z                 plotter_calculate_plotting_data, attribute_name
2025-01-17T11:32:04.5856410Z             )
2025-01-17T11:32:04.5856480Z             if attribute_type == "attributes_np":
2025-01-17T11:32:04.5856650Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-17T11:32:04.5856730Z                     plot_object = plot_object.cgs.value
2025-01-17T11:32:04.5856800Z >               np.testing.assert_allclose(
2025-01-17T11:32:04.5856900Z                     plot_object, expected.get(group + attribute_name)
2025-01-17T11:32:04.5857000Z                 )
2025-01-17T11:32:04.5857000Z 
2025-01-17T11:32:04.5857110Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-17T11:32:04.5861260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5861290Z 
2025-01-17T11:32:04.5861700Z args = (<function assert_allclose.<locals>.compare at 0x17815f740>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, .....), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-01-17T11:32:04.5861780Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5861980Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5862000Z 
2025-01-17T11:32:04.5862040Z     @wraps(func)
2025-01-17T11:32:04.5862100Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5862150Z         with self._recreate_cm():
2025-01-17T11:32:04.5862210Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5862270Z E           AssertionError: 
2025-01-17T11:32:04.5862350Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5862390Z E           
2025-01-17T11:32:04.5862470Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-17T11:32:04.5862570Z E           Max absolute difference among violations: 3.78533417e+47
2025-01-17T11:32:04.5862670Z E           Max relative difference among violations: 178.93768705
2025-01-17T11:32:04.5862800Z E            ACTUAL: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.5862870Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5863000Z E            DESIRED: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.5863060Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5863060Z 
2025-01-17T11:32:04.5863220Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5863380Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] ______
2025-01-17T11:32:04.5863390Z 
2025-01-17T11:32:04.5863590Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133ad54f0>
2025-01-17T11:32:04.5863840Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x399ca0140>
2025-01-17T11:32:04.5863900Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:32:04.5863960Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:32:04.5864040Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:32:04.5864150Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-17T11:32:04.5864320Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>)
2025-01-17T11:32:04.5864510Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply0]>>
2025-01-17T11:32:04.5864510Z 
2025-01-17T11:32:04.5864570Z     def test_generate_plot_mpl(
2025-01-17T11:32:04.5864690Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:32:04.5864740Z     ):
2025-01-17T11:32:04.5864810Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:32:04.5864890Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5865020Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:32:04.5865060Z     
2025-01-17T11:32:04.5865140Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:32:04.5865210Z             np.testing.assert_array_equal(
2025-01-17T11:32:04.5865320Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:32:04.5865400Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:32:04.5865890Z             )
2025-01-17T11:32:04.5865930Z     
2025-01-17T11:32:04.5866000Z         for index, data in enumerate(fig.data):
2025-01-17T11:32:04.5866080Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:32:04.5866140Z             if data.stackgroup:
2025-01-17T11:32:04.5866270Z                 assert (
2025-01-17T11:32:04.5866330Z                     data.stackgroup
2025-01-17T11:32:04.5866380Z                     == getattr(
2025-01-17T11:32:04.5866450Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5866520Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:32:04.5866570Z                     ).decode()
2025-01-17T11:32:04.5866620Z                 )
2025-01-17T11:32:04.5866670Z             if data.name:
2025-01-17T11:32:04.5866720Z                 assert (
2025-01-17T11:32:04.5866770Z                     data.name
2025-01-17T11:32:04.5866810Z                     == getattr(
2025-01-17T11:32:04.5866890Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5866960Z                         "_" + str(index) + "name",
2025-01-17T11:32:04.5867000Z                     ).decode()
2025-01-17T11:32:04.5867050Z                 )
2025-01-17T11:32:04.5867110Z             np.testing.assert_allclose(
2025-01-17T11:32:04.5867210Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:32:04.5867250Z             )
2025-01-17T11:32:04.5867310Z >           np.testing.assert_allclose(
2025-01-17T11:32:04.5867410Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:32:04.5867450Z             )
2025-01-17T11:32:04.5867450Z 
2025-01-17T11:32:04.5867560Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:32:04.5867650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5867650Z 
2025-01-17T11:32:04.5868010Z args = (<function assert_allclose.<locals>.compare at 0x15e3eaac0>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, .....), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-01-17T11:32:04.5868090Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5868300Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5868300Z 
2025-01-17T11:32:04.5868350Z     @wraps(func)
2025-01-17T11:32:04.5868400Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5868460Z         with self._recreate_cm():
2025-01-17T11:32:04.5868520Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5868570Z E           AssertionError: 
2025-01-17T11:32:04.5868650Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5868690Z E           
2025-01-17T11:32:04.5868760Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-17T11:32:04.5868860Z E           Max absolute difference among violations: 2.08771842e-13
2025-01-17T11:32:04.5868960Z E           Max relative difference among violations: 3.01858991
2025-01-17T11:32:04.5869090Z E            ACTUAL: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.5869150Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5869280Z E            DESIRED: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.5869340Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5869340Z 
2025-01-17T11:32:04.5869500Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5869660Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] ______
2025-01-17T11:32:04.5869660Z 
2025-01-17T11:32:04.5869870Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133ad7cb0>
2025-01-17T11:32:04.5870110Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1780dfd70>
2025-01-17T11:32:04.5870240Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:32:04.5870300Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:32:04.5870380Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:32:04.5870450Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-17T11:32:04.5870800Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>)
2025-01-17T11:32:04.5870990Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply1]>>
2025-01-17T11:32:04.5870990Z 
2025-01-17T11:32:04.5871050Z     def test_generate_plot_mpl(
2025-01-17T11:32:04.5871170Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:32:04.5871220Z     ):
2025-01-17T11:32:04.5871280Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:32:04.5871360Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5871490Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:32:04.5871530Z     
2025-01-17T11:32:04.5871620Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:32:04.5871680Z             np.testing.assert_array_equal(
2025-01-17T11:32:04.5871790Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:32:04.5871870Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:32:04.5871920Z             )
2025-01-17T11:32:04.5871960Z     
2025-01-17T11:32:04.5872030Z         for index, data in enumerate(fig.data):
2025-01-17T11:32:04.5872110Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:32:04.5872160Z             if data.stackgroup:
2025-01-17T11:32:04.5872210Z                 assert (
2025-01-17T11:32:04.5872260Z                     data.stackgroup
2025-01-17T11:32:04.5872310Z                     == getattr(
2025-01-17T11:32:04.5872380Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5872450Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:32:04.5872500Z                     ).decode()
2025-01-17T11:32:04.5872550Z                 )
2025-01-17T11:32:04.5872600Z             if data.name:
2025-01-17T11:32:04.5872640Z                 assert (
2025-01-17T11:32:04.5872690Z                     data.name
2025-01-17T11:32:04.5872740Z                     == getattr(
2025-01-17T11:32:04.5872820Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5872880Z                         "_" + str(index) + "name",
2025-01-17T11:32:04.5872930Z                     ).decode()
2025-01-17T11:32:04.5872970Z                 )
2025-01-17T11:32:04.5873030Z             np.testing.assert_allclose(
2025-01-17T11:32:04.5873130Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:32:04.5873170Z             )
2025-01-17T11:32:04.5873230Z >           np.testing.assert_allclose(
2025-01-17T11:32:04.5873320Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:32:04.5873360Z             )
2025-01-17T11:32:04.5873370Z 
2025-01-17T11:32:04.5873480Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:32:04.5873570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5873570Z 
2025-01-17T11:32:04.5873920Z args = (<function assert_allclose.<locals>.compare at 0x15e3eaf20>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, .....), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-01-17T11:32:04.5874000Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5874210Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5874210Z 
2025-01-17T11:32:04.5874260Z     @wraps(func)
2025-01-17T11:32:04.5874310Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5874370Z         with self._recreate_cm():
2025-01-17T11:32:04.5874430Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5874480Z E           AssertionError: 
2025-01-17T11:32:04.5874630Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5874670Z E           
2025-01-17T11:32:04.5874750Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-17T11:32:04.5874850Z E           Max absolute difference among violations: 2.08771842e-13
2025-01-17T11:32:04.5874990Z E           Max relative difference among violations: 3.01858991
2025-01-17T11:32:04.5875120Z E            ACTUAL: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.5875190Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5875320Z E            DESIRED: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.5875380Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5875380Z 
2025-01-17T11:32:04.5875540Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5875700Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] ______
2025-01-17T11:32:04.5875700Z 
2025-01-17T11:32:04.5875900Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133ad48c0>
2025-01-17T11:32:04.5876150Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x165b9a630>
2025-01-17T11:32:04.5876220Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:32:04.5876280Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:32:04.5876350Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:32:04.5876550Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-17T11:32:04.5876700Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>)
2025-01-17T11:32:04.5876890Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply2]>>
2025-01-17T11:32:04.5876890Z 
2025-01-17T11:32:04.5876950Z     def test_generate_plot_mpl(
2025-01-17T11:32:04.5877080Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:32:04.5877120Z     ):
2025-01-17T11:32:04.5877190Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:32:04.5877270Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5877400Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:32:04.5877440Z     
2025-01-17T11:32:04.5877530Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:32:04.5877590Z             np.testing.assert_array_equal(
2025-01-17T11:32:04.5877700Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:32:04.5877780Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:32:04.5877820Z             )
2025-01-17T11:32:04.5877860Z     
2025-01-17T11:32:04.5877940Z         for index, data in enumerate(fig.data):
2025-01-17T11:32:04.5878010Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:32:04.5878070Z             if data.stackgroup:
2025-01-17T11:32:04.5878120Z                 assert (
2025-01-17T11:32:04.5878170Z                     data.stackgroup
2025-01-17T11:32:04.5878220Z                     == getattr(
2025-01-17T11:32:04.5878290Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5878360Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:32:04.5878410Z                     ).decode()
2025-01-17T11:32:04.5878460Z                 )
2025-01-17T11:32:04.5878510Z             if data.name:
2025-01-17T11:32:04.5878550Z                 assert (
2025-01-17T11:32:04.5878610Z                     data.name
2025-01-17T11:32:04.5878650Z                     == getattr(
2025-01-17T11:32:04.5878730Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5878790Z                         "_" + str(index) + "name",
2025-01-17T11:32:04.5878840Z                     ).decode()
2025-01-17T11:32:04.5878880Z                 )
2025-01-17T11:32:04.5878950Z             np.testing.assert_allclose(
2025-01-17T11:32:04.5879100Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:32:04.5879150Z             )
2025-01-17T11:32:04.5879210Z >           np.testing.assert_allclose(
2025-01-17T11:32:04.5879300Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:32:04.5879340Z             )
2025-01-17T11:32:04.5879390Z 
2025-01-17T11:32:04.5879500Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:32:04.5879590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5879600Z 
2025-01-17T11:32:04.5879950Z args = (<function assert_allclose.<locals>.compare at 0x15e388220>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, .....), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-01-17T11:32:04.5880020Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5880230Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5880230Z 
2025-01-17T11:32:04.5880280Z     @wraps(func)
2025-01-17T11:32:04.5880330Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5880390Z         with self._recreate_cm():
2025-01-17T11:32:04.5880450Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5880500Z E           AssertionError: 
2025-01-17T11:32:04.5880580Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5880630Z E           
2025-01-17T11:32:04.5880700Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-17T11:32:04.5880800Z E           Max absolute difference among violations: 2.08771842e-13
2025-01-17T11:32:04.5880900Z E           Max relative difference among violations: 3.01858991
2025-01-17T11:32:04.5881030Z E            ACTUAL: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.5881090Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5881360Z E            DESIRED: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.5881420Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5881430Z 
2025-01-17T11:32:04.5881580Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5881740Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] ______
2025-01-17T11:32:04.5881740Z 
2025-01-17T11:32:04.5881950Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133ad4140>
2025-01-17T11:32:04.5882190Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1522a7650>
2025-01-17T11:32:04.5882260Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:32:04.5882320Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:32:04.5882390Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:32:04.5882460Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-17T11:32:04.5882620Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>)
2025-01-17T11:32:04.5882810Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply3]>>
2025-01-17T11:32:04.5882810Z 
2025-01-17T11:32:04.5882880Z     def test_generate_plot_mpl(
2025-01-17T11:32:04.5883010Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:32:04.5883050Z     ):
2025-01-17T11:32:04.5883120Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:32:04.5883200Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5883340Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:32:04.5883380Z     
2025-01-17T11:32:04.5883460Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:32:04.5883530Z             np.testing.assert_array_equal(
2025-01-17T11:32:04.5883640Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:32:04.5883720Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:32:04.5883880Z             )
2025-01-17T11:32:04.5883920Z     
2025-01-17T11:32:04.5883990Z         for index, data in enumerate(fig.data):
2025-01-17T11:32:04.5884070Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:32:04.5884130Z             if data.stackgroup:
2025-01-17T11:32:04.5884170Z                 assert (
2025-01-17T11:32:04.5884270Z                     data.stackgroup
2025-01-17T11:32:04.5884330Z                     == getattr(
2025-01-17T11:32:04.5884410Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5884480Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:32:04.5884530Z                     ).decode()
2025-01-17T11:32:04.5884570Z                 )
2025-01-17T11:32:04.5884620Z             if data.name:
2025-01-17T11:32:04.5884660Z                 assert (
2025-01-17T11:32:04.5884710Z                     data.name
2025-01-17T11:32:04.5884760Z                     == getattr(
2025-01-17T11:32:04.5884840Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5884910Z                         "_" + str(index) + "name",
2025-01-17T11:32:04.5884950Z                     ).decode()
2025-01-17T11:32:04.5885000Z                 )
2025-01-17T11:32:04.5885060Z             np.testing.assert_allclose(
2025-01-17T11:32:04.5885160Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:32:04.5885200Z             )
2025-01-17T11:32:04.5885260Z >           np.testing.assert_allclose(
2025-01-17T11:32:04.5885350Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:32:04.5885390Z             )
2025-01-17T11:32:04.5885400Z 
2025-01-17T11:32:04.5885510Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:32:04.5885590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5885590Z 
2025-01-17T11:32:04.5885960Z args = (<function assert_allclose.<locals>.compare at 0x15e3ea520>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, .....), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-01-17T11:32:04.5886030Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5886240Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5886240Z 
2025-01-17T11:32:04.5886290Z     @wraps(func)
2025-01-17T11:32:04.5886350Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5886400Z         with self._recreate_cm():
2025-01-17T11:32:04.5886460Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5886520Z E           AssertionError: 
2025-01-17T11:32:04.5886590Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5886630Z E           
2025-01-17T11:32:04.5886700Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-17T11:32:04.5886810Z E           Max absolute difference among violations: 2.08771842e-13
2025-01-17T11:32:04.5886910Z E           Max relative difference among violations: 3.01858991
2025-01-17T11:32:04.5887040Z E            ACTUAL: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.5887110Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5887230Z E            DESIRED: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.5887300Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5887310Z 
2025-01-17T11:32:04.5887460Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5887620Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] ______
2025-01-17T11:32:04.5887620Z 
2025-01-17T11:32:04.5887820Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133abab40>
2025-01-17T11:32:04.5888070Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x158e36ba0>
2025-01-17T11:32:04.5888130Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:32:04.5888240Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:32:04.5888320Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:32:04.5888400Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-17T11:32:04.5888550Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>)
2025-01-17T11:32:04.5888820Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply4]>>
2025-01-17T11:32:04.5888820Z 
2025-01-17T11:32:04.5888890Z     def test_generate_plot_mpl(
2025-01-17T11:32:04.5889020Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:32:04.5889060Z     ):
2025-01-17T11:32:04.5889120Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:32:04.5889200Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5889330Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:32:04.5889370Z     
2025-01-17T11:32:04.5889450Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:32:04.5889520Z             np.testing.assert_array_equal(
2025-01-17T11:32:04.5889630Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:32:04.5889700Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:32:04.5889750Z             )
2025-01-17T11:32:04.5889800Z     
2025-01-17T11:32:04.5889870Z         for index, data in enumerate(fig.data):
2025-01-17T11:32:04.5889940Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:32:04.5890000Z             if data.stackgroup:
2025-01-17T11:32:04.5890040Z                 assert (
2025-01-17T11:32:04.5890100Z                     data.stackgroup
2025-01-17T11:32:04.5890150Z                     == getattr(
2025-01-17T11:32:04.5890220Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5890290Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:32:04.5890340Z                     ).decode()
2025-01-17T11:32:04.5890390Z                 )
2025-01-17T11:32:04.5890440Z             if data.name:
2025-01-17T11:32:04.5890480Z                 assert (
2025-01-17T11:32:04.5890530Z                     data.name
2025-01-17T11:32:04.5890580Z                     == getattr(
2025-01-17T11:32:04.5890660Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5890720Z                         "_" + str(index) + "name",
2025-01-17T11:32:04.5890770Z                     ).decode()
2025-01-17T11:32:04.5890820Z                 )
2025-01-17T11:32:04.5890880Z             np.testing.assert_allclose(
2025-01-17T11:32:04.5890970Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:32:04.5891020Z             )
2025-01-17T11:32:04.5891070Z >           np.testing.assert_allclose(
2025-01-17T11:32:04.5891170Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:32:04.5891210Z             )
2025-01-17T11:32:04.5891210Z 
2025-01-17T11:32:04.5891320Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:32:04.5891410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5891410Z 
2025-01-17T11:32:04.5891770Z args = (<function assert_allclose.<locals>.compare at 0x31641ee80>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, .....), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-01-17T11:32:04.5891850Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5892050Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5892060Z 
2025-01-17T11:32:04.5892100Z     @wraps(func)
2025-01-17T11:32:04.5892150Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5892210Z         with self._recreate_cm():
2025-01-17T11:32:04.5892260Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5892320Z E           AssertionError: 
2025-01-17T11:32:04.5892460Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5892510Z E           
2025-01-17T11:32:04.5892580Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-17T11:32:04.5892680Z E           Max absolute difference among violations: 3.02728422e-13
2025-01-17T11:32:04.5892780Z E           Max relative difference among violations: 15766.1580412
2025-01-17T11:32:04.5892970Z E            ACTUAL: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.5893030Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5893160Z E            DESIRED: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.5893220Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5893230Z 
2025-01-17T11:32:04.5893380Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5893540Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] ______
2025-01-17T11:32:04.5893540Z 
2025-01-17T11:32:04.5893750Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133ab8ce0>
2025-01-17T11:32:04.5893990Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x158dad160>
2025-01-17T11:32:04.5894060Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:32:04.5894120Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:32:04.5894190Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:32:04.5894270Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-17T11:32:04.5894420Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>)
2025-01-17T11:32:04.5894610Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply5]>>
2025-01-17T11:32:04.5894610Z 
2025-01-17T11:32:04.5894670Z     def test_generate_plot_mpl(
2025-01-17T11:32:04.5894800Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:32:04.5894850Z     ):
2025-01-17T11:32:04.5894910Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:32:04.5894990Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5895120Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:32:04.5895160Z     
2025-01-17T11:32:04.5895240Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:32:04.5895310Z             np.testing.assert_array_equal(
2025-01-17T11:32:04.5895420Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:32:04.5895500Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:32:04.5895540Z             )
2025-01-17T11:32:04.5895580Z     
2025-01-17T11:32:04.5895660Z         for index, data in enumerate(fig.data):
2025-01-17T11:32:04.5895730Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:32:04.5895790Z             if data.stackgroup:
2025-01-17T11:32:04.5895830Z                 assert (
2025-01-17T11:32:04.5895890Z                     data.stackgroup
2025-01-17T11:32:04.5895940Z                     == getattr(
2025-01-17T11:32:04.5896010Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5896080Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:32:04.5896130Z                     ).decode()
2025-01-17T11:32:04.5896170Z                 )
2025-01-17T11:32:04.5896230Z             if data.name:
2025-01-17T11:32:04.5896270Z                 assert (
2025-01-17T11:32:04.5896320Z                     data.name
2025-01-17T11:32:04.5896370Z                     == getattr(
2025-01-17T11:32:04.5896440Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5896500Z                         "_" + str(index) + "name",
2025-01-17T11:32:04.5896550Z                     ).decode()
2025-01-17T11:32:04.5896590Z                 )
2025-01-17T11:32:04.5896650Z             np.testing.assert_allclose(
2025-01-17T11:32:04.5896750Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:32:04.5896830Z             )
2025-01-17T11:32:04.5896900Z >           np.testing.assert_allclose(
2025-01-17T11:32:04.5896990Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:32:04.5897030Z             )
2025-01-17T11:32:04.5897030Z 
2025-01-17T11:32:04.5897190Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:32:04.5897280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5897280Z 
2025-01-17T11:32:04.5897640Z args = (<function assert_allclose.<locals>.compare at 0x15e389760>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, .....), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-01-17T11:32:04.5897720Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5897920Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5897920Z 
2025-01-17T11:32:04.5897970Z     @wraps(func)
2025-01-17T11:32:04.5898020Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5898080Z         with self._recreate_cm():
2025-01-17T11:32:04.5898130Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5898190Z E           AssertionError: 
2025-01-17T11:32:04.5898280Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5898330Z E           
2025-01-17T11:32:04.5898390Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-17T11:32:04.5898500Z E           Max absolute difference among violations: 3.02728422e-13
2025-01-17T11:32:04.5898600Z E           Max relative difference among violations: 15766.1580412
2025-01-17T11:32:04.5898740Z E            ACTUAL: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.5898800Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5898920Z E            DESIRED: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.5898990Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5898990Z 
2025-01-17T11:32:04.5899150Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5899310Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] ______
2025-01-17T11:32:04.5899320Z 
2025-01-17T11:32:04.5899530Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133ad42c0>
2025-01-17T11:32:04.5899770Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x158e37560>
2025-01-17T11:32:04.5899840Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:32:04.5899900Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:32:04.5899970Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:32:04.5900040Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-17T11:32:04.5900190Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>)
2025-01-17T11:32:04.5900390Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply6]>>
2025-01-17T11:32:04.5900390Z 
2025-01-17T11:32:04.5900450Z     def test_generate_plot_mpl(
2025-01-17T11:32:04.5900580Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:32:04.5900620Z     ):
2025-01-17T11:32:04.5900690Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:32:04.5900770Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5900900Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:32:04.5900940Z     
2025-01-17T11:32:04.5901020Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:32:04.5901090Z             np.testing.assert_array_equal(
2025-01-17T11:32:04.5901200Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:32:04.5901270Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:32:04.5901310Z             )
2025-01-17T11:32:04.5901730Z     
2025-01-17T11:32:04.5901800Z         for index, data in enumerate(fig.data):
2025-01-17T11:32:04.5901870Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:32:04.5901930Z             if data.stackgroup:
2025-01-17T11:32:04.5901980Z                 assert (
2025-01-17T11:32:04.5902090Z                     data.stackgroup
2025-01-17T11:32:04.5902150Z                     == getattr(
2025-01-17T11:32:04.5902220Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5902290Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:32:04.5902340Z                     ).decode()
2025-01-17T11:32:04.5902380Z                 )
2025-01-17T11:32:04.5902430Z             if data.name:
2025-01-17T11:32:04.5902480Z                 assert (
2025-01-17T11:32:04.5902530Z                     data.name
2025-01-17T11:32:04.5902570Z                     == getattr(
2025-01-17T11:32:04.5902650Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5902720Z                         "_" + str(index) + "name",
2025-01-17T11:32:04.5902770Z                     ).decode()
2025-01-17T11:32:04.5902810Z                 )
2025-01-17T11:32:04.5902870Z             np.testing.assert_allclose(
2025-01-17T11:32:04.5902960Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:32:04.5903010Z             )
2025-01-17T11:32:04.5903070Z >           np.testing.assert_allclose(
2025-01-17T11:32:04.5903170Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:32:04.5903210Z             )
2025-01-17T11:32:04.5903210Z 
2025-01-17T11:32:04.5903320Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:32:04.5903410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5903410Z 
2025-01-17T11:32:04.5903770Z args = (<function assert_allclose.<locals>.compare at 0x15e388ae0>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, .....), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-01-17T11:32:04.5903840Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5904050Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5904060Z 
2025-01-17T11:32:04.5904100Z     @wraps(func)
2025-01-17T11:32:04.5904160Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5904210Z         with self._recreate_cm():
2025-01-17T11:32:04.5904270Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5904320Z E           AssertionError: 
2025-01-17T11:32:04.5904400Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5904440Z E           
2025-01-17T11:32:04.5904510Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-17T11:32:04.5904620Z E           Max absolute difference among violations: 3.02728422e-13
2025-01-17T11:32:04.5904720Z E           Max relative difference among violations: 15766.1580412
2025-01-17T11:32:04.5904850Z E            ACTUAL: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.5904920Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5905050Z E            DESIRED: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.5905120Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5905120Z 
2025-01-17T11:32:04.5905270Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5905430Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] ______
2025-01-17T11:32:04.5905430Z 
2025-01-17T11:32:04.5905630Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133ad4380>
2025-01-17T11:32:04.5905880Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1591a9730>
2025-01-17T11:32:04.5905940Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:32:04.5906050Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:32:04.5906130Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:32:04.5906200Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-17T11:32:04.5906350Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>)
2025-01-17T11:32:04.5907450Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply7]>>
2025-01-17T11:32:04.5907460Z 
2025-01-17T11:32:04.5907520Z     def test_generate_plot_mpl(
2025-01-17T11:32:04.5907650Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:32:04.5907690Z     ):
2025-01-17T11:32:04.5907760Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:32:04.5907830Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5907960Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:32:04.5908010Z     
2025-01-17T11:32:04.5908090Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:32:04.5908160Z             np.testing.assert_array_equal(
2025-01-17T11:32:04.5908270Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:32:04.5908350Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:32:04.5908390Z             )
2025-01-17T11:32:04.5908440Z     
2025-01-17T11:32:04.5908510Z         for index, data in enumerate(fig.data):
2025-01-17T11:32:04.5908590Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:32:04.5908640Z             if data.stackgroup:
2025-01-17T11:32:04.5908690Z                 assert (
2025-01-17T11:32:04.5908740Z                     data.stackgroup
2025-01-17T11:32:04.5908790Z                     == getattr(
2025-01-17T11:32:04.5908870Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5908940Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:32:04.5908990Z                     ).decode()
2025-01-17T11:32:04.5909030Z                 )
2025-01-17T11:32:04.5909090Z             if data.name:
2025-01-17T11:32:04.5909130Z                 assert (
2025-01-17T11:32:04.5909180Z                     data.name
2025-01-17T11:32:04.5909230Z                     == getattr(
2025-01-17T11:32:04.5913140Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5913270Z                         "_" + str(index) + "name",
2025-01-17T11:32:04.5913310Z                     ).decode()
2025-01-17T11:32:04.5913360Z                 )
2025-01-17T11:32:04.5913420Z             np.testing.assert_allclose(
2025-01-17T11:32:04.5913510Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:32:04.5913560Z             )
2025-01-17T11:32:04.5913620Z >           np.testing.assert_allclose(
2025-01-17T11:32:04.5913710Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:32:04.5913750Z             )
2025-01-17T11:32:04.5913760Z 
2025-01-17T11:32:04.5913870Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:32:04.5913960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5913960Z 
2025-01-17T11:32:04.5914330Z args = (<function assert_allclose.<locals>.compare at 0x15e38b600>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, .....), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-01-17T11:32:04.5914400Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5914610Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5914610Z 
2025-01-17T11:32:04.5914660Z     @wraps(func)
2025-01-17T11:32:04.5914720Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5914770Z         with self._recreate_cm():
2025-01-17T11:32:04.5914830Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5914890Z E           AssertionError: 
2025-01-17T11:32:04.5914960Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5915260Z E           
2025-01-17T11:32:04.5915340Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-17T11:32:04.5915450Z E           Max absolute difference among violations: 3.02728422e-13
2025-01-17T11:32:04.5915550Z E           Max relative difference among violations: 15766.1580412
2025-01-17T11:32:04.5915750Z E            ACTUAL: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.5915820Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5915950Z E            DESIRED: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.5916010Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5916020Z 
2025-01-17T11:32:04.5916170Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5916330Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] ______
2025-01-17T11:32:04.5916330Z 
2025-01-17T11:32:04.5916540Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133ad4470>
2025-01-17T11:32:04.5916780Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x399ca3140>
2025-01-17T11:32:04.5916850Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:32:04.5916910Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:32:04.5916990Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:32:04.5917070Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-17T11:32:04.5917220Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>)
2025-01-17T11:32:04.5917410Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply8]>>
2025-01-17T11:32:04.5917410Z 
2025-01-17T11:32:04.5917470Z     def test_generate_plot_mpl(
2025-01-17T11:32:04.5917600Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:32:04.5917640Z     ):
2025-01-17T11:32:04.5917710Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:32:04.5917780Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5917920Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:32:04.5917960Z     
2025-01-17T11:32:04.5918040Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:32:04.5918110Z             np.testing.assert_array_equal(
2025-01-17T11:32:04.5918210Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:32:04.5918300Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:32:04.5918340Z             )
2025-01-17T11:32:04.5918380Z     
2025-01-17T11:32:04.5918450Z         for index, data in enumerate(fig.data):
2025-01-17T11:32:04.5918530Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:32:04.5918580Z             if data.stackgroup:
2025-01-17T11:32:04.5918630Z                 assert (
2025-01-17T11:32:04.5918680Z                     data.stackgroup
2025-01-17T11:32:04.5918740Z                     == getattr(
2025-01-17T11:32:04.5918810Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5918890Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:32:04.5918940Z                     ).decode()
2025-01-17T11:32:04.5918980Z                 )
2025-01-17T11:32:04.5919030Z             if data.name:
2025-01-17T11:32:04.5919080Z                 assert (
2025-01-17T11:32:04.5919130Z                     data.name
2025-01-17T11:32:04.5919170Z                     == getattr(
2025-01-17T11:32:04.5919250Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5919310Z                         "_" + str(index) + "name",
2025-01-17T11:32:04.5919360Z                     ).decode()
2025-01-17T11:32:04.5919400Z                 )
2025-01-17T11:32:04.5919470Z             np.testing.assert_allclose(
2025-01-17T11:32:04.5919560Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:32:04.5919660Z             )
2025-01-17T11:32:04.5919720Z >           np.testing.assert_allclose(
2025-01-17T11:32:04.5919820Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:32:04.5919860Z             )
2025-01-17T11:32:04.5919860Z 
2025-01-17T11:32:04.5919970Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:32:04.5920110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5920110Z 
2025-01-17T11:32:04.5920480Z args = (<function assert_allclose.<locals>.compare at 0x31641c5e0>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, .....), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-01-17T11:32:04.5920550Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5920760Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5920760Z 
2025-01-17T11:32:04.5920810Z     @wraps(func)
2025-01-17T11:32:04.5920870Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5920920Z         with self._recreate_cm():
2025-01-17T11:32:04.5920980Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5921030Z E           AssertionError: 
2025-01-17T11:32:04.5921110Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5921160Z E           
2025-01-17T11:32:04.5921230Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-17T11:32:04.5921480Z E           Max absolute difference among violations: 2.49794504e+39
2025-01-17T11:32:04.5921590Z E           Max relative difference among violations: 3.01858991
2025-01-17T11:32:04.5921720Z E            ACTUAL: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.5921780Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5921920Z E            DESIRED: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.5921970Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5921980Z 
2025-01-17T11:32:04.5922140Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5922290Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] ______
2025-01-17T11:32:04.5922290Z 
2025-01-17T11:32:04.5922500Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133ad4530>
2025-01-17T11:32:04.5922740Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x17433c9b0>
2025-01-17T11:32:04.5922810Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:32:04.5922860Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:32:04.5922940Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:32:04.5923010Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-17T11:32:04.5923170Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>)
2025-01-17T11:32:04.5923360Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply9]>>
2025-01-17T11:32:04.5923360Z 
2025-01-17T11:32:04.5923430Z     def test_generate_plot_mpl(
2025-01-17T11:32:04.5923560Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:32:04.5923600Z     ):
2025-01-17T11:32:04.5923670Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:32:04.5923750Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5923880Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:32:04.5923920Z     
2025-01-17T11:32:04.5924000Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:32:04.5924070Z             np.testing.assert_array_equal(
2025-01-17T11:32:04.5924180Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:32:04.5924250Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:32:04.5924300Z             )
2025-01-17T11:32:04.5924570Z     
2025-01-17T11:32:04.5924650Z         for index, data in enumerate(fig.data):
2025-01-17T11:32:04.5924730Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:32:04.5924790Z             if data.stackgroup:
2025-01-17T11:32:04.5924830Z                 assert (
2025-01-17T11:32:04.5924890Z                     data.stackgroup
2025-01-17T11:32:04.5924990Z                     == getattr(
2025-01-17T11:32:04.5925070Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5925130Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:32:04.5925190Z                     ).decode()
2025-01-17T11:32:04.5925230Z                 )
2025-01-17T11:32:04.5925280Z             if data.name:
2025-01-17T11:32:04.5925330Z                 assert (
2025-01-17T11:32:04.5925370Z                     data.name
2025-01-17T11:32:04.5925420Z                     == getattr(
2025-01-17T11:32:04.5925490Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5925560Z                         "_" + str(index) + "name",
2025-01-17T11:32:04.5925610Z                     ).decode()
2025-01-17T11:32:04.5925660Z                 )
2025-01-17T11:32:04.5925720Z             np.testing.assert_allclose(
2025-01-17T11:32:04.5925820Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:32:04.5925870Z             )
2025-01-17T11:32:04.5925930Z >           np.testing.assert_allclose(
2025-01-17T11:32:04.5926020Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:32:04.5926060Z             )
2025-01-17T11:32:04.5926070Z 
2025-01-17T11:32:04.5926170Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:32:04.5926270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5926270Z 
2025-01-17T11:32:04.5926630Z args = (<function assert_allclose.<locals>.compare at 0x15e3ea520>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, .....), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-01-17T11:32:04.5926710Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5926920Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5926920Z 
2025-01-17T11:32:04.5926970Z     @wraps(func)
2025-01-17T11:32:04.5927030Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5927090Z         with self._recreate_cm():
2025-01-17T11:32:04.5927150Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5927200Z E           AssertionError: 
2025-01-17T11:32:04.5927280Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5927320Z E           
2025-01-17T11:32:04.5927390Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-17T11:32:04.5927490Z E           Max absolute difference among violations: 2.49794504e+39
2025-01-17T11:32:04.5927590Z E           Max relative difference among violations: 3.01858991
2025-01-17T11:32:04.5927720Z E            ACTUAL: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.5927790Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5927920Z E            DESIRED: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.5927980Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5927990Z 
2025-01-17T11:32:04.5928150Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5928310Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] ______
2025-01-17T11:32:04.5928310Z 
2025-01-17T11:32:04.5928520Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133ad45f0>
2025-01-17T11:32:04.5928760Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1591a8770>
2025-01-17T11:32:04.5928830Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:32:04.5928890Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:32:04.5929010Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:32:04.5929090Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-17T11:32:04.5929240Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>)
2025-01-17T11:32:04.5929440Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply10]>>
2025-01-17T11:32:04.5929620Z 
2025-01-17T11:32:04.5929690Z     def test_generate_plot_mpl(
2025-01-17T11:32:04.5929830Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:32:04.5929870Z     ):
2025-01-17T11:32:04.5929950Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:32:04.5930030Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5930170Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:32:04.5930210Z     
2025-01-17T11:32:04.5930300Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:32:04.5930370Z             np.testing.assert_array_equal(
2025-01-17T11:32:04.5930480Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:32:04.5930560Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:32:04.5930600Z             )
2025-01-17T11:32:04.5930640Z     
2025-01-17T11:32:04.5930720Z         for index, data in enumerate(fig.data):
2025-01-17T11:32:04.5930800Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:32:04.5930850Z             if data.stackgroup:
2025-01-17T11:32:04.5930900Z                 assert (
2025-01-17T11:32:04.5930950Z                     data.stackgroup
2025-01-17T11:32:04.5931000Z                     == getattr(
2025-01-17T11:32:04.5931070Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5931140Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:32:04.5931190Z                     ).decode()
2025-01-17T11:32:04.5931230Z                 )
2025-01-17T11:32:04.5931290Z             if data.name:
2025-01-17T11:32:04.5931330Z                 assert (
2025-01-17T11:32:04.5931380Z                     data.name
2025-01-17T11:32:04.5931430Z                     == getattr(
2025-01-17T11:32:04.5931500Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5931570Z                         "_" + str(index) + "name",
2025-01-17T11:32:04.5931620Z                     ).decode()
2025-01-17T11:32:04.5931660Z                 )
2025-01-17T11:32:04.5931720Z             np.testing.assert_allclose(
2025-01-17T11:32:04.5931820Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:32:04.5931860Z             )
2025-01-17T11:32:04.5931920Z >           np.testing.assert_allclose(
2025-01-17T11:32:04.5932010Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:32:04.5932050Z             )
2025-01-17T11:32:04.5932060Z 
2025-01-17T11:32:04.5932160Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:32:04.5932260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5932260Z 
2025-01-17T11:32:04.5932620Z args = (<function assert_allclose.<locals>.compare at 0x15e3891c0>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, .....), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-01-17T11:32:04.5932700Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5932910Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5932910Z 
2025-01-17T11:32:04.5932960Z     @wraps(func)
2025-01-17T11:32:04.5933010Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5933070Z         with self._recreate_cm():
2025-01-17T11:32:04.5933120Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5933180Z E           AssertionError: 
2025-01-17T11:32:04.5933260Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5933370Z E           
2025-01-17T11:32:04.5933440Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-17T11:32:04.5933550Z E           Max absolute difference among violations: 2.49794504e+39
2025-01-17T11:32:04.5933650Z E           Max relative difference among violations: 3.01858991
2025-01-17T11:32:04.5933780Z E            ACTUAL: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.5933880Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5934020Z E            DESIRED: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.5934080Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5934080Z 
2025-01-17T11:32:04.5934230Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5934390Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] ______
2025-01-17T11:32:04.5934400Z 
2025-01-17T11:32:04.5934600Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133ad46b0>
2025-01-17T11:32:04.5934840Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x3178b1a00>
2025-01-17T11:32:04.5934910Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:32:04.5934970Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:32:04.5935050Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:32:04.5935120Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-17T11:32:04.5935280Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>)
2025-01-17T11:32:04.5935470Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply11]>>
2025-01-17T11:32:04.5935470Z 
2025-01-17T11:32:04.5935530Z     def test_generate_plot_mpl(
2025-01-17T11:32:04.5935650Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:32:04.5935700Z     ):
2025-01-17T11:32:04.5935760Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:32:04.5935840Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5935970Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:32:04.5936020Z     
2025-01-17T11:32:04.5936100Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:32:04.5936170Z             np.testing.assert_array_equal(
2025-01-17T11:32:04.5936280Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:32:04.5936360Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:32:04.5936410Z             )
2025-01-17T11:32:04.5936450Z     
2025-01-17T11:32:04.5936520Z         for index, data in enumerate(fig.data):
2025-01-17T11:32:04.5936590Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:32:04.5936650Z             if data.stackgroup:
2025-01-17T11:32:04.5936700Z                 assert (
2025-01-17T11:32:04.5936750Z                     data.stackgroup
2025-01-17T11:32:04.5936800Z                     == getattr(
2025-01-17T11:32:04.5936880Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5936950Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:32:04.5937000Z                     ).decode()
2025-01-17T11:32:04.5937040Z                 )
2025-01-17T11:32:04.5937100Z             if data.name:
2025-01-17T11:32:04.5937140Z                 assert (
2025-01-17T11:32:04.5937190Z                     data.name
2025-01-17T11:32:04.5937230Z                     == getattr(
2025-01-17T11:32:04.5937310Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5937370Z                         "_" + str(index) + "name",
2025-01-17T11:32:04.5937420Z                     ).decode()
2025-01-17T11:32:04.5937460Z                 )
2025-01-17T11:32:04.5937520Z             np.testing.assert_allclose(
2025-01-17T11:32:04.5937620Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:32:04.5937710Z             )
2025-01-17T11:32:04.5937770Z >           np.testing.assert_allclose(
2025-01-17T11:32:04.5937860Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:32:04.5937910Z             )
2025-01-17T11:32:04.5937910Z 
2025-01-17T11:32:04.5938020Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:32:04.5938170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5938170Z 
2025-01-17T11:32:04.5938530Z args = (<function assert_allclose.<locals>.compare at 0x15e3eb560>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, .....), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-01-17T11:32:04.5938600Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5938810Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5938810Z 
2025-01-17T11:32:04.5938860Z     @wraps(func)
2025-01-17T11:32:04.5938910Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5938970Z         with self._recreate_cm():
2025-01-17T11:32:04.5939030Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5939080Z E           AssertionError: 
2025-01-17T11:32:04.5939160Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5939210Z E           
2025-01-17T11:32:04.5939270Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-17T11:32:04.5939380Z E           Max absolute difference among violations: 2.49794504e+39
2025-01-17T11:32:04.5939470Z E           Max relative difference among violations: 3.01858991
2025-01-17T11:32:04.5939600Z E            ACTUAL: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.5939660Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5939790Z E            DESIRED: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.5939850Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5939860Z 
2025-01-17T11:32:04.5940010Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5940180Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] ______
2025-01-17T11:32:04.5940180Z 
2025-01-17T11:32:04.5940380Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133ad4770>
2025-01-17T11:32:04.5940630Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1589fd820>
2025-01-17T11:32:04.5940690Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:32:04.5940750Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:32:04.5940820Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:32:04.5940900Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-17T11:32:04.5941050Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>)
2025-01-17T11:32:04.5941240Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply12]>>
2025-01-17T11:32:04.5941250Z 
2025-01-17T11:32:04.5941300Z     def test_generate_plot_mpl(
2025-01-17T11:32:04.5941440Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:32:04.5941480Z     ):
2025-01-17T11:32:04.5941550Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:32:04.5941620Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5941760Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:32:04.5941800Z     
2025-01-17T11:32:04.5941880Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:32:04.5941950Z             np.testing.assert_array_equal(
2025-01-17T11:32:04.5942060Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:32:04.5942140Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:32:04.5942190Z             )
2025-01-17T11:32:04.5942230Z     
2025-01-17T11:32:04.5942300Z         for index, data in enumerate(fig.data):
2025-01-17T11:32:04.5942460Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:32:04.5942520Z             if data.stackgroup:
2025-01-17T11:32:04.5942570Z                 assert (
2025-01-17T11:32:04.5942630Z                     data.stackgroup
2025-01-17T11:32:04.5942720Z                     == getattr(
2025-01-17T11:32:04.5942800Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5942870Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:32:04.5942920Z                     ).decode()
2025-01-17T11:32:04.5942960Z                 )
2025-01-17T11:32:04.5943010Z             if data.name:
2025-01-17T11:32:04.5943060Z                 assert (
2025-01-17T11:32:04.5943110Z                     data.name
2025-01-17T11:32:04.5943160Z                     == getattr(
2025-01-17T11:32:04.5943230Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5943300Z                         "_" + str(index) + "name",
2025-01-17T11:32:04.5943350Z                     ).decode()
2025-01-17T11:32:04.5943390Z                 )
2025-01-17T11:32:04.5943450Z             np.testing.assert_allclose(
2025-01-17T11:32:04.5943550Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:32:04.5943590Z             )
2025-01-17T11:32:04.5943650Z >           np.testing.assert_allclose(
2025-01-17T11:32:04.5943750Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:32:04.5943790Z             )
2025-01-17T11:32:04.5943790Z 
2025-01-17T11:32:04.5943900Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:32:04.5943990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5943990Z 
2025-01-17T11:32:04.5944350Z args = (<function assert_allclose.<locals>.compare at 0x15e38a3e0>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, .....), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-01-17T11:32:04.5944420Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5944630Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5944630Z 
2025-01-17T11:32:04.5944680Z     @wraps(func)
2025-01-17T11:32:04.5944740Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5944790Z         with self._recreate_cm():
2025-01-17T11:32:04.5944850Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5944910Z E           AssertionError: 
2025-01-17T11:32:04.5944990Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5945030Z E           
2025-01-17T11:32:04.5945100Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-17T11:32:04.5945200Z E           Max absolute difference among violations: 3.62213099e+39
2025-01-17T11:32:04.5945310Z E           Max relative difference among violations: 15766.15804934
2025-01-17T11:32:04.5945440Z E            ACTUAL: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.5945500Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5945630Z E            DESIRED: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.5945690Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5945700Z 
2025-01-17T11:32:04.5945850Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5946020Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] ______
2025-01-17T11:32:04.5946020Z 
2025-01-17T11:32:04.5946220Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133ad49b0>
2025-01-17T11:32:04.5946470Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x159153050>
2025-01-17T11:32:04.5946530Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:32:04.5946590Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:32:04.5946720Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:32:04.5946800Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-17T11:32:04.5946950Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>)
2025-01-17T11:32:04.5947150Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply13]>>
2025-01-17T11:32:04.5947420Z 
2025-01-17T11:32:04.5947490Z     def test_generate_plot_mpl(
2025-01-17T11:32:04.5947620Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:32:04.5947660Z     ):
2025-01-17T11:32:04.5947720Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:32:04.5947800Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5947930Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:32:04.5947970Z     
2025-01-17T11:32:04.5948050Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:32:04.5948120Z             np.testing.assert_array_equal(
2025-01-17T11:32:04.5948230Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:32:04.5948310Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:32:04.5948350Z             )
2025-01-17T11:32:04.5948390Z     
2025-01-17T11:32:04.5948460Z         for index, data in enumerate(fig.data):
2025-01-17T11:32:04.5948550Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:32:04.5948600Z             if data.stackgroup:
2025-01-17T11:32:04.5948650Z                 assert (
2025-01-17T11:32:04.5948700Z                     data.stackgroup
2025-01-17T11:32:04.5948740Z                     == getattr(
2025-01-17T11:32:04.5948820Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5948890Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:32:04.5948940Z                     ).decode()
2025-01-17T11:32:04.5948980Z                 )
2025-01-17T11:32:04.5949030Z             if data.name:
2025-01-17T11:32:04.5949070Z                 assert (
2025-01-17T11:32:04.5949130Z                     data.name
2025-01-17T11:32:04.5949170Z                     == getattr(
2025-01-17T11:32:04.5949250Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5949310Z                         "_" + str(index) + "name",
2025-01-17T11:32:04.5949360Z                     ).decode()
2025-01-17T11:32:04.5949400Z                 )
2025-01-17T11:32:04.5949460Z             np.testing.assert_allclose(
2025-01-17T11:32:04.5949550Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:32:04.5949600Z             )
2025-01-17T11:32:04.5949650Z >           np.testing.assert_allclose(
2025-01-17T11:32:04.5949750Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:32:04.5949800Z             )
2025-01-17T11:32:04.5949800Z 
2025-01-17T11:32:04.5949900Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:32:04.5949990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5949990Z 
2025-01-17T11:32:04.5950350Z args = (<function assert_allclose.<locals>.compare at 0x31641c540>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, .....), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-01-17T11:32:04.5950430Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5950630Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5950630Z 
2025-01-17T11:32:04.5950680Z     @wraps(func)
2025-01-17T11:32:04.5950730Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5950790Z         with self._recreate_cm():
2025-01-17T11:32:04.5950840Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5950900Z E           AssertionError: 
2025-01-17T11:32:04.5950970Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5951020Z E           
2025-01-17T11:32:04.5951170Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-17T11:32:04.5951280Z E           Max absolute difference among violations: 3.62213099e+39
2025-01-17T11:32:04.5951380Z E           Max relative difference among violations: 15766.15804934
2025-01-17T11:32:04.5951510Z E            ACTUAL: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.5951610Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5951750Z E            DESIRED: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.5951810Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5951810Z 
2025-01-17T11:32:04.5951970Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5952130Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] ______
2025-01-17T11:32:04.5952130Z 
2025-01-17T11:32:04.5952330Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133ad4a70>
2025-01-17T11:32:04.5952580Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x158e566f0>
2025-01-17T11:32:04.5952650Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:32:04.5952700Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:32:04.5952780Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:32:04.5952850Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-17T11:32:04.5953010Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>)
2025-01-17T11:32:04.5953200Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply14]>>
2025-01-17T11:32:04.5953210Z 
2025-01-17T11:32:04.5953270Z     def test_generate_plot_mpl(
2025-01-17T11:32:04.5953390Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:32:04.5953440Z     ):
2025-01-17T11:32:04.5953500Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:32:04.5953580Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5953710Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:32:04.5953760Z     
2025-01-17T11:32:04.5953840Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:32:04.5953900Z             np.testing.assert_array_equal(
2025-01-17T11:32:04.5954020Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:32:04.5954090Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:32:04.5954140Z             )
2025-01-17T11:32:04.5954180Z     
2025-01-17T11:32:04.5954250Z         for index, data in enumerate(fig.data):
2025-01-17T11:32:04.5954330Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:32:04.5954380Z             if data.stackgroup:
2025-01-17T11:32:04.5954430Z                 assert (
2025-01-17T11:32:04.5954480Z                     data.stackgroup
2025-01-17T11:32:04.5954530Z                     == getattr(
2025-01-17T11:32:04.5954610Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5954680Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:32:04.5954730Z                     ).decode()
2025-01-17T11:32:04.5954770Z                 )
2025-01-17T11:32:04.5954820Z             if data.name:
2025-01-17T11:32:04.5954870Z                 assert (
2025-01-17T11:32:04.5954920Z                     data.name
2025-01-17T11:32:04.5954970Z                     == getattr(
2025-01-17T11:32:04.5955050Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5955110Z                         "_" + str(index) + "name",
2025-01-17T11:32:04.5955160Z                     ).decode()
2025-01-17T11:32:04.5955210Z                 )
2025-01-17T11:32:04.5955270Z             np.testing.assert_allclose(
2025-01-17T11:32:04.5955360Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:32:04.5955400Z             )
2025-01-17T11:32:04.5955520Z >           np.testing.assert_allclose(
2025-01-17T11:32:04.5955620Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:32:04.5955660Z             )
2025-01-17T11:32:04.5955670Z 
2025-01-17T11:32:04.5955770Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:32:04.5955910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5955910Z 
2025-01-17T11:32:04.5956270Z args = (<function assert_allclose.<locals>.compare at 0x3569d85e0>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, .....), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-01-17T11:32:04.5956350Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5956550Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5956550Z 
2025-01-17T11:32:04.5956600Z     @wraps(func)
2025-01-17T11:32:04.5956650Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5956710Z         with self._recreate_cm():
2025-01-17T11:32:04.5956770Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5956830Z E           AssertionError: 
2025-01-17T11:32:04.5956900Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5956940Z E           
2025-01-17T11:32:04.5957020Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-17T11:32:04.5957130Z E           Max absolute difference among violations: 3.62213099e+39
2025-01-17T11:32:04.5957240Z E           Max relative difference among violations: 15766.15804934
2025-01-17T11:32:04.5957370Z E            ACTUAL: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.5957430Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5957570Z E            DESIRED: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.5957630Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5957640Z 
2025-01-17T11:32:04.5957800Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5957960Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] ______
2025-01-17T11:32:04.5957970Z 
2025-01-17T11:32:04.5958170Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x133ad4b30>
2025-01-17T11:32:04.5958420Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x152273bc0>
2025-01-17T11:32:04.5958490Z plotter_generate_plot_ply = (Figure({
2025-01-17T11:32:04.5958550Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-17T11:32:04.5958630Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-17T11:32:04.5958710Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-17T11:32:04.5958860Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x1786bda60>)
2025-01-17T11:32:04.5959060Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply15]>>
2025-01-17T11:32:04.5959070Z 
2025-01-17T11:32:04.5959130Z     def test_generate_plot_mpl(
2025-01-17T11:32:04.5959260Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-17T11:32:04.5959300Z     ):
2025-01-17T11:32:04.5959360Z         fig, _ = plotter_generate_plot_ply
2025-01-17T11:32:04.5959440Z         regression_data = RegressionData(request)
2025-01-17T11:32:04.5959580Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-17T11:32:04.5959630Z     
2025-01-17T11:32:04.5959710Z         for item in ["_species_name", "_color_list"]:
2025-01-17T11:32:04.5959780Z             np.testing.assert_array_equal(
2025-01-17T11:32:04.5959890Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-17T11:32:04.5959960Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-17T11:32:04.5960010Z             )
2025-01-17T11:32:04.5960050Z     
2025-01-17T11:32:04.5960120Z         for index, data in enumerate(fig.data):
2025-01-17T11:32:04.5960390Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-17T11:32:04.5960450Z             if data.stackgroup:
2025-01-17T11:32:04.5964460Z                 assert (
2025-01-17T11:32:04.5964560Z                     data.stackgroup
2025-01-17T11:32:04.5964610Z                     == getattr(
2025-01-17T11:32:04.5964910Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5964980Z                         "_" + str(index) + "stackgroup",
2025-01-17T11:32:04.5965040Z                     ).decode()
2025-01-17T11:32:04.5965080Z                 )
2025-01-17T11:32:04.5965130Z             if data.name:
2025-01-17T11:32:04.5965180Z                 assert (
2025-01-17T11:32:04.5965230Z                     data.name
2025-01-17T11:32:04.5965270Z                     == getattr(
2025-01-17T11:32:04.5965350Z                         expected["/plot_data_hdf/scalars"],
2025-01-17T11:32:04.5965410Z                         "_" + str(index) + "name",
2025-01-17T11:32:04.5965460Z                     ).decode()
2025-01-17T11:32:04.5965510Z                 )
2025-01-17T11:32:04.5965570Z             np.testing.assert_allclose(
2025-01-17T11:32:04.5965670Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-17T11:32:04.5965710Z             )
2025-01-17T11:32:04.5965780Z >           np.testing.assert_allclose(
2025-01-17T11:32:04.5965870Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-17T11:32:04.5965910Z             )
2025-01-17T11:32:04.5965910Z 
2025-01-17T11:32:04.5966020Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-17T11:32:04.5966110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-17T11:32:04.5966110Z 
2025-01-17T11:32:04.5966480Z args = (<function assert_allclose.<locals>.compare at 0x15e38a3e0>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, .....), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-01-17T11:32:04.5966560Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-17T11:32:04.5966760Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-17T11:32:04.5966770Z 
2025-01-17T11:32:04.5966820Z     @wraps(func)
2025-01-17T11:32:04.5966870Z     def inner(*args, **kwds):
2025-01-17T11:32:04.5966930Z         with self._recreate_cm():
2025-01-17T11:32:04.5966990Z >           return func(*args, **kwds)
2025-01-17T11:32:04.5967050Z E           AssertionError: 
2025-01-17T11:32:04.5967130Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.5967170Z E           
2025-01-17T11:32:04.5967240Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-17T11:32:04.5967340Z E           Max absolute difference among violations: 3.62213099e+39
2025-01-17T11:32:04.5967450Z E           Max relative difference among violations: 15766.15804934
2025-01-17T11:32:04.5967580Z E            ACTUAL: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.5967650Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5967780Z E            DESIRED: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.5967840Z E                  0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.5967840Z 
2025-01-17T11:32:04.5968000Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-17T11:32:04.5968100Z =============================== warnings summary ===============================
2025-01-17T11:32:04.5968180Z tardis/io/configuration/config_validator.py:6
2025-01-17T11:32:04.5968260Z tardis/io/configuration/config_validator.py:6
2025-01-17T11:32:04.5968510Z   /Users/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-01-17T11:32:04.5968550Z   
2025-01-17T11:32:04.5969560Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-01-17T11:32:04.5969810Z 
2025-01-17T11:32:04.5970020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-01-17T11:32:04.5970610Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-01-17T11:32:04.5970660Z   
2025-01-17T11:32:04.5970780Z   Jupyter is migrating its paths to use standard platformdirs
2025-01-17T11:32:04.5970900Z   given by the platformdirs library.  To remove this warning and
2025-01-17T11:32:04.5971030Z   see the appropriate new directories, set the environment variable
2025-01-17T11:32:04.5971140Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-01-17T11:32:04.5971260Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-01-17T11:32:04.5971260Z 
2025-01-17T11:32:04.5971330Z tardis/plasma/properties/__init__.py:17
2025-01-17T11:32:04.5971560Z   /Users/runner/work/tardis/tardis/tardis/plasma/properties/__init__.py:17: DeprecationWarning:
2025-01-17T11:32:04.5971600Z   
2025-01-17T11:32:04.5972040Z   The numpy.linalg.linalg has been made private and renamed to numpy.linalg._linalg. All public functions exported by it are available from numpy.linalg. Please use numpy.linalg.LinAlgError instead.
2025-01-17T11:32:04.5972050Z 
2025-01-17T11:32:04.5977370Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-01-17T11:32:04.5977610Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-17T11:32:04.5977780Z   /Users/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-01-17T11:32:04.5977820Z   
2025-01-17T11:32:04.5977870Z   
2025-01-17T11:32:04.5978030Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-17T11:32:04.5978250Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-17T11:32:04.5978250Z 
2025-01-17T11:32:04.5978400Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-01-17T11:32:04.5978580Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-01-17T11:32:04.5978770Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-01-17T11:32:04.5978910Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-01-17T11:32:04.5979170Z   /Users/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-01-17T11:32:04.5979220Z   
2025-01-17T11:32:04.5979300Z   The current CMFGEN model parser is deprecated
2025-01-17T11:32:04.5979310Z 
2025-01-17T11:32:04.5979390Z tardis/io/tests/test_model_reader.py: 1 warning
2025-01-17T11:32:04.5979530Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-01-17T11:32:04.5979790Z   /Users/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-01-17T11:32:04.5979840Z   
2025-01-17T11:32:04.5979920Z   The current CMFGEN model parser is deprecated
2025-01-17T11:32:04.5979920Z 
2025-01-17T11:32:04.5980080Z tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances
2025-01-17T11:32:04.5980390Z   /Users/runner/work/tardis/tardis/tardis/transport/montecarlo/montecarlo_main_loop.py:123: NumbaTypeSafetyWarning:
2025-01-17T11:32:04.5980430Z   
2025-01-17T11:32:04.5980760Z   [1m[1m[1munsafe cast from uint64 to int64. Precision may be lost.[0m[0m[0m
2025-01-17T11:32:04.5980760Z 
2025-01-17T11:32:04.5980840Z tardis/model/tests/test_base.py: 6 warnings
2025-01-17T11:32:04.5980930Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-17T11:32:04.5981060Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-17T11:32:04.5981280Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-01-17T11:32:04.5981650Z   
2025-01-17T11:32:04.5981730Z   v_inner_boundary < 0, assuming default value
2025-01-17T11:32:04.5981730Z 
2025-01-17T11:32:04.5981800Z tardis/model/tests/test_base.py: 6 warnings
2025-01-17T11:32:04.5981890Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-17T11:32:04.5982140Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-17T11:32:04.5982350Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-01-17T11:32:04.5982390Z   
2025-01-17T11:32:04.5982460Z   v_outer_boundary < 0, assuming default value
2025-01-17T11:32:04.5982460Z 
2025-01-17T11:32:04.5982720Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-17T11:32:04.5982960Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-17T11:32:04.5983210Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-17T11:32:04.5983450Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-17T11:32:04.5983890Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_calculate_level_population_simple[collisional_rate_solver0-radiative_transitions0]
2025-01-17T11:32:04.5984310Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_calculate_level_population_empty[collisional_rate_solver0-radiative_transitions0]
2025-01-17T11:32:04.5984740Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_calculate_level_population_zeros[collisional_rate_solver0-radiative_transitions0]
2025-01-17T11:32:04.5985100Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-01-17T11:32:04.5985380Z tardis/plasma/equilibrium/tests/test_rate_matrix.py::test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0]
2025-01-17T11:32:04.5985590Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/pickle.py:323: DeprecationWarning:
2025-01-17T11:32:04.5985630Z   
2025-01-17T11:32:04.5986750Z   numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
2025-01-17T11:32:04.5986760Z 
2025-01-17T11:32:04.5987110Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-01-17T11:32:04.5987360Z   /Users/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-01-17T11:32:04.5987400Z   
2025-01-17T11:32:04.5987620Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-01-17T11:32:04.5987970Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-01-17T11:32:04.5988020Z   
2025-01-17T11:32:04.5988440Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-01-17T11:32:04.5988440Z 
2025-01-17T11:32:04.5988610Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-01-17T11:32:04.5988780Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-01-17T11:32:04.5989020Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-01-17T11:32:04.5989200Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-01-17T11:32:04.5989250Z   
2025-01-17T11:32:04.5989390Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-01-17T11:32:04.5989450Z 
2025-01-17T11:32:04.5989650Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[100.0]
2025-01-17T11:32:04.5989830Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[1000.0]
2025-01-17T11:32:04.5990010Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[10000.0]
2025-01-17T11:32:04.5990200Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[100000.0]
2025-01-17T11:32:04.5990470Z   /Users/runner/work/tardis/tardis/tardis/spectrum/tests/test_numba_formal_integral.py:35: DeprecationWarning:
2025-01-17T11:32:04.5990520Z   
2025-01-17T11:32:04.5990760Z   `trapz` is deprecated. Use `trapezoid` instead, or one of the numerical integration functions in `scipy.integrate`.
2025-01-17T11:32:04.5990760Z 
2025-01-17T11:32:04.5990920Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-17T11:32:04.5991090Z   /Users/runner/work/tardis/tardis/tardis/spectrum/base.py:70: UserWarning:
2025-01-17T11:32:04.5991130Z   
2025-01-17T11:32:04.5991390Z   SpectrumSolver.spectrum_virtual_packets is zero. Please run the montecarlo simulation with no_of_virtual_packets > 0
2025-01-17T11:32:04.5991400Z 
2025-01-17T11:32:04.5991560Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-17T11:32:04.5991720Z   /Users/runner/work/tardis/tardis/tardis/spectrum/base.py:111: UserWarning:
2025-01-17T11:32:04.5991760Z   
2025-01-17T11:32:04.5992040Z   SpectrumSolver.integrator: The FormalIntegrator is not yet available.Please run the montecarlo simulation at least once.
2025-01-17T11:32:04.5992040Z 
2025-01-17T11:32:04.5992200Z tardis/tests/test_util.py::test_calculate_luminosity[string_io0-100 km-result0]
2025-01-17T11:32:04.5992360Z tardis/tests/test_util.py::test_calculate_luminosity[string_io1-500 km-result1]
2025-01-17T11:32:04.5992530Z   /Users/runner/work/tardis/tardis/tardis/util/base.py:188: DeprecationWarning:
2025-01-17T11:32:04.5992580Z   
2025-01-17T11:32:04.5992810Z   `trapz` is deprecated. Use `trapezoid` instead, or one of the numerical integration functions in `scipy.integrate`.
2025-01-17T11:32:04.5992810Z 
2025-01-17T11:32:04.5992950Z tardis/visualization/tools/tests/test_sdec_plot.py: 48 warnings
2025-01-17T11:32:04.5993180Z   /Users/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:736: DeprecationWarning:
2025-01-17T11:32:04.5993220Z   
2025-01-17T11:32:04.5993290Z   `in1d` is deprecated. Use `np.isin` instead.
2025-01-17T11:32:04.5993290Z 
2025-01-17T11:32:04.5993420Z tardis/visualization/tools/tests/test_sdec_plot.py: 48 warnings
2025-01-17T11:32:04.5993660Z   /Users/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:758: DeprecationWarning:
2025-01-17T11:32:04.5993710Z   
2025-01-17T11:32:04.5993780Z   `in1d` is deprecated. Use `np.isin` instead.
2025-01-17T11:32:04.5993780Z 
2025-01-17T11:32:04.5993910Z tardis/visualization/tools/tests/test_sdec_plot.py: 48 warnings
2025-01-17T11:32:04.5994140Z   /Users/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:779: DeprecationWarning:
2025-01-17T11:32:04.5994180Z   
2025-01-17T11:32:04.5994250Z   `in1d` is deprecated. Use `np.isin` instead.
2025-01-17T11:32:04.5994260Z 
2025-01-17T11:32:04.5994520Z tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4]
2025-01-17T11:32:04.5994740Z   /Users/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:1225: RuntimeWarning:
2025-01-17T11:32:04.5994790Z   
2025-01-17T11:32:04.5995460Z   More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
2025-01-17T11:32:04.5995860Z 
2025-01-17T11:32:04.5996180Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:32:04.5996510Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:32:04.5996790Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:32:04.5997060Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:32:04.5997340Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:32:04.5997610Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:32:04.5997900Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-17T11:32:04.5997940Z   
2025-01-17T11:32:04.5998090Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-01-17T11:32:04.5998230Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-17T11:32:04.5998430Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-17T11:32:04.5998430Z 
2025-01-17T11:32:04.5998700Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:32:04.5998970Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:32:04.5999240Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-17T11:32:04.5999290Z   
2025-01-17T11:32:04.5999430Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-01-17T11:32:04.5999570Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-17T11:32:04.5999750Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-17T11:32:04.5999760Z 
2025-01-17T11:32:04.6000030Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-17T11:32:04.6000310Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-17T11:32:04.6000350Z   
2025-01-17T11:32:04.6000490Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-01-17T11:32:04.6000630Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-17T11:32:04.6000810Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-17T11:32:04.6000820Z 
2025-01-17T11:32:04.6001160Z tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu]
2025-01-17T11:32:04.6001410Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/qgridnext/grid.py:825: DeprecationWarning:
2025-01-17T11:32:04.6001460Z   
2025-01-17T11:32:04.6001830Z   QgridWidget._grid_options_changed is deprecated in traitlets 4.1: use @observe and @unobserve instead.
2025-01-17T11:32:04.6001840Z 
2025-01-17T11:32:04.6002040Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-17T11:32:04.6002210Z   /Users/runner/work/tardis/tardis/tardis/io/util.py:289: PerformanceWarning:
2025-01-17T11:32:04.6002250Z   
2025-01-17T11:32:04.6002300Z   
2025-01-17T11:32:04.6002460Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-17T11:32:04.6002760Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-17T11:32:04.6002760Z 
2025-01-17T11:32:04.6002960Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-17T11:32:04.6003120Z   /Users/runner/work/tardis/tardis/tardis/io/util.py:292: PerformanceWarning:
2025-01-17T11:32:04.6003340Z   
2025-01-17T11:32:04.6003390Z   
2025-01-17T11:32:04.6003540Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-17T11:32:04.6003690Z   map directly to c-types [inferred_type->mixed,key->values] [items->None]
2025-01-17T11:32:04.6003690Z 
2025-01-17T11:32:04.6003890Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-17T11:32:04.6004080Z   /Users/runner/work/tardis/tardis/tardis/spectrum/formal_integral.py:398: UserWarning:
2025-01-17T11:32:04.6004120Z   
2025-01-17T11:32:04.6004270Z   The number of interpolate_shells was not specified. The value was set to 80.
2025-01-17T11:32:04.6004280Z 
2025-01-17T11:32:04.6004440Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-01-17T11:32:04.6004450Z 
2025-01-17T11:32:04.6004580Z ---------- coverage: platform darwin, python 3.12.4-final-0 ----------
2025-01-17T11:32:04.6004660Z Coverage HTML written to dir coverage_html_report
2025-01-17T11:32:04.6004740Z Coverage XML written to file coverage.xml
2025-01-17T11:32:04.6004740Z 
2025-01-17T11:32:04.6004840Z =========================== short test summary info ============================
2025-01-17T11:32:04.6005160Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_sobolev_line_opacity - AssertionError: MultiIndex level [0] are different
2025-01-17T11:32:04.6005160Z 
2025-01-17T11:32:04.6005260Z MultiIndex level [0] values are different (0.09581 %)
2025-01-17T11:32:04.6005350Z [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-17T11:32:04.6005390Z        ...
2025-01-17T11:32:04.6005450Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-17T11:32:04.6005540Z       dtype='int64', name='atomic_number', length=29224)
2025-01-17T11:32:04.6005620Z [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-17T11:32:04.6005670Z        ...
2025-01-17T11:32:04.6005720Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-17T11:32:04.6005810Z       dtype='int64', name='atomic_number', length=29224)
2025-01-17T11:32:04.6005880Z At positional index 54, first diff: 14 != 12
2025-01-17T11:32:04.6006100Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_beta_sobolevs - AssertionError: 
2025-01-17T11:32:04.6006170Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6006170Z 
2025-01-17T11:32:04.6006240Z Mismatched elements: 13536 / 584480 (2.32%)
2025-01-17T11:32:04.6006330Z Max absolute difference among violations: 0.99984222
2025-01-17T11:32:04.6006430Z Max relative difference among violations: 6337.12154973
2025-01-17T11:32:04.6006500Z  ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:32:04.6006550Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:32:04.6006600Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-17T11:32:04.6006670Z  DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:32:04.6006720Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:32:04.6006770Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-17T11:32:04.6007170Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6007170Z 
2025-01-17T11:32:04.6007270Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6007350Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6007400Z        ...
2025-01-17T11:32:04.6007460Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6007560Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6007640Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6007770Z        ...
2025-01-17T11:32:04.6007830Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6007920Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6007990Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6008440Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6008450Z 
2025-01-17T11:32:04.6008510Z Series values are different (4.04858 %)
2025-01-17T11:32:04.6008810Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6009080Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6009350Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6009750Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6009760Z 
2025-01-17T11:32:04.6009820Z Series values are different (6.47773 %)
2025-01-17T11:32:04.6010110Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6010420Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6010730Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6011120Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6011120Z 
2025-01-17T11:32:04.6011210Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6011290Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6011330Z        ...
2025-01-17T11:32:04.6011390Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6011490Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6011570Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6011660Z        ...
2025-01-17T11:32:04.6011720Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6011830Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6011890Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6012360Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6012360Z 
2025-01-17T11:32:04.6012460Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6012540Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6012580Z        ...
2025-01-17T11:32:04.6012640Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6012720Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6012800Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6012850Z        ...
2025-01-17T11:32:04.6012920Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6013010Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6013080Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6013450Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6013450Z 
2025-01-17T11:32:04.6013550Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6013630Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6013670Z        ...
2025-01-17T11:32:04.6013730Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6013820Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6013900Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6013950Z        ...
2025-01-17T11:32:04.6014010Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6014100Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6014180Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6014580Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6014580Z 
2025-01-17T11:32:04.6014690Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6014760Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6014810Z        ...
2025-01-17T11:32:04.6014860Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6014950Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6015030Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6015080Z        ...
2025-01-17T11:32:04.6015140Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6015240Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6015300Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6015710Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6015710Z 
2025-01-17T11:32:04.6015810Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6015890Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6015930Z        ...
2025-01-17T11:32:04.6015990Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6016080Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6016160Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6016200Z        ...
2025-01-17T11:32:04.6016250Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6016340Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6016740Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6017130Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6017130Z 
2025-01-17T11:32:04.6017290Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6017380Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6017420Z        ...
2025-01-17T11:32:04.6017480Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6017570Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6017660Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6017700Z        ...
2025-01-17T11:32:04.6017760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6017840Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6017910Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6018290Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6018290Z 
2025-01-17T11:32:04.6018390Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6018470Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6018520Z        ...
2025-01-17T11:32:04.6018580Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6018670Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6018750Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6018790Z        ...
2025-01-17T11:32:04.6018850Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6018940Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6019010Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6019390Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6019400Z 
2025-01-17T11:32:04.6019460Z Series values are different (4.04858 %)
2025-01-17T11:32:04.6019760Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6020020Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6020300Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6020680Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6020690Z 
2025-01-17T11:32:04.6020750Z Series values are different (6.47773 %)
2025-01-17T11:32:04.6021050Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6021400Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6021850Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6022230Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6022240Z 
2025-01-17T11:32:04.6022330Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6022410Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6022460Z        ...
2025-01-17T11:32:04.6022520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6022610Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6022690Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6022730Z        ...
2025-01-17T11:32:04.6022790Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6022880Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6022940Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6023350Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6023350Z 
2025-01-17T11:32:04.6023450Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6023530Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6023570Z        ...
2025-01-17T11:32:04.6023630Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6023720Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6023810Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6023850Z        ...
2025-01-17T11:32:04.6023910Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6024000Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6024070Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6024440Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6024440Z 
2025-01-17T11:32:04.6024540Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6024620Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6024660Z        ...
2025-01-17T11:32:04.6024720Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6024810Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6024890Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6024940Z        ...
2025-01-17T11:32:04.6025000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6025090Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6025160Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6025540Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6025610Z 
2025-01-17T11:32:04.6025710Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6025790Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6025840Z        ...
2025-01-17T11:32:04.6025900Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6026030Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6026120Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6026160Z        ...
2025-01-17T11:32:04.6026220Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6026310Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6026370Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6026760Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6026770Z 
2025-01-17T11:32:04.6026860Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6026950Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6026990Z        ...
2025-01-17T11:32:04.6027050Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6027140Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6027220Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6027260Z        ...
2025-01-17T11:32:04.6027320Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6027410Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6027480Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6027850Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6027860Z 
2025-01-17T11:32:04.6027950Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6028030Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6028080Z        ...
2025-01-17T11:32:04.6028130Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6028220Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6028310Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6028350Z        ...
2025-01-17T11:32:04.6028410Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6028500Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6028570Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6028940Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6028940Z 
2025-01-17T11:32:04.6029040Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6029110Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6029160Z        ...
2025-01-17T11:32:04.6029220Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6029310Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6029380Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6029430Z        ...
2025-01-17T11:32:04.6029490Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6029580Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6029650Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6030030Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6030030Z 
2025-01-17T11:32:04.6030090Z Series values are different (4.04858 %)
2025-01-17T11:32:04.6030390Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6030760Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6031030Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6031420Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6031420Z 
2025-01-17T11:32:04.6031490Z Series values are different (6.47773 %)
2025-01-17T11:32:04.6031780Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6032080Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6032380Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6032750Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6032750Z 
2025-01-17T11:32:04.6032850Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6032930Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6032980Z        ...
2025-01-17T11:32:04.6033040Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6033140Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6033220Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6033270Z        ...
2025-01-17T11:32:04.6033330Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6033420Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6033490Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6033880Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6033890Z 
2025-01-17T11:32:04.6033980Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6034060Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6034210Z        ...
2025-01-17T11:32:04.6034270Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6034360Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6034440Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6034480Z        ...
2025-01-17T11:32:04.6034540Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6034680Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6034760Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6035120Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6035120Z 
2025-01-17T11:32:04.6035220Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6035290Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6035340Z        ...
2025-01-17T11:32:04.6035400Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6035490Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6035570Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6035620Z        ...
2025-01-17T11:32:04.6035670Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6035760Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6035840Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6036220Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6036230Z 
2025-01-17T11:32:04.6036320Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6036400Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6036440Z        ...
2025-01-17T11:32:04.6036500Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6036590Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6036670Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6036720Z        ...
2025-01-17T11:32:04.6036770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6036860Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6036930Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6037330Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6037330Z 
2025-01-17T11:32:04.6037420Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6037500Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6037540Z        ...
2025-01-17T11:32:04.6037600Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6037680Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6037770Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6037810Z        ...
2025-01-17T11:32:04.6037870Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6037950Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6038030Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6038400Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6038400Z 
2025-01-17T11:32:04.6038500Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6038580Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6038620Z        ...
2025-01-17T11:32:04.6038680Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6038770Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6038850Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6038950Z        ...
2025-01-17T11:32:04.6039010Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6039100Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6039180Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6039570Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6039770Z 
2025-01-17T11:32:04.6039890Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6039970Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6040010Z        ...
2025-01-17T11:32:04.6040070Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6040160Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6040240Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6040280Z        ...
2025-01-17T11:32:04.6040340Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6040430Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6040500Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6040910Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6040920Z 
2025-01-17T11:32:04.6040980Z Series values are different (4.04858 %)
2025-01-17T11:32:04.6041280Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6041550Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6041930Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6042340Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6042350Z 
2025-01-17T11:32:04.6042410Z Series values are different (6.47773 %)
2025-01-17T11:32:04.6042710Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6043010Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6043310Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6043810Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6043860Z 
2025-01-17T11:32:04.6043960Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6044040Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6044080Z        ...
2025-01-17T11:32:04.6048490Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6048590Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6048680Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6048720Z        ...
2025-01-17T11:32:04.6048780Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6048870Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6048940Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6049370Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6049380Z 
2025-01-17T11:32:04.6049480Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6049560Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6049600Z        ...
2025-01-17T11:32:04.6049660Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6049750Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6049830Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6049880Z        ...
2025-01-17T11:32:04.6049940Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6050030Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6050100Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6050490Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6050490Z 
2025-01-17T11:32:04.6050590Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6050670Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6050710Z        ...
2025-01-17T11:32:04.6050770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6050860Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6050940Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6050980Z        ...
2025-01-17T11:32:04.6051040Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6051130Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6051200Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6051610Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6051610Z 
2025-01-17T11:32:04.6051700Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6051780Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6051820Z        ...
2025-01-17T11:32:04.6051880Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6051970Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6052050Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6052090Z        ...
2025-01-17T11:32:04.6052150Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6052240Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6052520Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6052930Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6052930Z 
2025-01-17T11:32:04.6053110Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6053190Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6053240Z        ...
2025-01-17T11:32:04.6053290Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6053390Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6053460Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6053510Z        ...
2025-01-17T11:32:04.6053570Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6053660Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6053730Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6054120Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6054130Z 
2025-01-17T11:32:04.6054220Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6054300Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6054340Z        ...
2025-01-17T11:32:04.6054400Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6054490Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6054580Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6054620Z        ...
2025-01-17T11:32:04.6054680Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6054770Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6054840Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6055300Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6055300Z 
2025-01-17T11:32:04.6055390Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6055480Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6055520Z        ...
2025-01-17T11:32:04.6055580Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6055670Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6055750Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6055790Z        ...
2025-01-17T11:32:04.6055850Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6055940Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6056010Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6056470Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6056470Z 
2025-01-17T11:32:04.6056540Z Series values are different (4.04858 %)
2025-01-17T11:32:04.6056840Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6057110Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6057590Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6058120Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6058120Z 
2025-01-17T11:32:04.6058190Z Series values are different (6.47773 %)
2025-01-17T11:32:04.6058480Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6058780Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6059090Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6059530Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6059540Z 
2025-01-17T11:32:04.6059640Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6059720Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6059770Z        ...
2025-01-17T11:32:04.6059820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6059910Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6060000Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6060040Z        ...
2025-01-17T11:32:04.6060090Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6060180Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6060250Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6060720Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6060730Z 
2025-01-17T11:32:04.6060820Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6060900Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6060950Z        ...
2025-01-17T11:32:04.6061000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6061100Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6061170Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6061220Z        ...
2025-01-17T11:32:04.6061280Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6061370Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6061430Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6061940Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6061940Z 
2025-01-17T11:32:04.6062040Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6062560Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6062610Z        ...
2025-01-17T11:32:04.6062670Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6062760Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6062840Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6062890Z        ...
2025-01-17T11:32:04.6062950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6063030Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6063100Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6063570Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6063580Z 
2025-01-17T11:32:04.6063670Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6063750Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6063800Z        ...
2025-01-17T11:32:04.6063860Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6063950Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6064030Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6064070Z        ...
2025-01-17T11:32:04.6064130Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6064220Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6064290Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6064740Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6064750Z 
2025-01-17T11:32:04.6064840Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6064920Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6064970Z        ...
2025-01-17T11:32:04.6065020Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6065120Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6065190Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6065240Z        ...
2025-01-17T11:32:04.6065290Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6065380Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6065450Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6065900Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6065900Z 
2025-01-17T11:32:04.6065990Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6066080Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6066120Z        ...
2025-01-17T11:32:04.6066180Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6066270Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6066360Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6066400Z        ...
2025-01-17T11:32:04.6066460Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6066550Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6066620Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6067040Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6067140Z 
2025-01-17T11:32:04.6067250Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6067330Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6067370Z        ...
2025-01-17T11:32:04.6067480Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6067580Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6067660Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6067700Z        ...
2025-01-17T11:32:04.6067760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6067850Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6067920Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6068340Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6068350Z 
2025-01-17T11:32:04.6068410Z Series values are different (4.04858 %)
2025-01-17T11:32:04.6068700Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6068970Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6069230Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6069660Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6069670Z 
2025-01-17T11:32:04.6069730Z Series values are different (6.47773 %)
2025-01-17T11:32:04.6070020Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6070320Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6070630Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6071040Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6071120Z 
2025-01-17T11:32:04.6071220Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6071290Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6071390Z        ...
2025-01-17T11:32:04.6071440Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6071540Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6071620Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6071670Z        ...
2025-01-17T11:32:04.6071720Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6071810Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6071880Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6072310Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6072320Z 
2025-01-17T11:32:04.6072420Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6072500Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6072540Z        ...
2025-01-17T11:32:04.6072600Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6072700Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6072770Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6072820Z        ...
2025-01-17T11:32:04.6072880Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6072960Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6073030Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6073440Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6073440Z 
2025-01-17T11:32:04.6073530Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6073620Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6073660Z        ...
2025-01-17T11:32:04.6073710Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6073810Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6073890Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6073930Z        ...
2025-01-17T11:32:04.6073990Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6074080Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6074150Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6074580Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6074580Z 
2025-01-17T11:32:04.6074670Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6074760Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6074800Z        ...
2025-01-17T11:32:04.6074860Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6074950Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6075030Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6075070Z        ...
2025-01-17T11:32:04.6075130Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6075220Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6075290Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6075710Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6075710Z 
2025-01-17T11:32:04.6075810Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6076250Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6076300Z        ...
2025-01-17T11:32:04.6076360Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6076450Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6076660Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6076700Z        ...
2025-01-17T11:32:04.6076760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6076850Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6076920Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6077330Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6077340Z 
2025-01-17T11:32:04.6077430Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6077510Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6077560Z        ...
2025-01-17T11:32:04.6077610Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6077710Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6077790Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6077840Z        ...
2025-01-17T11:32:04.6077890Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6077980Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6078050Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6078460Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6078470Z 
2025-01-17T11:32:04.6078560Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6078640Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6078680Z        ...
2025-01-17T11:32:04.6078740Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6078830Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6078910Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6078960Z        ...
2025-01-17T11:32:04.6079020Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6079110Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6079180Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6079600Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6079600Z 
2025-01-17T11:32:04.6079670Z Series values are different (4.04858 %)
2025-01-17T11:32:04.6079960Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6080230Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6080490Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6080990Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6081250Z 
2025-01-17T11:32:04.6081320Z Series values are different (6.47773 %)
2025-01-17T11:32:04.6081610Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6082070Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6082380Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6082790Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6082790Z 
2025-01-17T11:32:04.6082890Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6082970Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6083020Z        ...
2025-01-17T11:32:04.6083080Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6083170Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6083250Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6083290Z        ...
2025-01-17T11:32:04.6083350Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6083440Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6083510Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6083950Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6083950Z 
2025-01-17T11:32:04.6084050Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6084130Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6084180Z        ...
2025-01-17T11:32:04.6084230Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6084320Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6084400Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6084450Z        ...
2025-01-17T11:32:04.6084510Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6084600Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6084670Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6085080Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6085080Z 
2025-01-17T11:32:04.6085170Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6085250Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6085380Z        ...
2025-01-17T11:32:04.6085450Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6085540Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6085620Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6085660Z        ...
2025-01-17T11:32:04.6085770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6085850Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6085920Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6086350Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6086360Z 
2025-01-17T11:32:04.6086450Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6086530Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6086570Z        ...
2025-01-17T11:32:04.6086630Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6086720Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6086800Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6086840Z        ...
2025-01-17T11:32:04.6086910Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6087000Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6087070Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6087490Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6087490Z 
2025-01-17T11:32:04.6087600Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6087670Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6087720Z        ...
2025-01-17T11:32:04.6087770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6087870Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6087950Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6088000Z        ...
2025-01-17T11:32:04.6088050Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6088150Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6088220Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6088630Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6088630Z 
2025-01-17T11:32:04.6088720Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6088810Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6088850Z        ...
2025-01-17T11:32:04.6088910Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6089000Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6089090Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6089130Z        ...
2025-01-17T11:32:04.6089180Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6089270Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6089340Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6089770Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6089770Z 
2025-01-17T11:32:04.6089860Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6089950Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6089990Z        ...
2025-01-17T11:32:04.6090040Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6090130Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6090270Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6090320Z        ...
2025-01-17T11:32:04.6090380Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6090460Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6090590Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6091030Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6091040Z 
2025-01-17T11:32:04.6091110Z Series values are different (4.04858 %)
2025-01-17T11:32:04.6091400Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6091660Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6091930Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6092390Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6092390Z 
2025-01-17T11:32:04.6092460Z Series values are different (6.47773 %)
2025-01-17T11:32:04.6092750Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6093050Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6093360Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6093780Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6093780Z 
2025-01-17T11:32:04.6093880Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6093960Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6094010Z        ...
2025-01-17T11:32:04.6094060Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6094350Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6094430Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6094480Z        ...
2025-01-17T11:32:04.6094540Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6094630Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6094750Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6095200Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6095210Z 
2025-01-17T11:32:04.6095300Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6095380Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6095420Z        ...
2025-01-17T11:32:04.6095480Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6095570Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6095650Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6095700Z        ...
2025-01-17T11:32:04.6095760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6095840Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6095910Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6096340Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6096350Z 
2025-01-17T11:32:04.6096440Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6096520Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6096560Z        ...
2025-01-17T11:32:04.6096620Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6096710Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6096800Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6096850Z        ...
2025-01-17T11:32:04.6096910Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6097000Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6097070Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6097520Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6097520Z 
2025-01-17T11:32:04.6097620Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6097690Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6097740Z        ...
2025-01-17T11:32:04.6097800Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6097890Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6097970Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6098010Z        ...
2025-01-17T11:32:04.6098070Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6098160Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6098230Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6098680Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6098680Z 
2025-01-17T11:32:04.6098770Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6098850Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6098890Z        ...
2025-01-17T11:32:04.6098950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6099040Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6099120Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6099220Z        ...
2025-01-17T11:32:04.6099280Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6099370Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6099440Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6099880Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6100190Z 
2025-01-17T11:32:04.6100300Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6100380Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6100420Z        ...
2025-01-17T11:32:04.6100480Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6100570Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6100650Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6100700Z        ...
2025-01-17T11:32:04.6100760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6100850Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6100920Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6101330Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6101330Z 
2025-01-17T11:32:04.6101430Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6101510Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6101550Z        ...
2025-01-17T11:32:04.6101610Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6101700Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6101780Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6101820Z        ...
2025-01-17T11:32:04.6101880Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6101970Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6102040Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6102460Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6102460Z 
2025-01-17T11:32:04.6102530Z Series values are different (4.04858 %)
2025-01-17T11:32:04.6102820Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6103080Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6103360Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6103780Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6103780Z 
2025-01-17T11:32:04.6103850Z Series values are different (6.47773 %)
2025-01-17T11:32:04.6104240Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6104590Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6104900Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6105300Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6105310Z 
2025-01-17T11:32:04.6105400Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6105480Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6105530Z        ...
2025-01-17T11:32:04.6105580Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6105670Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6105750Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6105800Z        ...
2025-01-17T11:32:04.6105860Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6105950Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6106010Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6106450Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6106460Z 
2025-01-17T11:32:04.6106550Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6106640Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6106680Z        ...
2025-01-17T11:32:04.6106730Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6106820Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6106900Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6106940Z        ...
2025-01-17T11:32:04.6107000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6107090Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6107160Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6107560Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6107570Z 
2025-01-17T11:32:04.6107670Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6107750Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6107790Z        ...
2025-01-17T11:32:04.6107840Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6107930Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6108010Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6108060Z        ...
2025-01-17T11:32:04.6108110Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6108280Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6108350Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6108770Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6108830Z 
2025-01-17T11:32:04.6108930Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6109010Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6109060Z        ...
2025-01-17T11:32:04.6109110Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6109210Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6109290Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6109340Z        ...
2025-01-17T11:32:04.6109400Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6109480Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6109560Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6109970Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6109980Z 
2025-01-17T11:32:04.6110070Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6110150Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6110190Z        ...
2025-01-17T11:32:04.6110250Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6110340Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6110410Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6110460Z        ...
2025-01-17T11:32:04.6110520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6110600Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6110680Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6111100Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6111100Z 
2025-01-17T11:32:04.6111190Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6111280Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6111320Z        ...
2025-01-17T11:32:04.6111380Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6111470Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6111550Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6111590Z        ...
2025-01-17T11:32:04.6111650Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6111730Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6111810Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6112230Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6112240Z 
2025-01-17T11:32:04.6112300Z Series values are different (4.04858 %)
2025-01-17T11:32:04.6112590Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6112860Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6113240Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6113730Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6113740Z 
2025-01-17T11:32:04.6113810Z Series values are different (6.47773 %)
2025-01-17T11:32:04.6114100Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6114410Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6114710Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6115120Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6115130Z 
2025-01-17T11:32:04.6115230Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6115300Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6115350Z        ...
2025-01-17T11:32:04.6119590Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6119770Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6119850Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6119890Z        ...
2025-01-17T11:32:04.6119950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6120040Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6120110Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6120570Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6120580Z 
2025-01-17T11:32:04.6120670Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6120750Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6120790Z        ...
2025-01-17T11:32:04.6120860Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6120940Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6121020Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6121070Z        ...
2025-01-17T11:32:04.6121120Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6121210Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6121280Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6121930Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6121930Z 
2025-01-17T11:32:04.6122150Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6122420Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6122470Z        ...
2025-01-17T11:32:04.6122520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6122620Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6122700Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6122750Z        ...
2025-01-17T11:32:04.6122810Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6122890Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6122960Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6123390Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6123400Z 
2025-01-17T11:32:04.6123500Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6123580Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6123620Z        ...
2025-01-17T11:32:04.6123680Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6123770Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6123850Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6123890Z        ...
2025-01-17T11:32:04.6123950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6124040Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6124100Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6124540Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6124540Z 
2025-01-17T11:32:04.6124630Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6124720Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6124760Z        ...
2025-01-17T11:32:04.6124820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6124910Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6124990Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6125030Z        ...
2025-01-17T11:32:04.6125090Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6125180Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6125240Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6125660Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6125660Z 
2025-01-17T11:32:04.6125770Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6125840Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6125890Z        ...
2025-01-17T11:32:04.6125950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6126040Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6126120Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6126160Z        ...
2025-01-17T11:32:04.6126220Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6126310Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6126380Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6126790Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6126850Z 
2025-01-17T11:32:04.6126950Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6127030Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6127070Z        ...
2025-01-17T11:32:04.6127130Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6127260Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6127350Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6127390Z        ...
2025-01-17T11:32:04.6127450Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6127540Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6127610Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6128040Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6128040Z 
2025-01-17T11:32:04.6128110Z Series values are different (4.04858 %)
2025-01-17T11:32:04.6128400Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6128660Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6128930Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6129370Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6129370Z 
2025-01-17T11:32:04.6129430Z Series values are different (6.47773 %)
2025-01-17T11:32:04.6129730Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6130020Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6130320Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6130730Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6130780Z 
2025-01-17T11:32:04.6130880Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6130960Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6131000Z        ...
2025-01-17T11:32:04.6131110Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6131200Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6131290Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6131330Z        ...
2025-01-17T11:32:04.6131390Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6131480Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6131540Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6131980Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6131990Z 
2025-01-17T11:32:04.6132080Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6132160Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6132200Z        ...
2025-01-17T11:32:04.6132260Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6132360Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6132440Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6132480Z        ...
2025-01-17T11:32:04.6132540Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6132630Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6132700Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6133110Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6133110Z 
2025-01-17T11:32:04.6133210Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6133280Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6133330Z        ...
2025-01-17T11:32:04.6133390Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6133480Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6133560Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6133610Z        ...
2025-01-17T11:32:04.6133660Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6133750Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6133820Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6134260Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6134270Z 
2025-01-17T11:32:04.6134360Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6134440Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6134480Z        ...
2025-01-17T11:32:04.6134540Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6134630Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6134710Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6134760Z        ...
2025-01-17T11:32:04.6134810Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6134900Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6134970Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6135410Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6135410Z 
2025-01-17T11:32:04.6135500Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6135670Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6135710Z        ...
2025-01-17T11:32:04.6135770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6135860Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6135990Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6136030Z        ...
2025-01-17T11:32:04.6136090Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6136180Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6136250Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6136670Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6136670Z 
2025-01-17T11:32:04.6136770Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6136850Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6136890Z        ...
2025-01-17T11:32:04.6136950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6137040Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6137120Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6137170Z        ...
2025-01-17T11:32:04.6137230Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6137320Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6137390Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6137800Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6137810Z 
2025-01-17T11:32:04.6137900Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6137980Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6138020Z        ...
2025-01-17T11:32:04.6138080Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6138170Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6138250Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6138290Z        ...
2025-01-17T11:32:04.6138350Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6138440Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6138510Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6138930Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6138940Z 
2025-01-17T11:32:04.6139000Z Series values are different (4.04858 %)
2025-01-17T11:32:04.6139290Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6139560Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6139830Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6140330Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6140330Z 
2025-01-17T11:32:04.6140630Z Series values are different (6.47773 %)
2025-01-17T11:32:04.6140920Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6141220Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6141520Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6141940Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6141940Z 
2025-01-17T11:32:04.6142040Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6142130Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6142170Z        ...
2025-01-17T11:32:04.6142230Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6142320Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6142400Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6142450Z        ...
2025-01-17T11:32:04.6142510Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6142600Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6142670Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6143110Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6143110Z 
2025-01-17T11:32:04.6143200Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6143280Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6143320Z        ...
2025-01-17T11:32:04.6143380Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6143470Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6143550Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6143600Z        ...
2025-01-17T11:32:04.6143660Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6143750Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6143810Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6144220Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6144220Z 
2025-01-17T11:32:04.6144320Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6144400Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6144530Z        ...
2025-01-17T11:32:04.6144590Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6144680Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6144760Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6144810Z        ...
2025-01-17T11:32:04.6144870Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6145000Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6145080Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6145510Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6145510Z 
2025-01-17T11:32:04.6145600Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6145680Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6145730Z        ...
2025-01-17T11:32:04.6145790Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6145890Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6145970Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6146010Z        ...
2025-01-17T11:32:04.6146070Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6146160Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6146230Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6146660Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6146670Z 
2025-01-17T11:32:04.6146760Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6146840Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6146880Z        ...
2025-01-17T11:32:04.6146940Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6147030Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6147120Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6147160Z        ...
2025-01-17T11:32:04.6147220Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6147310Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6147380Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6147800Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6147810Z 
2025-01-17T11:32:04.6147900Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6147980Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6148020Z        ...
2025-01-17T11:32:04.6148080Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6148170Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6148260Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6148300Z        ...
2025-01-17T11:32:04.6148360Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6148440Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6148520Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6148940Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6148950Z 
2025-01-17T11:32:04.6149040Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6149120Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6149160Z        ...
2025-01-17T11:32:04.6149220Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6149310Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6149430Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6149490Z        ...
2025-01-17T11:32:04.6149540Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6149630Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6149700Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6150190Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6150190Z 
2025-01-17T11:32:04.6150250Z Series values are different (4.04858 %)
2025-01-17T11:32:04.6150550Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6150810Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6151090Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6151520Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6151530Z 
2025-01-17T11:32:04.6151590Z Series values are different (6.47773 %)
2025-01-17T11:32:04.6151880Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6152180Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6152480Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6152900Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6152900Z 
2025-01-17T11:32:04.6153000Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6153080Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6153120Z        ...
2025-01-17T11:32:04.6153180Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6153270Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6153450Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6153490Z        ...
2025-01-17T11:32:04.6153550Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6153640Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6153760Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6154200Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6154210Z 
2025-01-17T11:32:04.6154300Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6154380Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6154420Z        ...
2025-01-17T11:32:04.6154480Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6154570Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6154650Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6154690Z        ...
2025-01-17T11:32:04.6154750Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6154840Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6154910Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6155330Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6155330Z 
2025-01-17T11:32:04.6155430Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6155500Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6155550Z        ...
2025-01-17T11:32:04.6155610Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6155700Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6155780Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6155830Z        ...
2025-01-17T11:32:04.6155890Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6155980Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6156050Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6156480Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6156490Z 
2025-01-17T11:32:04.6156590Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6156660Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6156710Z        ...
2025-01-17T11:32:04.6156760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6156850Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6156930Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6156980Z        ...
2025-01-17T11:32:04.6157030Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6157120Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6157190Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6157630Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6157630Z 
2025-01-17T11:32:04.6157730Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6157810Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6157850Z        ...
2025-01-17T11:32:04.6157910Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6158000Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6158080Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6158160Z        ...
2025-01-17T11:32:04.6158230Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6158310Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6158380Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6158800Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6159020Z 
2025-01-17T11:32:04.6159130Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6159210Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6159260Z        ...
2025-01-17T11:32:04.6159320Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6159410Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6159480Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6159530Z        ...
2025-01-17T11:32:04.6159590Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6159680Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6159750Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6160200Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6160210Z 
2025-01-17T11:32:04.6160300Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6160380Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6160420Z        ...
2025-01-17T11:32:04.6160480Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6160570Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6160650Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6160690Z        ...
2025-01-17T11:32:04.6160750Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6160840Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6160910Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6161370Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6161370Z 
2025-01-17T11:32:04.6161440Z Series values are different (4.04858 %)
2025-01-17T11:32:04.6161730Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6161990Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6162360Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6162830Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6162830Z 
2025-01-17T11:32:04.6162900Z Series values are different (6.47773 %)
2025-01-17T11:32:04.6163330Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6163670Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6163980Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6164420Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6164430Z 
2025-01-17T11:32:04.6164520Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6164610Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6164650Z        ...
2025-01-17T11:32:04.6164710Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6164800Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6164880Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6164920Z        ...
2025-01-17T11:32:04.6164980Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6165070Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6165140Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6165610Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6165610Z 
2025-01-17T11:32:04.6165710Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6165790Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6165840Z        ...
2025-01-17T11:32:04.6165890Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6165990Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6166060Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6166110Z        ...
2025-01-17T11:32:04.6166170Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6166260Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6166330Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6166760Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6166770Z 
2025-01-17T11:32:04.6166870Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6166940Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6166990Z        ...
2025-01-17T11:32:04.6167040Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6167130Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6167210Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6167320Z        ...
2025-01-17T11:32:04.6167380Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6167470Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6167540Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6168080Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:32:04.6168140Z 
2025-01-17T11:32:04.6168270Z DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-01-17T11:32:04.6168570Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6172180Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464476, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812783, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235581, ...]
2025-01-17T11:32:04.6175810Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-01-17T11:32:04.6176290Z At positional index 124, first diff: 0.9929028359129612 != 0.9928779361771577
2025-01-17T11:32:04.6176880Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6176890Z 
2025-01-17T11:32:04.6176990Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6177070Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6177110Z        ...
2025-01-17T11:32:04.6177170Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6177260Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6177350Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6177390Z        ...
2025-01-17T11:32:04.6177450Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6177540Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6177610Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6178070Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6178080Z 
2025-01-17T11:32:04.6178170Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6178250Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6178290Z        ...
2025-01-17T11:32:04.6178350Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6178440Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6178530Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6178570Z        ...
2025-01-17T11:32:04.6178630Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6178720Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6178790Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6179250Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6179260Z 
2025-01-17T11:32:04.6179360Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6179430Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6179480Z        ...
2025-01-17T11:32:04.6179530Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6179620Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6179700Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6179750Z        ...
2025-01-17T11:32:04.6179810Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6179900Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6179970Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6180420Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6180420Z 
2025-01-17T11:32:04.6180520Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6180850Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6180890Z        ...
2025-01-17T11:32:04.6180950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6181050Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6181460Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6181510Z        ...
2025-01-17T11:32:04.6181560Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6181650Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6181730Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6182170Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6182180Z 
2025-01-17T11:32:04.6182270Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6182350Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6182390Z        ...
2025-01-17T11:32:04.6182450Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6182540Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6182620Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6182670Z        ...
2025-01-17T11:32:04.6182720Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6182810Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6182890Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6183330Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6183340Z 
2025-01-17T11:32:04.6183400Z Series values are different (4.04858 %)
2025-01-17T11:32:04.6183700Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6183970Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6184250Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6184700Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6184710Z 
2025-01-17T11:32:04.6184780Z Series values are different (6.47773 %)
2025-01-17T11:32:04.6185080Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6185390Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6185870Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6186310Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6186310Z 
2025-01-17T11:32:04.6186420Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6186510Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6186560Z        ...
2025-01-17T11:32:04.6186620Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6186720Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6186800Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6186860Z        ...
2025-01-17T11:32:04.6186920Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6187010Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6187090Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6187560Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6187570Z 
2025-01-17T11:32:04.6187660Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6187740Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6187790Z        ...
2025-01-17T11:32:04.6187840Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6187940Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6188020Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6188070Z        ...
2025-01-17T11:32:04.6188120Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6188210Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6188280Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6188710Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6188710Z 
2025-01-17T11:32:04.6188810Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6188900Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6188940Z        ...
2025-01-17T11:32:04.6189020Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6189160Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6189240Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6189290Z        ...
2025-01-17T11:32:04.6191640Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6191820Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6191900Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6192500Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:32:04.6192790Z 
2025-01-17T11:32:04.6192930Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-01-17T11:32:04.6193250Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6197310Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834782, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-17T11:32:04.6201360Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-17T11:32:04.6201820Z At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-01-17T11:32:04.6202390Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6202400Z 
2025-01-17T11:32:04.6202500Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6202580Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6202630Z        ...
2025-01-17T11:32:04.6202700Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6202800Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6202890Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6202930Z        ...
2025-01-17T11:32:04.6203000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6203090Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6203160Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6203650Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6203660Z 
2025-01-17T11:32:04.6203760Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6203840Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6203890Z        ...
2025-01-17T11:32:04.6203950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6204050Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6204130Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6204180Z        ...
2025-01-17T11:32:04.6204240Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6204330Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6204390Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6209070Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6209090Z 
2025-01-17T11:32:04.6209240Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6209320Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6209360Z        ...
2025-01-17T11:32:04.6209420Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6209520Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6209590Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6209660Z        ...
2025-01-17T11:32:04.6209710Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6209800Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6209880Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6210340Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6210340Z 
2025-01-17T11:32:04.6210440Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6210520Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6210570Z        ...
2025-01-17T11:32:04.6210630Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6210720Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6210800Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6211030Z        ...
2025-01-17T11:32:04.6211090Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6211190Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6211260Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6211690Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6212030Z 
2025-01-17T11:32:04.6212140Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6212220Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6212260Z        ...
2025-01-17T11:32:04.6212330Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6212420Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6212500Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6212540Z        ...
2025-01-17T11:32:04.6212600Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6212690Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6212760Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6213160Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6213160Z 
2025-01-17T11:32:04.6213230Z Series values are different (4.04858 %)
2025-01-17T11:32:04.6213540Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6213810Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6214090Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6214480Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6214480Z 
2025-01-17T11:32:04.6214550Z Series values are different (6.47773 %)
2025-01-17T11:32:04.6214840Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6215140Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6215450Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6215990Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6215990Z 
2025-01-17T11:32:04.6216090Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6216170Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6216220Z        ...
2025-01-17T11:32:04.6216270Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6216360Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6216440Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6216490Z        ...
2025-01-17T11:32:04.6216550Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6216640Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6216710Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6217110Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6217120Z 
2025-01-17T11:32:04.6217210Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6217290Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6217340Z        ...
2025-01-17T11:32:04.6217390Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6217490Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6217570Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6217620Z        ...
2025-01-17T11:32:04.6217680Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6217770Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6217840Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6218220Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6218220Z 
2025-01-17T11:32:04.6218320Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6218400Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6218440Z        ...
2025-01-17T11:32:04.6218500Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6218590Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6218670Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6218720Z        ...
2025-01-17T11:32:04.6218770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6218860Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6218930Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6219410Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:32:04.6219420Z 
2025-01-17T11:32:04.6219590Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-01-17T11:32:04.6219900Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6224260Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834782, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-17T11:32:04.6228530Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-01-17T11:32:04.6228700Z At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-01-17T11:32:04.6229150Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6229360Z 
2025-01-17T11:32:04.6229470Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6229560Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6229600Z        ...
2025-01-17T11:32:04.6229660Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6229820Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6229910Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6229950Z        ...
2025-01-17T11:32:04.6230010Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6230100Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6230240Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6230650Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6230650Z 
2025-01-17T11:32:04.6230760Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6230840Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6230880Z        ...
2025-01-17T11:32:04.6230940Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6231040Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6231130Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6231180Z        ...
2025-01-17T11:32:04.6231230Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6231330Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6231390Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6231850Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6231860Z 
2025-01-17T11:32:04.6231960Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6232050Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6232090Z        ...
2025-01-17T11:32:04.6232160Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6232250Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6232340Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6232380Z        ...
2025-01-17T11:32:04.6232440Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6232540Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6232610Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6232990Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6232990Z 
2025-01-17T11:32:04.6233090Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6233180Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6233220Z        ...
2025-01-17T11:32:04.6233280Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6233370Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6233460Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6233500Z        ...
2025-01-17T11:32:04.6233560Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6233650Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6233730Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6234120Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6234120Z 
2025-01-17T11:32:04.6234220Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6234290Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6234410Z        ...
2025-01-17T11:32:04.6234470Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6234580Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6234660Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6234710Z        ...
2025-01-17T11:32:04.6234970Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6235110Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6235190Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6235610Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6235630Z 
2025-01-17T11:32:04.6235690Z Series values are different (4.04858 %)
2025-01-17T11:32:04.6236300Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6236590Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6236870Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6237270Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6237280Z 
2025-01-17T11:32:04.6237350Z Series values are different (6.47773 %)
2025-01-17T11:32:04.6237640Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6238000Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6238310Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6238700Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6238710Z 
2025-01-17T11:32:04.6238810Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6238900Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6239120Z        ...
2025-01-17T11:32:04.6239180Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6239280Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6239360Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6239480Z        ...
2025-01-17T11:32:04.6239540Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6239640Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6239700Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6240110Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6240120Z 
2025-01-17T11:32:04.6240210Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6240290Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6240340Z        ...
2025-01-17T11:32:04.6240400Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6240490Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6240570Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6240610Z        ...
2025-01-17T11:32:04.6240680Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6240770Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6240840Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6241230Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6241230Z 
2025-01-17T11:32:04.6241330Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6241410Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6241450Z        ...
2025-01-17T11:32:04.6241510Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6241600Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6241690Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6241730Z        ...
2025-01-17T11:32:04.6241790Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6241880Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6241960Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6242360Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6242360Z 
2025-01-17T11:32:04.6242470Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6242550Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6242590Z        ...
2025-01-17T11:32:04.6242650Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6242750Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6242830Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6242870Z        ...
2025-01-17T11:32:04.6242930Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6243020Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6243090Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6243500Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6243500Z 
2025-01-17T11:32:04.6243590Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6243670Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6243710Z        ...
2025-01-17T11:32:04.6243770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6243920Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6244070Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6244120Z        ...
2025-01-17T11:32:04.6244170Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6244260Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6244390Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6244790Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6244790Z 
2025-01-17T11:32:04.6244890Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6244960Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6245010Z        ...
2025-01-17T11:32:04.6245070Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6245150Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6245240Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6245280Z        ...
2025-01-17T11:32:04.6245350Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6245440Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6245500Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6245900Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6245900Z 
2025-01-17T11:32:04.6245990Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6246070Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6246120Z        ...
2025-01-17T11:32:04.6246180Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6246270Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6246350Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6246390Z        ...
2025-01-17T11:32:04.6246460Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6246540Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6246610Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6247000Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6247010Z 
2025-01-17T11:32:04.6247080Z Series values are different (4.04858 %)
2025-01-17T11:32:04.6247370Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6247650Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6247920Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6248310Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6248320Z 
2025-01-17T11:32:04.6248620Z Series values are different (6.47773 %)
2025-01-17T11:32:04.6248920Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6249280Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6249580Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6249990Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6249990Z 
2025-01-17T11:32:04.6250100Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6250180Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6250220Z        ...
2025-01-17T11:32:04.6250280Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6250390Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6250460Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6250510Z        ...
2025-01-17T11:32:04.6250570Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6250670Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6250740Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6251150Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6251160Z 
2025-01-17T11:32:04.6251250Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6251330Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6251380Z        ...
2025-01-17T11:32:04.6251440Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6251550Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6251630Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6251680Z        ...
2025-01-17T11:32:04.6251740Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6251840Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6251910Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6252290Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6252300Z 
2025-01-17T11:32:04.6252390Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6252480Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6252520Z        ...
2025-01-17T11:32:04.6252580Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6252670Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6252760Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6252800Z        ...
2025-01-17T11:32:04.6252880Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6253040Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6253120Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6253520Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6253590Z 
2025-01-17T11:32:04.6253720Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6253800Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6253850Z        ...
2025-01-17T11:32:04.6253900Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6254000Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6254080Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6254120Z        ...
2025-01-17T11:32:04.6254180Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6254270Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6254340Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6254730Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6254740Z 
2025-01-17T11:32:04.6254840Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6254920Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6254990Z        ...
2025-01-17T11:32:04.6255050Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6255140Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6255220Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6255260Z        ...
2025-01-17T11:32:04.6255310Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6255400Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6255470Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6255860Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6255860Z 
2025-01-17T11:32:04.6255950Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6256050Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6256090Z        ...
2025-01-17T11:32:04.6256150Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6256240Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6256320Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6256370Z        ...
2025-01-17T11:32:04.6256420Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6256510Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6256580Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6256990Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6256990Z 
2025-01-17T11:32:04.6257090Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6257170Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6257220Z        ...
2025-01-17T11:32:04.6257280Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6257370Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6257450Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6257490Z        ...
2025-01-17T11:32:04.6257550Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6257640Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6257710Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6258120Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6258180Z 
2025-01-17T11:32:04.6258260Z Series values are different (4.04858 %)
2025-01-17T11:32:04.6258550Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6258870Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6259150Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6259580Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6259580Z 
2025-01-17T11:32:04.6259650Z Series values are different (6.47773 %)
2025-01-17T11:32:04.6259930Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6260250Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6260570Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6261000Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6261000Z 
2025-01-17T11:32:04.6261100Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6261180Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6261230Z        ...
2025-01-17T11:32:04.6261290Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6261380Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6261460Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6261510Z        ...
2025-01-17T11:32:04.6261560Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6261650Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6261720Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6262210Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6262210Z 
2025-01-17T11:32:04.6262310Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6262460Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6262500Z        ...
2025-01-17T11:32:04.6262570Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6262650Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6262740Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6262790Z        ...
2025-01-17T11:32:04.6262840Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6262940Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6263010Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6263410Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6263420Z 
2025-01-17T11:32:04.6263510Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6263600Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6263650Z        ...
2025-01-17T11:32:04.6263710Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6263810Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6263890Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6263930Z        ...
2025-01-17T11:32:04.6263990Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6264080Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6264150Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6264570Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6264580Z 
2025-01-17T11:32:04.6264680Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6264760Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6264810Z        ...
2025-01-17T11:32:04.6264860Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6264950Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6265030Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6265080Z        ...
2025-01-17T11:32:04.6265130Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6265230Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6265290Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6265720Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6265730Z 
2025-01-17T11:32:04.6265820Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6265900Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6265940Z        ...
2025-01-17T11:32:04.6266000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6266100Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6266300Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6266360Z        ...
2025-01-17T11:32:04.6266420Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6266510Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6266580Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6267000Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6267290Z 
2025-01-17T11:32:04.6267400Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6267480Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6267530Z        ...
2025-01-17T11:32:04.6267590Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6267810Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6267890Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6267930Z        ...
2025-01-17T11:32:04.6268010Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6268110Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6268170Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6268640Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6268650Z 
2025-01-17T11:32:04.6268770Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6268850Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6268900Z        ...
2025-01-17T11:32:04.6268960Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6269050Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6269140Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6269190Z        ...
2025-01-17T11:32:04.6269250Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6269340Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6269410Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6269910Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6269910Z 
2025-01-17T11:32:04.6269990Z Series values are different (4.04858 %)
2025-01-17T11:32:04.6270290Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6270570Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6270840Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-17T11:32:04.6271320Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] - AssertionError: Series are different
2025-01-17T11:32:04.6271330Z 
2025-01-17T11:32:04.6271390Z Series values are different (6.47773 %)
2025-01-17T11:32:04.6271690Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6272070Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6272570Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-17T11:32:04.6273030Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6273040Z 
2025-01-17T11:32:04.6273140Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6273220Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6273270Z        ...
2025-01-17T11:32:04.6273330Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6273430Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6273510Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6273560Z        ...
2025-01-17T11:32:04.6273620Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6273710Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6273780Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6274270Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6274270Z 
2025-01-17T11:32:04.6274370Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6274460Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6274500Z        ...
2025-01-17T11:32:04.6274560Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6274650Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6274740Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6274780Z        ...
2025-01-17T11:32:04.6274850Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6274930Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6275010Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6275460Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6275470Z 
2025-01-17T11:32:04.6275570Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6275650Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6275700Z        ...
2025-01-17T11:32:04.6275780Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6275890Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6275980Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6276020Z        ...
2025-01-17T11:32:04.6276080Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6276410Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6276490Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6276970Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6277220Z 
2025-01-17T11:32:04.6277320Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6277400Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6277440Z        ...
2025-01-17T11:32:04.6277500Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6277660Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6277740Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6277790Z        ...
2025-01-17T11:32:04.6277850Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6277980Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6278050Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6278600Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6278610Z 
2025-01-17T11:32:04.6278710Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6278800Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6278840Z        ...
2025-01-17T11:32:04.6278900Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6278990Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6279080Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6279120Z        ...
2025-01-17T11:32:04.6279190Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6279270Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6279340Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6279810Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-17T11:32:04.6279810Z 
2025-01-17T11:32:04.6279910Z MultiIndex level [2] values are different (4.04858 %)
2025-01-17T11:32:04.6279990Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6280040Z        ...
2025-01-17T11:32:04.6280100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6280180Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6280270Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-17T11:32:04.6280310Z        ...
2025-01-17T11:32:04.6280370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-17T11:32:04.6280460Z       dtype='int64', name='level_number_lower', length=247)
2025-01-17T11:32:04.6280530Z At positional index 75, first diff: 6 != 7
2025-01-17T11:32:04.6280760Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[stimulated_emission_factor] - AssertionError: 
2025-01-17T11:32:04.6280840Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6280840Z 
2025-01-17T11:32:04.6280900Z Mismatched elements: 120 / 584480 (0.0205%)
2025-01-17T11:32:04.6280990Z Max absolute difference among violations: 1.
2025-01-17T11:32:04.6281060Z Max relative difference among violations: 1.
2025-01-17T11:32:04.6281180Z  ACTUAL: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-17T11:32:04.6281250Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-17T11:32:04.6281340Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-17T11:32:04.6281450Z  DESIRED: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-17T11:32:04.6281530Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-17T11:32:04.6281610Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-17T11:32:04.6281850Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_lower_level_index] - AssertionError: 
2025-01-17T11:32:04.6281920Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6282000Z 
2025-01-17T11:32:04.6282070Z Mismatched elements: 748 / 29224 (2.56%)
2025-01-17T11:32:04.6282160Z Max absolute difference among violations: 4005
2025-01-17T11:32:04.6282250Z Max relative difference among violations: 26.00649351
2025-01-17T11:32:04.6282340Z  ACTUAL: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-17T11:32:04.6282500Z  DESIRED: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-17T11:32:04.6282740Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_upper_level_index] - AssertionError: 
2025-01-17T11:32:04.6282810Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6282810Z 
2025-01-17T11:32:04.6282870Z Mismatched elements: 1847 / 29224 (6.32%)
2025-01-17T11:32:04.6282950Z Max absolute difference among violations: 4046
2025-01-17T11:32:04.6283040Z Max relative difference among violations: 24.82208589
2025-01-17T11:32:04.6283130Z  ACTUAL: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-17T11:32:04.6283220Z  DESIRED: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-17T11:32:04.6283430Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_sobolev] - AssertionError: 
2025-01-17T11:32:04.6283490Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6283500Z 
2025-01-17T11:32:04.6283570Z Mismatched elements: 13536 / 584480 (2.32%)
2025-01-17T11:32:04.6283670Z Max absolute difference among violations: 0.99984222
2025-01-17T11:32:04.6283760Z Max relative difference among violations: 6337.12154973
2025-01-17T11:32:04.6283830Z  ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:32:04.6283880Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:32:04.6283940Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-17T11:32:04.6284000Z  DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:32:04.6284060Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-17T11:32:04.6284110Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-17T11:32:04.6284300Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines] - AssertionError: 
2025-01-17T11:32:04.6288350Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6288380Z 
2025-01-17T11:32:04.6288470Z Mismatched elements: 13335 / 263016 (5.07%)
2025-01-17T11:32:04.6288570Z Max absolute difference among violations: 4.25260542e+12
2025-01-17T11:32:04.6288660Z Max relative difference among violations: 18196.0085861
2025-01-17T11:32:04.6288810Z  ACTUAL: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-17T11:32:04.6288860Z         4.043917e+10, 6.677200e-07],
2025-01-17T11:32:04.6288970Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-17T11:32:04.6289100Z  DESIRED: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-17T11:32:04.6289160Z         4.043917e+10, 6.677200e-07],
2025-01-17T11:32:04.6289260Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-17T11:32:04.6289450Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[f_lu] - AssertionError: 
2025-01-17T11:32:04.6289530Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6289530Z 
2025-01-17T11:32:04.6289600Z Mismatched elements: 2221 / 29224 (7.6%)
2025-01-17T11:32:04.6289690Z Max absolute difference among violations: 2.92713618
2025-01-17T11:32:04.6289780Z Max relative difference among violations: 18196.0085861
2025-01-17T11:32:04.6289910Z  ACTUAL: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-17T11:32:04.6289970Z        1.126883e+00, 4.414472e-04])
2025-01-17T11:32:04.6290090Z  DESIRED: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-17T11:32:04.6290140Z        1.126883e+00, 4.414472e-04])
2025-01-17T11:32:04.6290360Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[tau_sobolevs] - AssertionError: 
2025-01-17T11:32:04.6290420Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6290420Z 
2025-01-17T11:32:04.6290500Z Mismatched elements: 39620 / 584480 (6.78%)
2025-01-17T11:32:04.6290600Z Max absolute difference among violations: 282815.33818472
2025-01-17T11:32:04.6290890Z Max relative difference among violations: 4.12352828e+47
2025-01-17T11:32:04.6291020Z  ACTUAL: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-17T11:32:04.6291080Z         0.000000e+00, 0.000000e+00],
2025-01-17T11:32:04.6291180Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-17T11:32:04.6291370Z  DESIRED: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-17T11:32:04.6291430Z         0.000000e+00, 0.000000e+00],
2025-01-17T11:32:04.6291540Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-17T11:32:04.6291930Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_w] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:32:04.6291930Z 
2025-01-17T11:32:04.6292060Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-17T11:32:04.6292110Z [index]: [0, 1]
2025-01-17T11:32:04.6292180Z [left]:  [0.40039163797855976, 0.4500690173218345]
2025-01-17T11:32:04.6292250Z [right]: [0.40039163797855976, 0.45013644671958974]
2025-01-17T11:32:04.6292390Z At positional index 1, first diff: 0.4500690173218345 != 0.45013644671958974
2025-01-17T11:32:04.6292780Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_rad] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:32:04.6292780Z 
2025-01-17T11:32:04.6292920Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-17T11:32:04.6292960Z [index]: [0, 1]
2025-01-17T11:32:04.6293030Z [left]:  [9967.488442185557, 10091.396322818851]
2025-01-17T11:32:04.6293100Z [right]: [9967.488442185557, 10090.925208074616]
2025-01-17T11:32:04.6293230Z At positional index 1, first diff: 10091.396322818851 != 10090.925208074616
2025-01-17T11:32:04.6293660Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_electron_densities] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-17T11:32:04.6293670Z 
2025-01-17T11:32:04.6293800Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-17T11:32:04.6293840Z [index]: [0, 1]
2025-01-17T11:32:04.6293910Z [left]:  [2869544645.3209715, 2881024886.0882792]
2025-01-17T11:32:04.6293980Z [right]: [2869544645.3209715, 2880986026.9779425]
2025-01-17T11:32:04.6294110Z At positional index 1, first diff: 2881024886.0882792 != 2880986026.9779425
2025-01-17T11:32:04.6294410Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[nu_bar_estimator] - AssertionError: Series are different
2025-01-17T11:32:04.6294410Z 
2025-01-17T11:32:04.6294480Z Series values are different (100.0 %)
2025-01-17T11:32:04.6294580Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-17T11:32:04.6295520Z [left]:  [1.0202042777991753e+29, 8.604643039338655e+28, 7.621843612415326e+28, 6.887796775939633e+28, 6.338143063845967e+28, 5.961770832970249e+28, 5.583215038688499e+28, 5.26214201104387e+28, 5.00719468999816e+28, 4.795144203550334e+28, 4.630537292368217e+28, 4.425690259081018e+28, 4.270865369572798e+28, 4.094544283657345e+28, 3.972280940559004e+28, 3.884152385274923e+28, 3.7498225331847723e+28, 3.6666118688506634e+28, 3.5319738797726287e+28, 3.437270715325205e+28]
2025-01-17T11:32:04.6296470Z [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-01-17T11:32:04.6296630Z At positional index 0, first diff: 1.0202042777991753e+29 != 1.0190851489144414e+29
2025-01-17T11:32:04.6296970Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[j_estimator] - AssertionError: Series are different
2025-01-17T11:32:04.6296980Z 
2025-01-17T11:32:04.6297050Z Series values are different (100.0 %)
2025-01-17T11:32:04.6297140Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-17T11:32:04.6298080Z [left]:  [116635492761989.08, 98171051632121.94, 86872515261186.84, 78289696965690.05, 72209193315676.42, 67743848273202.76, 63510940656108.0, 60117004438842.5, 57572723670164.91, 55316097836075.18, 53398108009568.71, 51391839595543.54, 49914799926154.195, 48252386019894.61, 46984233483222.1, 46076787175987.44, 45005288890715.74, 44179675761283.02, 43040066710169.69, 42141149121109.82]
2025-01-17T11:32:04.6298830Z [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-01-17T11:32:04.6298970Z At positional index 0, first diff: 116635492761989.08 != 116548101693134.0
2025-01-17T11:32:04.6299260Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[t_radiative] - AssertionError: Series are different
2025-01-17T11:32:04.6299270Z 
2025-01-17T11:32:04.6299330Z Series values are different (90.0 %)
2025-01-17T11:32:04.6299430Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-17T11:32:04.6300210Z [left]:  [10091.396322818851, 10113.672762424394, 10138.57214647089, 10142.40782954104, 10149.471061360664, 10124.731447668686, 10084.96501000204, 10057.88480134284, 10073.983914823793, 10031.924501830883, 10029.890159447663, 9982.658841271636, 9943.375727608092, 9914.259749796103, 9893.924180562475, 9854.860600288932, 9802.891513260798, 9774.848565783677, 9735.162327402864, 9698.911095826039]
2025-01-17T11:32:04.6301000Z [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-01-17T11:32:04.6301140Z At positional index 0, first diff: 10091.396322818851 != 10090.925208074616
2025-01-17T11:32:04.6301430Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[dilution_factor] - AssertionError: Series are different
2025-01-17T11:32:04.6301440Z 
2025-01-17T11:32:04.6301500Z Series values are different (95.0 %)
2025-01-17T11:32:04.6301590Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-17T11:32:04.6302430Z [left]:  [0.4500690173218345, 0.3591778672440072, 0.299315794490968, 0.2578615845098735, 0.2254422032786788, 0.20109997630618956, 0.18257381854718482, 0.166581017494628, 0.15049754388199085, 0.13975435818105286, 0.12862206084807348, 0.12092168181342122, 0.1134233405695467, 0.10650389106044364, 0.10016109465785483, 0.09484390983006763, 0.09052533757303871, 0.08585912682814001, 0.0820302832176511, 0.07824287530618068]
2025-01-17T11:32:04.6303300Z [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-01-17T11:32:04.6303450Z At positional index 0, first diff: 0.4500690173218345 != 0.45013644671958974
2025-01-17T11:32:04.6303730Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_nus] - AssertionError: Series are different
2025-01-17T11:32:04.6303800Z 
2025-01-17T11:32:04.6303880Z Series values are different (5.1125 %)
2025-01-17T11:32:04.6304270Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6308420Z [left]:  [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.94, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.25, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313314.8, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-01-17T11:32:04.6312600Z [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-01-17T11:32:04.6312890Z At positional index 56, first diff: 657003154645147.8 != 657025184715239.1
2025-01-17T11:32:04.6313200Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_energies] - AssertionError: Series are different
2025-01-17T11:32:04.6313200Z 
2025-01-17T11:32:04.6313270Z Series values are different (1.3025 %)
2025-01-17T11:32:04.6313570Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-17T11:32:04.6318940Z [left]:  [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503752e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.5580712211859562e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.270905632364821e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544443e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.533792518100767e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-17T11:32:04.6324010Z [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-17T11:32:04.6324690Z At positional index 414, first diff: 2.5657552576608082e-05 != 2.5347525852067693e-05
2025-01-17T11:32:04.6324990Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets - AssertionError: 
2025-01-17T11:32:04.6325060Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6325060Z 
2025-01-17T11:32:04.6325130Z Mismatched elements: 309 / 10000 (3.09%)
2025-01-17T11:32:04.6325230Z Max absolute difference among violations: 4.30543741e+37
2025-01-17T11:32:04.6325320Z Max relative difference among violations: 1.
2025-01-17T11:32:04.6325440Z  ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.6325500Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6325620Z  DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.6325700Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6326010Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets_reabsorbed - AssertionError: 
2025-01-17T11:32:04.6326080Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6326090Z 
2025-01-17T11:32:04.6326150Z Mismatched elements: 252 / 10000 (2.52%)
2025-01-17T11:32:04.6326250Z Max absolute difference among violations: 4.15247374e+37
2025-01-17T11:32:04.6326330Z Max relative difference among violations: 1.
2025-01-17T11:32:04.6326450Z  ACTUAL: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.6326510Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6326640Z  DESIRED: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.6326690Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6326930Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve - AssertionError: 
2025-01-17T11:32:04.6327000Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6327000Z 
2025-01-17T11:32:04.6327060Z Mismatched elements: 309 / 10000 (3.09%)
2025-01-17T11:32:04.6327220Z Max absolute difference among violations: 4.30543741e+37
2025-01-17T11:32:04.6327300Z Max relative difference among violations: 1.
2025-01-17T11:32:04.6327420Z  ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.6327470Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6327810Z  DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.6327860Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6328100Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_j_blue_estimators - AssertionError: 
2025-01-17T11:32:04.6328170Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6328170Z 
2025-01-17T11:32:04.6328250Z Mismatched elements: 491895 / 584480 (84.2%)
2025-01-17T11:32:04.6328340Z Max absolute difference among violations: 5.32418652e-19
2025-01-17T11:32:04.6328440Z Max relative difference among violations: 12.23359055
2025-01-17T11:32:04.6328500Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.6328560Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.6328610Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:32:04.6328680Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.6328730Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.6328790Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:32:04.6328990Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_spectrum - AssertionError: 
2025-01-17T11:32:04.6329060Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6329070Z 
2025-01-17T11:32:04.6329130Z Mismatched elements: 4832 / 10000 (48.3%)
2025-01-17T11:32:04.6329220Z Max absolute difference among violations: 1.38672909e+39
2025-01-17T11:32:04.6329310Z Max relative difference among violations: 5.25284451
2025-01-17T11:32:04.6329440Z  ACTUAL: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-01-17T11:32:04.6329490Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6329610Z  DESIRED: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-01-17T11:32:04.6329670Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6329900Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_virtual_spectrum - AssertionError: 
2025-01-17T11:32:04.6329970Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6329970Z 
2025-01-17T11:32:04.6330030Z Mismatched elements: 5933 / 10000 (59.3%)
2025-01-17T11:32:04.6330140Z Max absolute difference among violations: 5.26760031e+38
2025-01-17T11:32:04.6330230Z Max relative difference among violations: 35562.41947434
2025-01-17T11:32:04.6330350Z  ACTUAL: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-01-17T11:32:04.6330400Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6330540Z  DESIRED: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-01-17T11:32:04.6330590Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6330950Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-downbranch] - AssertionError: 
2025-01-17T11:32:04.6331020Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6331030Z 
2025-01-17T11:32:04.6331100Z Mismatched elements: 441164 / 584480 (75.5%)
2025-01-17T11:32:04.6331200Z Max absolute difference among violations: 7.03072887e-19
2025-01-17T11:32:04.6331300Z Max relative difference among violations: 7.72237896
2025-01-17T11:32:04.6331360Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.6331420Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.6331470Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:32:04.6331550Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.6331590Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.6331650Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:32:04.6331980Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-downbranch] - AssertionError: 
2025-01-17T11:32:04.6332120Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6332130Z 
2025-01-17T11:32:04.6332190Z Mismatched elements: 3719 / 10000 (37.2%)
2025-01-17T11:32:04.6332290Z Max absolute difference among violations: 2.09719426e+39
2025-01-17T11:32:04.6332440Z Max relative difference among violations: 4.0036592
2025-01-17T11:32:04.6332570Z  ACTUAL: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-01-17T11:32:04.6332620Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6332750Z  DESIRED: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-01-17T11:32:04.6332800Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6333160Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-downbranch] - AssertionError: 
2025-01-17T11:32:04.6333230Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6333230Z 
2025-01-17T11:32:04.6333300Z Mismatched elements: 10000 / 10000 (100%)
2025-01-17T11:32:04.6333390Z Max absolute difference among violations: 5.00661745e+37
2025-01-17T11:32:04.6333490Z Max relative difference among violations: 17.51202125
2025-01-17T11:32:04.6333620Z  ACTUAL: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-01-17T11:32:04.6333670Z        2.279436e+31, 2.243943e+31])
2025-01-17T11:32:04.6333800Z  DESIRED: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-01-17T11:32:04.6333850Z        2.292907e+31, 2.257206e+31])
2025-01-17T11:32:04.6334210Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-macroatom] - AssertionError: 
2025-01-17T11:32:04.6334270Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6334280Z 
2025-01-17T11:32:04.6334350Z Mismatched elements: 441248 / 584480 (75.5%)
2025-01-17T11:32:04.6334450Z Max absolute difference among violations: 4.67863561e-19
2025-01-17T11:32:04.6334550Z Max relative difference among violations: 3.25828651
2025-01-17T11:32:04.6334620Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.6334680Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.6334730Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:32:04.6334800Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.6334860Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.6334910Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:32:04.6335240Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-macroatom] - AssertionError: 
2025-01-17T11:32:04.6335310Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6335310Z 
2025-01-17T11:32:04.6335380Z Mismatched elements: 3913 / 10000 (39.1%)
2025-01-17T11:32:04.6335470Z Max absolute difference among violations: 8.5486318e+38
2025-01-17T11:32:04.6335570Z Max relative difference among violations: 1.86186015
2025-01-17T11:32:04.6335690Z  ACTUAL: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-01-17T11:32:04.6335750Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6335880Z  DESIRED: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-01-17T11:32:04.6335930Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6336280Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-macroatom] - AssertionError: 
2025-01-17T11:32:04.6336370Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6336370Z 
2025-01-17T11:32:04.6336430Z Mismatched elements: 10000 / 10000 (100%)
2025-01-17T11:32:04.6336530Z Max absolute difference among violations: 2.90101642e+37
2025-01-17T11:32:04.6336620Z Max relative difference among violations: 0.98973757
2025-01-17T11:32:04.6336750Z  ACTUAL: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-01-17T11:32:04.6336800Z        1.330497e+31, 1.294462e+31])
2025-01-17T11:32:04.6336980Z  DESIRED: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-01-17T11:32:04.6337040Z        1.375141e+31, 1.337928e+31])
2025-01-17T11:32:04.6337480Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-macroatom] - AssertionError: 
2025-01-17T11:32:04.6337720Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6337730Z 
2025-01-17T11:32:04.6337790Z Mismatched elements: 441248 / 584480 (75.5%)
2025-01-17T11:32:04.6337890Z Max absolute difference among violations: 4.67863561e-19
2025-01-17T11:32:04.6337980Z Max relative difference among violations: 3.25828651
2025-01-17T11:32:04.6338060Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.6338100Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.6338160Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:32:04.6338230Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.6338280Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.6338330Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:32:04.6338670Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-macroatom] - AssertionError: 
2025-01-17T11:32:04.6338730Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6338740Z 
2025-01-17T11:32:04.6338800Z Mismatched elements: 3913 / 10000 (39.1%)
2025-01-17T11:32:04.6338900Z Max absolute difference among violations: 8.5486318e+38
2025-01-17T11:32:04.6338990Z Max relative difference among violations: 1.86186015
2025-01-17T11:32:04.6339110Z  ACTUAL: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-01-17T11:32:04.6339170Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6339290Z  DESIRED: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-01-17T11:32:04.6339340Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6339690Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-macroatom] - AssertionError: 
2025-01-17T11:32:04.6339760Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6339770Z 
2025-01-17T11:32:04.6339830Z Mismatched elements: 10000 / 10000 (100%)
2025-01-17T11:32:04.6339920Z Max absolute difference among violations: 2.99183385e+37
2025-01-17T11:32:04.6340020Z Max relative difference among violations: 0.98992197
2025-01-17T11:32:04.6340140Z  ACTUAL: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-01-17T11:32:04.6340190Z        1.260980e+31, 1.222587e+31])
2025-01-17T11:32:04.6340310Z  DESIRED: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-01-17T11:32:04.6340370Z        1.193005e+31, 1.164854e+31])
2025-01-17T11:32:04.6340720Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-downbranch] - AssertionError: 
2025-01-17T11:32:04.6340790Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6340790Z 
2025-01-17T11:32:04.6340880Z Mismatched elements: 441164 / 584480 (75.5%)
2025-01-17T11:32:04.6340980Z Max absolute difference among violations: 7.03072887e-19
2025-01-17T11:32:04.6341070Z Max relative difference among violations: 7.72237896
2025-01-17T11:32:04.6341140Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.6341190Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.6341250Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:32:04.6341320Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.6341370Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-17T11:32:04.6341420Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-17T11:32:04.6341750Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-downbranch] - AssertionError: 
2025-01-17T11:32:04.6341810Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6341820Z 
2025-01-17T11:32:04.6341880Z Mismatched elements: 3719 / 10000 (37.2%)
2025-01-17T11:32:04.6342110Z Max absolute difference among violations: 2.09719426e+39
2025-01-17T11:32:04.6342210Z Max relative difference among violations: 4.0036592
2025-01-17T11:32:04.6342330Z  ACTUAL: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-01-17T11:32:04.6342390Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6342570Z  DESIRED: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-01-17T11:32:04.6342620Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6342990Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-downbranch] - AssertionError: 
2025-01-17T11:32:04.6343090Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6343090Z 
2025-01-17T11:32:04.6343150Z Mismatched elements: 10000 / 10000 (100%)
2025-01-17T11:32:04.6343250Z Max absolute difference among violations: 5.0153284e+37
2025-01-17T11:32:04.6343340Z Max relative difference among violations: 4.90769503
2025-01-17T11:32:04.6343470Z  ACTUAL: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-01-17T11:32:04.6343520Z        2.088676e+31, 2.060278e+31])
2025-01-17T11:32:04.6343650Z  DESIRED: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-01-17T11:32:04.6343700Z        2.124305e+31, 2.101081e+31])
2025-01-17T11:32:04.6343980Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop - AssertionError: 
2025-01-17T11:32:04.6344050Z Not equal to tolerance rtol=1e-13, atol=0
2025-01-17T11:32:04.6344050Z 
2025-01-17T11:32:04.6344110Z Mismatched elements: 20 / 20 (100%)
2025-01-17T11:32:04.6344200Z Max absolute difference among violations: 2.25821059e+25
2025-01-17T11:32:04.6344290Z Max relative difference among violations: 0.00054426
2025-01-17T11:32:04.6344410Z  ACTUAL: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-01-17T11:32:04.6344500Z        6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-01-17T11:32:04.6344600Z        4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-01-17T11:32:04.6344710Z  DESIRED: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-01-17T11:32:04.6344800Z        6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-01-17T11:32:04.6344910Z        4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-01-17T11:32:04.6345240Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop_vpacket_log - AssertionError: 
2025-01-17T11:32:04.6345320Z Not equal to tolerance rtol=1e-12, atol=1e-15
2025-01-17T11:32:04.6345320Z 
2025-01-17T11:32:04.6345390Z Mismatched elements: 20 / 20 (100%)
2025-01-17T11:32:04.6345480Z Max absolute difference among violations: 1.93283629e+25
2025-01-17T11:32:04.6345580Z Max relative difference among violations: 0.00029148
2025-01-17T11:32:04.6345710Z  ACTUAL: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-01-17T11:32:04.6345800Z        6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-01-17T11:32:04.6345880Z        4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-01-17T11:32:04.6346010Z  DESIRED: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-01-17T11:32:04.6346090Z        6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-01-17T11:32:04.6346180Z        4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-01-17T11:32:04.6346450Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_boundary_interactions - AssertionError: 
2025-01-17T11:32:04.6346500Z Arrays are not equal
2025-01-17T11:32:04.6346510Z 
2025-01-17T11:32:04.6346560Z (shapes (4000, 64), (4000, 62) mismatch)
2025-01-17T11:32:04.6346680Z  ACTUAL: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-01-17T11:32:04.6346730Z         (-1, -1, -1), (-1, -1, -1)],
2025-01-17T11:32:04.6346820Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-01-17T11:32:04.6347030Z  DESIRED: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-01-17T11:32:04.6347090Z         (-1, -1, -1), (-1, -1, -1)],
2025-01-17T11:32:04.6347160Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-01-17T11:32:04.6347510Z FAILED tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py::test_montecarlo_main_loop_weighted - AssertionError: 
2025-01-17T11:32:04.6347670Z Not equal to tolerance rtol=0.01, atol=0
2025-01-17T11:32:04.6347680Z 
2025-01-17T11:32:04.6347740Z Mismatched elements: 33 / 100000 (0.033%)
2025-01-17T11:32:04.6347840Z Max absolute difference among violations: 2.00640487e-05
2025-01-17T11:32:04.6347930Z Max relative difference among violations: 2.06329455
2025-01-17T11:32:04.6348060Z  ACTUAL: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-17T11:32:04.6348120Z        -9.757136e-06,  1.019764e-05])
2025-01-17T11:32:04.6348260Z  DESIRED: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-17T11:32:04.6348310Z        -9.757136e-06,  1.019764e-05])
2025-01-17T11:32:04.6348680Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - AssertionError: 
2025-01-17T11:32:04.6348740Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6348750Z 
2025-01-17T11:32:04.6348800Z (shapes (508,), (515,) mismatch)
2025-01-17T11:32:04.6348920Z  ACTUAL: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-17T11:32:04.6349010Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-17T11:32:04.6349100Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-17T11:32:04.6349220Z  DESIRED: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-17T11:32:04.6349290Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-17T11:32:04.6349380Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-17T11:32:04.6349740Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - AssertionError: 
2025-01-17T11:32:04.6349820Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6349820Z 
2025-01-17T11:32:04.6349870Z (shapes (558,), (560,) mismatch)
2025-01-17T11:32:04.6349990Z  ACTUAL: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-17T11:32:04.6350070Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-17T11:32:04.6350160Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-17T11:32:04.6350270Z  DESIRED: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-17T11:32:04.6350360Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-17T11:32:04.6350450Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-17T11:32:04.6350820Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - AssertionError: 
2025-01-17T11:32:04.6350890Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6350900Z 
2025-01-17T11:32:04.6350960Z (shapes (147,), (136,) mismatch)
2025-01-17T11:32:04.6351070Z  ACTUAL: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-17T11:32:04.6351160Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-17T11:32:04.6351250Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-17T11:32:04.6351360Z  DESIRED: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-17T11:32:04.6351440Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-17T11:32:04.6351530Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-17T11:32:04.6351890Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - AssertionError: 
2025-01-17T11:32:04.6352030Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6352030Z 
2025-01-17T11:32:04.6352080Z (shapes (159,), (153,) mismatch)
2025-01-17T11:32:04.6352200Z  ACTUAL: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-17T11:32:04.6352280Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-17T11:32:04.6352430Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-17T11:32:04.6352550Z  DESIRED: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-17T11:32:04.6352630Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-17T11:32:04.6352720Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-17T11:32:04.6353080Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - AssertionError: 
2025-01-17T11:32:04.6353140Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6353150Z 
2025-01-17T11:32:04.6353200Z (shapes (508,), (515,) mismatch)
2025-01-17T11:32:04.6353320Z  ACTUAL: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-17T11:32:04.6353400Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-17T11:32:04.6353490Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-17T11:32:04.6353600Z  DESIRED: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-17T11:32:04.6353680Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-17T11:32:04.6353770Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-17T11:32:04.6354120Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - AssertionError: 
2025-01-17T11:32:04.6354190Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6354200Z 
2025-01-17T11:32:04.6354250Z (shapes (1466,), (1481,) mismatch)
2025-01-17T11:32:04.6354370Z  ACTUAL: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-01-17T11:32:04.6354430Z        11152.962595, 11172.044815])
2025-01-17T11:32:04.6354560Z  DESIRED: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-01-17T11:32:04.6354610Z        11398.237865, 11111.204868])
2025-01-17T11:32:04.6354960Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - AssertionError: 
2025-01-17T11:32:04.6355040Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6355040Z 
2025-01-17T11:32:04.6355090Z (shapes (147,), (136,) mismatch)
2025-01-17T11:32:04.6355200Z  ACTUAL: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-17T11:32:04.6355290Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-17T11:32:04.6355380Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-17T11:32:04.6355490Z  DESIRED: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-17T11:32:04.6355580Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-17T11:32:04.6355670Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-17T11:32:04.6356020Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - AssertionError: 
2025-01-17T11:32:04.6356090Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6356090Z 
2025-01-17T11:32:04.6356150Z (shapes (379,), (381,) mismatch)
2025-01-17T11:32:04.6356260Z  ACTUAL: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-01-17T11:32:04.6356340Z        11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-01-17T11:32:04.6356430Z        14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-01-17T11:32:04.6356660Z  DESIRED: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-01-17T11:32:04.6356750Z        13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-01-17T11:32:04.6356930Z        11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-01-17T11:32:04.6357260Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - AssertionError: 
2025-01-17T11:32:04.6357330Z Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:32:04.6357390Z 
2025-01-17T11:32:04.6357450Z Mismatched elements: 4 / 40 (10%)
2025-01-17T11:32:04.6357530Z Max absolute difference among violations: 12.
2025-01-17T11:32:04.6357600Z Max relative difference among violations: 0.8
2025-01-17T11:32:04.6357660Z  ACTUAL: array([[1.10e+04, 1.67e+02],
2025-01-17T11:32:04.6357720Z        [1.19e+04, 1.67e+02],
2025-01-17T11:32:04.6357770Z        [1.19e+04, 7.60e+01],...
2025-01-17T11:32:04.6357820Z  DESIRED: array([[1.10e+04, 1.89e+02],
2025-01-17T11:32:04.6357870Z        [1.19e+04, 1.89e+02],
2025-01-17T11:32:04.6357920Z        [1.19e+04, 8.20e+01],...
2025-01-17T11:32:04.6358250Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - AssertionError: 
2025-01-17T11:32:04.6358320Z Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:32:04.6358320Z 
2025-01-17T11:32:04.6358390Z Mismatched elements: 4 / 40 (10%)
2025-01-17T11:32:04.6358460Z Max absolute difference among violations: 12.
2025-01-17T11:32:04.6358540Z Max relative difference among violations: 0.8
2025-01-17T11:32:04.6358590Z  ACTUAL: array([[1.10e+04, 1.67e+02],
2025-01-17T11:32:04.6358640Z        [1.19e+04, 1.67e+02],
2025-01-17T11:32:04.6358690Z        [1.19e+04, 7.60e+01],...
2025-01-17T11:32:04.6358750Z  DESIRED: array([[1.10e+04, 1.89e+02],
2025-01-17T11:32:04.6358800Z        [1.19e+04, 1.89e+02],
2025-01-17T11:32:04.6358850Z        [1.19e+04, 8.20e+01],...
2025-01-17T11:32:04.6359180Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - AssertionError: 
2025-01-17T11:32:04.6359240Z Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:32:04.6359250Z 
2025-01-17T11:32:04.6359310Z Mismatched elements: 4 / 20 (20%)
2025-01-17T11:32:04.6359380Z Max absolute difference among violations: 24
2025-01-17T11:32:04.6359470Z Max relative difference among violations: 0.39393939
2025-01-17T11:32:04.6359590Z  ACTUAL: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-17T11:32:04.6359650Z          2,   5,   5,   5,   5,   0,   0])
2025-01-17T11:32:04.6359770Z  DESIRED: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-17T11:32:04.6359830Z          2,   5,   5,   5,   5,   0,   0])
2025-01-17T11:32:04.6360160Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - AssertionError: 
2025-01-17T11:32:04.6360230Z Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:32:04.6360230Z 
2025-01-17T11:32:04.6360290Z Mismatched elements: 4 / 40 (10%)
2025-01-17T11:32:04.6360370Z Max absolute difference among violations: 24.
2025-01-17T11:32:04.6360450Z Max relative difference among violations: 0.65
2025-01-17T11:32:04.6360510Z  ACTUAL: array([[1.10e+04, 2.72e+02],
2025-01-17T11:32:04.6360560Z        [1.19e+04, 2.72e+02],
2025-01-17T11:32:04.6360610Z        [1.19e+04, 1.10e+02],...
2025-01-17T11:32:04.6360660Z  DESIRED: array([[1.10e+04, 3.06e+02],
2025-01-17T11:32:04.6360710Z        [1.19e+04, 3.06e+02],
2025-01-17T11:32:04.6360760Z        [1.19e+04, 1.18e+02],...
2025-01-17T11:32:04.6361090Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - AssertionError: 
2025-01-17T11:32:04.6361160Z Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:32:04.6361160Z 
2025-01-17T11:32:04.6361220Z Mismatched elements: 4 / 20 (20%)
2025-01-17T11:32:04.6361300Z Max absolute difference among violations: 12
2025-01-17T11:32:04.6361370Z Max relative difference among violations: 0.8
2025-01-17T11:32:04.6361490Z  ACTUAL: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-01-17T11:32:04.6361640Z          0,   0,   0,   0,   0,   0,   0])
2025-01-17T11:32:04.6361760Z  DESIRED: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-01-17T11:32:04.6361810Z          0,   0,   0,   0,   0,   0,   0])
2025-01-17T11:32:04.6362140Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - AssertionError: 
2025-01-17T11:32:04.6362250Z Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:32:04.6362250Z 
2025-01-17T11:32:04.6362310Z Mismatched elements: 4 / 20 (20%)
2025-01-17T11:32:04.6362390Z Max absolute difference among violations: 12
2025-01-17T11:32:04.6362460Z Max relative difference among violations: 0.8
2025-01-17T11:32:04.6362570Z  ACTUAL: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-01-17T11:32:04.6362630Z          0,   0,   0,   0,   0,   0,   0])
2025-01-17T11:32:04.6362740Z  DESIRED: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-01-17T11:32:04.6362800Z          0,   0,   0,   0,   0,   0,   0])
2025-01-17T11:32:04.6363120Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - AssertionError: 
2025-01-17T11:32:04.6363190Z Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:32:04.6363190Z 
2025-01-17T11:32:04.6363250Z Mismatched elements: 4 / 20 (20%)
2025-01-17T11:32:04.6363330Z Max absolute difference among violations: 24
2025-01-17T11:32:04.6363420Z Max relative difference among violations: 0.39393939
2025-01-17T11:32:04.6363540Z  ACTUAL: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-17T11:32:04.6363590Z          2,   5,   5,   5,   5,   0,   0])
2025-01-17T11:32:04.6363710Z  DESIRED: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-17T11:32:04.6363760Z          2,   5,   5,   5,   5,   0,   0])
2025-01-17T11:32:04.6364090Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - AssertionError: 
2025-01-17T11:32:04.6364160Z Not equal to tolerance rtol=0.3, atol=3
2025-01-17T11:32:04.6364160Z 
2025-01-17T11:32:04.6364220Z Mismatched elements: 4 / 20 (20%)
2025-01-17T11:32:04.6364300Z Max absolute difference among violations: 24
2025-01-17T11:32:04.6364380Z Max relative difference among violations: 0.65
2025-01-17T11:32:04.6364500Z  ACTUAL: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-17T11:32:04.6364550Z          2,   5,   5,   5,   5,   0,   0])
2025-01-17T11:32:04.6364670Z  DESIRED: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-17T11:32:04.6364720Z          2,   5,   5,   5,   5,   0,   0])
2025-01-17T11:32:04.6365090Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - AssertionError: 
2025-01-17T11:32:04.6365160Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6365160Z 
2025-01-17T11:32:04.6365230Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-17T11:32:04.6365330Z Max absolute difference among violations: 4.3299331e-05
2025-01-17T11:32:04.6365420Z Max relative difference among violations: 4.76021355
2025-01-17T11:32:04.6365550Z  ACTUAL: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.6365610Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6365730Z  DESIRED: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.6365780Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6366150Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - AssertionError: 
2025-01-17T11:32:04.6366220Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6366220Z 
2025-01-17T11:32:04.6366280Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-17T11:32:04.6366380Z Max absolute difference among violations: 4.3299331e-05
2025-01-17T11:32:04.6366530Z Max relative difference among violations: 4.76021355
2025-01-17T11:32:04.6366660Z  ACTUAL: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.6366710Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6366830Z  DESIRED: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.6367120Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6367500Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - AssertionError: 
2025-01-17T11:32:04.6367570Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6367570Z 
2025-01-17T11:32:04.6367630Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-17T11:32:04.6367730Z Max absolute difference among violations: 4.3299331e-05
2025-01-17T11:32:04.6367820Z Max relative difference among violations: 4.76021355
2025-01-17T11:32:04.6367950Z  ACTUAL: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.6368010Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6368130Z  DESIRED: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.6368180Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6368560Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - AssertionError: 
2025-01-17T11:32:04.6368630Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6368630Z 
2025-01-17T11:32:04.6368690Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-17T11:32:04.6368790Z Max absolute difference among violations: 4.3299331e-05
2025-01-17T11:32:04.6368880Z Max relative difference among violations: 4.76021355
2025-01-17T11:32:04.6369000Z  ACTUAL: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.6369050Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6369180Z  DESIRED: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.6369230Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6369600Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - AssertionError: 
2025-01-17T11:32:04.6369670Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6369670Z 
2025-01-17T11:32:04.6369740Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-17T11:32:04.6369830Z Max absolute difference among violations: 3.16368526e-05
2025-01-17T11:32:04.6369930Z Max relative difference among violations: 178.93768705
2025-01-17T11:32:04.6370070Z  ACTUAL: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.6370110Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6370240Z  DESIRED: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.6370290Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6370660Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - AssertionError: 
2025-01-17T11:32:04.6370730Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6370730Z 
2025-01-17T11:32:04.6370790Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-17T11:32:04.6370890Z Max absolute difference among violations: 3.16368526e-05
2025-01-17T11:32:04.6370990Z Max relative difference among violations: 178.93768705
2025-01-17T11:32:04.6371110Z  ACTUAL: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.6371170Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6371290Z  DESIRED: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.6371340Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6371710Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - AssertionError: 
2025-01-17T11:32:04.6371850Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6371850Z 
2025-01-17T11:32:04.6371910Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-17T11:32:04.6372010Z Max absolute difference among violations: 3.16368526e-05
2025-01-17T11:32:04.6372100Z Max relative difference among violations: 178.93768705
2025-01-17T11:32:04.6372290Z  ACTUAL: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.6372350Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6372470Z  DESIRED: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.6372520Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6372900Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - AssertionError: 
2025-01-17T11:32:04.6372960Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6372970Z 
2025-01-17T11:32:04.6373030Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-17T11:32:04.6373130Z Max absolute difference among violations: 3.16368526e-05
2025-01-17T11:32:04.6377820Z Max relative difference among violations: 178.93768705
2025-01-17T11:32:04.6378050Z  ACTUAL: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.6378110Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6378230Z  DESIRED: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-17T11:32:04.6378290Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6378660Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - AssertionError: 
2025-01-17T11:32:04.6378730Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6378740Z 
2025-01-17T11:32:04.6378800Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-17T11:32:04.6378890Z Max absolute difference among violations: 5.1807441e+47
2025-01-17T11:32:04.6378980Z Max relative difference among violations: 4.76021355
2025-01-17T11:32:04.6379120Z  ACTUAL: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.6379170Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6379290Z  DESIRED: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.6379340Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6379710Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - AssertionError: 
2025-01-17T11:32:04.6379780Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6379780Z 
2025-01-17T11:32:04.6379850Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-17T11:32:04.6379940Z Max absolute difference among violations: 5.1807441e+47
2025-01-17T11:32:04.6380040Z Max relative difference among violations: 4.76021355
2025-01-17T11:32:04.6380160Z  ACTUAL: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.6380220Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6380350Z  DESIRED: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.6380390Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6380760Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - AssertionError: 
2025-01-17T11:32:04.6380830Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6380840Z 
2025-01-17T11:32:04.6380890Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-17T11:32:04.6380990Z Max absolute difference among violations: 5.1807441e+47
2025-01-17T11:32:04.6381080Z Max relative difference among violations: 4.76021355
2025-01-17T11:32:04.6381210Z  ACTUAL: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.6381260Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6381380Z  DESIRED: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.6381680Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6382050Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - AssertionError: 
2025-01-17T11:32:04.6382120Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6382220Z 
2025-01-17T11:32:04.6382280Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-17T11:32:04.6382380Z Max absolute difference among violations: 5.1807441e+47
2025-01-17T11:32:04.6382470Z Max relative difference among violations: 4.76021355
2025-01-17T11:32:04.6382600Z  ACTUAL: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.6382640Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6382780Z  DESIRED: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.6382830Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6383210Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - AssertionError: 
2025-01-17T11:32:04.6383270Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6383280Z 
2025-01-17T11:32:04.6383340Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-17T11:32:04.6383440Z Max absolute difference among violations: 3.78533417e+47
2025-01-17T11:32:04.6383530Z Max relative difference among violations: 178.93768705
2025-01-17T11:32:04.6383650Z  ACTUAL: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.6383710Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6383830Z  DESIRED: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.6383880Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6384250Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - AssertionError: 
2025-01-17T11:32:04.6384320Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6384330Z 
2025-01-17T11:32:04.6384390Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-17T11:32:04.6384490Z Max absolute difference among violations: 3.78533417e+47
2025-01-17T11:32:04.6384580Z Max relative difference among violations: 178.93768705
2025-01-17T11:32:04.6384700Z  ACTUAL: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.6384750Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6384890Z  DESIRED: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.6384930Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6385310Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - AssertionError: 
2025-01-17T11:32:04.6385370Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6385370Z 
2025-01-17T11:32:04.6385440Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-17T11:32:04.6385540Z Max absolute difference among violations: 3.78533417e+47
2025-01-17T11:32:04.6385640Z Max relative difference among violations: 178.93768705
2025-01-17T11:32:04.6385760Z  ACTUAL: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.6385810Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6385940Z  DESIRED: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.6386000Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6386360Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - AssertionError: 
2025-01-17T11:32:04.6386430Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6386430Z 
2025-01-17T11:32:04.6386490Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-17T11:32:04.6386590Z Max absolute difference among violations: 3.78533417e+47
2025-01-17T11:32:04.6386680Z Max relative difference among violations: 178.93768705
2025-01-17T11:32:04.6387050Z  ACTUAL: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.6387100Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6387230Z  DESIRED: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-17T11:32:04.6387280Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6387680Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - AssertionError: 
2025-01-17T11:32:04.6387750Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6387750Z 
2025-01-17T11:32:04.6387810Z Mismatched elements: 446 / 1938 (23%)
2025-01-17T11:32:04.6387910Z Max absolute difference among violations: 2.08771842e-13
2025-01-17T11:32:04.6388000Z Max relative difference among violations: 3.01858991
2025-01-17T11:32:04.6388120Z  ACTUAL: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.6388170Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6388300Z  DESIRED: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.6388350Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6388690Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - AssertionError: 
2025-01-17T11:32:04.6388760Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6388760Z 
2025-01-17T11:32:04.6388830Z Mismatched elements: 446 / 1938 (23%)
2025-01-17T11:32:04.6388930Z Max absolute difference among violations: 2.08771842e-13
2025-01-17T11:32:04.6389020Z Max relative difference among violations: 3.01858991
2025-01-17T11:32:04.6389140Z  ACTUAL: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.6389190Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6389310Z  DESIRED: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.6389370Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6389710Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - AssertionError: 
2025-01-17T11:32:04.6389780Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6389780Z 
2025-01-17T11:32:04.6389840Z Mismatched elements: 446 / 1938 (23%)
2025-01-17T11:32:04.6389940Z Max absolute difference among violations: 2.08771842e-13
2025-01-17T11:32:04.6390030Z Max relative difference among violations: 3.01858991
2025-01-17T11:32:04.6390150Z  ACTUAL: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.6390210Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6390330Z  DESIRED: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.6390380Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6390720Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - AssertionError: 
2025-01-17T11:32:04.6390790Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6390790Z 
2025-01-17T11:32:04.6390860Z Mismatched elements: 446 / 1938 (23%)
2025-01-17T11:32:04.6390950Z Max absolute difference among violations: 2.08771842e-13
2025-01-17T11:32:04.6391040Z Max relative difference among violations: 3.01858991
2025-01-17T11:32:04.6391170Z  ACTUAL: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.6391220Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6391350Z  DESIRED: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.6391400Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6391730Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - AssertionError: 
2025-01-17T11:32:04.6391800Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6391800Z 
2025-01-17T11:32:04.6391860Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-17T11:32:04.6392010Z Max absolute difference among violations: 3.02728422e-13
2025-01-17T11:32:04.6392110Z Max relative difference among violations: 15766.1580412
2025-01-17T11:32:04.6392230Z  ACTUAL: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.6392290Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6392590Z  DESIRED: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.6392650Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6392980Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - AssertionError: 
2025-01-17T11:32:04.6393050Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6393050Z 
2025-01-17T11:32:04.6393120Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-17T11:32:04.6393210Z Max absolute difference among violations: 3.02728422e-13
2025-01-17T11:32:04.6393300Z Max relative difference among violations: 15766.1580412
2025-01-17T11:32:04.6393430Z  ACTUAL: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.6393490Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6393610Z  DESIRED: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.6393660Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6394000Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - AssertionError: 
2025-01-17T11:32:04.6394070Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6394070Z 
2025-01-17T11:32:04.6394140Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-17T11:32:04.6394230Z Max absolute difference among violations: 3.02728422e-13
2025-01-17T11:32:04.6394320Z Max relative difference among violations: 15766.1580412
2025-01-17T11:32:04.6394440Z  ACTUAL: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.6394490Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6394620Z  DESIRED: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.6394670Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6395010Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - AssertionError: 
2025-01-17T11:32:04.6395080Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6395080Z 
2025-01-17T11:32:04.6395140Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-17T11:32:04.6395240Z Max absolute difference among violations: 3.02728422e-13
2025-01-17T11:32:04.6395340Z Max relative difference among violations: 15766.1580412
2025-01-17T11:32:04.6395460Z  ACTUAL: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.6395520Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6395640Z  DESIRED: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-17T11:32:04.6395690Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6396030Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - AssertionError: 
2025-01-17T11:32:04.6396100Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6396110Z 
2025-01-17T11:32:04.6396160Z Mismatched elements: 446 / 1938 (23%)
2025-01-17T11:32:04.6396260Z Max absolute difference among violations: 2.49794504e+39
2025-01-17T11:32:04.6396350Z Max relative difference among violations: 3.01858991
2025-01-17T11:32:04.6396480Z  ACTUAL: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.6396530Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6396770Z  DESIRED: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.6396820Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6397160Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - AssertionError: 
2025-01-17T11:32:04.6397330Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6397330Z 
2025-01-17T11:32:04.6397400Z Mismatched elements: 446 / 1938 (23%)
2025-01-17T11:32:04.6397490Z Max absolute difference among violations: 2.49794504e+39
2025-01-17T11:32:04.6397590Z Max relative difference among violations: 3.01858991
2025-01-17T11:32:04.6397770Z  ACTUAL: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.6397820Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6397940Z  DESIRED: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.6398000Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6398340Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - AssertionError: 
2025-01-17T11:32:04.6398410Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6398410Z 
2025-01-17T11:32:04.6398470Z Mismatched elements: 446 / 1938 (23%)
2025-01-17T11:32:04.6398570Z Max absolute difference among violations: 2.49794504e+39
2025-01-17T11:32:04.6398660Z Max relative difference among violations: 3.01858991
2025-01-17T11:32:04.6398780Z  ACTUAL: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.6398830Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6398960Z  DESIRED: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.6399010Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6399350Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - AssertionError: 
2025-01-17T11:32:04.6399420Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6399420Z 
2025-01-17T11:32:04.6399480Z Mismatched elements: 446 / 1938 (23%)
2025-01-17T11:32:04.6399580Z Max absolute difference among violations: 2.49794504e+39
2025-01-17T11:32:04.6399670Z Max relative difference among violations: 3.01858991
2025-01-17T11:32:04.6399800Z  ACTUAL: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.6399850Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6399980Z  DESIRED: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.6400030Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6400370Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - AssertionError: 
2025-01-17T11:32:04.6400430Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6400440Z 
2025-01-17T11:32:04.6400500Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-17T11:32:04.6400600Z Max absolute difference among violations: 3.62213099e+39
2025-01-17T11:32:04.6400690Z Max relative difference among violations: 15766.15804934
2025-01-17T11:32:04.6400820Z  ACTUAL: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.6400870Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6400990Z  DESIRED: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.6401040Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6401380Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - AssertionError: 
2025-01-17T11:32:04.6401440Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6401450Z 
2025-01-17T11:32:04.6401510Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-17T11:32:04.6401610Z Max absolute difference among violations: 3.62213099e+39
2025-01-17T11:32:04.6401700Z Max relative difference among violations: 15766.15804934
2025-01-17T11:32:04.6401820Z  ACTUAL: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.6401870Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6402000Z  DESIRED: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.6402110Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6402440Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - AssertionError: 
2025-01-17T11:32:04.6402510Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6402520Z 
2025-01-17T11:32:04.6402630Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-17T11:32:04.6402730Z Max absolute difference among violations: 3.62213099e+39
2025-01-17T11:32:04.6402830Z Max relative difference among violations: 15766.15804934
2025-01-17T11:32:04.6402950Z  ACTUAL: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.6403000Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6403130Z  DESIRED: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.6403180Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6403520Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - AssertionError: 
2025-01-17T11:32:04.6403590Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-17T11:32:04.6403590Z 
2025-01-17T11:32:04.6403660Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-17T11:32:04.6403750Z Max absolute difference among violations: 3.62213099e+39
2025-01-17T11:32:04.6403850Z Max relative difference among violations: 15766.15804934
2025-01-17T11:32:04.6403970Z  ACTUAL: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.6404030Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6404150Z  DESIRED: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-17T11:32:04.6404210Z        0.000000e+00, 0.000000e+00])
2025-01-17T11:32:04.6404420Z = 273 failed, 1137 passed, 357 skipped, 2 deselected, 19 xfailed, 8 xpassed, 222 warnings in 697.26s (0:11:37) =
2025-01-17T11:32:06.2015560Z ##[error]Process completed with exit code 1.
