2025-01-07T17:42:13.2373035Z Requested labels: macos-latest
2025-01-07T17:42:13.2373479Z Job defined at: tardis-sn/tardis/.github/workflows/tests.yml@refs/pull/2928/merge
2025-01-07T17:42:13.2373633Z Waiting for a runner to pick up this job...
2025-01-07T17:42:13.5225727Z Job is waiting for a hosted runner to come online.
2025-01-07T17:42:16.9015457Z Job is about to start running on the hosted runner: GitHub Actions 46 (hosted)
2025-01-07T17:42:18.3801810Z Current runner version: '2.321.0'
2025-01-07T17:42:18.3817010Z ##[group]Operating System
2025-01-07T17:42:18.3817440Z macOS
2025-01-07T17:42:18.3817730Z 14.7.2
2025-01-07T17:42:18.3818020Z 23H311
2025-01-07T17:42:18.3818300Z ##[endgroup]
2025-01-07T17:42:18.3818610Z ##[group]Runner Image
2025-01-07T17:42:18.3818950Z Image: macos-14-arm64
2025-01-07T17:42:18.3819260Z Version: 20241216.651
2025-01-07T17:42:18.3819920Z Included Software: https://github.com/actions/runner-images/blob/macos-14-arm64/20241216.651/images/macos/macos-14-arm64-Readme.md
2025-01-07T17:42:18.3820820Z Image Release: https://github.com/actions/runner-images/releases/tag/macos-14-arm64%2F20241216.651
2025-01-07T17:42:18.3821370Z ##[endgroup]
2025-01-07T17:42:18.3821670Z ##[group]Runner Image Provisioner
2025-01-07T17:42:18.3822060Z 2.0.404.1+573eac7f0cc07d6bb82d8b9bf5e1ffa69a554644
2025-01-07T17:42:18.3822450Z ##[endgroup]
2025-01-07T17:42:18.3823740Z ##[group]GITHUB_TOKEN Permissions
2025-01-07T17:42:18.3824710Z Actions: read
2025-01-07T17:42:18.3825020Z Attestations: read
2025-01-07T17:42:18.3825320Z Checks: read
2025-01-07T17:42:18.3825600Z Contents: read
2025-01-07T17:42:18.3825880Z Deployments: read
2025-01-07T17:42:18.3826190Z Discussions: read
2025-01-07T17:42:18.3826470Z Issues: read
2025-01-07T17:42:18.3826740Z Metadata: read
2025-01-07T17:42:18.3827020Z Packages: read
2025-01-07T17:42:18.3827300Z Pages: read
2025-01-07T17:42:18.3827570Z PullRequests: read
2025-01-07T17:42:18.3827890Z RepositoryProjects: read
2025-01-07T17:42:18.3828200Z SecurityEvents: read
2025-01-07T17:42:18.3828510Z Statuses: read
2025-01-07T17:42:18.3828790Z ##[endgroup]
2025-01-07T17:42:18.3830460Z Secret source: None
2025-01-07T17:42:18.3830860Z Prepare workflow directory
2025-01-07T17:42:18.4214970Z Prepare all required actions
2025-01-07T17:42:18.4241520Z Getting action download info
2025-01-07T17:42:18.6066810Z Download action repository 'actions/checkout@v4' (SHA:11bd71901bbe5b1630ceea73d27597364c9af683)
2025-01-07T17:42:18.9663050Z Download action repository 'actions/upload-artifact@v4' (SHA:6f51ac03b9356f520e9adb1b1b7802705f340c2b)
2025-01-07T17:42:20.2547860Z Complete job name: not continuum macos-latest 
2025-01-07T17:42:20.2942580Z ##[group]Run actions/checkout@v4
2025-01-07T17:42:20.2943060Z with:
2025-01-07T17:42:20.2943340Z   repository: tardis-sn/tardis
2025-01-07T17:42:20.2943780Z   token: ***
2025-01-07T17:42:20.2944040Z   ssh-strict: true
2025-01-07T17:42:20.2944320Z   ssh-user: git
2025-01-07T17:42:20.2944590Z   persist-credentials: true
2025-01-07T17:42:20.2944900Z   clean: true
2025-01-07T17:42:20.2945190Z   sparse-checkout-cone-mode: true
2025-01-07T17:42:20.2945530Z   fetch-depth: 1
2025-01-07T17:42:20.2945810Z   fetch-tags: false
2025-01-07T17:42:20.2946090Z   show-progress: true
2025-01-07T17:42:20.2946390Z   lfs: false
2025-01-07T17:42:20.2946650Z   submodules: false
2025-01-07T17:42:20.2946940Z   set-safe-directory: true
2025-01-07T17:42:20.2947350Z env:
2025-01-07T17:42:20.2947620Z   CACHE_NUMBER: 0
2025-01-07T17:42:20.2948400Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-07T17:42:20.2949300Z   CODECOV_TOKEN: 
2025-01-07T17:42:20.2949580Z ##[endgroup]
2025-01-07T17:42:20.7312870Z Syncing repository: tardis-sn/tardis
2025-01-07T17:42:20.7314290Z ##[group]Getting Git version info
2025-01-07T17:42:20.7314740Z Working directory is '/Users/runner/work/tardis/tardis'
2025-01-07T17:42:20.7332910Z [command]/opt/homebrew/bin/git version
2025-01-07T17:42:20.8779350Z git version 2.47.1
2025-01-07T17:42:20.9591600Z ##[endgroup]
2025-01-07T17:42:20.9724640Z Copying '/Users/runner/.gitconfig' to '/Users/runner/work/_temp/e1cb326f-481b-41e6-8238-7d82c0b825cf/.gitconfig'
2025-01-07T17:42:20.9725970Z Temporarily overriding HOME='/Users/runner/work/_temp/e1cb326f-481b-41e6-8238-7d82c0b825cf' before making global git config changes
2025-01-07T17:42:20.9727010Z Adding repository directory to the temporary git global config as a safe directory
2025-01-07T17:42:20.9728540Z [command]/opt/homebrew/bin/git config --global --add safe.directory /Users/runner/work/tardis/tardis
2025-01-07T17:42:20.9730220Z Deleting the contents of '/Users/runner/work/tardis/tardis'
2025-01-07T17:42:20.9760500Z ##[group]Initializing the repository
2025-01-07T17:42:20.9774710Z [command]/opt/homebrew/bin/git init /Users/runner/work/tardis/tardis
2025-01-07T17:42:21.0242900Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-01-07T17:42:21.0243930Z hint: is subject to change. To configure the initial branch name to use in all
2025-01-07T17:42:21.0244610Z hint: of your new repositories, which will suppress this warning, call:
2025-01-07T17:42:21.0245090Z hint:
2025-01-07T17:42:21.0245440Z hint: 	git config --global init.defaultBranch <name>
2025-01-07T17:42:21.0245880Z hint:
2025-01-07T17:42:21.0246290Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-01-07T17:42:21.0246920Z hint: 'development'. The just-created branch can be renamed via this command:
2025-01-07T17:42:21.0247460Z hint:
2025-01-07T17:42:21.0247800Z hint: 	git branch -m <name>
2025-01-07T17:42:21.0248300Z Initialized empty Git repository in /Users/runner/work/tardis/tardis/.git/
2025-01-07T17:42:21.0250970Z [command]/opt/homebrew/bin/git remote add origin https://github.com/tardis-sn/tardis
2025-01-07T17:42:21.0312930Z ##[endgroup]
2025-01-07T17:42:21.0313620Z ##[group]Disabling automatic garbage collection
2025-01-07T17:42:21.0314390Z [command]/opt/homebrew/bin/git config --local gc.auto 0
2025-01-07T17:42:21.0369560Z ##[endgroup]
2025-01-07T17:42:21.0370120Z ##[group]Setting up auth
2025-01-07T17:42:21.0373410Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-07T17:42:21.0420710Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-07T17:42:21.1128510Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-07T17:42:21.1159600Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-07T17:42:21.1804610Z [command]/opt/homebrew/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-01-07T17:42:21.1934860Z ##[endgroup]
2025-01-07T17:42:21.1935570Z ##[group]Fetching the repository
2025-01-07T17:42:21.1940240Z [command]/opt/homebrew/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +df2ea10beb4a250a324ae68f8e7052fda1105ff6:refs/remotes/pull/2928/merge
2025-01-07T17:42:23.6502600Z From https://github.com/tardis-sn/tardis
2025-01-07T17:42:23.6505010Z  * [new ref]         df2ea10beb4a250a324ae68f8e7052fda1105ff6 -> pull/2928/merge
2025-01-07T17:42:23.6563700Z ##[endgroup]
2025-01-07T17:42:23.6565530Z ##[group]Determining the checkout info
2025-01-07T17:42:23.6566880Z ##[endgroup]
2025-01-07T17:42:23.6567500Z [command]/opt/homebrew/bin/git sparse-checkout disable
2025-01-07T17:42:23.6630200Z [command]/opt/homebrew/bin/git config --local --unset-all extensions.worktreeConfig
2025-01-07T17:42:23.6683460Z ##[group]Checking out the ref
2025-01-07T17:42:23.6685020Z [command]/opt/homebrew/bin/git checkout --progress --force refs/remotes/pull/2928/merge
2025-01-07T17:42:23.9887070Z HEAD is now at df2ea10 Merge 24fb361aee078861ca18f6b74265dcf689c88b0f into 7e37d5fe0adb8b767cd033924165b5060f22f170
2025-01-07T17:42:24.0155650Z ##[endgroup]
2025-01-07T17:42:24.0157770Z [command]/opt/homebrew/bin/git log -1 --format=%H
2025-01-07T17:42:24.0159190Z df2ea10beb4a250a324ae68f8e7052fda1105ff6
2025-01-07T17:42:24.0386520Z Prepare all required actions
2025-01-07T17:42:24.0387500Z Getting action download info
2025-01-07T17:42:24.1912050Z Download action repository 'actions/cache@v4' (SHA:1bd1e32a3bdc45362d1e726936510720a7c30a57)
2025-01-07T17:42:25.3125470Z ##[group]Run ./.github/actions/setup_lfs
2025-01-07T17:42:25.3125760Z with:
2025-01-07T17:42:25.3126120Z   regression-data-repo: tardis-sn/tardis-regression-data
2025-01-07T17:42:25.3126360Z env:
2025-01-07T17:42:25.3126490Z   CACHE_NUMBER: 0
2025-01-07T17:42:25.3127000Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-07T17:42:25.3127550Z   CODECOV_TOKEN: 
2025-01-07T17:42:25.3127710Z ##[endgroup]
2025-01-07T17:42:25.3270060Z ##[group]Run actions/checkout@v4
2025-01-07T17:42:25.3270490Z with:
2025-01-07T17:42:25.3270710Z   repository: tardis-sn/tardis-regression-data
2025-01-07T17:42:25.3270950Z   path: tardis-regression-data
2025-01-07T17:42:25.3271380Z   token: ***
2025-01-07T17:42:25.3271560Z   ssh-strict: true
2025-01-07T17:42:25.3271730Z   ssh-user: git
2025-01-07T17:42:25.3271900Z   persist-credentials: true
2025-01-07T17:42:25.3272120Z   clean: true
2025-01-07T17:42:25.3272350Z   sparse-checkout-cone-mode: true
2025-01-07T17:42:25.3272540Z   fetch-depth: 1
2025-01-07T17:42:25.3272700Z   fetch-tags: false
2025-01-07T17:42:25.3272850Z   show-progress: true
2025-01-07T17:42:25.3273060Z   lfs: false
2025-01-07T17:42:25.3273200Z   submodules: false
2025-01-07T17:42:25.3273370Z   set-safe-directory: true
2025-01-07T17:42:25.3273590Z env:
2025-01-07T17:42:25.3273720Z   CACHE_NUMBER: 0
2025-01-07T17:42:25.3274260Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-07T17:42:25.3274830Z   CODECOV_TOKEN: 
2025-01-07T17:42:25.3274990Z ##[endgroup]
2025-01-07T17:42:25.4161400Z Syncing repository: tardis-sn/tardis-regression-data
2025-01-07T17:42:25.4163160Z ##[group]Getting Git version info
2025-01-07T17:42:25.4163550Z Working directory is '/Users/runner/work/tardis/tardis/tardis-regression-data'
2025-01-07T17:42:25.4193100Z [command]/opt/homebrew/bin/git version
2025-01-07T17:42:25.4240920Z git version 2.47.1
2025-01-07T17:42:25.4254080Z ##[endgroup]
2025-01-07T17:42:25.4259070Z Copying '/Users/runner/.gitconfig' to '/Users/runner/work/_temp/4d23cff9-821e-4bc4-a02a-f84ed3caa93b/.gitconfig'
2025-01-07T17:42:25.4267070Z Temporarily overriding HOME='/Users/runner/work/_temp/4d23cff9-821e-4bc4-a02a-f84ed3caa93b' before making global git config changes
2025-01-07T17:42:25.4267780Z Adding repository directory to the temporary git global config as a safe directory
2025-01-07T17:42:25.4269740Z [command]/opt/homebrew/bin/git config --global --add safe.directory /Users/runner/work/tardis/tardis/tardis-regression-data
2025-01-07T17:42:25.4318040Z ##[group]Initializing the repository
2025-01-07T17:42:25.4321160Z [command]/opt/homebrew/bin/git init /Users/runner/work/tardis/tardis/tardis-regression-data
2025-01-07T17:42:25.4389490Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-01-07T17:42:25.4390580Z hint: is subject to change. To configure the initial branch name to use in all
2025-01-07T17:42:25.4391080Z hint: of your new repositories, which will suppress this warning, call:
2025-01-07T17:42:25.4391380Z hint:
2025-01-07T17:42:25.4391590Z hint: 	git config --global init.defaultBranch <name>
2025-01-07T17:42:25.4391940Z hint:
2025-01-07T17:42:25.4392180Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-01-07T17:42:25.4392570Z hint: 'development'. The just-created branch can be renamed via this command:
2025-01-07T17:42:25.4392900Z hint:
2025-01-07T17:42:25.4393060Z hint: 	git branch -m <name>
2025-01-07T17:42:25.4393430Z Initialized empty Git repository in /Users/runner/work/tardis/tardis/tardis-regression-data/.git/
2025-01-07T17:42:25.4398380Z [command]/opt/homebrew/bin/git remote add origin https://github.com/tardis-sn/tardis-regression-data
2025-01-07T17:42:25.4447490Z ##[endgroup]
2025-01-07T17:42:25.4447870Z ##[group]Disabling automatic garbage collection
2025-01-07T17:42:25.4449640Z [command]/opt/homebrew/bin/git config --local gc.auto 0
2025-01-07T17:42:25.4494970Z ##[endgroup]
2025-01-07T17:42:25.4495330Z ##[group]Setting up auth
2025-01-07T17:42:25.4499020Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-07T17:42:25.4559770Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-07T17:42:25.5774730Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-07T17:42:25.5819790Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-07T17:42:25.7004190Z [command]/opt/homebrew/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-01-07T17:42:25.7310370Z ##[endgroup]
2025-01-07T17:42:25.7454320Z ##[group]Determining the default branch
2025-01-07T17:42:25.7555930Z Retrieving the default branch name
2025-01-07T17:42:26.1513980Z Default branch 'main'
2025-01-07T17:42:26.1523070Z ##[endgroup]
2025-01-07T17:42:26.1637790Z ##[group]Fetching the repository
2025-01-07T17:42:26.1840310Z [command]/opt/homebrew/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +refs/heads/main:refs/remotes/origin/main
2025-01-07T17:42:27.1377120Z From https://github.com/tardis-sn/tardis-regression-data
2025-01-07T17:42:27.1377690Z  * [new branch]      main       -> origin/main
2025-01-07T17:42:27.1429880Z ##[endgroup]
2025-01-07T17:42:27.1430160Z ##[group]Determining the checkout info
2025-01-07T17:42:27.1430470Z ##[endgroup]
2025-01-07T17:42:27.1433540Z [command]/opt/homebrew/bin/git sparse-checkout disable
2025-01-07T17:42:27.1486940Z [command]/opt/homebrew/bin/git config --local --unset-all extensions.worktreeConfig
2025-01-07T17:42:27.1534470Z ##[group]Checking out the ref
2025-01-07T17:42:27.1537090Z [command]/opt/homebrew/bin/git checkout --progress --force -B main refs/remotes/origin/main
2025-01-07T17:42:27.3517010Z Switched to a new branch 'main'
2025-01-07T17:42:27.3520190Z branch 'main' set up to track 'origin/main'.
2025-01-07T17:42:27.5274990Z ##[endgroup]
2025-01-07T17:42:27.5320930Z [command]/opt/homebrew/bin/git log -1 --format=%H
2025-01-07T17:42:27.5347320Z 666ab8501c2b2aea30d05b8822e7ddbfca078d23
2025-01-07T17:42:27.5424670Z ##[group]Run git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
2025-01-07T17:42:27.5425100Z [36;1mgit lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id[0m
2025-01-07T17:42:27.5480990Z shell: /bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-07T17:42:27.5481300Z env:
2025-01-07T17:42:27.5481420Z   CACHE_NUMBER: 0
2025-01-07T17:42:27.5481890Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-07T17:42:27.5482420Z   CODECOV_TOKEN: 
2025-01-07T17:42:27.5482560Z ##[endgroup]
2025-01-07T17:42:27.8377620Z ##[group]Run actions/cache/restore@v4
2025-01-07T17:42:27.8377910Z with:
2025-01-07T17:42:27.8378060Z   path: tardis-regression-data/.git/lfs
2025-01-07T17:42:27.8378420Z   key: macOS-lfs-21f9fa4b6817cc69b9fae3598144724da7828e276a73bd17f47a2a49d9af090a-v1
2025-01-07T17:42:27.8378790Z   enableCrossOsArchive: false
2025-01-07T17:42:27.8378980Z   fail-on-cache-miss: false
2025-01-07T17:42:27.8379160Z   lookup-only: false
2025-01-07T17:42:27.8379340Z env:
2025-01-07T17:42:27.8379490Z   CACHE_NUMBER: 0
2025-01-07T17:42:27.8380330Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-07T17:42:27.8380840Z   CODECOV_TOKEN: 
2025-01-07T17:42:27.8380980Z ##[endgroup]
2025-01-07T17:42:29.3914950Z Received 20971520 of 1706796060 (1.2%), 19.8 MBs/sec
2025-01-07T17:42:30.3911750Z Received 92274688 of 1706796060 (5.4%), 43.6 MBs/sec
2025-01-07T17:42:31.3917310Z Received 150994944 of 1706796060 (8.8%), 47.7 MBs/sec
2025-01-07T17:42:32.3924290Z Received 201326592 of 1706796060 (11.8%), 47.7 MBs/sec
2025-01-07T17:42:33.3928360Z Received 268435456 of 1706796060 (15.7%), 51.0 MBs/sec
2025-01-07T17:42:34.3933120Z Received 335544320 of 1706796060 (19.7%), 53.1 MBs/sec
2025-01-07T17:42:35.3948490Z Received 402653184 of 1706796060 (23.6%), 54.7 MBs/sec
2025-01-07T17:42:36.3943640Z Received 448790528 of 1706796060 (26.3%), 53.4 MBs/sec
2025-01-07T17:42:37.3968770Z Received 520093696 of 1706796060 (30.5%), 55.0 MBs/sec
2025-01-07T17:42:38.3978250Z Received 578813952 of 1706796060 (33.9%), 55.1 MBs/sec
2025-01-07T17:42:39.3987280Z Received 641728512 of 1706796060 (37.6%), 55.5 MBs/sec
2025-01-07T17:42:40.3983990Z Received 721420288 of 1706796060 (42.3%), 57.2 MBs/sec
2025-01-07T17:42:41.3992250Z Received 805306368 of 1706796060 (47.2%), 59.0 MBs/sec
2025-01-07T17:42:42.3998440Z Received 889192448 of 1706796060 (52.1%), 60.5 MBs/sec
2025-01-07T17:42:43.4034540Z Received 952107008 of 1706796060 (55.8%), 60.4 MBs/sec
2025-01-07T17:42:44.4008920Z Received 1035993088 of 1706796060 (60.7%), 61.6 MBs/sec
2025-01-07T17:42:45.4017870Z Received 1115684864 of 1706796060 (65.4%), 62.5 MBs/sec
2025-01-07T17:42:46.4036580Z Received 1170210816 of 1706796060 (68.6%), 61.9 MBs/sec
2025-01-07T17:42:47.4038630Z Received 1241513984 of 1706796060 (72.7%), 62.2 MBs/sec
2025-01-07T17:42:48.4050280Z Received 1308622848 of 1706796060 (76.7%), 62.3 MBs/sec
2025-01-07T17:42:49.4060290Z Received 1367343104 of 1706796060 (80.1%), 62.0 MBs/sec
2025-01-07T17:42:50.4080380Z Received 1434451968 of 1706796060 (84.0%), 62.1 MBs/sec
2025-01-07T17:42:51.4200310Z Received 1509949440 of 1706796060 (88.5%), 62.5 MBs/sec
2025-01-07T17:42:52.4103490Z Received 1589641216 of 1706796060 (93.1%), 63.1 MBs/sec
2025-01-07T17:42:53.4130220Z Received 1652555776 of 1706796060 (96.8%), 62.9 MBs/sec
2025-01-07T17:42:54.4153070Z Received 1706796060 of 1706796060 (100.0%), 62.5 MBs/sec
2025-01-07T17:42:54.5903350Z Cache Size: ~1628 MB (1706796060 B)
2025-01-07T17:42:54.6116380Z [command]/opt/homebrew/bin/gtar -xf /Users/runner/work/_temp/708fced3-0d07-4eea-8647-06890dabef37/cache.tzst -P -C /Users/runner/work/tardis/tardis --delay-directory-restore --use-compress-program unzstd
2025-01-07T17:43:00.5977210Z Cache restored successfully
2025-01-07T17:43:00.6853430Z Cache restored from key: macOS-lfs-21f9fa4b6817cc69b9fae3598144724da7828e276a73bd17f47a2a49d9af090a-v1
2025-01-07T17:43:00.7061840Z ##[group]Run git lfs checkout
2025-01-07T17:43:00.7062080Z [36;1mgit lfs checkout[0m
2025-01-07T17:43:00.7200980Z shell: /bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-07T17:43:00.7201210Z env:
2025-01-07T17:43:00.7201380Z   CACHE_NUMBER: 0
2025-01-07T17:43:00.7201970Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-07T17:43:00.7202500Z   CODECOV_TOKEN: 
2025-01-07T17:43:00.7202650Z ##[endgroup]
2025-01-07T17:43:09.2150420Z Checking out LFS objects: 100% (204/204), 3.5 GB | 329 MB/s, done.
2025-01-07T17:43:15.9191370Z Prepare all required actions
2025-01-07T17:43:15.9192190Z Getting action download info
2025-01-07T17:43:16.0583690Z Download action repository 'mamba-org/setup-micromamba@v1' (SHA:4b9113af4fba0e9e1124b252dd6497a419e7396d)
2025-01-07T17:43:17.2672190Z ##[group]Run ./.github/actions/setup_env
2025-01-07T17:43:17.2672480Z with:
2025-01-07T17:43:17.2672700Z   os-label: osx-arm64
2025-01-07T17:43:17.2673010Z env:
2025-01-07T17:43:17.2673200Z   CACHE_NUMBER: 0
2025-01-07T17:43:17.2673770Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-07T17:43:17.2674410Z   CODECOV_TOKEN: 
2025-01-07T17:43:17.2674600Z ##[endgroup]
2025-01-07T17:43:17.2707650Z ##[group]Run file_hash=$(cat conda-osx-arm64.lock | shasum -a 256 | cut -d' ' -f1)
2025-01-07T17:43:17.2708440Z [36;1mfile_hash=$(cat conda-osx-arm64.lock | shasum -a 256 | cut -d' ' -f1)[0m
2025-01-07T17:43:17.2708780Z [36;1mecho "file_hash=$file_hash" >> "${GITHUB_OUTPUT}"[0m
2025-01-07T17:43:17.2757250Z shell: /bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-07T17:43:17.2757490Z env:
2025-01-07T17:43:17.2757600Z   CACHE_NUMBER: 0
2025-01-07T17:43:17.2758100Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-07T17:43:17.2758650Z   CODECOV_TOKEN: 
2025-01-07T17:43:17.2758780Z ##[endgroup]
2025-01-07T17:43:17.3782350Z ##[group]Run mamba-org/setup-micromamba@v1
2025-01-07T17:43:17.3782590Z with:
2025-01-07T17:43:17.3782730Z   environment-file: conda-osx-arm64.lock
2025-01-07T17:43:17.3783060Z   cache-environment-key: bf0d0a4d4c847cca72476c6c68c493d56c484aada7e80de0e42c7607fcef5824
2025-01-07T17:43:17.3783510Z   cache-downloads-key: bf0d0a4d4c847cca72476c6c68c493d56c484aada7e80de0e42c7607fcef5824
2025-01-07T17:43:17.3783830Z   environment-name: tardis
2025-01-07T17:43:17.3783990Z   cache-environment: true
2025-01-07T17:43:17.3784180Z   cache-downloads: true
2025-01-07T17:43:17.3784330Z env:
2025-01-07T17:43:17.3784440Z   CACHE_NUMBER: 0
2025-01-07T17:43:17.3784890Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-07T17:43:17.3785360Z   CODECOV_TOKEN: 
2025-01-07T17:43:17.3785490Z ##[endgroup]
2025-01-07T17:43:17.6794370Z Will download micromamba to /Users/runner/micromamba-bin/micromamba
2025-01-07T17:43:17.6818450Z ##[group]Install micromamba
2025-01-07T17:43:18.3890750Z micromamba installed to /Users/runner/micromamba-bin/micromamba
2025-01-07T17:43:18.3892580Z ##[endgroup]
2025-01-07T17:43:18.3892880Z Adding conda-forge to condarc channels ...
2025-01-07T17:43:18.3974690Z ##[group]Initialize micromamba for bash.
2025-01-07T17:43:18.3983970Z [command]/Users/runner/micromamba-bin/micromamba shell init -s bash -r /Users/runner/micromamba --log-level warning --rc-file /Users/runner/work/_temp/setup-micromamba/.condarc
2025-01-07T17:43:18.4186600Z Modifying RC file "/Users/runner/.bash_profile"
2025-01-07T17:43:18.4188420Z Generating config for root prefix [1m"/Users/runner/micromamba"[0m
2025-01-07T17:43:18.4190130Z Setting mamba executable to: [1m"/Users/runner/micromamba-bin/micromamba"[0m
2025-01-07T17:43:18.4191060Z Adding (or replacing) the following in your "/Users/runner/.bash_profile" file
2025-01-07T17:43:18.4191460Z 
2025-01-07T17:43:18.4191670Z # >>> mamba initialize >>>
2025-01-07T17:43:18.4192030Z # !! Contents within this block are managed by 'mamba init' !!
2025-01-07T17:43:18.4201420Z export MAMBA_EXE='/Users/runner/micromamba-bin/micromamba';
2025-01-07T17:43:18.4201790Z export MAMBA_ROOT_PREFIX='/Users/runner/micromamba';
2025-01-07T17:43:18.4202220Z __mamba_setup="$("$MAMBA_EXE" shell hook --shell bash --root-prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
2025-01-07T17:43:18.4202690Z if [ $? -eq 0 ]; then
2025-01-07T17:43:18.4202970Z     eval "$__mamba_setup"
2025-01-07T17:43:18.4205270Z else
2025-01-07T17:43:18.4205590Z     alias micromamba="$MAMBA_EXE"  # Fallback on help from mamba activate
2025-01-07T17:43:18.4205970Z fi
2025-01-07T17:43:18.4206170Z unset __mamba_setup
2025-01-07T17:43:18.4206370Z # <<< mamba initialize <<<
2025-01-07T17:43:18.4206530Z 
2025-01-07T17:43:18.4206850Z ##[endgroup]
2025-01-07T17:43:18.4207520Z ##[group]Restoring downloads from `/Users/runner/micromamba/pkgs` ...
2025-01-07T17:43:19.7956790Z Received 33554432 of 310595873 (10.8%), 32.0 MBs/sec
2025-01-07T17:43:20.7956340Z Received 117440512 of 310595873 (37.8%), 55.9 MBs/sec
2025-01-07T17:43:21.7963780Z Received 192937984 of 310595873 (62.1%), 61.3 MBs/sec
2025-01-07T17:43:22.7965810Z Received 268435456 of 310595873 (86.4%), 64.0 MBs/sec
2025-01-07T17:43:23.4955890Z Cache Size: ~296 MB (310595873 B)
2025-01-07T17:43:23.4987230Z [command]/opt/homebrew/bin/gtar -xf /Users/runner/work/_temp/9c176661-5a6c-4a29-9803-63f6009f9c65/cache.tzst -P -C /Users/runner/work/tardis/tardis --delay-directory-restore --use-compress-program unzstd
2025-01-07T17:43:23.7997240Z Received 310595873 of 310595873 (100.0%), 59.2 MBs/sec
2025-01-07T17:43:24.1472210Z Cache restored successfully
2025-01-07T17:43:24.1503480Z Restored cache with key `bf0d0a4d4c847cca72476c6c68c493d56c484aada7e80de0e42c7607fcef5824-osx-arm64`
2025-01-07T17:43:24.1504220Z ##[endgroup]
2025-01-07T17:43:24.1527950Z ##[group]Restoring environment `tardis` from `/Users/runner/micromamba/envs/tardis` ...
2025-01-07T17:43:25.4879910Z Received 50331648 of 385775710 (13.0%), 48.0 MBs/sec
2025-01-07T17:43:26.4889310Z Received 113246208 of 385775710 (29.4%), 54.0 MBs/sec
2025-01-07T17:43:27.4896230Z Received 180355072 of 385775710 (46.8%), 57.3 MBs/sec
2025-01-07T17:43:28.4896170Z Received 264241152 of 385775710 (68.5%), 63.0 MBs/sec
2025-01-07T17:43:29.4911460Z Received 348127232 of 385775710 (90.2%), 66.4 MBs/sec
2025-01-07T17:43:30.0107950Z Cache Size: ~368 MB (385775710 B)
2025-01-07T17:43:30.0135520Z [command]/opt/homebrew/bin/gtar -xf /Users/runner/work/_temp/dc605e5e-abf9-47de-b2ab-90f2723c5827/cache.tzst -P -C /Users/runner/work/tardis/tardis --delay-directory-restore --use-compress-program unzstd
2025-01-07T17:43:30.4937590Z Received 385775710 of 385775710 (100.0%), 61.3 MBs/sec
2025-01-07T17:43:41.9869380Z Cache restored successfully
2025-01-07T17:43:41.9910580Z Restored cache with key `bf0d0a4d4c847cca72476c6c68c493d56c484aada7e80de0e42c7607fcef5824-osx-arm64-tardis-args-4f53cda-root-873f6fe-bin-[object Promise]-file-bf0d0a4d4c847cca72476c6c68c493d56c484aada7e80de0e42c7607fcef5824`
2025-01-07T17:43:41.9921310Z ##[endgroup]
2025-01-07T17:43:41.9921900Z Adding environment tardis to auto-activate bash ...
2025-01-07T17:43:41.9925490Z Generating micromamba run shell.
2025-01-07T17:43:41.9932180Z ##[endgroup]
2025-01-07T17:43:41.9940550Z Set environment variables.
2025-01-07T17:43:41.9955050Z ##[group]micromamba info
2025-01-07T17:43:41.9958960Z [command]/Users/runner/micromamba-bin/micromamba info -r /Users/runner/micromamba -n tardis
2025-01-07T17:43:42.4110470Z 
2025-01-07T17:43:42.4111090Z        libmamba version : 1.5.10
2025-01-07T17:43:42.4111410Z      micromamba version : 1.5.10
2025-01-07T17:43:42.4111920Z            curl version : libcurl/8.10.1 (OpenSSL/3.3.2) SecureTransport zlib/1.3.1 zstd/1.5.6 libssh2/1.11.0 nghttp2/1.58.0
2025-01-07T17:43:42.4112430Z      libarchive version : libarchive 3.7.4 zlib/1.2.13 bz2lib/1.0.8 libzstd/1.5.6
2025-01-07T17:43:42.4112890Z        envs directories : /Users/runner/micromamba/envs
2025-01-07T17:43:42.4113230Z           package cache : /Users/runner/micromamba/pkgs
2025-01-07T17:43:42.4113600Z                           /Users/runner/.mamba/pkgs
2025-01-07T17:43:42.4113960Z             environment : tardis
2025-01-07T17:43:42.4114270Z            env location : /Users/runner/micromamba/envs/tardis
2025-01-07T17:43:42.4114700Z       user config files : /Users/runner/.mambarc
2025-01-07T17:43:42.4115060Z  populated config files : /Users/runner/work/_temp/setup-micromamba/.condarc
2025-01-07T17:43:42.4122010Z        virtual packages : __unix=0=0
2025-01-07T17:43:42.4122450Z                           __osx=14.7.2=0
2025-01-07T17:43:42.4122760Z                           __archspec=1=arm64
2025-01-07T17:43:42.4123090Z                channels : https://conda.anaconda.org/conda-forge/osx-arm64
2025-01-07T17:43:42.4123550Z                           https://conda.anaconda.org/conda-forge/noarch
2025-01-07T17:43:42.4123910Z        base environment : /Users/runner/micromamba
2025-01-07T17:43:42.4124220Z                platform : osx-arm64
2025-01-07T17:43:42.4124730Z ##[endgroup]
2025-01-07T17:43:42.4125150Z ##[group]micromamba list
2025-01-07T17:43:42.4125810Z [command]/Users/runner/micromamba-bin/micromamba list -r /Users/runner/micromamba -n tardis
2025-01-07T17:43:42.7969810Z List of packages in environment: "/Users/runner/micromamba/envs/tardis"
2025-01-07T17:43:42.7973120Z 
2025-01-07T17:43:42.7973400Z   Name                           Version              Build                    Channel    
2025-01-07T17:43:42.7975140Z ────────────────────────────────────────────────────────────────────────────────────────────
2025-01-07T17:43:42.7975650Z   alabaster                      0.7.16               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.7976010Z   anyio                          4.4.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.7976500Z   appnope                        0.1.4                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.7978490Z   argon2-cffi                    23.1.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.7979160Z   argon2-cffi-bindings           21.2.0               py312h02f2b3b_4          conda-forge
2025-01-07T17:43:42.7979600Z   arrow                          1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.7980020Z   astropy                        6.1.1                py312hbebd99a_0          conda-forge
2025-01-07T17:43:42.7980430Z   astropy-iers-data              0.2024.6.17.0.31.35  pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.7980960Z   astropy-sphinx-theme           1.1                  pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.7981330Z   asttokens                      2.4.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.7981760Z   async-lru                      2.0.4                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.7982130Z   atk-1.0                        2.38.0               hd03087b_2               conda-forge
2025-01-07T17:43:42.7983560Z   attrs                          23.2.0               pyh71513ae_0             conda-forge
2025-01-07T17:43:42.7984010Z   babel                          2.14.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.7984520Z   beautifulsoup4                 4.12.3               pyha770c72_0             conda-forge
2025-01-07T17:43:42.7985000Z   bleach                         6.1.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.7985390Z   blosc                          1.21.5               h9c252e8_1               conda-forge
2025-01-07T17:43:42.7985800Z   brotli                         1.1.0                hb547adb_1               conda-forge
2025-01-07T17:43:42.7986240Z   brotli-bin                     1.1.0                hb547adb_1               conda-forge
2025-01-07T17:43:42.7986760Z   brotli-python                  1.1.0                py312h9f69965_1          conda-forge
2025-01-07T17:43:42.7987160Z   bzip2                          1.0.8                h93a5062_5               conda-forge
2025-01-07T17:43:42.7988640Z   c-ares                         1.28.1               h93a5062_0               conda-forge
2025-01-07T17:43:42.7989260Z   c-blosc2                       2.14.4               ha57e6be_1               conda-forge
2025-01-07T17:43:42.7989880Z   ca-certificates                2024.6.2             hf0a4a13_0               conda-forge
2025-01-07T17:43:42.7990730Z   cached-property                1.5.2                hd8ed1ab_1               conda-forge
2025-01-07T17:43:42.7991400Z   cached_property                1.5.2                pyha770c72_1             conda-forge
2025-01-07T17:43:42.7991860Z   cairo                          1.18.0               hd1e100b_0               conda-forge
2025-01-07T17:43:42.7992240Z   certifi                        2024.6.2             pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.7992620Z   cffi                           1.16.0               py312h8e38eb3_0          conda-forge
2025-01-07T17:43:42.7993010Z   charset-normalizer             3.3.2                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.7993580Z   click                          8.1.7                unix_pyh707e725_0        conda-forge
2025-01-07T17:43:42.7994130Z   codespell                      2.3.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.7994780Z   colorama                       0.4.6                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.7995290Z   comm                           0.2.2                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.7995700Z   commonmark                     0.9.1                py_0                     conda-forge
2025-01-07T17:43:42.7996160Z   contourpy                      1.2.1                py312h0fef576_0          conda-forge
2025-01-07T17:43:42.7996570Z   coverage                       7.5.3                py312h7e5086c_0          conda-forge
2025-01-07T17:43:42.7997040Z   cycler                         0.12.1               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.7997500Z   dataclasses                    0.8                  pyhc8e2a94_3             conda-forge
2025-01-07T17:43:42.7997860Z   debugpy                        1.8.1                py312h20a0b95_0          conda-forge
2025-01-07T17:43:42.7998350Z   decorator                      5.1.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.7998750Z   defusedxml                     0.7.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.7999150Z   docutils                       0.20.1               py312h81bd7bf_3          conda-forge
2025-01-07T17:43:42.7999590Z   dot2tex                        2.11.3               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8000000Z   entrypoints                    0.4                  pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8000360Z   exceptiongroup                 1.2.0                pyhd8ed1ab_2             conda-forge
2025-01-07T17:43:42.8000770Z   executing                      2.0.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8001100Z   expat                          2.6.2                hebf3989_0               conda-forge
2025-01-07T17:43:42.8001550Z   font-ttf-dejavu-sans-mono      2.37                 hab24e00_0               conda-forge
2025-01-07T17:43:42.8001940Z   font-ttf-inconsolata           3.000                h77eed37_0               conda-forge
2025-01-07T17:43:42.8002390Z   font-ttf-source-code-pro       2.038                h77eed37_0               conda-forge
2025-01-07T17:43:42.8002800Z   font-ttf-ubuntu                0.83                 h77eed37_2               conda-forge
2025-01-07T17:43:42.8003140Z   fontconfig                     2.14.2               h82840c6_0               conda-forge
2025-01-07T17:43:42.8003530Z   fonts-conda-ecosystem          1                    0                        conda-forge
2025-01-07T17:43:42.8004500Z   fonts-conda-forge              1                    0                        conda-forge
2025-01-07T17:43:42.8004960Z   fonttools                      4.53.0               py312h7e5086c_0          conda-forge
2025-01-07T17:43:42.8005270Z   fqdn                           1.5.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8005690Z   freetype                       2.12.1               hadb7bae_2               conda-forge
2025-01-07T17:43:42.8006040Z   fribidi                        1.0.10               h27ca646_0               conda-forge
2025-01-07T17:43:42.8006620Z   future                         1.0.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8006950Z   gdk-pixbuf                     2.42.12              h7ddc832_0               conda-forge
2025-01-07T17:43:42.8007370Z   gettext                        0.22.5               h8fbad5d_2               conda-forge
2025-01-07T17:43:42.8007720Z   gettext-tools                  0.22.5               h8fbad5d_2               conda-forge
2025-01-07T17:43:42.8008120Z   giflib                         5.2.2                h93a5062_0               conda-forge
2025-01-07T17:43:42.8008440Z   git-lfs                        3.5.1                hce30654_0               conda-forge
2025-01-07T17:43:42.8008850Z   gmp                            6.3.0                hebf3989_1               conda-forge
2025-01-07T17:43:42.8009480Z   gmpy2                          2.1.5                py312hfa9fade_1          conda-forge
2025-01-07T17:43:42.8009870Z   graphite2                      1.3.13               hebf3989_1003            conda-forge
2025-01-07T17:43:42.8010290Z   graphviz                       11.0.0               h9bb9bc9_0               conda-forge
2025-01-07T17:43:42.8010640Z   gtk2                           2.24.33              h7895bb2_4               conda-forge
2025-01-07T17:43:42.8011340Z   gts                            0.7.6                he42f4ea_4               conda-forge
2025-01-07T17:43:42.8011740Z   h11                            0.14.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8012050Z   h2                             4.1.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8012410Z   h5py                           3.11.0               nompi_py312h903599c_102  conda-forge
2025-01-07T17:43:42.8012730Z   harfbuzz                       8.5.0                h1836168_0               conda-forge
2025-01-07T17:43:42.8013150Z   hdf5                           1.14.3               nompi_hec07895_105       conda-forge
2025-01-07T17:43:42.8013530Z   hpack                          4.0.0                pyh9f0ad1d_0             conda-forge
2025-01-07T17:43:42.8013920Z   httpcore                       1.0.5                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8014280Z   httpx                          0.27.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8014690Z   hyperframe                     6.0.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8015030Z   icu                            73.2                 hc8870d7_0               conda-forge
2025-01-07T17:43:42.8015410Z   idna                           3.7                  pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8016030Z   imagesize                      1.4.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8016740Z   importlib-metadata             7.1.0                pyha770c72_0             conda-forge
2025-01-07T17:43:42.8017260Z   importlib_metadata             7.1.0                hd8ed1ab_0               conda-forge
2025-01-07T17:43:42.8017740Z   importlib_resources            6.4.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8018250Z   iniconfig                      2.0.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8018710Z   ipykernel                      6.29.4               pyh57ce528_0             conda-forge
2025-01-07T17:43:42.8019170Z   ipython                        8.25.0               pyh707e725_0             conda-forge
2025-01-07T17:43:42.8019590Z   ipython_genutils               0.2.0                pyhd8ed1ab_1             conda-forge
2025-01-07T17:43:42.8020170Z   ipywidgets                     7.8.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8020660Z   isoduration                    20.11.0              pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8021050Z   jedi                           0.19.1               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8021810Z   jinja2                         3.1.4                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8022190Z   json5                          0.9.25               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8022520Z   jsonpointer                    3.0.0                py312h81bd7bf_0          conda-forge
2025-01-07T17:43:42.8023120Z   jsonschema                     4.22.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8023950Z   jsonschema-specifications      2023.12.1            pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8025120Z   jsonschema-with-format-nongpl  4.22.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8025570Z   jupyter-lsp                    2.2.5                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8026370Z   jupyter_client                 8.6.2                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8026770Z   jupyter_core                   5.7.2                py312h81bd7bf_0          conda-forge
2025-01-07T17:43:42.8078060Z   jupyter_events                 0.10.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8078540Z   jupyter_server                 2.14.1               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8079090Z   jupyter_server_terminals       0.5.3                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8079620Z   jupyterlab                     4.2.2                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8080120Z   jupyterlab_pygments            0.3.0                pyhd8ed1ab_1             conda-forge
2025-01-07T17:43:42.8080590Z   jupyterlab_server              2.27.2               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8081080Z   jupyterlab_widgets             1.1.7                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8081610Z   kiwisolver                     1.4.5                py312h389731b_1          conda-forge
2025-01-07T17:43:42.8081980Z   krb5                           1.21.2               h92f50d5_0               conda-forge
2025-01-07T17:43:42.8082390Z   latexcodec                     2.0.1                pyh9f0ad1d_0             conda-forge
2025-01-07T17:43:42.8082770Z   lcms2                          2.16                 ha0e7c42_0               conda-forge
2025-01-07T17:43:42.8083080Z   lerc                           4.0.0                h9a09cb3_0               conda-forge
2025-01-07T17:43:42.8083370Z   libaec                         1.1.3                hebf3989_0               conda-forge
2025-01-07T17:43:42.8083850Z   libasprintf                    0.22.5               h8fbad5d_2               conda-forge
2025-01-07T17:43:42.8084210Z   libasprintf-devel              0.22.5               h8fbad5d_2               conda-forge
2025-01-07T17:43:42.8084650Z   libblas                        3.9.0                22_osxarm64_openblas     conda-forge
2025-01-07T17:43:42.8085060Z   libbrotlicommon                1.1.0                hb547adb_1               conda-forge
2025-01-07T17:43:42.8085640Z   libbrotlidec                   1.1.0                hb547adb_1               conda-forge
2025-01-07T17:43:42.8086060Z   libbrotlienc                   1.1.0                hb547adb_1               conda-forge
2025-01-07T17:43:42.8086610Z   libcblas                       3.9.0                22_osxarm64_openblas     conda-forge
2025-01-07T17:43:42.8087000Z   libcurl                        8.8.0                h7b6f9a7_0               conda-forge
2025-01-07T17:43:42.8087320Z   libcxx                         17.0.6               h5f092b4_0               conda-forge
2025-01-07T17:43:42.8087640Z   libdeflate                     1.20                 h93a5062_0               conda-forge
2025-01-07T17:43:42.8087930Z   libedit                        3.1.20191231         hc8eb9b7_2               conda-forge
2025-01-07T17:43:42.8088220Z   libev                          4.33                 h93a5062_2               conda-forge
2025-01-07T17:43:42.8088940Z   libexpat                       2.6.2                hebf3989_0               conda-forge
2025-01-07T17:43:42.8089250Z   libffi                         3.4.2                h3422bc3_5               conda-forge
2025-01-07T17:43:42.8089520Z   libgd                          2.3.3                hfdf3952_9               conda-forge
2025-01-07T17:43:42.8089860Z   libgettextpo                   0.22.5               h8fbad5d_2               conda-forge
2025-01-07T17:43:42.8090180Z   libgettextpo-devel             0.22.5               h8fbad5d_2               conda-forge
2025-01-07T17:43:42.8090490Z   libgfortran                    5.0.0                13_2_0_hd922786_3        conda-forge
2025-01-07T17:43:42.8090790Z   libgfortran5                   13.2.0               hf226fd6_3               conda-forge
2025-01-07T17:43:42.8091300Z   libglib                        2.80.2               h59d46d9_1               conda-forge
2025-01-07T17:43:42.8091580Z   libiconv                       1.17                 h0d3ecfb_2               conda-forge
2025-01-07T17:43:42.8091920Z   libintl                        0.22.5               h8fbad5d_2               conda-forge
2025-01-07T17:43:42.8092290Z   libintl-devel                  0.22.5               h8fbad5d_2               conda-forge
2025-01-07T17:43:42.8092600Z   libjpeg-turbo                  3.0.0                hb547adb_1               conda-forge
2025-01-07T17:43:42.8092890Z   liblapack                      3.9.0                22_osxarm64_openblas     conda-forge
2025-01-07T17:43:42.8093260Z   libllvm14                      14.0.6               hd1a9a77_4               conda-forge
2025-01-07T17:43:42.8093550Z   libnghttp2                     1.58.0               ha4dd798_1               conda-forge
2025-01-07T17:43:42.8093850Z   libopenblas                    0.3.27               openmp_h6c19121_0        conda-forge
2025-01-07T17:43:42.8094140Z   libpng                         1.6.43               h091b4b1_0               conda-forge
2025-01-07T17:43:42.8094420Z   librsvg                        2.58.1               hbc281fb_0               conda-forge
2025-01-07T17:43:42.8094850Z   libsodium                      1.0.18               h27ca646_1               conda-forge
2025-01-07T17:43:42.8095200Z   libsqlite                      3.46.0               hfb93653_0               conda-forge
2025-01-07T17:43:42.8095590Z   libssh2                        1.11.0               h7a5bd25_0               conda-forge
2025-01-07T17:43:42.8095970Z   libtiff                        4.6.0                h07db509_3               conda-forge
2025-01-07T17:43:42.8096290Z   libwebp                        1.4.0                h54798ee_0               conda-forge
2025-01-07T17:43:42.8096670Z   libwebp-base                   1.4.0                h93a5062_0               conda-forge
2025-01-07T17:43:42.8097030Z   libxcb                         1.16                 hf2054a2_0               conda-forge
2025-01-07T17:43:42.8097390Z   libxml2                        2.12.7               ha661575_1               conda-forge
2025-01-07T17:43:42.8097750Z   libxslt                        1.1.39               h223e5b9_0               conda-forge
2025-01-07T17:43:42.8098130Z   libzlib                        1.3.1                hfb2fe0b_1               conda-forge
2025-01-07T17:43:42.8098510Z   llvm-openmp                    18.1.7               hde57baf_0               conda-forge
2025-01-07T17:43:42.8098880Z   llvmlite                       0.42.0               py312h17030e7_1          conda-forge
2025-01-07T17:43:42.8099270Z   lxml                           5.2.2                py312h0e5ab22_0          conda-forge
2025-01-07T17:43:42.8099590Z   lz4-c                          1.9.4                hb7217d7_0               conda-forge
2025-01-07T17:43:42.8100040Z   markupsafe                     2.1.5                py312he37b823_0          conda-forge
2025-01-07T17:43:42.8100350Z   matplotlib-base                3.8.4                py312h4479663_2          conda-forge
2025-01-07T17:43:42.8100880Z   matplotlib-inline              0.1.7                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8101230Z   mistune                        3.0.2                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8101580Z   mpc                            1.3.1                h91ba8db_0               conda-forge
2025-01-07T17:43:42.8101900Z   mpfr                           4.2.1                h41d338b_1               conda-forge
2025-01-07T17:43:42.8102210Z   mpmath                         1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8102570Z   munkres                        1.1.4                pyh9f0ad1d_0             conda-forge
2025-01-07T17:43:42.8102910Z   mypy_extensions                1.0.0                pyha770c72_0             conda-forge
2025-01-07T17:43:42.8103460Z   nbclassic                      1.1.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8103790Z   nbclient                       0.10.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8104530Z   nbconvert                      7.16.4               hd8ed1ab_1               conda-forge
2025-01-07T17:43:42.8104920Z   nbconvert-core                 7.16.4               pyhd8ed1ab_1             conda-forge
2025-01-07T17:43:42.8105520Z   nbconvert-pandoc               7.16.4               hd8ed1ab_1               conda-forge
2025-01-07T17:43:42.8105870Z   nbformat                       5.10.4               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8106330Z   nbsphinx                       0.9.4                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8106830Z   ncurses                        6.5                  hb89a1cb_0               conda-forge
2025-01-07T17:43:42.8107170Z   nest-asyncio                   1.6.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8107640Z   networkx                       3.3                  pyhd8ed1ab_1             conda-forge
2025-01-07T17:43:42.8107980Z   notebook                       7.2.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8108410Z   notebook-shim                  0.2.4                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8108710Z   numba                          0.59.1               py312hbaff935_0          conda-forge
2025-01-07T17:43:42.8109060Z   numexpr                        2.10.0               py312h8ae5369_0          conda-forge
2025-01-07T17:43:42.8109420Z   numpy                          1.26.4               py312h8442bc7_0          conda-forge
2025-01-07T17:43:42.8109720Z   numpydoc                       1.7.0                pyhd8ed1ab_1             conda-forge
2025-01-07T17:43:42.8110000Z   openjpeg                       2.5.2                h9f1df11_0               conda-forge
2025-01-07T17:43:42.8110280Z   openssl                        3.3.1                hfb2fe0b_0               conda-forge
2025-01-07T17:43:42.8110790Z   overrides                      7.7.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8111110Z   packaging                      24.1                 pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8111400Z   pandas                         2.2.2                py312h8ae5369_1          conda-forge
2025-01-07T17:43:42.8111670Z   pandoc                         3.2                  hce30654_0               conda-forge
2025-01-07T17:43:42.8111960Z   pandocfilters                  1.5.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8112250Z   pango                          1.54.0               h5cb9fbc_0               conda-forge
2025-01-07T17:43:42.8112520Z   parso                          0.8.4                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8112800Z   pathspec                       0.12.1               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8113090Z   pbr                            6.0.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8113610Z   pcre2                          10.44                h297a79d_0               conda-forge
2025-01-07T17:43:42.8113910Z   pexpect                        4.9.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8114240Z   pickleshare                    0.7.5                py_1003                  conda-forge
2025-01-07T17:43:42.8114540Z   pillow                         10.3.0               py312h39b1d8d_1          conda-forge
2025-01-07T17:43:42.8114810Z   pip                            24.0                 pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8115070Z   pixman                         0.43.4               hebf3989_0               conda-forge
2025-01-07T17:43:42.8115390Z   pkgutil-resolve-name           1.3.10               pyhd8ed1ab_1             conda-forge
2025-01-07T17:43:42.8115710Z   platformdirs                   4.2.2                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8116370Z   plotly                         5.22.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8116650Z   pluggy                         1.5.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8117010Z   prometheus_client              0.20.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8117340Z   prompt-toolkit                 3.0.47               pyha770c72_0             conda-forge
2025-01-07T17:43:42.8117640Z   psutil                         5.9.8                py312he37b823_0          conda-forge
2025-01-07T17:43:42.8117930Z   pthread-stubs                  0.4                  h27ca646_1001            conda-forge
2025-01-07T17:43:42.8118230Z   ptyprocess                     0.7.0                pyhd3deb0d_0             conda-forge
2025-01-07T17:43:42.8118580Z   pure_eval                      0.2.2                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8118910Z   py-cpuinfo                     9.0.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8119200Z   pybtex                         0.24.0               pyhd8ed1ab_2             conda-forge
2025-01-07T17:43:42.8119510Z   pybtex-docutils                1.0.3                py312h81bd7bf_1          conda-forge
2025-01-07T17:43:42.8119820Z   pycparser                      2.22                 pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8120100Z   pyerfa                         2.0.1.4              py312hbebd99a_1          conda-forge
2025-01-07T17:43:42.8120390Z   pygments                       2.18.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8120700Z   pygraphviz                     1.13                 py312h5f4d302_1          conda-forge
2025-01-07T17:43:42.8121000Z   pyobjc-core                    10.3.1               py312hbb55c70_0          conda-forge
2025-01-07T17:43:42.8121330Z   pyobjc-framework-cocoa         10.3.1               py312hbb55c70_0          conda-forge
2025-01-07T17:43:42.8121770Z   pyparsing                      3.1.2                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8122050Z   pysocks                        1.7.1                pyha2e5f31_6             conda-forge
2025-01-07T17:43:42.8122340Z   pytables                       3.9.2                py312hb622ae1_2          conda-forge
2025-01-07T17:43:42.8122620Z   pytest                         8.2.2                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8122910Z   pytest-cov                     5.0.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8123220Z   pytest-doctestplus             1.2.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8123530Z   pytest-html                    4.1.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8123840Z   pytest-metadata                3.1.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8124140Z   python                         3.12.4               h30c5eda_0_cpython       conda-forge
2025-01-07T17:43:42.8124720Z   python-dateutil                2.9.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8125080Z   python-fastjsonschema          2.20.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8125450Z   python-json-logger             2.0.7                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8125860Z   python-tzdata                  2024.1               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8126200Z   python_abi                     3.12                 4_cp312                  conda-forge
2025-01-07T17:43:42.8126590Z   pytz                           2024.1               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8126870Z   pyyaml                         6.0.1                py312h02f2b3b_1          conda-forge
2025-01-07T17:43:42.8127140Z   pyzmq                          26.0.3               py312hfa13136_0          conda-forge
2025-01-07T17:43:42.8127680Z   qgrid                          1.3.1                pyhd8ed1ab_4             conda-forge
2025-01-07T17:43:42.8127990Z   radioactivedecay               0.5.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8128300Z   readline                       8.2                  h92ec313_1               conda-forge
2025-01-07T17:43:42.8128590Z   recommonmark                   0.7.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8128980Z   referencing                    0.35.1               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8129290Z   requests                       2.32.3               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8129600Z   rfc3339-validator              0.1.4                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8129930Z   rfc3986-validator              0.1.1                pyh9f0ad1d_0             conda-forge
2025-01-07T17:43:42.8130260Z   rpds-py                        0.18.1               py312h552d48e_0          conda-forge
2025-01-07T17:43:42.8130560Z   ruff                           0.4.9                py312h3402d49_0          conda-forge
2025-01-07T17:43:42.8130850Z   scipy                          1.13.1               py312h14ffa8f_0          conda-forge
2025-01-07T17:43:42.8131230Z   send2trash                     1.8.3                pyh31c8845_0             conda-forge
2025-01-07T17:43:42.8131590Z   setuptools                     70.0.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8131890Z   setuptools-scm                 8.1.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8132670Z   setuptools_scm                 8.1.0                hd8ed1ab_0               conda-forge
2025-01-07T17:43:42.8133030Z   six                            1.16.0               pyh6c4a22f_0             conda-forge
2025-01-07T17:43:42.8133320Z   snakeviz                       2.2.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8133620Z   snappy                         1.2.0                hd04f947_1               conda-forge
2025-01-07T17:43:42.8134010Z   sniffio                        1.3.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8134410Z   snowballstemmer                2.2.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8134730Z   soupsieve                      2.5                  pyhd8ed1ab_1             conda-forge
2025-01-07T17:43:42.8135010Z   sphinx                         7.3.7                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8135310Z   sphinx-astropy                 1.9.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8135640Z   sphinx-automodapi              0.17.0               pyh717bed2_1             conda-forge
2025-01-07T17:43:42.8135970Z   sphinx-gallery                 0.16.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8136290Z   sphinx-jsonschema              1.19.1               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8137480Z   sphinx_bootstrap_theme         0.8.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8137890Z   sphinx_rtd_theme               2.0.0                pyha770c72_0             conda-forge
2025-01-07T17:43:42.8138230Z   sphinxcontrib-apidoc           0.3.0                py_1                     conda-forge
2025-01-07T17:43:42.8138590Z   sphinxcontrib-applehelp        1.0.8                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8138950Z   sphinxcontrib-bibtex           2.6.2                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8139320Z   sphinxcontrib-devhelp          1.0.6                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8139690Z   sphinxcontrib-htmlhelp         2.0.5                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8140040Z   sphinxcontrib-jquery           4.1                  pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8140560Z   sphinxcontrib-jsmath           1.0.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8140910Z   sphinxcontrib-qthelp           1.0.7                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8141340Z   sphinxcontrib-serializinghtml  1.1.10               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8141820Z   stack_data                     0.6.2                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8142130Z   sympy                          1.12.1               pypyh2585a3b_103         conda-forge
2025-01-07T17:43:42.8142410Z   tabulate                       0.9.0                pyhd8ed1ab_1             conda-forge
2025-01-07T17:43:42.8142690Z   tenacity                       8.4.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8142980Z   terminado                      0.18.1               pyh31c8845_0             conda-forge
2025-01-07T17:43:42.8143280Z   tinycss2                       1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8143550Z   tk                             8.6.13               h5083fa2_1               conda-forge
2025-01-07T17:43:42.8143840Z   toml                           0.10.2               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8144120Z   tomli                          2.0.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8144390Z   tornado                        6.4.1                py312h7e5086c_0          conda-forge
2025-01-07T17:43:42.8144770Z   tqdm                           4.66.4               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8145050Z   traitlets                      5.14.3               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8145340Z   typed-ast                      1.5.5                py312h02f2b3b_1          conda-forge
2025-01-07T17:43:42.8145670Z   types-python-dateutil          2.9.0.20240316       pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8146030Z   typing-extensions              4.12.2               hd8ed1ab_0               conda-forge
2025-01-07T17:43:42.8146360Z   typing_extensions              4.12.2               pyha770c72_0             conda-forge
2025-01-07T17:43:42.8146880Z   typing_utils                   0.1.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8147180Z   tzdata                         2024a                h0c530f3_0               conda-forge
2025-01-07T17:43:42.8147480Z   uri-template                   1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8147770Z   urllib3                        2.2.2                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8148050Z   wcwidth                        0.2.13               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8148330Z   webcolors                      24.6.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8148640Z   webencodings                   0.5.1                pyhd8ed1ab_2             conda-forge
2025-01-07T17:43:42.8148950Z   websocket-client               1.8.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8149420Z   wheel                          0.43.0               pyhd8ed1ab_1             conda-forge
2025-01-07T17:43:42.8149740Z   widgetsnbextension             3.6.6                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8150050Z   xorg-libxau                    1.0.11               hb547adb_0               conda-forge
2025-01-07T17:43:42.8150350Z   xorg-libxdmcp                  1.1.3                h27ca646_0               conda-forge
2025-01-07T17:43:42.8150620Z   xz                             5.2.6                h57fd34a_0               conda-forge
2025-01-07T17:43:42.8150880Z   yaml                           0.2.5                h3422bc3_2               conda-forge
2025-01-07T17:43:42.8151140Z   zeromq                         4.3.5                hcc0f68c_4               conda-forge
2025-01-07T17:43:42.8151530Z   zipp                           3.19.2               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:42.8151790Z   zlib                           1.3.1                hfb2fe0b_1               conda-forge
2025-01-07T17:43:42.8152060Z   zlib-ng                        2.0.7                h1a8c8d9_0               conda-forge
2025-01-07T17:43:42.8152330Z   zstd                           1.5.6                hb46c0d2_0               conda-forge
2025-01-07T17:43:42.8152760Z ##[endgroup]
2025-01-07T17:43:42.8427470Z ##[group]Run pip install -e . --user
2025-01-07T17:43:42.8427770Z [36;1mpip install -e . --user[0m
2025-01-07T17:43:42.9240610Z shell: /bin/bash -l {0}
2025-01-07T17:43:42.9240830Z env:
2025-01-07T17:43:42.9240950Z   CACHE_NUMBER: 0
2025-01-07T17:43:42.9241420Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-07T17:43:42.9241910Z   CODECOV_TOKEN: 
2025-01-07T17:43:42.9242070Z   MAMBA_ROOT_PREFIX: /Users/runner/micromamba
2025-01-07T17:43:42.9242300Z   MAMBA_EXE: /Users/runner/micromamba-bin/micromamba
2025-01-07T17:43:42.9242580Z   CONDARC: /Users/runner/work/_temp/setup-micromamba/.condarc
2025-01-07T17:43:42.9242800Z ##[endgroup]
2025-01-07T17:43:44.3400160Z Obtaining file:///Users/runner/work/tardis/tardis
2025-01-07T17:43:44.3424200Z   Installing build dependencies: started
2025-01-07T17:43:47.1758130Z   Installing build dependencies: finished with status 'done'
2025-01-07T17:43:47.1773050Z   Checking if build backend supports build_editable: started
2025-01-07T17:43:47.3019310Z   Checking if build backend supports build_editable: finished with status 'done'
2025-01-07T17:43:47.3083960Z   Getting requirements to build editable: started
2025-01-07T17:43:47.7394360Z   Getting requirements to build editable: finished with status 'done'
2025-01-07T17:43:47.7404310Z   Preparing editable metadata (pyproject.toml): started
2025-01-07T17:43:48.1349980Z   Preparing editable metadata (pyproject.toml): finished with status 'done'
2025-01-07T17:43:48.1816720Z Requirement already satisfied: astropy in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from tardis==0.0.0) (6.1.1)
2025-01-07T17:43:48.2122310Z Requirement already satisfied: numpy>=1.23 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (1.26.4)
2025-01-07T17:43:48.2137580Z Requirement already satisfied: pyerfa>=2.0.1.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (2.0.1.4)
2025-01-07T17:43:48.2144920Z Requirement already satisfied: astropy-iers-data>=0.2024.5.27.0.30.8 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (0.2024.6.17.0.31.35)
2025-01-07T17:43:48.2150020Z Requirement already satisfied: PyYAML>=3.13 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (6.0.1)
2025-01-07T17:43:48.2156440Z Requirement already satisfied: packaging>=19.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (24.1)
2025-01-07T17:43:48.2215260Z Building wheels for collected packages: tardis
2025-01-07T17:43:48.2222140Z   Building editable for tardis (pyproject.toml): started
2025-01-07T17:43:48.8247420Z   Building editable for tardis (pyproject.toml): finished with status 'done'
2025-01-07T17:43:48.8254260Z   Created wheel for tardis: filename=tardis-0.0.0-0.editable-py3-none-any.whl size=8879 sha256=9bec2747ad45025ccc13feec947fafc033dcb03d3a018266cf7e82dc4986ba91
2025-01-07T17:43:48.8255200Z   Stored in directory: /private/var/folders/95/0ydz4d79163427j3k5crp3fh0000gn/T/pip-ephem-wheel-cache-u5eeqgr2/wheels/bb/4f/6a/0829b918c1c10bc28535ce7f14be21eee54375bdd9cd0c306a
2025-01-07T17:43:48.8278640Z Successfully built tardis
2025-01-07T17:43:49.3725450Z Installing collected packages: tardis
2025-01-07T17:43:49.3845470Z Successfully installed tardis-0.0.0
2025-01-07T17:43:49.6335180Z ##[group]Run pip install qgridnext
2025-01-07T17:43:49.6335440Z [36;1mpip install qgridnext[0m
2025-01-07T17:43:49.6427670Z shell: /bin/bash -l {0}
2025-01-07T17:43:49.6427860Z env:
2025-01-07T17:43:49.6428020Z   CACHE_NUMBER: 0
2025-01-07T17:43:49.6428510Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-07T17:43:49.6429060Z   CODECOV_TOKEN: 
2025-01-07T17:43:49.6429230Z   MAMBA_ROOT_PREFIX: /Users/runner/micromamba
2025-01-07T17:43:49.6429490Z   MAMBA_EXE: /Users/runner/micromamba-bin/micromamba
2025-01-07T17:43:49.6429780Z   CONDARC: /Users/runner/work/_temp/setup-micromamba/.condarc
2025-01-07T17:43:49.6430040Z ##[endgroup]
2025-01-07T17:43:50.2317790Z Collecting qgridnext
2025-01-07T17:43:50.2732000Z   Downloading qgridnext-2.0.4-py3-none-any.whl.metadata (9.9 kB)
2025-01-07T17:43:50.2906880Z Requirement already satisfied: pandas>=0.20.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (2.2.2)
2025-01-07T17:43:50.2911740Z Requirement already satisfied: ipywidgets>=7.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (7.8.0)
2025-01-07T17:43:50.2918060Z Requirement already satisfied: numpy in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (1.26.4)
2025-01-07T17:43:50.2924170Z Requirement already satisfied: traitlets in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (5.14.3)
2025-01-07T17:43:50.2974610Z Requirement already satisfied: comm>=0.1.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-01-07T17:43:50.2981250Z Requirement already satisfied: ipython-genutils~=0.2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.0)
2025-01-07T17:43:50.2990530Z Requirement already satisfied: widgetsnbextension~=3.6.5 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (3.6.6)
2025-01-07T17:43:50.2999430Z Requirement already satisfied: ipython>=4.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (8.25.0)
2025-01-07T17:43:50.3007930Z Requirement already satisfied: jupyterlab-widgets<3,>=1.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (1.1.7)
2025-01-07T17:43:50.3326150Z Requirement already satisfied: python-dateutil>=2.8.2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2.9.0)
2025-01-07T17:43:50.3335440Z Requirement already satisfied: pytz>=2020.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-01-07T17:43:50.3464060Z Requirement already satisfied: tzdata>=2022.7 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-01-07T17:43:50.3610170Z Requirement already satisfied: decorator in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (5.1.1)
2025-01-07T17:43:50.3641540Z Requirement already satisfied: jedi>=0.16 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.19.1)
2025-01-07T17:43:50.3666910Z Requirement already satisfied: matplotlib-inline in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.1.7)
2025-01-07T17:43:50.3668010Z Requirement already satisfied: prompt-toolkit<3.1.0,>=3.0.41 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (3.0.47)
2025-01-07T17:43:50.3669870Z Requirement already satisfied: pygments>=2.4.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.18.0)
2025-01-07T17:43:50.3670980Z Requirement already satisfied: stack-data in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.6.2)
2025-01-07T17:43:50.3671960Z Requirement already satisfied: pexpect>4.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (4.9.0)
2025-01-07T17:43:50.3672950Z Requirement already satisfied: six>=1.5 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from python-dateutil>=2.8.2->pandas>=0.20.0->qgridnext) (1.16.0)
2025-01-07T17:43:50.3729700Z Requirement already satisfied: notebook>=4.4.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.2.1)
2025-01-07T17:43:50.3817530Z Requirement already satisfied: parso<0.9.0,>=0.8.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jedi>=0.16->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.8.4)
2025-01-07T17:43:50.3915410Z Requirement already satisfied: jupyter-server<3,>=2.4.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.1)
2025-01-07T17:43:50.4015950Z Requirement already satisfied: jupyterlab-server<3,>=2.27.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.27.2)
2025-01-07T17:43:50.4117880Z Requirement already satisfied: jupyterlab<4.3,>=4.2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-01-07T17:43:50.4218260Z Requirement already satisfied: notebook-shim<0.3,>=0.2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.2.4)
2025-01-07T17:43:50.4320340Z Requirement already satisfied: tornado>=6.2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.4.1)
2025-01-07T17:43:50.4421150Z Requirement already satisfied: ptyprocess>=0.5 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pexpect>4.3->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.7.0)
2025-01-07T17:43:50.4523110Z Requirement already satisfied: wcwidth in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from prompt-toolkit<3.1.0,>=3.0.41->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.13)
2025-01-07T17:43:50.4634730Z Requirement already satisfied: executing>=1.2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.0.1)
2025-01-07T17:43:50.4735630Z Requirement already satisfied: asttokens>=2.1.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.4.1)
2025-01-07T17:43:50.4837830Z Requirement already satisfied: pure-eval in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-01-07T17:43:50.4937940Z Requirement already satisfied: anyio>=3.1.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.4.0)
2025-01-07T17:43:50.5040130Z Requirement already satisfied: argon2-cffi>=21.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.1.0)
2025-01-07T17:43:50.5140900Z Requirement already satisfied: jinja2>=3.0.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.1.4)
2025-01-07T17:43:50.5242430Z Requirement already satisfied: jupyter-client>=7.4.4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (8.6.2)
2025-01-07T17:43:50.5343270Z Requirement already satisfied: jupyter-core!=5.0.*,>=4.12 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.7.2)
2025-01-07T17:43:50.5445310Z Requirement already satisfied: jupyter-events>=0.9.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-01-07T17:43:50.5546170Z Requirement already satisfied: jupyter-server-terminals>=0.4.4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.3)
2025-01-07T17:43:50.5647080Z Requirement already satisfied: nbconvert>=6.4.4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.16.4)
2025-01-07T17:43:50.5748580Z Requirement already satisfied: nbformat>=5.3.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.10.4)
2025-01-07T17:43:50.5849180Z Requirement already satisfied: overrides>=5.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.7.0)
2025-01-07T17:43:50.5950060Z Requirement already satisfied: packaging>=22.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.1)
2025-01-07T17:43:50.6051440Z Requirement already satisfied: prometheus-client>=0.9 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.20.0)
2025-01-07T17:43:50.6153290Z Requirement already satisfied: pyzmq>=24 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (26.0.3)
2025-01-07T17:43:50.6255580Z Requirement already satisfied: send2trash>=1.8.2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.3)
2025-01-07T17:43:50.6357700Z Requirement already satisfied: terminado>=0.8.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-01-07T17:43:50.6458010Z Requirement already satisfied: websocket-client>=1.7 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.0)
2025-01-07T17:43:50.6560100Z Requirement already satisfied: async-lru>=1.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.4)
2025-01-07T17:43:50.6662060Z Requirement already satisfied: httpx>=0.25.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.27.0)
2025-01-07T17:43:50.6770740Z Requirement already satisfied: ipykernel>=6.5.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.29.4)
2025-01-07T17:43:50.6872730Z Requirement already satisfied: jupyter-lsp>=2.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.5)
2025-01-07T17:43:50.6974810Z Requirement already satisfied: setuptools>=40.1.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (70.0.0)
2025-01-07T17:43:50.7076740Z Requirement already satisfied: babel>=2.10 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.0)
2025-01-07T17:43:50.7184770Z Requirement already satisfied: json5>=0.9.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.9.25)
2025-01-07T17:43:50.7286790Z Requirement already satisfied: jsonschema>=4.18.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.22.0)
2025-01-07T17:43:50.7389400Z Requirement already satisfied: requests>=2.31 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.32.3)
2025-01-07T17:43:50.7491550Z Requirement already satisfied: idna>=2.8 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.7)
2025-01-07T17:43:50.7598180Z Requirement already satisfied: sniffio>=1.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.1)
2025-01-07T17:43:50.7701300Z Requirement already satisfied: argon2-cffi-bindings in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (21.2.0)
2025-01-07T17:43:50.7803470Z Requirement already satisfied: certifi in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2024.6.2)
2025-01-07T17:43:50.7905500Z Requirement already satisfied: httpcore==1.* in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.0.5)
2025-01-07T17:43:50.8007660Z Requirement already satisfied: h11<0.15,>=0.13 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpcore==1.*->httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.14.0)
2025-01-07T17:43:50.8115310Z Requirement already satisfied: appnope in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.4)
2025-01-07T17:43:50.8217770Z Requirement already satisfied: debugpy>=1.6.5 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.1)
2025-01-07T17:43:50.8320190Z Requirement already satisfied: nest-asyncio in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.6.0)
2025-01-07T17:43:50.8422490Z Requirement already satisfied: psutil in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.9.8)
2025-01-07T17:43:50.8525280Z Requirement already satisfied: MarkupSafe>=2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jinja2>=3.0.3->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.1.5)
2025-01-07T17:43:50.8627340Z Requirement already satisfied: attrs>=22.2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.2.0)
2025-01-07T17:43:50.8734080Z Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2023.12.1)
2025-01-07T17:43:50.8735540Z Requirement already satisfied: referencing>=0.28.4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.35.1)
2025-01-07T17:43:50.8837510Z Requirement already satisfied: rpds-py>=0.7.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-01-07T17:43:50.8939700Z Requirement already satisfied: platformdirs>=2.5 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-core!=5.0.*,>=4.12->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-01-07T17:43:50.9041950Z Requirement already satisfied: python-json-logger>=2.0.4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.7)
2025-01-07T17:43:50.9090190Z Requirement already satisfied: pyyaml>=5.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.0.1)
2025-01-07T17:43:50.9192410Z Requirement already satisfied: rfc3339-validator in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.4)
2025-01-07T17:43:50.9285980Z Requirement already satisfied: rfc3986-validator>=0.1.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.1)
2025-01-07T17:43:50.9339150Z Requirement already satisfied: beautifulsoup4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.12.3)
2025-01-07T17:43:50.9441150Z Requirement already satisfied: bleach!=5.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.1.0)
2025-01-07T17:43:50.9486530Z Requirement already satisfied: defusedxml in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.7.1)
2025-01-07T17:43:50.9545090Z Requirement already satisfied: jupyterlab-pygments in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.3.0)
2025-01-07T17:43:50.9594030Z Requirement already satisfied: mistune<4,>=2.0.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.2)
2025-01-07T17:43:50.9595450Z Requirement already satisfied: nbclient>=0.5.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-01-07T17:43:50.9596690Z Requirement already satisfied: pandocfilters>=1.4.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.0)
2025-01-07T17:43:50.9597910Z Requirement already satisfied: tinycss2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-07T17:43:50.9599080Z Requirement already satisfied: fastjsonschema>=2.15 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbformat>=5.3.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.20.0)
2025-01-07T17:43:50.9600320Z Requirement already satisfied: charset-normalizer<4,>=2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.3.2)
2025-01-07T17:43:50.9601550Z Requirement already satisfied: urllib3<3,>=1.21.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.2)
2025-01-07T17:43:50.9602760Z Requirement already satisfied: webencodings in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from bleach!=5.0.0->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.1)
2025-01-07T17:43:50.9604050Z Requirement already satisfied: fqdn in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.1)
2025-01-07T17:43:50.9605380Z Requirement already satisfied: isoduration in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (20.11.0)
2025-01-07T17:43:50.9606750Z Requirement already satisfied: jsonpointer>1.13 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.0)
2025-01-07T17:43:50.9608100Z Requirement already satisfied: uri-template in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-07T17:43:50.9609470Z Requirement already satisfied: webcolors>=1.11 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.6.0)
2025-01-07T17:43:50.9611410Z Requirement already satisfied: cffi>=1.0.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.16.0)
2025-01-07T17:43:50.9612690Z Requirement already satisfied: soupsieve>1.2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from beautifulsoup4->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.5)
2025-01-07T17:43:50.9613990Z Requirement already satisfied: pycparser in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.22)
2025-01-07T17:43:50.9615440Z Requirement already satisfied: arrow>=0.15.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-07T17:43:50.9616960Z Requirement already satisfied: types-python-dateutil>=2.8.10 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from arrow>=0.15.0->isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.9.0.20240316)
2025-01-07T17:43:50.9872300Z Downloading qgridnext-2.0.4-py3-none-any.whl (1.3 MB)
2025-01-07T17:43:51.0474080Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.3/1.3 MB 21.8 MB/s eta 0:00:00
2025-01-07T17:43:51.7647460Z Installing collected packages: qgridnext
2025-01-07T17:43:51.8321810Z Successfully installed qgridnext-2.0.4
2025-01-07T17:43:52.0964510Z ##[group]Run pytest tardis --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-01-07T17:43:52.0965790Z [36;1mpytest tardis --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-01-07T17:43:52.1036430Z shell: /bin/bash -l {0}
2025-01-07T17:43:52.1036740Z env:
2025-01-07T17:43:52.1036950Z   CACHE_NUMBER: 0
2025-01-07T17:43:52.1037590Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-07T17:43:52.1038220Z   CODECOV_TOKEN: 
2025-01-07T17:43:52.1038510Z   MAMBA_ROOT_PREFIX: /Users/runner/micromamba
2025-01-07T17:43:52.1038850Z   MAMBA_EXE: /Users/runner/micromamba-bin/micromamba
2025-01-07T17:43:52.1039400Z   CONDARC: /Users/runner/work/_temp/setup-micromamba/.condarc
2025-01-07T17:43:52.1039740Z ##[endgroup]
2025-01-07T17:44:07.5288180Z ============================= test session starts ==============================
2025-01-07T17:44:07.5289060Z platform darwin -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-01-07T17:44:07.5289490Z rootdir: /Users/runner/work/tardis/tardis
2025-01-07T17:44:07.5289900Z configfile: pyproject.toml
2025-01-07T17:44:07.5290290Z plugins: cov-5.0.0, html-4.1.1, metadata-3.1.1, doctestplus-1.2.1, anyio-4.4.0
2025-01-07T17:44:07.5290790Z collected 1796 items / 2 deselected / 1794 selected
2025-01-07T17:44:07.5291060Z 
2025-01-07T17:44:12.0935770Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-01-07T17:44:14.5864970Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-01-07T17:44:16.0623280Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-01-07T17:44:17.5218340Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-01-07T17:44:17.5277940Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-01-07T17:44:18.7124340Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-01-07T17:44:19.1035440Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-01-07T17:44:19.1052060Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-01-07T17:44:23.1752220Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-01-07T17:44:23.1872110Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-01-07T17:44:23.2244510Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-01-07T17:44:53.6185570Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-01-07T17:44:53.6449240Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-01-07T17:44:53.6722370Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-01-07T17:44:53.7051770Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-01-07T17:44:53.7265990Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-01-07T17:44:54.0354820Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-01-07T17:44:54.4724560Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-01-07T17:44:54.4869660Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-01-07T17:44:54.6409240Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-01-07T17:44:54.6450380Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-01-07T17:45:19.3238630Z tardis/model/tests/test_base.py ........................................ [ 10%]
2025-01-07T17:45:20.0702330Z ............                                                             [ 10%]
2025-01-07T17:45:22.3408400Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-01-07T17:45:22.4270590Z tardis/model/tests/test_density.py ..                                    [ 11%]
2025-01-07T17:45:23.8029630Z tardis/opacities/tests/test_opacity_solver.py .....                      [ 11%]
2025-01-07T17:45:24.9304610Z tardis/opacities/tests/test_opacity_state_numba.py .....                 [ 11%]
2025-01-07T17:45:26.9132410Z tardis/opacities/tests/test_tau_sobolev.py ..                            [ 12%]
2025-01-07T17:45:29.5757900Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-01-07T17:46:18.8080770Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-01-07T17:46:27.4290380Z tardis/plasma/equilibrium/tests/test_rate_matrix.py .                    [ 12%]
2025-01-07T17:46:28.5954590Z tardis/plasma/tests/test_complete_plasmas.py .....................s..... [ 13%]
2025-01-07T17:46:30.7618290Z s....ssssss............s............ss.....s....ssssss............s..... [ 18%]
2025-01-07T17:46:32.0506290Z .......ss.....s....ssssss............s............ss.....s....ssssss.... [ 22%]
2025-01-07T17:46:34.1506560Z ........s............ss.....s........ss............s............ss.....s [ 26%]
2025-01-07T17:46:36.2863840Z ........ss............s............ss.....s....ssssss............s...... [ 30%]
2025-01-07T17:46:37.0039090Z ......ss.....s....ssssss............s............ss.....s.ss.ssssss..... [ 34%]
2025-01-07T17:46:39.3836900Z .......s............ss.....s....ssssss............s............ss.....s. [ 38%]
2025-01-07T17:46:42.2299400Z ...ssssss............s............ss.....s....ssssss............s....... [ 42%]
2025-01-07T17:46:44.5475010Z .....ss.....s....ssssss............s............s...........ssssss...... [ 46%]
2025-01-07T17:46:45.8785320Z ......s............s...........ssssss............s............s......... [ 50%]
2025-01-07T17:46:48.0573590Z ..ssssss............s............ss.....s....ssssss............s........ [ 54%]
2025-01-07T17:46:50.5044960Z ....ss.....s....ssssss..........................s.....s....ssss......... [ 58%]
2025-01-07T17:46:50.7775000Z ...................s.....s....ssss.......                                [ 60%]
2025-01-07T17:46:51.0014180Z tardis/plasma/tests/test_hdf_plasma.py ................................. [ 62%]
2025-01-07T17:46:51.0160120Z ......                                                                   [ 62%]
2025-01-07T17:46:51.2431070Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-01-07T17:48:31.7937950Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-01-07T17:48:31.7977090Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-01-07T17:48:50.8373300Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-01-07T17:48:59.7929580Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-01-07T17:49:00.2855430Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-01-07T17:49:05.7934510Z tardis/simulation/tests/test_simulation.py .............                 [ 65%]
2025-01-07T17:49:05.8047850Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-01-07T17:49:06.0326070Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-01-07T17:49:06.0365860Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-01-07T17:49:06.7716760Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-01-07T17:49:06.7818140Z ..........                                                               [ 69%]
2025-01-07T17:49:06.8871400Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-01-07T17:49:06.9058880Z .........                                                                [ 72%]
2025-01-07T17:49:22.3710620Z tardis/spectrum/tests/test_spectrum_solver.py ....                       [ 72%]
2025-01-07T17:50:09.2934810Z tardis/tests/test_tardis_full.py ....                                    [ 72%]
2025-01-07T17:51:36.1778650Z tardis/tests/test_tardis_full_formal_integral.py ................        [ 73%]
2025-01-07T17:51:36.2230420Z tardis/tests/test_util.py .............................................  [ 75%]
2025-01-07T17:51:38.0910580Z tardis/transport/montecarlo/tests/test_base.py x.....................    [ 77%]
2025-01-07T17:51:42.5365900Z tardis/transport/montecarlo/tests/test_interaction.py .......            [ 77%]
2025-01-07T17:51:42.6855040Z tardis/transport/montecarlo/tests/test_macro_atom.py ....                [ 77%]
2025-01-07T17:51:42.6949700Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-01-07T17:51:42.7182960Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-01-07T17:51:49.1276610Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py x..       [ 81%]
2025-01-07T17:51:49.1378940Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-01-07T17:51:50.9499160Z tardis/transport/montecarlo/tests/test_numba_interface.py .....x.        [ 82%]
2025-01-07T17:51:51.2612230Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-01-07T17:51:52.1622080Z tardis/transport/montecarlo/tests/test_packet.py .................xXXXXX [ 84%]
2025-01-07T17:51:52.2463070Z XX.........                                                              [ 84%]
2025-01-07T17:51:52.2681490Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-01-07T17:51:52.4508460Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-01-07T17:51:52.6897190Z .....                                                                    [ 85%]
2025-01-07T17:52:00.8149520Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py ......         [ 85%]
2025-01-07T17:52:00.8339270Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-01-07T17:52:00.8372090Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-01-07T17:52:01.9344980Z tardis/transport/montecarlo/tests/test_vpacket.py ..x.                   [ 86%]
2025-01-07T17:52:01.9477520Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-01-07T17:52:04.2360680Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py . [ 86%]
2025-01-07T17:52:04.2362550Z                                                                          [ 86%]
2025-01-07T17:52:04.6906330Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-01-07T17:52:06.1699720Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-01-07T17:52:07.6927240Z ......                                                                   [ 88%]
2025-01-07T17:52:11.8467380Z tardis/visualization/tools/tests/test_liv_plot.py EEEEEEEEEEEEEEEEEEEEEE [ 90%]
2025-01-07T17:52:13.4363330Z EEEEEEEEEEEEEEEEEEEEEEEEEEEEE                                            [ 91%]
2025-01-07T17:52:15.9490490Z tardis/visualization/tools/tests/test_rpacket_plot.py .................. [ 92%]
2025-01-07T17:52:22.4249000Z ....                                                                     [ 92%]
2025-01-07T17:52:26.7902430Z tardis/visualization/tools/tests/test_sdec_plot.py EEEEEEEEEEEEEEEEEEEEE [ 94%]
2025-01-07T17:52:28.7372560Z EEEEEEEEEEEEEEEEEEEEEEEEEEEEEE                                           [ 95%]
2025-01-07T17:52:29.0441170Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-01-07T17:52:29.0804180Z ....                                                                     [ 96%]
2025-01-07T17:52:29.8466580Z tardis/visualization/widgets/tests/test_line_info.py ................... [ 97%]
2025-01-07T17:52:30.2962030Z ..................                                                       [ 98%]
2025-01-07T17:55:36.9843320Z tardis/visualization/widgets/tests/test_shell_info.py .................. [ 99%]
2025-01-07T17:55:42.9275630Z ......                                                                   [100%]
2025-01-07T17:55:42.9276260Z 
2025-01-07T17:55:42.9276550Z ==================================== ERRORS ====================================
2025-01-07T17:55:42.9277080Z ___ ERROR at setup of TestLIVPlotter.test_parse_species_list[_species_list] ____
2025-01-07T17:55:42.9277360Z 
2025-01-07T17:55:42.9277630Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:42.9277990Z 
2025-01-07T17:55:42.9278150Z     @pytest.fixture(scope="class")
2025-01-07T17:55:42.9278470Z     def plotter(simulation_simple):
2025-01-07T17:55:42.9278810Z         """
2025-01-07T17:55:42.9279140Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:42.9279970Z     
2025-01-07T17:55:42.9280340Z         Parameters:
2025-01-07T17:55:42.9280590Z         -----------
2025-01-07T17:55:42.9280850Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:42.9281130Z     
2025-01-07T17:55:42.9281290Z         Returns:
2025-01-07T17:55:42.9281610Z         --------
2025-01-07T17:55:42.9282080Z         An LIVPlotter instance.
2025-01-07T17:55:42.9282340Z         """
2025-01-07T17:55:42.9282580Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:42.9282800Z 
2025-01-07T17:55:42.9282960Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:42.9283290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:42.9283740Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:42.9284130Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:42.9284550Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:42.9285010Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:42.9285420Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:42.9289520Z     return cls(
2025-01-07T17:55:42.9289740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:42.9289910Z 
2025-01-07T17:55:42.9290140Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:42.9292630Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:42.9293030Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:42.9293490Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:42.9294010Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:42.9294380Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:42.9294860Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:42.9295270Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:42.9295720Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:42.9296060Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:42.9296400Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:42.9296580Z 
2025-01-07T17:55:42.9296650Z [29224 rows x 12 columns]
2025-01-07T17:55:42.9297060Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:42.9297450Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:42.9297880Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:42.9298210Z        0.00025518])
2025-01-07T17:55:42.9298490Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:42.9304570Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:42.9305020Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:42.9305300Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:42.9305630Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:42.9305950Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:42.9306390Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:42.9306840Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:42.9307200Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:42.9307470Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:42.9307760Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:42.9308030Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:42.9308370Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:42.9308750Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:42.9309140Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:42.9309470Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:42.9309900Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:42.9310260Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:42.9310630Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:42.9311010Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:42.9311320Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:42.9311610Z            2.000e+09] cm / s>
2025-01-07T17:55:42.9311720Z 
2025-01-07T17:55:42.9311810Z     def __init__(
2025-01-07T17:55:42.9312190Z         self,
2025-01-07T17:55:42.9312730Z         last_interaction_type,
2025-01-07T17:55:42.9312950Z         last_line_interaction_in_id,
2025-01-07T17:55:42.9313190Z         last_line_interaction_out_id,
2025-01-07T17:55:42.9313480Z         last_line_interaction_in_nu,
2025-01-07T17:55:42.9313700Z         last_interaction_in_r,
2025-01-07T17:55:42.9315150Z         lines_df,
2025-01-07T17:55:42.9316010Z         packet_nus,
2025-01-07T17:55:42.9316390Z         packet_energies,
2025-01-07T17:55:42.9316590Z         r_inner,
2025-01-07T17:55:42.9316840Z         spectrum_delta_frequency,
2025-01-07T17:55:42.9317170Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:42.9317560Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:42.9317850Z         spectrum_wavelength,
2025-01-07T17:55:42.9318090Z         t_inner,
2025-01-07T17:55:42.9318320Z         time_of_simulation,
2025-01-07T17:55:42.9318530Z         time_explosion,
2025-01-07T17:55:42.9318780Z         v_inner,
2025-01-07T17:55:42.9318960Z         v_outer,
2025-01-07T17:55:42.9319190Z         velocity
2025-01-07T17:55:42.9319370Z     ):
2025-01-07T17:55:42.9319630Z         """
2025-01-07T17:55:42.9320840Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:42.9322050Z     
2025-01-07T17:55:42.9322490Z         Parameters
2025-01-07T17:55:42.9323310Z         ----------
2025-01-07T17:55:42.9323860Z         last_interaction_type : np.array
2025-01-07T17:55:42.9324440Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:42.9324860Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:42.9325140Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:42.9325510Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:42.9326230Z             absorption (interaction in)
2025-01-07T17:55:42.9326440Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:42.9326700Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:42.9326950Z             emission (interaction out)
2025-01-07T17:55:42.9327200Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:42.9327450Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:42.9327710Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:42.9328010Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:42.9328260Z         lines_df : pd.DataFrame
2025-01-07T17:55:42.9328500Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:42.9328780Z         packet_nus : astropy.Quantity
2025-01-07T17:55:42.9329080Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:42.9329330Z             unit of Hz
2025-01-07T17:55:42.9329490Z         packet_energies : astropy.Quantity
2025-01-07T17:55:42.9329720Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:42.9329990Z         r_inner : astropy.Quantity
2025-01-07T17:55:42.9330250Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:42.9330590Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:42.9330990Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:42.9331350Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:42.9331740Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:42.9331990Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:42.9332320Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:42.9333600Z         t_inner : astropy.Quantity
2025-01-07T17:55:42.9333960Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:42.9334200Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:42.9334510Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:42.9335090Z         """
2025-01-07T17:55:42.9335340Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:42.9335710Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:42.9335990Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:42.9336330Z             {
2025-01-07T17:55:42.9336500Z                 "nus": packet_nus,
2025-01-07T17:55:42.9336830Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:42.9337120Z                 "energies": packet_energies,
2025-01-07T17:55:42.9337460Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:42.9337760Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:42.9338070Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:42.9338370Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:42.9338670Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:42.9338870Z             }
2025-01-07T17:55:42.9338990Z         )
2025-01-07T17:55:42.9339100Z     
2025-01-07T17:55:42.9339250Z         # Save other properties
2025-01-07T17:55:42.9339470Z         self.lines_df = lines_df
2025-01-07T17:55:42.9339640Z         self.r_inner = r_inner
2025-01-07T17:55:42.9339870Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:42.9340170Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:42.9340500Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:42.9340780Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:42.9341000Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:42.9341190Z         )
2025-01-07T17:55:42.9341550Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:42.9341930Z         self.t_inner = t_inner
2025-01-07T17:55:42.9342170Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:42.9342440Z         self.time_explosion = time_explosion
2025-01-07T17:55:42.9342740Z         self.v_inner = v_inner
2025-01-07T17:55:42.9342950Z         self.v_outer = v_outer
2025-01-07T17:55:42.9343210Z     
2025-01-07T17:55:42.9343390Z         # First check if both options are provided
2025-01-07T17:55:42.9343750Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:42.9344070Z >           raise ValueError(
2025-01-07T17:55:42.9344390Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:42.9344760Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:42.9345090Z             )
2025-01-07T17:55:42.9345990Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:42.9346340Z 
2025-01-07T17:55:42.9346490Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:42.9346860Z ---------------------------- Captured stdout setup -----------------------------
2025-01-07T17:55:42.9349210Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-07T17:55:42.9349830Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-07T17:55:42.9350320Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:42.9350650Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-07T17:55:42.9350950Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:42.9351160Z 	
2025-01-07T17:55:42.9351370Z 	Starting iteration 1 of 3 ([1mbase.py[0m:444)
2025-01-07T17:55:42.9351650Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:42.9351850Z 	
2025-01-07T17:55:42.9352030Z 	Luminosity emitted   = 8.174e+42 erg / s
2025-01-07T17:55:42.9352230Z 	Luminosity absorbed  = 2.612e+42 erg / s
2025-01-07T17:55:42.9352600Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-07T17:55:42.9352810Z  ([1mbase.py[0m:657)
2025-01-07T17:55:42.9353030Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:42.9353250Z 	
2025-01-07T17:55:42.9353540Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-07T17:55:42.9353810Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:42.9354010Z 	
2025-01-07T17:55:42.9354190Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-07T17:55:42.9354440Z 	0         9.97e+03 K     1e+04 K   0.4   0.456
2025-01-07T17:55:42.9354630Z 	5         9.89e+03 K  1.02e+04 K 0.211     0.2
2025-01-07T17:55:42.9354870Z 	10        9.82e+03 K  1.01e+04 K 0.143   0.126
2025-01-07T17:55:42.9355060Z 	15        9.75e+03 K  9.96e+03 K 0.105  0.0921
2025-01-07T17:55:42.9355280Z  ([1mbase.py[0m:650)
2025-01-07T17:55:42.9355490Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:42.9355690Z 	
2025-01-07T17:55:42.9356270Z 	Current t_inner = 9974.969 K
2025-01-07T17:55:42.9356530Z 	Expected t_inner for next iteration = 10712.281 K
2025-01-07T17:55:42.9356820Z  ([1mbase.py[0m:652)
2025-01-07T17:55:42.9370100Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:42.9370380Z 	
2025-01-07T17:55:42.9370700Z 	Starting iteration 2 of 3 ([1mbase.py[0m:444)
2025-01-07T17:55:42.9371030Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:42.9371240Z 	
2025-01-07T17:55:42.9371360Z 	Luminosity emitted   = 1.078e+43 erg / s
2025-01-07T17:55:42.9371560Z 	Luminosity absorbed  = 3.553e+42 erg / s
2025-01-07T17:55:42.9371750Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-07T17:55:42.9371970Z  ([1mbase.py[0m:657)
2025-01-07T17:55:42.9372180Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:42.9372380Z 	
2025-01-07T17:55:42.9372880Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-07T17:55:42.9373160Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:42.9373360Z 	
2025-01-07T17:55:42.9373490Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-07T17:55:42.9373700Z 	0            1e+04 K  1.04e+04 K  0.456   0.493
2025-01-07T17:55:42.9373890Z 	5         1.02e+04 K  1.05e+04 K    0.2   0.204
2025-01-07T17:55:42.9374080Z 	10        1.01e+04 K  1.04e+04 K  0.126   0.127
2025-01-07T17:55:42.9374270Z 	15        9.96e+03 K  1.03e+04 K 0.0921  0.0914
2025-01-07T17:55:42.9374470Z  ([1mbase.py[0m:650)
2025-01-07T17:55:42.9374690Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:42.9374890Z 	
2025-01-07T17:55:42.9375010Z 	Current t_inner = 10712.281 K
2025-01-07T17:55:42.9375200Z 	Expected t_inner for next iteration = 10710.562 K
2025-01-07T17:55:42.9375430Z  ([1mbase.py[0m:652)
2025-01-07T17:55:42.9375640Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:42.9375840Z 	
2025-01-07T17:55:42.9375970Z 	Simulation finished in 2 iterations 
2025-01-07T17:55:42.9376190Z 	Simulation took 1.47 s
2025-01-07T17:55:42.9376380Z  ([1mbase.py[0m:542)
2025-01-07T17:55:42.9376590Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:42.9376790Z 	
2025-01-07T17:55:42.9376960Z 	Starting iteration 3 of 3 ([1mbase.py[0m:444)
2025-01-07T17:55:42.9377230Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:42.9377430Z 	
2025-01-07T17:55:42.9377550Z 	Luminosity emitted   = 1.104e+43 erg / s
2025-01-07T17:55:42.9377750Z 	Luminosity absorbed  = 3.299e+42 erg / s
2025-01-07T17:55:42.9377950Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-07T17:55:42.9378150Z  ([1mbase.py[0m:657)
2025-01-07T17:55:42.9378390Z ---------------------------- Captured stderr setup -----------------------------
2025-01-07T17:55:42.9378640Z 
2025-01-07T17:55:42.9378770Z Iterations:                                                                                46/? [06:52<00:00,  4.06s/it]
2025-01-07T17:55:42.9379020Z 
2025-01-07T17:55:42.9379280Z Packets:                                                                                   103999/? [00:05<00:00, 153350.22it/s]    [A
2025-01-07T17:55:42.9379790Z 
2025-01-07T17:55:42.9380070Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]              [A
2025-01-07T17:55:42.9380520Z Iterations:                                                                                47/? [06:53<00:00,  3.06s/it]
2025-01-07T17:55:42.9383290Z 
2025-01-07T17:55:42.9386330Z Packets:   ████████████████████████████████████████████████████████████████████████████████4000/4000 [00:00<00:00, 138107.95it/s][A
2025-01-07T17:55:42.9386560Z 
2025-01-07T17:55:42.9386760Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]               [A
2025-01-07T17:55:42.9387070Z Iterations:                                                                                48/? [06:54<00:00,  2.36s/it]
2025-01-07T17:55:42.9387260Z 
2025-01-07T17:55:42.9387500Z Packets:   ████████████████████████████████████████████████████████████████████████████████4000/4000 [00:00<00:00, 98096.89it/s][A
2025-01-07T17:55:42.9388220Z ------------------------------ Captured log setup ------------------------------
2025-01-07T17:55:42.9388830Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-07T17:55:42.9389470Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-07T17:55:42.9389790Z INFO     tardis.simulation.base:base.py:444 
2025-01-07T17:55:42.9390000Z 	Starting iteration 1 of 3
2025-01-07T17:55:42.9390180Z INFO     tardis.simulation.base:base.py:657 
2025-01-07T17:55:42.9390390Z 	Luminosity emitted   = 8.174e+42 erg / s
2025-01-07T17:55:42.9390850Z 	Luminosity absorbed  = 2.612e+42 erg / s
2025-01-07T17:55:42.9391050Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-07T17:55:42.9391190Z 
2025-01-07T17:55:42.9391280Z INFO     tardis.simulation.base:base.py:649 
2025-01-07T17:55:42.9391470Z 	Plasma stratification:
2025-01-07T17:55:42.9391660Z INFO     tardis.simulation.base:base.py:650 
2025-01-07T17:55:42.9391880Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-07T17:55:42.9392080Z 	0         9.97e+03 K     1e+04 K   0.4   0.456
2025-01-07T17:55:42.9392270Z 	5         9.89e+03 K  1.02e+04 K 0.211     0.2
2025-01-07T17:55:42.9392460Z 	10        9.82e+03 K  1.01e+04 K 0.143   0.126
2025-01-07T17:55:42.9392650Z 	15        9.75e+03 K  9.96e+03 K 0.105  0.0921
2025-01-07T17:55:42.9392780Z 
2025-01-07T17:55:42.9392860Z INFO     tardis.simulation.base:base.py:652 
2025-01-07T17:55:42.9393190Z 	Current t_inner = 9974.969 K
2025-01-07T17:55:42.9393400Z 	Expected t_inner for next iteration = 10712.281 K
2025-01-07T17:55:42.9393550Z 
2025-01-07T17:55:42.9393640Z INFO     tardis.simulation.base:base.py:444 
2025-01-07T17:55:42.9393850Z 	Starting iteration 2 of 3
2025-01-07T17:55:42.9394030Z INFO     tardis.simulation.base:base.py:657 
2025-01-07T17:55:42.9394250Z 	Luminosity emitted   = 1.078e+43 erg / s
2025-01-07T17:55:42.9394470Z 	Luminosity absorbed  = 3.553e+42 erg / s
2025-01-07T17:55:42.9394660Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-07T17:55:42.9394790Z 
2025-01-07T17:55:42.9394870Z INFO     tardis.simulation.base:base.py:649 
2025-01-07T17:55:42.9395070Z 	Plasma stratification:
2025-01-07T17:55:42.9395250Z INFO     tardis.simulation.base:base.py:650 
2025-01-07T17:55:42.9395470Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-07T17:55:42.9395680Z 	0            1e+04 K  1.04e+04 K  0.456   0.493
2025-01-07T17:55:42.9395870Z 	5         1.02e+04 K  1.05e+04 K    0.2   0.204
2025-01-07T17:55:42.9396060Z 	10        1.01e+04 K  1.04e+04 K  0.126   0.127
2025-01-07T17:55:42.9396250Z 	15        9.96e+03 K  1.03e+04 K 0.0921  0.0914
2025-01-07T17:55:42.9396380Z 
2025-01-07T17:55:42.9396460Z INFO     tardis.simulation.base:base.py:652 
2025-01-07T17:55:42.9396660Z 	Current t_inner = 10712.281 K
2025-01-07T17:55:42.9397030Z 	Expected t_inner for next iteration = 10710.562 K
2025-01-07T17:55:42.9398130Z 
2025-01-07T17:55:42.9398220Z INFO     tardis.simulation.base:base.py:542 
2025-01-07T17:55:42.9398430Z 	Simulation finished in 2 iterations 
2025-01-07T17:55:42.9398620Z 	Simulation took 1.47 s
2025-01-07T17:55:42.9398710Z 
2025-01-07T17:55:42.9398790Z INFO     tardis.simulation.base:base.py:444 
2025-01-07T17:55:42.9398990Z 	Starting iteration 3 of 3
2025-01-07T17:55:42.9399170Z INFO     tardis.simulation.base:base.py:657 
2025-01-07T17:55:42.9399370Z 	Luminosity emitted   = 1.104e+43 erg / s
2025-01-07T17:55:42.9399560Z 	Luminosity absorbed  = 3.299e+42 erg / s
2025-01-07T17:55:42.9399750Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-07T17:55:42.9400030Z ____ ERROR at setup of TestLIVPlotter.test_parse_species_list[_keep_colour] ____
2025-01-07T17:55:42.9400260Z 
2025-01-07T17:55:42.9400430Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:42.9400670Z 
2025-01-07T17:55:42.9400730Z     @pytest.fixture(scope="class")
2025-01-07T17:55:42.9400920Z     def plotter(simulation_simple):
2025-01-07T17:55:42.9401090Z         """
2025-01-07T17:55:42.9401280Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:42.9401510Z     
2025-01-07T17:55:42.9401620Z         Parameters:
2025-01-07T17:55:42.9401760Z         -----------
2025-01-07T17:55:42.9401930Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:42.9402120Z     
2025-01-07T17:55:42.9402230Z         Returns:
2025-01-07T17:55:42.9402360Z         --------
2025-01-07T17:55:42.9402490Z         An LIVPlotter instance.
2025-01-07T17:55:42.9402650Z         """
2025-01-07T17:55:42.9402820Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:42.9402990Z 
2025-01-07T17:55:42.9403350Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:42.9403620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:42.9403910Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:42.9404210Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:42.9404560Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:42.9404890Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:42.9405210Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:42.9405480Z     return cls(
2025-01-07T17:55:42.9405650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:42.9405810Z 
2025-01-07T17:55:42.9406140Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:42.9406520Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:42.9406840Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:42.9407180Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:42.9407550Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:42.9407860Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:42.9408150Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:42.9408440Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:42.9408710Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:42.9409000Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:42.9409250Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:42.9409410Z 
2025-01-07T17:55:42.9409460Z [29224 rows x 12 columns]
2025-01-07T17:55:42.9409700Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:42.9409970Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:42.9410650Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:42.9410920Z        0.00025518])
2025-01-07T17:55:42.9411130Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:42.9411490Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:42.9411820Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:42.9412080Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:42.9412410Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:42.9412730Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:42.9413070Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:42.9413480Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:42.9413800Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:42.9414050Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:42.9414260Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:42.9414480Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:42.9414730Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:42.9415070Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:42.9415380Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:42.9415670Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:42.9416170Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:42.9416490Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:42.9416790Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:42.9417090Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:42.9417350Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:42.9417560Z            2.000e+09] cm / s>
2025-01-07T17:55:42.9417660Z 
2025-01-07T17:55:42.9417710Z     def __init__(
2025-01-07T17:55:42.9417840Z         self,
2025-01-07T17:55:42.9417970Z         last_interaction_type,
2025-01-07T17:55:42.9418140Z         last_line_interaction_in_id,
2025-01-07T17:55:42.9418330Z         last_line_interaction_out_id,
2025-01-07T17:55:42.9418510Z         last_line_interaction_in_nu,
2025-01-07T17:55:42.9418690Z         last_interaction_in_r,
2025-01-07T17:55:42.9418840Z         lines_df,
2025-01-07T17:55:42.9418970Z         packet_nus,
2025-01-07T17:55:42.9419100Z         packet_energies,
2025-01-07T17:55:42.9419240Z         r_inner,
2025-01-07T17:55:42.9419390Z         spectrum_delta_frequency,
2025-01-07T17:55:42.9419640Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:42.9419920Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:42.9420110Z         spectrum_wavelength,
2025-01-07T17:55:42.9420260Z         t_inner,
2025-01-07T17:55:42.9420390Z         time_of_simulation,
2025-01-07T17:55:42.9420540Z         time_explosion,
2025-01-07T17:55:42.9420680Z         v_inner,
2025-01-07T17:55:42.9420810Z         v_outer,
2025-01-07T17:55:42.9420930Z         velocity
2025-01-07T17:55:42.9421040Z     ):
2025-01-07T17:55:42.9421150Z         """
2025-01-07T17:55:42.9421390Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:42.9421680Z     
2025-01-07T17:55:42.9421790Z         Parameters
2025-01-07T17:55:42.9421920Z         ----------
2025-01-07T17:55:42.9422060Z         last_interaction_type : np.array
2025-01-07T17:55:42.9422390Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:42.9422660Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:42.9422910Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:42.9423260Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:42.9423650Z             absorption (interaction in)
2025-01-07T17:55:42.9423920Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:42.9424230Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:42.9424590Z             emission (interaction out)
2025-01-07T17:55:42.9424810Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:42.9425150Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:42.9425530Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:42.9425910Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:42.9426160Z         lines_df : pd.DataFrame
2025-01-07T17:55:42.9426470Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:42.9426920Z         packet_nus : astropy.Quantity
2025-01-07T17:55:42.9427210Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:42.9427560Z             unit of Hz
2025-01-07T17:55:42.9427770Z         packet_energies : astropy.Quantity
2025-01-07T17:55:42.9428100Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:42.9428340Z         r_inner : astropy.Quantity
2025-01-07T17:55:42.9428580Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:42.9428820Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:42.9429130Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:42.9429660Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:42.9430020Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:42.9430280Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:42.9430550Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:42.9430840Z         t_inner : astropy.Quantity
2025-01-07T17:55:42.9431140Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:42.9431520Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:42.9443900Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:42.9444130Z         """
2025-01-07T17:55:42.9444340Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:42.9444630Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:42.9444850Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:42.9445030Z             {
2025-01-07T17:55:42.9445170Z                 "nus": packet_nus,
2025-01-07T17:55:42.9445850Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:42.9446110Z                 "energies": packet_energies,
2025-01-07T17:55:42.9446340Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:42.9446610Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:42.9446920Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:42.9447210Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:42.9447480Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:42.9447680Z             }
2025-01-07T17:55:42.9447800Z         )
2025-01-07T17:55:42.9447910Z     
2025-01-07T17:55:42.9448030Z         # Save other properties
2025-01-07T17:55:42.9448200Z         self.lines_df = lines_df
2025-01-07T17:55:42.9448370Z         self.r_inner = r_inner
2025-01-07T17:55:42.9448590Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:42.9449000Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:42.9449490Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:42.9449740Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:42.9449960Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:42.9450160Z         )
2025-01-07T17:55:42.9450320Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:42.9450530Z         self.t_inner = t_inner
2025-01-07T17:55:42.9450720Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:42.9450940Z         self.time_explosion = time_explosion
2025-01-07T17:55:42.9451130Z         self.v_inner = v_inner
2025-01-07T17:55:42.9451480Z         self.v_outer = v_outer
2025-01-07T17:55:42.9451630Z     
2025-01-07T17:55:42.9451780Z         # First check if both options are provided
2025-01-07T17:55:42.9452060Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:42.9452320Z >           raise ValueError(
2025-01-07T17:55:42.9452540Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:42.9452850Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:42.9453090Z             )
2025-01-07T17:55:42.9453430Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:42.9453770Z 
2025-01-07T17:55:42.9453910Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:42.9454260Z __ ERROR at setup of TestLIVPlotter.test_parse_species_list[_species_mapped] ___
2025-01-07T17:55:42.9454490Z 
2025-01-07T17:55:42.9454650Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:42.9454880Z 
2025-01-07T17:55:42.9454940Z     @pytest.fixture(scope="class")
2025-01-07T17:55:42.9455330Z     def plotter(simulation_simple):
2025-01-07T17:55:42.9455510Z         """
2025-01-07T17:55:42.9455700Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:42.9455930Z     
2025-01-07T17:55:42.9456050Z         Parameters:
2025-01-07T17:55:42.9456180Z         -----------
2025-01-07T17:55:42.9456350Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:42.9456550Z     
2025-01-07T17:55:42.9456660Z         Returns:
2025-01-07T17:55:42.9456790Z         --------
2025-01-07T17:55:42.9456930Z         An LIVPlotter instance.
2025-01-07T17:55:42.9457080Z         """
2025-01-07T17:55:42.9457260Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:42.9457430Z 
2025-01-07T17:55:42.9457530Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:42.9457790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:42.9458070Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:42.9458370Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:42.9458720Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:42.9459060Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:42.9459910Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:42.9460180Z     return cls(
2025-01-07T17:55:42.9460350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:42.9460530Z 
2025-01-07T17:55:42.9460740Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:42.9461130Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:42.9461470Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:42.9461850Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:42.9462220Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:42.9462630Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:42.9462920Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:42.9463210Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:42.9463470Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:42.9463760Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:42.9464020Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:42.9464180Z 
2025-01-07T17:55:42.9464240Z [29224 rows x 12 columns]
2025-01-07T17:55:42.9464530Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:42.9464810Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:42.9465120Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:42.9465400Z        0.00025518])
2025-01-07T17:55:42.9465620Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:42.9465980Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:42.9466300Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:42.9466560Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:42.9466890Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:42.9467200Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:42.9467530Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:42.9467930Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:42.9468470Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:42.9468700Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:42.9468910Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:42.9469120Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:42.9469370Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:42.9469710Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:42.9470010Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:42.9470290Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:42.9470620Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:42.9470920Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:42.9471210Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:42.9471520Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:42.9471780Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:42.9471980Z            2.000e+09] cm / s>
2025-01-07T17:55:42.9472080Z 
2025-01-07T17:55:42.9472130Z     def __init__(
2025-01-07T17:55:42.9472260Z         self,
2025-01-07T17:55:42.9472390Z         last_interaction_type,
2025-01-07T17:55:42.9472560Z         last_line_interaction_in_id,
2025-01-07T17:55:42.9472740Z         last_line_interaction_out_id,
2025-01-07T17:55:42.9472930Z         last_line_interaction_in_nu,
2025-01-07T17:55:42.9473100Z         last_interaction_in_r,
2025-01-07T17:55:42.9473260Z         lines_df,
2025-01-07T17:55:42.9473390Z         packet_nus,
2025-01-07T17:55:42.9473520Z         packet_energies,
2025-01-07T17:55:42.9473670Z         r_inner,
2025-01-07T17:55:42.9473810Z         spectrum_delta_frequency,
2025-01-07T17:55:42.9474070Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:42.9474500Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:42.9474690Z         spectrum_wavelength,
2025-01-07T17:55:42.9474840Z         t_inner,
2025-01-07T17:55:42.9475100Z         time_of_simulation,
2025-01-07T17:55:42.9475260Z         time_explosion,
2025-01-07T17:55:42.9475400Z         v_inner,
2025-01-07T17:55:42.9475540Z         v_outer,
2025-01-07T17:55:42.9475670Z         velocity
2025-01-07T17:55:42.9475790Z     ):
2025-01-07T17:55:42.9475900Z         """
2025-01-07T17:55:42.9476140Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:42.9476430Z     
2025-01-07T17:55:42.9476540Z         Parameters
2025-01-07T17:55:42.9476660Z         ----------
2025-01-07T17:55:42.9476810Z         last_interaction_type : np.array
2025-01-07T17:55:42.9477080Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:42.9477360Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:42.9477590Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:42.9477840Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:42.9478090Z             absorption (interaction in)
2025-01-07T17:55:42.9478290Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:42.9478610Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:42.9478850Z             emission (interaction out)
2025-01-07T17:55:42.9479050Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:42.9479290Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:42.9479550Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:42.9479800Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:42.9480040Z         lines_df : pd.DataFrame
2025-01-07T17:55:42.9480760Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:42.9481060Z         packet_nus : astropy.Quantity
2025-01-07T17:55:42.9481330Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:42.9481570Z             unit of Hz
2025-01-07T17:55:42.9481730Z         packet_energies : astropy.Quantity
2025-01-07T17:55:42.9481960Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:42.9482190Z         r_inner : astropy.Quantity
2025-01-07T17:55:42.9482400Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:42.9482630Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:42.9482900Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:42.9483160Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:42.9483430Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:42.9483860Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:42.9484130Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:42.9484380Z         t_inner : astropy.Quantity
2025-01-07T17:55:42.9484600Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:42.9484830Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:42.9485060Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:42.9485260Z         """
2025-01-07T17:55:42.9485460Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:42.9485750Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:42.9485970Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:42.9486570Z             {
2025-01-07T17:55:42.9486720Z                 "nus": packet_nus,
2025-01-07T17:55:42.9486970Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:42.9487210Z                 "energies": packet_energies,
2025-01-07T17:55:42.9487440Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:42.9487730Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:42.9488160Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:42.9488480Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:42.9488760Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:42.9488990Z             }
2025-01-07T17:55:42.9489110Z         )
2025-01-07T17:55:42.9489230Z     
2025-01-07T17:55:42.9489350Z         # Save other properties
2025-01-07T17:55:42.9489540Z         self.lines_df = lines_df
2025-01-07T17:55:42.9489720Z         self.r_inner = r_inner
2025-01-07T17:55:42.9489940Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:42.9490230Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:42.9490510Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:42.9490780Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:42.9491030Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:42.9491250Z         )
2025-01-07T17:55:42.9491430Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:42.9491660Z         self.t_inner = t_inner
2025-01-07T17:55:42.9491860Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:42.9492070Z         self.time_explosion = time_explosion
2025-01-07T17:55:42.9492300Z         self.v_inner = v_inner
2025-01-07T17:55:42.9492510Z         self.v_outer = v_outer
2025-01-07T17:55:42.9492660Z     
2025-01-07T17:55:42.9492800Z         # First check if both options are provided
2025-01-07T17:55:42.9493130Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:42.9493400Z >           raise ValueError(
2025-01-07T17:55:42.9493880Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:42.9494210Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:42.9494510Z             )
2025-01-07T17:55:42.9494900Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:42.9495260Z 
2025-01-07T17:55:42.9495490Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:42.9496010Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] _
2025-01-07T17:55:42.9496310Z 
2025-01-07T17:55:42.9496510Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:42.9496800Z 
2025-01-07T17:55:42.9496890Z     @pytest.fixture(scope="class")
2025-01-07T17:55:42.9497150Z     def plotter(simulation_simple):
2025-01-07T17:55:42.9497430Z         """
2025-01-07T17:55:42.9497780Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:42.9498040Z     
2025-01-07T17:55:42.9498260Z         Parameters:
2025-01-07T17:55:42.9498430Z         -----------
2025-01-07T17:55:42.9498720Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:42.9498960Z     
2025-01-07T17:55:42.9499180Z         Returns:
2025-01-07T17:55:42.9499330Z         --------
2025-01-07T17:55:42.9499500Z         An LIVPlotter instance.
2025-01-07T17:55:42.9499720Z         """
2025-01-07T17:55:42.9499910Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:42.9500080Z 
2025-01-07T17:55:42.9500250Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:42.9500900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:42.9501210Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:42.9501610Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:42.9502020Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:42.9518940Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:42.9519690Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:42.9519980Z     return cls(
2025-01-07T17:55:42.9520160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:42.9520350Z 
2025-01-07T17:55:42.9520570Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:42.9521000Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:42.9521320Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:42.9521700Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:42.9522110Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:42.9522430Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:42.9522720Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:42.9523060Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:42.9524050Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:42.9524800Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:42.9525070Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:42.9525250Z 
2025-01-07T17:55:42.9525330Z [29224 rows x 12 columns]
2025-01-07T17:55:42.9525570Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:42.9525880Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:42.9526210Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:42.9526490Z        0.00025518])
2025-01-07T17:55:42.9527060Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:42.9527430Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:42.9527770Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:42.9528500Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:42.9528850Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:42.9529170Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:42.9529520Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:42.9529930Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:42.9530240Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:42.9530460Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:42.9530680Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:42.9530900Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:42.9531170Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:42.9531510Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:42.9712940Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:42.9713270Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:42.9713600Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:42.9713920Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:42.9714210Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:42.9714520Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:42.9714810Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:42.9715020Z            2.000e+09] cm / s>
2025-01-07T17:55:42.9715460Z 
2025-01-07T17:55:42.9715510Z     def __init__(
2025-01-07T17:55:42.9715640Z         self,
2025-01-07T17:55:42.9715770Z         last_interaction_type,
2025-01-07T17:55:42.9715940Z         last_line_interaction_in_id,
2025-01-07T17:55:42.9716140Z         last_line_interaction_out_id,
2025-01-07T17:55:42.9716320Z         last_line_interaction_in_nu,
2025-01-07T17:55:42.9716500Z         last_interaction_in_r,
2025-01-07T17:55:42.9716660Z         lines_df,
2025-01-07T17:55:42.9716800Z         packet_nus,
2025-01-07T17:55:42.9716930Z         packet_energies,
2025-01-07T17:55:42.9717090Z         r_inner,
2025-01-07T17:55:42.9717230Z         spectrum_delta_frequency,
2025-01-07T17:55:42.9717480Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:42.9717760Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:42.9717960Z         spectrum_wavelength,
2025-01-07T17:55:42.9718120Z         t_inner,
2025-01-07T17:55:42.9718250Z         time_of_simulation,
2025-01-07T17:55:42.9718410Z         time_explosion,
2025-01-07T17:55:42.9718560Z         v_inner,
2025-01-07T17:55:42.9718680Z         v_outer,
2025-01-07T17:55:42.9718800Z         velocity
2025-01-07T17:55:42.9718920Z     ):
2025-01-07T17:55:42.9719030Z         """
2025-01-07T17:55:42.9719280Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:42.9719570Z     
2025-01-07T17:55:42.9719690Z         Parameters
2025-01-07T17:55:42.9719820Z         ----------
2025-01-07T17:55:42.9719960Z         last_interaction_type : np.array
2025-01-07T17:55:42.9720210Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:42.9720490Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:42.9720710Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:42.9721270Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:42.9721540Z             absorption (interaction in)
2025-01-07T17:55:42.9721740Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:42.9722000Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:42.9722240Z             emission (interaction out)
2025-01-07T17:55:42.9722440Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:42.9722690Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:42.9722940Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:42.9723190Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:42.9723430Z         lines_df : pd.DataFrame
2025-01-07T17:55:42.9723670Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:42.9723920Z         packet_nus : astropy.Quantity
2025-01-07T17:55:42.9724410Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:42.9724660Z             unit of Hz
2025-01-07T17:55:42.9724820Z         packet_energies : astropy.Quantity
2025-01-07T17:55:42.9725060Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:42.9725290Z         r_inner : astropy.Quantity
2025-01-07T17:55:42.9725490Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:42.9725720Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:42.9725970Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:42.9726210Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:42.9726460Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:42.9726700Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:42.9726940Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:42.9727170Z         t_inner : astropy.Quantity
2025-01-07T17:55:42.9727380Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:42.9727620Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:42.9728020Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:42.9728210Z         """
2025-01-07T17:55:42.9728420Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:42.9728710Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:42.9728920Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:42.9729100Z             {
2025-01-07T17:55:42.9729220Z                 "nus": packet_nus,
2025-01-07T17:55:42.9729440Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:42.9729670Z                 "energies": packet_energies,
2025-01-07T17:55:42.9729900Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:42.9730180Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:42.9730490Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:42.9730800Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:42.9731070Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:42.9731270Z             }
2025-01-07T17:55:42.9731390Z         )
2025-01-07T17:55:42.9731500Z     
2025-01-07T17:55:42.9731620Z         # Save other properties
2025-01-07T17:55:42.9731780Z         self.lines_df = lines_df
2025-01-07T17:55:42.9731960Z         self.r_inner = r_inner
2025-01-07T17:55:42.9732180Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:42.9732460Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:42.9732740Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:42.9732990Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:42.9733290Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:42.9733480Z         )
2025-01-07T17:55:42.9733650Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:42.9733860Z         self.t_inner = t_inner
2025-01-07T17:55:42.9734050Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:42.9734280Z         self.time_explosion = time_explosion
2025-01-07T17:55:42.9734470Z         self.v_inner = v_inner
2025-01-07T17:55:42.9735020Z         self.v_outer = v_outer
2025-01-07T17:55:42.9735170Z     
2025-01-07T17:55:42.9735310Z         # First check if both options are provided
2025-01-07T17:55:42.9735600Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:42.9735870Z >           raise ValueError(
2025-01-07T17:55:42.9736100Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:42.9736400Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:42.9736930Z             )
2025-01-07T17:55:42.9737400Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:42.9737770Z 
2025-01-07T17:55:42.9737910Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:42.9738340Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_colors] _
2025-01-07T17:55:42.9738630Z 
2025-01-07T17:55:42.9738800Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:42.9739030Z 
2025-01-07T17:55:42.9739110Z     @pytest.fixture(scope="class")
2025-01-07T17:55:42.9739310Z     def plotter(simulation_simple):
2025-01-07T17:55:42.9739490Z         """
2025-01-07T17:55:42.9739690Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:42.9739920Z     
2025-01-07T17:55:42.9740040Z         Parameters:
2025-01-07T17:55:42.9740170Z         -----------
2025-01-07T17:55:42.9740360Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:42.9740560Z     
2025-01-07T17:55:42.9740670Z         Returns:
2025-01-07T17:55:42.9741110Z         --------
2025-01-07T17:55:42.9741260Z         An LIVPlotter instance.
2025-01-07T17:55:42.9741410Z         """
2025-01-07T17:55:42.9741590Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:42.9741760Z 
2025-01-07T17:55:42.9741870Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:42.9742150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:42.9742450Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:42.9742770Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:42.9743130Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:42.9743490Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:42.9743840Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:42.9744130Z     return cls(
2025-01-07T17:55:42.9744310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:42.9744490Z 
2025-01-07T17:55:42.9744710Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:42.9745110Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:42.9745440Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:42.9745800Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:42.9746180Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:42.9746490Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:42.9746790Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:42.9747210Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:42.9747510Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:42.9747810Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:42.9748230Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:42.9748400Z 
2025-01-07T17:55:42.9748450Z [29224 rows x 12 columns]
2025-01-07T17:55:42.9748700Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:42.9749020Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:42.9749330Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:42.9749600Z        0.00025518])
2025-01-07T17:55:42.9749820Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:42.9750180Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:42.9776080Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:42.9776500Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:42.9776890Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:42.9777300Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:42.9778110Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:42.9778530Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:42.9779120Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:42.9779340Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:42.9779550Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:42.9779760Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:42.9780030Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:42.9780370Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:42.9781050Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:42.9781340Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:42.9781660Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:42.9782030Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:42.9782350Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:42.9782680Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:42.9782950Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:42.9783400Z            2.000e+09] cm / s>
2025-01-07T17:55:42.9783510Z 
2025-01-07T17:55:42.9783570Z     def __init__(
2025-01-07T17:55:42.9783710Z         self,
2025-01-07T17:55:42.9783840Z         last_interaction_type,
2025-01-07T17:55:42.9784020Z         last_line_interaction_in_id,
2025-01-07T17:55:42.9784230Z         last_line_interaction_out_id,
2025-01-07T17:55:42.9784430Z         last_line_interaction_in_nu,
2025-01-07T17:55:42.9784610Z         last_interaction_in_r,
2025-01-07T17:55:42.9784770Z         lines_df,
2025-01-07T17:55:42.9784910Z         packet_nus,
2025-01-07T17:55:42.9785040Z         packet_energies,
2025-01-07T17:55:42.9785190Z         r_inner,
2025-01-07T17:55:42.9785340Z         spectrum_delta_frequency,
2025-01-07T17:55:42.9785600Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:42.9785880Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:42.9786080Z         spectrum_wavelength,
2025-01-07T17:55:42.9786240Z         t_inner,
2025-01-07T17:55:42.9786780Z         time_of_simulation,
2025-01-07T17:55:42.9787100Z         time_explosion,
2025-01-07T17:55:42.9787250Z         v_inner,
2025-01-07T17:55:42.9787390Z         v_outer,
2025-01-07T17:55:42.9787520Z         velocity
2025-01-07T17:55:42.9787640Z     ):
2025-01-07T17:55:42.9787750Z         """
2025-01-07T17:55:42.9788020Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:42.9788520Z     
2025-01-07T17:55:42.9788640Z         Parameters
2025-01-07T17:55:42.9788770Z         ----------
2025-01-07T17:55:42.9788920Z         last_interaction_type : np.array
2025-01-07T17:55:42.9789170Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:42.9789460Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:42.9789690Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:42.9789950Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:42.9790320Z             absorption (interaction in)
2025-01-07T17:55:42.9790540Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:42.9790810Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:42.9791060Z             emission (interaction out)
2025-01-07T17:55:42.9791270Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:42.9791520Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:42.9791780Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:42.9792040Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:42.9792290Z         lines_df : pd.DataFrame
2025-01-07T17:55:42.9792530Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:42.9792790Z         packet_nus : astropy.Quantity
2025-01-07T17:55:42.9793040Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:42.9793330Z             unit of Hz
2025-01-07T17:55:42.9793510Z         packet_energies : astropy.Quantity
2025-01-07T17:55:42.9793760Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:42.9794020Z         r_inner : astropy.Quantity
2025-01-07T17:55:42.9794360Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:42.9795000Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:42.9795280Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:42.9795540Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:42.9795790Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:42.9796030Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:42.9796290Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:42.9796530Z         t_inner : astropy.Quantity
2025-01-07T17:55:42.9796750Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:42.9796990Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:42.9797220Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:42.9797430Z         """
2025-01-07T17:55:42.9797650Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:42.9797950Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:42.9798200Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:42.9798390Z             {
2025-01-07T17:55:42.9798520Z                 "nus": packet_nus,
2025-01-07T17:55:42.9798750Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:42.9799020Z                 "energies": packet_energies,
2025-01-07T17:55:42.9799280Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:42.9799570Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:42.9799890Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:42.9800340Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:42.9800640Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:42.9800850Z             }
2025-01-07T17:55:42.9800980Z         )
2025-01-07T17:55:42.9801100Z     
2025-01-07T17:55:42.9801220Z         # Save other properties
2025-01-07T17:55:42.9801880Z         self.lines_df = lines_df
2025-01-07T17:55:42.9802600Z         self.r_inner = r_inner
2025-01-07T17:55:42.9802860Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:42.9803150Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:42.9803440Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:42.9803710Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:42.9803940Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:42.9804140Z         )
2025-01-07T17:55:42.9804300Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:42.9804530Z         self.t_inner = t_inner
2025-01-07T17:55:42.9804730Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:42.9804950Z         self.time_explosion = time_explosion
2025-01-07T17:55:42.9805180Z         self.v_inner = v_inner
2025-01-07T17:55:42.9805350Z         self.v_outer = v_outer
2025-01-07T17:55:42.9805500Z     
2025-01-07T17:55:42.9805660Z         # First check if both options are provided
2025-01-07T17:55:42.9805950Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:42.9806230Z >           raise ValueError(
2025-01-07T17:55:42.9806460Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:42.9806780Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:42.9807580Z             )
2025-01-07T17:55:42.9807960Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:42.9808310Z 
2025-01-07T17:55:42.9808460Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:42.9808890Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-new_bin_edges] _
2025-01-07T17:55:42.9809330Z 
2025-01-07T17:55:42.9809500Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:42.9809740Z 
2025-01-07T17:55:42.9809800Z     @pytest.fixture(scope="class")
2025-01-07T17:55:42.9810000Z     def plotter(simulation_simple):
2025-01-07T17:55:42.9810180Z         """
2025-01-07T17:55:42.9810380Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:42.9810610Z     
2025-01-07T17:55:42.9810730Z         Parameters:
2025-01-07T17:55:42.9810870Z         -----------
2025-01-07T17:55:42.9811060Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:42.9811270Z     
2025-01-07T17:55:42.9811390Z         Returns:
2025-01-07T17:55:42.9811520Z         --------
2025-01-07T17:55:42.9811670Z         An LIVPlotter instance.
2025-01-07T17:55:42.9811830Z         """
2025-01-07T17:55:42.9812000Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:42.9812180Z 
2025-01-07T17:55:42.9812300Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:42.9812560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:42.9813730Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:42.9814110Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:42.9814490Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:42.9814860Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:42.9815450Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:42.9816430Z     return cls(
2025-01-07T17:55:42.9817880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:42.9818170Z 
2025-01-07T17:55:42.9818400Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:42.9818850Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:42.9819200Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:42.9819580Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:42.9820490Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:42.9822050Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:42.9823040Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:42.9823390Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:42.9823690Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:42.9824010Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:42.9824270Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:42.9824840Z 
2025-01-07T17:55:42.9825050Z [29224 rows x 12 columns]
2025-01-07T17:55:42.9826410Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:42.9827400Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:42.9827710Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:42.9827990Z        0.00025518])
2025-01-07T17:55:42.9828200Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:42.9828540Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:42.9828880Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:42.9829160Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:42.9829530Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:42.9830080Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:42.9830440Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:42.9830860Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:42.9831190Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:42.9831430Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:42.9831650Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:42.9832820Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:42.9834020Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:42.9835190Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:42.9835960Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:42.9836270Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:42.9836620Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:42.9836950Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:42.9837260Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:42.9837570Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:42.9837830Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:42.9838050Z            2.000e+09] cm / s>
2025-01-07T17:55:42.9838300Z 
2025-01-07T17:55:42.9838350Z     def __init__(
2025-01-07T17:55:42.9838490Z         self,
2025-01-07T17:55:42.9838630Z         last_interaction_type,
2025-01-07T17:55:42.9839030Z         last_line_interaction_in_id,
2025-01-07T17:55:42.9839240Z         last_line_interaction_out_id,
2025-01-07T17:55:42.9839440Z         last_line_interaction_in_nu,
2025-01-07T17:55:42.9841030Z         last_interaction_in_r,
2025-01-07T17:55:42.9841540Z         lines_df,
2025-01-07T17:55:42.9841940Z         packet_nus,
2025-01-07T17:55:42.9842360Z         packet_energies,
2025-01-07T17:55:42.9842800Z         r_inner,
2025-01-07T17:55:42.9843460Z         spectrum_delta_frequency,
2025-01-07T17:55:42.9844380Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:42.9844690Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:42.9844890Z         spectrum_wavelength,
2025-01-07T17:55:42.9845070Z         t_inner,
2025-01-07T17:55:42.9845210Z         time_of_simulation,
2025-01-07T17:55:42.9845390Z         time_explosion,
2025-01-07T17:55:42.9845540Z         v_inner,
2025-01-07T17:55:42.9846360Z         v_outer,
2025-01-07T17:55:42.9846860Z         velocity
2025-01-07T17:55:42.9847280Z     ):
2025-01-07T17:55:42.9847640Z         """
2025-01-07T17:55:42.9848430Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:42.9848800Z     
2025-01-07T17:55:42.9848920Z         Parameters
2025-01-07T17:55:42.9849060Z         ----------
2025-01-07T17:55:42.9849210Z         last_interaction_type : np.array
2025-01-07T17:55:42.9849500Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:42.9849780Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:42.9850450Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:42.9851010Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:42.9851280Z             absorption (interaction in)
2025-01-07T17:55:42.9851510Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:42.9852480Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:42.9853300Z             emission (interaction out)
2025-01-07T17:55:42.9854250Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:42.9854570Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:42.9855210Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:42.9855460Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:42.9855720Z         lines_df : pd.DataFrame
2025-01-07T17:55:42.9855970Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:42.9856470Z         packet_nus : astropy.Quantity
2025-01-07T17:55:42.9857350Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:42.9857720Z             unit of Hz
2025-01-07T17:55:42.9857900Z         packet_energies : astropy.Quantity
2025-01-07T17:55:42.9858350Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:42.9858630Z         r_inner : astropy.Quantity
2025-01-07T17:55:42.9859730Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:42.9860020Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:42.9860310Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:42.9860580Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:42.9860930Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:42.9861670Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:42.9861970Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:42.9862800Z         t_inner : astropy.Quantity
2025-01-07T17:55:42.9863150Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:42.9863930Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:42.9864350Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:42.9864570Z         """
2025-01-07T17:55:42.9866150Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:42.9866510Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:42.9866770Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:42.9866970Z             {
2025-01-07T17:55:42.9867260Z                 "nus": packet_nus,
2025-01-07T17:55:42.9868670Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:42.9870070Z                 "energies": packet_energies,
2025-01-07T17:55:42.9870470Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:42.9870780Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:42.9880430Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:42.9880760Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:42.9881050Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:42.9881260Z             }
2025-01-07T17:55:42.9881400Z         )
2025-01-07T17:55:42.9881700Z     
2025-01-07T17:55:42.9881840Z         # Save other properties
2025-01-07T17:55:42.9882010Z         self.lines_df = lines_df
2025-01-07T17:55:42.9882200Z         self.r_inner = r_inner
2025-01-07T17:55:42.9882430Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:42.9882720Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:42.9883010Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:42.9883270Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:42.9883500Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:42.9883700Z         )
2025-01-07T17:55:42.9883860Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:42.9884080Z         self.t_inner = t_inner
2025-01-07T17:55:42.9884290Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:42.9884530Z         self.time_explosion = time_explosion
2025-01-07T17:55:42.9884740Z         self.v_inner = v_inner
2025-01-07T17:55:42.9884920Z         self.v_outer = v_outer
2025-01-07T17:55:42.9885080Z     
2025-01-07T17:55:42.9885460Z         # First check if both options are provided
2025-01-07T17:55:42.9885750Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:42.9886020Z >           raise ValueError(
2025-01-07T17:55:42.9886250Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:42.9887160Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:42.9887410Z             )
2025-01-07T17:55:42.9887780Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:42.9888150Z 
2025-01-07T17:55:42.9888300Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:42.9888760Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] _
2025-01-07T17:55:42.9889050Z 
2025-01-07T17:55:42.9889220Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:42.9889470Z 
2025-01-07T17:55:42.9889550Z     @pytest.fixture(scope="class")
2025-01-07T17:55:42.9889750Z     def plotter(simulation_simple):
2025-01-07T17:55:42.9889920Z         """
2025-01-07T17:55:42.9890120Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:42.9890350Z     
2025-01-07T17:55:42.9890470Z         Parameters:
2025-01-07T17:55:42.9890610Z         -----------
2025-01-07T17:55:42.9890780Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:42.9890990Z     
2025-01-07T17:55:42.9891200Z         Returns:
2025-01-07T17:55:42.9891340Z         --------
2025-01-07T17:55:42.9891590Z         An LIVPlotter instance.
2025-01-07T17:55:42.9891760Z         """
2025-01-07T17:55:42.9891930Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:42.9892410Z 
2025-01-07T17:55:42.9892550Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:42.9892820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:42.9893110Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:42.9893410Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:42.9893870Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:42.9894220Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:42.9894540Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:42.9894810Z     return cls(
2025-01-07T17:55:42.9894990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:42.9895150Z 
2025-01-07T17:55:42.9895370Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:42.9895760Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:42.9896090Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:42.9896440Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:42.9896810Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:42.9897130Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:42.9897420Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:42.9897710Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:42.9897990Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:42.9898290Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:42.9898530Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:42.9898700Z 
2025-01-07T17:55:42.9898750Z [29224 rows x 12 columns]
2025-01-07T17:55:42.9898990Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:42.9899670Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:42.9899990Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:42.9900260Z        0.00025518])
2025-01-07T17:55:42.9900470Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:42.9900830Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:42.9901150Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:42.9901410Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:42.9901750Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:42.9902070Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:42.9902410Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:42.9902810Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:42.9903250Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:42.9903480Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:42.9903690Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:42.9903910Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:42.9904170Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:42.9904510Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:42.9904820Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:42.9905120Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:42.9905590Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:42.9905910Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:42.9906210Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:42.9906510Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:42.9906770Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:42.9906970Z            2.000e+09] cm / s>
2025-01-07T17:55:42.9907080Z 
2025-01-07T17:55:42.9907130Z     def __init__(
2025-01-07T17:55:42.9907260Z         self,
2025-01-07T17:55:42.9907390Z         last_interaction_type,
2025-01-07T17:55:42.9907660Z         last_line_interaction_in_id,
2025-01-07T17:55:42.9907850Z         last_line_interaction_out_id,
2025-01-07T17:55:42.9908040Z         last_line_interaction_in_nu,
2025-01-07T17:55:42.9908230Z         last_interaction_in_r,
2025-01-07T17:55:42.9908390Z         lines_df,
2025-01-07T17:55:42.9908520Z         packet_nus,
2025-01-07T17:55:42.9908660Z         packet_energies,
2025-01-07T17:55:42.9908810Z         r_inner,
2025-01-07T17:55:42.9908940Z         spectrum_delta_frequency,
2025-01-07T17:55:42.9909210Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:42.9909490Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:42.9909680Z         spectrum_wavelength,
2025-01-07T17:55:42.9909840Z         t_inner,
2025-01-07T17:55:42.9909980Z         time_of_simulation,
2025-01-07T17:55:42.9910130Z         time_explosion,
2025-01-07T17:55:42.9910270Z         v_inner,
2025-01-07T17:55:42.9910400Z         v_outer,
2025-01-07T17:55:42.9910520Z         velocity
2025-01-07T17:55:42.9910640Z     ):
2025-01-07T17:55:42.9910750Z         """
2025-01-07T17:55:42.9911080Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:42.9911410Z     
2025-01-07T17:55:42.9911520Z         Parameters
2025-01-07T17:55:42.9911650Z         ----------
2025-01-07T17:55:42.9911910Z         last_interaction_type : np.array
2025-01-07T17:55:42.9912170Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:42.9912450Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:42.9912670Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:42.9912930Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:42.9913180Z             absorption (interaction in)
2025-01-07T17:55:42.9913380Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:42.9913640Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:42.9913890Z             emission (interaction out)
2025-01-07T17:55:42.9914090Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:42.9914340Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:42.9914600Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:42.9914860Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:42.9915190Z         lines_df : pd.DataFrame
2025-01-07T17:55:42.9915430Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:42.9915700Z         packet_nus : astropy.Quantity
2025-01-07T17:55:42.9915950Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:42.9916190Z             unit of Hz
2025-01-07T17:55:42.9916350Z         packet_energies : astropy.Quantity
2025-01-07T17:55:42.9916580Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:42.9916810Z         r_inner : astropy.Quantity
2025-01-07T17:55:42.9917020Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:42.9917250Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:42.9917560Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:42.9917810Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:42.9918050Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:42.9918290Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:42.9918530Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:42.9918770Z         t_inner : astropy.Quantity
2025-01-07T17:55:42.9918980Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:42.9919220Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:42.9919450Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:42.9919650Z         """
2025-01-07T17:55:42.9919860Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:42.9920150Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:42.9920360Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:42.9920540Z             {
2025-01-07T17:55:42.9920670Z                 "nus": packet_nus,
2025-01-07T17:55:42.9920880Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:42.9921120Z                 "energies": packet_energies,
2025-01-07T17:55:42.9921340Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:42.9921620Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:42.9921920Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:42.9922220Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:42.9922490Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:42.9922690Z             }
2025-01-07T17:55:42.9922810Z         )
2025-01-07T17:55:42.9922920Z     
2025-01-07T17:55:42.9923040Z         # Save other properties
2025-01-07T17:55:42.9923210Z         self.lines_df = lines_df
2025-01-07T17:55:42.9923380Z         self.r_inner = r_inner
2025-01-07T17:55:42.9923600Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:42.9923940Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:42.9924220Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:42.9924470Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:42.9924690Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:42.9924870Z         )
2025-01-07T17:55:42.9925030Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:42.9925240Z         self.t_inner = t_inner
2025-01-07T17:55:42.9925430Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:42.9925650Z         self.time_explosion = time_explosion
2025-01-07T17:55:42.9925840Z         self.v_inner = v_inner
2025-01-07T17:55:42.9926010Z         self.v_outer = v_outer
2025-01-07T17:55:42.9926160Z     
2025-01-07T17:55:42.9926310Z         # First check if both options are provided
2025-01-07T17:55:42.9926580Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:42.9926850Z >           raise ValueError(
2025-01-07T17:55:42.9926960Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:42.9927090Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:42.9927140Z             )
2025-01-07T17:55:42.9927420Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:42.9927420Z 
2025-01-07T17:55:42.9927560Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:42.9927770Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_colors] _
2025-01-07T17:55:42.9927770Z 
2025-01-07T17:55:42.9927940Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:42.9928010Z 
2025-01-07T17:55:42.9928080Z     @pytest.fixture(scope="class")
2025-01-07T17:55:42.9928140Z     def plotter(simulation_simple):
2025-01-07T17:55:42.9928190Z         """
2025-01-07T17:55:42.9928310Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:42.9928360Z     
2025-01-07T17:55:42.9928410Z         Parameters:
2025-01-07T17:55:42.9928460Z         -----------
2025-01-07T17:55:42.9928550Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:42.9928590Z     
2025-01-07T17:55:42.9928640Z         Returns:
2025-01-07T17:55:42.9928680Z         --------
2025-01-07T17:55:42.9928740Z         An LIVPlotter instance.
2025-01-07T17:55:42.9928790Z         """
2025-01-07T17:55:42.9928890Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:42.9928890Z 
2025-01-07T17:55:42.9929000Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:42.9929090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:42.9929210Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:42.9929330Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:42.9929500Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:42.9929600Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:42.9929750Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:42.9929800Z     return cls(
2025-01-07T17:55:42.9929890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:42.9929890Z 
2025-01-07T17:55:42.9930100Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:42.9930210Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:42.9930360Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:42.9930500Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:42.9930650Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:42.9930780Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:42.9930930Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:42.9931010Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:42.9931130Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:42.9931230Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:42.9931320Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:42.9931320Z 
2025-01-07T17:55:42.9931380Z [29224 rows x 12 columns]
2025-01-07T17:55:42.9931510Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:42.9931600Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:42.9931750Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:42.9931800Z        0.00025518])
2025-01-07T17:55:42.9931930Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:42.9932090Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:42.9932180Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:42.9932280Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:42.9932440Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:42.9932530Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:42.9932710Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:42.9933080Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:42.9933190Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:42.9933260Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:42.9933350Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:42.9933420Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:42.9933540Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:42.9933690Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:42.9933790Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:42.9933910Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:42.9934040Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:42.9934140Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:42.9934270Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:42.9934370Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:42.9934460Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:42.9934510Z            2.000e+09] cm / s>
2025-01-07T17:55:42.9934520Z 
2025-01-07T17:55:42.9934570Z     def __init__(
2025-01-07T17:55:42.9934610Z         self,
2025-01-07T17:55:42.9934670Z         last_interaction_type,
2025-01-07T17:55:42.9934730Z         last_line_interaction_in_id,
2025-01-07T17:55:42.9934800Z         last_line_interaction_out_id,
2025-01-07T17:55:42.9934850Z         last_line_interaction_in_nu,
2025-01-07T17:55:42.9934910Z         last_interaction_in_r,
2025-01-07T17:55:42.9934960Z         lines_df,
2025-01-07T17:55:42.9935010Z         packet_nus,
2025-01-07T17:55:42.9935070Z         packet_energies,
2025-01-07T17:55:42.9935110Z         r_inner,
2025-01-07T17:55:42.9935180Z         spectrum_delta_frequency,
2025-01-07T17:55:42.9935320Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:42.9935620Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:42.9935680Z         spectrum_wavelength,
2025-01-07T17:55:42.9935730Z         t_inner,
2025-01-07T17:55:42.9935780Z         time_of_simulation,
2025-01-07T17:55:42.9935840Z         time_explosion,
2025-01-07T17:55:42.9935880Z         v_inner,
2025-01-07T17:55:42.9935930Z         v_outer,
2025-01-07T17:55:42.9935970Z         velocity
2025-01-07T17:55:42.9936020Z     ):
2025-01-07T17:55:42.9936060Z         """
2025-01-07T17:55:42.9936240Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:42.9936280Z     
2025-01-07T17:55:42.9936330Z         Parameters
2025-01-07T17:55:42.9936380Z         ----------
2025-01-07T17:55:42.9936450Z         last_interaction_type : np.array
2025-01-07T17:55:42.9936580Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:42.9936670Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:42.9936750Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:42.9936860Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:42.9936920Z             absorption (interaction in)
2025-01-07T17:55:42.9936990Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:42.9937110Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:42.9937170Z             emission (interaction out)
2025-01-07T17:55:42.9937240Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:42.9937350Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:42.9937420Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:42.9937540Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:42.9937640Z         lines_df : pd.DataFrame
2025-01-07T17:55:42.9937770Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:42.9937840Z         packet_nus : astropy.Quantity
2025-01-07T17:55:42.9937960Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:42.9938010Z             unit of Hz
2025-01-07T17:55:42.9938090Z         packet_energies : astropy.Quantity
2025-01-07T17:55:42.9938190Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:42.9938250Z         r_inner : astropy.Quantity
2025-01-07T17:55:42.9938330Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:42.9938420Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:42.9938510Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:42.9938600Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:42.9938690Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:42.9938760Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:42.9938870Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:42.9938930Z         t_inner : astropy.Quantity
2025-01-07T17:55:42.9939030Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:42.9939220Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:42.9939310Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:42.9971460Z         """
2025-01-07T17:55:42.9971820Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:42.9971910Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:42.9971970Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:42.9972020Z             {
2025-01-07T17:55:42.9972080Z                 "nus": packet_nus,
2025-01-07T17:55:42.9972180Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:42.9972260Z                 "energies": packet_energies,
2025-01-07T17:55:42.9972360Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:42.9972880Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:42.9972990Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:42.9973100Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:42.9973190Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:42.9973230Z             }
2025-01-07T17:55:42.9973280Z         )
2025-01-07T17:55:42.9973320Z     
2025-01-07T17:55:42.9973380Z         # Save other properties
2025-01-07T17:55:42.9973440Z         self.lines_df = lines_df
2025-01-07T17:55:42.9973490Z         self.r_inner = r_inner
2025-01-07T17:55:42.9973600Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:42.9973710Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:42.9973810Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:42.9973890Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:42.9973960Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:42.9974010Z         )
2025-01-07T17:55:42.9974090Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:42.9974150Z         self.t_inner = t_inner
2025-01-07T17:55:42.9974230Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:42.9974290Z         self.time_explosion = time_explosion
2025-01-07T17:55:42.9974350Z         self.v_inner = v_inner
2025-01-07T17:55:42.9974400Z         self.v_outer = v_outer
2025-01-07T17:55:42.9974440Z     
2025-01-07T17:55:42.9975380Z         # First check if both options are provided
2025-01-07T17:55:42.9975570Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:42.9975640Z >           raise ValueError(
2025-01-07T17:55:42.9975930Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:42.9976070Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:42.9976110Z             )
2025-01-07T17:55:42.9976390Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:42.9976390Z 
2025-01-07T17:55:42.9976530Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:42.9976750Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-new_bin_edges] _
2025-01-07T17:55:42.9976750Z 
2025-01-07T17:55:42.9976910Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:42.9976920Z 
2025-01-07T17:55:42.9976980Z     @pytest.fixture(scope="class")
2025-01-07T17:55:42.9977050Z     def plotter(simulation_simple):
2025-01-07T17:55:42.9977090Z         """
2025-01-07T17:55:42.9977210Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:42.9977250Z     
2025-01-07T17:55:42.9977300Z         Parameters:
2025-01-07T17:55:42.9977350Z         -----------
2025-01-07T17:55:42.9977440Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:42.9977480Z     
2025-01-07T17:55:42.9977530Z         Returns:
2025-01-07T17:55:42.9977570Z         --------
2025-01-07T17:55:42.9977630Z         An LIVPlotter instance.
2025-01-07T17:55:42.9977670Z         """
2025-01-07T17:55:42.9977770Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:42.9977780Z 
2025-01-07T17:55:42.9977880Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:42.9977970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:42.9978090Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:42.9978210Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:42.9978380Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:42.9978540Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:42.9978690Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:42.9978740Z     return cls(
2025-01-07T17:55:42.9978830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:42.9978830Z 
2025-01-07T17:55:42.9979120Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:42.9979250Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:42.9979400Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:42.9979530Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:42.9979690Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:42.9979770Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:42.9979910Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:42.9979990Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:42.9980120Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:42.9980200Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:42.9980300Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:42.9980300Z 
2025-01-07T17:55:42.9980350Z [29224 rows x 12 columns]
2025-01-07T17:55:42.9980480Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:42.9980560Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:42.9980720Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:42.9980860Z        0.00025518])
2025-01-07T17:55:42.9980990Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:42.9981150Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:42.9981250Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:42.9981340Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:42.9981500Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:42.9981580Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:42.9981770Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:42.9981910Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:42.9982010Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:42.9982070Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:42.9982150Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:42.9982210Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:42.9982410Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:42.9982570Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:42.9982680Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:42.9982810Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:42.9982950Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:42.9983060Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:42.9983180Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:42.9983990Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:42.9984110Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:42.9984240Z            2.000e+09] cm / s>
2025-01-07T17:55:42.9984240Z 
2025-01-07T17:55:42.9984290Z     def __init__(
2025-01-07T17:55:42.9984340Z         self,
2025-01-07T17:55:42.9984400Z         last_interaction_type,
2025-01-07T17:55:42.9984460Z         last_line_interaction_in_id,
2025-01-07T17:55:42.9984520Z         last_line_interaction_out_id,
2025-01-07T17:55:42.9984580Z         last_line_interaction_in_nu,
2025-01-07T17:55:42.9984630Z         last_interaction_in_r,
2025-01-07T17:55:42.9984680Z         lines_df,
2025-01-07T17:55:42.9984730Z         packet_nus,
2025-01-07T17:55:42.9984780Z         packet_energies,
2025-01-07T17:55:42.9984820Z         r_inner,
2025-01-07T17:55:42.9984880Z         spectrum_delta_frequency,
2025-01-07T17:55:42.9985030Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:42.9985090Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:42.9985160Z         spectrum_wavelength,
2025-01-07T17:55:42.9985210Z         t_inner,
2025-01-07T17:55:42.9985270Z         time_of_simulation,
2025-01-07T17:55:42.9985320Z         time_explosion,
2025-01-07T17:55:42.9985370Z         v_inner,
2025-01-07T17:55:42.9985410Z         v_outer,
2025-01-07T17:55:42.9985450Z         velocity
2025-01-07T17:55:42.9985490Z     ):
2025-01-07T17:55:42.9985600Z         """
2025-01-07T17:55:42.9985790Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:42.9985840Z     
2025-01-07T17:55:42.9985890Z         Parameters
2025-01-07T17:55:42.9985940Z         ----------
2025-01-07T17:55:42.9986010Z         last_interaction_type : np.array
2025-01-07T17:55:42.9986120Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:42.9986210Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:42.9986690Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:42.9986830Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:42.9986900Z             absorption (interaction in)
2025-01-07T17:55:42.9986970Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:42.9987080Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:42.9987160Z             emission (interaction out)
2025-01-07T17:55:42.9987230Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:42.9987350Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:42.9987410Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:42.9987530Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:42.9987590Z         lines_df : pd.DataFrame
2025-01-07T17:55:42.9987710Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:42.9987790Z         packet_nus : astropy.Quantity
2025-01-07T17:55:42.9987910Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:42.9987970Z             unit of Hz
2025-01-07T17:55:42.9988030Z         packet_energies : astropy.Quantity
2025-01-07T17:55:42.9988130Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:42.9988190Z         r_inner : astropy.Quantity
2025-01-07T17:55:42.9988280Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:42.9988360Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:42.9988450Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:42.9988530Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:42.9988620Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:42.9988690Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:42.9988800Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:42.9988860Z         t_inner : astropy.Quantity
2025-01-07T17:55:42.9988950Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:42.9989280Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:42.9989370Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:42.9989420Z         """
2025-01-07T17:55:42.9989550Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:42.9989630Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:42.9989690Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:42.9989740Z             {
2025-01-07T17:55:42.9989790Z                 "nus": packet_nus,
2025-01-07T17:55:42.9989890Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:42.9989960Z                 "energies": packet_energies,
2025-01-07T17:55:42.9990040Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:42.9990170Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:42.9990280Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:42.9990400Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:42.9990480Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:42.9990530Z             }
2025-01-07T17:55:42.9990600Z         )
2025-01-07T17:55:42.9990640Z     
2025-01-07T17:55:42.9990700Z         # Save other properties
2025-01-07T17:55:42.9990760Z         self.lines_df = lines_df
2025-01-07T17:55:42.9990810Z         self.r_inner = r_inner
2025-01-07T17:55:42.9990920Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:42.9991030Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:42.9991130Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:42.9991270Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:42.9991340Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:42.9991400Z         )
2025-01-07T17:55:42.9991490Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:42.9991550Z         self.t_inner = t_inner
2025-01-07T17:55:42.9991630Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:42.9991710Z         self.time_explosion = time_explosion
2025-01-07T17:55:42.9991760Z         self.v_inner = v_inner
2025-01-07T17:55:42.9991810Z         self.v_outer = v_outer
2025-01-07T17:55:42.9991860Z     
2025-01-07T17:55:42.9991930Z         # First check if both options are provided
2025-01-07T17:55:42.9992090Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:42.9992150Z >           raise ValueError(
2025-01-07T17:55:42.9992260Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:42.9992380Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:42.9992430Z             )
2025-01-07T17:55:42.9992710Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:42.9992720Z 
2025-01-07T17:55:42.9992860Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:42.9993060Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] _
2025-01-07T17:55:42.9993060Z 
2025-01-07T17:55:42.9993230Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:42.9993230Z 
2025-01-07T17:55:42.9993290Z     @pytest.fixture(scope="class")
2025-01-07T17:55:42.9993350Z     def plotter(simulation_simple):
2025-01-07T17:55:42.9993400Z         """
2025-01-07T17:55:42.9993530Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:42.9993580Z     
2025-01-07T17:55:42.9993630Z         Parameters:
2025-01-07T17:55:42.9993680Z         -----------
2025-01-07T17:55:42.9993770Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:42.9993890Z     
2025-01-07T17:55:42.9993940Z         Returns:
2025-01-07T17:55:42.9993990Z         --------
2025-01-07T17:55:42.9994050Z         An LIVPlotter instance.
2025-01-07T17:55:42.9994090Z         """
2025-01-07T17:55:42.9994190Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:42.9994190Z 
2025-01-07T17:55:42.9994300Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:42.9994390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:42.9994510Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:42.9994630Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:42.9994800Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:42.9994900Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:42.9995060Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:42.9995200Z     return cls(
2025-01-07T17:55:42.9995290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:42.9995290Z 
2025-01-07T17:55:42.9995510Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:42.9995620Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:42.9995750Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:42.9995890Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:42.9996040Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:42.9996130Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:42.9996330Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:42.9996410Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:42.9996640Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:42.9996750Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:42.9996840Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:42.9996840Z 
2025-01-07T17:55:42.9996900Z [29224 rows x 12 columns]
2025-01-07T17:55:42.9997030Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:42.9997110Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:42.9997270Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:42.9997320Z        0.00025518])
2025-01-07T17:55:42.9997450Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:42.9997610Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:42.9997710Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:42.9997810Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:42.9997980Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:42.9998060Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:42.9998240Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:42.9998390Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:42.9999030Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:42.9999120Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:42.9999200Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:42.9999270Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:42.9999400Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:42.9999670Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:42.9999770Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:42.9999890Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0000030Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0000140Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0000270Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0000370Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0000460Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0000510Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0000510Z 
2025-01-07T17:55:43.0000570Z     def __init__(
2025-01-07T17:55:43.0000610Z         self,
2025-01-07T17:55:43.0000670Z         last_interaction_type,
2025-01-07T17:55:43.0000740Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0000800Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0000930Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0001010Z         last_interaction_in_r,
2025-01-07T17:55:43.0001060Z         lines_df,
2025-01-07T17:55:43.0001110Z         packet_nus,
2025-01-07T17:55:43.0001170Z         packet_energies,
2025-01-07T17:55:43.0001210Z         r_inner,
2025-01-07T17:55:43.0001270Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0001410Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0001480Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0001540Z         spectrum_wavelength,
2025-01-07T17:55:43.0001590Z         t_inner,
2025-01-07T17:55:43.0001740Z         time_of_simulation,
2025-01-07T17:55:43.0001800Z         time_explosion,
2025-01-07T17:55:43.0001850Z         v_inner,
2025-01-07T17:55:43.0001900Z         v_outer,
2025-01-07T17:55:43.0001950Z         velocity
2025-01-07T17:55:43.0001990Z     ):
2025-01-07T17:55:43.0002030Z         """
2025-01-07T17:55:43.0002210Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0002260Z     
2025-01-07T17:55:43.0002310Z         Parameters
2025-01-07T17:55:43.0002360Z         ----------
2025-01-07T17:55:43.0002420Z         last_interaction_type : np.array
2025-01-07T17:55:43.0002540Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0002630Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0002700Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0002820Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0002880Z             absorption (interaction in)
2025-01-07T17:55:43.0002950Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0003070Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0003130Z             emission (interaction out)
2025-01-07T17:55:43.0003200Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0003320Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0003460Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0003600Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0003650Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0003790Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0003850Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0003980Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0004030Z             unit of Hz
2025-01-07T17:55:43.0004100Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0004200Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0004330Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0004430Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0004510Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0004600Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0004680Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0004780Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0004850Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0004960Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0005010Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0005110Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0005180Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0005270Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0005310Z         """
2025-01-07T17:55:43.0005450Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0005530Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0005600Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0005640Z             {
2025-01-07T17:55:43.0005700Z                 "nus": packet_nus,
2025-01-07T17:55:43.0005800Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0005870Z                 "energies": packet_energies,
2025-01-07T17:55:43.0005960Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0006080Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0006190Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0006400Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0006500Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0006550Z             }
2025-01-07T17:55:43.0006600Z         )
2025-01-07T17:55:43.0006640Z     
2025-01-07T17:55:43.0006700Z         # Save other properties
2025-01-07T17:55:43.0006760Z         self.lines_df = lines_df
2025-01-07T17:55:43.0006810Z         self.r_inner = r_inner
2025-01-07T17:55:43.0006920Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0007030Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0007130Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0007210Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0007280Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0007320Z         )
2025-01-07T17:55:43.0007400Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0007460Z         self.t_inner = t_inner
2025-01-07T17:55:43.0007550Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0007610Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0007670Z         self.v_inner = v_inner
2025-01-07T17:55:43.0007720Z         self.v_outer = v_outer
2025-01-07T17:55:43.0007790Z     
2025-01-07T17:55:43.0007860Z         # First check if both options are provided
2025-01-07T17:55:43.0007990Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0008060Z >           raise ValueError(
2025-01-07T17:55:43.0008170Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0008290Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0008340Z             )
2025-01-07T17:55:43.0008610Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0008620Z 
2025-01-07T17:55:43.0008750Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0009060Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_colors] _
2025-01-07T17:55:43.0009060Z 
2025-01-07T17:55:43.0009220Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0009220Z 
2025-01-07T17:55:43.0009280Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0009350Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0009390Z         """
2025-01-07T17:55:43.0009510Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0009550Z     
2025-01-07T17:55:43.0009610Z         Parameters:
2025-01-07T17:55:43.0009650Z         -----------
2025-01-07T17:55:43.0009740Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0009790Z     
2025-01-07T17:55:43.0009830Z         Returns:
2025-01-07T17:55:43.0009880Z         --------
2025-01-07T17:55:43.0009930Z         An LIVPlotter instance.
2025-01-07T17:55:43.0009980Z         """
2025-01-07T17:55:43.0010080Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0010080Z 
2025-01-07T17:55:43.0010190Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0010280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0010400Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0010510Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0010670Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0010770Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0010930Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0010970Z     return cls(
2025-01-07T17:55:43.0011100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0011100Z 
2025-01-07T17:55:43.0011330Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0011440Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0011570Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0011710Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0011870Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0011950Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0012090Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0012170Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0012300Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0012390Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0012480Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0012480Z 
2025-01-07T17:55:43.0012540Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0012670Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0012750Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0012900Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0012950Z        0.00025518])
2025-01-07T17:55:43.0013070Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0013230Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0013320Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0013420Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0013580Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0013710Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0013900Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0014040Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0014130Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0014190Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0014270Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0014330Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0014460Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0014600Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0014790Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0014960Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0015100Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0015200Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0015320Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0015420Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0015510Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0015560Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0015560Z 
2025-01-07T17:55:43.0015610Z     def __init__(
2025-01-07T17:55:43.0015650Z         self,
2025-01-07T17:55:43.0015860Z         last_interaction_type,
2025-01-07T17:55:43.0015920Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0015990Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0016050Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0016180Z         last_interaction_in_r,
2025-01-07T17:55:43.0016240Z         lines_df,
2025-01-07T17:55:43.0016290Z         packet_nus,
2025-01-07T17:55:43.0016340Z         packet_energies,
2025-01-07T17:55:43.0016390Z         r_inner,
2025-01-07T17:55:43.0016450Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0016590Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0016660Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0016720Z         spectrum_wavelength,
2025-01-07T17:55:43.0016770Z         t_inner,
2025-01-07T17:55:43.0016820Z         time_of_simulation,
2025-01-07T17:55:43.0016870Z         time_explosion,
2025-01-07T17:55:43.0016920Z         v_inner,
2025-01-07T17:55:43.0016960Z         v_outer,
2025-01-07T17:55:43.0017010Z         velocity
2025-01-07T17:55:43.0017050Z     ):
2025-01-07T17:55:43.0017100Z         """
2025-01-07T17:55:43.0017280Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0017320Z     
2025-01-07T17:55:43.0017370Z         Parameters
2025-01-07T17:55:43.0017420Z         ----------
2025-01-07T17:55:43.0017480Z         last_interaction_type : np.array
2025-01-07T17:55:43.0017600Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0017690Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0017760Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0017870Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0017930Z             absorption (interaction in)
2025-01-07T17:55:43.0018020Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0018150Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0018210Z             emission (interaction out)
2025-01-07T17:55:43.0018280Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0018500Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0018580Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0018690Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0018760Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0018880Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0018940Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0019070Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0019120Z             unit of Hz
2025-01-07T17:55:43.0019180Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0019590Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0019660Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0019760Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0019840Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0019940Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0020020Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0020110Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0020190Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0020290Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0020350Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0020440Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0020520Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0020600Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0020650Z         """
2025-01-07T17:55:43.0020880Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0020970Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0021040Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0021080Z             {
2025-01-07T17:55:43.0021140Z                 "nus": packet_nus,
2025-01-07T17:55:43.0021240Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0021300Z                 "energies": packet_energies,
2025-01-07T17:55:43.0021390Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0021510Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0021620Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0027850Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0027970Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0028020Z             }
2025-01-07T17:55:43.0028060Z         )
2025-01-07T17:55:43.0028110Z     
2025-01-07T17:55:43.0028170Z         # Save other properties
2025-01-07T17:55:43.0028230Z         self.lines_df = lines_df
2025-01-07T17:55:43.0028280Z         self.r_inner = r_inner
2025-01-07T17:55:43.0028390Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0028500Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0028600Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0028680Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0028750Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0028800Z         )
2025-01-07T17:55:43.0028880Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0028940Z         self.t_inner = t_inner
2025-01-07T17:55:43.0029020Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0029100Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0029150Z         self.v_inner = v_inner
2025-01-07T17:55:43.0029300Z         self.v_outer = v_outer
2025-01-07T17:55:43.0029350Z     
2025-01-07T17:55:43.0029430Z         # First check if both options are provided
2025-01-07T17:55:43.0029560Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0029610Z >           raise ValueError(
2025-01-07T17:55:43.0029720Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0029850Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0029890Z             )
2025-01-07T17:55:43.0030170Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0030170Z 
2025-01-07T17:55:43.0030310Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0030520Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-new_bin_edges] _
2025-01-07T17:55:43.0030530Z 
2025-01-07T17:55:43.0030700Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0030700Z 
2025-01-07T17:55:43.0030760Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0030830Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0030870Z         """
2025-01-07T17:55:43.0030980Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0031030Z     
2025-01-07T17:55:43.0031070Z         Parameters:
2025-01-07T17:55:43.0031130Z         -----------
2025-01-07T17:55:43.0031210Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0031260Z     
2025-01-07T17:55:43.0031310Z         Returns:
2025-01-07T17:55:43.0031350Z         --------
2025-01-07T17:55:43.0031530Z         An LIVPlotter instance.
2025-01-07T17:55:43.0031590Z         """
2025-01-07T17:55:43.0032000Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0032000Z 
2025-01-07T17:55:43.0032120Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0032210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0032330Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0032450Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0032610Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0032710Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0032860Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0032910Z     return cls(
2025-01-07T17:55:43.0033000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0033000Z 
2025-01-07T17:55:43.0033210Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0033320Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0033460Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0033600Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0033760Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0033840Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0033980Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0034060Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0034180Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0034280Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0034370Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0034370Z 
2025-01-07T17:55:43.0034430Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0034840Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0034930Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0035080Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0035130Z        0.00025518])
2025-01-07T17:55:43.0035350Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0035500Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0035600Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0035700Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0035870Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0035950Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0036130Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0036280Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0036380Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0036440Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0036520Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0036580Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0036700Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0036840Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0036940Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0037110Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0037250Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0037360Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0037480Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0037580Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0037670Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0037710Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0037720Z 
2025-01-07T17:55:43.0037760Z     def __init__(
2025-01-07T17:55:43.0037810Z         self,
2025-01-07T17:55:43.0037860Z         last_interaction_type,
2025-01-07T17:55:43.0037920Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0037990Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0038050Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0038100Z         last_interaction_in_r,
2025-01-07T17:55:43.0038150Z         lines_df,
2025-01-07T17:55:43.0038200Z         packet_nus,
2025-01-07T17:55:43.0038250Z         packet_energies,
2025-01-07T17:55:43.0038300Z         r_inner,
2025-01-07T17:55:43.0038360Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0038500Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0038570Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0038630Z         spectrum_wavelength,
2025-01-07T17:55:43.0038670Z         t_inner,
2025-01-07T17:55:43.0038720Z         time_of_simulation,
2025-01-07T17:55:43.0038770Z         time_explosion,
2025-01-07T17:55:43.0038820Z         v_inner,
2025-01-07T17:55:43.0038860Z         v_outer,
2025-01-07T17:55:43.0038900Z         velocity
2025-01-07T17:55:43.0038950Z     ):
2025-01-07T17:55:43.0038990Z         """
2025-01-07T17:55:43.0039170Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0039210Z     
2025-01-07T17:55:43.0039260Z         Parameters
2025-01-07T17:55:43.0039350Z         ----------
2025-01-07T17:55:43.0039420Z         last_interaction_type : np.array
2025-01-07T17:55:43.0039540Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0039620Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0039700Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0039810Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0040680Z             absorption (interaction in)
2025-01-07T17:55:43.0041040Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0041160Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0041230Z             emission (interaction out)
2025-01-07T17:55:43.0041300Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0041410Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0041480Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0041600Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0041660Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0041780Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0041850Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0041970Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0042020Z             unit of Hz
2025-01-07T17:55:43.0042090Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0042190Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0042260Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0042340Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0042540Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0042640Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0042730Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0042820Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0042890Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0042990Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0043050Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0043150Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0043210Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0043300Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0043340Z         """
2025-01-07T17:55:43.0043470Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0043550Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0043620Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0043660Z             {
2025-01-07T17:55:43.0043720Z                 "nus": packet_nus,
2025-01-07T17:55:43.0043820Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0043890Z                 "energies": packet_energies,
2025-01-07T17:55:43.0043980Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0044090Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0044210Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0044310Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0044410Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0044450Z             }
2025-01-07T17:55:43.0044490Z         )
2025-01-07T17:55:43.0044530Z     
2025-01-07T17:55:43.0044590Z         # Save other properties
2025-01-07T17:55:43.0044650Z         self.lines_df = lines_df
2025-01-07T17:55:43.0044700Z         self.r_inner = r_inner
2025-01-07T17:55:43.0044860Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0044970Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0045070Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0045150Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0045350Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0045420Z         )
2025-01-07T17:55:43.0045530Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0045590Z         self.t_inner = t_inner
2025-01-07T17:55:43.0045680Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0045750Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0045810Z         self.v_inner = v_inner
2025-01-07T17:55:43.0045860Z         self.v_outer = v_outer
2025-01-07T17:55:43.0045910Z     
2025-01-07T17:55:43.0045990Z         # First check if both options are provided
2025-01-07T17:55:43.0046130Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0046190Z >           raise ValueError(
2025-01-07T17:55:43.0046300Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0046430Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0046470Z             )
2025-01-07T17:55:43.0046750Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0046760Z 
2025-01-07T17:55:43.0046890Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0047100Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] _
2025-01-07T17:55:43.0047110Z 
2025-01-07T17:55:43.0047410Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0047410Z 
2025-01-07T17:55:43.0047480Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0047650Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0047720Z         """
2025-01-07T17:55:43.0047830Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0047870Z     
2025-01-07T17:55:43.0047920Z         Parameters:
2025-01-07T17:55:43.0047970Z         -----------
2025-01-07T17:55:43.0048050Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0048090Z     
2025-01-07T17:55:43.0048140Z         Returns:
2025-01-07T17:55:43.0048180Z         --------
2025-01-07T17:55:43.0048240Z         An LIVPlotter instance.
2025-01-07T17:55:43.0048280Z         """
2025-01-07T17:55:43.0048380Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0048380Z 
2025-01-07T17:55:43.0048490Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0048580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0048700Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0048820Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0048990Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0049090Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0049240Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0049290Z     return cls(
2025-01-07T17:55:43.0049380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0049380Z 
2025-01-07T17:55:43.0049590Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0049700Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0049830Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0049980Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0050320Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0050410Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0050550Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0050630Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0050760Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0050850Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0050940Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0050950Z 
2025-01-07T17:55:43.0051000Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0051130Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0051210Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0051370Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0051420Z        0.00025518])
2025-01-07T17:55:43.0051540Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0051700Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0051790Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0051890Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0052050Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0052130Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0052440Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0052600Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0052710Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0052780Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0052860Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0052920Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0053050Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0053180Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0053280Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0053400Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0053540Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0053640Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0053760Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0053870Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0053960Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0054010Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0054010Z 
2025-01-07T17:55:43.0054050Z     def __init__(
2025-01-07T17:55:43.0054100Z         self,
2025-01-07T17:55:43.0054160Z         last_interaction_type,
2025-01-07T17:55:43.0054220Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0054280Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0054340Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0054400Z         last_interaction_in_r,
2025-01-07T17:55:43.0054450Z         lines_df,
2025-01-07T17:55:43.0054490Z         packet_nus,
2025-01-07T17:55:43.0054550Z         packet_energies,
2025-01-07T17:55:43.0054590Z         r_inner,
2025-01-07T17:55:43.0054650Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0054990Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0055060Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0055120Z         spectrum_wavelength,
2025-01-07T17:55:43.0055160Z         t_inner,
2025-01-07T17:55:43.0055220Z         time_of_simulation,
2025-01-07T17:55:43.0055270Z         time_explosion,
2025-01-07T17:55:43.0055310Z         v_inner,
2025-01-07T17:55:43.0055350Z         v_outer,
2025-01-07T17:55:43.0055400Z         velocity
2025-01-07T17:55:43.0055440Z     ):
2025-01-07T17:55:43.0055490Z         """
2025-01-07T17:55:43.0055670Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0055710Z     
2025-01-07T17:55:43.0055760Z         Parameters
2025-01-07T17:55:43.0055800Z         ----------
2025-01-07T17:55:43.0055870Z         last_interaction_type : np.array
2025-01-07T17:55:43.0056000Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0056090Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0056160Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0056280Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0056340Z             absorption (interaction in)
2025-01-07T17:55:43.0056410Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0056520Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0056580Z             emission (interaction out)
2025-01-07T17:55:43.0056650Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0056760Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0056830Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0057000Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0057060Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0057190Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0057260Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0057380Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0057430Z             unit of Hz
2025-01-07T17:55:43.0057500Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0057940Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0058030Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0058120Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0058200Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0058300Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0058390Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0058480Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0058570Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0058670Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0058730Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0058820Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0058900Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0058980Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0059020Z         """
2025-01-07T17:55:43.0059160Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0059240Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0059300Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0059350Z             {
2025-01-07T17:55:43.0059410Z                 "nus": packet_nus,
2025-01-07T17:55:43.0059510Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0059570Z                 "energies": packet_energies,
2025-01-07T17:55:43.0059770Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0059890Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0060000Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0060120Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0060210Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0060250Z             }
2025-01-07T17:55:43.0060290Z         )
2025-01-07T17:55:43.0060340Z     
2025-01-07T17:55:43.0060390Z         # Save other properties
2025-01-07T17:55:43.0060450Z         self.lines_df = lines_df
2025-01-07T17:55:43.0060510Z         self.r_inner = r_inner
2025-01-07T17:55:43.0060620Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0060730Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0060830Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0060920Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0060980Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0061030Z         )
2025-01-07T17:55:43.0061110Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0061170Z         self.t_inner = t_inner
2025-01-07T17:55:43.0061250Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0061320Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0061370Z         self.v_inner = v_inner
2025-01-07T17:55:43.0061430Z         self.v_outer = v_outer
2025-01-07T17:55:43.0061470Z     
2025-01-07T17:55:43.0061550Z         # First check if both options are provided
2025-01-07T17:55:43.0061830Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0061900Z >           raise ValueError(
2025-01-07T17:55:43.0062010Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0062140Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0062190Z             )
2025-01-07T17:55:43.0062460Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0062470Z 
2025-01-07T17:55:43.0062610Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0062820Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_colors] _
2025-01-07T17:55:43.0062820Z 
2025-01-07T17:55:43.0062980Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0062990Z 
2025-01-07T17:55:43.0063050Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0063120Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0063160Z         """
2025-01-07T17:55:43.0063280Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0063330Z     
2025-01-07T17:55:43.0063370Z         Parameters:
2025-01-07T17:55:43.0063420Z         -----------
2025-01-07T17:55:43.0063510Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0063560Z     
2025-01-07T17:55:43.0063600Z         Returns:
2025-01-07T17:55:43.0063650Z         --------
2025-01-07T17:55:43.0063710Z         An LIVPlotter instance.
2025-01-07T17:55:43.0063750Z         """
2025-01-07T17:55:43.0063850Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0063850Z 
2025-01-07T17:55:43.0063960Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0064050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0064170Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0064290Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0064450Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0064600Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0064760Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0064810Z     return cls(
2025-01-07T17:55:43.0064890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0064890Z 
2025-01-07T17:55:43.0065100Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0065210Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0065340Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0065490Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0065650Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0065720Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0065860Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0065940Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0066070Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0066150Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0066240Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0066250Z 
2025-01-07T17:55:43.0066300Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0066440Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0066520Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0066720Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0066770Z        0.00025518])
2025-01-07T17:55:43.0066900Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0067060Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0067160Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0067250Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0067410Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0067490Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0067670Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0067820Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0067910Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0067980Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0068060Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0068130Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0068240Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0068380Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0068480Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0068600Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0068730Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0068830Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0068960Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0069060Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0069200Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0069250Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0069250Z 
2025-01-07T17:55:43.0069300Z     def __init__(
2025-01-07T17:55:43.0069340Z         self,
2025-01-07T17:55:43.0069400Z         last_interaction_type,
2025-01-07T17:55:43.0069460Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0069520Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0069580Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0069640Z         last_interaction_in_r,
2025-01-07T17:55:43.0069680Z         lines_df,
2025-01-07T17:55:43.0069730Z         packet_nus,
2025-01-07T17:55:43.0069780Z         packet_energies,
2025-01-07T17:55:43.0069820Z         r_inner,
2025-01-07T17:55:43.0069880Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0070020Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0070090Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0070150Z         spectrum_wavelength,
2025-01-07T17:55:43.0070200Z         t_inner,
2025-01-07T17:55:43.0070250Z         time_of_simulation,
2025-01-07T17:55:43.0070310Z         time_explosion,
2025-01-07T17:55:43.0070350Z         v_inner,
2025-01-07T17:55:43.0070390Z         v_outer,
2025-01-07T17:55:43.0070440Z         velocity
2025-01-07T17:55:43.0070480Z     ):
2025-01-07T17:55:43.0070520Z         """
2025-01-07T17:55:43.0070700Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0070740Z     
2025-01-07T17:55:43.0070790Z         Parameters
2025-01-07T17:55:43.0070840Z         ----------
2025-01-07T17:55:43.0070900Z         last_interaction_type : np.array
2025-01-07T17:55:43.0071030Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0071360Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0071440Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0071560Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0071630Z             absorption (interaction in)
2025-01-07T17:55:43.0071700Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0071810Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0071860Z             emission (interaction out)
2025-01-07T17:55:43.0071930Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0072050Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0072110Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0072230Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0072290Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0072420Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0072480Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0072610Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0072660Z             unit of Hz
2025-01-07T17:55:43.0072740Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0072830Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0072890Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0072980Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0073060Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0073150Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0073230Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0073320Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0073390Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0073500Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0073570Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0073890Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0073960Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0074050Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0074090Z         """
2025-01-07T17:55:43.0074230Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0074300Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0074370Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0074420Z             {
2025-01-07T17:55:43.0074480Z                 "nus": packet_nus,
2025-01-07T17:55:43.0075000Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0075090Z                 "energies": packet_energies,
2025-01-07T17:55:43.0075190Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0075390Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0075520Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0075630Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0075720Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0075760Z             }
2025-01-07T17:55:43.0075810Z         )
2025-01-07T17:55:43.0075850Z     
2025-01-07T17:55:43.0075910Z         # Save other properties
2025-01-07T17:55:43.0075960Z         self.lines_df = lines_df
2025-01-07T17:55:43.0076020Z         self.r_inner = r_inner
2025-01-07T17:55:43.0076120Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0076240Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0076520Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0081130Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0081210Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0081260Z         )
2025-01-07T17:55:43.0081350Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0081410Z         self.t_inner = t_inner
2025-01-07T17:55:43.0081490Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0081550Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0081610Z         self.v_inner = v_inner
2025-01-07T17:55:43.0081660Z         self.v_outer = v_outer
2025-01-07T17:55:43.0081700Z     
2025-01-07T17:55:43.0081780Z         # First check if both options are provided
2025-01-07T17:55:43.0081920Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0081970Z >           raise ValueError(
2025-01-07T17:55:43.0082080Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0082210Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0082260Z             )
2025-01-07T17:55:43.0082540Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0082540Z 
2025-01-07T17:55:43.0082680Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0082890Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-new_bin_edges] _
2025-01-07T17:55:43.0082900Z 
2025-01-07T17:55:43.0083060Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0083060Z 
2025-01-07T17:55:43.0083120Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0083180Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0083230Z         """
2025-01-07T17:55:43.0083340Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0083390Z     
2025-01-07T17:55:43.0083430Z         Parameters:
2025-01-07T17:55:43.0083490Z         -----------
2025-01-07T17:55:43.0083690Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0083730Z     
2025-01-07T17:55:43.0083780Z         Returns:
2025-01-07T17:55:43.0083820Z         --------
2025-01-07T17:55:43.0083880Z         An LIVPlotter instance.
2025-01-07T17:55:43.0083920Z         """
2025-01-07T17:55:43.0084020Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0084030Z 
2025-01-07T17:55:43.0084130Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0084220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0084340Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0084460Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0084620Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0084730Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0084880Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0084930Z     return cls(
2025-01-07T17:55:43.0085030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0085030Z 
2025-01-07T17:55:43.0085230Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0085340Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0085480Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0085980Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0086160Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0086240Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0086490Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0086570Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0086710Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0086790Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0086880Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0086890Z 
2025-01-07T17:55:43.0086940Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0087070Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0087160Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0087310Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0087360Z        0.00025518])
2025-01-07T17:55:43.0087490Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0087650Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0087760Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0087850Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0088010Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0088090Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0088270Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0088500Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0088660Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0088730Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0088810Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0088880Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0089010Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0089230Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0089330Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0089450Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0089590Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0089680Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0090100Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0090210Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0090300Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0090360Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0090360Z 
2025-01-07T17:55:43.0090410Z     def __init__(
2025-01-07T17:55:43.0090460Z         self,
2025-01-07T17:55:43.0090520Z         last_interaction_type,
2025-01-07T17:55:43.0090580Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0090640Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0090700Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0090750Z         last_interaction_in_r,
2025-01-07T17:55:43.0090800Z         lines_df,
2025-01-07T17:55:43.0090840Z         packet_nus,
2025-01-07T17:55:43.0090900Z         packet_energies,
2025-01-07T17:55:43.0090940Z         r_inner,
2025-01-07T17:55:43.0091000Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0091140Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0091210Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0091330Z         spectrum_wavelength,
2025-01-07T17:55:43.0091380Z         t_inner,
2025-01-07T17:55:43.0091440Z         time_of_simulation,
2025-01-07T17:55:43.0091490Z         time_explosion,
2025-01-07T17:55:43.0091540Z         v_inner,
2025-01-07T17:55:43.0091580Z         v_outer,
2025-01-07T17:55:43.0091630Z         velocity
2025-01-07T17:55:43.0091670Z     ):
2025-01-07T17:55:43.0091720Z         """
2025-01-07T17:55:43.0091890Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0091940Z     
2025-01-07T17:55:43.0091980Z         Parameters
2025-01-07T17:55:43.0092030Z         ----------
2025-01-07T17:55:43.0092100Z         last_interaction_type : np.array
2025-01-07T17:55:43.0092220Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0092310Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0092380Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0092490Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0092550Z             absorption (interaction in)
2025-01-07T17:55:43.0092630Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0092740Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0092800Z             emission (interaction out)
2025-01-07T17:55:43.0092870Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0092990Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0093060Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0093170Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0093230Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0093360Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0093420Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0093550Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0093600Z             unit of Hz
2025-01-07T17:55:43.0093660Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0093810Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0093870Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0093960Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0094030Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0094130Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0094210Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0094310Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0094380Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0094490Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0094550Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0094640Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0094720Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0094810Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0094850Z         """
2025-01-07T17:55:43.0094990Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0095070Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0095130Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0095180Z             {
2025-01-07T17:55:43.0095230Z                 "nus": packet_nus,
2025-01-07T17:55:43.0095340Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0095400Z                 "energies": packet_energies,
2025-01-07T17:55:43.0095500Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0095620Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0097150Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0097320Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0097420Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0097460Z             }
2025-01-07T17:55:43.0097510Z         )
2025-01-07T17:55:43.0097550Z     
2025-01-07T17:55:43.0097610Z         # Save other properties
2025-01-07T17:55:43.0097670Z         self.lines_df = lines_df
2025-01-07T17:55:43.0097730Z         self.r_inner = r_inner
2025-01-07T17:55:43.0097840Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0097940Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0098040Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0098130Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0098200Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0098240Z         )
2025-01-07T17:55:43.0098340Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0098390Z         self.t_inner = t_inner
2025-01-07T17:55:43.0098480Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0098550Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0098600Z         self.v_inner = v_inner
2025-01-07T17:55:43.0098650Z         self.v_outer = v_outer
2025-01-07T17:55:43.0098690Z     
2025-01-07T17:55:43.0098770Z         # First check if both options are provided
2025-01-07T17:55:43.0098900Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0098960Z >           raise ValueError(
2025-01-07T17:55:43.0099060Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0099440Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0099510Z             )
2025-01-07T17:55:43.0099790Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0100010Z 
2025-01-07T17:55:43.0100150Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0100360Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] _
2025-01-07T17:55:43.0100360Z 
2025-01-07T17:55:43.0100530Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0100530Z 
2025-01-07T17:55:43.0100590Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0100660Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0100700Z         """
2025-01-07T17:55:43.0100820Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0100860Z     
2025-01-07T17:55:43.0100920Z         Parameters:
2025-01-07T17:55:43.0100960Z         -----------
2025-01-07T17:55:43.0101050Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0101100Z     
2025-01-07T17:55:43.0101140Z         Returns:
2025-01-07T17:55:43.0101190Z         --------
2025-01-07T17:55:43.0101250Z         An LIVPlotter instance.
2025-01-07T17:55:43.0101300Z         """
2025-01-07T17:55:43.0101390Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0101400Z 
2025-01-07T17:55:43.0101510Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0101600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0101720Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0101900Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0102080Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0102180Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0102410Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0102470Z     return cls(
2025-01-07T17:55:43.0102550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0102560Z 
2025-01-07T17:55:43.0102770Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0102880Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0103020Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0103160Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0103320Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0103450Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0103620Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0103700Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0103830Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0103930Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0104010Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0104020Z 
2025-01-07T17:55:43.0104080Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0104200Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0104280Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0104440Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0104480Z        0.00025518])
2025-01-07T17:55:43.0104600Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0104760Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0104860Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0104960Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0105200Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0105280Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0105460Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0105610Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0105700Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0105760Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0105840Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0105900Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0106030Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0106170Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0106270Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0106390Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0106520Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0106620Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0106750Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0106850Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0106940Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0106990Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0106990Z 
2025-01-07T17:55:43.0107040Z     def __init__(
2025-01-07T17:55:43.0107140Z         self,
2025-01-07T17:55:43.0107200Z         last_interaction_type,
2025-01-07T17:55:43.0107270Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0107330Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0107390Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0107450Z         last_interaction_in_r,
2025-01-07T17:55:43.0107500Z         lines_df,
2025-01-07T17:55:43.0107540Z         packet_nus,
2025-01-07T17:55:43.0107600Z         packet_energies,
2025-01-07T17:55:43.0107650Z         r_inner,
2025-01-07T17:55:43.0107700Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0107850Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0107910Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0107970Z         spectrum_wavelength,
2025-01-07T17:55:43.0108020Z         t_inner,
2025-01-07T17:55:43.0108070Z         time_of_simulation,
2025-01-07T17:55:43.0108120Z         time_explosion,
2025-01-07T17:55:43.0108170Z         v_inner,
2025-01-07T17:55:43.0108210Z         v_outer,
2025-01-07T17:55:43.0108250Z         velocity
2025-01-07T17:55:43.0108300Z     ):
2025-01-07T17:55:43.0108340Z         """
2025-01-07T17:55:43.0108520Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0108560Z     
2025-01-07T17:55:43.0108610Z         Parameters
2025-01-07T17:55:43.0108660Z         ----------
2025-01-07T17:55:43.0108730Z         last_interaction_type : np.array
2025-01-07T17:55:43.0108850Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0108930Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0109010Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0109120Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0109180Z             absorption (interaction in)
2025-01-07T17:55:43.0109260Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0109370Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0109490Z             emission (interaction out)
2025-01-07T17:55:43.0109560Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0109670Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0109740Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0109930Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0110670Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0111070Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0111140Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0111280Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0111320Z             unit of Hz
2025-01-07T17:55:43.0112100Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0112210Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0112280Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0112360Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0112450Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0112540Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0112620Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0112710Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0112780Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0112890Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0112950Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0113040Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0113110Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0113310Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0113360Z         """
2025-01-07T17:55:43.0113500Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0113570Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0113640Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0113690Z             {
2025-01-07T17:55:43.0113750Z                 "nus": packet_nus,
2025-01-07T17:55:43.0113840Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0113910Z                 "energies": packet_energies,
2025-01-07T17:55:43.0114010Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0114120Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0114230Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0114340Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0114440Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0114480Z             }
2025-01-07T17:55:43.0114530Z         )
2025-01-07T17:55:43.0114570Z     
2025-01-07T17:55:43.0114630Z         # Save other properties
2025-01-07T17:55:43.0114690Z         self.lines_df = lines_df
2025-01-07T17:55:43.0114740Z         self.r_inner = r_inner
2025-01-07T17:55:43.0114850Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0114960Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0115060Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0115140Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0115220Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0115350Z         )
2025-01-07T17:55:43.0115450Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0115500Z         self.t_inner = t_inner
2025-01-07T17:55:43.0115590Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0115650Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0115770Z         self.v_inner = v_inner
2025-01-07T17:55:43.0115830Z         self.v_outer = v_outer
2025-01-07T17:55:43.0115880Z     
2025-01-07T17:55:43.0115950Z         # First check if both options are provided
2025-01-07T17:55:43.0116090Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0116140Z >           raise ValueError(
2025-01-07T17:55:43.0116250Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0116380Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0116420Z             )
2025-01-07T17:55:43.0116700Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0116700Z 
2025-01-07T17:55:43.0116840Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0117050Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_colors] _
2025-01-07T17:55:43.0117060Z 
2025-01-07T17:55:43.0117220Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0117220Z 
2025-01-07T17:55:43.0117290Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0117350Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0117390Z         """
2025-01-07T17:55:43.0117510Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0117550Z     
2025-01-07T17:55:43.0117600Z         Parameters:
2025-01-07T17:55:43.0117650Z         -----------
2025-01-07T17:55:43.0117740Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0117780Z     
2025-01-07T17:55:43.0117830Z         Returns:
2025-01-07T17:55:43.0117870Z         --------
2025-01-07T17:55:43.0117930Z         An LIVPlotter instance.
2025-01-07T17:55:43.0118150Z         """
2025-01-07T17:55:43.0118260Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0118270Z 
2025-01-07T17:55:43.0118370Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0118460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0118580Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0118700Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0118870Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0118960Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0119120Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0119160Z     return cls(
2025-01-07T17:55:43.0119250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0119250Z 
2025-01-07T17:55:43.0119460Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0119570Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0119710Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0119850Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0120000Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0120080Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0120230Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0120300Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0120450Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0120550Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0120640Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0121050Z 
2025-01-07T17:55:43.0121110Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0121240Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0121320Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0121480Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0121520Z        0.00025518])
2025-01-07T17:55:43.0121640Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0121800Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0121890Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0122000Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0122180Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0122270Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0122460Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0122610Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0122700Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0122760Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0122840Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0122900Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0123030Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0123170Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0123320Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0123440Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0123590Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0123680Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0123820Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0123920Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0124000Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0124050Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0124060Z 
2025-01-07T17:55:43.0124100Z     def __init__(
2025-01-07T17:55:43.0124150Z         self,
2025-01-07T17:55:43.0124210Z         last_interaction_type,
2025-01-07T17:55:43.0124270Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0124340Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0124400Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0124460Z         last_interaction_in_r,
2025-01-07T17:55:43.0124500Z         lines_df,
2025-01-07T17:55:43.0124550Z         packet_nus,
2025-01-07T17:55:43.0124610Z         packet_energies,
2025-01-07T17:55:43.0124650Z         r_inner,
2025-01-07T17:55:43.0124710Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0124850Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0124920Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0124980Z         spectrum_wavelength,
2025-01-07T17:55:43.0125020Z         t_inner,
2025-01-07T17:55:43.0125070Z         time_of_simulation,
2025-01-07T17:55:43.0125120Z         time_explosion,
2025-01-07T17:55:43.0125170Z         v_inner,
2025-01-07T17:55:43.0125210Z         v_outer,
2025-01-07T17:55:43.0125260Z         velocity
2025-01-07T17:55:43.0125300Z     ):
2025-01-07T17:55:43.0125350Z         """
2025-01-07T17:55:43.0125520Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0125620Z     
2025-01-07T17:55:43.0125670Z         Parameters
2025-01-07T17:55:43.0125720Z         ----------
2025-01-07T17:55:43.0125780Z         last_interaction_type : np.array
2025-01-07T17:55:43.0125900Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0125990Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0126060Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0126180Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0126370Z             absorption (interaction in)
2025-01-07T17:55:43.0126480Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0126600Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0126660Z             emission (interaction out)
2025-01-07T17:55:43.0126740Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0126860Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0126930Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0127050Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0127100Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0127230Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0127290Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0127420Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0127470Z             unit of Hz
2025-01-07T17:55:43.0127530Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0127630Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0127690Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0127920Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0128000Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0128110Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0128190Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0128290Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0128360Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0128460Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0128530Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0128620Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0128680Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0128770Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0128810Z         """
2025-01-07T17:55:43.0128940Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0129020Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0129090Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0129140Z             {
2025-01-07T17:55:43.0129190Z                 "nus": packet_nus,
2025-01-07T17:55:43.0129290Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0129350Z                 "energies": packet_energies,
2025-01-07T17:55:43.0129450Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0129570Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0129680Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0129790Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0129880Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0129920Z             }
2025-01-07T17:55:43.0129970Z         )
2025-01-07T17:55:43.0130010Z     
2025-01-07T17:55:43.0130070Z         # Save other properties
2025-01-07T17:55:43.0130130Z         self.lines_df = lines_df
2025-01-07T17:55:43.0130240Z         self.r_inner = r_inner
2025-01-07T17:55:43.0130350Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0130460Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0130560Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0130640Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0130710Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0130750Z         )
2025-01-07T17:55:43.0130830Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0130890Z         self.t_inner = t_inner
2025-01-07T17:55:43.0130970Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0131040Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0131100Z         self.v_inner = v_inner
2025-01-07T17:55:43.0131150Z         self.v_outer = v_outer
2025-01-07T17:55:43.0131190Z     
2025-01-07T17:55:43.0136210Z         # First check if both options are provided
2025-01-07T17:55:43.0136380Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0136440Z >           raise ValueError(
2025-01-07T17:55:43.0136550Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0136680Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0136720Z             )
2025-01-07T17:55:43.0137000Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0137000Z 
2025-01-07T17:55:43.0137140Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0137360Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-new_bin_edges] _
2025-01-07T17:55:43.0137490Z 
2025-01-07T17:55:43.0137660Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0137660Z 
2025-01-07T17:55:43.0137720Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0137790Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0137830Z         """
2025-01-07T17:55:43.0137950Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0137990Z     
2025-01-07T17:55:43.0138040Z         Parameters:
2025-01-07T17:55:43.0138090Z         -----------
2025-01-07T17:55:43.0138180Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0138220Z     
2025-01-07T17:55:43.0138270Z         Returns:
2025-01-07T17:55:43.0138310Z         --------
2025-01-07T17:55:43.0138370Z         An LIVPlotter instance.
2025-01-07T17:55:43.0138410Z         """
2025-01-07T17:55:43.0138510Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0138510Z 
2025-01-07T17:55:43.0138650Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0138740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0138870Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0138980Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0139150Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0139250Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0139410Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0139450Z     return cls(
2025-01-07T17:55:43.0139540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0139540Z 
2025-01-07T17:55:43.0139750Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0139860Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0140000Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0140200Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0140360Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0140440Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0140580Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0140650Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0140780Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0140870Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0140960Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0140960Z 
2025-01-07T17:55:43.0141020Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0141230Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0141340Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0141500Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0141550Z        0.00025518])
2025-01-07T17:55:43.0141670Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0141830Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0141920Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0142020Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0142180Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0142250Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0142580Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0142760Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0142860Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0142910Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0143000Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0143060Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0143190Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0143320Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0143420Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0143540Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0143670Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0143780Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0143900Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0144010Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0144090Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0144140Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0144150Z 
2025-01-07T17:55:43.0144190Z     def __init__(
2025-01-07T17:55:43.0144240Z         self,
2025-01-07T17:55:43.0144290Z         last_interaction_type,
2025-01-07T17:55:43.0144350Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0144420Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0144480Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0144540Z         last_interaction_in_r,
2025-01-07T17:55:43.0144580Z         lines_df,
2025-01-07T17:55:43.0144630Z         packet_nus,
2025-01-07T17:55:43.0144680Z         packet_energies,
2025-01-07T17:55:43.0144900Z         r_inner,
2025-01-07T17:55:43.0144950Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0145100Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0145170Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0145230Z         spectrum_wavelength,
2025-01-07T17:55:43.0145280Z         t_inner,
2025-01-07T17:55:43.0145330Z         time_of_simulation,
2025-01-07T17:55:43.0145380Z         time_explosion,
2025-01-07T17:55:43.0145430Z         v_inner,
2025-01-07T17:55:43.0145470Z         v_outer,
2025-01-07T17:55:43.0145510Z         velocity
2025-01-07T17:55:43.0145560Z     ):
2025-01-07T17:55:43.0145600Z         """
2025-01-07T17:55:43.0145780Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0145820Z     
2025-01-07T17:55:43.0145870Z         Parameters
2025-01-07T17:55:43.0145920Z         ----------
2025-01-07T17:55:43.0145990Z         last_interaction_type : np.array
2025-01-07T17:55:43.0146100Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0146190Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0146260Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0146380Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0146440Z             absorption (interaction in)
2025-01-07T17:55:43.0146520Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0146630Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0146680Z             emission (interaction out)
2025-01-07T17:55:43.0146750Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0146870Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0146990Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0147100Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0147170Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0147300Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0147360Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0147480Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0147530Z             unit of Hz
2025-01-07T17:55:43.0147600Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0147700Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0147760Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0147840Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0148760Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0148890Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0148980Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0149070Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0149160Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0149270Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0149340Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0149430Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0149500Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0149590Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0149640Z         """
2025-01-07T17:55:43.0149780Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0149850Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0149920Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0149960Z             {
2025-01-07T17:55:43.0150020Z                 "nus": packet_nus,
2025-01-07T17:55:43.0150120Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0150340Z                 "energies": packet_energies,
2025-01-07T17:55:43.0150430Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0150550Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0150660Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0150780Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0150870Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0150920Z             }
2025-01-07T17:55:43.0150970Z         )
2025-01-07T17:55:43.0151010Z     
2025-01-07T17:55:43.0151070Z         # Save other properties
2025-01-07T17:55:43.0151120Z         self.lines_df = lines_df
2025-01-07T17:55:43.0151180Z         self.r_inner = r_inner
2025-01-07T17:55:43.0151290Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0151400Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0151500Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0151580Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0151650Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0151700Z         )
2025-01-07T17:55:43.0151780Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0151910Z         self.t_inner = t_inner
2025-01-07T17:55:43.0152020Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0152090Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0152150Z         self.v_inner = v_inner
2025-01-07T17:55:43.0152200Z         self.v_outer = v_outer
2025-01-07T17:55:43.0152240Z     
2025-01-07T17:55:43.0152320Z         # First check if both options are provided
2025-01-07T17:55:43.0152540Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0152600Z >           raise ValueError(
2025-01-07T17:55:43.0152720Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0152840Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0152890Z             )
2025-01-07T17:55:43.0153160Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0153170Z 
2025-01-07T17:55:43.0153300Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0153510Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] _
2025-01-07T17:55:43.0153510Z 
2025-01-07T17:55:43.0153680Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0153680Z 
2025-01-07T17:55:43.0153750Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0153810Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0153850Z         """
2025-01-07T17:55:43.0153970Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0154020Z     
2025-01-07T17:55:43.0154060Z         Parameters:
2025-01-07T17:55:43.0154110Z         -----------
2025-01-07T17:55:43.0154200Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0154250Z     
2025-01-07T17:55:43.0154290Z         Returns:
2025-01-07T17:55:43.0154340Z         --------
2025-01-07T17:55:43.0154390Z         An LIVPlotter instance.
2025-01-07T17:55:43.0154440Z         """
2025-01-07T17:55:43.0154540Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0154540Z 
2025-01-07T17:55:43.0154640Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0154730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0154850Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0154970Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0155200Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0155300Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0155520Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0155570Z     return cls(
2025-01-07T17:55:43.0155650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0155660Z 
2025-01-07T17:55:43.0155870Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0155980Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0156110Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0156330Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0156580Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0156670Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0156810Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0156890Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0157020Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0157110Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0157200Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0157200Z 
2025-01-07T17:55:43.0157250Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0157380Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0157530Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0157690Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0157740Z        0.00025518])
2025-01-07T17:55:43.0157870Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0158020Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0158130Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0158220Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0158380Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0158460Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0158640Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0158820Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0158920Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0158980Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0159060Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0159130Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0159250Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0159390Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0159500Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0159620Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0159750Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0159850Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0159980Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0160150Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0160250Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0160290Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0160300Z 
2025-01-07T17:55:43.0160350Z     def __init__(
2025-01-07T17:55:43.0160390Z         self,
2025-01-07T17:55:43.0160450Z         last_interaction_type,
2025-01-07T17:55:43.0160510Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0160570Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0160630Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0160680Z         last_interaction_in_r,
2025-01-07T17:55:43.0160730Z         lines_df,
2025-01-07T17:55:43.0160770Z         packet_nus,
2025-01-07T17:55:43.0160830Z         packet_energies,
2025-01-07T17:55:43.0160880Z         r_inner,
2025-01-07T17:55:43.0160940Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0161070Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0161150Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0161200Z         spectrum_wavelength,
2025-01-07T17:55:43.0161250Z         t_inner,
2025-01-07T17:55:43.0161300Z         time_of_simulation,
2025-01-07T17:55:43.0161350Z         time_explosion,
2025-01-07T17:55:43.0161390Z         v_inner,
2025-01-07T17:55:43.0161440Z         v_outer,
2025-01-07T17:55:43.0161480Z         velocity
2025-01-07T17:55:43.0161530Z     ):
2025-01-07T17:55:43.0161570Z         """
2025-01-07T17:55:43.0161750Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0161790Z     
2025-01-07T17:55:43.0161830Z         Parameters
2025-01-07T17:55:43.0161880Z         ----------
2025-01-07T17:55:43.0161950Z         last_interaction_type : np.array
2025-01-07T17:55:43.0162410Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0162500Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0162580Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0162960Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0163030Z             absorption (interaction in)
2025-01-07T17:55:43.0163100Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0163210Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0163280Z             emission (interaction out)
2025-01-07T17:55:43.0163350Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0163470Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0163530Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0163660Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0163720Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0163840Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0163920Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0164040Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0164090Z             unit of Hz
2025-01-07T17:55:43.0164160Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0164260Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0164310Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0164400Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0164480Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0164580Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0164660Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0164750Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0164820Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0164930Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0165300Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0165390Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0165470Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0165550Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0165590Z         """
2025-01-07T17:55:43.0165730Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0165810Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0165870Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0165920Z             {
2025-01-07T17:55:43.0165970Z                 "nus": packet_nus,
2025-01-07T17:55:43.0166070Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0166140Z                 "energies": packet_energies,
2025-01-07T17:55:43.0166230Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0166350Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0166460Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0166660Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0166770Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0166820Z             }
2025-01-07T17:55:43.0166860Z         )
2025-01-07T17:55:43.0166910Z     
2025-01-07T17:55:43.0166970Z         # Save other properties
2025-01-07T17:55:43.0167030Z         self.lines_df = lines_df
2025-01-07T17:55:43.0167090Z         self.r_inner = r_inner
2025-01-07T17:55:43.0167190Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0167300Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0167510Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0167600Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0167680Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0167730Z         )
2025-01-07T17:55:43.0167810Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0167870Z         self.t_inner = t_inner
2025-01-07T17:55:43.0167950Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0168010Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0168070Z         self.v_inner = v_inner
2025-01-07T17:55:43.0168120Z         self.v_outer = v_outer
2025-01-07T17:55:43.0168160Z     
2025-01-07T17:55:43.0168240Z         # First check if both options are provided
2025-01-07T17:55:43.0168370Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0168420Z >           raise ValueError(
2025-01-07T17:55:43.0168530Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0168660Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0168710Z             )
2025-01-07T17:55:43.0168990Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0168990Z 
2025-01-07T17:55:43.0169130Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0169330Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] _
2025-01-07T17:55:43.0169340Z 
2025-01-07T17:55:43.0169500Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0169510Z 
2025-01-07T17:55:43.0169570Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0169630Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0169680Z         """
2025-01-07T17:55:43.0169800Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0169840Z     
2025-01-07T17:55:43.0169890Z         Parameters:
2025-01-07T17:55:43.0170000Z         -----------
2025-01-07T17:55:43.0170090Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0170130Z     
2025-01-07T17:55:43.0173630Z         Returns:
2025-01-07T17:55:43.0173690Z         --------
2025-01-07T17:55:43.0173740Z         An LIVPlotter instance.
2025-01-07T17:55:43.0173790Z         """
2025-01-07T17:55:43.0173890Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0173890Z 
2025-01-07T17:55:43.0174000Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0174090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0174220Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0174330Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0174510Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0174610Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0174760Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0174810Z     return cls(
2025-01-07T17:55:43.0174900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0174900Z 
2025-01-07T17:55:43.0175140Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0175250Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0175400Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0175530Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0175690Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0175910Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0176060Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0176140Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0176270Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0176360Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0176450Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0176460Z 
2025-01-07T17:55:43.0176620Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0176760Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0176840Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0177000Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0177050Z        0.00025518])
2025-01-07T17:55:43.0177180Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0177340Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0177440Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0177540Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0177700Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0177780Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0177970Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0178120Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0178210Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0178270Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0178350Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0178420Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0178650Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0178790Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0178890Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0179010Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0179150Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0179250Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0179480Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0179610Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0179700Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0179750Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0179760Z 
2025-01-07T17:55:43.0179810Z     def __init__(
2025-01-07T17:55:43.0179850Z         self,
2025-01-07T17:55:43.0179910Z         last_interaction_type,
2025-01-07T17:55:43.0179970Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0180030Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0180090Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0180150Z         last_interaction_in_r,
2025-01-07T17:55:43.0180190Z         lines_df,
2025-01-07T17:55:43.0180240Z         packet_nus,
2025-01-07T17:55:43.0180290Z         packet_energies,
2025-01-07T17:55:43.0180340Z         r_inner,
2025-01-07T17:55:43.0180390Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0180530Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0180700Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0180760Z         spectrum_wavelength,
2025-01-07T17:55:43.0180810Z         t_inner,
2025-01-07T17:55:43.0180870Z         time_of_simulation,
2025-01-07T17:55:43.0180920Z         time_explosion,
2025-01-07T17:55:43.0180970Z         v_inner,
2025-01-07T17:55:43.0181020Z         v_outer,
2025-01-07T17:55:43.0181060Z         velocity
2025-01-07T17:55:43.0181110Z     ):
2025-01-07T17:55:43.0181150Z         """
2025-01-07T17:55:43.0181330Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0181370Z     
2025-01-07T17:55:43.0181420Z         Parameters
2025-01-07T17:55:43.0181460Z         ----------
2025-01-07T17:55:43.0181530Z         last_interaction_type : np.array
2025-01-07T17:55:43.0181650Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0181730Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0181810Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0181920Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0181990Z             absorption (interaction in)
2025-01-07T17:55:43.0182060Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0182170Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0182230Z             emission (interaction out)
2025-01-07T17:55:43.0182300Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0182420Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0182490Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0182600Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0182660Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0182780Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0182850Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0182980Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0183070Z             unit of Hz
2025-01-07T17:55:43.0183150Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0183240Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0183310Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0183390Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0183470Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0183560Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0183640Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0183730Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0183810Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0183910Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0183970Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0184070Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0184140Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0184230Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0184270Z         """
2025-01-07T17:55:43.0184410Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0184490Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0184550Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0184590Z             {
2025-01-07T17:55:43.0184650Z                 "nus": packet_nus,
2025-01-07T17:55:43.0184750Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0184810Z                 "energies": packet_energies,
2025-01-07T17:55:43.0184900Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0185200Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0185320Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0185430Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0185530Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0185570Z             }
2025-01-07T17:55:43.0185620Z         )
2025-01-07T17:55:43.0185660Z     
2025-01-07T17:55:43.0185720Z         # Save other properties
2025-01-07T17:55:43.0185770Z         self.lines_df = lines_df
2025-01-07T17:55:43.0185830Z         self.r_inner = r_inner
2025-01-07T17:55:43.0185940Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0186040Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0186140Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0186220Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0186300Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0186340Z         )
2025-01-07T17:55:43.0186420Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0186480Z         self.t_inner = t_inner
2025-01-07T17:55:43.0186570Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0186630Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0186690Z         self.v_inner = v_inner
2025-01-07T17:55:43.0186740Z         self.v_outer = v_outer
2025-01-07T17:55:43.0186780Z     
2025-01-07T17:55:43.0186850Z         # First check if both options are provided
2025-01-07T17:55:43.0192100Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0192180Z >           raise ValueError(
2025-01-07T17:55:43.0192290Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0192420Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0192470Z             )
2025-01-07T17:55:43.0192740Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0193000Z 
2025-01-07T17:55:43.0193140Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0193360Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-new_bin_edges] _
2025-01-07T17:55:43.0193360Z 
2025-01-07T17:55:43.0193520Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0193530Z 
2025-01-07T17:55:43.0193590Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0193650Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0193690Z         """
2025-01-07T17:55:43.0193810Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0193850Z     
2025-01-07T17:55:43.0193900Z         Parameters:
2025-01-07T17:55:43.0193950Z         -----------
2025-01-07T17:55:43.0194040Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0194090Z     
2025-01-07T17:55:43.0194140Z         Returns:
2025-01-07T17:55:43.0194180Z         --------
2025-01-07T17:55:43.0194240Z         An LIVPlotter instance.
2025-01-07T17:55:43.0194280Z         """
2025-01-07T17:55:43.0194380Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0194390Z 
2025-01-07T17:55:43.0194490Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0194590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0194700Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0194820Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0194980Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0195090Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0195320Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0195460Z     return cls(
2025-01-07T17:55:43.0195550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0195550Z 
2025-01-07T17:55:43.0195760Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0195870Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0196010Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0196140Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0196300Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0196380Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0196520Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0196600Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0196720Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0196820Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0197000Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0197010Z 
2025-01-07T17:55:43.0197080Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0197230Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0197310Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0197470Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0197510Z        0.00025518])
2025-01-07T17:55:43.0197650Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0197810Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0197910Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0198120Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0198280Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0198370Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0198620Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0198770Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0198860Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0198930Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0199010Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0199080Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0199200Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0199340Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0199440Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0199570Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0199710Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0199800Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0199930Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0200030Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0200120Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0200250Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0200250Z 
2025-01-07T17:55:43.0200310Z     def __init__(
2025-01-07T17:55:43.0200350Z         self,
2025-01-07T17:55:43.0200420Z         last_interaction_type,
2025-01-07T17:55:43.0200480Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0200540Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0200600Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0200660Z         last_interaction_in_r,
2025-01-07T17:55:43.0200710Z         lines_df,
2025-01-07T17:55:43.0200750Z         packet_nus,
2025-01-07T17:55:43.0200810Z         packet_energies,
2025-01-07T17:55:43.0200850Z         r_inner,
2025-01-07T17:55:43.0200910Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0201050Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0201120Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0201180Z         spectrum_wavelength,
2025-01-07T17:55:43.0201230Z         t_inner,
2025-01-07T17:55:43.0201280Z         time_of_simulation,
2025-01-07T17:55:43.0201330Z         time_explosion,
2025-01-07T17:55:43.0201370Z         v_inner,
2025-01-07T17:55:43.0201420Z         v_outer,
2025-01-07T17:55:43.0201460Z         velocity
2025-01-07T17:55:43.0201510Z     ):
2025-01-07T17:55:43.0201550Z         """
2025-01-07T17:55:43.0201730Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0201770Z     
2025-01-07T17:55:43.0201820Z         Parameters
2025-01-07T17:55:43.0201870Z         ----------
2025-01-07T17:55:43.0201930Z         last_interaction_type : np.array
2025-01-07T17:55:43.0202050Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0202140Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0202210Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0202320Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0202380Z             absorption (interaction in)
2025-01-07T17:55:43.0202450Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0202570Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0202670Z             emission (interaction out)
2025-01-07T17:55:43.0202750Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0202870Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0202940Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0203060Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0203110Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0203240Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0203300Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0203430Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0203480Z             unit of Hz
2025-01-07T17:55:43.0203550Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0203720Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0203830Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0203920Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0204000Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0204100Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0204180Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0204270Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0204340Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0204450Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0204500Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0204600Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0204770Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0204870Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0204920Z         """
2025-01-07T17:55:43.0205060Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0205130Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0205200Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0205250Z             {
2025-01-07T17:55:43.0205300Z                 "nus": packet_nus,
2025-01-07T17:55:43.0205400Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0205460Z                 "energies": packet_energies,
2025-01-07T17:55:43.0205560Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0205670Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0205790Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0205900Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0205990Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0206040Z             }
2025-01-07T17:55:43.0206080Z         )
2025-01-07T17:55:43.0206130Z     
2025-01-07T17:55:43.0206180Z         # Save other properties
2025-01-07T17:55:43.0206240Z         self.lines_df = lines_df
2025-01-07T17:55:43.0206300Z         self.r_inner = r_inner
2025-01-07T17:55:43.0206410Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0206510Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0206680Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0206780Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0206850Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0206890Z         )
2025-01-07T17:55:43.0206980Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0207040Z         self.t_inner = t_inner
2025-01-07T17:55:43.0207130Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0207270Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0207320Z         self.v_inner = v_inner
2025-01-07T17:55:43.0207370Z         self.v_outer = v_outer
2025-01-07T17:55:43.0207420Z     
2025-01-07T17:55:43.0207490Z         # First check if both options are provided
2025-01-07T17:55:43.0207620Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0207680Z >           raise ValueError(
2025-01-07T17:55:43.0207790Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0207920Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0207960Z             )
2025-01-07T17:55:43.0208310Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0208310Z 
2025-01-07T17:55:43.0208460Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0208670Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] _
2025-01-07T17:55:43.0208670Z 
2025-01-07T17:55:43.0208830Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0208840Z 
2025-01-07T17:55:43.0208900Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0208960Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0209000Z         """
2025-01-07T17:55:43.0209120Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0209160Z     
2025-01-07T17:55:43.0209210Z         Parameters:
2025-01-07T17:55:43.0209260Z         -----------
2025-01-07T17:55:43.0209350Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0209390Z     
2025-01-07T17:55:43.0209440Z         Returns:
2025-01-07T17:55:43.0209620Z         --------
2025-01-07T17:55:43.0209690Z         An LIVPlotter instance.
2025-01-07T17:55:43.0209730Z         """
2025-01-07T17:55:43.0209840Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0209840Z 
2025-01-07T17:55:43.0209950Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0210040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0210160Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0210270Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0210430Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0210530Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0210690Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0210730Z     return cls(
2025-01-07T17:55:43.0210830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0210830Z 
2025-01-07T17:55:43.0211030Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0211150Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0211290Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0211420Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0211580Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0211650Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0211790Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0211870Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0211990Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0212080Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0212170Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0212440Z 
2025-01-07T17:55:43.0212500Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0212630Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0212710Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0212860Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0212910Z        0.00025518])
2025-01-07T17:55:43.0213030Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0213190Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0213290Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0213390Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0213550Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0213640Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0213830Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0213970Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0214070Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0214130Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0214210Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0214270Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0214400Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0214580Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0214690Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0214820Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0214950Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0215050Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0215180Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0215280Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0215370Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0215420Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0215430Z 
2025-01-07T17:55:43.0215480Z     def __init__(
2025-01-07T17:55:43.0215520Z         self,
2025-01-07T17:55:43.0215580Z         last_interaction_type,
2025-01-07T17:55:43.0215640Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0215700Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0215770Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0215830Z         last_interaction_in_r,
2025-01-07T17:55:43.0215870Z         lines_df,
2025-01-07T17:55:43.0215920Z         packet_nus,
2025-01-07T17:55:43.0215970Z         packet_energies,
2025-01-07T17:55:43.0216020Z         r_inner,
2025-01-07T17:55:43.0216070Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0216990Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0217090Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0217150Z         spectrum_wavelength,
2025-01-07T17:55:43.0217190Z         t_inner,
2025-01-07T17:55:43.0217250Z         time_of_simulation,
2025-01-07T17:55:43.0217300Z         time_explosion,
2025-01-07T17:55:43.0217350Z         v_inner,
2025-01-07T17:55:43.0217390Z         v_outer,
2025-01-07T17:55:43.0217440Z         velocity
2025-01-07T17:55:43.0217480Z     ):
2025-01-07T17:55:43.0217540Z         """
2025-01-07T17:55:43.0217710Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0217880Z     
2025-01-07T17:55:43.0217930Z         Parameters
2025-01-07T17:55:43.0217980Z         ----------
2025-01-07T17:55:43.0218040Z         last_interaction_type : np.array
2025-01-07T17:55:43.0218160Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0218250Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0218320Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0218440Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0218500Z             absorption (interaction in)
2025-01-07T17:55:43.0218570Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0218680Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0218750Z             emission (interaction out)
2025-01-07T17:55:43.0218820Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0219040Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0219140Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0219260Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0219320Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0219440Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0219510Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0219630Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0219680Z             unit of Hz
2025-01-07T17:55:43.0219750Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0219850Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0220030Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0220120Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0220210Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0220300Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0220380Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0220470Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0220550Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0220650Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0220710Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0220800Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0220870Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0220950Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0221000Z         """
2025-01-07T17:55:43.0221140Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0221210Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0221280Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0221330Z             {
2025-01-07T17:55:43.0221390Z                 "nus": packet_nus,
2025-01-07T17:55:43.0221480Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0221560Z                 "energies": packet_energies,
2025-01-07T17:55:43.0221650Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0221770Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0221880Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0221990Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0222080Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0222120Z             }
2025-01-07T17:55:43.0222170Z         )
2025-01-07T17:55:43.0222210Z     
2025-01-07T17:55:43.0222270Z         # Save other properties
2025-01-07T17:55:43.0222390Z         self.lines_df = lines_df
2025-01-07T17:55:43.0222450Z         self.r_inner = r_inner
2025-01-07T17:55:43.0222550Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0222660Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0222760Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0222840Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0222910Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0222950Z         )
2025-01-07T17:55:43.0223040Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0223100Z         self.t_inner = t_inner
2025-01-07T17:55:43.0223180Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0223250Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0223310Z         self.v_inner = v_inner
2025-01-07T17:55:43.0223370Z         self.v_outer = v_outer
2025-01-07T17:55:43.0223410Z     
2025-01-07T17:55:43.0223500Z         # First check if both options are provided
2025-01-07T17:55:43.0223640Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0223700Z >           raise ValueError(
2025-01-07T17:55:43.0223810Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0223930Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0223980Z             )
2025-01-07T17:55:43.0224250Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0224250Z 
2025-01-07T17:55:43.0224390Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0224660Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_colors] _
2025-01-07T17:55:43.0224660Z 
2025-01-07T17:55:43.0224820Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0224830Z 
2025-01-07T17:55:43.0224890Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0224950Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0225000Z         """
2025-01-07T17:55:43.0225120Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0225160Z     
2025-01-07T17:55:43.0225210Z         Parameters:
2025-01-07T17:55:43.0225260Z         -----------
2025-01-07T17:55:43.0225350Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0225390Z     
2025-01-07T17:55:43.0225440Z         Returns:
2025-01-07T17:55:43.0225480Z         --------
2025-01-07T17:55:43.0225540Z         An LIVPlotter instance.
2025-01-07T17:55:43.0225580Z         """
2025-01-07T17:55:43.0225690Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0225690Z 
2025-01-07T17:55:43.0225790Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0225890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0226010Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0226120Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0226290Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0226390Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0226650Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0226720Z     return cls(
2025-01-07T17:55:43.0226810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0226810Z 
2025-01-07T17:55:43.0227020Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0227140Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0227270Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0227560Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0227720Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0227800Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0227940Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0228010Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0228150Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0228230Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0228330Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0228340Z 
2025-01-07T17:55:43.0228390Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0228520Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0228600Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0228750Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0228790Z        0.00025518])
2025-01-07T17:55:43.0228920Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0229080Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0229180Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0229280Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0229430Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0229670Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0229860Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0230010Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0230110Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0230170Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0230250Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0230310Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0230440Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0230570Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0230670Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0230790Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0230930Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0231040Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0231160Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0231260Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0231350Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0231400Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0231410Z 
2025-01-07T17:55:43.0231450Z     def __init__(
2025-01-07T17:55:43.0231500Z         self,
2025-01-07T17:55:43.0231560Z         last_interaction_type,
2025-01-07T17:55:43.0231620Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0231680Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0231740Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0231800Z         last_interaction_in_r,
2025-01-07T17:55:43.0231850Z         lines_df,
2025-01-07T17:55:43.0232160Z         packet_nus,
2025-01-07T17:55:43.0232210Z         packet_energies,
2025-01-07T17:55:43.0232250Z         r_inner,
2025-01-07T17:55:43.0232310Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0232450Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0232520Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0232570Z         spectrum_wavelength,
2025-01-07T17:55:43.0232620Z         t_inner,
2025-01-07T17:55:43.0232670Z         time_of_simulation,
2025-01-07T17:55:43.0232720Z         time_explosion,
2025-01-07T17:55:43.0232770Z         v_inner,
2025-01-07T17:55:43.0232810Z         v_outer,
2025-01-07T17:55:43.0232860Z         velocity
2025-01-07T17:55:43.0232900Z     ):
2025-01-07T17:55:43.0232940Z         """
2025-01-07T17:55:43.0233120Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0233170Z     
2025-01-07T17:55:43.0233210Z         Parameters
2025-01-07T17:55:43.0233270Z         ----------
2025-01-07T17:55:43.0233330Z         last_interaction_type : np.array
2025-01-07T17:55:43.0233460Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0233860Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0233940Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0234050Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0234120Z             absorption (interaction in)
2025-01-07T17:55:43.0234190Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0234300Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0234360Z             emission (interaction out)
2025-01-07T17:55:43.0234430Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0234650Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0234720Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0234850Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0234900Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0235030Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0235100Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0235260Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0235340Z             unit of Hz
2025-01-07T17:55:43.0235420Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0235710Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0235790Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0235880Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0235960Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0236070Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0236160Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0236260Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0236330Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0236440Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0236500Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0236600Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0236670Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0236750Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0236820Z         """
2025-01-07T17:55:43.0236970Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0237060Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0237130Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0237180Z             {
2025-01-07T17:55:43.0237230Z                 "nus": packet_nus,
2025-01-07T17:55:43.0237490Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0237560Z                 "energies": packet_energies,
2025-01-07T17:55:43.0237660Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0237780Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0237900Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0238010Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0238100Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0238150Z             }
2025-01-07T17:55:43.0238190Z         )
2025-01-07T17:55:43.0238240Z     
2025-01-07T17:55:43.0238290Z         # Save other properties
2025-01-07T17:55:43.0238360Z         self.lines_df = lines_df
2025-01-07T17:55:43.0238420Z         self.r_inner = r_inner
2025-01-07T17:55:43.0238540Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0238650Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0238750Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0238830Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0238900Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0238950Z         )
2025-01-07T17:55:43.0239030Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0239090Z         self.t_inner = t_inner
2025-01-07T17:55:43.0239170Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0239240Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0239300Z         self.v_inner = v_inner
2025-01-07T17:55:43.0239350Z         self.v_outer = v_outer
2025-01-07T17:55:43.0239390Z     
2025-01-07T17:55:43.0239560Z         # First check if both options are provided
2025-01-07T17:55:43.0239920Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0240000Z >           raise ValueError(
2025-01-07T17:55:43.0240110Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0240240Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0240290Z             )
2025-01-07T17:55:43.0240570Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0240570Z 
2025-01-07T17:55:43.0240710Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0240920Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-new_bin_edges] _
2025-01-07T17:55:43.0240920Z 
2025-01-07T17:55:43.0241090Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0241090Z 
2025-01-07T17:55:43.0241150Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0246220Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0246320Z         """
2025-01-07T17:55:43.0246450Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0246490Z     
2025-01-07T17:55:43.0246540Z         Parameters:
2025-01-07T17:55:43.0246590Z         -----------
2025-01-07T17:55:43.0246680Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0246720Z     
2025-01-07T17:55:43.0246770Z         Returns:
2025-01-07T17:55:43.0246810Z         --------
2025-01-07T17:55:43.0246880Z         An LIVPlotter instance.
2025-01-07T17:55:43.0246920Z         """
2025-01-07T17:55:43.0247020Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0247020Z 
2025-01-07T17:55:43.0247120Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0247220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0247350Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0247700Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0247870Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0247970Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0248130Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0248180Z     return cls(
2025-01-07T17:55:43.0248270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0248270Z 
2025-01-07T17:55:43.0248470Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0248580Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0248720Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0248860Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0249020Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0249100Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0249240Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0249320Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0249450Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0249540Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0249630Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0249630Z 
2025-01-07T17:55:43.0249680Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0249910Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0250000Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0250160Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0250200Z        0.00025518])
2025-01-07T17:55:43.0250320Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0250480Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0250570Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0250680Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0250830Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0250920Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0251100Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0251250Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0251350Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0251410Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0251490Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0251550Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0251680Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0251810Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0251920Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0252030Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0252170Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0252280Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0252400Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0252550Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0252650Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0252700Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0252710Z 
2025-01-07T17:55:43.0252750Z     def __init__(
2025-01-07T17:55:43.0252800Z         self,
2025-01-07T17:55:43.0252860Z         last_interaction_type,
2025-01-07T17:55:43.0252920Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0252980Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0253040Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0253100Z         last_interaction_in_r,
2025-01-07T17:55:43.0253140Z         lines_df,
2025-01-07T17:55:43.0253190Z         packet_nus,
2025-01-07T17:55:43.0253250Z         packet_energies,
2025-01-07T17:55:43.0253310Z         r_inner,
2025-01-07T17:55:43.0253370Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0253520Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0253590Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0253650Z         spectrum_wavelength,
2025-01-07T17:55:43.0253690Z         t_inner,
2025-01-07T17:55:43.0253750Z         time_of_simulation,
2025-01-07T17:55:43.0253800Z         time_explosion,
2025-01-07T17:55:43.0253840Z         v_inner,
2025-01-07T17:55:43.0253890Z         v_outer,
2025-01-07T17:55:43.0253930Z         velocity
2025-01-07T17:55:43.0253970Z     ):
2025-01-07T17:55:43.0254030Z         """
2025-01-07T17:55:43.0254200Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0254250Z     
2025-01-07T17:55:43.0254290Z         Parameters
2025-01-07T17:55:43.0254340Z         ----------
2025-01-07T17:55:43.0254710Z         last_interaction_type : np.array
2025-01-07T17:55:43.0254840Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0254940Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0255010Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0255130Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0255190Z             absorption (interaction in)
2025-01-07T17:55:43.0255270Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0255370Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0255430Z             emission (interaction out)
2025-01-07T17:55:43.0255500Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0255620Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0255680Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0255800Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0255860Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0255990Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0256060Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0256290Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0256410Z             unit of Hz
2025-01-07T17:55:43.0256490Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0256590Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0256650Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0256740Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0256820Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0256920Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0256990Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0257100Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0257170Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0257550Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0257620Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0257710Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0257770Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0257860Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0257910Z         """
2025-01-07T17:55:43.0258040Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0258120Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0258190Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0258230Z             {
2025-01-07T17:55:43.0258290Z                 "nus": packet_nus,
2025-01-07T17:55:43.0258390Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0258460Z                 "energies": packet_energies,
2025-01-07T17:55:43.0258550Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0258670Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0258780Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0258900Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0259000Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0259050Z             }
2025-01-07T17:55:43.0259090Z         )
2025-01-07T17:55:43.0259140Z     
2025-01-07T17:55:43.0259190Z         # Save other properties
2025-01-07T17:55:43.0259250Z         self.lines_df = lines_df
2025-01-07T17:55:43.0259310Z         self.r_inner = r_inner
2025-01-07T17:55:43.0259420Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0259590Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0259700Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0259790Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0259860Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0259910Z         )
2025-01-07T17:55:43.0259990Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0260050Z         self.t_inner = t_inner
2025-01-07T17:55:43.0260130Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0260200Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0260250Z         self.v_inner = v_inner
2025-01-07T17:55:43.0260300Z         self.v_outer = v_outer
2025-01-07T17:55:43.0260350Z     
2025-01-07T17:55:43.0260420Z         # First check if both options are provided
2025-01-07T17:55:43.0260560Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0260620Z >           raise ValueError(
2025-01-07T17:55:43.0260730Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0260860Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0260900Z             )
2025-01-07T17:55:43.0261180Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0261180Z 
2025-01-07T17:55:43.0261320Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0261530Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] _
2025-01-07T17:55:43.0261530Z 
2025-01-07T17:55:43.0261700Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0261700Z 
2025-01-07T17:55:43.0261760Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0261830Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0261870Z         """
2025-01-07T17:55:43.0261990Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0262090Z     
2025-01-07T17:55:43.0262140Z         Parameters:
2025-01-07T17:55:43.0262190Z         -----------
2025-01-07T17:55:43.0262280Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0262320Z     
2025-01-07T17:55:43.0262370Z         Returns:
2025-01-07T17:55:43.0262410Z         --------
2025-01-07T17:55:43.0262470Z         An LIVPlotter instance.
2025-01-07T17:55:43.0262510Z         """
2025-01-07T17:55:43.0262610Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0262610Z 
2025-01-07T17:55:43.0262720Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0262800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0262930Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0263050Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0263210Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0263320Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0263470Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0263520Z     return cls(
2025-01-07T17:55:43.0263610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0263610Z 
2025-01-07T17:55:43.0263820Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0263930Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0264070Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0264200Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0264410Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0264500Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0264650Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0264740Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0264860Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0264960Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0265050Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0265050Z 
2025-01-07T17:55:43.0265110Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0265230Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0265320Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0265640Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0265740Z        0.00025518])
2025-01-07T17:55:43.0265870Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0266030Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0266140Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0266230Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0266400Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0266480Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0266670Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0266820Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0266910Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0266980Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0267070Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0267370Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0267500Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0267650Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0267740Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0267870Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0268000Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0268110Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0268240Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0268340Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0268430Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0268480Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0268480Z 
2025-01-07T17:55:43.0268540Z     def __init__(
2025-01-07T17:55:43.0268580Z         self,
2025-01-07T17:55:43.0268640Z         last_interaction_type,
2025-01-07T17:55:43.0268700Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0268770Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0268830Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0268880Z         last_interaction_in_r,
2025-01-07T17:55:43.0268930Z         lines_df,
2025-01-07T17:55:43.0268980Z         packet_nus,
2025-01-07T17:55:43.0269040Z         packet_energies,
2025-01-07T17:55:43.0269080Z         r_inner,
2025-01-07T17:55:43.0269140Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0269360Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0269430Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0269500Z         spectrum_wavelength,
2025-01-07T17:55:43.0269540Z         t_inner,
2025-01-07T17:55:43.0269600Z         time_of_simulation,
2025-01-07T17:55:43.0269650Z         time_explosion,
2025-01-07T17:55:43.0269700Z         v_inner,
2025-01-07T17:55:43.0269740Z         v_outer,
2025-01-07T17:55:43.0269780Z         velocity
2025-01-07T17:55:43.0269830Z     ):
2025-01-07T17:55:43.0269870Z         """
2025-01-07T17:55:43.0270050Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0270090Z     
2025-01-07T17:55:43.0270140Z         Parameters
2025-01-07T17:55:43.0270190Z         ----------
2025-01-07T17:55:43.0270260Z         last_interaction_type : np.array
2025-01-07T17:55:43.0270390Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0270480Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0270550Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0270660Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0270730Z             absorption (interaction in)
2025-01-07T17:55:43.0270800Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0270910Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0270980Z             emission (interaction out)
2025-01-07T17:55:43.0271050Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0271270Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0271370Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0271490Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0271550Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0271690Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0271750Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0271880Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0272040Z             unit of Hz
2025-01-07T17:55:43.0272110Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0272210Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0272270Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0272360Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0272440Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0272560Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0272640Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0272730Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0272800Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0272910Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0272970Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0273070Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0273140Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0273230Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0273270Z         """
2025-01-07T17:55:43.0273400Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0273500Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0273570Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0273610Z             {
2025-01-07T17:55:43.0273670Z                 "nus": packet_nus,
2025-01-07T17:55:43.0273770Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0273830Z                 "energies": packet_energies,
2025-01-07T17:55:43.0274150Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0274270Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0274400Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0274510Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0274600Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0274640Z             }
2025-01-07T17:55:43.0274680Z         )
2025-01-07T17:55:43.0274730Z     
2025-01-07T17:55:43.0274780Z         # Save other properties
2025-01-07T17:55:43.0274850Z         self.lines_df = lines_df
2025-01-07T17:55:43.0274900Z         self.r_inner = r_inner
2025-01-07T17:55:43.0275010Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0275110Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0275210Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0275290Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0275370Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0275420Z         )
2025-01-07T17:55:43.0275500Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0275640Z         self.t_inner = t_inner
2025-01-07T17:55:43.0275730Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0275790Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0275850Z         self.v_inner = v_inner
2025-01-07T17:55:43.0275910Z         self.v_outer = v_outer
2025-01-07T17:55:43.0275950Z     
2025-01-07T17:55:43.0276020Z         # First check if both options are provided
2025-01-07T17:55:43.0276150Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0276220Z >           raise ValueError(
2025-01-07T17:55:43.0276320Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0276450Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0276490Z             )
2025-01-07T17:55:43.0276870Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0276870Z 
2025-01-07T17:55:43.0277000Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0277210Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] _
2025-01-07T17:55:43.0277210Z 
2025-01-07T17:55:43.0277380Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0277380Z 
2025-01-07T17:55:43.0277440Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0277510Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0277550Z         """
2025-01-07T17:55:43.0277670Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0277710Z     
2025-01-07T17:55:43.0277760Z         Parameters:
2025-01-07T17:55:43.0277810Z         -----------
2025-01-07T17:55:43.0277900Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0277940Z     
2025-01-07T17:55:43.0277990Z         Returns:
2025-01-07T17:55:43.0278040Z         --------
2025-01-07T17:55:43.0278100Z         An LIVPlotter instance.
2025-01-07T17:55:43.0278150Z         """
2025-01-07T17:55:43.0278250Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0278250Z 
2025-01-07T17:55:43.0278350Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0278440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0278560Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0278670Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0278840Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0278990Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0279190Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0279250Z     return cls(
2025-01-07T17:55:43.0279330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0279330Z 
2025-01-07T17:55:43.0279550Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0279650Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0279790Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0279920Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0280080Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0280320Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0280590Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0280670Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0280810Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0280900Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0280990Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0280990Z 
2025-01-07T17:55:43.0281060Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0281180Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0281280Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0281430Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0281480Z        0.00025518])
2025-01-07T17:55:43.0281610Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0281760Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0282070Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0282170Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0282330Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0282410Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0282600Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0282740Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0282840Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0282900Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0282990Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0283060Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0283190Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0283320Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0283430Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0283550Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0283680Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0283780Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0283900Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0284010Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0284160Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0284220Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0284520Z 
2025-01-07T17:55:43.0284590Z     def __init__(
2025-01-07T17:55:43.0284640Z         self,
2025-01-07T17:55:43.0284690Z         last_interaction_type,
2025-01-07T17:55:43.0284750Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0284830Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0284890Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0284950Z         last_interaction_in_r,
2025-01-07T17:55:43.0285000Z         lines_df,
2025-01-07T17:55:43.0285040Z         packet_nus,
2025-01-07T17:55:43.0285090Z         packet_energies,
2025-01-07T17:55:43.0285140Z         r_inner,
2025-01-07T17:55:43.0285200Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0285340Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0285410Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0285470Z         spectrum_wavelength,
2025-01-07T17:55:43.0285520Z         t_inner,
2025-01-07T17:55:43.0285570Z         time_of_simulation,
2025-01-07T17:55:43.0285620Z         time_explosion,
2025-01-07T17:55:43.0285670Z         v_inner,
2025-01-07T17:55:43.0285710Z         v_outer,
2025-01-07T17:55:43.0285760Z         velocity
2025-01-07T17:55:43.0285800Z     ):
2025-01-07T17:55:43.0285850Z         """
2025-01-07T17:55:43.0286020Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0286060Z     
2025-01-07T17:55:43.0286120Z         Parameters
2025-01-07T17:55:43.0286160Z         ----------
2025-01-07T17:55:43.0286230Z         last_interaction_type : np.array
2025-01-07T17:55:43.0286350Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0286440Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0286510Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0286630Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0286690Z             absorption (interaction in)
2025-01-07T17:55:43.0286760Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0286990Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0287060Z             emission (interaction out)
2025-01-07T17:55:43.0287130Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0287240Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0287310Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0287430Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0287490Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0288240Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0288360Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0288500Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0288550Z             unit of Hz
2025-01-07T17:55:43.0288620Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0288730Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0288790Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0288870Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0288960Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0289060Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0289140Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0289230Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0289300Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0289830Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0289910Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0290130Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0290210Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0290290Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0290350Z         """
2025-01-07T17:55:43.0290480Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0290570Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0290630Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0290670Z             {
2025-01-07T17:55:43.0290730Z                 "nus": packet_nus,
2025-01-07T17:55:43.0290830Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0290900Z                 "energies": packet_energies,
2025-01-07T17:55:43.0290990Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0291110Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0291220Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0291340Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0291430Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0291470Z             }
2025-01-07T17:55:43.0291510Z         )
2025-01-07T17:55:43.0291560Z     
2025-01-07T17:55:43.0291620Z         # Save other properties
2025-01-07T17:55:43.0291670Z         self.lines_df = lines_df
2025-01-07T17:55:43.0291730Z         self.r_inner = r_inner
2025-01-07T17:55:43.0291840Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0291940Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0292040Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0292130Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0292200Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0292240Z         )
2025-01-07T17:55:43.0292330Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0292380Z         self.t_inner = t_inner
2025-01-07T17:55:43.0292530Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0292610Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0292660Z         self.v_inner = v_inner
2025-01-07T17:55:43.0292720Z         self.v_outer = v_outer
2025-01-07T17:55:43.0292770Z     
2025-01-07T17:55:43.0292840Z         # First check if both options are provided
2025-01-07T17:55:43.0292980Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0293030Z >           raise ValueError(
2025-01-07T17:55:43.0293140Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0293260Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0293310Z             )
2025-01-07T17:55:43.0293590Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0293600Z 
2025-01-07T17:55:43.0293740Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0293960Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-new_bin_edges] _
2025-01-07T17:55:43.0293960Z 
2025-01-07T17:55:43.0294130Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0294130Z 
2025-01-07T17:55:43.0294190Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0294250Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0294290Z         """
2025-01-07T17:55:43.0294410Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0294460Z     
2025-01-07T17:55:43.0294500Z         Parameters:
2025-01-07T17:55:43.0294550Z         -----------
2025-01-07T17:55:43.0294640Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0294810Z     
2025-01-07T17:55:43.0294860Z         Returns:
2025-01-07T17:55:43.0294910Z         --------
2025-01-07T17:55:43.0294970Z         An LIVPlotter instance.
2025-01-07T17:55:43.0299580Z         """
2025-01-07T17:55:43.0299750Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0299760Z 
2025-01-07T17:55:43.0299870Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0299960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0300090Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0300200Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0300840Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0300950Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0301110Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0301160Z     return cls(
2025-01-07T17:55:43.0301250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0301260Z 
2025-01-07T17:55:43.0301470Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0301580Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0301720Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0302100Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0302400Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0302490Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0302630Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0302710Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0302840Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0302930Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0303730Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0303740Z 
2025-01-07T17:55:43.0303790Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0303920Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0304010Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0304160Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0304210Z        0.00025518])
2025-01-07T17:55:43.0304340Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0304490Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0304600Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0304690Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0304860Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0304940Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0305130Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0305270Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0305370Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0305430Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0305510Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0305580Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0305700Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0305940Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0306040Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0306170Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0306300Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0306400Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0306520Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0306630Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0306710Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0306760Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0306760Z 
2025-01-07T17:55:43.0306810Z     def __init__(
2025-01-07T17:55:43.0307540Z         self,
2025-01-07T17:55:43.0307630Z         last_interaction_type,
2025-01-07T17:55:43.0307700Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0307770Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0307830Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0307880Z         last_interaction_in_r,
2025-01-07T17:55:43.0307930Z         lines_df,
2025-01-07T17:55:43.0307980Z         packet_nus,
2025-01-07T17:55:43.0308030Z         packet_energies,
2025-01-07T17:55:43.0308080Z         r_inner,
2025-01-07T17:55:43.0308140Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0308290Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0308370Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0308420Z         spectrum_wavelength,
2025-01-07T17:55:43.0308470Z         t_inner,
2025-01-07T17:55:43.0308520Z         time_of_simulation,
2025-01-07T17:55:43.0308570Z         time_explosion,
2025-01-07T17:55:43.0308620Z         v_inner,
2025-01-07T17:55:43.0308670Z         v_outer,
2025-01-07T17:55:43.0308710Z         velocity
2025-01-07T17:55:43.0308760Z     ):
2025-01-07T17:55:43.0308940Z         """
2025-01-07T17:55:43.0309130Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0309170Z     
2025-01-07T17:55:43.0309220Z         Parameters
2025-01-07T17:55:43.0309270Z         ----------
2025-01-07T17:55:43.0309340Z         last_interaction_type : np.array
2025-01-07T17:55:43.0309460Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0309550Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0309630Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0309740Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0309810Z             absorption (interaction in)
2025-01-07T17:55:43.0309880Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0310000Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0310060Z             emission (interaction out)
2025-01-07T17:55:43.0310140Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0310250Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0310320Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0310430Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0310490Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0310610Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0310680Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0310810Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0311050Z             unit of Hz
2025-01-07T17:55:43.0311160Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0311360Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0311430Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0311520Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0311610Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0311700Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0311790Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0311880Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0311950Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0312050Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0312110Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0312210Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0312280Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0312360Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0312410Z         """
2025-01-07T17:55:43.0312540Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0312620Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0312690Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0312730Z             {
2025-01-07T17:55:43.0312800Z                 "nus": packet_nus,
2025-01-07T17:55:43.0312900Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0312960Z                 "energies": packet_energies,
2025-01-07T17:55:43.0313050Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0313170Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0313290Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0313390Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0313480Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0313530Z             }
2025-01-07T17:55:43.0313570Z         )
2025-01-07T17:55:43.0313670Z     
2025-01-07T17:55:43.0313730Z         # Save other properties
2025-01-07T17:55:43.0313790Z         self.lines_df = lines_df
2025-01-07T17:55:43.0313840Z         self.r_inner = r_inner
2025-01-07T17:55:43.0313950Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0314060Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0314160Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0314240Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0314310Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0314460Z         )
2025-01-07T17:55:43.0314570Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0314620Z         self.t_inner = t_inner
2025-01-07T17:55:43.0314710Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0314770Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0314830Z         self.v_inner = v_inner
2025-01-07T17:55:43.0314890Z         self.v_outer = v_outer
2025-01-07T17:55:43.0314940Z     
2025-01-07T17:55:43.0315020Z         # First check if both options are provided
2025-01-07T17:55:43.0315160Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0315220Z >           raise ValueError(
2025-01-07T17:55:43.0315330Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0315450Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0315500Z             )
2025-01-07T17:55:43.0315860Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0315860Z 
2025-01-07T17:55:43.0316130Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0316320Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _
2025-01-07T17:55:43.0316320Z 
2025-01-07T17:55:43.0316490Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0316490Z 
2025-01-07T17:55:43.0316550Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0316620Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0316660Z         """
2025-01-07T17:55:43.0316780Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0316820Z     
2025-01-07T17:55:43.0316870Z         Parameters:
2025-01-07T17:55:43.0316920Z         -----------
2025-01-07T17:55:43.0317010Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0317050Z     
2025-01-07T17:55:43.0317100Z         Returns:
2025-01-07T17:55:43.0317140Z         --------
2025-01-07T17:55:43.0317200Z         An LIVPlotter instance.
2025-01-07T17:55:43.0317240Z         """
2025-01-07T17:55:43.0317350Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0317770Z 
2025-01-07T17:55:43.0317900Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0318000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0318120Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0318240Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0318410Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0318510Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0318670Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0318720Z     return cls(
2025-01-07T17:55:43.0318820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0318820Z 
2025-01-07T17:55:43.0319030Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0319150Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0319370Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0319520Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0319670Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0319750Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0319900Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0319970Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0320100Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0320190Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0320280Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0320290Z 
2025-01-07T17:55:43.0320340Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0320470Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0320550Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0320710Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0320760Z        0.00025518])
2025-01-07T17:55:43.0320880Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0321040Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0321130Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0321230Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0321600Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0321690Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0321880Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0322030Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0322120Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0322180Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0322260Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0322330Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0322450Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0322590Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0322690Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0322810Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0322950Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0323050Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0323180Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0323280Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0323360Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0323410Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0323420Z 
2025-01-07T17:55:43.0323460Z     def __init__(
2025-01-07T17:55:43.0323510Z         self,
2025-01-07T17:55:43.0323560Z         last_interaction_type,
2025-01-07T17:55:43.0323630Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0323690Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0323750Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0323810Z         last_interaction_in_r,
2025-01-07T17:55:43.0323960Z         lines_df,
2025-01-07T17:55:43.0324010Z         packet_nus,
2025-01-07T17:55:43.0324060Z         packet_energies,
2025-01-07T17:55:43.0324110Z         r_inner,
2025-01-07T17:55:43.0324170Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0324310Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0324380Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0324440Z         spectrum_wavelength,
2025-01-07T17:55:43.0324490Z         t_inner,
2025-01-07T17:55:43.0324540Z         time_of_simulation,
2025-01-07T17:55:43.0324590Z         time_explosion,
2025-01-07T17:55:43.0324630Z         v_inner,
2025-01-07T17:55:43.0324680Z         v_outer,
2025-01-07T17:55:43.0324720Z         velocity
2025-01-07T17:55:43.0324760Z     ):
2025-01-07T17:55:43.0324810Z         """
2025-01-07T17:55:43.0324980Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0325030Z     
2025-01-07T17:55:43.0325220Z         Parameters
2025-01-07T17:55:43.0325300Z         ----------
2025-01-07T17:55:43.0325370Z         last_interaction_type : np.array
2025-01-07T17:55:43.0325490Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0325580Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0325650Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0325760Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0325820Z             absorption (interaction in)
2025-01-07T17:55:43.0325900Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0326010Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0326080Z             emission (interaction out)
2025-01-07T17:55:43.0326310Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0326430Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0326510Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0326630Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0326680Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0326810Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0326870Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0327000Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0327060Z             unit of Hz
2025-01-07T17:55:43.0327120Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0327220Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0327280Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0327360Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0327450Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0327540Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0327620Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0327730Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0327800Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0327900Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0327960Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0328140Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0328240Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0328330Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0328370Z         """
2025-01-07T17:55:43.0328510Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0328590Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0328650Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0328700Z             {
2025-01-07T17:55:43.0328850Z                 "nus": packet_nus,
2025-01-07T17:55:43.0328950Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0329020Z                 "energies": packet_energies,
2025-01-07T17:55:43.0329110Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0329230Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0329330Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0329450Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0329530Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0329580Z             }
2025-01-07T17:55:43.0329620Z         )
2025-01-07T17:55:43.0329660Z     
2025-01-07T17:55:43.0329720Z         # Save other properties
2025-01-07T17:55:43.0329780Z         self.lines_df = lines_df
2025-01-07T17:55:43.0329840Z         self.r_inner = r_inner
2025-01-07T17:55:43.0329950Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0330060Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0330160Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0330250Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0330390Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0330450Z         )
2025-01-07T17:55:43.0330540Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0330600Z         self.t_inner = t_inner
2025-01-07T17:55:43.0330680Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0330750Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0330810Z         self.v_inner = v_inner
2025-01-07T17:55:43.0330940Z         self.v_outer = v_outer
2025-01-07T17:55:43.0330980Z     
2025-01-07T17:55:43.0331070Z         # First check if both options are provided
2025-01-07T17:55:43.0331210Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0331260Z >           raise ValueError(
2025-01-07T17:55:43.0331370Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0331500Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0331550Z             )
2025-01-07T17:55:43.0331820Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0331830Z 
2025-01-07T17:55:43.0331960Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0332140Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _
2025-01-07T17:55:43.0332140Z 
2025-01-07T17:55:43.0332310Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0332310Z 
2025-01-07T17:55:43.0332380Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0332440Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0332490Z         """
2025-01-07T17:55:43.0332600Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0332640Z     
2025-01-07T17:55:43.0332690Z         Parameters:
2025-01-07T17:55:43.0332740Z         -----------
2025-01-07T17:55:43.0332820Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0332870Z     
2025-01-07T17:55:43.0332910Z         Returns:
2025-01-07T17:55:43.0332960Z         --------
2025-01-07T17:55:43.0333020Z         An LIVPlotter instance.
2025-01-07T17:55:43.0333060Z         """
2025-01-07T17:55:43.0333160Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0333170Z 
2025-01-07T17:55:43.0333280Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0333370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0333570Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0333680Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0333850Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0333950Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0334100Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0334150Z     return cls(
2025-01-07T17:55:43.0334240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0334240Z 
2025-01-07T17:55:43.0334460Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0334650Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0334830Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0334970Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0335140Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0335210Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0335350Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0335430Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0335560Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0335650Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0335740Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0335740Z 
2025-01-07T17:55:43.0335790Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0336050Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0336140Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0336380Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0336440Z        0.00025518])
2025-01-07T17:55:43.0336570Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0336730Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0336830Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0336920Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0337090Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0337180Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0337360Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0337510Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0337600Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0337660Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0337740Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0337810Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0337930Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0338070Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0338160Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0338290Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0338430Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0338530Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0338760Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0338860Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0338940Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0338990Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0339000Z 
2025-01-07T17:55:43.0339050Z     def __init__(
2025-01-07T17:55:43.0339090Z         self,
2025-01-07T17:55:43.0339150Z         last_interaction_type,
2025-01-07T17:55:43.0339210Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0339270Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0339330Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0339380Z         last_interaction_in_r,
2025-01-07T17:55:43.0339430Z         lines_df,
2025-01-07T17:55:43.0339480Z         packet_nus,
2025-01-07T17:55:43.0339540Z         packet_energies,
2025-01-07T17:55:43.0339580Z         r_inner,
2025-01-07T17:55:43.0339640Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0339780Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0339850Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0339910Z         spectrum_wavelength,
2025-01-07T17:55:43.0339950Z         t_inner,
2025-01-07T17:55:43.0340010Z         time_of_simulation,
2025-01-07T17:55:43.0340060Z         time_explosion,
2025-01-07T17:55:43.0340110Z         v_inner,
2025-01-07T17:55:43.0340150Z         v_outer,
2025-01-07T17:55:43.0340200Z         velocity
2025-01-07T17:55:43.0340240Z     ):
2025-01-07T17:55:43.0340280Z         """
2025-01-07T17:55:43.0340460Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0340500Z     
2025-01-07T17:55:43.0340550Z         Parameters
2025-01-07T17:55:43.0341110Z         ----------
2025-01-07T17:55:43.0341210Z         last_interaction_type : np.array
2025-01-07T17:55:43.0341330Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0341420Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0341500Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0341610Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0341670Z             absorption (interaction in)
2025-01-07T17:55:43.0341740Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0341860Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0341910Z             emission (interaction out)
2025-01-07T17:55:43.0341990Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0342100Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0342170Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0342290Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0342340Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0342480Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0342540Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0342660Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0342710Z             unit of Hz
2025-01-07T17:55:43.0342780Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0342880Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0342940Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0343020Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0343110Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0343200Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0343290Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0343380Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0343790Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0343940Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0344000Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0344090Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0344160Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0344250Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0344290Z         """
2025-01-07T17:55:43.0344430Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0344510Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0344580Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0344620Z             {
2025-01-07T17:55:43.0344670Z                 "nus": packet_nus,
2025-01-07T17:55:43.0344780Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0344850Z                 "energies": packet_energies,
2025-01-07T17:55:43.0344950Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0345070Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0345180Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0345290Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0345380Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0345420Z             }
2025-01-07T17:55:43.0345470Z         )
2025-01-07T17:55:43.0345510Z     
2025-01-07T17:55:43.0345570Z         # Save other properties
2025-01-07T17:55:43.0345620Z         self.lines_df = lines_df
2025-01-07T17:55:43.0345680Z         self.r_inner = r_inner
2025-01-07T17:55:43.0345970Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0346080Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0346190Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0346270Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0346340Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0346380Z         )
2025-01-07T17:55:43.0346470Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0346520Z         self.t_inner = t_inner
2025-01-07T17:55:43.0346610Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0346680Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0346730Z         self.v_inner = v_inner
2025-01-07T17:55:43.0346780Z         self.v_outer = v_outer
2025-01-07T17:55:43.0346830Z     
2025-01-07T17:55:43.0346900Z         # First check if both options are provided
2025-01-07T17:55:43.0347040Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0347100Z >           raise ValueError(
2025-01-07T17:55:43.0347210Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0347340Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0347560Z             )
2025-01-07T17:55:43.0347860Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0347870Z 
2025-01-07T17:55:43.0348000Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0348180Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl2] _
2025-01-07T17:55:43.0348180Z 
2025-01-07T17:55:43.0348350Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0348350Z 
2025-01-07T17:55:43.0348420Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0348490Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0348530Z         """
2025-01-07T17:55:43.0348650Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0348810Z     
2025-01-07T17:55:43.0348860Z         Parameters:
2025-01-07T17:55:43.0348910Z         -----------
2025-01-07T17:55:43.0349000Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0349050Z     
2025-01-07T17:55:43.0349100Z         Returns:
2025-01-07T17:55:43.0349140Z         --------
2025-01-07T17:55:43.0349200Z         An LIVPlotter instance.
2025-01-07T17:55:43.0349240Z         """
2025-01-07T17:55:43.0349340Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0349350Z 
2025-01-07T17:55:43.0349450Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0349540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0349660Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0349770Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0349950Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0350050Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0350210Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0350260Z     return cls(
2025-01-07T17:55:43.0350350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0350350Z 
2025-01-07T17:55:43.0355630Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0355870Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0356010Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0356150Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0356520Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0356610Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0356760Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0356840Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0356970Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0357050Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0357150Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0357150Z 
2025-01-07T17:55:43.0357200Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0357330Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0357410Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0357570Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0357620Z        0.00025518])
2025-01-07T17:55:43.0357750Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0357910Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0358000Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0358100Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0358260Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0358350Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0358530Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0359150Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0359270Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0359330Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0359530Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0359600Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0359720Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0359860Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0359960Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0360080Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0360220Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0360310Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0360450Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0360630Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0360760Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0360820Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0360820Z 
2025-01-07T17:55:43.0360860Z     def __init__(
2025-01-07T17:55:43.0360910Z         self,
2025-01-07T17:55:43.0360970Z         last_interaction_type,
2025-01-07T17:55:43.0361040Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0361100Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0361170Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0361220Z         last_interaction_in_r,
2025-01-07T17:55:43.0361270Z         lines_df,
2025-01-07T17:55:43.0361310Z         packet_nus,
2025-01-07T17:55:43.0361370Z         packet_energies,
2025-01-07T17:55:43.0361420Z         r_inner,
2025-01-07T17:55:43.0361480Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0361740Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0361810Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0361870Z         spectrum_wavelength,
2025-01-07T17:55:43.0361920Z         t_inner,
2025-01-07T17:55:43.0361970Z         time_of_simulation,
2025-01-07T17:55:43.0362020Z         time_explosion,
2025-01-07T17:55:43.0362070Z         v_inner,
2025-01-07T17:55:43.0362110Z         v_outer,
2025-01-07T17:55:43.0362160Z         velocity
2025-01-07T17:55:43.0362200Z     ):
2025-01-07T17:55:43.0362250Z         """
2025-01-07T17:55:43.0362420Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0362470Z     
2025-01-07T17:55:43.0362510Z         Parameters
2025-01-07T17:55:43.0362560Z         ----------
2025-01-07T17:55:43.0362630Z         last_interaction_type : np.array
2025-01-07T17:55:43.0362750Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0362830Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0362910Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0363030Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0363090Z             absorption (interaction in)
2025-01-07T17:55:43.0363170Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0363280Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0363340Z             emission (interaction out)
2025-01-07T17:55:43.0363410Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0363520Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0363590Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0363700Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0363760Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0363890Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0363950Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0364130Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0364180Z             unit of Hz
2025-01-07T17:55:43.0364250Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0364350Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0364400Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0364490Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0364570Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0364670Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0364750Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0364850Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0364920Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0365030Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0365090Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0365180Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0365250Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0365340Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0365390Z         """
2025-01-07T17:55:43.0365520Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0365600Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0365860Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0365910Z             {
2025-01-07T17:55:43.0365970Z                 "nus": packet_nus,
2025-01-07T17:55:43.0366070Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0366130Z                 "energies": packet_energies,
2025-01-07T17:55:43.0366480Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0366610Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0366730Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0366840Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0366930Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0366980Z             }
2025-01-07T17:55:43.0367020Z         )
2025-01-07T17:55:43.0367070Z     
2025-01-07T17:55:43.0367120Z         # Save other properties
2025-01-07T17:55:43.0367190Z         self.lines_df = lines_df
2025-01-07T17:55:43.0367240Z         self.r_inner = r_inner
2025-01-07T17:55:43.0367350Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0367450Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0367550Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0367630Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0367720Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0367760Z         )
2025-01-07T17:55:43.0367850Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0367900Z         self.t_inner = t_inner
2025-01-07T17:55:43.0367980Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0368060Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0368110Z         self.v_inner = v_inner
2025-01-07T17:55:43.0368160Z         self.v_outer = v_outer
2025-01-07T17:55:43.0368200Z     
2025-01-07T17:55:43.0368280Z         # First check if both options are provided
2025-01-07T17:55:43.0368410Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0368470Z >           raise ValueError(
2025-01-07T17:55:43.0368580Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0368700Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0369360Z             )
2025-01-07T17:55:43.0369680Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0369690Z 
2025-01-07T17:55:43.0369830Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0370010Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl3] _
2025-01-07T17:55:43.0370010Z 
2025-01-07T17:55:43.0370180Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0370180Z 
2025-01-07T17:55:43.0370240Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0370310Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0370360Z         """
2025-01-07T17:55:43.0370480Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0370530Z     
2025-01-07T17:55:43.0370590Z         Parameters:
2025-01-07T17:55:43.0370640Z         -----------
2025-01-07T17:55:43.0370730Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0370770Z     
2025-01-07T17:55:43.0370820Z         Returns:
2025-01-07T17:55:43.0370870Z         --------
2025-01-07T17:55:43.0370930Z         An LIVPlotter instance.
2025-01-07T17:55:43.0370980Z         """
2025-01-07T17:55:43.0371080Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0371080Z 
2025-01-07T17:55:43.0371190Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0371280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0371400Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0371510Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0371830Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0371940Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0372100Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0372150Z     return cls(
2025-01-07T17:55:43.0372230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0372230Z 
2025-01-07T17:55:43.0372440Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0372550Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0372690Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0372830Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0372990Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0373060Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0373220Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0373290Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0373420Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0373520Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0373610Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0373610Z 
2025-01-07T17:55:43.0373670Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0373790Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0373880Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0374030Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0374070Z        0.00025518])
2025-01-07T17:55:43.0374200Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0374350Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0374510Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0374610Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0374780Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0374860Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0375050Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0375190Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0375290Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0375340Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0375430Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0375490Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0375620Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0375760Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0375850Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0375980Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0376110Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0376210Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0376340Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0376440Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0376580Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0376630Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0376640Z 
2025-01-07T17:55:43.0376690Z     def __init__(
2025-01-07T17:55:43.0376730Z         self,
2025-01-07T17:55:43.0376790Z         last_interaction_type,
2025-01-07T17:55:43.0376850Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0376910Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0376970Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0377030Z         last_interaction_in_r,
2025-01-07T17:55:43.0377080Z         lines_df,
2025-01-07T17:55:43.0377130Z         packet_nus,
2025-01-07T17:55:43.0377180Z         packet_energies,
2025-01-07T17:55:43.0377230Z         r_inner,
2025-01-07T17:55:43.0377280Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0377430Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0377490Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0377560Z         spectrum_wavelength,
2025-01-07T17:55:43.0377600Z         t_inner,
2025-01-07T17:55:43.0377660Z         time_of_simulation,
2025-01-07T17:55:43.0377710Z         time_explosion,
2025-01-07T17:55:43.0377750Z         v_inner,
2025-01-07T17:55:43.0377800Z         v_outer,
2025-01-07T17:55:43.0377840Z         velocity
2025-01-07T17:55:43.0377890Z     ):
2025-01-07T17:55:43.0377930Z         """
2025-01-07T17:55:43.0378110Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0378160Z     
2025-01-07T17:55:43.0378210Z         Parameters
2025-01-07T17:55:43.0378260Z         ----------
2025-01-07T17:55:43.0378320Z         last_interaction_type : np.array
2025-01-07T17:55:43.0378440Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0378530Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0378600Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0378720Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0378780Z             absorption (interaction in)
2025-01-07T17:55:43.0378910Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0379030Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0379090Z             emission (interaction out)
2025-01-07T17:55:43.0379160Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0379270Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0379340Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0379450Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0379520Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0379640Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0379710Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0379830Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0379890Z             unit of Hz
2025-01-07T17:55:43.0379960Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0380060Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0380130Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0380210Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0380290Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0380380Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0380460Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0380550Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0380620Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0380730Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0381120Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0381370Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0381450Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0381540Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0381580Z         """
2025-01-07T17:55:43.0381720Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0381800Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0381870Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0381910Z             {
2025-01-07T17:55:43.0381970Z                 "nus": packet_nus,
2025-01-07T17:55:43.0382070Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0382130Z                 "energies": packet_energies,
2025-01-07T17:55:43.0382230Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0382350Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0382460Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0382570Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0382670Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0382720Z             }
2025-01-07T17:55:43.0382760Z         )
2025-01-07T17:55:43.0382800Z     
2025-01-07T17:55:43.0382860Z         # Save other properties
2025-01-07T17:55:43.0382920Z         self.lines_df = lines_df
2025-01-07T17:55:43.0382970Z         self.r_inner = r_inner
2025-01-07T17:55:43.0383080Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0383180Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0383290Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0383370Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0383440Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0383480Z         )
2025-01-07T17:55:43.0383580Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0383630Z         self.t_inner = t_inner
2025-01-07T17:55:43.0383770Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0383830Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0383890Z         self.v_inner = v_inner
2025-01-07T17:55:43.0383940Z         self.v_outer = v_outer
2025-01-07T17:55:43.0384190Z     
2025-01-07T17:55:43.0384270Z         # First check if both options are provided
2025-01-07T17:55:43.0384410Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0384470Z >           raise ValueError(
2025-01-07T17:55:43.0384580Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0384700Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0384740Z             )
2025-01-07T17:55:43.0385030Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0385040Z 
2025-01-07T17:55:43.0385180Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0385350Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _
2025-01-07T17:55:43.0385360Z 
2025-01-07T17:55:43.0385520Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0385520Z 
2025-01-07T17:55:43.0385590Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0385650Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0385690Z         """
2025-01-07T17:55:43.0385810Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0385850Z     
2025-01-07T17:55:43.0385900Z         Parameters:
2025-01-07T17:55:43.0385950Z         -----------
2025-01-07T17:55:43.0386040Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0386250Z     
2025-01-07T17:55:43.0386310Z         Returns:
2025-01-07T17:55:43.0386350Z         --------
2025-01-07T17:55:43.0386420Z         An LIVPlotter instance.
2025-01-07T17:55:43.0386460Z         """
2025-01-07T17:55:43.0386560Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0386560Z 
2025-01-07T17:55:43.0386660Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0386750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0386880Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0386990Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0387150Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0387250Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0387410Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0387450Z     return cls(
2025-01-07T17:55:43.0387540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0387550Z 
2025-01-07T17:55:43.0387760Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0387950Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0388110Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0388240Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0388710Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0388830Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0388980Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0389050Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0389200Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0389280Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0389930Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0389930Z 
2025-01-07T17:55:43.0389980Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0390110Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0390200Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0390350Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0390390Z        0.00025518])
2025-01-07T17:55:43.0390520Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0390670Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0390770Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0390870Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0391030Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0391120Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0391300Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0391450Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0391550Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0391600Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0391690Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0391750Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0391870Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0392100Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0392220Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0392340Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0392480Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0392570Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0392700Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0392800Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0392880Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0392940Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0392940Z 
2025-01-07T17:55:43.0392980Z     def __init__(
2025-01-07T17:55:43.0393030Z         self,
2025-01-07T17:55:43.0393090Z         last_interaction_type,
2025-01-07T17:55:43.0393150Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0393220Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0393280Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0393340Z         last_interaction_in_r,
2025-01-07T17:55:43.0393380Z         lines_df,
2025-01-07T17:55:43.0393430Z         packet_nus,
2025-01-07T17:55:43.0393480Z         packet_energies,
2025-01-07T17:55:43.0393530Z         r_inner,
2025-01-07T17:55:43.0393580Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0393720Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0393790Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0393850Z         spectrum_wavelength,
2025-01-07T17:55:43.0393890Z         t_inner,
2025-01-07T17:55:43.0393940Z         time_of_simulation,
2025-01-07T17:55:43.0393990Z         time_explosion,
2025-01-07T17:55:43.0394050Z         v_inner,
2025-01-07T17:55:43.0394090Z         v_outer,
2025-01-07T17:55:43.0394140Z         velocity
2025-01-07T17:55:43.0394230Z     ):
2025-01-07T17:55:43.0394280Z         """
2025-01-07T17:55:43.0394450Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0394500Z     
2025-01-07T17:55:43.0394540Z         Parameters
2025-01-07T17:55:43.0394590Z         ----------
2025-01-07T17:55:43.0394790Z         last_interaction_type : np.array
2025-01-07T17:55:43.0394980Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0395070Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0395150Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0395270Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0395330Z             absorption (interaction in)
2025-01-07T17:55:43.0395420Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0395530Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0395600Z             emission (interaction out)
2025-01-07T17:55:43.0395670Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0395890Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0395960Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0396080Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0396140Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0396260Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0396330Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0396460Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0396510Z             unit of Hz
2025-01-07T17:55:43.0396570Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0396890Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0396950Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0397040Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0397120Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0397220Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0397300Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0397400Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0397470Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0397570Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0397640Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0397730Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0397800Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0397880Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0397930Z         """
2025-01-07T17:55:43.0398070Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0398150Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0398220Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0398270Z             {
2025-01-07T17:55:43.0398320Z                 "nus": packet_nus,
2025-01-07T17:55:43.0398430Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0398490Z                 "energies": packet_energies,
2025-01-07T17:55:43.0398580Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0398700Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0398810Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0398920Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0399010Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0399070Z             }
2025-01-07T17:55:43.0399190Z         )
2025-01-07T17:55:43.0399230Z     
2025-01-07T17:55:43.0399290Z         # Save other properties
2025-01-07T17:55:43.0399360Z         self.lines_df = lines_df
2025-01-07T17:55:43.0399410Z         self.r_inner = r_inner
2025-01-07T17:55:43.0399520Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0399620Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0399730Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0399810Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0399880Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0399930Z         )
2025-01-07T17:55:43.0400090Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0400210Z         self.t_inner = t_inner
2025-01-07T17:55:43.0400310Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0400380Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0400440Z         self.v_inner = v_inner
2025-01-07T17:55:43.0400500Z         self.v_outer = v_outer
2025-01-07T17:55:43.0400540Z     
2025-01-07T17:55:43.0400620Z         # First check if both options are provided
2025-01-07T17:55:43.0400760Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0400820Z >           raise ValueError(
2025-01-07T17:55:43.0400920Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0401060Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0401110Z             )
2025-01-07T17:55:43.0401390Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0401390Z 
2025-01-07T17:55:43.0401670Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0401930Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _
2025-01-07T17:55:43.0401940Z 
2025-01-07T17:55:43.0402110Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0402120Z 
2025-01-07T17:55:43.0402180Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0402250Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0402290Z         """
2025-01-07T17:55:43.0402410Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0402450Z     
2025-01-07T17:55:43.0402490Z         Parameters:
2025-01-07T17:55:43.0402550Z         -----------
2025-01-07T17:55:43.0402640Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0402680Z     
2025-01-07T17:55:43.0402730Z         Returns:
2025-01-07T17:55:43.0402780Z         --------
2025-01-07T17:55:43.0402830Z         An LIVPlotter instance.
2025-01-07T17:55:43.0402880Z         """
2025-01-07T17:55:43.0402980Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0402980Z 
2025-01-07T17:55:43.0403090Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0403180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0403310Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0403420Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0403590Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0403690Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0403840Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0403890Z     return cls(
2025-01-07T17:55:43.0403980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0403980Z 
2025-01-07T17:55:43.0404200Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0404300Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0404530Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0404670Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0404830Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0404900Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0405050Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0405120Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0405250Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0405340Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0405430Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0405440Z 
2025-01-07T17:55:43.0410380Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0410560Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0410640Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0410790Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0410840Z        0.00025518])
2025-01-07T17:55:43.0411440Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0411630Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0411740Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0411830Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0412370Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0412460Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0412660Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0412800Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0412900Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0412960Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0413050Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0413110Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0413240Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0413380Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0413490Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0413610Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0413750Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0413850Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0413970Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0414080Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0414160Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0414220Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0414220Z 
2025-01-07T17:55:43.0414260Z     def __init__(
2025-01-07T17:55:43.0414310Z         self,
2025-01-07T17:55:43.0414370Z         last_interaction_type,
2025-01-07T17:55:43.0414550Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0414630Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0414680Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0414740Z         last_interaction_in_r,
2025-01-07T17:55:43.0415020Z         lines_df,
2025-01-07T17:55:43.0415070Z         packet_nus,
2025-01-07T17:55:43.0415120Z         packet_energies,
2025-01-07T17:55:43.0415170Z         r_inner,
2025-01-07T17:55:43.0415230Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0415370Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0415440Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0415500Z         spectrum_wavelength,
2025-01-07T17:55:43.0415550Z         t_inner,
2025-01-07T17:55:43.0415600Z         time_of_simulation,
2025-01-07T17:55:43.0415650Z         time_explosion,
2025-01-07T17:55:43.0415700Z         v_inner,
2025-01-07T17:55:43.0415740Z         v_outer,
2025-01-07T17:55:43.0415780Z         velocity
2025-01-07T17:55:43.0415830Z     ):
2025-01-07T17:55:43.0415870Z         """
2025-01-07T17:55:43.0416060Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0416100Z     
2025-01-07T17:55:43.0416150Z         Parameters
2025-01-07T17:55:43.0416200Z         ----------
2025-01-07T17:55:43.0416270Z         last_interaction_type : np.array
2025-01-07T17:55:43.0416390Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0416480Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0416550Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0416670Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0416740Z             absorption (interaction in)
2025-01-07T17:55:43.0416810Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0416920Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0416980Z             emission (interaction out)
2025-01-07T17:55:43.0417120Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0417240Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0418030Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0418570Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0418660Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0418800Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0418860Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0418990Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0419040Z             unit of Hz
2025-01-07T17:55:43.0419110Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0419210Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0419270Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0419370Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0419450Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0419540Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0419640Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0419730Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0419800Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0419900Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0419960Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0420050Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0420110Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0420200Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0420240Z         """
2025-01-07T17:55:43.0420380Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0420450Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0420530Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0420730Z             {
2025-01-07T17:55:43.0420790Z                 "nus": packet_nus,
2025-01-07T17:55:43.0420890Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0420960Z                 "energies": packet_energies,
2025-01-07T17:55:43.0421050Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0421170Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0421280Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0421390Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0421480Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0421520Z             }
2025-01-07T17:55:43.0421570Z         )
2025-01-07T17:55:43.0421610Z     
2025-01-07T17:55:43.0421670Z         # Save other properties
2025-01-07T17:55:43.0421730Z         self.lines_df = lines_df
2025-01-07T17:55:43.0421790Z         self.r_inner = r_inner
2025-01-07T17:55:43.0421900Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0422010Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0422110Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0422190Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0422260Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0422300Z         )
2025-01-07T17:55:43.0422390Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0422450Z         self.t_inner = t_inner
2025-01-07T17:55:43.0422530Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0422600Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0422650Z         self.v_inner = v_inner
2025-01-07T17:55:43.0422770Z         self.v_outer = v_outer
2025-01-07T17:55:43.0422820Z     
2025-01-07T17:55:43.0422900Z         # First check if both options are provided
2025-01-07T17:55:43.0423040Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0423090Z >           raise ValueError(
2025-01-07T17:55:43.0423200Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0423320Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0423380Z             )
2025-01-07T17:55:43.0423650Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0423650Z 
2025-01-07T17:55:43.0423790Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0423960Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl6] _
2025-01-07T17:55:43.0423970Z 
2025-01-07T17:55:43.0424130Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0424130Z 
2025-01-07T17:55:43.0424200Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0424260Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0424310Z         """
2025-01-07T17:55:43.0424430Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0424480Z     
2025-01-07T17:55:43.0424520Z         Parameters:
2025-01-07T17:55:43.0424580Z         -----------
2025-01-07T17:55:43.0424660Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0424710Z     
2025-01-07T17:55:43.0424750Z         Returns:
2025-01-07T17:55:43.0424800Z         --------
2025-01-07T17:55:43.0424850Z         An LIVPlotter instance.
2025-01-07T17:55:43.0424900Z         """
2025-01-07T17:55:43.0425000Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0425010Z 
2025-01-07T17:55:43.0425110Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0425210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0425600Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0425720Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0425890Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0425990Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0426140Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0426190Z     return cls(
2025-01-07T17:55:43.0426270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0426280Z 
2025-01-07T17:55:43.0426490Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0426600Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0426740Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0426880Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0427040Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0427120Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0427260Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0427330Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0427460Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0427550Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0427640Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0427640Z 
2025-01-07T17:55:43.0427690Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0427940Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0428030Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0428190Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0428340Z        0.00025518])
2025-01-07T17:55:43.0428580Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0428740Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0429030Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0429140Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0429310Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0429400Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0429590Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0429750Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0429840Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0429900Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0429980Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0430050Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0430180Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0430320Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0430420Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0430540Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0430680Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0430780Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0431070Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0431180Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0431270Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0431320Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0431320Z 
2025-01-07T17:55:43.0431380Z     def __init__(
2025-01-07T17:55:43.0431420Z         self,
2025-01-07T17:55:43.0431480Z         last_interaction_type,
2025-01-07T17:55:43.0431610Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0431700Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0431770Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0431830Z         last_interaction_in_r,
2025-01-07T17:55:43.0431870Z         lines_df,
2025-01-07T17:55:43.0431920Z         packet_nus,
2025-01-07T17:55:43.0431980Z         packet_energies,
2025-01-07T17:55:43.0432020Z         r_inner,
2025-01-07T17:55:43.0432080Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0432220Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0432290Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0432350Z         spectrum_wavelength,
2025-01-07T17:55:43.0432400Z         t_inner,
2025-01-07T17:55:43.0432450Z         time_of_simulation,
2025-01-07T17:55:43.0432500Z         time_explosion,
2025-01-07T17:55:43.0432540Z         v_inner,
2025-01-07T17:55:43.0432590Z         v_outer,
2025-01-07T17:55:43.0432630Z         velocity
2025-01-07T17:55:43.0432670Z     ):
2025-01-07T17:55:43.0432720Z         """
2025-01-07T17:55:43.0432890Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0432940Z     
2025-01-07T17:55:43.0432990Z         Parameters
2025-01-07T17:55:43.0433440Z         ----------
2025-01-07T17:55:43.0433510Z         last_interaction_type : np.array
2025-01-07T17:55:43.0433640Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0433720Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0433800Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0433910Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0433980Z             absorption (interaction in)
2025-01-07T17:55:43.0434050Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0434160Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0434220Z             emission (interaction out)
2025-01-07T17:55:43.0434300Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0434410Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0434480Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0434600Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0434660Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0434790Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0434850Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0434970Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0435020Z             unit of Hz
2025-01-07T17:55:43.0435090Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0435190Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0435500Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0435970Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0436080Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0436170Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0436260Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0436360Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0436540Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0436650Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0436710Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0436800Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0436880Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0436960Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0437010Z         """
2025-01-07T17:55:43.0437150Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0437220Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0437280Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0437330Z             {
2025-01-07T17:55:43.0437390Z                 "nus": packet_nus,
2025-01-07T17:55:43.0437490Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0437560Z                 "energies": packet_energies,
2025-01-07T17:55:43.0437660Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0437770Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0438000Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0438130Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0438220Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0438270Z             }
2025-01-07T17:55:43.0438320Z         )
2025-01-07T17:55:43.0438360Z     
2025-01-07T17:55:43.0438410Z         # Save other properties
2025-01-07T17:55:43.0438470Z         self.lines_df = lines_df
2025-01-07T17:55:43.0438530Z         self.r_inner = r_inner
2025-01-07T17:55:43.0438770Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0438880Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0438990Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0439060Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0439140Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0439190Z         )
2025-01-07T17:55:43.0439270Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0439330Z         self.t_inner = t_inner
2025-01-07T17:55:43.0439410Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0439480Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0439530Z         self.v_inner = v_inner
2025-01-07T17:55:43.0439590Z         self.v_outer = v_outer
2025-01-07T17:55:43.0439630Z     
2025-01-07T17:55:43.0439710Z         # First check if both options are provided
2025-01-07T17:55:43.0439840Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0439910Z >           raise ValueError(
2025-01-07T17:55:43.0440020Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0440140Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0440190Z             )
2025-01-07T17:55:43.0440470Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0440480Z 
2025-01-07T17:55:43.0440610Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0440960Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl7] _
2025-01-07T17:55:43.0441100Z 
2025-01-07T17:55:43.0441750Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0441760Z 
2025-01-07T17:55:43.0441840Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0441910Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0441950Z         """
2025-01-07T17:55:43.0442080Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0442220Z     
2025-01-07T17:55:43.0442270Z         Parameters:
2025-01-07T17:55:43.0442320Z         -----------
2025-01-07T17:55:43.0442410Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0442460Z     
2025-01-07T17:55:43.0442500Z         Returns:
2025-01-07T17:55:43.0442550Z         --------
2025-01-07T17:55:43.0442610Z         An LIVPlotter instance.
2025-01-07T17:55:43.0442660Z         """
2025-01-07T17:55:43.0442760Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0442760Z 
2025-01-07T17:55:43.0442870Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0442950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0443080Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0443190Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0443360Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0443470Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0443620Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0443660Z     return cls(
2025-01-07T17:55:43.0443750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0443750Z 
2025-01-07T17:55:43.0443960Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0444060Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0444210Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0444400Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0444570Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0444650Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0444800Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0444880Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0445010Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0445100Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0445200Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0445200Z 
2025-01-07T17:55:43.0445250Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0445380Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0445470Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0445620Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0445670Z        0.00025518])
2025-01-07T17:55:43.0445800Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0445960Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0446050Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0446150Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0446820Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0446920Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0447110Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0447250Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0447360Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0447420Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0447620Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0447690Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0447810Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0447950Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0448180Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0448340Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0448490Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0448590Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0448950Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0449080Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0449180Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0449230Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0449230Z 
2025-01-07T17:55:43.0449280Z     def __init__(
2025-01-07T17:55:43.0449320Z         self,
2025-01-07T17:55:43.0449380Z         last_interaction_type,
2025-01-07T17:55:43.0449440Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0449500Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0449560Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0449620Z         last_interaction_in_r,
2025-01-07T17:55:43.0449670Z         lines_df,
2025-01-07T17:55:43.0449710Z         packet_nus,
2025-01-07T17:55:43.0449770Z         packet_energies,
2025-01-07T17:55:43.0449810Z         r_inner,
2025-01-07T17:55:43.0450010Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0450160Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0450230Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0450300Z         spectrum_wavelength,
2025-01-07T17:55:43.0450340Z         t_inner,
2025-01-07T17:55:43.0450400Z         time_of_simulation,
2025-01-07T17:55:43.0450450Z         time_explosion,
2025-01-07T17:55:43.0450490Z         v_inner,
2025-01-07T17:55:43.0450530Z         v_outer,
2025-01-07T17:55:43.0450580Z         velocity
2025-01-07T17:55:43.0450620Z     ):
2025-01-07T17:55:43.0450670Z         """
2025-01-07T17:55:43.0450850Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0450890Z     
2025-01-07T17:55:43.0450940Z         Parameters
2025-01-07T17:55:43.0450990Z         ----------
2025-01-07T17:55:43.0451050Z         last_interaction_type : np.array
2025-01-07T17:55:43.0451170Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0451260Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0451330Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0451450Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0451520Z             absorption (interaction in)
2025-01-07T17:55:43.0451590Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0451700Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0451760Z             emission (interaction out)
2025-01-07T17:55:43.0451830Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0451950Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0452020Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0452130Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0452190Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0452310Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0452380Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0452570Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0452630Z             unit of Hz
2025-01-07T17:55:43.0452700Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0452790Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0452860Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0452940Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0453020Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0453110Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0453200Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0453290Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0453360Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0453470Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0453530Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0453630Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0453700Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0453780Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0453830Z         """
2025-01-07T17:55:43.0453960Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0454040Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0454110Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0454150Z             {
2025-01-07T17:55:43.0454210Z                 "nus": packet_nus,
2025-01-07T17:55:43.0454300Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0454370Z                 "energies": packet_energies,
2025-01-07T17:55:43.0454640Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0454800Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0454910Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0455030Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0455120Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0455160Z             }
2025-01-07T17:55:43.0455210Z         )
2025-01-07T17:55:43.0455250Z     
2025-01-07T17:55:43.0455310Z         # Save other properties
2025-01-07T17:55:43.0455360Z         self.lines_df = lines_df
2025-01-07T17:55:43.0455430Z         self.r_inner = r_inner
2025-01-07T17:55:43.0455530Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0455640Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0455740Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0455820Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0455890Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0455940Z         )
2025-01-07T17:55:43.0456030Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0456090Z         self.t_inner = t_inner
2025-01-07T17:55:43.0456170Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0456240Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0456290Z         self.v_inner = v_inner
2025-01-07T17:55:43.0456350Z         self.v_outer = v_outer
2025-01-07T17:55:43.0456390Z     
2025-01-07T17:55:43.0456460Z         # First check if both options are provided
2025-01-07T17:55:43.0456600Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0456650Z >           raise ValueError(
2025-01-07T17:55:43.0457070Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0457220Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0457550Z             )
2025-01-07T17:55:43.0457830Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0457830Z 
2025-01-07T17:55:43.0457970Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0458130Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl0] __
2025-01-07T17:55:43.0458140Z 
2025-01-07T17:55:43.0458290Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0458300Z 
2025-01-07T17:55:43.0458360Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0458420Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0458470Z         """
2025-01-07T17:55:43.0458580Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0458640Z     
2025-01-07T17:55:43.0458680Z         Parameters:
2025-01-07T17:55:43.0458740Z         -----------
2025-01-07T17:55:43.0458830Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0458870Z     
2025-01-07T17:55:43.0458920Z         Returns:
2025-01-07T17:55:43.0458970Z         --------
2025-01-07T17:55:43.0459020Z         An LIVPlotter instance.
2025-01-07T17:55:43.0459070Z         """
2025-01-07T17:55:43.0459170Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0459170Z 
2025-01-07T17:55:43.0459270Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0459360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0459480Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0459590Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0459810Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0459930Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0460360Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0460420Z     return cls(
2025-01-07T17:55:43.0460510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0460510Z 
2025-01-07T17:55:43.0460720Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0460830Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0460970Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0461110Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0461260Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0461350Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0461490Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0461570Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0461700Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0461790Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0461880Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0461880Z 
2025-01-07T17:55:43.0461930Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0462060Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0462140Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0462300Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0462340Z        0.00025518])
2025-01-07T17:55:43.0462480Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0462630Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0462820Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0462930Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0463080Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0463170Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0468790Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0468950Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0469040Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0469110Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0469200Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0469270Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0469390Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0469540Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0469640Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0469760Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0469890Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0470000Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0470120Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0470220Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0470550Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0470610Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0470610Z 
2025-01-07T17:55:43.0470670Z     def __init__(
2025-01-07T17:55:43.0470710Z         self,
2025-01-07T17:55:43.0470770Z         last_interaction_type,
2025-01-07T17:55:43.0470830Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0470900Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0470960Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0471020Z         last_interaction_in_r,
2025-01-07T17:55:43.0471070Z         lines_df,
2025-01-07T17:55:43.0471110Z         packet_nus,
2025-01-07T17:55:43.0471170Z         packet_energies,
2025-01-07T17:55:43.0471210Z         r_inner,
2025-01-07T17:55:43.0471610Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0472040Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0472120Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0472180Z         spectrum_wavelength,
2025-01-07T17:55:43.0472230Z         t_inner,
2025-01-07T17:55:43.0472280Z         time_of_simulation,
2025-01-07T17:55:43.0472340Z         time_explosion,
2025-01-07T17:55:43.0472390Z         v_inner,
2025-01-07T17:55:43.0472440Z         v_outer,
2025-01-07T17:55:43.0472480Z         velocity
2025-01-07T17:55:43.0472530Z     ):
2025-01-07T17:55:43.0472570Z         """
2025-01-07T17:55:43.0472760Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0472800Z     
2025-01-07T17:55:43.0472850Z         Parameters
2025-01-07T17:55:43.0472900Z         ----------
2025-01-07T17:55:43.0472960Z         last_interaction_type : np.array
2025-01-07T17:55:43.0473080Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0473280Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0473390Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0473510Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0473580Z             absorption (interaction in)
2025-01-07T17:55:43.0473810Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0473930Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0473980Z             emission (interaction out)
2025-01-07T17:55:43.0474060Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0474180Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0474250Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0474370Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0474420Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0474560Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0474620Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0474760Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0474810Z             unit of Hz
2025-01-07T17:55:43.0474880Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0474980Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0475040Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0475120Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0475210Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0475300Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0475380Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0475480Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0475550Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0475650Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0475710Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0475960Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0476040Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0476140Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0476190Z         """
2025-01-07T17:55:43.0476320Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0476400Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0476470Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0476510Z             {
2025-01-07T17:55:43.0476570Z                 "nus": packet_nus,
2025-01-07T17:55:43.0476660Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0476730Z                 "energies": packet_energies,
2025-01-07T17:55:43.0476820Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0476930Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0477050Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0477160Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0477250Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0477290Z             }
2025-01-07T17:55:43.0477350Z         )
2025-01-07T17:55:43.0477390Z     
2025-01-07T17:55:43.0477450Z         # Save other properties
2025-01-07T17:55:43.0477500Z         self.lines_df = lines_df
2025-01-07T17:55:43.0477560Z         self.r_inner = r_inner
2025-01-07T17:55:43.0477670Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0477770Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0477880Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0477960Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0478380Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0478450Z         )
2025-01-07T17:55:43.0478540Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0478700Z         self.t_inner = t_inner
2025-01-07T17:55:43.0478790Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0478850Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0478910Z         self.v_inner = v_inner
2025-01-07T17:55:43.0478960Z         self.v_outer = v_outer
2025-01-07T17:55:43.0479000Z     
2025-01-07T17:55:43.0479080Z         # First check if both options are provided
2025-01-07T17:55:43.0479210Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0479270Z >           raise ValueError(
2025-01-07T17:55:43.0479380Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0479510Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0479550Z             )
2025-01-07T17:55:43.0479830Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0479840Z 
2025-01-07T17:55:43.0479970Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0480130Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl1] __
2025-01-07T17:55:43.0480140Z 
2025-01-07T17:55:43.0480290Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0480300Z 
2025-01-07T17:55:43.0480370Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0480430Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0480470Z         """
2025-01-07T17:55:43.0480610Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0480650Z     
2025-01-07T17:55:43.0480710Z         Parameters:
2025-01-07T17:55:43.0480750Z         -----------
2025-01-07T17:55:43.0480850Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0481100Z     
2025-01-07T17:55:43.0481170Z         Returns:
2025-01-07T17:55:43.0481220Z         --------
2025-01-07T17:55:43.0481290Z         An LIVPlotter instance.
2025-01-07T17:55:43.0481330Z         """
2025-01-07T17:55:43.0481440Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0481440Z 
2025-01-07T17:55:43.0481540Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0481640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0481760Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0481870Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0482040Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0482140Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0482290Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0482340Z     return cls(
2025-01-07T17:55:43.0482440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0482440Z 
2025-01-07T17:55:43.0482650Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0482760Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0482900Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0483040Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0483210Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0483280Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0483420Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0483500Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0483630Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0483720Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0484110Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0484120Z 
2025-01-07T17:55:43.0484170Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0484300Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0484390Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0484540Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0484590Z        0.00025518])
2025-01-07T17:55:43.0484710Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0484870Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0484980Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0485080Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0485240Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0485320Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0485500Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0485650Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0485800Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0485860Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0485950Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0486010Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0486130Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0486330Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0486440Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0486560Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0486690Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0486800Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0486920Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0487030Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0487110Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0487170Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0487170Z 
2025-01-07T17:55:43.0487210Z     def __init__(
2025-01-07T17:55:43.0487260Z         self,
2025-01-07T17:55:43.0487320Z         last_interaction_type,
2025-01-07T17:55:43.0487380Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0487450Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0487510Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0487570Z         last_interaction_in_r,
2025-01-07T17:55:43.0487620Z         lines_df,
2025-01-07T17:55:43.0487660Z         packet_nus,
2025-01-07T17:55:43.0487720Z         packet_energies,
2025-01-07T17:55:43.0487760Z         r_inner,
2025-01-07T17:55:43.0487820Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0487960Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0488030Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0488090Z         spectrum_wavelength,
2025-01-07T17:55:43.0488130Z         t_inner,
2025-01-07T17:55:43.0488190Z         time_of_simulation,
2025-01-07T17:55:43.0488240Z         time_explosion,
2025-01-07T17:55:43.0488290Z         v_inner,
2025-01-07T17:55:43.0488330Z         v_outer,
2025-01-07T17:55:43.0488380Z         velocity
2025-01-07T17:55:43.0488470Z     ):
2025-01-07T17:55:43.0488520Z         """
2025-01-07T17:55:43.0488700Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0488740Z     
2025-01-07T17:55:43.0488790Z         Parameters
2025-01-07T17:55:43.0488830Z         ----------
2025-01-07T17:55:43.0489220Z         last_interaction_type : np.array
2025-01-07T17:55:43.0489360Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0489450Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0489520Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0489640Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0489700Z             absorption (interaction in)
2025-01-07T17:55:43.0489780Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0489880Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0489950Z             emission (interaction out)
2025-01-07T17:55:43.0490020Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0490140Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0490210Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0490330Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0490390Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0490510Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0490570Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0490690Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0490740Z             unit of Hz
2025-01-07T17:55:43.0490810Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0491050Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0491120Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0491210Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0491290Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0491380Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0491460Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0491560Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0491630Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0491730Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0491790Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0491880Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0491960Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0492040Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0492090Z         """
2025-01-07T17:55:43.0492230Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0492320Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0492380Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0492430Z             {
2025-01-07T17:55:43.0492480Z                 "nus": packet_nus,
2025-01-07T17:55:43.0492580Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0492640Z                 "energies": packet_energies,
2025-01-07T17:55:43.0492730Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0492860Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0492960Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0493080Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0493170Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0493220Z             }
2025-01-07T17:55:43.0493320Z         )
2025-01-07T17:55:43.0493370Z     
2025-01-07T17:55:43.0493430Z         # Save other properties
2025-01-07T17:55:43.0493480Z         self.lines_df = lines_df
2025-01-07T17:55:43.0493540Z         self.r_inner = r_inner
2025-01-07T17:55:43.0493650Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0493750Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0493860Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0493950Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0494010Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0494060Z         )
2025-01-07T17:55:43.0494140Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0494200Z         self.t_inner = t_inner
2025-01-07T17:55:43.0494440Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0494560Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0494620Z         self.v_inner = v_inner
2025-01-07T17:55:43.0494690Z         self.v_outer = v_outer
2025-01-07T17:55:43.0494730Z     
2025-01-07T17:55:43.0494810Z         # First check if both options are provided
2025-01-07T17:55:43.0494950Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0495000Z >           raise ValueError(
2025-01-07T17:55:43.0495120Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0495240Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0495290Z             )
2025-01-07T17:55:43.0495570Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0495570Z 
2025-01-07T17:55:43.0495920Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0496090Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl2] __
2025-01-07T17:55:43.0496090Z 
2025-01-07T17:55:43.0496250Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0496260Z 
2025-01-07T17:55:43.0496320Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0496380Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0496430Z         """
2025-01-07T17:55:43.0496540Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0496590Z     
2025-01-07T17:55:43.0496630Z         Parameters:
2025-01-07T17:55:43.0496680Z         -----------
2025-01-07T17:55:43.0496770Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0496810Z     
2025-01-07T17:55:43.0496860Z         Returns:
2025-01-07T17:55:43.0496910Z         --------
2025-01-07T17:55:43.0496960Z         An LIVPlotter instance.
2025-01-07T17:55:43.0497010Z         """
2025-01-07T17:55:43.0497420Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0497430Z 
2025-01-07T17:55:43.0497570Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0497660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0497780Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0497890Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0498050Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0498160Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0498310Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0498360Z     return cls(
2025-01-07T17:55:43.0498440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0498450Z 
2025-01-07T17:55:43.0498660Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0498770Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0499000Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0499140Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0499300Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0499380Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0499510Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0499590Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0499710Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0499800Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0499900Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0499900Z 
2025-01-07T17:55:43.0499960Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0500080Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0500170Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0500320Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0500370Z        0.00025518])
2025-01-07T17:55:43.0500490Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0500840Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0500940Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0501040Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0501330Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0501430Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0501610Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0501760Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0501850Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0501910Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0501990Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0502060Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0502180Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0502320Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0502420Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0502540Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0502680Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0502770Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0502900Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0503000Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0503090Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0503140Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0503140Z 
2025-01-07T17:55:43.0503190Z     def __init__(
2025-01-07T17:55:43.0503230Z         self,
2025-01-07T17:55:43.0503290Z         last_interaction_type,
2025-01-07T17:55:43.0503350Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0503410Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0503470Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0503530Z         last_interaction_in_r,
2025-01-07T17:55:43.0503870Z         lines_df,
2025-01-07T17:55:43.0503910Z         packet_nus,
2025-01-07T17:55:43.0503970Z         packet_energies,
2025-01-07T17:55:43.0504010Z         r_inner,
2025-01-07T17:55:43.0504070Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0504200Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0504280Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0504330Z         spectrum_wavelength,
2025-01-07T17:55:43.0504380Z         t_inner,
2025-01-07T17:55:43.0504430Z         time_of_simulation,
2025-01-07T17:55:43.0504490Z         time_explosion,
2025-01-07T17:55:43.0504540Z         v_inner,
2025-01-07T17:55:43.0504580Z         v_outer,
2025-01-07T17:55:43.0504630Z         velocity
2025-01-07T17:55:43.0504670Z     ):
2025-01-07T17:55:43.0504710Z         """
2025-01-07T17:55:43.0504890Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0504950Z     
2025-01-07T17:55:43.0504990Z         Parameters
2025-01-07T17:55:43.0505040Z         ----------
2025-01-07T17:55:43.0505100Z         last_interaction_type : np.array
2025-01-07T17:55:43.0505230Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0505310Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0505390Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0505500Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0505560Z             absorption (interaction in)
2025-01-07T17:55:43.0505640Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0505750Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0505810Z             emission (interaction out)
2025-01-07T17:55:43.0505950Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0506070Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0506140Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0506260Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0506320Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0506440Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0506500Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0506630Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0506680Z             unit of Hz
2025-01-07T17:55:43.0506750Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0506850Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0506910Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0506990Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0507080Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0507170Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0507250Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0507350Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0507420Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0507520Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0507580Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0507670Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0507740Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0507830Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0507870Z         """
2025-01-07T17:55:43.0508000Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0508080Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0508140Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0508240Z             {
2025-01-07T17:55:43.0508300Z                 "nus": packet_nus,
2025-01-07T17:55:43.0508400Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0508460Z                 "energies": packet_energies,
2025-01-07T17:55:43.0508550Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0508670Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0508780Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0508880Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0508970Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0509020Z             }
2025-01-07T17:55:43.0509060Z         )
2025-01-07T17:55:43.0509110Z     
2025-01-07T17:55:43.0509160Z         # Save other properties
2025-01-07T17:55:43.0509230Z         self.lines_df = lines_df
2025-01-07T17:55:43.0509280Z         self.r_inner = r_inner
2025-01-07T17:55:43.0509390Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0509490Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0509600Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0509680Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0509750Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0509790Z         )
2025-01-07T17:55:43.0509870Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0509930Z         self.t_inner = t_inner
2025-01-07T17:55:43.0510010Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0510080Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0510130Z         self.v_inner = v_inner
2025-01-07T17:55:43.0510230Z         self.v_outer = v_outer
2025-01-07T17:55:43.0510280Z     
2025-01-07T17:55:43.0510360Z         # First check if both options are provided
2025-01-07T17:55:43.0510500Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0510550Z >           raise ValueError(
2025-01-07T17:55:43.0510660Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0510790Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0510830Z             )
2025-01-07T17:55:43.0511110Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0511120Z 
2025-01-07T17:55:43.0511250Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0511410Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl3] __
2025-01-07T17:55:43.0511420Z 
2025-01-07T17:55:43.0511580Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0511580Z 
2025-01-07T17:55:43.0511650Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0511710Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0511750Z         """
2025-01-07T17:55:43.0511870Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0511920Z     
2025-01-07T17:55:43.0511970Z         Parameters:
2025-01-07T17:55:43.0512010Z         -----------
2025-01-07T17:55:43.0512270Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0512700Z     
2025-01-07T17:55:43.0512840Z         Returns:
2025-01-07T17:55:43.0512890Z         --------
2025-01-07T17:55:43.0512950Z         An LIVPlotter instance.
2025-01-07T17:55:43.0513000Z         """
2025-01-07T17:55:43.0513110Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0513110Z 
2025-01-07T17:55:43.0513240Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0513330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0513730Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0513850Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0514020Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0514120Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0514280Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0514320Z     return cls(
2025-01-07T17:55:43.0514410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0514420Z 
2025-01-07T17:55:43.0514710Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0514830Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0514970Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0515110Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0515270Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0515350Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0515490Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0515570Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0515700Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0515790Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0515880Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0515880Z 
2025-01-07T17:55:43.0516010Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0516230Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0516320Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0516480Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0516530Z        0.00025518])
2025-01-07T17:55:43.0516650Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0516800Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0516910Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0517010Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0517170Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0517250Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0517440Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0517580Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0517680Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0517740Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0517820Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0517880Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0518010Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0518140Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0518250Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0518360Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0523320Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0523480Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0523760Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0523860Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0523950Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0524000Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0524000Z 
2025-01-07T17:55:43.0524050Z     def __init__(
2025-01-07T17:55:43.0524100Z         self,
2025-01-07T17:55:43.0524160Z         last_interaction_type,
2025-01-07T17:55:43.0524220Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0524280Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0524340Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0524400Z         last_interaction_in_r,
2025-01-07T17:55:43.0524440Z         lines_df,
2025-01-07T17:55:43.0524490Z         packet_nus,
2025-01-07T17:55:43.0524550Z         packet_energies,
2025-01-07T17:55:43.0524600Z         r_inner,
2025-01-07T17:55:43.0524660Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0524800Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0524870Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0524930Z         spectrum_wavelength,
2025-01-07T17:55:43.0524970Z         t_inner,
2025-01-07T17:55:43.0525020Z         time_of_simulation,
2025-01-07T17:55:43.0525070Z         time_explosion,
2025-01-07T17:55:43.0525120Z         v_inner,
2025-01-07T17:55:43.0525160Z         v_outer,
2025-01-07T17:55:43.0525200Z         velocity
2025-01-07T17:55:43.0525250Z     ):
2025-01-07T17:55:43.0525290Z         """
2025-01-07T17:55:43.0525470Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0525520Z     
2025-01-07T17:55:43.0525560Z         Parameters
2025-01-07T17:55:43.0526370Z         ----------
2025-01-07T17:55:43.0526460Z         last_interaction_type : np.array
2025-01-07T17:55:43.0526580Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0526670Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0526760Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0526870Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0526930Z             absorption (interaction in)
2025-01-07T17:55:43.0527010Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0527120Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0527180Z             emission (interaction out)
2025-01-07T17:55:43.0527250Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0527370Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0527440Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0527560Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0527620Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0527750Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0527810Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0527930Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0527990Z             unit of Hz
2025-01-07T17:55:43.0528050Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0528150Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0528210Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0528300Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0528840Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0528960Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0529050Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0529140Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0529340Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0529450Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0529510Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0529600Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0529670Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0529760Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0529810Z         """
2025-01-07T17:55:43.0529940Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0530020Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0530080Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0530130Z             {
2025-01-07T17:55:43.0530180Z                 "nus": packet_nus,
2025-01-07T17:55:43.0530280Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0530350Z                 "energies": packet_energies,
2025-01-07T17:55:43.0530440Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0530560Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0530670Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0530790Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0530870Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0530920Z             }
2025-01-07T17:55:43.0530960Z         )
2025-01-07T17:55:43.0531000Z     
2025-01-07T17:55:43.0531060Z         # Save other properties
2025-01-07T17:55:43.0531120Z         self.lines_df = lines_df
2025-01-07T17:55:43.0531170Z         self.r_inner = r_inner
2025-01-07T17:55:43.0531330Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0531440Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0531550Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0531630Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0531700Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0531750Z         )
2025-01-07T17:55:43.0531830Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0531890Z         self.t_inner = t_inner
2025-01-07T17:55:43.0531970Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0532040Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0532090Z         self.v_inner = v_inner
2025-01-07T17:55:43.0532140Z         self.v_outer = v_outer
2025-01-07T17:55:43.0532180Z     
2025-01-07T17:55:43.0532260Z         # First check if both options are provided
2025-01-07T17:55:43.0532400Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0532460Z >           raise ValueError(
2025-01-07T17:55:43.0532560Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0532700Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0532740Z             )
2025-01-07T17:55:43.0533020Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0533020Z 
2025-01-07T17:55:43.0533160Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0533320Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl4] __
2025-01-07T17:55:43.0533320Z 
2025-01-07T17:55:43.0533480Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0533490Z 
2025-01-07T17:55:43.0533550Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0533610Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0533660Z         """
2025-01-07T17:55:43.0533780Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0533870Z     
2025-01-07T17:55:43.0533920Z         Parameters:
2025-01-07T17:55:43.0533970Z         -----------
2025-01-07T17:55:43.0534060Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0534100Z     
2025-01-07T17:55:43.0534150Z         Returns:
2025-01-07T17:55:43.0534190Z         --------
2025-01-07T17:55:43.0534250Z         An LIVPlotter instance.
2025-01-07T17:55:43.0534300Z         """
2025-01-07T17:55:43.0534400Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0534400Z 
2025-01-07T17:55:43.0534510Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0534600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0534730Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0534840Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0535010Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0535120Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0535270Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0535320Z     return cls(
2025-01-07T17:55:43.0535400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0535410Z 
2025-01-07T17:55:43.0535620Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0535720Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0535860Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0536000Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0536210Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0536290Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0536440Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0536520Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0536640Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0536740Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0536830Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0536830Z 
2025-01-07T17:55:43.0536890Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0537020Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0537110Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0537260Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0537310Z        0.00025518])
2025-01-07T17:55:43.0537440Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0537590Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0537690Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0537780Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0537950Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0538030Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0538220Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0538360Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0538450Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0538510Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0538660Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0538730Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0538850Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0538990Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0539080Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0539200Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0539340Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0539440Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0539570Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0539680Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0539770Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0539820Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0539830Z 
2025-01-07T17:55:43.0539870Z     def __init__(
2025-01-07T17:55:43.0539920Z         self,
2025-01-07T17:55:43.0539980Z         last_interaction_type,
2025-01-07T17:55:43.0540040Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0540100Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0540160Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0540220Z         last_interaction_in_r,
2025-01-07T17:55:43.0540260Z         lines_df,
2025-01-07T17:55:43.0540310Z         packet_nus,
2025-01-07T17:55:43.0540560Z         packet_energies,
2025-01-07T17:55:43.0540870Z         r_inner,
2025-01-07T17:55:43.0540960Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0541360Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0541440Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0541500Z         spectrum_wavelength,
2025-01-07T17:55:43.0541550Z         t_inner,
2025-01-07T17:55:43.0541600Z         time_of_simulation,
2025-01-07T17:55:43.0541660Z         time_explosion,
2025-01-07T17:55:43.0541700Z         v_inner,
2025-01-07T17:55:43.0541750Z         v_outer,
2025-01-07T17:55:43.0541790Z         velocity
2025-01-07T17:55:43.0541840Z     ):
2025-01-07T17:55:43.0541880Z         """
2025-01-07T17:55:43.0542070Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0542110Z     
2025-01-07T17:55:43.0542160Z         Parameters
2025-01-07T17:55:43.0542200Z         ----------
2025-01-07T17:55:43.0542270Z         last_interaction_type : np.array
2025-01-07T17:55:43.0542390Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0542480Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0542550Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0542680Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0542750Z             absorption (interaction in)
2025-01-07T17:55:43.0542820Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0542940Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0543480Z             emission (interaction out)
2025-01-07T17:55:43.0543770Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0544180Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0544280Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0544400Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0544470Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0544590Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0544660Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0544890Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0544940Z             unit of Hz
2025-01-07T17:55:43.0545010Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0545110Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0545170Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0545250Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0545340Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0545430Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0545510Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0545600Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0545680Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0545790Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0545850Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0546160Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0546550Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0546880Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0546970Z         """
2025-01-07T17:55:43.0547110Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0547190Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0547250Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0547300Z             {
2025-01-07T17:55:43.0547360Z                 "nus": packet_nus,
2025-01-07T17:55:43.0547460Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0547520Z                 "energies": packet_energies,
2025-01-07T17:55:43.0547860Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0548010Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0548130Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0548240Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0548330Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0548370Z             }
2025-01-07T17:55:43.0548420Z         )
2025-01-07T17:55:43.0548460Z     
2025-01-07T17:55:43.0548520Z         # Save other properties
2025-01-07T17:55:43.0548580Z         self.lines_df = lines_df
2025-01-07T17:55:43.0548630Z         self.r_inner = r_inner
2025-01-07T17:55:43.0548740Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0548840Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0548940Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0549030Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0549100Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0549140Z         )
2025-01-07T17:55:43.0549230Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0549280Z         self.t_inner = t_inner
2025-01-07T17:55:43.0549370Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0549430Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0549490Z         self.v_inner = v_inner
2025-01-07T17:55:43.0549540Z         self.v_outer = v_outer
2025-01-07T17:55:43.0549590Z     
2025-01-07T17:55:43.0549660Z         # First check if both options are provided
2025-01-07T17:55:43.0549800Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0549850Z >           raise ValueError(
2025-01-07T17:55:43.0549970Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0550090Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0550250Z             )
2025-01-07T17:55:43.0550620Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0550640Z 
2025-01-07T17:55:43.0550900Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0552070Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl5] __
2025-01-07T17:55:43.0552080Z 
2025-01-07T17:55:43.0552290Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0552290Z 
2025-01-07T17:55:43.0552360Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0552430Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0552470Z         """
2025-01-07T17:55:43.0552600Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0552650Z     
2025-01-07T17:55:43.0552700Z         Parameters:
2025-01-07T17:55:43.0552750Z         -----------
2025-01-07T17:55:43.0552840Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0552890Z     
2025-01-07T17:55:43.0552940Z         Returns:
2025-01-07T17:55:43.0552990Z         --------
2025-01-07T17:55:43.0553050Z         An LIVPlotter instance.
2025-01-07T17:55:43.0553090Z         """
2025-01-07T17:55:43.0553200Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0553200Z 
2025-01-07T17:55:43.0553300Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0553390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0553520Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0553630Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0553930Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0554040Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0554200Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0554250Z     return cls(
2025-01-07T17:55:43.0554350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0554350Z 
2025-01-07T17:55:43.0554560Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0554670Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0554810Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0554950Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0555110Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0555180Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0555320Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0555400Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0555540Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0555630Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0555720Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0555730Z 
2025-01-07T17:55:43.0555780Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0555910Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0556070Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0556230Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0556280Z        0.00025518])
2025-01-07T17:55:43.0556400Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0556560Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0556720Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0556820Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0556980Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0557070Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0557250Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0557390Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0557490Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0557550Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0557640Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0557700Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0557830Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0557970Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0558070Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0558190Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0558330Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0558430Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0558550Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0558650Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0558790Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0558850Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0558860Z 
2025-01-07T17:55:43.0558910Z     def __init__(
2025-01-07T17:55:43.0558960Z         self,
2025-01-07T17:55:43.0559010Z         last_interaction_type,
2025-01-07T17:55:43.0559080Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0559140Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0559200Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0559260Z         last_interaction_in_r,
2025-01-07T17:55:43.0559300Z         lines_df,
2025-01-07T17:55:43.0559350Z         packet_nus,
2025-01-07T17:55:43.0559400Z         packet_energies,
2025-01-07T17:55:43.0559450Z         r_inner,
2025-01-07T17:55:43.0559510Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0559660Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0559720Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0559790Z         spectrum_wavelength,
2025-01-07T17:55:43.0559830Z         t_inner,
2025-01-07T17:55:43.0559890Z         time_of_simulation,
2025-01-07T17:55:43.0559940Z         time_explosion,
2025-01-07T17:55:43.0559990Z         v_inner,
2025-01-07T17:55:43.0560030Z         v_outer,
2025-01-07T17:55:43.0560080Z         velocity
2025-01-07T17:55:43.0560120Z     ):
2025-01-07T17:55:43.0560160Z         """
2025-01-07T17:55:43.0560340Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0560390Z     
2025-01-07T17:55:43.0560430Z         Parameters
2025-01-07T17:55:43.0560480Z         ----------
2025-01-07T17:55:43.0560550Z         last_interaction_type : np.array
2025-01-07T17:55:43.0560670Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0560760Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0560830Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0560950Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0561010Z             absorption (interaction in)
2025-01-07T17:55:43.0561150Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0561260Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0561330Z             emission (interaction out)
2025-01-07T17:55:43.0561400Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0561510Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0561580Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0561700Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0561760Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0561880Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0561950Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0562080Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0562130Z             unit of Hz
2025-01-07T17:55:43.0562190Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0562300Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0562370Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0562460Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0562540Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0562640Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0562730Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0562820Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0562900Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0563010Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0563070Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0563220Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0563300Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0563390Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0563430Z         """
2025-01-07T17:55:43.0563570Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0563650Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0563710Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0563760Z             {
2025-01-07T17:55:43.0563820Z                 "nus": packet_nus,
2025-01-07T17:55:43.0563920Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0563980Z                 "energies": packet_energies,
2025-01-07T17:55:43.0564070Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0564190Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0564300Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0564420Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0564520Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0564560Z             }
2025-01-07T17:55:43.0564600Z         )
2025-01-07T17:55:43.0564650Z     
2025-01-07T17:55:43.0564700Z         # Save other properties
2025-01-07T17:55:43.0564760Z         self.lines_df = lines_df
2025-01-07T17:55:43.0564820Z         self.r_inner = r_inner
2025-01-07T17:55:43.0564920Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0565030Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0565130Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0565210Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0565280Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0565330Z         )
2025-01-07T17:55:43.0565420Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0565480Z         self.t_inner = t_inner
2025-01-07T17:55:43.0565620Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0565690Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0565740Z         self.v_inner = v_inner
2025-01-07T17:55:43.0565800Z         self.v_outer = v_outer
2025-01-07T17:55:43.0565840Z     
2025-01-07T17:55:43.0565920Z         # First check if both options are provided
2025-01-07T17:55:43.0566050Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0566110Z >           raise ValueError(
2025-01-07T17:55:43.0566220Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0566340Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0566390Z             )
2025-01-07T17:55:43.0566670Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0566680Z 
2025-01-07T17:55:43.0566810Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0567010Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl6] __
2025-01-07T17:55:43.0567020Z 
2025-01-07T17:55:43.0567200Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0567210Z 
2025-01-07T17:55:43.0567270Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0567330Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0567380Z         """
2025-01-07T17:55:43.0567490Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0567540Z     
2025-01-07T17:55:43.0567590Z         Parameters:
2025-01-07T17:55:43.0567640Z         -----------
2025-01-07T17:55:43.0567720Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0567970Z     
2025-01-07T17:55:43.0568030Z         Returns:
2025-01-07T17:55:43.0568080Z         --------
2025-01-07T17:55:43.0568130Z         An LIVPlotter instance.
2025-01-07T17:55:43.0568180Z         """
2025-01-07T17:55:43.0568280Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0568290Z 
2025-01-07T17:55:43.0568390Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0568470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0568590Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0568710Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0568870Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0568970Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0569120Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0569180Z     return cls(
2025-01-07T17:55:43.0569270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0569270Z 
2025-01-07T17:55:43.0569480Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0569590Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0569730Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0569860Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0570020Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0570100Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0570240Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0570320Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0570450Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0570540Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0571090Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0571090Z 
2025-01-07T17:55:43.0571140Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0571280Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0571360Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0571510Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0571550Z        0.00025518])
2025-01-07T17:55:43.0571680Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0571830Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0571940Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0572040Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0572210Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0572290Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0572470Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0572620Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0572720Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0572780Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0572860Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0572930Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0573050Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0573290Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0573400Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0573520Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0573660Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0573760Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0573890Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0573990Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0574070Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0574120Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0574120Z 
2025-01-07T17:55:43.0574180Z     def __init__(
2025-01-07T17:55:43.0574220Z         self,
2025-01-07T17:55:43.0574280Z         last_interaction_type,
2025-01-07T17:55:43.0574340Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0574440Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0579580Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0579670Z         last_interaction_in_r,
2025-01-07T17:55:43.0579720Z         lines_df,
2025-01-07T17:55:43.0579770Z         packet_nus,
2025-01-07T17:55:43.0579820Z         packet_energies,
2025-01-07T17:55:43.0579870Z         r_inner,
2025-01-07T17:55:43.0579930Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0580070Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0580140Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0580200Z         spectrum_wavelength,
2025-01-07T17:55:43.0580240Z         t_inner,
2025-01-07T17:55:43.0580290Z         time_of_simulation,
2025-01-07T17:55:43.0580340Z         time_explosion,
2025-01-07T17:55:43.0580390Z         v_inner,
2025-01-07T17:55:43.0580440Z         v_outer,
2025-01-07T17:55:43.0580480Z         velocity
2025-01-07T17:55:43.0580740Z     ):
2025-01-07T17:55:43.0580790Z         """
2025-01-07T17:55:43.0580970Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0581010Z     
2025-01-07T17:55:43.0581060Z         Parameters
2025-01-07T17:55:43.0581110Z         ----------
2025-01-07T17:55:43.0581170Z         last_interaction_type : np.array
2025-01-07T17:55:43.0581290Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0581380Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0581450Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0581570Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0581630Z             absorption (interaction in)
2025-01-07T17:55:43.0581700Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0581810Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0581870Z             emission (interaction out)
2025-01-07T17:55:43.0581940Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0582060Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0582130Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0582250Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0582310Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0582430Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0582490Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0582610Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0582660Z             unit of Hz
2025-01-07T17:55:43.0582730Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0582890Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0582960Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0583040Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0583130Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0583220Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0583300Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0583390Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0583460Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0583570Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0583630Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0583720Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0583790Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0583870Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0583920Z         """
2025-01-07T17:55:43.0584050Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0584130Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0584200Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0584250Z             {
2025-01-07T17:55:43.0584310Z                 "nus": packet_nus,
2025-01-07T17:55:43.0584410Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0584470Z                 "energies": packet_energies,
2025-01-07T17:55:43.0584560Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0584680Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0584790Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0584900Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0584990Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0585030Z             }
2025-01-07T17:55:43.0585080Z         )
2025-01-07T17:55:43.0585180Z     
2025-01-07T17:55:43.0585240Z         # Save other properties
2025-01-07T17:55:43.0585290Z         self.lines_df = lines_df
2025-01-07T17:55:43.0585350Z         self.r_inner = r_inner
2025-01-07T17:55:43.0585460Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0585570Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0585670Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0585750Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0585820Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0585870Z         )
2025-01-07T17:55:43.0585960Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0586010Z         self.t_inner = t_inner
2025-01-07T17:55:43.0586100Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0586170Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0586230Z         self.v_inner = v_inner
2025-01-07T17:55:43.0586280Z         self.v_outer = v_outer
2025-01-07T17:55:43.0586330Z     
2025-01-07T17:55:43.0586400Z         # First check if both options are provided
2025-01-07T17:55:43.0586540Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0586590Z >           raise ValueError(
2025-01-07T17:55:43.0586700Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0586830Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0586880Z             )
2025-01-07T17:55:43.0587160Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0587170Z 
2025-01-07T17:55:43.0587360Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0587530Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl7] __
2025-01-07T17:55:43.0587530Z 
2025-01-07T17:55:43.0587690Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0587700Z 
2025-01-07T17:55:43.0587760Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0587830Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0587880Z         """
2025-01-07T17:55:43.0587990Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0588040Z     
2025-01-07T17:55:43.0588080Z         Parameters:
2025-01-07T17:55:43.0588130Z         -----------
2025-01-07T17:55:43.0588220Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0588260Z     
2025-01-07T17:55:43.0588310Z         Returns:
2025-01-07T17:55:43.0588360Z         --------
2025-01-07T17:55:43.0588410Z         An LIVPlotter instance.
2025-01-07T17:55:43.0588450Z         """
2025-01-07T17:55:43.0588560Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0588560Z 
2025-01-07T17:55:43.0588660Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0588760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0588880Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0588990Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0589150Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0589250Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0589400Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0589450Z     return cls(
2025-01-07T17:55:43.0589540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0589540Z 
2025-01-07T17:55:43.0589750Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0589870Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0590050Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0590200Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0590350Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0590430Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0590570Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0590650Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0590780Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0590870Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0591010Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0591020Z 
2025-01-07T17:55:43.0591080Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0591200Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0591280Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0591440Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0591490Z        0.00025518])
2025-01-07T17:55:43.0591610Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0591760Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0591860Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0591960Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0592420Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0592530Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0592720Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0592870Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0592960Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0593020Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0593100Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0593160Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0593280Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0593420Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0593530Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0593650Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0593790Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0593890Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0594010Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0594110Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0594200Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0594250Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0594250Z 
2025-01-07T17:55:43.0594300Z     def __init__(
2025-01-07T17:55:43.0594350Z         self,
2025-01-07T17:55:43.0594400Z         last_interaction_type,
2025-01-07T17:55:43.0594460Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0594530Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0594590Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0594650Z         last_interaction_in_r,
2025-01-07T17:55:43.0595090Z         lines_df,
2025-01-07T17:55:43.0595140Z         packet_nus,
2025-01-07T17:55:43.0595200Z         packet_energies,
2025-01-07T17:55:43.0595240Z         r_inner,
2025-01-07T17:55:43.0595300Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0595440Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0595510Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0595560Z         spectrum_wavelength,
2025-01-07T17:55:43.0595620Z         t_inner,
2025-01-07T17:55:43.0595670Z         time_of_simulation,
2025-01-07T17:55:43.0595720Z         time_explosion,
2025-01-07T17:55:43.0595770Z         v_inner,
2025-01-07T17:55:43.0595810Z         v_outer,
2025-01-07T17:55:43.0595850Z         velocity
2025-01-07T17:55:43.0596300Z     ):
2025-01-07T17:55:43.0596380Z         """
2025-01-07T17:55:43.0596580Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0596630Z     
2025-01-07T17:55:43.0596680Z         Parameters
2025-01-07T17:55:43.0596740Z         ----------
2025-01-07T17:55:43.0596810Z         last_interaction_type : np.array
2025-01-07T17:55:43.0596930Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0597020Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0597100Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0597210Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0597280Z             absorption (interaction in)
2025-01-07T17:55:43.0597350Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0597470Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0597540Z             emission (interaction out)
2025-01-07T17:55:43.0597840Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0597970Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0598040Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0598160Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0598220Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0598340Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0598410Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0598540Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0598580Z             unit of Hz
2025-01-07T17:55:43.0598650Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0598970Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0599040Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0599120Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0599200Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0599300Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0599390Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0599480Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0599550Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0599660Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0599720Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0599810Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0599880Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0599960Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0600010Z         """
2025-01-07T17:55:43.0600140Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0600220Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0600280Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0600340Z             {
2025-01-07T17:55:43.0600480Z                 "nus": packet_nus,
2025-01-07T17:55:43.0600590Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0600650Z                 "energies": packet_energies,
2025-01-07T17:55:43.0600750Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0600870Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0600980Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0601090Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0601180Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0601230Z             }
2025-01-07T17:55:43.0601270Z         )
2025-01-07T17:55:43.0601310Z     
2025-01-07T17:55:43.0601370Z         # Save other properties
2025-01-07T17:55:43.0601430Z         self.lines_df = lines_df
2025-01-07T17:55:43.0601480Z         self.r_inner = r_inner
2025-01-07T17:55:43.0601600Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0601700Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0601810Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0601880Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0601960Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0602000Z         )
2025-01-07T17:55:43.0602090Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0602140Z         self.t_inner = t_inner
2025-01-07T17:55:43.0602220Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0602290Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0602340Z         self.v_inner = v_inner
2025-01-07T17:55:43.0602500Z         self.v_outer = v_outer
2025-01-07T17:55:43.0602570Z     
2025-01-07T17:55:43.0602640Z         # First check if both options are provided
2025-01-07T17:55:43.0602780Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0602840Z >           raise ValueError(
2025-01-07T17:55:43.0602940Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0603070Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0603110Z             )
2025-01-07T17:55:43.0603640Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0603670Z 
2025-01-07T17:55:43.0604190Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0604390Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _
2025-01-07T17:55:43.0604400Z 
2025-01-07T17:55:43.0604570Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0604570Z 
2025-01-07T17:55:43.0604630Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0604700Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0604750Z         """
2025-01-07T17:55:43.0604870Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0604910Z     
2025-01-07T17:55:43.0604970Z         Parameters:
2025-01-07T17:55:43.0605010Z         -----------
2025-01-07T17:55:43.0605100Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0605140Z     
2025-01-07T17:55:43.0605190Z         Returns:
2025-01-07T17:55:43.0605240Z         --------
2025-01-07T17:55:43.0605300Z         An LIVPlotter instance.
2025-01-07T17:55:43.0605340Z         """
2025-01-07T17:55:43.0605440Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0605440Z 
2025-01-07T17:55:43.0605550Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0605640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0605880Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0605990Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0606160Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0606260Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0606640Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0606710Z     return cls(
2025-01-07T17:55:43.0606800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0606800Z 
2025-01-07T17:55:43.0607020Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0607130Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0607280Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0607420Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0607580Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0607660Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0607810Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0607890Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0608010Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0608100Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0608190Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0608190Z 
2025-01-07T17:55:43.0608260Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0608490Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0608580Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0608750Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0608790Z        0.00025518])
2025-01-07T17:55:43.0608920Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0609070Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0609170Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0609270Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0609440Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0609520Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0609710Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0609970Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0610080Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0610150Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0610230Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0610300Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0610420Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0610570Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0610660Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0610790Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0610920Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0611020Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0611250Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0611360Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0611440Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0611490Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0611500Z 
2025-01-07T17:55:43.0611550Z     def __init__(
2025-01-07T17:55:43.0611590Z         self,
2025-01-07T17:55:43.0611650Z         last_interaction_type,
2025-01-07T17:55:43.0611710Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0611780Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0611840Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0611890Z         last_interaction_in_r,
2025-01-07T17:55:43.0611940Z         lines_df,
2025-01-07T17:55:43.0611990Z         packet_nus,
2025-01-07T17:55:43.0612040Z         packet_energies,
2025-01-07T17:55:43.0612090Z         r_inner,
2025-01-07T17:55:43.0612150Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0612290Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0612370Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0612420Z         spectrum_wavelength,
2025-01-07T17:55:43.0612460Z         t_inner,
2025-01-07T17:55:43.0612520Z         time_of_simulation,
2025-01-07T17:55:43.0612570Z         time_explosion,
2025-01-07T17:55:43.0612610Z         v_inner,
2025-01-07T17:55:43.0612660Z         v_outer,
2025-01-07T17:55:43.0612700Z         velocity
2025-01-07T17:55:43.0612740Z     ):
2025-01-07T17:55:43.0612790Z         """
2025-01-07T17:55:43.0612960Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0613000Z     
2025-01-07T17:55:43.0613050Z         Parameters
2025-01-07T17:55:43.0613410Z         ----------
2025-01-07T17:55:43.0613490Z         last_interaction_type : np.array
2025-01-07T17:55:43.0613610Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0613700Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0613780Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0613890Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0613950Z             absorption (interaction in)
2025-01-07T17:55:43.0614030Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0614140Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0614200Z             emission (interaction out)
2025-01-07T17:55:43.0614270Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0614380Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0614450Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0614570Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0614630Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0614860Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0614950Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0615090Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0615130Z             unit of Hz
2025-01-07T17:55:43.0615210Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0615310Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0615370Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0615460Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0615540Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0615630Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0615730Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0615820Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0616210Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0616320Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0616380Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0616470Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0616540Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0616630Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0616670Z         """
2025-01-07T17:55:43.0616810Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0616890Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0616960Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0617000Z             {
2025-01-07T17:55:43.0617060Z                 "nus": packet_nus,
2025-01-07T17:55:43.0617160Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0617230Z                 "energies": packet_energies,
2025-01-07T17:55:43.0617320Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0617440Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0617550Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0617660Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0617750Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0617800Z             }
2025-01-07T17:55:43.0618770Z         )
2025-01-07T17:55:43.0618850Z     
2025-01-07T17:55:43.0618910Z         # Save other properties
2025-01-07T17:55:43.0618970Z         self.lines_df = lines_df
2025-01-07T17:55:43.0619030Z         self.r_inner = r_inner
2025-01-07T17:55:43.0619250Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0619370Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0619470Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0619560Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0619630Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0619670Z         )
2025-01-07T17:55:43.0619760Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0619820Z         self.t_inner = t_inner
2025-01-07T17:55:43.0619910Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0619980Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0620030Z         self.v_inner = v_inner
2025-01-07T17:55:43.0620080Z         self.v_outer = v_outer
2025-01-07T17:55:43.0620130Z     
2025-01-07T17:55:43.0620200Z         # First check if both options are provided
2025-01-07T17:55:43.0620340Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0620400Z >           raise ValueError(
2025-01-07T17:55:43.0620510Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0620630Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0620680Z             )
2025-01-07T17:55:43.0620970Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0620970Z 
2025-01-07T17:55:43.0621110Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0621290Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _
2025-01-07T17:55:43.0621290Z 
2025-01-07T17:55:43.0621450Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0621460Z 
2025-01-07T17:55:43.0621530Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0621590Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0621640Z         """
2025-01-07T17:55:43.0621750Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0621860Z     
2025-01-07T17:55:43.0621910Z         Parameters:
2025-01-07T17:55:43.0621960Z         -----------
2025-01-07T17:55:43.0622050Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0622090Z     
2025-01-07T17:55:43.0622140Z         Returns:
2025-01-07T17:55:43.0622190Z         --------
2025-01-07T17:55:43.0622250Z         An LIVPlotter instance.
2025-01-07T17:55:43.0622290Z         """
2025-01-07T17:55:43.0622390Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0622390Z 
2025-01-07T17:55:43.0622500Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0622590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0622720Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0622830Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0623000Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0623100Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0623260Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0623300Z     return cls(
2025-01-07T17:55:43.0623390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0623390Z 
2025-01-07T17:55:43.0623600Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0623720Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0623850Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0623990Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0624400Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0624490Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0624640Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0624710Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0624840Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0624930Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0625020Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0625020Z 
2025-01-07T17:55:43.0625070Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0625210Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0625290Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0625450Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0625500Z        0.00025518])
2025-01-07T17:55:43.0625620Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0625780Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0625870Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0625970Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0626130Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0626210Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0626390Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0626540Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0626630Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0626690Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0626830Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0626890Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0627020Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0627160Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0627260Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0627740Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0627890Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0627980Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0628120Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0628220Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0628310Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0628370Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0628370Z 
2025-01-07T17:55:43.0628410Z     def __init__(
2025-01-07T17:55:43.0628460Z         self,
2025-01-07T17:55:43.0628510Z         last_interaction_type,
2025-01-07T17:55:43.0628580Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0628640Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0628700Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0628750Z         last_interaction_in_r,
2025-01-07T17:55:43.0628800Z         lines_df,
2025-01-07T17:55:43.0628850Z         packet_nus,
2025-01-07T17:55:43.0628900Z         packet_energies,
2025-01-07T17:55:43.0628950Z         r_inner,
2025-01-07T17:55:43.0629010Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0629240Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0629320Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0629380Z         spectrum_wavelength,
2025-01-07T17:55:43.0629430Z         t_inner,
2025-01-07T17:55:43.0635020Z         time_of_simulation,
2025-01-07T17:55:43.0635110Z         time_explosion,
2025-01-07T17:55:43.0635160Z         v_inner,
2025-01-07T17:55:43.0635200Z         v_outer,
2025-01-07T17:55:43.0635250Z         velocity
2025-01-07T17:55:43.0635290Z     ):
2025-01-07T17:55:43.0635340Z         """
2025-01-07T17:55:43.0635510Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0635560Z     
2025-01-07T17:55:43.0635610Z         Parameters
2025-01-07T17:55:43.0635650Z         ----------
2025-01-07T17:55:43.0635710Z         last_interaction_type : np.array
2025-01-07T17:55:43.0635830Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0635930Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0636000Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0636110Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0636690Z             absorption (interaction in)
2025-01-07T17:55:43.0636780Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0636890Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0636950Z             emission (interaction out)
2025-01-07T17:55:43.0637020Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0637140Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0637200Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0637320Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0637370Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0637510Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0637570Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0638260Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0638310Z             unit of Hz
2025-01-07T17:55:43.0638380Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0638470Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0638540Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0638620Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0638700Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0638800Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0638880Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0638970Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0639050Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0639160Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0639210Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0639310Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0639380Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0639470Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0639510Z         """
2025-01-07T17:55:43.0639650Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0639730Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0639790Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0639840Z             {
2025-01-07T17:55:43.0640130Z                 "nus": packet_nus,
2025-01-07T17:55:43.0640510Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0640890Z                 "energies": packet_energies,
2025-01-07T17:55:43.0641370Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0641500Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0641620Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0641730Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0641820Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0641870Z             }
2025-01-07T17:55:43.0641910Z         )
2025-01-07T17:55:43.0641950Z     
2025-01-07T17:55:43.0642020Z         # Save other properties
2025-01-07T17:55:43.0642080Z         self.lines_df = lines_df
2025-01-07T17:55:43.0642140Z         self.r_inner = r_inner
2025-01-07T17:55:43.0642250Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0642350Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0642460Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0642540Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0642800Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0642850Z         )
2025-01-07T17:55:43.0642940Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0643000Z         self.t_inner = t_inner
2025-01-07T17:55:43.0643080Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0643150Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0643200Z         self.v_inner = v_inner
2025-01-07T17:55:43.0643260Z         self.v_outer = v_outer
2025-01-07T17:55:43.0643300Z     
2025-01-07T17:55:43.0643370Z         # First check if both options are provided
2025-01-07T17:55:43.0643510Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0643570Z >           raise ValueError(
2025-01-07T17:55:43.0643670Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0643810Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0644040Z             )
2025-01-07T17:55:43.0644320Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0644330Z 
2025-01-07T17:55:43.0644460Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0644640Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply2] _
2025-01-07T17:55:43.0644650Z 
2025-01-07T17:55:43.0644810Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0644810Z 
2025-01-07T17:55:43.0644870Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0644940Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0644980Z         """
2025-01-07T17:55:43.0645100Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0645140Z     
2025-01-07T17:55:43.0645190Z         Parameters:
2025-01-07T17:55:43.0645240Z         -----------
2025-01-07T17:55:43.0645330Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0645370Z     
2025-01-07T17:55:43.0645420Z         Returns:
2025-01-07T17:55:43.0645470Z         --------
2025-01-07T17:55:43.0645530Z         An LIVPlotter instance.
2025-01-07T17:55:43.0645570Z         """
2025-01-07T17:55:43.0645670Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0645670Z 
2025-01-07T17:55:43.0645780Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0645870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0645990Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0646100Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0646320Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0646420Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0646580Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0646630Z     return cls(
2025-01-07T17:55:43.0646710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0646710Z 
2025-01-07T17:55:43.0646920Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0647030Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0647170Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0647300Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0647470Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0647540Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0647690Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0648000Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0648170Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0648260Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0648350Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0648360Z 
2025-01-07T17:55:43.0648410Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0648540Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0649280Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0649750Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0649820Z        0.00025518])
2025-01-07T17:55:43.0649950Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0650110Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0650380Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0650480Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0650640Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0650720Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0650910Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0651050Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0651150Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0651210Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0652070Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0652440Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0652600Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0652750Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0652850Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0652980Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0653120Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0653220Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0653350Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0653450Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0653650Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0653710Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0653720Z 
2025-01-07T17:55:43.0653770Z     def __init__(
2025-01-07T17:55:43.0653810Z         self,
2025-01-07T17:55:43.0653870Z         last_interaction_type,
2025-01-07T17:55:43.0653930Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0653990Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0654050Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0654110Z         last_interaction_in_r,
2025-01-07T17:55:43.0654160Z         lines_df,
2025-01-07T17:55:43.0654210Z         packet_nus,
2025-01-07T17:55:43.0654260Z         packet_energies,
2025-01-07T17:55:43.0654300Z         r_inner,
2025-01-07T17:55:43.0654360Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0654510Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0654570Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0654640Z         spectrum_wavelength,
2025-01-07T17:55:43.0654690Z         t_inner,
2025-01-07T17:55:43.0654740Z         time_of_simulation,
2025-01-07T17:55:43.0654790Z         time_explosion,
2025-01-07T17:55:43.0654840Z         v_inner,
2025-01-07T17:55:43.0654890Z         v_outer,
2025-01-07T17:55:43.0654930Z         velocity
2025-01-07T17:55:43.0654980Z     ):
2025-01-07T17:55:43.0655020Z         """
2025-01-07T17:55:43.0655200Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0655240Z     
2025-01-07T17:55:43.0655290Z         Parameters
2025-01-07T17:55:43.0655340Z         ----------
2025-01-07T17:55:43.0655400Z         last_interaction_type : np.array
2025-01-07T17:55:43.0655520Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0655610Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0655680Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0655800Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0655860Z             absorption (interaction in)
2025-01-07T17:55:43.0656000Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0656110Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0656170Z             emission (interaction out)
2025-01-07T17:55:43.0656240Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0656360Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0656430Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0656550Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0656610Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0656730Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0656790Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0656920Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0656980Z             unit of Hz
2025-01-07T17:55:43.0657040Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0657150Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0657210Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0657300Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0657380Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0657470Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0657560Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0657650Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0657720Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0657820Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0657880Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0658410Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0658500Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0658590Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0658640Z         """
2025-01-07T17:55:43.0658770Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0658850Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0658910Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0658960Z             {
2025-01-07T17:55:43.0659020Z                 "nus": packet_nus,
2025-01-07T17:55:43.0659110Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0659190Z                 "energies": packet_energies,
2025-01-07T17:55:43.0659270Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0659390Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0659510Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0659630Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0659720Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0659770Z             }
2025-01-07T17:55:43.0659810Z         )
2025-01-07T17:55:43.0659850Z     
2025-01-07T17:55:43.0659910Z         # Save other properties
2025-01-07T17:55:43.0659960Z         self.lines_df = lines_df
2025-01-07T17:55:43.0660020Z         self.r_inner = r_inner
2025-01-07T17:55:43.0660130Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0660240Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0660340Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0660420Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0660490Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0660540Z         )
2025-01-07T17:55:43.0660630Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0660680Z         self.t_inner = t_inner
2025-01-07T17:55:43.0660850Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0660920Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0660980Z         self.v_inner = v_inner
2025-01-07T17:55:43.0661030Z         self.v_outer = v_outer
2025-01-07T17:55:43.0661080Z     
2025-01-07T17:55:43.0661150Z         # First check if both options are provided
2025-01-07T17:55:43.0661290Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0661340Z >           raise ValueError(
2025-01-07T17:55:43.0661640Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0661780Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0661820Z             )
2025-01-07T17:55:43.0662100Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0662110Z 
2025-01-07T17:55:43.0662250Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0662420Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply3] _
2025-01-07T17:55:43.0662430Z 
2025-01-07T17:55:43.0662600Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0662600Z 
2025-01-07T17:55:43.0662660Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0662720Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0662770Z         """
2025-01-07T17:55:43.0662880Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0662930Z     
2025-01-07T17:55:43.0662970Z         Parameters:
2025-01-07T17:55:43.0663030Z         -----------
2025-01-07T17:55:43.0663110Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0663310Z     
2025-01-07T17:55:43.0663370Z         Returns:
2025-01-07T17:55:43.0663420Z         --------
2025-01-07T17:55:43.0663470Z         An LIVPlotter instance.
2025-01-07T17:55:43.0663520Z         """
2025-01-07T17:55:43.0663620Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0663630Z 
2025-01-07T17:55:43.0663730Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0663820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0663940Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0664060Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0664220Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0664320Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0664480Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0664530Z     return cls(
2025-01-07T17:55:43.0664620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0664620Z 
2025-01-07T17:55:43.0664830Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0664940Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0665080Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0665220Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0665370Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0665460Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0665600Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0665670Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0665810Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0665900Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0666410Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0666410Z 
2025-01-07T17:55:43.0666470Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0666590Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0666670Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0666830Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0666870Z        0.00025518])
2025-01-07T17:55:43.0667000Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0667920Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0668360Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0668770Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0668980Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0669070Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0669260Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0669410Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0669500Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0669570Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0669660Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0669730Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0669860Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0671160Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0671550Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0671880Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0672250Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0672500Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0672850Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0673120Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0673340Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0673500Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0673510Z 
2025-01-07T17:55:43.0673660Z     def __init__(
2025-01-07T17:55:43.0673810Z         self,
2025-01-07T17:55:43.0673980Z         last_interaction_type,
2025-01-07T17:55:43.0674170Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0674350Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0674540Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0674700Z         last_interaction_in_r,
2025-01-07T17:55:43.0674850Z         lines_df,
2025-01-07T17:55:43.0675000Z         packet_nus,
2025-01-07T17:55:43.0675170Z         packet_energies,
2025-01-07T17:55:43.0675310Z         r_inner,
2025-01-07T17:55:43.0675490Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0675860Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0676060Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0676220Z         spectrum_wavelength,
2025-01-07T17:55:43.0676370Z         t_inner,
2025-01-07T17:55:43.0676540Z         time_of_simulation,
2025-01-07T17:55:43.0680180Z         time_explosion,
2025-01-07T17:55:43.0680320Z         v_inner,
2025-01-07T17:55:43.0680360Z         v_outer,
2025-01-07T17:55:43.0680410Z         velocity
2025-01-07T17:55:43.0680700Z     ):
2025-01-07T17:55:43.0680740Z         """
2025-01-07T17:55:43.0680930Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0680980Z     
2025-01-07T17:55:43.0681030Z         Parameters
2025-01-07T17:55:43.0681080Z         ----------
2025-01-07T17:55:43.0681150Z         last_interaction_type : np.array
2025-01-07T17:55:43.0681280Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0681360Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0681440Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0681560Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0681630Z             absorption (interaction in)
2025-01-07T17:55:43.0681700Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0681810Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0681960Z             emission (interaction out)
2025-01-07T17:55:43.0682060Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0682190Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0682260Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0682380Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0682430Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0682570Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0682630Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0682770Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0682820Z             unit of Hz
2025-01-07T17:55:43.0682890Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0683120Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0683180Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0683280Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0683360Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0683460Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0683540Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0683640Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0683710Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0683820Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0683880Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0683980Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0684050Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0684130Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0684180Z         """
2025-01-07T17:55:43.0684320Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0684400Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0684460Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0684510Z             {
2025-01-07T17:55:43.0684560Z                 "nus": packet_nus,
2025-01-07T17:55:43.0684660Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0684720Z                 "energies": packet_energies,
2025-01-07T17:55:43.0684820Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0684940Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0685050Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0685160Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0685250Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0685300Z             }
2025-01-07T17:55:43.0685430Z         )
2025-01-07T17:55:43.0685470Z     
2025-01-07T17:55:43.0685530Z         # Save other properties
2025-01-07T17:55:43.0685600Z         self.lines_df = lines_df
2025-01-07T17:55:43.0685650Z         self.r_inner = r_inner
2025-01-07T17:55:43.0685760Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0685860Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0685970Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0686050Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0686120Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0686170Z         )
2025-01-07T17:55:43.0686250Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0686310Z         self.t_inner = t_inner
2025-01-07T17:55:43.0686390Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0686470Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0686520Z         self.v_inner = v_inner
2025-01-07T17:55:43.0686580Z         self.v_outer = v_outer
2025-01-07T17:55:43.0686620Z     
2025-01-07T17:55:43.0686690Z         # First check if both options are provided
2025-01-07T17:55:43.0686830Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0686890Z >           raise ValueError(
2025-01-07T17:55:43.0687000Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0687130Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0687170Z             )
2025-01-07T17:55:43.0687450Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0687460Z 
2025-01-07T17:55:43.0687650Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0687840Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _
2025-01-07T17:55:43.0687840Z 
2025-01-07T17:55:43.0688010Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0688010Z 
2025-01-07T17:55:43.0688070Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0688140Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0688180Z         """
2025-01-07T17:55:43.0688300Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0688340Z     
2025-01-07T17:55:43.0688390Z         Parameters:
2025-01-07T17:55:43.0688440Z         -----------
2025-01-07T17:55:43.0688530Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0688570Z     
2025-01-07T17:55:43.0688620Z         Returns:
2025-01-07T17:55:43.0688670Z         --------
2025-01-07T17:55:43.0688730Z         An LIVPlotter instance.
2025-01-07T17:55:43.0688780Z         """
2025-01-07T17:55:43.0688880Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0688880Z 
2025-01-07T17:55:43.0688990Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0689080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0689210Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0689320Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0689480Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0689580Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0689740Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0689780Z     return cls(
2025-01-07T17:55:43.0689870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0689870Z 
2025-01-07T17:55:43.0690090Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0690480Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0690700Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0690840Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0691000Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0691070Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0691220Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0691290Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0691420Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0691520Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0691610Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0691610Z 
2025-01-07T17:55:43.0691670Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0691800Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0691890Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0692040Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0692090Z        0.00025518])
2025-01-07T17:55:43.0692210Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0692370Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0692470Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0692570Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0692930Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0693020Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0693210Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0693360Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0693450Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0693510Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0693590Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0693650Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0693770Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0693920Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0694010Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0694140Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0694280Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0694380Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0694500Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0694600Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0694690Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0694740Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0694740Z 
2025-01-07T17:55:43.0694790Z     def __init__(
2025-01-07T17:55:43.0694830Z         self,
2025-01-07T17:55:43.0694900Z         last_interaction_type,
2025-01-07T17:55:43.0694960Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0695020Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0695080Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0695140Z         last_interaction_in_r,
2025-01-07T17:55:43.0695340Z         lines_df,
2025-01-07T17:55:43.0695380Z         packet_nus,
2025-01-07T17:55:43.0695440Z         packet_energies,
2025-01-07T17:55:43.0695490Z         r_inner,
2025-01-07T17:55:43.0695540Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0695690Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0695750Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0695820Z         spectrum_wavelength,
2025-01-07T17:55:43.0695860Z         t_inner,
2025-01-07T17:55:43.0695910Z         time_of_simulation,
2025-01-07T17:55:43.0695970Z         time_explosion,
2025-01-07T17:55:43.0696010Z         v_inner,
2025-01-07T17:55:43.0696050Z         v_outer,
2025-01-07T17:55:43.0696100Z         velocity
2025-01-07T17:55:43.0696140Z     ):
2025-01-07T17:55:43.0696190Z         """
2025-01-07T17:55:43.0696370Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0696420Z     
2025-01-07T17:55:43.0696470Z         Parameters
2025-01-07T17:55:43.0696520Z         ----------
2025-01-07T17:55:43.0701290Z         last_interaction_type : np.array
2025-01-07T17:55:43.0701440Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0701530Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0701600Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0701720Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0701780Z             absorption (interaction in)
2025-01-07T17:55:43.0701860Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0701970Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0702030Z             emission (interaction out)
2025-01-07T17:55:43.0702240Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0702360Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0702440Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0702560Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0702620Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0702740Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0702800Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0702930Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0702990Z             unit of Hz
2025-01-07T17:55:43.0703050Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0703150Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0703210Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0703300Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0703380Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0703480Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0703560Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0703650Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0703730Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0703830Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0703890Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0703980Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0704050Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0704130Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0704180Z         """
2025-01-07T17:55:43.0704670Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0704970Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0705160Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0705880Z             {
2025-01-07T17:55:43.0705940Z                 "nus": packet_nus,
2025-01-07T17:55:43.0706050Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0706110Z                 "energies": packet_energies,
2025-01-07T17:55:43.0706210Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0706330Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0706440Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0706550Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0706630Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0706680Z             }
2025-01-07T17:55:43.0706730Z         )
2025-01-07T17:55:43.0706770Z     
2025-01-07T17:55:43.0706840Z         # Save other properties
2025-01-07T17:55:43.0706900Z         self.lines_df = lines_df
2025-01-07T17:55:43.0706960Z         self.r_inner = r_inner
2025-01-07T17:55:43.0707070Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0707180Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0707280Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0707370Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0707430Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0707480Z         )
2025-01-07T17:55:43.0707570Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0707620Z         self.t_inner = t_inner
2025-01-07T17:55:43.0707710Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0707780Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0707830Z         self.v_inner = v_inner
2025-01-07T17:55:43.0707950Z         self.v_outer = v_outer
2025-01-07T17:55:43.0708000Z     
2025-01-07T17:55:43.0708080Z         # First check if both options are provided
2025-01-07T17:55:43.0708220Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0708280Z >           raise ValueError(
2025-01-07T17:55:43.0708380Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0708510Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0708560Z             )
2025-01-07T17:55:43.0708830Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0708840Z 
2025-01-07T17:55:43.0708970Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0709150Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _
2025-01-07T17:55:43.0709150Z 
2025-01-07T17:55:43.0709450Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0709470Z 
2025-01-07T17:55:43.0709560Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0709620Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0709670Z         """
2025-01-07T17:55:43.0709790Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0709840Z     
2025-01-07T17:55:43.0709880Z         Parameters:
2025-01-07T17:55:43.0709940Z         -----------
2025-01-07T17:55:43.0710030Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0710070Z     
2025-01-07T17:55:43.0710120Z         Returns:
2025-01-07T17:55:43.0710160Z         --------
2025-01-07T17:55:43.0710220Z         An LIVPlotter instance.
2025-01-07T17:55:43.0710270Z         """
2025-01-07T17:55:43.0710370Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0710380Z 
2025-01-07T17:55:43.0710490Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0710580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0710860Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0710980Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0711150Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0711250Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0711410Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0711460Z     return cls(
2025-01-07T17:55:43.0711550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0711550Z 
2025-01-07T17:55:43.0711770Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0711880Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0712030Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0712170Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0712330Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0712410Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0712560Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0712640Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0712770Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0712860Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0712950Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0712950Z 
2025-01-07T17:55:43.0713010Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0713220Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0713310Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0713470Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0713520Z        0.00025518])
2025-01-07T17:55:43.0713640Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0713800Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0713900Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0713990Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0714160Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0714240Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0714430Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0714580Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0714670Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0714730Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0714810Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0714880Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0715000Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0715140Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0715240Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0715360Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0715490Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0715590Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0715770Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0715870Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0715960Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0716010Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0716010Z 
2025-01-07T17:55:43.0716060Z     def __init__(
2025-01-07T17:55:43.0716110Z         self,
2025-01-07T17:55:43.0716170Z         last_interaction_type,
2025-01-07T17:55:43.0716230Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0716300Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0716360Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0716420Z         last_interaction_in_r,
2025-01-07T17:55:43.0716470Z         lines_df,
2025-01-07T17:55:43.0716520Z         packet_nus,
2025-01-07T17:55:43.0716580Z         packet_energies,
2025-01-07T17:55:43.0716620Z         r_inner,
2025-01-07T17:55:43.0716680Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0716910Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0716990Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0717040Z         spectrum_wavelength,
2025-01-07T17:55:43.0717100Z         t_inner,
2025-01-07T17:55:43.0717150Z         time_of_simulation,
2025-01-07T17:55:43.0717200Z         time_explosion,
2025-01-07T17:55:43.0717250Z         v_inner,
2025-01-07T17:55:43.0717290Z         v_outer,
2025-01-07T17:55:43.0717330Z         velocity
2025-01-07T17:55:43.0717380Z     ):
2025-01-07T17:55:43.0717420Z         """
2025-01-07T17:55:43.0717600Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0717640Z     
2025-01-07T17:55:43.0717690Z         Parameters
2025-01-07T17:55:43.0718110Z         ----------
2025-01-07T17:55:43.0718200Z         last_interaction_type : np.array
2025-01-07T17:55:43.0718330Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0718410Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0718490Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0718600Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0718670Z             absorption (interaction in)
2025-01-07T17:55:43.0718740Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0718860Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0718920Z             emission (interaction out)
2025-01-07T17:55:43.0718990Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0719110Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0719180Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0719300Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0719360Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0719490Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0719550Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0719680Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0719730Z             unit of Hz
2025-01-07T17:55:43.0719800Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0719900Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0719960Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0720040Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0720130Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0720220Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0720300Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0720390Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0720570Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0720680Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0720740Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0720830Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0720900Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0720990Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0721030Z         """
2025-01-07T17:55:43.0721170Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0721240Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0721310Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0721360Z             {
2025-01-07T17:55:43.0721420Z                 "nus": packet_nus,
2025-01-07T17:55:43.0721510Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0721590Z                 "energies": packet_energies,
2025-01-07T17:55:43.0721680Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0721800Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0721910Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0722020Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0722110Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0722150Z             }
2025-01-07T17:55:43.0722200Z         )
2025-01-07T17:55:43.0722240Z     
2025-01-07T17:55:43.0722300Z         # Save other properties
2025-01-07T17:55:43.0722360Z         self.lines_df = lines_df
2025-01-07T17:55:43.0722410Z         self.r_inner = r_inner
2025-01-07T17:55:43.0722570Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0722680Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0722790Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0722860Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0722940Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0722980Z         )
2025-01-07T17:55:43.0723070Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0723120Z         self.t_inner = t_inner
2025-01-07T17:55:43.0723210Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0723270Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0723330Z         self.v_inner = v_inner
2025-01-07T17:55:43.0723380Z         self.v_outer = v_outer
2025-01-07T17:55:43.0723430Z     
2025-01-07T17:55:43.0723500Z         # First check if both options are provided
2025-01-07T17:55:43.0723640Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0723690Z >           raise ValueError(
2025-01-07T17:55:43.0723810Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0723940Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0723980Z             )
2025-01-07T17:55:43.0724270Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0724270Z 
2025-01-07T17:55:43.0724410Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0724590Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply6] _
2025-01-07T17:55:43.0724590Z 
2025-01-07T17:55:43.0724750Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0724760Z 
2025-01-07T17:55:43.0724830Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0724890Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0724930Z         """
2025-01-07T17:55:43.0725050Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0725140Z     
2025-01-07T17:55:43.0725200Z         Parameters:
2025-01-07T17:55:43.0725250Z         -----------
2025-01-07T17:55:43.0725340Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0725380Z     
2025-01-07T17:55:43.0725430Z         Returns:
2025-01-07T17:55:43.0725480Z         --------
2025-01-07T17:55:43.0725530Z         An LIVPlotter instance.
2025-01-07T17:55:43.0725580Z         """
2025-01-07T17:55:43.0725680Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0725680Z 
2025-01-07T17:55:43.0725960Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0726100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0726230Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0726360Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0726530Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0726630Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0726790Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0726840Z     return cls(
2025-01-07T17:55:43.0726930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0726930Z 
2025-01-07T17:55:43.0727140Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0727260Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0727390Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0727730Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0727890Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0727970Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0728120Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0728190Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0728320Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0728410Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0728500Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0728500Z 
2025-01-07T17:55:43.0728560Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0728690Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0728780Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0728930Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0728980Z        0.00025518])
2025-01-07T17:55:43.0729110Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0729270Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0729360Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0729470Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0729630Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0729700Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0729890Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0730040Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0730140Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0730200Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0730360Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0730430Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0730550Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0730690Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0730790Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0730920Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0731050Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0731150Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0731280Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0731390Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0731480Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0731540Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0731540Z 
2025-01-07T17:55:43.0731590Z     def __init__(
2025-01-07T17:55:43.0731630Z         self,
2025-01-07T17:55:43.0731690Z         last_interaction_type,
2025-01-07T17:55:43.0731750Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0731920Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0732000Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0732050Z         last_interaction_in_r,
2025-01-07T17:55:43.0732100Z         lines_df,
2025-01-07T17:55:43.0732140Z         packet_nus,
2025-01-07T17:55:43.0732200Z         packet_energies,
2025-01-07T17:55:43.0732250Z         r_inner,
2025-01-07T17:55:43.0732400Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0732550Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0732630Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0732680Z         spectrum_wavelength,
2025-01-07T17:55:43.0732730Z         t_inner,
2025-01-07T17:55:43.0732780Z         time_of_simulation,
2025-01-07T17:55:43.0732830Z         time_explosion,
2025-01-07T17:55:43.0732880Z         v_inner,
2025-01-07T17:55:43.0732920Z         v_outer,
2025-01-07T17:55:43.0732970Z         velocity
2025-01-07T17:55:43.0733010Z     ):
2025-01-07T17:55:43.0733050Z         """
2025-01-07T17:55:43.0733240Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0733280Z     
2025-01-07T17:55:43.0733330Z         Parameters
2025-01-07T17:55:43.0733380Z         ----------
2025-01-07T17:55:43.0733440Z         last_interaction_type : np.array
2025-01-07T17:55:43.0733570Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0733660Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0733730Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0733850Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0733910Z             absorption (interaction in)
2025-01-07T17:55:43.0733990Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0734100Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0734160Z             emission (interaction out)
2025-01-07T17:55:43.0734230Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0734340Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0734410Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0734530Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0734590Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0734710Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0734780Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0734970Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0735020Z             unit of Hz
2025-01-07T17:55:43.0735090Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0735190Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0735250Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0735340Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0735430Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0735520Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0735600Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0735690Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0735770Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0735870Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0735940Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0736030Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0736100Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0736180Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0736230Z         """
2025-01-07T17:55:43.0736360Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0736440Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0736510Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0736550Z             {
2025-01-07T17:55:43.0736610Z                 "nus": packet_nus,
2025-01-07T17:55:43.0736700Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0736780Z                 "energies": packet_energies,
2025-01-07T17:55:43.0737060Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0737230Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0737350Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0737470Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0737560Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0737600Z             }
2025-01-07T17:55:43.0737640Z         )
2025-01-07T17:55:43.0737690Z     
2025-01-07T17:55:43.0737750Z         # Save other properties
2025-01-07T17:55:43.0737800Z         self.lines_df = lines_df
2025-01-07T17:55:43.0737860Z         self.r_inner = r_inner
2025-01-07T17:55:43.0737970Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0738080Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0738180Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0738260Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0738340Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0738390Z         )
2025-01-07T17:55:43.0738470Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0738520Z         self.t_inner = t_inner
2025-01-07T17:55:43.0738610Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0738680Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0738730Z         self.v_inner = v_inner
2025-01-07T17:55:43.0738790Z         self.v_outer = v_outer
2025-01-07T17:55:43.0738830Z     
2025-01-07T17:55:43.0738910Z         # First check if both options are provided
2025-01-07T17:55:43.0739050Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0739100Z >           raise ValueError(
2025-01-07T17:55:43.0739220Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0739340Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0739560Z             )
2025-01-07T17:55:43.0739840Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0739850Z 
2025-01-07T17:55:43.0739980Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0740160Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply7] _
2025-01-07T17:55:43.0740170Z 
2025-01-07T17:55:43.0740330Z simulation_simple = <tardis.simulation.base.Simulation object at 0x17f5dcc80>
2025-01-07T17:55:43.0740330Z 
2025-01-07T17:55:43.0740390Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0740460Z     def plotter(simulation_simple):
2025-01-07T17:55:43.0740500Z         """
2025-01-07T17:55:43.0740610Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:43.0740660Z     
2025-01-07T17:55:43.0740710Z         Parameters:
2025-01-07T17:55:43.0740760Z         -----------
2025-01-07T17:55:43.0740850Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:43.0740900Z     
2025-01-07T17:55:43.0740940Z         Returns:
2025-01-07T17:55:43.0740990Z         --------
2025-01-07T17:55:43.0741040Z         An LIVPlotter instance.
2025-01-07T17:55:43.0741090Z         """
2025-01-07T17:55:43.0741190Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0741190Z 
2025-01-07T17:55:43.0741290Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:43.0741380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0741500Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:43.0741620Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0741850Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0741960Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0742110Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0742160Z     return cls(
2025-01-07T17:55:43.0742250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0742260Z 
2025-01-07T17:55:43.0742470Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x17f5de7b0>
2025-01-07T17:55:43.0742570Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0742700Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0742850Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0743000Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0743080Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0743230Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0743310Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0743430Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0743530Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0743620Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0743620Z 
2025-01-07T17:55:43.0743680Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0743800Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0743890Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0744050Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0744090Z        0.00025518])
2025-01-07T17:55:43.0744220Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0744380Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0745350Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0745480Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:43.0745640Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:43.0745730Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0745910Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0746060Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:43.0746150Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:43.0746220Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0746300Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0746380Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0746500Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0746650Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0746740Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0746860Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0747000Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0747090Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0747220Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0747320Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0747630Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0747690Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0747690Z 
2025-01-07T17:55:43.0747740Z     def __init__(
2025-01-07T17:55:43.0747790Z         self,
2025-01-07T17:55:43.0747850Z         last_interaction_type,
2025-01-07T17:55:43.0747910Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0747970Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0748030Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0748080Z         last_interaction_in_r,
2025-01-07T17:55:43.0748140Z         lines_df,
2025-01-07T17:55:43.0748180Z         packet_nus,
2025-01-07T17:55:43.0748230Z         packet_energies,
2025-01-07T17:55:43.0748280Z         r_inner,
2025-01-07T17:55:43.0748340Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0748480Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0748550Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0748610Z         spectrum_wavelength,
2025-01-07T17:55:43.0748660Z         t_inner,
2025-01-07T17:55:43.0748710Z         time_of_simulation,
2025-01-07T17:55:43.0748760Z         time_explosion,
2025-01-07T17:55:43.0748810Z         v_inner,
2025-01-07T17:55:43.0748850Z         v_outer,
2025-01-07T17:55:43.0748900Z         velocity
2025-01-07T17:55:43.0748940Z     ):
2025-01-07T17:55:43.0748990Z         """
2025-01-07T17:55:43.0749160Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0749220Z     
2025-01-07T17:55:43.0749270Z         Parameters
2025-01-07T17:55:43.0749320Z         ----------
2025-01-07T17:55:43.0749380Z         last_interaction_type : np.array
2025-01-07T17:55:43.0749500Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0749580Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0751330Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0751480Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0751550Z             absorption (interaction in)
2025-01-07T17:55:43.0751730Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0751850Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0751910Z             emission (interaction out)
2025-01-07T17:55:43.0751990Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0752110Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0757090Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0757230Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0757290Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0757410Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0757480Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0757620Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0757680Z             unit of Hz
2025-01-07T17:55:43.0757750Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0757850Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0757910Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0757990Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0758080Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0758170Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0758250Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0758340Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0758420Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0758520Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0758580Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0758810Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0758880Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0758970Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0759020Z         """
2025-01-07T17:55:43.0759150Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0759220Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0759290Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0759340Z             {
2025-01-07T17:55:43.0759390Z                 "nus": packet_nus,
2025-01-07T17:55:43.0759490Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0759550Z                 "energies": packet_energies,
2025-01-07T17:55:43.0759640Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0759760Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0759890Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0760000Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0760090Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0760140Z             }
2025-01-07T17:55:43.0760190Z         )
2025-01-07T17:55:43.0760230Z     
2025-01-07T17:55:43.0760280Z         # Save other properties
2025-01-07T17:55:43.0760340Z         self.lines_df = lines_df
2025-01-07T17:55:43.0760400Z         self.r_inner = r_inner
2025-01-07T17:55:43.0760500Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0760610Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0760710Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0760800Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0760870Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0760920Z         )
2025-01-07T17:55:43.0761010Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0761140Z         self.t_inner = t_inner
2025-01-07T17:55:43.0761220Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0761290Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0761350Z         self.v_inner = v_inner
2025-01-07T17:55:43.0761400Z         self.v_outer = v_outer
2025-01-07T17:55:43.0761460Z     
2025-01-07T17:55:43.0761530Z         # First check if both options are provided
2025-01-07T17:55:43.0761670Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0761720Z >           raise ValueError(
2025-01-07T17:55:43.0762210Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0762360Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0762410Z             )
2025-01-07T17:55:43.0762700Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0762710Z 
2025-01-07T17:55:43.0762850Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0763010Z _ ERROR at setup of TestSDECPlotter.test_parse_species_list[_full_species_list] _
2025-01-07T17:55:43.0763020Z 
2025-01-07T17:55:43.0763220Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.0763380Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.0763560Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.0763570Z 
2025-01-07T17:55:43.0763640Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0763720Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.0763760Z         """
2025-01-07T17:55:43.0764160Z         Create a SDECPlotter object.
2025-01-07T17:55:43.0764270Z     
2025-01-07T17:55:43.0764320Z         Parameters
2025-01-07T17:55:43.0764370Z         ----------
2025-01-07T17:55:43.0764500Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.0764560Z             Simulation object.
2025-01-07T17:55:43.0764600Z     
2025-01-07T17:55:43.0764650Z         Returns
2025-01-07T17:55:43.0764710Z         -------
2025-01-07T17:55:43.0764810Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.0764850Z         """
2025-01-07T17:55:43.0764950Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0764960Z 
2025-01-07T17:55:43.0765070Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.0765160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0765280Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.0765400Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0765560Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0765670Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0765820Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0765870Z     return cls(
2025-01-07T17:55:43.0765950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0765950Z 
2025-01-07T17:55:43.0766160Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.0766270Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0766410Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0766540Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0766700Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0766780Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0767280Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0767350Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0767480Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0767570Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0767660Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0767660Z 
2025-01-07T17:55:43.0767720Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0767850Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0767950Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0768110Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0768160Z        0.00025518])
2025-01-07T17:55:43.0768280Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0768440Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0768540Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0768630Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.0768800Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.0768880Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0769070Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.0769180Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0769420Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.0769530Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.0769600Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0769680Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0769750Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0769870Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0770000Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0770100Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0770220Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0770350Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0770450Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0770810Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0770980Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0771070Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0771130Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0771130Z 
2025-01-07T17:55:43.0771180Z     def __init__(
2025-01-07T17:55:43.0771230Z         self,
2025-01-07T17:55:43.0771290Z         last_interaction_type,
2025-01-07T17:55:43.0771360Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0771420Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0771480Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0771530Z         last_interaction_in_r,
2025-01-07T17:55:43.0771580Z         lines_df,
2025-01-07T17:55:43.0771630Z         packet_nus,
2025-01-07T17:55:43.0771680Z         packet_energies,
2025-01-07T17:55:43.0771720Z         r_inner,
2025-01-07T17:55:43.0771780Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0771940Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0772180Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0772240Z         spectrum_wavelength,
2025-01-07T17:55:43.0772290Z         t_inner,
2025-01-07T17:55:43.0772350Z         time_of_simulation,
2025-01-07T17:55:43.0772400Z         time_explosion,
2025-01-07T17:55:43.0772440Z         v_inner,
2025-01-07T17:55:43.0772490Z         v_outer,
2025-01-07T17:55:43.0772530Z         velocity
2025-01-07T17:55:43.0772570Z     ):
2025-01-07T17:55:43.0772620Z         """
2025-01-07T17:55:43.0772800Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0772850Z     
2025-01-07T17:55:43.0772900Z         Parameters
2025-01-07T17:55:43.0772940Z         ----------
2025-01-07T17:55:43.0773010Z         last_interaction_type : np.array
2025-01-07T17:55:43.0773140Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0773230Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0773310Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0774130Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0774500Z             absorption (interaction in)
2025-01-07T17:55:43.0774720Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0775040Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0775220Z             emission (interaction out)
2025-01-07T17:55:43.0775500Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0775820Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0776220Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0776350Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0776540Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0776670Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0776750Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0776880Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0776930Z             unit of Hz
2025-01-07T17:55:43.0776990Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0777100Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0777160Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0777250Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0777330Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0777420Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0777500Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0777590Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0777670Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0778180Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0778450Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0778710Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0778920Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0779370Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0779490Z         """
2025-01-07T17:55:43.0779640Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0779720Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0779780Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0779830Z             {
2025-01-07T17:55:43.0779890Z                 "nus": packet_nus,
2025-01-07T17:55:43.0779990Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0780060Z                 "energies": packet_energies,
2025-01-07T17:55:43.0780150Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0780410Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0780520Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0780640Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0780730Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0780780Z             }
2025-01-07T17:55:43.0780820Z         )
2025-01-07T17:55:43.0780860Z     
2025-01-07T17:55:43.0780920Z         # Save other properties
2025-01-07T17:55:43.0780980Z         self.lines_df = lines_df
2025-01-07T17:55:43.0781030Z         self.r_inner = r_inner
2025-01-07T17:55:43.0781150Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0781250Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0781360Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0781450Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0781520Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0781570Z         )
2025-01-07T17:55:43.0781660Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0781710Z         self.t_inner = t_inner
2025-01-07T17:55:43.0781790Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0781860Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0781920Z         self.v_inner = v_inner
2025-01-07T17:55:43.0781970Z         self.v_outer = v_outer
2025-01-07T17:55:43.0782010Z     
2025-01-07T17:55:43.0782090Z         # First check if both options are provided
2025-01-07T17:55:43.0782220Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0782280Z >           raise ValueError(
2025-01-07T17:55:43.0782460Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0782600Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0782650Z             )
2025-01-07T17:55:43.0782930Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0782930Z 
2025-01-07T17:55:43.0783070Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0783190Z ---------------------------- Captured stdout setup -----------------------------
2025-01-07T17:55:43.0783360Z log_level is defined both in Functional Argument & YAML Configuration {debug section}
2025-01-07T17:55:43.0783470Z log_level = CRITICAL will be used for Log Level Determination
2025-01-07T17:55:43.0783480Z 
2025-01-07T17:55:43.0783600Z ---------------------------- Captured stderr setup -----------------------------
2025-01-07T17:55:43.0783600Z 
2025-01-07T17:55:43.0783610Z 
2025-01-07T17:55:43.0784030Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]              [A
2025-01-07T17:55:43.0784040Z 
2025-01-07T17:55:43.0784210Z Packets:                                                                                   0/4000 [00:00<?, ?it/s][A
2025-01-07T17:55:43.0784340Z Iterations:                                                                                49/? [07:07<00:00,  5.66s/it]
2025-01-07T17:55:43.0784340Z 
2025-01-07T17:55:43.0784640Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉3999/4000 [00:00<00:00, 137574.00it/s][A
2025-01-07T17:55:43.0784640Z 
2025-01-07T17:55:43.0784820Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]               [A
2025-01-07T17:55:43.0784940Z Iterations:                                                                                50/? [07:08<00:00,  4.18s/it]
2025-01-07T17:55:43.0784950Z 
2025-01-07T17:55:43.0785190Z Packets:   ████████████████████████████████████████████████████████████████████████████████4000/4000 [00:00<00:00, 136602.26it/s][A
2025-01-07T17:55:43.0785250Z 
2025-01-07T17:55:43.0785440Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]               [A
2025-01-07T17:55:43.0785550Z Iterations:                                                                                51/? [07:09<00:00,  3.14s/it]
2025-01-07T17:55:43.0785560Z 
2025-01-07T17:55:43.0785800Z Packets:   ████████████████████████████████████████████████████████████████████████████████4000/4000 [00:00<00:00, 96659.65it/s][A
2025-01-07T17:55:43.0785960Z ___ ERROR at setup of TestSDECPlotter.test_parse_species_list[_species_list] ___
2025-01-07T17:55:43.0785970Z 
2025-01-07T17:55:43.0786170Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.0786340Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.0786520Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.0786530Z 
2025-01-07T17:55:43.0786600Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0786680Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.0786730Z         """
2025-01-07T17:55:43.0786790Z         Create a SDECPlotter object.
2025-01-07T17:55:43.0786830Z     
2025-01-07T17:55:43.0786880Z         Parameters
2025-01-07T17:55:43.0786930Z         ----------
2025-01-07T17:55:43.0787040Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.0787090Z             Simulation object.
2025-01-07T17:55:43.0787140Z     
2025-01-07T17:55:43.0787180Z         Returns
2025-01-07T17:55:43.0787230Z         -------
2025-01-07T17:55:43.0787330Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.0787370Z         """
2025-01-07T17:55:43.0787570Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0787570Z 
2025-01-07T17:55:43.0787690Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.0787790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0787910Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.0788020Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0788190Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0788290Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0788440Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0788490Z     return cls(
2025-01-07T17:55:43.0788580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0788580Z 
2025-01-07T17:55:43.0788790Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.0788910Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0789140Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0789290Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0789450Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0789520Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0789670Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0789740Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0789870Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0789960Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0790060Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0790060Z 
2025-01-07T17:55:43.0790110Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0790250Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0790330Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0790490Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0790530Z        0.00025518])
2025-01-07T17:55:43.0790660Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0790810Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0790910Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0791020Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.0791730Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.0791840Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0792040Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.0792160Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0792310Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.0792410Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.0792470Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0792550Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0792610Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0792730Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0792870Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0793220Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0793350Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0793490Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0793590Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0793720Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0793820Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0793910Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0793960Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0793960Z 
2025-01-07T17:55:43.0794010Z     def __init__(
2025-01-07T17:55:43.0794050Z         self,
2025-01-07T17:55:43.0794110Z         last_interaction_type,
2025-01-07T17:55:43.0794180Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0794240Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0794290Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0794430Z         last_interaction_in_r,
2025-01-07T17:55:43.0794480Z         lines_df,
2025-01-07T17:55:43.0794530Z         packet_nus,
2025-01-07T17:55:43.0794580Z         packet_energies,
2025-01-07T17:55:43.0794630Z         r_inner,
2025-01-07T17:55:43.0794680Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0794830Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0794890Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0794960Z         spectrum_wavelength,
2025-01-07T17:55:43.0795000Z         t_inner,
2025-01-07T17:55:43.0795060Z         time_of_simulation,
2025-01-07T17:55:43.0795110Z         time_explosion,
2025-01-07T17:55:43.0795160Z         v_inner,
2025-01-07T17:55:43.0795200Z         v_outer,
2025-01-07T17:55:43.0795240Z         velocity
2025-01-07T17:55:43.0795290Z     ):
2025-01-07T17:55:43.0795330Z         """
2025-01-07T17:55:43.0795510Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0795560Z     
2025-01-07T17:55:43.0795610Z         Parameters
2025-01-07T17:55:43.0795660Z         ----------
2025-01-07T17:55:43.0795720Z         last_interaction_type : np.array
2025-01-07T17:55:43.0795840Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0795930Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0796000Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0796110Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0796170Z             absorption (interaction in)
2025-01-07T17:55:43.0796240Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0796350Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0796410Z             emission (interaction out)
2025-01-07T17:55:43.0796490Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0796610Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0796680Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0796790Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0796940Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0797060Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0797130Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0797250Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0797300Z             unit of Hz
2025-01-07T17:55:43.0797370Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0797470Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0797530Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0797670Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0797760Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0797860Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0797940Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0798030Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0798100Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0798200Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0798260Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0798350Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0798420Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0798510Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0798550Z         """
2025-01-07T17:55:43.0798690Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0798770Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0798900Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0798940Z             {
2025-01-07T17:55:43.0799000Z                 "nus": packet_nus,
2025-01-07T17:55:43.0799100Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0799160Z                 "energies": packet_energies,
2025-01-07T17:55:43.0799250Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0799370Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0799480Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0799590Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0799680Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0799720Z             }
2025-01-07T17:55:43.0799770Z         )
2025-01-07T17:55:43.0799810Z     
2025-01-07T17:55:43.0799870Z         # Save other properties
2025-01-07T17:55:43.0799930Z         self.lines_df = lines_df
2025-01-07T17:55:43.0799990Z         self.r_inner = r_inner
2025-01-07T17:55:43.0800090Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0800200Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0800300Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0800390Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0800460Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0800510Z         )
2025-01-07T17:55:43.0800590Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0800650Z         self.t_inner = t_inner
2025-01-07T17:55:43.0800730Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0800800Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0800860Z         self.v_inner = v_inner
2025-01-07T17:55:43.0800910Z         self.v_outer = v_outer
2025-01-07T17:55:43.0800960Z     
2025-01-07T17:55:43.0801040Z         # First check if both options are provided
2025-01-07T17:55:43.0801180Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0801230Z >           raise ValueError(
2025-01-07T17:55:43.0801340Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0801470Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0801780Z             )
2025-01-07T17:55:43.0802100Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0802110Z 
2025-01-07T17:55:43.0802240Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0802620Z ___ ERROR at setup of TestSDECPlotter.test_parse_species_list[_keep_colour] ____
2025-01-07T17:55:43.0802620Z 
2025-01-07T17:55:43.0802830Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.0803000Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.0803180Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.0803180Z 
2025-01-07T17:55:43.0803250Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0803340Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.0803380Z         """
2025-01-07T17:55:43.0803440Z         Create a SDECPlotter object.
2025-01-07T17:55:43.0803490Z     
2025-01-07T17:55:43.0803530Z         Parameters
2025-01-07T17:55:43.0803580Z         ----------
2025-01-07T17:55:43.0803700Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.0803750Z             Simulation object.
2025-01-07T17:55:43.0803800Z     
2025-01-07T17:55:43.0803850Z         Returns
2025-01-07T17:55:43.0803890Z         -------
2025-01-07T17:55:43.0803990Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.0804100Z         """
2025-01-07T17:55:43.0804210Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0804210Z 
2025-01-07T17:55:43.0804320Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.0804410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0804540Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.0804650Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0804820Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0804920Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0805070Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0805130Z     return cls(
2025-01-07T17:55:43.0805220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0805220Z 
2025-01-07T17:55:43.0805430Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.0805540Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0805690Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0805820Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0805980Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0806070Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0806210Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0806290Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0806420Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0806510Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0806610Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0806610Z 
2025-01-07T17:55:43.0806670Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0806790Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0806880Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0807430Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0807490Z        0.00025518])
2025-01-07T17:55:43.0807620Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0807780Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0808400Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0808550Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.0808720Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.0808790Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0808990Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.0809100Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0809250Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.0809350Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.0809410Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0809490Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0809560Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0809690Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0809820Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0810120Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0810240Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0810370Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0810470Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0810590Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0810700Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0810790Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0810840Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0810850Z 
2025-01-07T17:55:43.0810890Z     def __init__(
2025-01-07T17:55:43.0810940Z         self,
2025-01-07T17:55:43.0811000Z         last_interaction_type,
2025-01-07T17:55:43.0811060Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0811120Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0811180Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0811240Z         last_interaction_in_r,
2025-01-07T17:55:43.0811280Z         lines_df,
2025-01-07T17:55:43.0811330Z         packet_nus,
2025-01-07T17:55:43.0811380Z         packet_energies,
2025-01-07T17:55:43.0811430Z         r_inner,
2025-01-07T17:55:43.0811490Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0811630Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0811690Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0811750Z         spectrum_wavelength,
2025-01-07T17:55:43.0811800Z         t_inner,
2025-01-07T17:55:43.0811850Z         time_of_simulation,
2025-01-07T17:55:43.0811900Z         time_explosion,
2025-01-07T17:55:43.0811950Z         v_inner,
2025-01-07T17:55:43.0811990Z         v_outer,
2025-01-07T17:55:43.0812050Z         velocity
2025-01-07T17:55:43.0812090Z     ):
2025-01-07T17:55:43.0816650Z         """
2025-01-07T17:55:43.0816930Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0817020Z     
2025-01-07T17:55:43.0817070Z         Parameters
2025-01-07T17:55:43.0817130Z         ----------
2025-01-07T17:55:43.0817190Z         last_interaction_type : np.array
2025-01-07T17:55:43.0817310Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0817400Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0817470Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0817590Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0817820Z             absorption (interaction in)
2025-01-07T17:55:43.0817900Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0818010Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0818080Z             emission (interaction out)
2025-01-07T17:55:43.0818150Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0818260Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0818330Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0818440Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0818500Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0818630Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0818690Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0818820Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0818870Z             unit of Hz
2025-01-07T17:55:43.0818940Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0819040Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0819170Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0819250Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0819330Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0819430Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0819510Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0819600Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0819670Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0819780Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0819840Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0819930Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0820010Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0820100Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0820140Z         """
2025-01-07T17:55:43.0820280Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0820360Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0820420Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0820470Z             {
2025-01-07T17:55:43.0820520Z                 "nus": packet_nus,
2025-01-07T17:55:43.0820620Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0820690Z                 "energies": packet_energies,
2025-01-07T17:55:43.0820780Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0820890Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0821010Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0821120Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0821220Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0821270Z             }
2025-01-07T17:55:43.0821310Z         )
2025-01-07T17:55:43.0821350Z     
2025-01-07T17:55:43.0821410Z         # Save other properties
2025-01-07T17:55:43.0821470Z         self.lines_df = lines_df
2025-01-07T17:55:43.0821520Z         self.r_inner = r_inner
2025-01-07T17:55:43.0821630Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0821730Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0821840Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0822250Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0822330Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0822370Z         )
2025-01-07T17:55:43.0822460Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0822590Z         self.t_inner = t_inner
2025-01-07T17:55:43.0822690Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0822760Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0822820Z         self.v_inner = v_inner
2025-01-07T17:55:43.0822870Z         self.v_outer = v_outer
2025-01-07T17:55:43.0822910Z     
2025-01-07T17:55:43.0822990Z         # First check if both options are provided
2025-01-07T17:55:43.0823120Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0823170Z >           raise ValueError(
2025-01-07T17:55:43.0823280Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0823410Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0823450Z             )
2025-01-07T17:55:43.0823730Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0823740Z 
2025-01-07T17:55:43.0823870Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0824150Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-01-07T17:55:43.0824150Z 
2025-01-07T17:55:43.0824350Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.0824510Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.0824700Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.0824700Z 
2025-01-07T17:55:43.0824760Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0824850Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.0824890Z         """
2025-01-07T17:55:43.0824950Z         Create a SDECPlotter object.
2025-01-07T17:55:43.0824990Z     
2025-01-07T17:55:43.0825040Z         Parameters
2025-01-07T17:55:43.0825090Z         ----------
2025-01-07T17:55:43.0825200Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.0825260Z             Simulation object.
2025-01-07T17:55:43.0825300Z     
2025-01-07T17:55:43.0825340Z         Returns
2025-01-07T17:55:43.0825390Z         -------
2025-01-07T17:55:43.0825490Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.0825540Z         """
2025-01-07T17:55:43.0825640Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0825640Z 
2025-01-07T17:55:43.0825750Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.0825840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0825960Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.0826080Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0826240Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0826340Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0826500Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0826550Z     return cls(
2025-01-07T17:55:43.0826640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0826640Z 
2025-01-07T17:55:43.0826840Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.0826950Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0827080Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0827220Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0827380Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0827520Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0827670Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0827750Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0827880Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0827970Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0828060Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0828060Z 
2025-01-07T17:55:43.0828110Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0828250Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0828330Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0828480Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0828530Z        0.00025518])
2025-01-07T17:55:43.0828650Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0829160Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0829360Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0829460Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.0829610Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.0829700Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0829890Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.0830010Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0830160Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.0830250Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.0830320Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0830400Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0830470Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0830590Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0830740Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0830830Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0830960Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0831090Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0831190Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0831310Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0831420Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0831510Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0831560Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0831560Z 
2025-01-07T17:55:43.0831610Z     def __init__(
2025-01-07T17:55:43.0831660Z         self,
2025-01-07T17:55:43.0831720Z         last_interaction_type,
2025-01-07T17:55:43.0831780Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0831840Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0831890Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0831950Z         last_interaction_in_r,
2025-01-07T17:55:43.0832000Z         lines_df,
2025-01-07T17:55:43.0832050Z         packet_nus,
2025-01-07T17:55:43.0832100Z         packet_energies,
2025-01-07T17:55:43.0832150Z         r_inner,
2025-01-07T17:55:43.0832200Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0832460Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0832550Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0832600Z         spectrum_wavelength,
2025-01-07T17:55:43.0832650Z         t_inner,
2025-01-07T17:55:43.0832700Z         time_of_simulation,
2025-01-07T17:55:43.0832760Z         time_explosion,
2025-01-07T17:55:43.0832800Z         v_inner,
2025-01-07T17:55:43.0832850Z         v_outer,
2025-01-07T17:55:43.0832890Z         velocity
2025-01-07T17:55:43.0832940Z     ):
2025-01-07T17:55:43.0832980Z         """
2025-01-07T17:55:43.0833360Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0833420Z     
2025-01-07T17:55:43.0833470Z         Parameters
2025-01-07T17:55:43.0833520Z         ----------
2025-01-07T17:55:43.0833580Z         last_interaction_type : np.array
2025-01-07T17:55:43.0833700Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0833790Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0833870Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0833980Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0834410Z             absorption (interaction in)
2025-01-07T17:55:43.0834480Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0834600Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0834660Z             emission (interaction out)
2025-01-07T17:55:43.0834740Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0834850Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0834920Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0835030Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0835090Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0835320Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0835400Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0835540Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0835590Z             unit of Hz
2025-01-07T17:55:43.0835670Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0835770Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0835830Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0835910Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0835990Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0836090Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0836170Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0836260Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0836340Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0836440Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0836500Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0836600Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0836670Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0836760Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0836800Z         """
2025-01-07T17:55:43.0837030Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0837110Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0837170Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0837220Z             {
2025-01-07T17:55:43.0837280Z                 "nus": packet_nus,
2025-01-07T17:55:43.0837380Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0837440Z                 "energies": packet_energies,
2025-01-07T17:55:43.0837530Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0837760Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0837880Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0838000Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0838090Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0838130Z             }
2025-01-07T17:55:43.0838170Z         )
2025-01-07T17:55:43.0838210Z     
2025-01-07T17:55:43.0838280Z         # Save other properties
2025-01-07T17:55:43.0838330Z         self.lines_df = lines_df
2025-01-07T17:55:43.0838390Z         self.r_inner = r_inner
2025-01-07T17:55:43.0838500Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0838600Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0838710Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0838800Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0838870Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0838970Z         )
2025-01-07T17:55:43.0839060Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0839110Z         self.t_inner = t_inner
2025-01-07T17:55:43.0839210Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0839270Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0839330Z         self.v_inner = v_inner
2025-01-07T17:55:43.0839380Z         self.v_outer = v_outer
2025-01-07T17:55:43.0839420Z     
2025-01-07T17:55:43.0839490Z         # First check if both options are provided
2025-01-07T17:55:43.0839630Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0839680Z >           raise ValueError(
2025-01-07T17:55:43.0840020Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0840150Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0840210Z             )
2025-01-07T17:55:43.0840480Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0840490Z 
2025-01-07T17:55:43.0840620Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0840840Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-01-07T17:55:43.0840840Z 
2025-01-07T17:55:43.0841050Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.0841220Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.0841400Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.0841400Z 
2025-01-07T17:55:43.0841460Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0841550Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.0841600Z         """
2025-01-07T17:55:43.0841670Z         Create a SDECPlotter object.
2025-01-07T17:55:43.0841710Z     
2025-01-07T17:55:43.0841760Z         Parameters
2025-01-07T17:55:43.0841810Z         ----------
2025-01-07T17:55:43.0841920Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.0841970Z             Simulation object.
2025-01-07T17:55:43.0842020Z     
2025-01-07T17:55:43.0842060Z         Returns
2025-01-07T17:55:43.0842110Z         -------
2025-01-07T17:55:43.0842210Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.0842260Z         """
2025-01-07T17:55:43.0842370Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0842370Z 
2025-01-07T17:55:43.0842480Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.0842570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0842770Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.0842900Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0843070Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0843170Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0843320Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0843370Z     return cls(
2025-01-07T17:55:43.0843460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0843460Z 
2025-01-07T17:55:43.0843670Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.0843780Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0843920Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0844060Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0844210Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0844340Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0844490Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0844570Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0844700Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0844790Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0844880Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0844880Z 
2025-01-07T17:55:43.0844930Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0845060Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0845150Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0845300Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0845350Z        0.00025518])
2025-01-07T17:55:43.0845480Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0845640Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0845730Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0845840Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.0845990Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.0846080Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0846270Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.0846390Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0846530Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.0846630Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.0846690Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0846780Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0846840Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0846960Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0847100Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0847200Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0847320Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0847510Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0847620Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0847750Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0847850Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0847940Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0847990Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0847990Z 
2025-01-07T17:55:43.0848040Z     def __init__(
2025-01-07T17:55:43.0848090Z         self,
2025-01-07T17:55:43.0848140Z         last_interaction_type,
2025-01-07T17:55:43.0848200Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0848260Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0848320Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0848380Z         last_interaction_in_r,
2025-01-07T17:55:43.0848420Z         lines_df,
2025-01-07T17:55:43.0848470Z         packet_nus,
2025-01-07T17:55:43.0848520Z         packet_energies,
2025-01-07T17:55:43.0848570Z         r_inner,
2025-01-07T17:55:43.0848630Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0848820Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0848890Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0848950Z         spectrum_wavelength,
2025-01-07T17:55:43.0849000Z         t_inner,
2025-01-07T17:55:43.0849050Z         time_of_simulation,
2025-01-07T17:55:43.0849110Z         time_explosion,
2025-01-07T17:55:43.0849150Z         v_inner,
2025-01-07T17:55:43.0849200Z         v_outer,
2025-01-07T17:55:43.0849240Z         velocity
2025-01-07T17:55:43.0849280Z     ):
2025-01-07T17:55:43.0849330Z         """
2025-01-07T17:55:43.0849500Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0849550Z     
2025-01-07T17:55:43.0849600Z         Parameters
2025-01-07T17:55:43.0849650Z         ----------
2025-01-07T17:55:43.0849720Z         last_interaction_type : np.array
2025-01-07T17:55:43.0849840Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0849930Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0850000Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0850110Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0850180Z             absorption (interaction in)
2025-01-07T17:55:43.0850240Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0850360Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0850410Z             emission (interaction out)
2025-01-07T17:55:43.0850490Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0850600Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0850670Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0850790Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0850850Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0850980Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0851040Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0851170Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0851220Z             unit of Hz
2025-01-07T17:55:43.0851290Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0851380Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0851450Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0851530Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0851610Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0851700Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0852220Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0852400Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0852490Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0852590Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0852650Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0852740Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0852810Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0852900Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0852940Z         """
2025-01-07T17:55:43.0853080Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0853150Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0853220Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0853260Z             {
2025-01-07T17:55:43.0853320Z                 "nus": packet_nus,
2025-01-07T17:55:43.0853420Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0853480Z                 "energies": packet_energies,
2025-01-07T17:55:43.0853880Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0854000Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0854110Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0854220Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0854310Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0854350Z             }
2025-01-07T17:55:43.0854400Z         )
2025-01-07T17:55:43.0854440Z     
2025-01-07T17:55:43.0854500Z         # Save other properties
2025-01-07T17:55:43.0854550Z         self.lines_df = lines_df
2025-01-07T17:55:43.0854610Z         self.r_inner = r_inner
2025-01-07T17:55:43.0854730Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0854840Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0854950Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0855030Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0855100Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0855150Z         )
2025-01-07T17:55:43.0855240Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0855300Z         self.t_inner = t_inner
2025-01-07T17:55:43.0855380Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0855450Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0855510Z         self.v_inner = v_inner
2025-01-07T17:55:43.0855570Z         self.v_outer = v_outer
2025-01-07T17:55:43.0855610Z     
2025-01-07T17:55:43.0855680Z         # First check if both options are provided
2025-01-07T17:55:43.0855830Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0855880Z >           raise ValueError(
2025-01-07T17:55:43.0856000Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0856120Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0856170Z             )
2025-01-07T17:55:43.0856450Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0856450Z 
2025-01-07T17:55:43.0856590Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0856800Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-01-07T17:55:43.0856800Z 
2025-01-07T17:55:43.0857010Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.0857170Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.0857410Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.0857420Z 
2025-01-07T17:55:43.0857490Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0857570Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.0857620Z         """
2025-01-07T17:55:43.0857680Z         Create a SDECPlotter object.
2025-01-07T17:55:43.0857720Z     
2025-01-07T17:55:43.0857770Z         Parameters
2025-01-07T17:55:43.0857810Z         ----------
2025-01-07T17:55:43.0857930Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.0857980Z             Simulation object.
2025-01-07T17:55:43.0858040Z     
2025-01-07T17:55:43.0858080Z         Returns
2025-01-07T17:55:43.0858130Z         -------
2025-01-07T17:55:43.0858230Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.0858270Z         """
2025-01-07T17:55:43.0858370Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0858380Z 
2025-01-07T17:55:43.0858490Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.0858620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0858750Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.0858860Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0859030Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0859130Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0859280Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0859330Z     return cls(
2025-01-07T17:55:43.0859420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0859420Z 
2025-01-07T17:55:43.0859630Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.0859730Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0859880Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0860020Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0860180Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0860260Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0860400Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0860480Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0860610Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0860700Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0860790Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0860790Z 
2025-01-07T17:55:43.0860850Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0860980Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0861060Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0861230Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0861270Z        0.00025518])
2025-01-07T17:55:43.0861400Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0861550Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0861650Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0861750Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.0861910Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.0862040Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0862240Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.0862370Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0862520Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.0862610Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.0862670Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0862750Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0862810Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0862940Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0863070Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0863170Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0863290Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0863480Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0863580Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0863710Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0863820Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0863900Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0863960Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0863960Z 
2025-01-07T17:55:43.0864010Z     def __init__(
2025-01-07T17:55:43.0864050Z         self,
2025-01-07T17:55:43.0864110Z         last_interaction_type,
2025-01-07T17:55:43.0864170Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0864230Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0864290Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0864350Z         last_interaction_in_r,
2025-01-07T17:55:43.0864400Z         lines_df,
2025-01-07T17:55:43.0864440Z         packet_nus,
2025-01-07T17:55:43.0864500Z         packet_energies,
2025-01-07T17:55:43.0864540Z         r_inner,
2025-01-07T17:55:43.0864600Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0864750Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0864810Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0864880Z         spectrum_wavelength,
2025-01-07T17:55:43.0864920Z         t_inner,
2025-01-07T17:55:43.0864970Z         time_of_simulation,
2025-01-07T17:55:43.0865020Z         time_explosion,
2025-01-07T17:55:43.0865070Z         v_inner,
2025-01-07T17:55:43.0865110Z         v_outer,
2025-01-07T17:55:43.0870490Z         velocity
2025-01-07T17:55:43.0870610Z     ):
2025-01-07T17:55:43.0870660Z         """
2025-01-07T17:55:43.0870860Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0870910Z     
2025-01-07T17:55:43.0870960Z         Parameters
2025-01-07T17:55:43.0871010Z         ----------
2025-01-07T17:55:43.0871070Z         last_interaction_type : np.array
2025-01-07T17:55:43.0871200Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0871280Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0871360Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0871470Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0871540Z             absorption (interaction in)
2025-01-07T17:55:43.0871610Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0871720Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0871780Z             emission (interaction out)
2025-01-07T17:55:43.0872100Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0872230Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0872310Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0872420Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0872480Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0872610Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0872670Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0872800Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0872850Z             unit of Hz
2025-01-07T17:55:43.0872930Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0873030Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0873090Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0873180Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0873260Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0873360Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0873520Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0873610Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0873680Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0873790Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0873850Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0873940Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0874010Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0874100Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0874150Z         """
2025-01-07T17:55:43.0874280Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0874360Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0874420Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0874480Z             {
2025-01-07T17:55:43.0874530Z                 "nus": packet_nus,
2025-01-07T17:55:43.0874640Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0874700Z                 "energies": packet_energies,
2025-01-07T17:55:43.0874790Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0875190Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0875310Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0875420Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0875510Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0875550Z             }
2025-01-07T17:55:43.0875600Z         )
2025-01-07T17:55:43.0875640Z     
2025-01-07T17:55:43.0875700Z         # Save other properties
2025-01-07T17:55:43.0875750Z         self.lines_df = lines_df
2025-01-07T17:55:43.0875810Z         self.r_inner = r_inner
2025-01-07T17:55:43.0875930Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0876040Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0876140Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0876220Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0876290Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0876340Z         )
2025-01-07T17:55:43.0876430Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0876480Z         self.t_inner = t_inner
2025-01-07T17:55:43.0876570Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0876640Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0876690Z         self.v_inner = v_inner
2025-01-07T17:55:43.0877120Z         self.v_outer = v_outer
2025-01-07T17:55:43.0877200Z     
2025-01-07T17:55:43.0877280Z         # First check if both options are provided
2025-01-07T17:55:43.0877420Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0877480Z >           raise ValueError(
2025-01-07T17:55:43.0877580Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0877710Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0877750Z             )
2025-01-07T17:55:43.0878040Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0878040Z 
2025-01-07T17:55:43.0878180Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0878390Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-01-07T17:55:43.0878400Z 
2025-01-07T17:55:43.0878610Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.0878930Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.0879120Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.0879120Z 
2025-01-07T17:55:43.0879180Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0879270Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.0879320Z         """
2025-01-07T17:55:43.0879380Z         Create a SDECPlotter object.
2025-01-07T17:55:43.0879420Z     
2025-01-07T17:55:43.0879470Z         Parameters
2025-01-07T17:55:43.0879520Z         ----------
2025-01-07T17:55:43.0879630Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.0879690Z             Simulation object.
2025-01-07T17:55:43.0879730Z     
2025-01-07T17:55:43.0879780Z         Returns
2025-01-07T17:55:43.0879820Z         -------
2025-01-07T17:55:43.0879930Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.0879980Z         """
2025-01-07T17:55:43.0880090Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0880090Z 
2025-01-07T17:55:43.0880200Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.0880290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0880410Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.0880520Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0880690Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0880790Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0880960Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0881010Z     return cls(
2025-01-07T17:55:43.0881100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0881100Z 
2025-01-07T17:55:43.0881310Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.0881420Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0881560Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0881700Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0881860Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0881940Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0882080Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0882160Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0882330Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0882420Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0882520Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0882520Z 
2025-01-07T17:55:43.0882580Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0882710Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0882800Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0882950Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0883000Z        0.00025518])
2025-01-07T17:55:43.0883130Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0883290Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0883390Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0883500Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.0883660Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.0883820Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0884010Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.0884130Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0884280Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.0884370Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.0884440Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0884520Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0884590Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0884710Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0884850Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0884960Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0885080Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0885210Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0885310Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0885440Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0885540Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0885630Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0885680Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0885680Z 
2025-01-07T17:55:43.0885730Z     def __init__(
2025-01-07T17:55:43.0885770Z         self,
2025-01-07T17:55:43.0885830Z         last_interaction_type,
2025-01-07T17:55:43.0885890Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0885960Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0886020Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0886080Z         last_interaction_in_r,
2025-01-07T17:55:43.0886120Z         lines_df,
2025-01-07T17:55:43.0886170Z         packet_nus,
2025-01-07T17:55:43.0886220Z         packet_energies,
2025-01-07T17:55:43.0886270Z         r_inner,
2025-01-07T17:55:43.0886330Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0886470Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0886540Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0886600Z         spectrum_wavelength,
2025-01-07T17:55:43.0886640Z         t_inner,
2025-01-07T17:55:43.0886690Z         time_of_simulation,
2025-01-07T17:55:43.0886790Z         time_explosion,
2025-01-07T17:55:43.0886840Z         v_inner,
2025-01-07T17:55:43.0886890Z         v_outer,
2025-01-07T17:55:43.0886940Z         velocity
2025-01-07T17:55:43.0886990Z     ):
2025-01-07T17:55:43.0887030Z         """
2025-01-07T17:55:43.0887210Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0887260Z     
2025-01-07T17:55:43.0887310Z         Parameters
2025-01-07T17:55:43.0887350Z         ----------
2025-01-07T17:55:43.0887420Z         last_interaction_type : np.array
2025-01-07T17:55:43.0887530Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0887620Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0887700Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0887810Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0887870Z             absorption (interaction in)
2025-01-07T17:55:43.0887950Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0888060Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0888180Z             emission (interaction out)
2025-01-07T17:55:43.0888250Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0888370Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0888440Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0888550Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0888620Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0888740Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0888800Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0888940Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0888980Z             unit of Hz
2025-01-07T17:55:43.0889050Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0889150Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0889210Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0889300Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0889390Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0889480Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0889560Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0889650Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0889730Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0889830Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0889890Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0889980Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0890050Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0890140Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0890190Z         """
2025-01-07T17:55:43.0890320Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0890400Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0890470Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0890510Z             {
2025-01-07T17:55:43.0890580Z                 "nus": packet_nus,
2025-01-07T17:55:43.0890680Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0890740Z                 "energies": packet_energies,
2025-01-07T17:55:43.0890830Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0890950Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0892200Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0892740Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0892840Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0892890Z             }
2025-01-07T17:55:43.0892940Z         )
2025-01-07T17:55:43.0892980Z     
2025-01-07T17:55:43.0893040Z         # Save other properties
2025-01-07T17:55:43.0893100Z         self.lines_df = lines_df
2025-01-07T17:55:43.0893160Z         self.r_inner = r_inner
2025-01-07T17:55:43.0893270Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0893390Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0893490Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0893570Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0893650Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0893690Z         )
2025-01-07T17:55:43.0893780Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0893840Z         self.t_inner = t_inner
2025-01-07T17:55:43.0893920Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0893990Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0894120Z         self.v_inner = v_inner
2025-01-07T17:55:43.0894170Z         self.v_outer = v_outer
2025-01-07T17:55:43.0894220Z     
2025-01-07T17:55:43.0894290Z         # First check if both options are provided
2025-01-07T17:55:43.0894520Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0894590Z >           raise ValueError(
2025-01-07T17:55:43.0894700Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0894830Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0894880Z             )
2025-01-07T17:55:43.0895150Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0895160Z 
2025-01-07T17:55:43.0895290Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0895510Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-01-07T17:55:43.0895520Z 
2025-01-07T17:55:43.0895730Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.0895890Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.0896070Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.0896080Z 
2025-01-07T17:55:43.0896140Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0896230Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.0896270Z         """
2025-01-07T17:55:43.0896330Z         Create a SDECPlotter object.
2025-01-07T17:55:43.0896370Z     
2025-01-07T17:55:43.0896420Z         Parameters
2025-01-07T17:55:43.0896470Z         ----------
2025-01-07T17:55:43.0896590Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.0896640Z             Simulation object.
2025-01-07T17:55:43.0896700Z     
2025-01-07T17:55:43.0896740Z         Returns
2025-01-07T17:55:43.0896790Z         -------
2025-01-07T17:55:43.0896890Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.0896940Z         """
2025-01-07T17:55:43.0897040Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0897040Z 
2025-01-07T17:55:43.0897150Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.0897240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0897360Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.0897480Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0897640Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0898180Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0898360Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0898420Z     return cls(
2025-01-07T17:55:43.0898510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0898510Z 
2025-01-07T17:55:43.0898710Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.0898830Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0898960Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0899100Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0899260Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0899340Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0899480Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0899560Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0899890Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0899990Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0900080Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0900080Z 
2025-01-07T17:55:43.0900130Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0900260Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0900340Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0900500Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0900540Z        0.00025518])
2025-01-07T17:55:43.0900680Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0900830Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0900930Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0901030Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.0901190Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.0901270Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0901460Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.0901580Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0901720Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.0901820Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.0901880Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0901970Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0902050Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0902170Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0902310Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0902400Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0902530Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0902660Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0902770Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0902890Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0903070Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0903170Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0903230Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0903230Z 
2025-01-07T17:55:43.0903280Z     def __init__(
2025-01-07T17:55:43.0903320Z         self,
2025-01-07T17:55:43.0903380Z         last_interaction_type,
2025-01-07T17:55:43.0903440Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0903500Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0903560Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0903620Z         last_interaction_in_r,
2025-01-07T17:55:43.0903660Z         lines_df,
2025-01-07T17:55:43.0903710Z         packet_nus,
2025-01-07T17:55:43.0903760Z         packet_energies,
2025-01-07T17:55:43.0903810Z         r_inner,
2025-01-07T17:55:43.0903860Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0904000Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0904080Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0904130Z         spectrum_wavelength,
2025-01-07T17:55:43.0904240Z         t_inner,
2025-01-07T17:55:43.0904290Z         time_of_simulation,
2025-01-07T17:55:43.0904340Z         time_explosion,
2025-01-07T17:55:43.0904390Z         v_inner,
2025-01-07T17:55:43.0904430Z         v_outer,
2025-01-07T17:55:43.0904480Z         velocity
2025-01-07T17:55:43.0904520Z     ):
2025-01-07T17:55:43.0904570Z         """
2025-01-07T17:55:43.0904750Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0904790Z     
2025-01-07T17:55:43.0904840Z         Parameters
2025-01-07T17:55:43.0904890Z         ----------
2025-01-07T17:55:43.0904960Z         last_interaction_type : np.array
2025-01-07T17:55:43.0905080Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0905160Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0905230Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0905350Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0905420Z             absorption (interaction in)
2025-01-07T17:55:43.0905490Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0905600Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0905660Z             emission (interaction out)
2025-01-07T17:55:43.0905730Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0905840Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0905910Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0906030Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0906090Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0906210Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0906280Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0906400Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0906450Z             unit of Hz
2025-01-07T17:55:43.0906530Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0906630Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0906690Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0906770Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0906850Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0906940Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0907020Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0907110Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0907180Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0907280Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0907400Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0907500Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0907570Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0907660Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0907700Z         """
2025-01-07T17:55:43.0907840Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0907920Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0907980Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0908030Z             {
2025-01-07T17:55:43.0908080Z                 "nus": packet_nus,
2025-01-07T17:55:43.0908180Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0908240Z                 "energies": packet_energies,
2025-01-07T17:55:43.0908330Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0908460Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0908570Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0908740Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0909480Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0909550Z             }
2025-01-07T17:55:43.0909600Z         )
2025-01-07T17:55:43.0909640Z     
2025-01-07T17:55:43.0909700Z         # Save other properties
2025-01-07T17:55:43.0909760Z         self.lines_df = lines_df
2025-01-07T17:55:43.0909810Z         self.r_inner = r_inner
2025-01-07T17:55:43.0909930Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0910030Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0910130Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0910220Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0910290Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0910340Z         )
2025-01-07T17:55:43.0910440Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0910490Z         self.t_inner = t_inner
2025-01-07T17:55:43.0910580Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0910640Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0910700Z         self.v_inner = v_inner
2025-01-07T17:55:43.0910760Z         self.v_outer = v_outer
2025-01-07T17:55:43.0910800Z     
2025-01-07T17:55:43.0910870Z         # First check if both options are provided
2025-01-07T17:55:43.0911010Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0911070Z >           raise ValueError(
2025-01-07T17:55:43.0911180Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0911310Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0911360Z             )
2025-01-07T17:55:43.0911630Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0911640Z 
2025-01-07T17:55:43.0911780Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0912000Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-01-07T17:55:43.0912000Z 
2025-01-07T17:55:43.0912200Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.0912370Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.0912550Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.0912550Z 
2025-01-07T17:55:43.0912620Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0912700Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.0912940Z         """
2025-01-07T17:55:43.0913010Z         Create a SDECPlotter object.
2025-01-07T17:55:43.0913050Z     
2025-01-07T17:55:43.0913110Z         Parameters
2025-01-07T17:55:43.0913160Z         ----------
2025-01-07T17:55:43.0913270Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.0913320Z             Simulation object.
2025-01-07T17:55:43.0913360Z     
2025-01-07T17:55:43.0913410Z         Returns
2025-01-07T17:55:43.0913450Z         -------
2025-01-07T17:55:43.0913550Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.0913600Z         """
2025-01-07T17:55:43.0913700Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0913700Z 
2025-01-07T17:55:43.0913810Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.0913890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0914020Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.0914130Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0914350Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0914450Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0914600Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0914650Z     return cls(
2025-01-07T17:55:43.0914740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0914740Z 
2025-01-07T17:55:43.0914940Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.0915050Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0915190Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0915330Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0915480Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0915560Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0915700Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0915780Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0915910Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0916000Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0916090Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0916090Z 
2025-01-07T17:55:43.0916140Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0916270Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0916350Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0916540Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0916580Z        0.00025518])
2025-01-07T17:55:43.0916710Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0916860Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0916970Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0917060Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.0917300Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.0917380Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0917580Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.0917690Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0918070Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.0918190Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.0918250Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0918340Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0918400Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0918520Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0918650Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0918750Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0918870Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0919010Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0919120Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0919250Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0919530Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0919620Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0919670Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0919670Z 
2025-01-07T17:55:43.0919720Z     def __init__(
2025-01-07T17:55:43.0919770Z         self,
2025-01-07T17:55:43.0919830Z         last_interaction_type,
2025-01-07T17:55:43.0919890Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0919960Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0920020Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0920070Z         last_interaction_in_r,
2025-01-07T17:55:43.0920120Z         lines_df,
2025-01-07T17:55:43.0920160Z         packet_nus,
2025-01-07T17:55:43.0920220Z         packet_energies,
2025-01-07T17:55:43.0920270Z         r_inner,
2025-01-07T17:55:43.0920320Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0920480Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0920540Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0920600Z         spectrum_wavelength,
2025-01-07T17:55:43.0920650Z         t_inner,
2025-01-07T17:55:43.0920700Z         time_of_simulation,
2025-01-07T17:55:43.0920750Z         time_explosion,
2025-01-07T17:55:43.0920800Z         v_inner,
2025-01-07T17:55:43.0926520Z         v_outer,
2025-01-07T17:55:43.0926640Z         velocity
2025-01-07T17:55:43.0926680Z     ):
2025-01-07T17:55:43.0926730Z         """
2025-01-07T17:55:43.0926920Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0926960Z     
2025-01-07T17:55:43.0927010Z         Parameters
2025-01-07T17:55:43.0927070Z         ----------
2025-01-07T17:55:43.0927150Z         last_interaction_type : np.array
2025-01-07T17:55:43.0927270Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0927370Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0927440Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0927550Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0927630Z             absorption (interaction in)
2025-01-07T17:55:43.0927700Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0927810Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0927870Z             emission (interaction out)
2025-01-07T17:55:43.0927940Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0928060Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0928130Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0928530Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0928600Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0928730Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0928800Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0928930Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0928980Z             unit of Hz
2025-01-07T17:55:43.0929050Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0929160Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0929210Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0929310Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0929390Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0929480Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0929560Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0929660Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0929830Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0930090Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0930160Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0930260Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0930330Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0930420Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0930460Z         """
2025-01-07T17:55:43.0930600Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0930670Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0930740Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0930780Z             {
2025-01-07T17:55:43.0930840Z                 "nus": packet_nus,
2025-01-07T17:55:43.0930940Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0931000Z                 "energies": packet_energies,
2025-01-07T17:55:43.0931100Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0931220Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0931930Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0932080Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0932170Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0932220Z             }
2025-01-07T17:55:43.0932260Z         )
2025-01-07T17:55:43.0932310Z     
2025-01-07T17:55:43.0932370Z         # Save other properties
2025-01-07T17:55:43.0932430Z         self.lines_df = lines_df
2025-01-07T17:55:43.0932480Z         self.r_inner = r_inner
2025-01-07T17:55:43.0932600Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0932710Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0932820Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0932900Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0932980Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0933020Z         )
2025-01-07T17:55:43.0933110Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0933160Z         self.t_inner = t_inner
2025-01-07T17:55:43.0933250Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0933330Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0933380Z         self.v_inner = v_inner
2025-01-07T17:55:43.0933440Z         self.v_outer = v_outer
2025-01-07T17:55:43.0933480Z     
2025-01-07T17:55:43.0933550Z         # First check if both options are provided
2025-01-07T17:55:43.0933690Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0933880Z >           raise ValueError(
2025-01-07T17:55:43.0933990Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0934130Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0934180Z             )
2025-01-07T17:55:43.0934460Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0934460Z 
2025-01-07T17:55:43.0934600Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0934820Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-01-07T17:55:43.0934820Z 
2025-01-07T17:55:43.0935030Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.0935190Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.0935380Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.0935380Z 
2025-01-07T17:55:43.0935440Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0935600Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.0935650Z         """
2025-01-07T17:55:43.0935710Z         Create a SDECPlotter object.
2025-01-07T17:55:43.0935750Z     
2025-01-07T17:55:43.0935800Z         Parameters
2025-01-07T17:55:43.0935850Z         ----------
2025-01-07T17:55:43.0935960Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.0936020Z             Simulation object.
2025-01-07T17:55:43.0936060Z     
2025-01-07T17:55:43.0936110Z         Returns
2025-01-07T17:55:43.0936150Z         -------
2025-01-07T17:55:43.0936250Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.0936290Z         """
2025-01-07T17:55:43.0936400Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0936400Z 
2025-01-07T17:55:43.0936510Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.0936600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0936720Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.0936840Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0937010Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0937110Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0937270Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0937310Z     return cls(
2025-01-07T17:55:43.0937400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0937410Z 
2025-01-07T17:55:43.0937610Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.0937730Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0937870Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0938020Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0938180Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0938250Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0938390Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0938470Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0938600Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0938690Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0938780Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0938790Z 
2025-01-07T17:55:43.0938900Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0939040Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0939130Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0939280Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0939340Z        0.00025518])
2025-01-07T17:55:43.0939460Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0939620Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0939710Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0939810Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.0939970Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.0940060Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0940250Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.0940420Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0940570Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.0940660Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.0940720Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0940810Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0940870Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0940990Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0941130Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0941230Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0941350Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0941490Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0941600Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0941720Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0941820Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0941920Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0941960Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0941970Z 
2025-01-07T17:55:43.0942020Z     def __init__(
2025-01-07T17:55:43.0942060Z         self,
2025-01-07T17:55:43.0942120Z         last_interaction_type,
2025-01-07T17:55:43.0942180Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0942240Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0942300Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0942360Z         last_interaction_in_r,
2025-01-07T17:55:43.0942400Z         lines_df,
2025-01-07T17:55:43.0942470Z         packet_nus,
2025-01-07T17:55:43.0942520Z         packet_energies,
2025-01-07T17:55:43.0942570Z         r_inner,
2025-01-07T17:55:43.0942630Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0942770Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0942840Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0942900Z         spectrum_wavelength,
2025-01-07T17:55:43.0942940Z         t_inner,
2025-01-07T17:55:43.0943000Z         time_of_simulation,
2025-01-07T17:55:43.0943050Z         time_explosion,
2025-01-07T17:55:43.0943090Z         v_inner,
2025-01-07T17:55:43.0943140Z         v_outer,
2025-01-07T17:55:43.0943180Z         velocity
2025-01-07T17:55:43.0943230Z     ):
2025-01-07T17:55:43.0943270Z         """
2025-01-07T17:55:43.0943570Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0943620Z     
2025-01-07T17:55:43.0943680Z         Parameters
2025-01-07T17:55:43.0943730Z         ----------
2025-01-07T17:55:43.0943800Z         last_interaction_type : np.array
2025-01-07T17:55:43.0943920Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0944010Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0944090Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0944200Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0944260Z             absorption (interaction in)
2025-01-07T17:55:43.0944330Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0944440Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0944500Z             emission (interaction out)
2025-01-07T17:55:43.0944570Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0944690Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0944760Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0945160Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0945230Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0945350Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0945420Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0945550Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0945600Z             unit of Hz
2025-01-07T17:55:43.0945660Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0945760Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0945820Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0945910Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0945990Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0946080Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0946180Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0946270Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0946340Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0946450Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0946510Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0946610Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0946880Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0947020Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0947070Z         """
2025-01-07T17:55:43.0947210Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0947280Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0947360Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0947410Z             {
2025-01-07T17:55:43.0947470Z                 "nus": packet_nus,
2025-01-07T17:55:43.0947570Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0947640Z                 "energies": packet_energies,
2025-01-07T17:55:43.0947740Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0947850Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0947970Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0948080Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0948170Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0948210Z             }
2025-01-07T17:55:43.0948260Z         )
2025-01-07T17:55:43.0948300Z     
2025-01-07T17:55:43.0948650Z         # Save other properties
2025-01-07T17:55:43.0948720Z         self.lines_df = lines_df
2025-01-07T17:55:43.0948780Z         self.r_inner = r_inner
2025-01-07T17:55:43.0948900Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0949000Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0949110Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0949190Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0949270Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0949310Z         )
2025-01-07T17:55:43.0949400Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0949450Z         self.t_inner = t_inner
2025-01-07T17:55:43.0949540Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0949600Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0949660Z         self.v_inner = v_inner
2025-01-07T17:55:43.0949720Z         self.v_outer = v_outer
2025-01-07T17:55:43.0949760Z     
2025-01-07T17:55:43.0949840Z         # First check if both options are provided
2025-01-07T17:55:43.0950050Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0950110Z >           raise ValueError(
2025-01-07T17:55:43.0950220Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0950350Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0950390Z             )
2025-01-07T17:55:43.0950670Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0950670Z 
2025-01-07T17:55:43.0950810Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0951030Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-01-07T17:55:43.0951030Z 
2025-01-07T17:55:43.0951420Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.0951590Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.0951780Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.0951780Z 
2025-01-07T17:55:43.0951850Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0951940Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.0951980Z         """
2025-01-07T17:55:43.0952040Z         Create a SDECPlotter object.
2025-01-07T17:55:43.0952080Z     
2025-01-07T17:55:43.0952140Z         Parameters
2025-01-07T17:55:43.0952190Z         ----------
2025-01-07T17:55:43.0952300Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.0952350Z             Simulation object.
2025-01-07T17:55:43.0952400Z     
2025-01-07T17:55:43.0952440Z         Returns
2025-01-07T17:55:43.0952490Z         -------
2025-01-07T17:55:43.0952590Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.0952640Z         """
2025-01-07T17:55:43.0952740Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0952740Z 
2025-01-07T17:55:43.0952850Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.0952940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0953070Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.0953180Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0953350Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0953460Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0953610Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0953650Z     return cls(
2025-01-07T17:55:43.0953820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0953830Z 
2025-01-07T17:55:43.0954040Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.0954150Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0954290Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0954430Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0954590Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0954670Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0954810Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0954890Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0955020Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0955110Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0955210Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0955270Z 
2025-01-07T17:55:43.0955320Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0955450Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0955540Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0955690Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0955740Z        0.00025518])
2025-01-07T17:55:43.0955870Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0956030Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0956130Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0956230Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.0956390Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.0956480Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0956670Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.0956800Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0956950Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.0957040Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.0957110Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0957270Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0957340Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0957460Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0957940Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0958050Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0958180Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0958320Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0958420Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0958540Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0958650Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0958740Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0958790Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0958800Z 
2025-01-07T17:55:43.0958840Z     def __init__(
2025-01-07T17:55:43.0958980Z         self,
2025-01-07T17:55:43.0959050Z         last_interaction_type,
2025-01-07T17:55:43.0959110Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0959180Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0959240Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0959310Z         last_interaction_in_r,
2025-01-07T17:55:43.0959350Z         lines_df,
2025-01-07T17:55:43.0959400Z         packet_nus,
2025-01-07T17:55:43.0959450Z         packet_energies,
2025-01-07T17:55:43.0959500Z         r_inner,
2025-01-07T17:55:43.0959550Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0959700Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0959770Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0959830Z         spectrum_wavelength,
2025-01-07T17:55:43.0959880Z         t_inner,
2025-01-07T17:55:43.0959930Z         time_of_simulation,
2025-01-07T17:55:43.0959980Z         time_explosion,
2025-01-07T17:55:43.0960030Z         v_inner,
2025-01-07T17:55:43.0960080Z         v_outer,
2025-01-07T17:55:43.0960120Z         velocity
2025-01-07T17:55:43.0960220Z     ):
2025-01-07T17:55:43.0960260Z         """
2025-01-07T17:55:43.0960440Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0960740Z     
2025-01-07T17:55:43.0960870Z         Parameters
2025-01-07T17:55:43.0960920Z         ----------
2025-01-07T17:55:43.0961000Z         last_interaction_type : np.array
2025-01-07T17:55:43.0961120Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0961220Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0961300Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0961410Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0961480Z             absorption (interaction in)
2025-01-07T17:55:43.0961570Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0961680Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0961740Z             emission (interaction out)
2025-01-07T17:55:43.0961820Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0961950Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0962020Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0962140Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0962200Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0962330Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0962400Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0962520Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0962570Z             unit of Hz
2025-01-07T17:55:43.0962640Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0962750Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0962820Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0962910Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0962990Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0963080Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0963170Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0963260Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0963340Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0963450Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0963500Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0963600Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0963670Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0964090Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0964150Z         """
2025-01-07T17:55:43.0964290Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0964370Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0964540Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0964610Z             {
2025-01-07T17:55:43.0964680Z                 "nus": packet_nus,
2025-01-07T17:55:43.0964780Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0964860Z                 "energies": packet_energies,
2025-01-07T17:55:43.0964950Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0965080Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0965190Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0965300Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0965400Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0965450Z             }
2025-01-07T17:55:43.0965720Z         )
2025-01-07T17:55:43.0965760Z     
2025-01-07T17:55:43.0965820Z         # Save other properties
2025-01-07T17:55:43.0965870Z         self.lines_df = lines_df
2025-01-07T17:55:43.0965940Z         self.r_inner = r_inner
2025-01-07T17:55:43.0966050Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0966160Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0966250Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0966340Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0966410Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0966460Z         )
2025-01-07T17:55:43.0966550Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0966600Z         self.t_inner = t_inner
2025-01-07T17:55:43.0966700Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0966770Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0966830Z         self.v_inner = v_inner
2025-01-07T17:55:43.0966880Z         self.v_outer = v_outer
2025-01-07T17:55:43.0966930Z     
2025-01-07T17:55:43.0967000Z         # First check if both options are provided
2025-01-07T17:55:43.0967150Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0967200Z >           raise ValueError(
2025-01-07T17:55:43.0967310Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0967440Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0967490Z             )
2025-01-07T17:55:43.0967880Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0967890Z 
2025-01-07T17:55:43.0968040Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0968260Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-01-07T17:55:43.0968260Z 
2025-01-07T17:55:43.0968470Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.0968640Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.0968820Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.0968820Z 
2025-01-07T17:55:43.0968890Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0968980Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.0969020Z         """
2025-01-07T17:55:43.0969080Z         Create a SDECPlotter object.
2025-01-07T17:55:43.0969120Z     
2025-01-07T17:55:43.0969170Z         Parameters
2025-01-07T17:55:43.0969220Z         ----------
2025-01-07T17:55:43.0969450Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.0969500Z             Simulation object.
2025-01-07T17:55:43.0969550Z     
2025-01-07T17:55:43.0969600Z         Returns
2025-01-07T17:55:43.0969650Z         -------
2025-01-07T17:55:43.0969750Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.0969800Z         """
2025-01-07T17:55:43.0969900Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0969900Z 
2025-01-07T17:55:43.0970020Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.0970100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0970230Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.0970340Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0970510Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0970620Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0970770Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0970880Z     return cls(
2025-01-07T17:55:43.0970970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0970970Z 
2025-01-07T17:55:43.0971180Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.0971280Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0971420Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0971560Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0971710Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0971790Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0971930Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0972010Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0972140Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0972230Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0972320Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0972320Z 
2025-01-07T17:55:43.0972370Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0972500Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0972580Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0972730Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0972780Z        0.00025518])
2025-01-07T17:55:43.0972900Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0973060Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0973150Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0973260Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.0973420Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.0973500Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0973810Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.0973950Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0974100Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.0974200Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.0974260Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0974460Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0974530Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0974660Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0974800Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0974900Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0975020Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0975160Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0975260Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0975380Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0975490Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0975570Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0975630Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0975690Z 
2025-01-07T17:55:43.0975730Z     def __init__(
2025-01-07T17:55:43.0975780Z         self,
2025-01-07T17:55:43.0975840Z         last_interaction_type,
2025-01-07T17:55:43.0975910Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0975960Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0976020Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0976080Z         last_interaction_in_r,
2025-01-07T17:55:43.0976120Z         lines_df,
2025-01-07T17:55:43.0976170Z         packet_nus,
2025-01-07T17:55:43.0976220Z         packet_energies,
2025-01-07T17:55:43.0976270Z         r_inner,
2025-01-07T17:55:43.0976320Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0976460Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0976530Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0976590Z         spectrum_wavelength,
2025-01-07T17:55:43.0976640Z         t_inner,
2025-01-07T17:55:43.0976690Z         time_of_simulation,
2025-01-07T17:55:43.0976740Z         time_explosion,
2025-01-07T17:55:43.0981300Z         v_inner,
2025-01-07T17:55:43.0981360Z         v_outer,
2025-01-07T17:55:43.0981400Z         velocity
2025-01-07T17:55:43.0981450Z     ):
2025-01-07T17:55:43.0981490Z         """
2025-01-07T17:55:43.0981670Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0981720Z     
2025-01-07T17:55:43.0981760Z         Parameters
2025-01-07T17:55:43.0981810Z         ----------
2025-01-07T17:55:43.0981870Z         last_interaction_type : np.array
2025-01-07T17:55:43.0981990Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0982080Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0982150Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0982270Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0982330Z             absorption (interaction in)
2025-01-07T17:55:43.0982410Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0982520Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0982590Z             emission (interaction out)
2025-01-07T17:55:43.0982650Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0982770Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0982830Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0982950Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0983010Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0983130Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0983190Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0983440Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0983500Z             unit of Hz
2025-01-07T17:55:43.0983570Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0983670Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0983730Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0983820Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0983900Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0983990Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0984070Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0984160Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0984230Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0984340Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.0984400Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.0984490Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.0984560Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.0984700Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.0984740Z         """
2025-01-07T17:55:43.0984880Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.0984950Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.0985020Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.0985060Z             {
2025-01-07T17:55:43.0985110Z                 "nus": packet_nus,
2025-01-07T17:55:43.0985220Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.0985280Z                 "energies": packet_energies,
2025-01-07T17:55:43.0985370Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.0985490Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.0985600Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.0985720Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.0985800Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.0985850Z             }
2025-01-07T17:55:43.0985900Z         )
2025-01-07T17:55:43.0985940Z     
2025-01-07T17:55:43.0985990Z         # Save other properties
2025-01-07T17:55:43.0986050Z         self.lines_df = lines_df
2025-01-07T17:55:43.0986110Z         self.r_inner = r_inner
2025-01-07T17:55:43.0986210Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.0986320Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.0986420Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.0986500Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.0986570Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.0986610Z         )
2025-01-07T17:55:43.0986700Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.0986760Z         self.t_inner = t_inner
2025-01-07T17:55:43.0986840Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.0986910Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.0986970Z         self.v_inner = v_inner
2025-01-07T17:55:43.0987020Z         self.v_outer = v_outer
2025-01-07T17:55:43.0987060Z     
2025-01-07T17:55:43.0987140Z         # First check if both options are provided
2025-01-07T17:55:43.0987270Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.0987320Z >           raise ValueError(
2025-01-07T17:55:43.0987430Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.0987550Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.0987600Z             )
2025-01-07T17:55:43.0988240Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.0988260Z 
2025-01-07T17:55:43.0988410Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.0988620Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-01-07T17:55:43.0988630Z 
2025-01-07T17:55:43.0988830Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.0988990Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.0989170Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.0989170Z 
2025-01-07T17:55:43.0989230Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.0989320Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.0989360Z         """
2025-01-07T17:55:43.0989430Z         Create a SDECPlotter object.
2025-01-07T17:55:43.0989470Z     
2025-01-07T17:55:43.0989510Z         Parameters
2025-01-07T17:55:43.0989720Z         ----------
2025-01-07T17:55:43.0989830Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.0989890Z             Simulation object.
2025-01-07T17:55:43.0989930Z     
2025-01-07T17:55:43.0989980Z         Returns
2025-01-07T17:55:43.0990020Z         -------
2025-01-07T17:55:43.0990120Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.0990160Z         """
2025-01-07T17:55:43.0990260Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.0990270Z 
2025-01-07T17:55:43.0990370Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.0990460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0990590Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.0990700Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.0990870Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.0990970Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.0991130Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.0991170Z     return cls(
2025-01-07T17:55:43.0991260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.0991260Z 
2025-01-07T17:55:43.0991460Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.0991580Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.0991710Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0991860Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.0992010Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0992090Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.0992240Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.0992310Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.0992440Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.0992530Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.0992620Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.0992620Z 
2025-01-07T17:55:43.0992680Z [29224 rows x 12 columns]
2025-01-07T17:55:43.0992810Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.0992890Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.0993090Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.0993140Z        0.00025518])
2025-01-07T17:55:43.0993260Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.0993430Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.0993520Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.0993620Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.0993780Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.0993860Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.0994050Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.0994170Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.0994320Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.0994410Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.0994520Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.0994600Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.0994670Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.0994790Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0994930Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0995020Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.0995140Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.0995280Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.0995380Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.0995510Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.0995610Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.0995700Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.0995750Z            2.000e+09] cm / s>
2025-01-07T17:55:43.0995750Z 
2025-01-07T17:55:43.0995800Z     def __init__(
2025-01-07T17:55:43.0995840Z         self,
2025-01-07T17:55:43.0995900Z         last_interaction_type,
2025-01-07T17:55:43.0995960Z         last_line_interaction_in_id,
2025-01-07T17:55:43.0996020Z         last_line_interaction_out_id,
2025-01-07T17:55:43.0996080Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.0996130Z         last_interaction_in_r,
2025-01-07T17:55:43.0996180Z         lines_df,
2025-01-07T17:55:43.0996220Z         packet_nus,
2025-01-07T17:55:43.0996280Z         packet_energies,
2025-01-07T17:55:43.0996320Z         r_inner,
2025-01-07T17:55:43.0996380Z         spectrum_delta_frequency,
2025-01-07T17:55:43.0996520Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.0996600Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.0996650Z         spectrum_wavelength,
2025-01-07T17:55:43.0996700Z         t_inner,
2025-01-07T17:55:43.0996750Z         time_of_simulation,
2025-01-07T17:55:43.0996800Z         time_explosion,
2025-01-07T17:55:43.0996840Z         v_inner,
2025-01-07T17:55:43.0996890Z         v_outer,
2025-01-07T17:55:43.0996930Z         velocity
2025-01-07T17:55:43.0996970Z     ):
2025-01-07T17:55:43.0997020Z         """
2025-01-07T17:55:43.0997270Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.0997320Z     
2025-01-07T17:55:43.0997370Z         Parameters
2025-01-07T17:55:43.0997410Z         ----------
2025-01-07T17:55:43.0997480Z         last_interaction_type : np.array
2025-01-07T17:55:43.0997680Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.0997770Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.0997850Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.0997950Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0998020Z             absorption (interaction in)
2025-01-07T17:55:43.0998090Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.0998200Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.0998260Z             emission (interaction out)
2025-01-07T17:55:43.0998330Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.0998440Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.0998510Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.0998630Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.0998690Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.0998810Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.0998920Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.0999050Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.0999100Z             unit of Hz
2025-01-07T17:55:43.0999170Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.0999260Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.0999330Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.0999410Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.0999490Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.0999590Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.0999660Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.0999760Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.0999830Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.0999940Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1000000Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1000090Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1000160Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1000250Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1000290Z         """
2025-01-07T17:55:43.1000420Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1000490Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1000560Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1000600Z             {
2025-01-07T17:55:43.1000660Z                 "nus": packet_nus,
2025-01-07T17:55:43.1000750Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1000820Z                 "energies": packet_energies,
2025-01-07T17:55:43.1000910Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1001030Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1001150Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1001250Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1001340Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1001380Z             }
2025-01-07T17:55:43.1001430Z         )
2025-01-07T17:55:43.1001470Z     
2025-01-07T17:55:43.1001530Z         # Save other properties
2025-01-07T17:55:43.1001590Z         self.lines_df = lines_df
2025-01-07T17:55:43.1001650Z         self.r_inner = r_inner
2025-01-07T17:55:43.1001760Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1001910Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1002020Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1002100Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1002180Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1002220Z         )
2025-01-07T17:55:43.1002300Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1002360Z         self.t_inner = t_inner
2025-01-07T17:55:43.1002440Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1002510Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1002560Z         self.v_inner = v_inner
2025-01-07T17:55:43.1002620Z         self.v_outer = v_outer
2025-01-07T17:55:43.1002660Z     
2025-01-07T17:55:43.1002730Z         # First check if both options are provided
2025-01-07T17:55:43.1002860Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1002920Z >           raise ValueError(
2025-01-07T17:55:43.1003030Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1003150Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1003240Z             )
2025-01-07T17:55:43.1003520Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1003520Z 
2025-01-07T17:55:43.1003650Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1003870Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-01-07T17:55:43.1003870Z 
2025-01-07T17:55:43.1004070Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1004240Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1004420Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1004420Z 
2025-01-07T17:55:43.1004480Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1004570Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1004610Z         """
2025-01-07T17:55:43.1004680Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1004720Z     
2025-01-07T17:55:43.1004770Z         Parameters
2025-01-07T17:55:43.1004810Z         ----------
2025-01-07T17:55:43.1004920Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1004970Z             Simulation object.
2025-01-07T17:55:43.1005020Z     
2025-01-07T17:55:43.1005070Z         Returns
2025-01-07T17:55:43.1005110Z         -------
2025-01-07T17:55:43.1005210Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1005260Z         """
2025-01-07T17:55:43.1005360Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1005360Z 
2025-01-07T17:55:43.1005470Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1005560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1005690Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1005800Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1005960Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1006060Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1006210Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1006250Z     return cls(
2025-01-07T17:55:43.1006340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1006350Z 
2025-01-07T17:55:43.1006550Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1006660Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1006880Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1007040Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1007200Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1007280Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1007420Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1007490Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1007620Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1007710Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1007800Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1007800Z 
2025-01-07T17:55:43.1007850Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1007990Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1008070Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1008440Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1008510Z        0.00025518])
2025-01-07T17:55:43.1008630Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1008790Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1008880Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1008980Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1009130Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1009220Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1009410Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1009530Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1009670Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1009770Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1009830Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1009900Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1009970Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1010090Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1010260Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1010360Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1010490Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1010620Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1010730Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1010850Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1010960Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1011040Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1011090Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1011090Z 
2025-01-07T17:55:43.1011140Z     def __init__(
2025-01-07T17:55:43.1011180Z         self,
2025-01-07T17:55:43.1011240Z         last_interaction_type,
2025-01-07T17:55:43.1011300Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1011360Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1011500Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1011570Z         last_interaction_in_r,
2025-01-07T17:55:43.1011610Z         lines_df,
2025-01-07T17:55:43.1011660Z         packet_nus,
2025-01-07T17:55:43.1011720Z         packet_energies,
2025-01-07T17:55:43.1011760Z         r_inner,
2025-01-07T17:55:43.1011820Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1011960Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1012030Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1012090Z         spectrum_wavelength,
2025-01-07T17:55:43.1012140Z         t_inner,
2025-01-07T17:55:43.1012190Z         time_of_simulation,
2025-01-07T17:55:43.1012240Z         time_explosion,
2025-01-07T17:55:43.1012280Z         v_inner,
2025-01-07T17:55:43.1012320Z         v_outer,
2025-01-07T17:55:43.1012370Z         velocity
2025-01-07T17:55:43.1012410Z     ):
2025-01-07T17:55:43.1012450Z         """
2025-01-07T17:55:43.1012630Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1012670Z     
2025-01-07T17:55:43.1012720Z         Parameters
2025-01-07T17:55:43.1012820Z         ----------
2025-01-07T17:55:43.1012880Z         last_interaction_type : np.array
2025-01-07T17:55:43.1013000Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1013080Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1013160Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1013270Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1013330Z             absorption (interaction in)
2025-01-07T17:55:43.1013400Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1013510Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1013570Z             emission (interaction out)
2025-01-07T17:55:43.1013650Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1013760Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1013830Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1013950Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1014010Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1014130Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1014190Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1014320Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1014360Z             unit of Hz
2025-01-07T17:55:43.1014430Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1014530Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1014590Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1014670Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1014760Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1014850Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1014930Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1015020Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1015100Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1015200Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1015250Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1015350Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1015420Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1015500Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1015540Z         """
2025-01-07T17:55:43.1015680Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1015760Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1015870Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1015920Z             {
2025-01-07T17:55:43.1015980Z                 "nus": packet_nus,
2025-01-07T17:55:43.1016080Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1016150Z                 "energies": packet_energies,
2025-01-07T17:55:43.1016240Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1016360Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1016470Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1016580Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1016660Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1016710Z             }
2025-01-07T17:55:43.1016750Z         )
2025-01-07T17:55:43.1016790Z     
2025-01-07T17:55:43.1016850Z         # Save other properties
2025-01-07T17:55:43.1016910Z         self.lines_df = lines_df
2025-01-07T17:55:43.1016970Z         self.r_inner = r_inner
2025-01-07T17:55:43.1017070Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1017230Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1017330Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1017410Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1017480Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1017530Z         )
2025-01-07T17:55:43.1017620Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1017670Z         self.t_inner = t_inner
2025-01-07T17:55:43.1017750Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1017820Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1017870Z         self.v_inner = v_inner
2025-01-07T17:55:43.1017930Z         self.v_outer = v_outer
2025-01-07T17:55:43.1017970Z     
2025-01-07T17:55:43.1018050Z         # First check if both options are provided
2025-01-07T17:55:43.1018180Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1018240Z >           raise ValueError(
2025-01-07T17:55:43.1018350Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1018470Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1018520Z             )
2025-01-07T17:55:43.1018790Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1018790Z 
2025-01-07T17:55:43.1018920Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1019140Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-01-07T17:55:43.1019140Z 
2025-01-07T17:55:43.1019350Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1019510Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1019690Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1019700Z 
2025-01-07T17:55:43.1019760Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1019840Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1019890Z         """
2025-01-07T17:55:43.1019950Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1019990Z     
2025-01-07T17:55:43.1020040Z         Parameters
2025-01-07T17:55:43.1020080Z         ----------
2025-01-07T17:55:43.1020200Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1020250Z             Simulation object.
2025-01-07T17:55:43.1020290Z     
2025-01-07T17:55:43.1020340Z         Returns
2025-01-07T17:55:43.1020380Z         -------
2025-01-07T17:55:43.1020530Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1020580Z         """
2025-01-07T17:55:43.1020680Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1020690Z 
2025-01-07T17:55:43.1020800Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1020890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1021010Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1021120Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1021290Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1021390Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1021540Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1021590Z     return cls(
2025-01-07T17:55:43.1021670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1021680Z 
2025-01-07T17:55:43.1021890Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1022030Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1022170Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1022310Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1022460Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1022540Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1022680Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1022750Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1022880Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1022970Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1023060Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1023060Z 
2025-01-07T17:55:43.1023120Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1023240Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1023320Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1023480Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1023520Z        0.00025518])
2025-01-07T17:55:43.1023650Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1023800Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1023890Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1023990Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1024160Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1024240Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1024430Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1024550Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1024690Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1024780Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1024840Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1024920Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1024990Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1025110Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1025470Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1025600Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1025730Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1025860Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1025960Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1026080Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1026190Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1026270Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1026330Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1026330Z 
2025-01-07T17:55:43.1026370Z     def __init__(
2025-01-07T17:55:43.1026420Z         self,
2025-01-07T17:55:43.1026480Z         last_interaction_type,
2025-01-07T17:55:43.1026540Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1027010Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1027070Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1027130Z         last_interaction_in_r,
2025-01-07T17:55:43.1027170Z         lines_df,
2025-01-07T17:55:43.1027220Z         packet_nus,
2025-01-07T17:55:43.1027270Z         packet_energies,
2025-01-07T17:55:43.1027310Z         r_inner,
2025-01-07T17:55:43.1027370Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1027510Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1027580Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1027640Z         spectrum_wavelength,
2025-01-07T17:55:43.1027680Z         t_inner,
2025-01-07T17:55:43.1032670Z         time_of_simulation,
2025-01-07T17:55:43.1032790Z         time_explosion,
2025-01-07T17:55:43.1032830Z         v_inner,
2025-01-07T17:55:43.1032880Z         v_outer,
2025-01-07T17:55:43.1032930Z         velocity
2025-01-07T17:55:43.1032970Z     ):
2025-01-07T17:55:43.1033030Z         """
2025-01-07T17:55:43.1033200Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1033250Z     
2025-01-07T17:55:43.1033300Z         Parameters
2025-01-07T17:55:43.1033340Z         ----------
2025-01-07T17:55:43.1033410Z         last_interaction_type : np.array
2025-01-07T17:55:43.1033530Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1033610Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1033680Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1033800Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1033860Z             absorption (interaction in)
2025-01-07T17:55:43.1033930Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1034050Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1034110Z             emission (interaction out)
2025-01-07T17:55:43.1034180Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1034300Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1034360Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1034480Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1034530Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1034660Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1034720Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1034850Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1034900Z             unit of Hz
2025-01-07T17:55:43.1034970Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1035310Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1035370Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1035450Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1035530Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1035630Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1035710Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1035810Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1035870Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1035980Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1036040Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1036130Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1036200Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1036280Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1036330Z         """
2025-01-07T17:55:43.1036460Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1036640Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1036700Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1036750Z             {
2025-01-07T17:55:43.1036800Z                 "nus": packet_nus,
2025-01-07T17:55:43.1036900Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1036970Z                 "energies": packet_energies,
2025-01-07T17:55:43.1037060Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1037180Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1037370Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1037480Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1037570Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1037620Z             }
2025-01-07T17:55:43.1037660Z         )
2025-01-07T17:55:43.1037710Z     
2025-01-07T17:55:43.1037770Z         # Save other properties
2025-01-07T17:55:43.1037830Z         self.lines_df = lines_df
2025-01-07T17:55:43.1037890Z         self.r_inner = r_inner
2025-01-07T17:55:43.1038000Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1038100Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1038210Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1038290Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1038360Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1038400Z         )
2025-01-07T17:55:43.1038490Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1038550Z         self.t_inner = t_inner
2025-01-07T17:55:43.1038630Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1038700Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1038750Z         self.v_inner = v_inner
2025-01-07T17:55:43.1038810Z         self.v_outer = v_outer
2025-01-07T17:55:43.1038850Z     
2025-01-07T17:55:43.1038920Z         # First check if both options are provided
2025-01-07T17:55:43.1039060Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1039110Z >           raise ValueError(
2025-01-07T17:55:43.1039220Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1039340Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1039380Z             )
2025-01-07T17:55:43.1039660Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1039660Z 
2025-01-07T17:55:43.1039850Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1040220Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-01-07T17:55:43.1040250Z 
2025-01-07T17:55:43.1040490Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1040650Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1040840Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1040840Z 
2025-01-07T17:55:43.1040900Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1040990Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1041040Z         """
2025-01-07T17:55:43.1041110Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1041150Z     
2025-01-07T17:55:43.1041200Z         Parameters
2025-01-07T17:55:43.1041240Z         ----------
2025-01-07T17:55:43.1041360Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1041420Z             Simulation object.
2025-01-07T17:55:43.1041460Z     
2025-01-07T17:55:43.1041510Z         Returns
2025-01-07T17:55:43.1041730Z         -------
2025-01-07T17:55:43.1041840Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1041880Z         """
2025-01-07T17:55:43.1041990Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1041990Z 
2025-01-07T17:55:43.1042100Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1042190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1042320Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1042430Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1042610Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1042710Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1042880Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1042920Z     return cls(
2025-01-07T17:55:43.1043020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1043020Z 
2025-01-07T17:55:43.1043220Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1043330Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1043470Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1043610Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1043770Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1043850Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1043990Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1044060Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1044200Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1044290Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1044380Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1044380Z 
2025-01-07T17:55:43.1044440Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1044560Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1044650Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1044800Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1044850Z        0.00025518])
2025-01-07T17:55:43.1044970Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1045200Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1045300Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1045400Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1045560Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1045650Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1045840Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1045950Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1046100Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1046190Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1046250Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1046340Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1046400Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1046520Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1046710Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1046810Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1046930Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1047070Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1047170Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1047290Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1047390Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1047480Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1047530Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1047540Z 
2025-01-07T17:55:43.1047590Z     def __init__(
2025-01-07T17:55:43.1047630Z         self,
2025-01-07T17:55:43.1047690Z         last_interaction_type,
2025-01-07T17:55:43.1047750Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1047820Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1047880Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1047930Z         last_interaction_in_r,
2025-01-07T17:55:43.1047980Z         lines_df,
2025-01-07T17:55:43.1048020Z         packet_nus,
2025-01-07T17:55:43.1048080Z         packet_energies,
2025-01-07T17:55:43.1048120Z         r_inner,
2025-01-07T17:55:43.1048180Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1048320Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1048390Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1048450Z         spectrum_wavelength,
2025-01-07T17:55:43.1048500Z         t_inner,
2025-01-07T17:55:43.1048570Z         time_of_simulation,
2025-01-07T17:55:43.1048630Z         time_explosion,
2025-01-07T17:55:43.1048670Z         v_inner,
2025-01-07T17:55:43.1048720Z         v_outer,
2025-01-07T17:55:43.1048760Z         velocity
2025-01-07T17:55:43.1048800Z     ):
2025-01-07T17:55:43.1048850Z         """
2025-01-07T17:55:43.1049020Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1049060Z     
2025-01-07T17:55:43.1049120Z         Parameters
2025-01-07T17:55:43.1049170Z         ----------
2025-01-07T17:55:43.1049230Z         last_interaction_type : np.array
2025-01-07T17:55:43.1049350Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1049440Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1049520Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1049850Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1049940Z             absorption (interaction in)
2025-01-07T17:55:43.1050010Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1050130Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1050180Z             emission (interaction out)
2025-01-07T17:55:43.1050260Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1050370Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1050440Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1050560Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1050610Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1050740Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1050800Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1050940Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1050990Z             unit of Hz
2025-01-07T17:55:43.1051060Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1051250Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1051310Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1051390Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1051480Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1051570Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1051650Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1051750Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1051810Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1051920Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1051980Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1052070Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1052140Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1052230Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1052270Z         """
2025-01-07T17:55:43.1052400Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1052480Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1052550Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1052590Z             {
2025-01-07T17:55:43.1052650Z                 "nus": packet_nus,
2025-01-07T17:55:43.1052750Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1052810Z                 "energies": packet_energies,
2025-01-07T17:55:43.1052910Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1053030Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1053140Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1053250Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1053340Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1053380Z             }
2025-01-07T17:55:43.1053430Z         )
2025-01-07T17:55:43.1053470Z     
2025-01-07T17:55:43.1053540Z         # Save other properties
2025-01-07T17:55:43.1053600Z         self.lines_df = lines_df
2025-01-07T17:55:43.1053660Z         self.r_inner = r_inner
2025-01-07T17:55:43.1053760Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1053870Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1053970Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1054040Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1054110Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1054210Z         )
2025-01-07T17:55:43.1054310Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1054370Z         self.t_inner = t_inner
2025-01-07T17:55:43.1054460Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1054530Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1054580Z         self.v_inner = v_inner
2025-01-07T17:55:43.1054640Z         self.v_outer = v_outer
2025-01-07T17:55:43.1054680Z     
2025-01-07T17:55:43.1054750Z         # First check if both options are provided
2025-01-07T17:55:43.1054890Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1054940Z >           raise ValueError(
2025-01-07T17:55:43.1055040Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1055180Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1055220Z             )
2025-01-07T17:55:43.1055500Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1055550Z 
2025-01-07T17:55:43.1055690Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1055920Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-01-07T17:55:43.1055920Z 
2025-01-07T17:55:43.1056120Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1056280Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1056470Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1056470Z 
2025-01-07T17:55:43.1056530Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1056620Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1056660Z         """
2025-01-07T17:55:43.1056730Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1056770Z     
2025-01-07T17:55:43.1056820Z         Parameters
2025-01-07T17:55:43.1056870Z         ----------
2025-01-07T17:55:43.1056980Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1057030Z             Simulation object.
2025-01-07T17:55:43.1057080Z     
2025-01-07T17:55:43.1057130Z         Returns
2025-01-07T17:55:43.1057170Z         -------
2025-01-07T17:55:43.1057270Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1057320Z         """
2025-01-07T17:55:43.1057420Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1057420Z 
2025-01-07T17:55:43.1057530Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1057620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1057740Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1057850Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1058020Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1058120Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1058280Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1058320Z     return cls(
2025-01-07T17:55:43.1058410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1058410Z 
2025-01-07T17:55:43.1058620Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1058730Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1058860Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1059000Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1059210Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1059280Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1059440Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1059510Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1059640Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1059730Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1059820Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1059820Z 
2025-01-07T17:55:43.1059870Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1060000Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1060090Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1060240Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1060290Z        0.00025518])
2025-01-07T17:55:43.1060410Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1060620Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1060710Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1060810Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1060970Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1061060Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1061240Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1061360Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1061510Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1061610Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1061670Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1061750Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1061820Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1061940Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1062080Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1062180Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1062290Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1062620Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1062800Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1062950Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1063060Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1063150Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1063200Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1063210Z 
2025-01-07T17:55:43.1063260Z     def __init__(
2025-01-07T17:55:43.1063310Z         self,
2025-01-07T17:55:43.1063370Z         last_interaction_type,
2025-01-07T17:55:43.1063430Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1063490Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1063550Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1063610Z         last_interaction_in_r,
2025-01-07T17:55:43.1063650Z         lines_df,
2025-01-07T17:55:43.1063700Z         packet_nus,
2025-01-07T17:55:43.1063750Z         packet_energies,
2025-01-07T17:55:43.1063800Z         r_inner,
2025-01-07T17:55:43.1064180Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1064320Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1064400Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1064450Z         spectrum_wavelength,
2025-01-07T17:55:43.1064500Z         t_inner,
2025-01-07T17:55:43.1064560Z         time_of_simulation,
2025-01-07T17:55:43.1064610Z         time_explosion,
2025-01-07T17:55:43.1064650Z         v_inner,
2025-01-07T17:55:43.1064690Z         v_outer,
2025-01-07T17:55:43.1064740Z         velocity
2025-01-07T17:55:43.1064780Z     ):
2025-01-07T17:55:43.1064820Z         """
2025-01-07T17:55:43.1065010Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1065050Z     
2025-01-07T17:55:43.1065100Z         Parameters
2025-01-07T17:55:43.1065150Z         ----------
2025-01-07T17:55:43.1065220Z         last_interaction_type : np.array
2025-01-07T17:55:43.1065350Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1065440Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1065580Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1065700Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1065760Z             absorption (interaction in)
2025-01-07T17:55:43.1065830Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1065940Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1066000Z             emission (interaction out)
2025-01-07T17:55:43.1066080Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1066190Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1066260Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1066370Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1066430Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1066560Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1066620Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1066750Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1066800Z             unit of Hz
2025-01-07T17:55:43.1066870Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1066970Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1067030Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1067110Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1067190Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1067280Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1067360Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1067450Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1067530Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1067640Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1067700Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1067790Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1067860Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1067950Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1067990Z         """
2025-01-07T17:55:43.1068130Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1068200Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1068270Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1068310Z             {
2025-01-07T17:55:43.1068370Z                 "nus": packet_nus,
2025-01-07T17:55:43.1068470Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1068920Z                 "energies": packet_energies,
2025-01-07T17:55:43.1069030Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1069150Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1069260Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1069370Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1069460Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1069500Z             }
2025-01-07T17:55:43.1069540Z         )
2025-01-07T17:55:43.1069590Z     
2025-01-07T17:55:43.1069650Z         # Save other properties
2025-01-07T17:55:43.1069700Z         self.lines_df = lines_df
2025-01-07T17:55:43.1069760Z         self.r_inner = r_inner
2025-01-07T17:55:43.1069870Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1069970Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1070070Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1070150Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1070450Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1070490Z         )
2025-01-07T17:55:43.1070590Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1070640Z         self.t_inner = t_inner
2025-01-07T17:55:43.1070720Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1070790Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1070840Z         self.v_inner = v_inner
2025-01-07T17:55:43.1070900Z         self.v_outer = v_outer
2025-01-07T17:55:43.1070940Z     
2025-01-07T17:55:43.1071010Z         # First check if both options are provided
2025-01-07T17:55:43.1071140Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1071200Z >           raise ValueError(
2025-01-07T17:55:43.1071310Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1071440Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1071490Z             )
2025-01-07T17:55:43.1071770Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1071770Z 
2025-01-07T17:55:43.1071910Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1072130Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-01-07T17:55:43.1072130Z 
2025-01-07T17:55:43.1072340Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1072500Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1072680Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1072690Z 
2025-01-07T17:55:43.1072750Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1072840Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1072890Z         """
2025-01-07T17:55:43.1072960Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1073000Z     
2025-01-07T17:55:43.1073040Z         Parameters
2025-01-07T17:55:43.1073090Z         ----------
2025-01-07T17:55:43.1073200Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1073250Z             Simulation object.
2025-01-07T17:55:43.1073300Z     
2025-01-07T17:55:43.1073340Z         Returns
2025-01-07T17:55:43.1073390Z         -------
2025-01-07T17:55:43.1073490Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1073540Z         """
2025-01-07T17:55:43.1073640Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1073640Z 
2025-01-07T17:55:43.1073750Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1074090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1074270Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1074400Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1074570Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1074680Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1074830Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1074880Z     return cls(
2025-01-07T17:55:43.1074970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1074980Z 
2025-01-07T17:55:43.1075190Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1075290Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1075430Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1075570Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1075790Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1075870Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1076010Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1076090Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1076210Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1076310Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1076400Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1076400Z 
2025-01-07T17:55:43.1076450Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1076580Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1076660Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1076820Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1076870Z        0.00025518])
2025-01-07T17:55:43.1076990Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1077140Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1077250Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1077430Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1077590Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1077680Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1077870Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1077980Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1078130Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1078220Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1078280Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1078370Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1078430Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1078560Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1078700Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1078810Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1078980Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1079120Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1079220Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1079350Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1079450Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1079530Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1079580Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1079590Z 
2025-01-07T17:55:43.1079630Z     def __init__(
2025-01-07T17:55:43.1079680Z         self,
2025-01-07T17:55:43.1079730Z         last_interaction_type,
2025-01-07T17:55:43.1079800Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1079860Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1079910Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1079970Z         last_interaction_in_r,
2025-01-07T17:55:43.1080020Z         lines_df,
2025-01-07T17:55:43.1080070Z         packet_nus,
2025-01-07T17:55:43.1080170Z         packet_energies,
2025-01-07T17:55:43.1080220Z         r_inner,
2025-01-07T17:55:43.1080280Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1080420Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1080490Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1080550Z         spectrum_wavelength,
2025-01-07T17:55:43.1084850Z         t_inner,
2025-01-07T17:55:43.1084930Z         time_of_simulation,
2025-01-07T17:55:43.1084980Z         time_explosion,
2025-01-07T17:55:43.1085020Z         v_inner,
2025-01-07T17:55:43.1085060Z         v_outer,
2025-01-07T17:55:43.1085110Z         velocity
2025-01-07T17:55:43.1085160Z     ):
2025-01-07T17:55:43.1085200Z         """
2025-01-07T17:55:43.1085380Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1085420Z     
2025-01-07T17:55:43.1085470Z         Parameters
2025-01-07T17:55:43.1085520Z         ----------
2025-01-07T17:55:43.1085590Z         last_interaction_type : np.array
2025-01-07T17:55:43.1085710Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1085800Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1085870Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1085980Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1086040Z             absorption (interaction in)
2025-01-07T17:55:43.1086120Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1086230Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1086290Z             emission (interaction out)
2025-01-07T17:55:43.1086350Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1086470Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1086540Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1086660Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1086710Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1086840Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1086900Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1087020Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1087070Z             unit of Hz
2025-01-07T17:55:43.1087130Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1087230Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1087290Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1087370Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1087450Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1087710Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1087790Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1087890Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1087960Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1088070Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1088130Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1088220Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1088290Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1088370Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1088420Z         """
2025-01-07T17:55:43.1088550Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1088630Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1088690Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1088740Z             {
2025-01-07T17:55:43.1088790Z                 "nus": packet_nus,
2025-01-07T17:55:43.1088890Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1089010Z                 "energies": packet_energies,
2025-01-07T17:55:43.1089100Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1089220Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1089330Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1089440Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1089530Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1089570Z             }
2025-01-07T17:55:43.1089620Z         )
2025-01-07T17:55:43.1089670Z     
2025-01-07T17:55:43.1089730Z         # Save other properties
2025-01-07T17:55:43.1089790Z         self.lines_df = lines_df
2025-01-07T17:55:43.1089840Z         self.r_inner = r_inner
2025-01-07T17:55:43.1089960Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1090060Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1090160Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1090240Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1090310Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1090350Z         )
2025-01-07T17:55:43.1090440Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1090490Z         self.t_inner = t_inner
2025-01-07T17:55:43.1090570Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1090640Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1090690Z         self.v_inner = v_inner
2025-01-07T17:55:43.1090750Z         self.v_outer = v_outer
2025-01-07T17:55:43.1090790Z     
2025-01-07T17:55:43.1090870Z         # First check if both options are provided
2025-01-07T17:55:43.1091000Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1091060Z >           raise ValueError(
2025-01-07T17:55:43.1091160Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1091300Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1091350Z             )
2025-01-07T17:55:43.1091620Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1091620Z 
2025-01-07T17:55:43.1091760Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1091980Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-01-07T17:55:43.1091980Z 
2025-01-07T17:55:43.1092510Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1092730Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1092920Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1092920Z 
2025-01-07T17:55:43.1092990Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1093070Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1093120Z         """
2025-01-07T17:55:43.1093180Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1093220Z     
2025-01-07T17:55:43.1093370Z         Parameters
2025-01-07T17:55:43.1093470Z         ----------
2025-01-07T17:55:43.1093580Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1093640Z             Simulation object.
2025-01-07T17:55:43.1093680Z     
2025-01-07T17:55:43.1093730Z         Returns
2025-01-07T17:55:43.1093770Z         -------
2025-01-07T17:55:43.1093870Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1093920Z         """
2025-01-07T17:55:43.1094030Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1094310Z 
2025-01-07T17:55:43.1094420Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1094510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1094640Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1094750Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1094920Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1095010Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1095170Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1095210Z     return cls(
2025-01-07T17:55:43.1095310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1095310Z 
2025-01-07T17:55:43.1095520Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1095630Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1095780Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1095920Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1096070Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1096150Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1096290Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1096370Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1096490Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1096580Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1096670Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1096680Z 
2025-01-07T17:55:43.1096730Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1096860Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1096950Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1097100Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1097150Z        0.00025518])
2025-01-07T17:55:43.1097270Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1097420Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1097510Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1097610Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1097850Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1097940Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1098140Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1098250Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1098400Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1098480Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1098550Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1098630Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1098690Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1098820Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1098960Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1099060Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1099240Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1099370Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1099470Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1099600Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1099690Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1099780Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1099830Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1099830Z 
2025-01-07T17:55:43.1099880Z     def __init__(
2025-01-07T17:55:43.1099930Z         self,
2025-01-07T17:55:43.1099990Z         last_interaction_type,
2025-01-07T17:55:43.1100040Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1100110Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1100170Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1100230Z         last_interaction_in_r,
2025-01-07T17:55:43.1100270Z         lines_df,
2025-01-07T17:55:43.1100320Z         packet_nus,
2025-01-07T17:55:43.1100370Z         packet_energies,
2025-01-07T17:55:43.1100420Z         r_inner,
2025-01-07T17:55:43.1100470Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1100610Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1100680Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1100740Z         spectrum_wavelength,
2025-01-07T17:55:43.1100780Z         t_inner,
2025-01-07T17:55:43.1100840Z         time_of_simulation,
2025-01-07T17:55:43.1100890Z         time_explosion,
2025-01-07T17:55:43.1100930Z         v_inner,
2025-01-07T17:55:43.1100970Z         v_outer,
2025-01-07T17:55:43.1101020Z         velocity
2025-01-07T17:55:43.1101070Z     ):
2025-01-07T17:55:43.1101110Z         """
2025-01-07T17:55:43.1101290Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1101330Z     
2025-01-07T17:55:43.1101380Z         Parameters
2025-01-07T17:55:43.1101430Z         ----------
2025-01-07T17:55:43.1101490Z         last_interaction_type : np.array
2025-01-07T17:55:43.1101610Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1101690Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1101770Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1101870Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1101940Z             absorption (interaction in)
2025-01-07T17:55:43.1102010Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1102160Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1102220Z             emission (interaction out)
2025-01-07T17:55:43.1102290Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1102410Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1102480Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1102600Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1102660Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1102780Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1102840Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1102970Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1103020Z             unit of Hz
2025-01-07T17:55:43.1103090Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1103180Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1103250Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1103330Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1103460Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1103550Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1103640Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1103730Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1103800Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1103900Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1103960Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1104050Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1104120Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1104210Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1104250Z         """
2025-01-07T17:55:43.1104390Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1104460Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1104540Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1104580Z             {
2025-01-07T17:55:43.1104640Z                 "nus": packet_nus,
2025-01-07T17:55:43.1104740Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1104800Z                 "energies": packet_energies,
2025-01-07T17:55:43.1104890Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1105010Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1105120Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1105230Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1105320Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1105360Z             }
2025-01-07T17:55:43.1105410Z         )
2025-01-07T17:55:43.1105450Z     
2025-01-07T17:55:43.1105510Z         # Save other properties
2025-01-07T17:55:43.1105570Z         self.lines_df = lines_df
2025-01-07T17:55:43.1105630Z         self.r_inner = r_inner
2025-01-07T17:55:43.1105740Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1105840Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1105940Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1106020Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1106090Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1106130Z         )
2025-01-07T17:55:43.1106220Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1106270Z         self.t_inner = t_inner
2025-01-07T17:55:43.1106350Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1106470Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1106530Z         self.v_inner = v_inner
2025-01-07T17:55:43.1106590Z         self.v_outer = v_outer
2025-01-07T17:55:43.1106640Z     
2025-01-07T17:55:43.1106710Z         # First check if both options are provided
2025-01-07T17:55:43.1106850Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1106910Z >           raise ValueError(
2025-01-07T17:55:43.1107010Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1107140Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1107190Z             )
2025-01-07T17:55:43.1107470Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1107470Z 
2025-01-07T17:55:43.1107600Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1107790Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] _
2025-01-07T17:55:43.1107790Z 
2025-01-07T17:55:43.1108040Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1108200Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1108380Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1108380Z 
2025-01-07T17:55:43.1108440Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1108530Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1108570Z         """
2025-01-07T17:55:43.1108630Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1108670Z     
2025-01-07T17:55:43.1108720Z         Parameters
2025-01-07T17:55:43.1108770Z         ----------
2025-01-07T17:55:43.1108880Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1108930Z             Simulation object.
2025-01-07T17:55:43.1108980Z     
2025-01-07T17:55:43.1109020Z         Returns
2025-01-07T17:55:43.1109070Z         -------
2025-01-07T17:55:43.1109170Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1109220Z         """
2025-01-07T17:55:43.1109330Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1109330Z 
2025-01-07T17:55:43.1109430Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1109530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1109650Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1109760Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1109930Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1110020Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1110180Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1110230Z     return cls(
2025-01-07T17:55:43.1110320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1110320Z 
2025-01-07T17:55:43.1110530Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1110630Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1110770Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1110910Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1111060Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1111130Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1111280Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1111570Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1111770Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1111870Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1111960Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1111960Z 
2025-01-07T17:55:43.1112010Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1112140Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1112220Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1112380Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1112420Z        0.00025518])
2025-01-07T17:55:43.1112540Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1112700Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1112800Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1112900Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1113390Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1113470Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1113660Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1113780Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1113920Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1114010Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1114070Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1114150Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1114230Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1114350Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1114490Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1114590Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1114710Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1114840Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1114940Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1115060Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1115170Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1115250Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1115300Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1115310Z 
2025-01-07T17:55:43.1115350Z     def __init__(
2025-01-07T17:55:43.1115400Z         self,
2025-01-07T17:55:43.1115460Z         last_interaction_type,
2025-01-07T17:55:43.1115520Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1115580Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1115630Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1115690Z         last_interaction_in_r,
2025-01-07T17:55:43.1115730Z         lines_df,
2025-01-07T17:55:43.1115780Z         packet_nus,
2025-01-07T17:55:43.1115830Z         packet_energies,
2025-01-07T17:55:43.1115880Z         r_inner,
2025-01-07T17:55:43.1115930Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1116070Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1116140Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1116200Z         spectrum_wavelength,
2025-01-07T17:55:43.1116300Z         t_inner,
2025-01-07T17:55:43.1116360Z         time_of_simulation,
2025-01-07T17:55:43.1116410Z         time_explosion,
2025-01-07T17:55:43.1116460Z         v_inner,
2025-01-07T17:55:43.1116500Z         v_outer,
2025-01-07T17:55:43.1116550Z         velocity
2025-01-07T17:55:43.1116590Z     ):
2025-01-07T17:55:43.1116630Z         """
2025-01-07T17:55:43.1116810Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1116850Z     
2025-01-07T17:55:43.1116910Z         Parameters
2025-01-07T17:55:43.1116950Z         ----------
2025-01-07T17:55:43.1117020Z         last_interaction_type : np.array
2025-01-07T17:55:43.1117130Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1117220Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1117290Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1117520Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1117590Z             absorption (interaction in)
2025-01-07T17:55:43.1117660Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1117860Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1117920Z             emission (interaction out)
2025-01-07T17:55:43.1117990Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1118110Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1118180Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1118290Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1118350Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1118480Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1118540Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1118670Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1118720Z             unit of Hz
2025-01-07T17:55:43.1118790Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1118890Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1118950Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1119030Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1119120Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1119210Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1119290Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1119380Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1119450Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1119560Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1119610Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1119710Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1119780Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1119870Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1119910Z         """
2025-01-07T17:55:43.1120050Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1120120Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1120190Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1120230Z             {
2025-01-07T17:55:43.1120290Z                 "nus": packet_nus,
2025-01-07T17:55:43.1120380Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1120450Z                 "energies": packet_energies,
2025-01-07T17:55:43.1120540Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1120650Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1120810Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1120930Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1121020Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1121070Z             }
2025-01-07T17:55:43.1121120Z         )
2025-01-07T17:55:43.1121160Z     
2025-01-07T17:55:43.1121220Z         # Save other properties
2025-01-07T17:55:43.1121270Z         self.lines_df = lines_df
2025-01-07T17:55:43.1121330Z         self.r_inner = r_inner
2025-01-07T17:55:43.1121430Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1121540Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1121640Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1121720Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1121790Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1121830Z         )
2025-01-07T17:55:43.1121920Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1121980Z         self.t_inner = t_inner
2025-01-07T17:55:43.1122110Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1122180Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1122240Z         self.v_inner = v_inner
2025-01-07T17:55:43.1122290Z         self.v_outer = v_outer
2025-01-07T17:55:43.1122340Z     
2025-01-07T17:55:43.1122410Z         # First check if both options are provided
2025-01-07T17:55:43.1122550Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1122600Z >           raise ValueError(
2025-01-07T17:55:43.1122710Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1122840Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1122880Z             )
2025-01-07T17:55:43.1123160Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1123160Z 
2025-01-07T17:55:43.1123290Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1123480Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] _
2025-01-07T17:55:43.1123480Z 
2025-01-07T17:55:43.1123870Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1124080Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1124270Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1124270Z 
2025-01-07T17:55:43.1124340Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1124430Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1124480Z         """
2025-01-07T17:55:43.1124540Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1124580Z     
2025-01-07T17:55:43.1124650Z         Parameters
2025-01-07T17:55:43.1124700Z         ----------
2025-01-07T17:55:43.1124810Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1124870Z             Simulation object.
2025-01-07T17:55:43.1124920Z     
2025-01-07T17:55:43.1124960Z         Returns
2025-01-07T17:55:43.1125010Z         -------
2025-01-07T17:55:43.1125110Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1125160Z         """
2025-01-07T17:55:43.1125260Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1125260Z 
2025-01-07T17:55:43.1125370Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1125470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1125590Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1125710Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1126120Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1126230Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1126400Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1126450Z     return cls(
2025-01-07T17:55:43.1126540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1126540Z 
2025-01-07T17:55:43.1126750Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1126860Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1127000Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1127140Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1127300Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1127380Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1127530Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1127670Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1127800Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1127890Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1127980Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1127990Z 
2025-01-07T17:55:43.1128040Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1128160Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1128270Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1128430Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1128470Z        0.00025518])
2025-01-07T17:55:43.1128610Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1128930Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1129040Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1129140Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1129300Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1129380Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1129570Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1129690Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1129830Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1129930Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1129990Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1130080Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1130150Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1130280Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1130410Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1130510Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1130630Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1130760Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1130860Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1131200Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1131320Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1131410Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1131470Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1131470Z 
2025-01-07T17:55:43.1131510Z     def __init__(
2025-01-07T17:55:43.1131560Z         self,
2025-01-07T17:55:43.1131620Z         last_interaction_type,
2025-01-07T17:55:43.1131690Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1131750Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1131810Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1131860Z         last_interaction_in_r,
2025-01-07T17:55:43.1131900Z         lines_df,
2025-01-07T17:55:43.1131950Z         packet_nus,
2025-01-07T17:55:43.1132000Z         packet_energies,
2025-01-07T17:55:43.1132050Z         r_inner,
2025-01-07T17:55:43.1132110Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1132250Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1132320Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1137020Z         spectrum_wavelength,
2025-01-07T17:55:43.1137090Z         t_inner,
2025-01-07T17:55:43.1137150Z         time_of_simulation,
2025-01-07T17:55:43.1137200Z         time_explosion,
2025-01-07T17:55:43.1137250Z         v_inner,
2025-01-07T17:55:43.1137290Z         v_outer,
2025-01-07T17:55:43.1137340Z         velocity
2025-01-07T17:55:43.1137380Z     ):
2025-01-07T17:55:43.1137420Z         """
2025-01-07T17:55:43.1137600Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1137640Z     
2025-01-07T17:55:43.1137690Z         Parameters
2025-01-07T17:55:43.1137740Z         ----------
2025-01-07T17:55:43.1137800Z         last_interaction_type : np.array
2025-01-07T17:55:43.1137920Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1138020Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1138090Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1138210Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1138270Z             absorption (interaction in)
2025-01-07T17:55:43.1138340Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1138450Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1138510Z             emission (interaction out)
2025-01-07T17:55:43.1138580Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1138690Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1138760Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1138870Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1138930Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1139060Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1139120Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1139250Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1139300Z             unit of Hz
2025-01-07T17:55:43.1139360Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1139470Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1139530Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1139610Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1139690Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1139790Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1139860Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1139960Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1140030Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1140290Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1140360Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1140450Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1140530Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1140610Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1140650Z         """
2025-01-07T17:55:43.1140780Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1140860Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1140920Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1140970Z             {
2025-01-07T17:55:43.1141020Z                 "nus": packet_nus,
2025-01-07T17:55:43.1141120Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1141190Z                 "energies": packet_energies,
2025-01-07T17:55:43.1141280Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1141400Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1141580Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1141690Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1141780Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1141830Z             }
2025-01-07T17:55:43.1141870Z         )
2025-01-07T17:55:43.1141920Z     
2025-01-07T17:55:43.1141970Z         # Save other properties
2025-01-07T17:55:43.1142040Z         self.lines_df = lines_df
2025-01-07T17:55:43.1142090Z         self.r_inner = r_inner
2025-01-07T17:55:43.1142200Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1142300Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1142410Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1142490Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1142560Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1142610Z         )
2025-01-07T17:55:43.1142700Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1142760Z         self.t_inner = t_inner
2025-01-07T17:55:43.1142840Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1142910Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1142960Z         self.v_inner = v_inner
2025-01-07T17:55:43.1143020Z         self.v_outer = v_outer
2025-01-07T17:55:43.1143060Z     
2025-01-07T17:55:43.1143130Z         # First check if both options are provided
2025-01-07T17:55:43.1143260Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1143320Z >           raise ValueError(
2025-01-07T17:55:43.1143420Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1143550Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1143600Z             )
2025-01-07T17:55:43.1143880Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1143880Z 
2025-01-07T17:55:43.1144020Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1144200Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] _
2025-01-07T17:55:43.1144200Z 
2025-01-07T17:55:43.1144410Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1144570Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1144750Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1144750Z 
2025-01-07T17:55:43.1144860Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1145070Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1145140Z         """
2025-01-07T17:55:43.1145220Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1145270Z     
2025-01-07T17:55:43.1145310Z         Parameters
2025-01-07T17:55:43.1145360Z         ----------
2025-01-07T17:55:43.1145480Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1145540Z             Simulation object.
2025-01-07T17:55:43.1145580Z     
2025-01-07T17:55:43.1145630Z         Returns
2025-01-07T17:55:43.1145670Z         -------
2025-01-07T17:55:43.1145770Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1145820Z         """
2025-01-07T17:55:43.1145920Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1145920Z 
2025-01-07T17:55:43.1146030Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1146130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1146250Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1146370Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1146680Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1146780Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1146940Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1146980Z     return cls(
2025-01-07T17:55:43.1147070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1147070Z 
2025-01-07T17:55:43.1147280Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1147390Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1147530Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1147670Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1147830Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1147900Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1148050Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1148120Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1148250Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1148340Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1148430Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1148430Z 
2025-01-07T17:55:43.1148480Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1148620Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1148700Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1148850Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1148910Z        0.00025518])
2025-01-07T17:55:43.1149030Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1149190Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1149280Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1149380Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1149540Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1149620Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1149810Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1149990Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1150150Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1150240Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1150300Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1150380Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1150450Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1150570Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1150720Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1150810Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1150940Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1151080Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1151170Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1151350Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1151450Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1151540Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1151590Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1151590Z 
2025-01-07T17:55:43.1151640Z     def __init__(
2025-01-07T17:55:43.1151680Z         self,
2025-01-07T17:55:43.1151740Z         last_interaction_type,
2025-01-07T17:55:43.1151800Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1151860Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1151920Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1151980Z         last_interaction_in_r,
2025-01-07T17:55:43.1152020Z         lines_df,
2025-01-07T17:55:43.1152070Z         packet_nus,
2025-01-07T17:55:43.1152130Z         packet_energies,
2025-01-07T17:55:43.1152180Z         r_inner,
2025-01-07T17:55:43.1152240Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1152380Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1152450Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1152510Z         spectrum_wavelength,
2025-01-07T17:55:43.1152560Z         t_inner,
2025-01-07T17:55:43.1152610Z         time_of_simulation,
2025-01-07T17:55:43.1152660Z         time_explosion,
2025-01-07T17:55:43.1152700Z         v_inner,
2025-01-07T17:55:43.1152750Z         v_outer,
2025-01-07T17:55:43.1152790Z         velocity
2025-01-07T17:55:43.1152830Z     ):
2025-01-07T17:55:43.1152870Z         """
2025-01-07T17:55:43.1153050Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1153090Z     
2025-01-07T17:55:43.1153140Z         Parameters
2025-01-07T17:55:43.1153190Z         ----------
2025-01-07T17:55:43.1153250Z         last_interaction_type : np.array
2025-01-07T17:55:43.1153380Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1153460Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1153540Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1153650Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1153710Z             absorption (interaction in)
2025-01-07T17:55:43.1153780Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1153890Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1153950Z             emission (interaction out)
2025-01-07T17:55:43.1154020Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1154130Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1154640Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1154800Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1154860Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1154980Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1155040Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1155170Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1155220Z             unit of Hz
2025-01-07T17:55:43.1155290Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1155380Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1155450Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1155530Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1155610Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1155700Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1155780Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1155880Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1156040Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1156150Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1156200Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1156300Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1156370Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1156460Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1156500Z         """
2025-01-07T17:55:43.1156640Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1156710Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1156770Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1156820Z             {
2025-01-07T17:55:43.1156870Z                 "nus": packet_nus,
2025-01-07T17:55:43.1156980Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1157050Z                 "energies": packet_energies,
2025-01-07T17:55:43.1157150Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1157260Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1157370Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1157550Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1157640Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1157690Z             }
2025-01-07T17:55:43.1157740Z         )
2025-01-07T17:55:43.1157780Z     
2025-01-07T17:55:43.1157830Z         # Save other properties
2025-01-07T17:55:43.1157890Z         self.lines_df = lines_df
2025-01-07T17:55:43.1157950Z         self.r_inner = r_inner
2025-01-07T17:55:43.1158060Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1158160Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1158270Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1158340Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1158420Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1158460Z         )
2025-01-07T17:55:43.1158550Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1158600Z         self.t_inner = t_inner
2025-01-07T17:55:43.1158680Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1158750Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1158800Z         self.v_inner = v_inner
2025-01-07T17:55:43.1158850Z         self.v_outer = v_outer
2025-01-07T17:55:43.1158900Z     
2025-01-07T17:55:43.1158970Z         # First check if both options are provided
2025-01-07T17:55:43.1159160Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1159220Z >           raise ValueError(
2025-01-07T17:55:43.1159330Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1159460Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1159500Z             )
2025-01-07T17:55:43.1159780Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1159780Z 
2025-01-07T17:55:43.1159910Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1160100Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] _
2025-01-07T17:55:43.1160100Z 
2025-01-07T17:55:43.1160300Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1160460Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1160640Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1160690Z 
2025-01-07T17:55:43.1160750Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1160840Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1160880Z         """
2025-01-07T17:55:43.1160940Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1160980Z     
2025-01-07T17:55:43.1161030Z         Parameters
2025-01-07T17:55:43.1161070Z         ----------
2025-01-07T17:55:43.1161180Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1161240Z             Simulation object.
2025-01-07T17:55:43.1161280Z     
2025-01-07T17:55:43.1161320Z         Returns
2025-01-07T17:55:43.1161370Z         -------
2025-01-07T17:55:43.1161470Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1161510Z         """
2025-01-07T17:55:43.1161610Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1161620Z 
2025-01-07T17:55:43.1161720Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1161820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1161940Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1162050Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1162210Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1162310Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1162470Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1162510Z     return cls(
2025-01-07T17:55:43.1162600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1162600Z 
2025-01-07T17:55:43.1162810Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1162920Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1163050Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1163190Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1163350Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1163420Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1163570Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1163640Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1163770Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1163860Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1164000Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1164000Z 
2025-01-07T17:55:43.1164060Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1164200Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1164280Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1164440Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1164490Z        0.00025518])
2025-01-07T17:55:43.1164610Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1164770Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1164860Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1164960Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1165120Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1165200Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1165390Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1165560Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1165710Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1165830Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1165900Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1166000Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1166110Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1166290Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1166460Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1166600Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1166790Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1166980Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1167120Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1167280Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1167440Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1167580Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1167670Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1167690Z 
2025-01-07T17:55:43.1167770Z     def __init__(
2025-01-07T17:55:43.1167850Z         self,
2025-01-07T17:55:43.1167940Z         last_interaction_type,
2025-01-07T17:55:43.1168020Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1168130Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1168240Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1168350Z         last_interaction_in_r,
2025-01-07T17:55:43.1169340Z         lines_df,
2025-01-07T17:55:43.1169480Z         packet_nus,
2025-01-07T17:55:43.1169560Z         packet_energies,
2025-01-07T17:55:43.1169640Z         r_inner,
2025-01-07T17:55:43.1169730Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1169910Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1169980Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1170040Z         spectrum_wavelength,
2025-01-07T17:55:43.1170080Z         t_inner,
2025-01-07T17:55:43.1170130Z         time_of_simulation,
2025-01-07T17:55:43.1170190Z         time_explosion,
2025-01-07T17:55:43.1170230Z         v_inner,
2025-01-07T17:55:43.1170280Z         v_outer,
2025-01-07T17:55:43.1170320Z         velocity
2025-01-07T17:55:43.1170360Z     ):
2025-01-07T17:55:43.1170580Z         """
2025-01-07T17:55:43.1170760Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1170810Z     
2025-01-07T17:55:43.1170860Z         Parameters
2025-01-07T17:55:43.1171070Z         ----------
2025-01-07T17:55:43.1171140Z         last_interaction_type : np.array
2025-01-07T17:55:43.1171260Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1171350Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1171420Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1171530Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1171590Z             absorption (interaction in)
2025-01-07T17:55:43.1171660Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1171780Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1171830Z             emission (interaction out)
2025-01-07T17:55:43.1171910Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1172030Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1172170Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1172280Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1172340Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1172460Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1172530Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1172660Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1172700Z             unit of Hz
2025-01-07T17:55:43.1172770Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1172870Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1172930Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1173010Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1173090Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1173190Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1173270Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1173360Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1173440Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1173540Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1173600Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1173690Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1173760Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1173840Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1173880Z         """
2025-01-07T17:55:43.1174020Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1174090Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1174170Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1174210Z             {
2025-01-07T17:55:43.1174270Z                 "nus": packet_nus,
2025-01-07T17:55:43.1174360Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1174430Z                 "energies": packet_energies,
2025-01-07T17:55:43.1174520Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1174640Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1174750Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1174850Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1174950Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1174990Z             }
2025-01-07T17:55:43.1175040Z         )
2025-01-07T17:55:43.1175320Z     
2025-01-07T17:55:43.1175410Z         # Save other properties
2025-01-07T17:55:43.1175470Z         self.lines_df = lines_df
2025-01-07T17:55:43.1175530Z         self.r_inner = r_inner
2025-01-07T17:55:43.1175640Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1175750Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1175850Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1175920Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1176000Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1176040Z         )
2025-01-07T17:55:43.1176120Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1176180Z         self.t_inner = t_inner
2025-01-07T17:55:43.1176270Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1176360Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1176420Z         self.v_inner = v_inner
2025-01-07T17:55:43.1176470Z         self.v_outer = v_outer
2025-01-07T17:55:43.1176510Z     
2025-01-07T17:55:43.1176590Z         # First check if both options are provided
2025-01-07T17:55:43.1176890Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1176940Z >           raise ValueError(
2025-01-07T17:55:43.1177050Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1177170Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1177210Z             )
2025-01-07T17:55:43.1177490Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1177490Z 
2025-01-07T17:55:43.1177620Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1177800Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] _
2025-01-07T17:55:43.1177810Z 
2025-01-07T17:55:43.1178010Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1178170Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1178350Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1178360Z 
2025-01-07T17:55:43.1178420Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1178500Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1178550Z         """
2025-01-07T17:55:43.1178610Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1178650Z     
2025-01-07T17:55:43.1178700Z         Parameters
2025-01-07T17:55:43.1178740Z         ----------
2025-01-07T17:55:43.1178850Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1178900Z             Simulation object.
2025-01-07T17:55:43.1178950Z     
2025-01-07T17:55:43.1178990Z         Returns
2025-01-07T17:55:43.1179040Z         -------
2025-01-07T17:55:43.1179140Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1179180Z         """
2025-01-07T17:55:43.1179280Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1179290Z 
2025-01-07T17:55:43.1179390Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1179490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1179610Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1179720Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1179880Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1179980Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1180130Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1180180Z     return cls(
2025-01-07T17:55:43.1180320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1180320Z 
2025-01-07T17:55:43.1180540Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1180640Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1180780Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1180920Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1181070Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1181150Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1181290Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1181540Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1181680Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1181770Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1181950Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1181960Z 
2025-01-07T17:55:43.1182010Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1182140Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1182220Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1182380Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1182420Z        0.00025518])
2025-01-07T17:55:43.1182550Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1182700Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1182800Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1182890Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1183060Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1183140Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1183330Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1183450Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1183590Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1183690Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1183740Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1183830Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1183900Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1184020Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1184150Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1184260Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1184380Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1184510Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1184610Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1184740Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1184840Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1184930Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1184980Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1184980Z 
2025-01-07T17:55:43.1185070Z     def __init__(
2025-01-07T17:55:43.1185120Z         self,
2025-01-07T17:55:43.1185180Z         last_interaction_type,
2025-01-07T17:55:43.1185240Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1185310Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1185370Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1185420Z         last_interaction_in_r,
2025-01-07T17:55:43.1185470Z         lines_df,
2025-01-07T17:55:43.1185510Z         packet_nus,
2025-01-07T17:55:43.1185560Z         packet_energies,
2025-01-07T17:55:43.1185610Z         r_inner,
2025-01-07T17:55:43.1185670Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1190200Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1190310Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1190370Z         spectrum_wavelength,
2025-01-07T17:55:43.1190420Z         t_inner,
2025-01-07T17:55:43.1190470Z         time_of_simulation,
2025-01-07T17:55:43.1190530Z         time_explosion,
2025-01-07T17:55:43.1190570Z         v_inner,
2025-01-07T17:55:43.1190610Z         v_outer,
2025-01-07T17:55:43.1190800Z         velocity
2025-01-07T17:55:43.1190840Z     ):
2025-01-07T17:55:43.1190880Z         """
2025-01-07T17:55:43.1191060Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1191110Z     
2025-01-07T17:55:43.1191150Z         Parameters
2025-01-07T17:55:43.1191200Z         ----------
2025-01-07T17:55:43.1191270Z         last_interaction_type : np.array
2025-01-07T17:55:43.1191380Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1191470Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1191540Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1191650Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1191710Z             absorption (interaction in)
2025-01-07T17:55:43.1191790Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1191900Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1191960Z             emission (interaction out)
2025-01-07T17:55:43.1192030Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1192140Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1192210Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1192330Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1192380Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1192500Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1192570Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1192690Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1192740Z             unit of Hz
2025-01-07T17:55:43.1192810Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1192900Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1192960Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1193050Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1193130Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1193220Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1193300Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1193400Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1193460Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1193570Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1193630Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1193720Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1193790Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1193920Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1193970Z         """
2025-01-07T17:55:43.1194110Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1194190Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1194250Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1194300Z             {
2025-01-07T17:55:43.1194360Z                 "nus": packet_nus,
2025-01-07T17:55:43.1194460Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1194520Z                 "energies": packet_energies,
2025-01-07T17:55:43.1194610Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1194730Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1194840Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1194960Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1195050Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1195140Z             }
2025-01-07T17:55:43.1195180Z         )
2025-01-07T17:55:43.1195220Z     
2025-01-07T17:55:43.1195280Z         # Save other properties
2025-01-07T17:55:43.1195340Z         self.lines_df = lines_df
2025-01-07T17:55:43.1195390Z         self.r_inner = r_inner
2025-01-07T17:55:43.1195510Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1195610Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1195710Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1195790Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1195860Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1195900Z         )
2025-01-07T17:55:43.1195990Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1196050Z         self.t_inner = t_inner
2025-01-07T17:55:43.1196130Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1196200Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1196260Z         self.v_inner = v_inner
2025-01-07T17:55:43.1196320Z         self.v_outer = v_outer
2025-01-07T17:55:43.1196360Z     
2025-01-07T17:55:43.1196440Z         # First check if both options are provided
2025-01-07T17:55:43.1196570Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1196620Z >           raise ValueError(
2025-01-07T17:55:43.1196730Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1196850Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1196900Z             )
2025-01-07T17:55:43.1197180Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1197180Z 
2025-01-07T17:55:43.1197320Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1197570Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] _
2025-01-07T17:55:43.1197580Z 
2025-01-07T17:55:43.1197780Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1197940Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1198120Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1198130Z 
2025-01-07T17:55:43.1198190Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1198270Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1198320Z         """
2025-01-07T17:55:43.1198380Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1198420Z     
2025-01-07T17:55:43.1198460Z         Parameters
2025-01-07T17:55:43.1198510Z         ----------
2025-01-07T17:55:43.1198880Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1199010Z             Simulation object.
2025-01-07T17:55:43.1199060Z     
2025-01-07T17:55:43.1199110Z         Returns
2025-01-07T17:55:43.1199160Z         -------
2025-01-07T17:55:43.1199260Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1199310Z         """
2025-01-07T17:55:43.1199410Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1199410Z 
2025-01-07T17:55:43.1199520Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1199610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1199730Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1199840Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1200010Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1200110Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1200270Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1200590Z     return cls(
2025-01-07T17:55:43.1200680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1200690Z 
2025-01-07T17:55:43.1200890Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1201000Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1201130Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1201270Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1201420Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1201490Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1201640Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1201720Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1201850Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1201930Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1202020Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1202030Z 
2025-01-07T17:55:43.1202080Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1202200Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1202280Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1202430Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1202480Z        0.00025518])
2025-01-07T17:55:43.1202610Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1202760Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1202860Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1202960Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1203120Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1203430Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1203630Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1203760Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1203940Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1204050Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1204260Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1204380Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1204550Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1204760Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1204950Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1205070Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1205220Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1205360Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1205460Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1205610Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1205750Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1205840Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1206050Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1206050Z 
2025-01-07T17:55:43.1206110Z     def __init__(
2025-01-07T17:55:43.1206160Z         self,
2025-01-07T17:55:43.1206260Z         last_interaction_type,
2025-01-07T17:55:43.1206330Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1206400Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1206490Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1206560Z         last_interaction_in_r,
2025-01-07T17:55:43.1206640Z         lines_df,
2025-01-07T17:55:43.1206710Z         packet_nus,
2025-01-07T17:55:43.1206790Z         packet_energies,
2025-01-07T17:55:43.1206840Z         r_inner,
2025-01-07T17:55:43.1206900Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1207040Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1207110Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1207160Z         spectrum_wavelength,
2025-01-07T17:55:43.1207210Z         t_inner,
2025-01-07T17:55:43.1207270Z         time_of_simulation,
2025-01-07T17:55:43.1207320Z         time_explosion,
2025-01-07T17:55:43.1207370Z         v_inner,
2025-01-07T17:55:43.1207430Z         v_outer,
2025-01-07T17:55:43.1207490Z         velocity
2025-01-07T17:55:43.1207550Z     ):
2025-01-07T17:55:43.1207600Z         """
2025-01-07T17:55:43.1207800Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1207870Z     
2025-01-07T17:55:43.1207920Z         Parameters
2025-01-07T17:55:43.1207970Z         ----------
2025-01-07T17:55:43.1208030Z         last_interaction_type : np.array
2025-01-07T17:55:43.1208170Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1208260Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1208360Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1208500Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1208590Z             absorption (interaction in)
2025-01-07T17:55:43.1208690Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1208820Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1208920Z             emission (interaction out)
2025-01-07T17:55:43.1209020Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1209180Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1209270Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1209420Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1209500Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1209660Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1209850Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1210020Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1210070Z             unit of Hz
2025-01-07T17:55:43.1210140Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1210240Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1210300Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1210380Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1210490Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1210590Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1210670Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1210770Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1210840Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1210960Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1211050Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1211150Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1211300Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1211390Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1211430Z         """
2025-01-07T17:55:43.1211600Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1211680Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1211760Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1211810Z             {
2025-01-07T17:55:43.1211870Z                 "nus": packet_nus,
2025-01-07T17:55:43.1211980Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1212040Z                 "energies": packet_energies,
2025-01-07T17:55:43.1212140Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1212280Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1212420Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1212550Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1212650Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1212720Z             }
2025-01-07T17:55:43.1212770Z         )
2025-01-07T17:55:43.1212820Z     
2025-01-07T17:55:43.1212890Z         # Save other properties
2025-01-07T17:55:43.1212950Z         self.lines_df = lines_df
2025-01-07T17:55:43.1213000Z         self.r_inner = r_inner
2025-01-07T17:55:43.1213110Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1213220Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1213340Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1213450Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1213520Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1213580Z         )
2025-01-07T17:55:43.1213680Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1213740Z         self.t_inner = t_inner
2025-01-07T17:55:43.1213820Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1213900Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1213980Z         self.v_inner = v_inner
2025-01-07T17:55:43.1214040Z         self.v_outer = v_outer
2025-01-07T17:55:43.1214080Z     
2025-01-07T17:55:43.1214160Z         # First check if both options are provided
2025-01-07T17:55:43.1214310Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1214370Z >           raise ValueError(
2025-01-07T17:55:43.1214480Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1214680Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1214750Z             )
2025-01-07T17:55:43.1217630Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1217660Z 
2025-01-07T17:55:43.1217800Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1217980Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] _
2025-01-07T17:55:43.1217990Z 
2025-01-07T17:55:43.1218190Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1218370Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1218580Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1218590Z 
2025-01-07T17:55:43.1218650Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1218740Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1218790Z         """
2025-01-07T17:55:43.1218850Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1218900Z     
2025-01-07T17:55:43.1219160Z         Parameters
2025-01-07T17:55:43.1219210Z         ----------
2025-01-07T17:55:43.1219340Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1219420Z             Simulation object.
2025-01-07T17:55:43.1219480Z     
2025-01-07T17:55:43.1219530Z         Returns
2025-01-07T17:55:43.1219580Z         -------
2025-01-07T17:55:43.1219680Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1219720Z         """
2025-01-07T17:55:43.1219830Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1219830Z 
2025-01-07T17:55:43.1219930Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1220030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1220150Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1220290Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1220470Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1220570Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1220730Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1220770Z     return cls(
2025-01-07T17:55:43.1220860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1220860Z 
2025-01-07T17:55:43.1221070Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1221200Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1221340Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1221490Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1221670Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1221760Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1221920Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1222010Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1222170Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1222270Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1222380Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1222390Z 
2025-01-07T17:55:43.1222460Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1222610Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1222700Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1224130Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1224220Z        0.00025518])
2025-01-07T17:55:43.1224360Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1224520Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1224620Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1224720Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1224880Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1224970Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1225160Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1225270Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1225430Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1225520Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1225990Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1226070Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1226140Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1226260Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1226400Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1226500Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1226620Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1226750Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1226880Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1227010Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1227110Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1227200Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1227250Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1227250Z 
2025-01-07T17:55:43.1227300Z     def __init__(
2025-01-07T17:55:43.1227340Z         self,
2025-01-07T17:55:43.1227400Z         last_interaction_type,
2025-01-07T17:55:43.1227460Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1227520Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1227580Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1227630Z         last_interaction_in_r,
2025-01-07T17:55:43.1227750Z         lines_df,
2025-01-07T17:55:43.1228150Z         packet_nus,
2025-01-07T17:55:43.1228210Z         packet_energies,
2025-01-07T17:55:43.1228440Z         r_inner,
2025-01-07T17:55:43.1228510Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1228650Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1228730Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1228780Z         spectrum_wavelength,
2025-01-07T17:55:43.1228830Z         t_inner,
2025-01-07T17:55:43.1228880Z         time_of_simulation,
2025-01-07T17:55:43.1228930Z         time_explosion,
2025-01-07T17:55:43.1228970Z         v_inner,
2025-01-07T17:55:43.1229020Z         v_outer,
2025-01-07T17:55:43.1229060Z         velocity
2025-01-07T17:55:43.1229110Z     ):
2025-01-07T17:55:43.1229150Z         """
2025-01-07T17:55:43.1229330Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1229370Z     
2025-01-07T17:55:43.1229420Z         Parameters
2025-01-07T17:55:43.1229470Z         ----------
2025-01-07T17:55:43.1229640Z         last_interaction_type : np.array
2025-01-07T17:55:43.1229770Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1229860Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1229930Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1230050Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1230110Z             absorption (interaction in)
2025-01-07T17:55:43.1230190Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1230330Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1230400Z             emission (interaction out)
2025-01-07T17:55:43.1230470Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1230580Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1230900Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1231060Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1231130Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1231260Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1231470Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1231620Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1231670Z             unit of Hz
2025-01-07T17:55:43.1231770Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1231870Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1231940Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1232040Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1232160Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1232250Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1232340Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1232440Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1232530Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1232640Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1232700Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1232810Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1232870Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1232960Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1233000Z         """
2025-01-07T17:55:43.1233140Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1233210Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1233280Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1233330Z             {
2025-01-07T17:55:43.1233380Z                 "nus": packet_nus,
2025-01-07T17:55:43.1233490Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1233560Z                 "energies": packet_energies,
2025-01-07T17:55:43.1233650Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1233770Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1233880Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1234000Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1234090Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1234130Z             }
2025-01-07T17:55:43.1234180Z         )
2025-01-07T17:55:43.1234220Z     
2025-01-07T17:55:43.1234280Z         # Save other properties
2025-01-07T17:55:43.1234330Z         self.lines_df = lines_df
2025-01-07T17:55:43.1234390Z         self.r_inner = r_inner
2025-01-07T17:55:43.1234500Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1234710Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1234830Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1234910Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1234980Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1235020Z         )
2025-01-07T17:55:43.1235110Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1235170Z         self.t_inner = t_inner
2025-01-07T17:55:43.1235250Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1235330Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1235400Z         self.v_inner = v_inner
2025-01-07T17:55:43.1235450Z         self.v_outer = v_outer
2025-01-07T17:55:43.1235490Z     
2025-01-07T17:55:43.1235560Z         # First check if both options are provided
2025-01-07T17:55:43.1235720Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1235800Z >           raise ValueError(
2025-01-07T17:55:43.1235910Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1236120Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1236160Z             )
2025-01-07T17:55:43.1236440Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1236440Z 
2025-01-07T17:55:43.1236600Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1236790Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] _
2025-01-07T17:55:43.1236790Z 
2025-01-07T17:55:43.1237020Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1237190Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1237400Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1237400Z 
2025-01-07T17:55:43.1237470Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1237560Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1237600Z         """
2025-01-07T17:55:43.1237670Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1237710Z     
2025-01-07T17:55:43.1237760Z         Parameters
2025-01-07T17:55:43.1237810Z         ----------
2025-01-07T17:55:43.1237920Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1237970Z             Simulation object.
2025-01-07T17:55:43.1238020Z     
2025-01-07T17:55:43.1238060Z         Returns
2025-01-07T17:55:43.1238110Z         -------
2025-01-07T17:55:43.1238220Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1238280Z         """
2025-01-07T17:55:43.1238740Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1238760Z 
2025-01-07T17:55:43.1238890Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1238980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1239110Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1239220Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1239390Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1239490Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1239640Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1239690Z     return cls(
2025-01-07T17:55:43.1239790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1239800Z 
2025-01-07T17:55:43.1240010Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1240220Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1240360Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1240510Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1240660Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1240740Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1240880Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1240950Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1241080Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1241170Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1241260Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1241260Z 
2025-01-07T17:55:43.1241310Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1241450Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1241580Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1241740Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1241780Z        0.00025518])
2025-01-07T17:55:43.1241910Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1242060Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1242160Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1242250Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1242410Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1242490Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1242710Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1242860Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1243050Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1243180Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1243260Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1243350Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1243850Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1244030Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1244170Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1244270Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1244400Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1244530Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1244640Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1244760Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1244870Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1244950Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1245010Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1245010Z 
2025-01-07T17:55:43.1245050Z     def __init__(
2025-01-07T17:55:43.1245110Z         self,
2025-01-07T17:55:43.1245190Z         last_interaction_type,
2025-01-07T17:55:43.1245270Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1245360Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1245790Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1245870Z         last_interaction_in_r,
2025-01-07T17:55:43.1245930Z         lines_df,
2025-01-07T17:55:43.1246000Z         packet_nus,
2025-01-07T17:55:43.1246060Z         packet_energies,
2025-01-07T17:55:43.1246110Z         r_inner,
2025-01-07T17:55:43.1250890Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1251070Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1251150Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1251210Z         spectrum_wavelength,
2025-01-07T17:55:43.1251250Z         t_inner,
2025-01-07T17:55:43.1251310Z         time_of_simulation,
2025-01-07T17:55:43.1251360Z         time_explosion,
2025-01-07T17:55:43.1251400Z         v_inner,
2025-01-07T17:55:43.1251440Z         v_outer,
2025-01-07T17:55:43.1251490Z         velocity
2025-01-07T17:55:43.1251530Z     ):
2025-01-07T17:55:43.1251570Z         """
2025-01-07T17:55:43.1251760Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1251800Z     
2025-01-07T17:55:43.1251850Z         Parameters
2025-01-07T17:55:43.1252040Z         ----------
2025-01-07T17:55:43.1252110Z         last_interaction_type : np.array
2025-01-07T17:55:43.1252230Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1252320Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1252390Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1252510Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1252570Z             absorption (interaction in)
2025-01-07T17:55:43.1252650Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1252770Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1252850Z             emission (interaction out)
2025-01-07T17:55:43.1252920Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1253040Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1253110Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1253230Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1253300Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1253430Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1253490Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1253620Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1253680Z             unit of Hz
2025-01-07T17:55:43.1253750Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1253860Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1253920Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1254010Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1254090Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1254200Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1254280Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1254380Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1254450Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1254560Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1254620Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1254710Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1254780Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1254860Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1254910Z         """
2025-01-07T17:55:43.1255070Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1255150Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1255310Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1255370Z             {
2025-01-07T17:55:43.1255430Z                 "nus": packet_nus,
2025-01-07T17:55:43.1255550Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1255610Z                 "energies": packet_energies,
2025-01-07T17:55:43.1255710Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1255830Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1255950Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1256070Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1256160Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1256210Z             }
2025-01-07T17:55:43.1256250Z         )
2025-01-07T17:55:43.1256300Z     
2025-01-07T17:55:43.1256350Z         # Save other properties
2025-01-07T17:55:43.1256420Z         self.lines_df = lines_df
2025-01-07T17:55:43.1256480Z         self.r_inner = r_inner
2025-01-07T17:55:43.1256590Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1256780Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1256880Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1256960Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1257030Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1257080Z         )
2025-01-07T17:55:43.1257170Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1257230Z         self.t_inner = t_inner
2025-01-07T17:55:43.1257310Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1257390Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1257640Z         self.v_inner = v_inner
2025-01-07T17:55:43.1257700Z         self.v_outer = v_outer
2025-01-07T17:55:43.1257740Z     
2025-01-07T17:55:43.1257820Z         # First check if both options are provided
2025-01-07T17:55:43.1257960Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1258030Z >           raise ValueError(
2025-01-07T17:55:43.1258130Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1258270Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1258310Z             )
2025-01-07T17:55:43.1258590Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1258600Z 
2025-01-07T17:55:43.1258740Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1258920Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] _
2025-01-07T17:55:43.1258920Z 
2025-01-07T17:55:43.1259130Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1259310Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1259510Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1259510Z 
2025-01-07T17:55:43.1259580Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1259660Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1259700Z         """
2025-01-07T17:55:43.1259770Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1259830Z     
2025-01-07T17:55:43.1259880Z         Parameters
2025-01-07T17:55:43.1259920Z         ----------
2025-01-07T17:55:43.1260030Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1260110Z             Simulation object.
2025-01-07T17:55:43.1260160Z     
2025-01-07T17:55:43.1260200Z         Returns
2025-01-07T17:55:43.1260260Z         -------
2025-01-07T17:55:43.1261220Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1261300Z         """
2025-01-07T17:55:43.1261410Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1261410Z 
2025-01-07T17:55:43.1261520Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1261610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1261740Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1261850Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1262020Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1262110Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1262270Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1262320Z     return cls(
2025-01-07T17:55:43.1262410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1262410Z 
2025-01-07T17:55:43.1262610Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1262830Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1262970Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1263110Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1263270Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1263350Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1263510Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1263580Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1263720Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1263810Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1263900Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1263910Z 
2025-01-07T17:55:43.1263960Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1264090Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1264180Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1264330Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1264380Z        0.00025518])
2025-01-07T17:55:43.1264500Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1264660Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1264750Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1264850Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1265010Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1265100Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1265300Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1265410Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1265560Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1265650Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1265720Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1265800Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1265860Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1265980Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1266180Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1266290Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1266420Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1266580Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1266680Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1266810Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1266910Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1267000Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1267040Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1267050Z 
2025-01-07T17:55:43.1267100Z     def __init__(
2025-01-07T17:55:43.1267150Z         self,
2025-01-07T17:55:43.1267210Z         last_interaction_type,
2025-01-07T17:55:43.1267270Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1267410Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1267470Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1267520Z         last_interaction_in_r,
2025-01-07T17:55:43.1267570Z         lines_df,
2025-01-07T17:55:43.1267620Z         packet_nus,
2025-01-07T17:55:43.1267670Z         packet_energies,
2025-01-07T17:55:43.1267720Z         r_inner,
2025-01-07T17:55:43.1267770Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1267910Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1267980Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1268040Z         spectrum_wavelength,
2025-01-07T17:55:43.1268080Z         t_inner,
2025-01-07T17:55:43.1268140Z         time_of_simulation,
2025-01-07T17:55:43.1268190Z         time_explosion,
2025-01-07T17:55:43.1268230Z         v_inner,
2025-01-07T17:55:43.1268280Z         v_outer,
2025-01-07T17:55:43.1268320Z         velocity
2025-01-07T17:55:43.1268370Z     ):
2025-01-07T17:55:43.1268410Z         """
2025-01-07T17:55:43.1268590Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1268640Z     
2025-01-07T17:55:43.1268680Z         Parameters
2025-01-07T17:55:43.1268740Z         ----------
2025-01-07T17:55:43.1268800Z         last_interaction_type : np.array
2025-01-07T17:55:43.1268920Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1269000Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1269070Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1269200Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1269270Z             absorption (interaction in)
2025-01-07T17:55:43.1269340Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1269460Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1269520Z             emission (interaction out)
2025-01-07T17:55:43.1269590Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1269710Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1269770Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1269890Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1269950Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1270070Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1270130Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1270270Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1270310Z             unit of Hz
2025-01-07T17:55:43.1270380Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1270660Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1270750Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1270830Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1270920Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1271020Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1271100Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1271250Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1271330Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1271440Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1271500Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1271590Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1271660Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1271750Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1271790Z         """
2025-01-07T17:55:43.1271940Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1272280Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1272350Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1272390Z             {
2025-01-07T17:55:43.1272450Z                 "nus": packet_nus,
2025-01-07T17:55:43.1272550Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1272620Z                 "energies": packet_energies,
2025-01-07T17:55:43.1272730Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1272850Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1272960Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1273090Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1273190Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1273230Z             }
2025-01-07T17:55:43.1273280Z         )
2025-01-07T17:55:43.1273330Z     
2025-01-07T17:55:43.1273390Z         # Save other properties
2025-01-07T17:55:43.1273450Z         self.lines_df = lines_df
2025-01-07T17:55:43.1273500Z         self.r_inner = r_inner
2025-01-07T17:55:43.1273610Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1273710Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1273810Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1273890Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1273970Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1274010Z         )
2025-01-07T17:55:43.1274100Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1274150Z         self.t_inner = t_inner
2025-01-07T17:55:43.1274240Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1274300Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1274370Z         self.v_inner = v_inner
2025-01-07T17:55:43.1274420Z         self.v_outer = v_outer
2025-01-07T17:55:43.1274470Z     
2025-01-07T17:55:43.1274540Z         # First check if both options are provided
2025-01-07T17:55:43.1274670Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1274730Z >           raise ValueError(
2025-01-07T17:55:43.1274830Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1274970Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1275010Z             )
2025-01-07T17:55:43.1275290Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1275290Z 
2025-01-07T17:55:43.1275500Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1275690Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] _
2025-01-07T17:55:43.1275700Z 
2025-01-07T17:55:43.1275900Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1276070Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1276250Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1276250Z 
2025-01-07T17:55:43.1276310Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1276400Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1276440Z         """
2025-01-07T17:55:43.1276500Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1276540Z     
2025-01-07T17:55:43.1276590Z         Parameters
2025-01-07T17:55:43.1276630Z         ----------
2025-01-07T17:55:43.1276750Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1276800Z             Simulation object.
2025-01-07T17:55:43.1276850Z     
2025-01-07T17:55:43.1276900Z         Returns
2025-01-07T17:55:43.1277000Z         -------
2025-01-07T17:55:43.1277100Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1277150Z         """
2025-01-07T17:55:43.1277250Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1277250Z 
2025-01-07T17:55:43.1277360Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1277450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1277560Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1277690Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1277850Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1277950Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1278110Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1278150Z     return cls(
2025-01-07T17:55:43.1278240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1278240Z 
2025-01-07T17:55:43.1278450Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1278550Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1278690Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1278830Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1278990Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1279060Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1279200Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1279280Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1279410Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1279500Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1279590Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1279590Z 
2025-01-07T17:55:43.1279640Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1279770Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1279860Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1280010Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1280060Z        0.00025518])
2025-01-07T17:55:43.1280190Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1280390Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1280490Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1280600Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1280750Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1280840Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1281030Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1281150Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1281300Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1281470Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1281550Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1281630Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1281700Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1281830Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1282040Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1282140Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1282260Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1282390Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1282490Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1282620Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1282710Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1282810Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1282860Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1282860Z 
2025-01-07T17:55:43.1282910Z     def __init__(
2025-01-07T17:55:43.1282970Z         self,
2025-01-07T17:55:43.1283060Z         last_interaction_type,
2025-01-07T17:55:43.1283120Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1283180Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1283240Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1283290Z         last_interaction_in_r,
2025-01-07T17:55:43.1283340Z         lines_df,
2025-01-07T17:55:43.1283380Z         packet_nus,
2025-01-07T17:55:43.1283440Z         packet_energies,
2025-01-07T17:55:43.1283480Z         r_inner,
2025-01-07T17:55:43.1283550Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1283690Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1283760Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1283820Z         spectrum_wavelength,
2025-01-07T17:55:43.1283860Z         t_inner,
2025-01-07T17:55:43.1283920Z         time_of_simulation,
2025-01-07T17:55:43.1283990Z         time_explosion,
2025-01-07T17:55:43.1284030Z         v_inner,
2025-01-07T17:55:43.1284080Z         v_outer,
2025-01-07T17:55:43.1284120Z         velocity
2025-01-07T17:55:43.1284170Z     ):
2025-01-07T17:55:43.1284210Z         """
2025-01-07T17:55:43.1284400Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1284450Z     
2025-01-07T17:55:43.1284500Z         Parameters
2025-01-07T17:55:43.1284550Z         ----------
2025-01-07T17:55:43.1284640Z         last_interaction_type : np.array
2025-01-07T17:55:43.1284780Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1284870Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1284940Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1285130Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1285200Z             absorption (interaction in)
2025-01-07T17:55:43.1285280Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1285400Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1285460Z             emission (interaction out)
2025-01-07T17:55:43.1285530Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1285640Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1285710Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1285830Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1285880Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1286010Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1286070Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1286200Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1286250Z             unit of Hz
2025-01-07T17:55:43.1286340Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1286510Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1286570Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1286650Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1286730Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1286830Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1286920Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1287020Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1287100Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1287210Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1287270Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1287370Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1287440Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1287530Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1287580Z         """
2025-01-07T17:55:43.1287720Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1287800Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1287860Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1287910Z             {
2025-01-07T17:55:43.1287960Z                 "nus": packet_nus,
2025-01-07T17:55:43.1288060Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1288130Z                 "energies": packet_energies,
2025-01-07T17:55:43.1288230Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1288360Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1288490Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1288600Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1288690Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1288740Z             }
2025-01-07T17:55:43.1288790Z         )
2025-01-07T17:55:43.1288830Z     
2025-01-07T17:55:43.1288890Z         # Save other properties
2025-01-07T17:55:43.1288940Z         self.lines_df = lines_df
2025-01-07T17:55:43.1289000Z         self.r_inner = r_inner
2025-01-07T17:55:43.1289100Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1289210Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1289310Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1289400Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1289500Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1289730Z         )
2025-01-07T17:55:43.1289860Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1289920Z         self.t_inner = t_inner
2025-01-07T17:55:43.1290030Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1290100Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1290160Z         self.v_inner = v_inner
2025-01-07T17:55:43.1290210Z         self.v_outer = v_outer
2025-01-07T17:55:43.1290260Z     
2025-01-07T17:55:43.1290330Z         # First check if both options are provided
2025-01-07T17:55:43.1290470Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1290530Z >           raise ValueError(
2025-01-07T17:55:43.1290650Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1290780Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1290830Z             )
2025-01-07T17:55:43.1291120Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1291360Z 
2025-01-07T17:55:43.1291510Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1291700Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] _
2025-01-07T17:55:43.1291700Z 
2025-01-07T17:55:43.1291900Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1292080Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1292270Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1292270Z 
2025-01-07T17:55:43.1292340Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1292420Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1292460Z         """
2025-01-07T17:55:43.1292540Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1292580Z     
2025-01-07T17:55:43.1292630Z         Parameters
2025-01-07T17:55:43.1292670Z         ----------
2025-01-07T17:55:43.1293050Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1293140Z             Simulation object.
2025-01-07T17:55:43.1293180Z     
2025-01-07T17:55:43.1293250Z         Returns
2025-01-07T17:55:43.1293300Z         -------
2025-01-07T17:55:43.1293410Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1293460Z         """
2025-01-07T17:55:43.1293560Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1293570Z 
2025-01-07T17:55:43.1293680Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1293770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1293890Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1294020Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1294190Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1294300Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1294470Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1294530Z     return cls(
2025-01-07T17:55:43.1294610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1294620Z 
2025-01-07T17:55:43.1294850Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1294970Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1295110Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1295250Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1295600Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1295690Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1295830Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1295910Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1296040Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1296140Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1296230Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1296230Z 
2025-01-07T17:55:43.1296280Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1296420Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1296500Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1296660Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1296700Z        0.00025518])
2025-01-07T17:55:43.1296840Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1297060Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1297170Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1297270Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1297430Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1297530Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1297820Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1297940Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1298110Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1298210Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1298280Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1298360Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1298420Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1298550Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1298690Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1298960Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1301140Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1301340Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1301450Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1301600Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1301700Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1301790Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1301850Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1301850Z 
2025-01-07T17:55:43.1301900Z     def __init__(
2025-01-07T17:55:43.1301940Z         self,
2025-01-07T17:55:43.1302000Z         last_interaction_type,
2025-01-07T17:55:43.1302060Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1302130Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1302180Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1302240Z         last_interaction_in_r,
2025-01-07T17:55:43.1302280Z         lines_df,
2025-01-07T17:55:43.1302330Z         packet_nus,
2025-01-07T17:55:43.1302380Z         packet_energies,
2025-01-07T17:55:43.1308100Z         r_inner,
2025-01-07T17:55:43.1308370Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1308540Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1308630Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1308690Z         spectrum_wavelength,
2025-01-07T17:55:43.1308740Z         t_inner,
2025-01-07T17:55:43.1308790Z         time_of_simulation,
2025-01-07T17:55:43.1308840Z         time_explosion,
2025-01-07T17:55:43.1308890Z         v_inner,
2025-01-07T17:55:43.1308940Z         v_outer,
2025-01-07T17:55:43.1308980Z         velocity
2025-01-07T17:55:43.1309040Z     ):
2025-01-07T17:55:43.1309090Z         """
2025-01-07T17:55:43.1309550Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1309840Z     
2025-01-07T17:55:43.1309990Z         Parameters
2025-01-07T17:55:43.1310150Z         ----------
2025-01-07T17:55:43.1310530Z         last_interaction_type : np.array
2025-01-07T17:55:43.1310700Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1310800Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1311010Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1311130Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1311190Z             absorption (interaction in)
2025-01-07T17:55:43.1311270Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1311380Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1311440Z             emission (interaction out)
2025-01-07T17:55:43.1311510Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1311630Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1311690Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1311820Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1311870Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1312000Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1312070Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1312200Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1312250Z             unit of Hz
2025-01-07T17:55:43.1312310Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1312420Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1312480Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1312560Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1312640Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1312750Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1312830Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1312920Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1312990Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1313100Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1313160Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1313250Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1313320Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1313400Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1313450Z         """
2025-01-07T17:55:43.1313580Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1313650Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1313720Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1313760Z             {
2025-01-07T17:55:43.1313810Z                 "nus": packet_nus,
2025-01-07T17:55:43.1313910Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1314040Z                 "energies": packet_energies,
2025-01-07T17:55:43.1314140Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1314260Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1314380Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1314500Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1314580Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1314630Z             }
2025-01-07T17:55:43.1314670Z         )
2025-01-07T17:55:43.1314720Z     
2025-01-07T17:55:43.1314770Z         # Save other properties
2025-01-07T17:55:43.1314840Z         self.lines_df = lines_df
2025-01-07T17:55:43.1314890Z         self.r_inner = r_inner
2025-01-07T17:55:43.1315000Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1315100Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1315210Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1315290Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1315410Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1315450Z         )
2025-01-07T17:55:43.1315540Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1315600Z         self.t_inner = t_inner
2025-01-07T17:55:43.1315680Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1315750Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1315800Z         self.v_inner = v_inner
2025-01-07T17:55:43.1315860Z         self.v_outer = v_outer
2025-01-07T17:55:43.1315900Z     
2025-01-07T17:55:43.1315970Z         # First check if both options are provided
2025-01-07T17:55:43.1316110Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1316170Z >           raise ValueError(
2025-01-07T17:55:43.1316270Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1316400Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1316450Z             )
2025-01-07T17:55:43.1316720Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1316720Z 
2025-01-07T17:55:43.1316860Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1317090Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] _
2025-01-07T17:55:43.1317090Z 
2025-01-07T17:55:43.1317300Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1317460Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1317760Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1317760Z 
2025-01-07T17:55:43.1317840Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1317920Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1317980Z         """
2025-01-07T17:55:43.1318040Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1318090Z     
2025-01-07T17:55:43.1318140Z         Parameters
2025-01-07T17:55:43.1318190Z         ----------
2025-01-07T17:55:43.1318300Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1318360Z             Simulation object.
2025-01-07T17:55:43.1318410Z     
2025-01-07T17:55:43.1318450Z         Returns
2025-01-07T17:55:43.1318490Z         -------
2025-01-07T17:55:43.1318590Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1318630Z         """
2025-01-07T17:55:43.1318740Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1318740Z 
2025-01-07T17:55:43.1318900Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1319250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1319390Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1319510Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1319680Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1319780Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1319940Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1319990Z     return cls(
2025-01-07T17:55:43.1320080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1320080Z 
2025-01-07T17:55:43.1320290Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1320390Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1320540Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1320670Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1321080Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1321160Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1321310Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1321380Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1321510Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1321600Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1321690Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1321690Z 
2025-01-07T17:55:43.1321750Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1321880Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1321960Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1322120Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1322170Z        0.00025518])
2025-01-07T17:55:43.1322300Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1322460Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1322560Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1322660Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1322820Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1322910Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1323110Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1323230Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1323380Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1323480Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1323550Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1323630Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1323690Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1323810Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1323960Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1324060Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1324180Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1324450Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1324580Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1324700Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1324800Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1324900Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1324950Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1324950Z 
2025-01-07T17:55:43.1325000Z     def __init__(
2025-01-07T17:55:43.1325100Z         self,
2025-01-07T17:55:43.1325160Z         last_interaction_type,
2025-01-07T17:55:43.1325220Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1325290Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1325350Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1325410Z         last_interaction_in_r,
2025-01-07T17:55:43.1325460Z         lines_df,
2025-01-07T17:55:43.1325500Z         packet_nus,
2025-01-07T17:55:43.1325580Z         packet_energies,
2025-01-07T17:55:43.1325720Z         r_inner,
2025-01-07T17:55:43.1325800Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1325940Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1326040Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1326100Z         spectrum_wavelength,
2025-01-07T17:55:43.1326150Z         t_inner,
2025-01-07T17:55:43.1326200Z         time_of_simulation,
2025-01-07T17:55:43.1326260Z         time_explosion,
2025-01-07T17:55:43.1326300Z         v_inner,
2025-01-07T17:55:43.1326350Z         v_outer,
2025-01-07T17:55:43.1326390Z         velocity
2025-01-07T17:55:43.1326440Z     ):
2025-01-07T17:55:43.1326480Z         """
2025-01-07T17:55:43.1326660Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1326700Z     
2025-01-07T17:55:43.1326750Z         Parameters
2025-01-07T17:55:43.1326800Z         ----------
2025-01-07T17:55:43.1326870Z         last_interaction_type : np.array
2025-01-07T17:55:43.1326990Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1327080Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1327160Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1327270Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1327330Z             absorption (interaction in)
2025-01-07T17:55:43.1327400Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1327520Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1327570Z             emission (interaction out)
2025-01-07T17:55:43.1327650Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1327770Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1327840Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1327980Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1328050Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1328170Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1328240Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1328370Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1328410Z             unit of Hz
2025-01-07T17:55:43.1328500Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1328620Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1328690Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1328780Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1328860Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1329030Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1329110Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1329210Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1329290Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1329400Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1329450Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1329550Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1329620Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1329700Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1329740Z         """
2025-01-07T17:55:43.1329880Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1329960Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1330030Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1330070Z             {
2025-01-07T17:55:43.1330130Z                 "nus": packet_nus,
2025-01-07T17:55:43.1330230Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1330350Z                 "energies": packet_energies,
2025-01-07T17:55:43.1330450Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1330570Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1330690Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1330800Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1330890Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1330930Z             }
2025-01-07T17:55:43.1330990Z         )
2025-01-07T17:55:43.1331040Z     
2025-01-07T17:55:43.1331110Z         # Save other properties
2025-01-07T17:55:43.1331170Z         self.lines_df = lines_df
2025-01-07T17:55:43.1331230Z         self.r_inner = r_inner
2025-01-07T17:55:43.1331360Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1331470Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1331580Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1331660Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1331730Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1331780Z         )
2025-01-07T17:55:43.1331870Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1331920Z         self.t_inner = t_inner
2025-01-07T17:55:43.1332000Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1332070Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1332120Z         self.v_inner = v_inner
2025-01-07T17:55:43.1332170Z         self.v_outer = v_outer
2025-01-07T17:55:43.1332220Z     
2025-01-07T17:55:43.1332320Z         # First check if both options are provided
2025-01-07T17:55:43.1332460Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1332530Z >           raise ValueError(
2025-01-07T17:55:43.1332640Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1332780Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1332820Z             )
2025-01-07T17:55:43.1333110Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1333110Z 
2025-01-07T17:55:43.1333250Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1333440Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] _
2025-01-07T17:55:43.1333440Z 
2025-01-07T17:55:43.1333650Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1333900Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1334100Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1334110Z 
2025-01-07T17:55:43.1334170Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1334270Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1334310Z         """
2025-01-07T17:55:43.1334380Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1334420Z     
2025-01-07T17:55:43.1334470Z         Parameters
2025-01-07T17:55:43.1334520Z         ----------
2025-01-07T17:55:43.1334630Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1334680Z             Simulation object.
2025-01-07T17:55:43.1334730Z     
2025-01-07T17:55:43.1334770Z         Returns
2025-01-07T17:55:43.1334820Z         -------
2025-01-07T17:55:43.1334920Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1334960Z         """
2025-01-07T17:55:43.1335070Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1335080Z 
2025-01-07T17:55:43.1335190Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1335330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1335460Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1335570Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1335740Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1335840Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1336000Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1336040Z     return cls(
2025-01-07T17:55:43.1336130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1336140Z 
2025-01-07T17:55:43.1336340Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1336460Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1336600Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1336740Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1336890Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1336970Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1337110Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1337180Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1337320Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1337400Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1337500Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1337510Z 
2025-01-07T17:55:43.1337560Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1337710Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1337810Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1337960Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1338000Z        0.00025518])
2025-01-07T17:55:43.1338130Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1338290Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1338380Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1338480Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1338990Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1339100Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1339290Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1339410Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1339570Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1339660Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1339720Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1339800Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1339870Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1339990Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1340130Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1340230Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1340350Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1340630Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1340740Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1340870Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1342410Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1342530Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1342590Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1342590Z 
2025-01-07T17:55:43.1342640Z     def __init__(
2025-01-07T17:55:43.1342680Z         self,
2025-01-07T17:55:43.1342740Z         last_interaction_type,
2025-01-07T17:55:43.1342810Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1342870Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1342930Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1342990Z         last_interaction_in_r,
2025-01-07T17:55:43.1343030Z         lines_df,
2025-01-07T17:55:43.1343080Z         packet_nus,
2025-01-07T17:55:43.1343130Z         packet_energies,
2025-01-07T17:55:43.1343180Z         r_inner,
2025-01-07T17:55:43.1343230Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1343380Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1343450Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1343500Z         spectrum_wavelength,
2025-01-07T17:55:43.1343550Z         t_inner,
2025-01-07T17:55:43.1343610Z         time_of_simulation,
2025-01-07T17:55:43.1343660Z         time_explosion,
2025-01-07T17:55:43.1343700Z         v_inner,
2025-01-07T17:55:43.1343750Z         v_outer,
2025-01-07T17:55:43.1343790Z         velocity
2025-01-07T17:55:43.1343840Z     ):
2025-01-07T17:55:43.1343880Z         """
2025-01-07T17:55:43.1344060Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1344110Z     
2025-01-07T17:55:43.1344160Z         Parameters
2025-01-07T17:55:43.1344200Z         ----------
2025-01-07T17:55:43.1344270Z         last_interaction_type : np.array
2025-01-07T17:55:43.1344390Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1344480Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1344550Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1344660Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1344720Z             absorption (interaction in)
2025-01-07T17:55:43.1344790Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1344910Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1345110Z             emission (interaction out)
2025-01-07T17:55:43.1345190Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1345310Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1345380Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1345500Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1345550Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1345680Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1345740Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1345870Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1345920Z             unit of Hz
2025-01-07T17:55:43.1345990Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1346090Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1346150Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1346230Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1346320Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1346470Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1346560Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1346650Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1346720Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1346830Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1346880Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1346980Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1347040Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1347140Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1347180Z         """
2025-01-07T17:55:43.1347320Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1347390Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1347460Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1347510Z             {
2025-01-07T17:55:43.1347560Z                 "nus": packet_nus,
2025-01-07T17:55:43.1347660Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1347730Z                 "energies": packet_energies,
2025-01-07T17:55:43.1347830Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1347960Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1348080Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1348190Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1348280Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1348330Z             }
2025-01-07T17:55:43.1348380Z         )
2025-01-07T17:55:43.1348420Z     
2025-01-07T17:55:43.1348480Z         # Save other properties
2025-01-07T17:55:43.1348540Z         self.lines_df = lines_df
2025-01-07T17:55:43.1348600Z         self.r_inner = r_inner
2025-01-07T17:55:43.1348700Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1348810Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1348920Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1348990Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1349060Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1349100Z         )
2025-01-07T17:55:43.1349190Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1349240Z         self.t_inner = t_inner
2025-01-07T17:55:43.1349320Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1349390Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1349520Z         self.v_inner = v_inner
2025-01-07T17:55:43.1349580Z         self.v_outer = v_outer
2025-01-07T17:55:43.1349630Z     
2025-01-07T17:55:43.1349700Z         # First check if both options are provided
2025-01-07T17:55:43.1349830Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1349890Z >           raise ValueError(
2025-01-07T17:55:43.1350000Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1350120Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1350170Z             )
2025-01-07T17:55:43.1350440Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1350440Z 
2025-01-07T17:55:43.1350580Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1350780Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] _
2025-01-07T17:55:43.1350780Z 
2025-01-07T17:55:43.1350980Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1351230Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1351430Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1351430Z 
2025-01-07T17:55:43.1351500Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1351580Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1351630Z         """
2025-01-07T17:55:43.1351690Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1351730Z     
2025-01-07T17:55:43.1351780Z         Parameters
2025-01-07T17:55:43.1351830Z         ----------
2025-01-07T17:55:43.1351940Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1351990Z             Simulation object.
2025-01-07T17:55:43.1352040Z     
2025-01-07T17:55:43.1352090Z         Returns
2025-01-07T17:55:43.1352130Z         -------
2025-01-07T17:55:43.1352230Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1352620Z         """
2025-01-07T17:55:43.1352730Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1352740Z 
2025-01-07T17:55:43.1352840Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1352930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1353050Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1353170Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1353340Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1353440Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1353610Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1353670Z     return cls(
2025-01-07T17:55:43.1353760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1353760Z 
2025-01-07T17:55:43.1353970Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1354080Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1354210Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1354350Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1354510Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1354590Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1354730Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1354800Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1355090Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1355190Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1355290Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1355290Z 
2025-01-07T17:55:43.1355340Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1355480Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1355560Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1355710Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1355750Z        0.00025518])
2025-01-07T17:55:43.1355890Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1356040Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1356150Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1356240Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1356460Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1356550Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1356740Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1356860Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1357010Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1357110Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1357170Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1357240Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1357310Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1357430Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1357570Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1357670Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1357790Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1357920Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1358010Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1358140Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1358240Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1358330Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1358380Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1358380Z 
2025-01-07T17:55:43.1358430Z     def __init__(
2025-01-07T17:55:43.1358470Z         self,
2025-01-07T17:55:43.1358540Z         last_interaction_type,
2025-01-07T17:55:43.1358600Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1358660Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1358720Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1358780Z         last_interaction_in_r,
2025-01-07T17:55:43.1358820Z         lines_df,
2025-01-07T17:55:43.1358870Z         packet_nus,
2025-01-07T17:55:43.1363630Z         packet_energies,
2025-01-07T17:55:43.1363690Z         r_inner,
2025-01-07T17:55:43.1363750Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1363890Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1363960Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1364020Z         spectrum_wavelength,
2025-01-07T17:55:43.1364060Z         t_inner,
2025-01-07T17:55:43.1364450Z         time_of_simulation,
2025-01-07T17:55:43.1364510Z         time_explosion,
2025-01-07T17:55:43.1364560Z         v_inner,
2025-01-07T17:55:43.1364610Z         v_outer,
2025-01-07T17:55:43.1364650Z         velocity
2025-01-07T17:55:43.1364690Z     ):
2025-01-07T17:55:43.1364740Z         """
2025-01-07T17:55:43.1364910Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1364960Z     
2025-01-07T17:55:43.1365000Z         Parameters
2025-01-07T17:55:43.1365060Z         ----------
2025-01-07T17:55:43.1365120Z         last_interaction_type : np.array
2025-01-07T17:55:43.1365230Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1365330Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1365390Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1365510Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1365570Z             absorption (interaction in)
2025-01-07T17:55:43.1365640Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1365900Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1365970Z             emission (interaction out)
2025-01-07T17:55:43.1366040Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1366150Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1366210Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1366330Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1366390Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1366510Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1366580Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1366700Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1366750Z             unit of Hz
2025-01-07T17:55:43.1366820Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1366920Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1366980Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1367070Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1367150Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1367250Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1367330Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1367420Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1367490Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1367600Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1367670Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1367760Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1367830Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1367910Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1367960Z         """
2025-01-07T17:55:43.1368100Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1368180Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1368240Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1368280Z             {
2025-01-07T17:55:43.1368340Z                 "nus": packet_nus,
2025-01-07T17:55:43.1368440Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1368500Z                 "energies": packet_energies,
2025-01-07T17:55:43.1368600Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1368720Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1368830Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1368990Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1369080Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1369130Z             }
2025-01-07T17:55:43.1369170Z         )
2025-01-07T17:55:43.1369220Z     
2025-01-07T17:55:43.1369270Z         # Save other properties
2025-01-07T17:55:43.1369330Z         self.lines_df = lines_df
2025-01-07T17:55:43.1369380Z         self.r_inner = r_inner
2025-01-07T17:55:43.1369490Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1369590Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1369700Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1369780Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1369850Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1369900Z         )
2025-01-07T17:55:43.1369990Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1370040Z         self.t_inner = t_inner
2025-01-07T17:55:43.1370120Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1370250Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1370310Z         self.v_inner = v_inner
2025-01-07T17:55:43.1370360Z         self.v_outer = v_outer
2025-01-07T17:55:43.1370400Z     
2025-01-07T17:55:43.1370480Z         # First check if both options are provided
2025-01-07T17:55:43.1370610Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1370670Z >           raise ValueError(
2025-01-07T17:55:43.1370770Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1370900Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1370950Z             )
2025-01-07T17:55:43.1371220Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1371230Z 
2025-01-07T17:55:43.1371360Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1371540Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] _
2025-01-07T17:55:43.1371550Z 
2025-01-07T17:55:43.1371750Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1371910Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1372100Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1372100Z 
2025-01-07T17:55:43.1372160Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1372240Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1372290Z         """
2025-01-07T17:55:43.1372350Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1372390Z     
2025-01-07T17:55:43.1372440Z         Parameters
2025-01-07T17:55:43.1372480Z         ----------
2025-01-07T17:55:43.1372590Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1372650Z             Simulation object.
2025-01-07T17:55:43.1372700Z     
2025-01-07T17:55:43.1372740Z         Returns
2025-01-07T17:55:43.1372780Z         -------
2025-01-07T17:55:43.1372880Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1372920Z         """
2025-01-07T17:55:43.1373020Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1373030Z 
2025-01-07T17:55:43.1373130Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1373220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1373350Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1373460Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1373680Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1373780Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1373940Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1373990Z     return cls(
2025-01-07T17:55:43.1374070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1374080Z 
2025-01-07T17:55:43.1374280Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1374390Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1374520Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1374650Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1374810Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1374890Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1375030Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1375150Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1375280Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1375370Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1375460Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1375460Z 
2025-01-07T17:55:43.1375510Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1375640Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1375730Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1375880Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1375920Z        0.00025518])
2025-01-07T17:55:43.1376040Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1376200Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1376300Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1376400Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1377070Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1377220Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1377420Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1377540Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1377690Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1377800Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1377870Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1377960Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1378030Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1378150Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1378300Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1378390Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1378510Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1378650Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1378740Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1378870Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1379240Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1379340Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1379390Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1379400Z 
2025-01-07T17:55:43.1379450Z     def __init__(
2025-01-07T17:55:43.1379490Z         self,
2025-01-07T17:55:43.1379550Z         last_interaction_type,
2025-01-07T17:55:43.1379610Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1379670Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1379730Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1379780Z         last_interaction_in_r,
2025-01-07T17:55:43.1379830Z         lines_df,
2025-01-07T17:55:43.1379880Z         packet_nus,
2025-01-07T17:55:43.1379930Z         packet_energies,
2025-01-07T17:55:43.1379980Z         r_inner,
2025-01-07T17:55:43.1380040Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1380180Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1380260Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1380380Z         spectrum_wavelength,
2025-01-07T17:55:43.1380430Z         t_inner,
2025-01-07T17:55:43.1380480Z         time_of_simulation,
2025-01-07T17:55:43.1380530Z         time_explosion,
2025-01-07T17:55:43.1380570Z         v_inner,
2025-01-07T17:55:43.1380620Z         v_outer,
2025-01-07T17:55:43.1380670Z         velocity
2025-01-07T17:55:43.1380710Z     ):
2025-01-07T17:55:43.1380750Z         """
2025-01-07T17:55:43.1381020Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1381120Z     
2025-01-07T17:55:43.1381170Z         Parameters
2025-01-07T17:55:43.1381220Z         ----------
2025-01-07T17:55:43.1381290Z         last_interaction_type : np.array
2025-01-07T17:55:43.1381420Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1381520Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1381590Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1381710Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1381780Z             absorption (interaction in)
2025-01-07T17:55:43.1381850Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1381960Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1382020Z             emission (interaction out)
2025-01-07T17:55:43.1382090Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1382210Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1382270Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1382390Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1382450Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1382690Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1382750Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1382880Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1382940Z             unit of Hz
2025-01-07T17:55:43.1383010Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1383110Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1383170Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1383250Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1383330Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1383430Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1383510Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1383610Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1383680Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1384060Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1384120Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1384230Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1384300Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1384390Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1384430Z         """
2025-01-07T17:55:43.1384570Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1384640Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1384710Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1384750Z             {
2025-01-07T17:55:43.1384810Z                 "nus": packet_nus,
2025-01-07T17:55:43.1384910Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1384970Z                 "energies": packet_energies,
2025-01-07T17:55:43.1385070Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1385190Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1385550Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1385660Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1385750Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1385790Z             }
2025-01-07T17:55:43.1385850Z         )
2025-01-07T17:55:43.1385890Z     
2025-01-07T17:55:43.1385950Z         # Save other properties
2025-01-07T17:55:43.1386000Z         self.lines_df = lines_df
2025-01-07T17:55:43.1386060Z         self.r_inner = r_inner
2025-01-07T17:55:43.1386170Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1386270Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1386600Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1386690Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1386760Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1386810Z         )
2025-01-07T17:55:43.1386900Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1386950Z         self.t_inner = t_inner
2025-01-07T17:55:43.1387040Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1387100Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1387160Z         self.v_inner = v_inner
2025-01-07T17:55:43.1387210Z         self.v_outer = v_outer
2025-01-07T17:55:43.1387250Z     
2025-01-07T17:55:43.1387330Z         # First check if both options are provided
2025-01-07T17:55:43.1387460Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1387520Z >           raise ValueError(
2025-01-07T17:55:43.1387620Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1387750Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1387790Z             )
2025-01-07T17:55:43.1388070Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1388080Z 
2025-01-07T17:55:43.1388210Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1388390Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] _
2025-01-07T17:55:43.1388400Z 
2025-01-07T17:55:43.1388600Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1388760Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1388940Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1388940Z 
2025-01-07T17:55:43.1389000Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1389200Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1389250Z         """
2025-01-07T17:55:43.1389310Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1389350Z     
2025-01-07T17:55:43.1389410Z         Parameters
2025-01-07T17:55:43.1389450Z         ----------
2025-01-07T17:55:43.1389570Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1389620Z             Simulation object.
2025-01-07T17:55:43.1389660Z     
2025-01-07T17:55:43.1389710Z         Returns
2025-01-07T17:55:43.1389750Z         -------
2025-01-07T17:55:43.1389850Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1389900Z         """
2025-01-07T17:55:43.1390000Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1390000Z 
2025-01-07T17:55:43.1390110Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1390200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1390330Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1390440Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1390670Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1390770Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1390930Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1390970Z     return cls(
2025-01-07T17:55:43.1391060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1391060Z 
2025-01-07T17:55:43.1391260Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1391370Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1391500Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1391640Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1391800Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1391870Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1392020Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1392090Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1392220Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1392310Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1392400Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1392400Z 
2025-01-07T17:55:43.1392450Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1392580Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1392670Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1392820Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1392870Z        0.00025518])
2025-01-07T17:55:43.1392990Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1393150Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1393240Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1393340Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1393500Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1393590Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1393780Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1393940Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1394090Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1394190Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1394250Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1394330Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1394390Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1394510Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1394660Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1394760Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1394880Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1395020Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1395120Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1395300Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1395400Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1395490Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1395540Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1395540Z 
2025-01-07T17:55:43.1395590Z     def __init__(
2025-01-07T17:55:43.1395640Z         self,
2025-01-07T17:55:43.1395700Z         last_interaction_type,
2025-01-07T17:55:43.1395750Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1395820Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1395880Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1395930Z         last_interaction_in_r,
2025-01-07T17:55:43.1395980Z         lines_df,
2025-01-07T17:55:43.1396030Z         packet_nus,
2025-01-07T17:55:43.1396090Z         packet_energies,
2025-01-07T17:55:43.1396130Z         r_inner,
2025-01-07T17:55:43.1396190Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1396330Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1396410Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1396470Z         spectrum_wavelength,
2025-01-07T17:55:43.1396520Z         t_inner,
2025-01-07T17:55:43.1396570Z         time_of_simulation,
2025-01-07T17:55:43.1396620Z         time_explosion,
2025-01-07T17:55:43.1396660Z         v_inner,
2025-01-07T17:55:43.1396710Z         v_outer,
2025-01-07T17:55:43.1396750Z         velocity
2025-01-07T17:55:43.1396800Z     ):
2025-01-07T17:55:43.1396840Z         """
2025-01-07T17:55:43.1397010Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1397050Z     
2025-01-07T17:55:43.1397100Z         Parameters
2025-01-07T17:55:43.1397150Z         ----------
2025-01-07T17:55:43.1397220Z         last_interaction_type : np.array
2025-01-07T17:55:43.1397340Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1397430Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1397510Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1397620Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1397690Z             absorption (interaction in)
2025-01-07T17:55:43.1397760Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1397870Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1397920Z             emission (interaction out)
2025-01-07T17:55:43.1398000Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1398110Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1398180Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1398350Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1398410Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1398540Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1398600Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1398730Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1398780Z             unit of Hz
2025-01-07T17:55:43.1398850Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1398950Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1399020Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1399100Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1399190Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1399280Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1399360Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1399460Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1399580Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1399690Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1399750Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1399840Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1399910Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1400000Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1400040Z         """
2025-01-07T17:55:43.1400170Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1400250Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1400310Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1400360Z             {
2025-01-07T17:55:43.1400410Z                 "nus": packet_nus,
2025-01-07T17:55:43.1400510Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1400580Z                 "energies": packet_energies,
2025-01-07T17:55:43.1400670Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1400790Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1400900Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1401010Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1401110Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1401150Z             }
2025-01-07T17:55:43.1401190Z         )
2025-01-07T17:55:43.1401230Z     
2025-01-07T17:55:43.1401290Z         # Save other properties
2025-01-07T17:55:43.1401350Z         self.lines_df = lines_df
2025-01-07T17:55:43.1401400Z         self.r_inner = r_inner
2025-01-07T17:55:43.1401510Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1401610Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1401720Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1401800Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1401870Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1401910Z         )
2025-01-07T17:55:43.1402000Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1402050Z         self.t_inner = t_inner
2025-01-07T17:55:43.1402130Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1402200Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1402250Z         self.v_inner = v_inner
2025-01-07T17:55:43.1402300Z         self.v_outer = v_outer
2025-01-07T17:55:43.1402340Z     
2025-01-07T17:55:43.1402420Z         # First check if both options are provided
2025-01-07T17:55:43.1402780Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1402890Z >           raise ValueError(
2025-01-07T17:55:43.1403000Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1403130Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1403170Z             )
2025-01-07T17:55:43.1403450Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1403450Z 
2025-01-07T17:55:43.1403580Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1403740Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl0] _
2025-01-07T17:55:43.1403740Z 
2025-01-07T17:55:43.1403940Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1404100Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1404280Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1404290Z 
2025-01-07T17:55:43.1404610Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1404700Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1404740Z         """
2025-01-07T17:55:43.1404800Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1404850Z     
2025-01-07T17:55:43.1404890Z         Parameters
2025-01-07T17:55:43.1404940Z         ----------
2025-01-07T17:55:43.1405050Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1405100Z             Simulation object.
2025-01-07T17:55:43.1405140Z     
2025-01-07T17:55:43.1405190Z         Returns
2025-01-07T17:55:43.1405240Z         -------
2025-01-07T17:55:43.1405330Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1405380Z         """
2025-01-07T17:55:43.1405480Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1405480Z 
2025-01-07T17:55:43.1405590Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1405680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1405800Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1405920Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1406080Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1406180Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1406330Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1406380Z     return cls(
2025-01-07T17:55:43.1406470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1406470Z 
2025-01-07T17:55:43.1406670Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1406780Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1406910Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1407060Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1407210Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1407280Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1407420Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1407500Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1407620Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1407710Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1407800Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1407800Z 
2025-01-07T17:55:43.1407920Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1408060Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1408150Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1408300Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1408340Z        0.00025518])
2025-01-07T17:55:43.1408470Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1408620Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1408720Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1408810Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1408970Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1409060Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1409250Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1409410Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1409550Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1409640Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1409700Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1409790Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1409850Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1409970Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1410110Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1410200Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1410330Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1410460Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1410560Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1410680Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1410780Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1410870Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1410920Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1410920Z 
2025-01-07T17:55:43.1410970Z     def __init__(
2025-01-07T17:55:43.1411010Z         self,
2025-01-07T17:55:43.1411070Z         last_interaction_type,
2025-01-07T17:55:43.1411130Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1411190Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1411250Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1411310Z         last_interaction_in_r,
2025-01-07T17:55:43.1415420Z         lines_df,
2025-01-07T17:55:43.1415500Z         packet_nus,
2025-01-07T17:55:43.1415550Z         packet_energies,
2025-01-07T17:55:43.1415600Z         r_inner,
2025-01-07T17:55:43.1415650Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1415800Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1415870Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1415930Z         spectrum_wavelength,
2025-01-07T17:55:43.1415970Z         t_inner,
2025-01-07T17:55:43.1416030Z         time_of_simulation,
2025-01-07T17:55:43.1416070Z         time_explosion,
2025-01-07T17:55:43.1416120Z         v_inner,
2025-01-07T17:55:43.1416160Z         v_outer,
2025-01-07T17:55:43.1416210Z         velocity
2025-01-07T17:55:43.1416250Z     ):
2025-01-07T17:55:43.1416290Z         """
2025-01-07T17:55:43.1416620Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1416670Z     
2025-01-07T17:55:43.1416720Z         Parameters
2025-01-07T17:55:43.1416770Z         ----------
2025-01-07T17:55:43.1416830Z         last_interaction_type : np.array
2025-01-07T17:55:43.1416950Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1417040Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1417110Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1417220Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1417280Z             absorption (interaction in)
2025-01-07T17:55:43.1417350Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1417460Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1417520Z             emission (interaction out)
2025-01-07T17:55:43.1417590Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1417700Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1417820Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1417940Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1418000Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1418120Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1418180Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1418300Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1418350Z             unit of Hz
2025-01-07T17:55:43.1418420Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1418520Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1418580Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1418660Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1418740Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1418840Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1418920Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1419020Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1419090Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1419190Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1419250Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1419340Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1419410Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1419490Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1419540Z         """
2025-01-07T17:55:43.1419670Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1419750Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1419810Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1419850Z             {
2025-01-07T17:55:43.1419910Z                 "nus": packet_nus,
2025-01-07T17:55:43.1420010Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1420080Z                 "energies": packet_energies,
2025-01-07T17:55:43.1420170Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1420290Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1420400Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1420510Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1420590Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1420640Z             }
2025-01-07T17:55:43.1420680Z         )
2025-01-07T17:55:43.1420720Z     
2025-01-07T17:55:43.1420820Z         # Save other properties
2025-01-07T17:55:43.1420880Z         self.lines_df = lines_df
2025-01-07T17:55:43.1420940Z         self.r_inner = r_inner
2025-01-07T17:55:43.1421050Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1421150Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1421260Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1421340Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1421400Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1421450Z         )
2025-01-07T17:55:43.1421530Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1421590Z         self.t_inner = t_inner
2025-01-07T17:55:43.1421670Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1421740Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1421790Z         self.v_inner = v_inner
2025-01-07T17:55:43.1421850Z         self.v_outer = v_outer
2025-01-07T17:55:43.1421890Z     
2025-01-07T17:55:43.1421970Z         # First check if both options are provided
2025-01-07T17:55:43.1422140Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1422200Z >           raise ValueError(
2025-01-07T17:55:43.1422300Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1422430Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1422470Z             )
2025-01-07T17:55:43.1422830Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1422840Z 
2025-01-07T17:55:43.1422970Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1423130Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl1] _
2025-01-07T17:55:43.1423130Z 
2025-01-07T17:55:43.1423330Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1423490Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1423680Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1423680Z 
2025-01-07T17:55:43.1423740Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1423830Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1423870Z         """
2025-01-07T17:55:43.1423930Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1423970Z     
2025-01-07T17:55:43.1424020Z         Parameters
2025-01-07T17:55:43.1424070Z         ----------
2025-01-07T17:55:43.1424180Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1424230Z             Simulation object.
2025-01-07T17:55:43.1424270Z     
2025-01-07T17:55:43.1424320Z         Returns
2025-01-07T17:55:43.1424360Z         -------
2025-01-07T17:55:43.1424460Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1424500Z         """
2025-01-07T17:55:43.1424610Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1424620Z 
2025-01-07T17:55:43.1424720Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1424810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1424930Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1425040Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1425210Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1425310Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1425460Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1425500Z     return cls(
2025-01-07T17:55:43.1425750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1425770Z 
2025-01-07T17:55:43.1426000Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1426110Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1426250Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1426380Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1426540Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1426610Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1426750Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1426830Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1426960Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1427050Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1427140Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1427230Z 
2025-01-07T17:55:43.1427280Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1427410Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1427490Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1427640Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1427690Z        0.00025518])
2025-01-07T17:55:43.1427810Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1427960Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1428060Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1428160Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1428320Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1428410Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1428600Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1428720Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1428860Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1428950Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1429020Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1429100Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1429160Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1429280Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1429420Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1429520Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1429640Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1429770Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1429870Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1430000Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1430100Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1430180Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1430230Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1430230Z 
2025-01-07T17:55:43.1430280Z     def __init__(
2025-01-07T17:55:43.1430370Z         self,
2025-01-07T17:55:43.1430440Z         last_interaction_type,
2025-01-07T17:55:43.1430500Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1430570Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1430630Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1430680Z         last_interaction_in_r,
2025-01-07T17:55:43.1430730Z         lines_df,
2025-01-07T17:55:43.1430770Z         packet_nus,
2025-01-07T17:55:43.1430830Z         packet_energies,
2025-01-07T17:55:43.1430870Z         r_inner,
2025-01-07T17:55:43.1430930Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1431060Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1431140Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1431190Z         spectrum_wavelength,
2025-01-07T17:55:43.1431230Z         t_inner,
2025-01-07T17:55:43.1431290Z         time_of_simulation,
2025-01-07T17:55:43.1431340Z         time_explosion,
2025-01-07T17:55:43.1431380Z         v_inner,
2025-01-07T17:55:43.1431430Z         v_outer,
2025-01-07T17:55:43.1431470Z         velocity
2025-01-07T17:55:43.1431560Z     ):
2025-01-07T17:55:43.1431600Z         """
2025-01-07T17:55:43.1431780Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1431820Z     
2025-01-07T17:55:43.1431860Z         Parameters
2025-01-07T17:55:43.1431920Z         ----------
2025-01-07T17:55:43.1431980Z         last_interaction_type : np.array
2025-01-07T17:55:43.1432090Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1432180Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1432250Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1432360Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1432420Z             absorption (interaction in)
2025-01-07T17:55:43.1432490Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1432600Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1432660Z             emission (interaction out)
2025-01-07T17:55:43.1432740Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1432850Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1432920Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1433410Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1433510Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1433650Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1433710Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1433840Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1433890Z             unit of Hz
2025-01-07T17:55:43.1433960Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1434070Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1434130Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1434220Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1434300Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1434400Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1434470Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1434570Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1434640Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1434740Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1434800Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1434900Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1434960Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1435230Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1435280Z         """
2025-01-07T17:55:43.1435420Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1435500Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1435570Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1435620Z             {
2025-01-07T17:55:43.1435670Z                 "nus": packet_nus,
2025-01-07T17:55:43.1435780Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1435840Z                 "energies": packet_energies,
2025-01-07T17:55:43.1435930Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1436050Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1436160Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1436270Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1436360Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1436400Z             }
2025-01-07T17:55:43.1436510Z         )
2025-01-07T17:55:43.1436550Z     
2025-01-07T17:55:43.1436610Z         # Save other properties
2025-01-07T17:55:43.1436670Z         self.lines_df = lines_df
2025-01-07T17:55:43.1436720Z         self.r_inner = r_inner
2025-01-07T17:55:43.1436830Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1436930Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1437040Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1437110Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1437190Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1437230Z         )
2025-01-07T17:55:43.1437320Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1437370Z         self.t_inner = t_inner
2025-01-07T17:55:43.1437450Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1437520Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1437580Z         self.v_inner = v_inner
2025-01-07T17:55:43.1437640Z         self.v_outer = v_outer
2025-01-07T17:55:43.1437680Z     
2025-01-07T17:55:43.1437760Z         # First check if both options are provided
2025-01-07T17:55:43.1437890Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1437950Z >           raise ValueError(
2025-01-07T17:55:43.1438050Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1438180Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1438220Z             )
2025-01-07T17:55:43.1438680Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1438680Z 
2025-01-07T17:55:43.1438830Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1438990Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl2] _
2025-01-07T17:55:43.1438990Z 
2025-01-07T17:55:43.1439200Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1439360Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1439540Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1439550Z 
2025-01-07T17:55:43.1439610Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1439690Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1439740Z         """
2025-01-07T17:55:43.1439800Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1439840Z     
2025-01-07T17:55:43.1439890Z         Parameters
2025-01-07T17:55:43.1439940Z         ----------
2025-01-07T17:55:43.1440110Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1440170Z             Simulation object.
2025-01-07T17:55:43.1440210Z     
2025-01-07T17:55:43.1440260Z         Returns
2025-01-07T17:55:43.1440310Z         -------
2025-01-07T17:55:43.1440410Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1440450Z         """
2025-01-07T17:55:43.1440550Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1440560Z 
2025-01-07T17:55:43.1440660Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1440750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1440880Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1440990Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1441160Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1441260Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1441410Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1441500Z     return cls(
2025-01-07T17:55:43.1441590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1441590Z 
2025-01-07T17:55:43.1441800Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1441910Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1442040Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1442180Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1442340Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1442410Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1442560Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1442630Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1442770Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1442860Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1442950Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1442950Z 
2025-01-07T17:55:43.1443000Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1443130Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1443220Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1443370Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1443420Z        0.00025518])
2025-01-07T17:55:43.1443540Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1443700Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1443800Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1443900Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1444050Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1444140Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1444330Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1444440Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1444600Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1444690Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1444750Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1444990Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1445070Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1445190Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1445330Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1445430Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1445550Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1445690Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1445780Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1445910Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1446000Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1446090Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1446140Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1446220Z 
2025-01-07T17:55:43.1446280Z     def __init__(
2025-01-07T17:55:43.1446320Z         self,
2025-01-07T17:55:43.1446380Z         last_interaction_type,
2025-01-07T17:55:43.1446440Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1446500Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1446560Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1446620Z         last_interaction_in_r,
2025-01-07T17:55:43.1446670Z         lines_df,
2025-01-07T17:55:43.1446710Z         packet_nus,
2025-01-07T17:55:43.1446770Z         packet_energies,
2025-01-07T17:55:43.1446810Z         r_inner,
2025-01-07T17:55:43.1446870Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1447010Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1447080Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1447140Z         spectrum_wavelength,
2025-01-07T17:55:43.1447180Z         t_inner,
2025-01-07T17:55:43.1447230Z         time_of_simulation,
2025-01-07T17:55:43.1447290Z         time_explosion,
2025-01-07T17:55:43.1447330Z         v_inner,
2025-01-07T17:55:43.1447380Z         v_outer,
2025-01-07T17:55:43.1447420Z         velocity
2025-01-07T17:55:43.1447460Z     ):
2025-01-07T17:55:43.1447510Z         """
2025-01-07T17:55:43.1447680Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1447730Z     
2025-01-07T17:55:43.1447780Z         Parameters
2025-01-07T17:55:43.1447820Z         ----------
2025-01-07T17:55:43.1447890Z         last_interaction_type : np.array
2025-01-07T17:55:43.1448010Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1448090Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1448160Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1448280Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1448340Z             absorption (interaction in)
2025-01-07T17:55:43.1448410Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1448530Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1448580Z             emission (interaction out)
2025-01-07T17:55:43.1448660Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1448770Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1448840Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1448960Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1449010Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1449140Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1449200Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1449370Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1449420Z             unit of Hz
2025-01-07T17:55:43.1449490Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1449590Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1449650Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1449730Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1449810Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1449900Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1449990Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1450080Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1450150Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1450260Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1450310Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1450410Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1450480Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1450620Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1450660Z         """
2025-01-07T17:55:43.1450800Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1450880Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1450950Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1450990Z             {
2025-01-07T17:55:43.1451040Z                 "nus": packet_nus,
2025-01-07T17:55:43.1451150Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1451210Z                 "energies": packet_energies,
2025-01-07T17:55:43.1451300Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1451410Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1451530Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1451640Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1451740Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1451780Z             }
2025-01-07T17:55:43.1451830Z         )
2025-01-07T17:55:43.1451870Z     
2025-01-07T17:55:43.1451930Z         # Save other properties
2025-01-07T17:55:43.1451980Z         self.lines_df = lines_df
2025-01-07T17:55:43.1452040Z         self.r_inner = r_inner
2025-01-07T17:55:43.1452150Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1452250Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1452360Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1452430Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1452510Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1452550Z         )
2025-01-07T17:55:43.1452640Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1452700Z         self.t_inner = t_inner
2025-01-07T17:55:43.1452780Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1452850Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1452900Z         self.v_inner = v_inner
2025-01-07T17:55:43.1452950Z         self.v_outer = v_outer
2025-01-07T17:55:43.1453000Z     
2025-01-07T17:55:43.1453070Z         # First check if both options are provided
2025-01-07T17:55:43.1453200Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1453260Z >           raise ValueError(
2025-01-07T17:55:43.1453360Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1453490Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1453530Z             )
2025-01-07T17:55:43.1453850Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1453860Z 
2025-01-07T17:55:43.1454000Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1454160Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl3] _
2025-01-07T17:55:43.1454160Z 
2025-01-07T17:55:43.1454360Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1454530Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1454710Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1454710Z 
2025-01-07T17:55:43.1454770Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1454860Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1454900Z         """
2025-01-07T17:55:43.1454960Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1455010Z     
2025-01-07T17:55:43.1455060Z         Parameters
2025-01-07T17:55:43.1455150Z         ----------
2025-01-07T17:55:43.1455270Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1455320Z             Simulation object.
2025-01-07T17:55:43.1455370Z     
2025-01-07T17:55:43.1455420Z         Returns
2025-01-07T17:55:43.1455460Z         -------
2025-01-07T17:55:43.1455560Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1455610Z         """
2025-01-07T17:55:43.1455710Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1455710Z 
2025-01-07T17:55:43.1455820Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1455900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1456020Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1456140Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1456310Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1456420Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1456570Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1456620Z     return cls(
2025-01-07T17:55:43.1456710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1456710Z 
2025-01-07T17:55:43.1456920Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1457030Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1457160Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1457300Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1457460Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1457540Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1457680Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1457760Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1457890Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1457980Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1458070Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1458070Z 
2025-01-07T17:55:43.1458120Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1458250Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1458330Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1458540Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1458590Z        0.00025518])
2025-01-07T17:55:43.1458720Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1458870Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1458970Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1459070Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1459230Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1459320Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1459500Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1459620Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1459770Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1459860Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1459970Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1460050Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1460110Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1460230Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1460370Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1460470Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1460590Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1460720Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1460830Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1460960Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1461060Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1461150Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1461200Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1461210Z 
2025-01-07T17:55:43.1461250Z     def __init__(
2025-01-07T17:55:43.1461300Z         self,
2025-01-07T17:55:43.1461360Z         last_interaction_type,
2025-01-07T17:55:43.1461410Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1461480Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1461540Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1466590Z         last_interaction_in_r,
2025-01-07T17:55:43.1466690Z         lines_df,
2025-01-07T17:55:43.1466740Z         packet_nus,
2025-01-07T17:55:43.1466790Z         packet_energies,
2025-01-07T17:55:43.1466840Z         r_inner,
2025-01-07T17:55:43.1466910Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1467060Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1467140Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1467200Z         spectrum_wavelength,
2025-01-07T17:55:43.1467240Z         t_inner,
2025-01-07T17:55:43.1467290Z         time_of_simulation,
2025-01-07T17:55:43.1467340Z         time_explosion,
2025-01-07T17:55:43.1467390Z         v_inner,
2025-01-07T17:55:43.1467430Z         v_outer,
2025-01-07T17:55:43.1467470Z         velocity
2025-01-07T17:55:43.1467520Z     ):
2025-01-07T17:55:43.1467560Z         """
2025-01-07T17:55:43.1467740Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1467780Z     
2025-01-07T17:55:43.1467830Z         Parameters
2025-01-07T17:55:43.1467880Z         ----------
2025-01-07T17:55:43.1467950Z         last_interaction_type : np.array
2025-01-07T17:55:43.1468470Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1468570Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1468640Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1468880Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1468990Z             absorption (interaction in)
2025-01-07T17:55:43.1469070Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1469190Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1469250Z             emission (interaction out)
2025-01-07T17:55:43.1469320Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1469440Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1469500Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1469620Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1469700Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1469820Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1470150Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1470280Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1470330Z             unit of Hz
2025-01-07T17:55:43.1470390Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1470500Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1470560Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1470650Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1470730Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1470820Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1470910Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1471010Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1471080Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1471180Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1471250Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1471340Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1471410Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1471500Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1471540Z         """
2025-01-07T17:55:43.1471670Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1471750Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1471820Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1471870Z             {
2025-01-07T17:55:43.1471920Z                 "nus": packet_nus,
2025-01-07T17:55:43.1472030Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1472100Z                 "energies": packet_energies,
2025-01-07T17:55:43.1472190Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1472310Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1472420Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1472540Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1472620Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1472670Z             }
2025-01-07T17:55:43.1472710Z         )
2025-01-07T17:55:43.1472750Z     
2025-01-07T17:55:43.1472810Z         # Save other properties
2025-01-07T17:55:43.1472870Z         self.lines_df = lines_df
2025-01-07T17:55:43.1472930Z         self.r_inner = r_inner
2025-01-07T17:55:43.1473040Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1473140Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1473330Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1473410Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1473480Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1473530Z         )
2025-01-07T17:55:43.1473620Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1473670Z         self.t_inner = t_inner
2025-01-07T17:55:43.1473760Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1473820Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1473870Z         self.v_inner = v_inner
2025-01-07T17:55:43.1473930Z         self.v_outer = v_outer
2025-01-07T17:55:43.1473970Z     
2025-01-07T17:55:43.1474050Z         # First check if both options are provided
2025-01-07T17:55:43.1474180Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1474240Z >           raise ValueError(
2025-01-07T17:55:43.1474350Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1474480Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1474570Z             )
2025-01-07T17:55:43.1474850Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1474850Z 
2025-01-07T17:55:43.1474990Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1475150Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl4] _
2025-01-07T17:55:43.1475150Z 
2025-01-07T17:55:43.1475360Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1475520Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1475710Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1475710Z 
2025-01-07T17:55:43.1475770Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1475850Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1475910Z         """
2025-01-07T17:55:43.1475970Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1476010Z     
2025-01-07T17:55:43.1476060Z         Parameters
2025-01-07T17:55:43.1476110Z         ----------
2025-01-07T17:55:43.1476210Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1476270Z             Simulation object.
2025-01-07T17:55:43.1476310Z     
2025-01-07T17:55:43.1476350Z         Returns
2025-01-07T17:55:43.1476400Z         -------
2025-01-07T17:55:43.1476500Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1476540Z         """
2025-01-07T17:55:43.1476640Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1476640Z 
2025-01-07T17:55:43.1476750Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1476840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1476970Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1477080Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1477250Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1477350Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1477510Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1477550Z     return cls(
2025-01-07T17:55:43.1477640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1477650Z 
2025-01-07T17:55:43.1477850Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1477950Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1478140Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1478290Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1478450Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1478530Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1478670Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1478750Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1478880Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1478960Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1479060Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1479060Z 
2025-01-07T17:55:43.1479110Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1479240Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1479330Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1479520Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1479570Z        0.00025518])
2025-01-07T17:55:43.1479690Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1479850Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1479950Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1480050Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1480210Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1480290Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1480490Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1480600Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1480760Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1480840Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1480910Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1480990Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1481050Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1481170Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1481310Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1481410Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1481530Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1481660Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1481760Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1481890Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1482000Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1482080Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1482130Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1482130Z 
2025-01-07T17:55:43.1482180Z     def __init__(
2025-01-07T17:55:43.1482220Z         self,
2025-01-07T17:55:43.1482280Z         last_interaction_type,
2025-01-07T17:55:43.1482340Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1482400Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1482460Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1482560Z         last_interaction_in_r,
2025-01-07T17:55:43.1482610Z         lines_df,
2025-01-07T17:55:43.1482660Z         packet_nus,
2025-01-07T17:55:43.1482710Z         packet_energies,
2025-01-07T17:55:43.1482760Z         r_inner,
2025-01-07T17:55:43.1482820Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1482960Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1483030Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1483090Z         spectrum_wavelength,
2025-01-07T17:55:43.1483140Z         t_inner,
2025-01-07T17:55:43.1483190Z         time_of_simulation,
2025-01-07T17:55:43.1483240Z         time_explosion,
2025-01-07T17:55:43.1483280Z         v_inner,
2025-01-07T17:55:43.1483330Z         v_outer,
2025-01-07T17:55:43.1483370Z         velocity
2025-01-07T17:55:43.1483420Z     ):
2025-01-07T17:55:43.1483460Z         """
2025-01-07T17:55:43.1483630Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1483680Z     
2025-01-07T17:55:43.1483730Z         Parameters
2025-01-07T17:55:43.1483780Z         ----------
2025-01-07T17:55:43.1483840Z         last_interaction_type : np.array
2025-01-07T17:55:43.1484000Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1484090Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1484160Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1484270Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1484330Z             absorption (interaction in)
2025-01-07T17:55:43.1484400Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1484510Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1484570Z             emission (interaction out)
2025-01-07T17:55:43.1484650Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1484760Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1484830Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1484950Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1485010Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1485140Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1485200Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1485320Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1485370Z             unit of Hz
2025-01-07T17:55:43.1485440Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1485530Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1485590Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1485670Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1485750Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1485850Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1485930Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1486020Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1486090Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1486200Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1486260Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1486350Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1486410Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1486500Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1486540Z         """
2025-01-07T17:55:43.1486670Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1486750Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1486810Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1487090Z             {
2025-01-07T17:55:43.1487160Z                 "nus": packet_nus,
2025-01-07T17:55:43.1487470Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1487610Z                 "energies": packet_energies,
2025-01-07T17:55:43.1487710Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1487830Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1487950Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1488060Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1488150Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1488200Z             }
2025-01-07T17:55:43.1488250Z         )
2025-01-07T17:55:43.1488290Z     
2025-01-07T17:55:43.1488350Z         # Save other properties
2025-01-07T17:55:43.1488410Z         self.lines_df = lines_df
2025-01-07T17:55:43.1488470Z         self.r_inner = r_inner
2025-01-07T17:55:43.1488580Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1489180Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1489290Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1489370Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1489440Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1489480Z         )
2025-01-07T17:55:43.1489570Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1489630Z         self.t_inner = t_inner
2025-01-07T17:55:43.1489720Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1489780Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1489840Z         self.v_inner = v_inner
2025-01-07T17:55:43.1489890Z         self.v_outer = v_outer
2025-01-07T17:55:43.1489930Z     
2025-01-07T17:55:43.1490010Z         # First check if both options are provided
2025-01-07T17:55:43.1490150Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1490210Z >           raise ValueError(
2025-01-07T17:55:43.1490320Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1490450Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1490500Z             )
2025-01-07T17:55:43.1490780Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1490780Z 
2025-01-07T17:55:43.1490930Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1491090Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl5] _
2025-01-07T17:55:43.1491090Z 
2025-01-07T17:55:43.1491300Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1491460Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1491640Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1491650Z 
2025-01-07T17:55:43.1491710Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1491800Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1491840Z         """
2025-01-07T17:55:43.1491900Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1491950Z     
2025-01-07T17:55:43.1491990Z         Parameters
2025-01-07T17:55:43.1492050Z         ----------
2025-01-07T17:55:43.1492160Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1492220Z             Simulation object.
2025-01-07T17:55:43.1492260Z     
2025-01-07T17:55:43.1492310Z         Returns
2025-01-07T17:55:43.1492360Z         -------
2025-01-07T17:55:43.1492460Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1492500Z         """
2025-01-07T17:55:43.1492700Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1492710Z 
2025-01-07T17:55:43.1492820Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1492920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1493050Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1493160Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1493330Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1493430Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1493580Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1493630Z     return cls(
2025-01-07T17:55:43.1493720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1493720Z 
2025-01-07T17:55:43.1493930Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1494040Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1494230Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1494370Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1494530Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1494610Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1494750Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1494820Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1494950Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1495040Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1495130Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1495140Z 
2025-01-07T17:55:43.1495190Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1495320Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1495410Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1495560Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1495610Z        0.00025518])
2025-01-07T17:55:43.1495730Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1495890Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1495980Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1496080Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1496240Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1496330Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1496520Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1496640Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1496790Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1496880Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1496950Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1497030Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1497090Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1497210Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1497400Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1497500Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1497630Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1497760Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1497860Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1497980Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1498080Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1498170Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1498220Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1498220Z 
2025-01-07T17:55:43.1498270Z     def __init__(
2025-01-07T17:55:43.1498310Z         self,
2025-01-07T17:55:43.1498370Z         last_interaction_type,
2025-01-07T17:55:43.1498430Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1498490Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1498550Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1498660Z         last_interaction_in_r,
2025-01-07T17:55:43.1498710Z         lines_df,
2025-01-07T17:55:43.1498750Z         packet_nus,
2025-01-07T17:55:43.1498810Z         packet_energies,
2025-01-07T17:55:43.1498850Z         r_inner,
2025-01-07T17:55:43.1498910Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1499050Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1499120Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1499180Z         spectrum_wavelength,
2025-01-07T17:55:43.1499220Z         t_inner,
2025-01-07T17:55:43.1499280Z         time_of_simulation,
2025-01-07T17:55:43.1499330Z         time_explosion,
2025-01-07T17:55:43.1499370Z         v_inner,
2025-01-07T17:55:43.1499420Z         v_outer,
2025-01-07T17:55:43.1499460Z         velocity
2025-01-07T17:55:43.1499510Z     ):
2025-01-07T17:55:43.1499550Z         """
2025-01-07T17:55:43.1499730Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1499780Z     
2025-01-07T17:55:43.1499820Z         Parameters
2025-01-07T17:55:43.1499870Z         ----------
2025-01-07T17:55:43.1499940Z         last_interaction_type : np.array
2025-01-07T17:55:43.1500060Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1500150Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1500220Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1500330Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1500400Z             absorption (interaction in)
2025-01-07T17:55:43.1500470Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1500580Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1500640Z             emission (interaction out)
2025-01-07T17:55:43.1500720Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1500830Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1500900Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1501020Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1501080Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1501200Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1501260Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1501390Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1501440Z             unit of Hz
2025-01-07T17:55:43.1501500Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1501600Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1501720Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1501810Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1501900Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1501990Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1502080Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1502170Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1502240Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1502350Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1502410Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1502500Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1502560Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1502650Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1502690Z         """
2025-01-07T17:55:43.1502940Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1503020Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1503160Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1503210Z             {
2025-01-07T17:55:43.1503270Z                 "nus": packet_nus,
2025-01-07T17:55:43.1503370Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1503430Z                 "energies": packet_energies,
2025-01-07T17:55:43.1503540Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1503650Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1503760Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1503870Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1503960Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1504010Z             }
2025-01-07T17:55:43.1504060Z         )
2025-01-07T17:55:43.1504100Z     
2025-01-07T17:55:43.1504160Z         # Save other properties
2025-01-07T17:55:43.1504220Z         self.lines_df = lines_df
2025-01-07T17:55:43.1504270Z         self.r_inner = r_inner
2025-01-07T17:55:43.1504380Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1504480Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1504580Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1504660Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1504730Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1504780Z         )
2025-01-07T17:55:43.1504860Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1504910Z         self.t_inner = t_inner
2025-01-07T17:55:43.1505000Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1505070Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1505120Z         self.v_inner = v_inner
2025-01-07T17:55:43.1505170Z         self.v_outer = v_outer
2025-01-07T17:55:43.1505220Z     
2025-01-07T17:55:43.1505290Z         # First check if both options are provided
2025-01-07T17:55:43.1505420Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1505480Z >           raise ValueError(
2025-01-07T17:55:43.1505580Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1505710Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1505760Z             )
2025-01-07T17:55:43.1506030Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1506040Z 
2025-01-07T17:55:43.1506170Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1506440Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl6] _
2025-01-07T17:55:43.1506450Z 
2025-01-07T17:55:43.1506660Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1506820Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1507000Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1507010Z 
2025-01-07T17:55:43.1507060Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1507150Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1507190Z         """
2025-01-07T17:55:43.1507250Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1507300Z     
2025-01-07T17:55:43.1507340Z         Parameters
2025-01-07T17:55:43.1507390Z         ----------
2025-01-07T17:55:43.1507500Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1507550Z             Simulation object.
2025-01-07T17:55:43.1507590Z     
2025-01-07T17:55:43.1507640Z         Returns
2025-01-07T17:55:43.1507680Z         -------
2025-01-07T17:55:43.1507780Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1508050Z         """
2025-01-07T17:55:43.1508160Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1508160Z 
2025-01-07T17:55:43.1508270Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1508360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1508480Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1508600Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1508760Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1508860Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1509010Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1509060Z     return cls(
2025-01-07T17:55:43.1509150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1509160Z 
2025-01-07T17:55:43.1509370Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1509480Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1509610Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1509760Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1509910Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1509990Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1510130Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1510200Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1510330Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1510420Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1510520Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1510520Z 
2025-01-07T17:55:43.1510570Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1510700Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1510780Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1510930Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1510980Z        0.00025518])
2025-01-07T17:55:43.1511100Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1511250Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1511400Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1511510Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1511670Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1511760Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1511940Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1512060Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1512210Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1512300Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1512360Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1512440Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1512500Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1512620Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1512760Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1512910Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1513030Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1513160Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1513260Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1513380Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1513490Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1513570Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1513630Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1513630Z 
2025-01-07T17:55:43.1513680Z     def __init__(
2025-01-07T17:55:43.1513720Z         self,
2025-01-07T17:55:43.1513780Z         last_interaction_type,
2025-01-07T17:55:43.1513840Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1513900Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1518750Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1518830Z         last_interaction_in_r,
2025-01-07T17:55:43.1518880Z         lines_df,
2025-01-07T17:55:43.1518920Z         packet_nus,
2025-01-07T17:55:43.1518980Z         packet_energies,
2025-01-07T17:55:43.1519030Z         r_inner,
2025-01-07T17:55:43.1519080Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1519230Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1519300Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1519360Z         spectrum_wavelength,
2025-01-07T17:55:43.1519400Z         t_inner,
2025-01-07T17:55:43.1519460Z         time_of_simulation,
2025-01-07T17:55:43.1519510Z         time_explosion,
2025-01-07T17:55:43.1519560Z         v_inner,
2025-01-07T17:55:43.1519610Z         v_outer,
2025-01-07T17:55:43.1519660Z         velocity
2025-01-07T17:55:43.1519700Z     ):
2025-01-07T17:55:43.1519740Z         """
2025-01-07T17:55:43.1519920Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1519970Z     
2025-01-07T17:55:43.1520010Z         Parameters
2025-01-07T17:55:43.1520060Z         ----------
2025-01-07T17:55:43.1520120Z         last_interaction_type : np.array
2025-01-07T17:55:43.1520240Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1520330Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1520400Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1520510Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1520830Z             absorption (interaction in)
2025-01-07T17:55:43.1520910Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1521020Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1521090Z             emission (interaction out)
2025-01-07T17:55:43.1521150Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1521270Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1521330Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1521450Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1521510Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1521630Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1521700Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1521820Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1521870Z             unit of Hz
2025-01-07T17:55:43.1521940Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1522040Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1522150Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1522240Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1522320Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1522410Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1522490Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1522590Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1522660Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1522760Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1522820Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1522910Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1522980Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1523060Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1523110Z         """
2025-01-07T17:55:43.1523240Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1523320Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1523380Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1523430Z             {
2025-01-07T17:55:43.1523490Z                 "nus": packet_nus,
2025-01-07T17:55:43.1523590Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1523650Z                 "energies": packet_energies,
2025-01-07T17:55:43.1523740Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1523860Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1523970Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1524090Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1524180Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1524230Z             }
2025-01-07T17:55:43.1524270Z         )
2025-01-07T17:55:43.1524310Z     
2025-01-07T17:55:43.1524360Z         # Save other properties
2025-01-07T17:55:43.1524430Z         self.lines_df = lines_df
2025-01-07T17:55:43.1524480Z         self.r_inner = r_inner
2025-01-07T17:55:43.1524590Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1524690Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1524790Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1524870Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1524940Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1524990Z         )
2025-01-07T17:55:43.1525120Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1525180Z         self.t_inner = t_inner
2025-01-07T17:55:43.1525260Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1525340Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1525390Z         self.v_inner = v_inner
2025-01-07T17:55:43.1525450Z         self.v_outer = v_outer
2025-01-07T17:55:43.1525490Z     
2025-01-07T17:55:43.1525570Z         # First check if both options are provided
2025-01-07T17:55:43.1525700Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1525750Z >           raise ValueError(
2025-01-07T17:55:43.1525860Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1525980Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1526030Z             )
2025-01-07T17:55:43.1526310Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1526310Z 
2025-01-07T17:55:43.1526450Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1526650Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl7] _
2025-01-07T17:55:43.1526660Z 
2025-01-07T17:55:43.1526860Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1527020Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1527200Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1527200Z 
2025-01-07T17:55:43.1527260Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1527340Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1527390Z         """
2025-01-07T17:55:43.1527450Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1527490Z     
2025-01-07T17:55:43.1527540Z         Parameters
2025-01-07T17:55:43.1527590Z         ----------
2025-01-07T17:55:43.1527700Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1527760Z             Simulation object.
2025-01-07T17:55:43.1527800Z     
2025-01-07T17:55:43.1527850Z         Returns
2025-01-07T17:55:43.1527890Z         -------
2025-01-07T17:55:43.1528000Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1528040Z         """
2025-01-07T17:55:43.1528140Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1528150Z 
2025-01-07T17:55:43.1528260Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1528340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1528460Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1528570Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1528740Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1528840Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1528990Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1529040Z     return cls(
2025-01-07T17:55:43.1529130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1529130Z 
2025-01-07T17:55:43.1529330Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1529440Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1529570Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1529710Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1529870Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1530190Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1530350Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1530430Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1530560Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1530650Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1530740Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1530750Z 
2025-01-07T17:55:43.1530800Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1530920Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1531010Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1531160Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1531210Z        0.00025518])
2025-01-07T17:55:43.1531330Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1531490Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1531990Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1532090Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1532250Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1532330Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1532530Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1532640Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1532790Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1532880Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1532940Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1533020Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1533090Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1533210Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1533350Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1533450Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1533570Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1533710Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1533800Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1533930Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1534030Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1534120Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1534170Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1534170Z 
2025-01-07T17:55:43.1534220Z     def __init__(
2025-01-07T17:55:43.1534260Z         self,
2025-01-07T17:55:43.1534320Z         last_interaction_type,
2025-01-07T17:55:43.1534380Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1534440Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1534500Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1534550Z         last_interaction_in_r,
2025-01-07T17:55:43.1534600Z         lines_df,
2025-01-07T17:55:43.1534640Z         packet_nus,
2025-01-07T17:55:43.1534690Z         packet_energies,
2025-01-07T17:55:43.1534740Z         r_inner,
2025-01-07T17:55:43.1534790Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1535010Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1535090Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1535150Z         spectrum_wavelength,
2025-01-07T17:55:43.1535200Z         t_inner,
2025-01-07T17:55:43.1535250Z         time_of_simulation,
2025-01-07T17:55:43.1535300Z         time_explosion,
2025-01-07T17:55:43.1535350Z         v_inner,
2025-01-07T17:55:43.1535390Z         v_outer,
2025-01-07T17:55:43.1535430Z         velocity
2025-01-07T17:55:43.1535480Z     ):
2025-01-07T17:55:43.1535520Z         """
2025-01-07T17:55:43.1535700Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1535740Z     
2025-01-07T17:55:43.1535790Z         Parameters
2025-01-07T17:55:43.1535840Z         ----------
2025-01-07T17:55:43.1535900Z         last_interaction_type : np.array
2025-01-07T17:55:43.1536020Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1536100Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1536180Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1536290Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1536410Z             absorption (interaction in)
2025-01-07T17:55:43.1536480Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1536590Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1536650Z             emission (interaction out)
2025-01-07T17:55:43.1536720Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1536830Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1536900Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1537020Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1537070Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1537200Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1537260Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1537390Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1537440Z             unit of Hz
2025-01-07T17:55:43.1537510Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1537610Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1537670Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1537750Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1537830Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1537930Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1538000Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1538100Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1538170Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1538270Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1538330Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1538430Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1538500Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1538580Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1538620Z         """
2025-01-07T17:55:43.1538760Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1538830Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1538900Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1538940Z             {
2025-01-07T17:55:43.1539000Z                 "nus": packet_nus,
2025-01-07T17:55:43.1539100Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1539160Z                 "energies": packet_energies,
2025-01-07T17:55:43.1539250Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1539410Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1539530Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1539640Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1539730Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1539770Z             }
2025-01-07T17:55:43.1539820Z         )
2025-01-07T17:55:43.1539860Z     
2025-01-07T17:55:43.1539920Z         # Save other properties
2025-01-07T17:55:43.1539980Z         self.lines_df = lines_df
2025-01-07T17:55:43.1540030Z         self.r_inner = r_inner
2025-01-07T17:55:43.1540140Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1540240Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1540340Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1540420Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1540490Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1540580Z         )
2025-01-07T17:55:43.1540670Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1540720Z         self.t_inner = t_inner
2025-01-07T17:55:43.1540810Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1540880Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1540930Z         self.v_inner = v_inner
2025-01-07T17:55:43.1541000Z         self.v_outer = v_outer
2025-01-07T17:55:43.1541040Z     
2025-01-07T17:55:43.1541120Z         # First check if both options are provided
2025-01-07T17:55:43.1541250Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1541310Z >           raise ValueError(
2025-01-07T17:55:43.1541410Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1541540Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1541590Z             )
2025-01-07T17:55:43.1541860Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1541870Z 
2025-01-07T17:55:43.1542000Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1542160Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl8] _
2025-01-07T17:55:43.1542160Z 
2025-01-07T17:55:43.1542370Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1542520Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1542710Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1542710Z 
2025-01-07T17:55:43.1542770Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1542950Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1543000Z         """
2025-01-07T17:55:43.1543060Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1543110Z     
2025-01-07T17:55:43.1543150Z         Parameters
2025-01-07T17:55:43.1543210Z         ----------
2025-01-07T17:55:43.1543320Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1543370Z             Simulation object.
2025-01-07T17:55:43.1543410Z     
2025-01-07T17:55:43.1543460Z         Returns
2025-01-07T17:55:43.1543500Z         -------
2025-01-07T17:55:43.1543610Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1543650Z         """
2025-01-07T17:55:43.1543750Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1543750Z 
2025-01-07T17:55:43.1543860Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1543950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1544140Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1544260Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1544430Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1544530Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1544680Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1544730Z     return cls(
2025-01-07T17:55:43.1544820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1544820Z 
2025-01-07T17:55:43.1545020Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1545130Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1545260Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1545410Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1545560Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1545690Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1545830Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1545910Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1546040Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1546120Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1546210Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1546220Z 
2025-01-07T17:55:43.1546270Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1546390Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1546480Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1546630Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1546680Z        0.00025518])
2025-01-07T17:55:43.1546810Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1546960Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1547060Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1547160Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1547320Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1547400Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1547590Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1547710Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1547860Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1547950Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1548010Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1548090Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1548150Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1548270Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1548410Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1548510Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1548630Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1548760Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1549030Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1549170Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1549280Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1549370Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1549420Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1549420Z 
2025-01-07T17:55:43.1549470Z     def __init__(
2025-01-07T17:55:43.1549510Z         self,
2025-01-07T17:55:43.1549570Z         last_interaction_type,
2025-01-07T17:55:43.1549630Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1549690Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1549750Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1549800Z         last_interaction_in_r,
2025-01-07T17:55:43.1549850Z         lines_df,
2025-01-07T17:55:43.1549890Z         packet_nus,
2025-01-07T17:55:43.1549950Z         packet_energies,
2025-01-07T17:55:43.1550000Z         r_inner,
2025-01-07T17:55:43.1550060Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1550350Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1550420Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1550470Z         spectrum_wavelength,
2025-01-07T17:55:43.1550520Z         t_inner,
2025-01-07T17:55:43.1550570Z         time_of_simulation,
2025-01-07T17:55:43.1550620Z         time_explosion,
2025-01-07T17:55:43.1550660Z         v_inner,
2025-01-07T17:55:43.1550710Z         v_outer,
2025-01-07T17:55:43.1550750Z         velocity
2025-01-07T17:55:43.1550790Z     ):
2025-01-07T17:55:43.1550830Z         """
2025-01-07T17:55:43.1551010Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1551050Z     
2025-01-07T17:55:43.1551090Z         Parameters
2025-01-07T17:55:43.1551140Z         ----------
2025-01-07T17:55:43.1551210Z         last_interaction_type : np.array
2025-01-07T17:55:43.1551320Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1551410Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1551480Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1551590Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1551660Z             absorption (interaction in)
2025-01-07T17:55:43.1551730Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1551840Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1551900Z             emission (interaction out)
2025-01-07T17:55:43.1551970Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1552080Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1552150Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1552270Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1552330Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1552450Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1552520Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1552640Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1552690Z             unit of Hz
2025-01-07T17:55:43.1552760Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1552850Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1552910Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1552990Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1553070Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1553160Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1553240Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1553390Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1553460Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1553580Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1553640Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1553730Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1553790Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1553880Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1553920Z         """
2025-01-07T17:55:43.1554060Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1554130Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1554200Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1554240Z             {
2025-01-07T17:55:43.1554300Z                 "nus": packet_nus,
2025-01-07T17:55:43.1554400Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1554460Z                 "energies": packet_energies,
2025-01-07T17:55:43.1554600Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1554720Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1554830Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1554930Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1555030Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1555070Z             }
2025-01-07T17:55:43.1555110Z         )
2025-01-07T17:55:43.1555150Z     
2025-01-07T17:55:43.1555210Z         # Save other properties
2025-01-07T17:55:43.1555270Z         self.lines_df = lines_df
2025-01-07T17:55:43.1555320Z         self.r_inner = r_inner
2025-01-07T17:55:43.1555430Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1555540Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1555880Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1555980Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1556050Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1556090Z         )
2025-01-07T17:55:43.1556180Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1556230Z         self.t_inner = t_inner
2025-01-07T17:55:43.1556320Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1556380Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1556440Z         self.v_inner = v_inner
2025-01-07T17:55:43.1556500Z         self.v_outer = v_outer
2025-01-07T17:55:43.1556540Z     
2025-01-07T17:55:43.1556610Z         # First check if both options are provided
2025-01-07T17:55:43.1556740Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1556810Z >           raise ValueError(
2025-01-07T17:55:43.1556910Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1557040Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1557080Z             )
2025-01-07T17:55:43.1557360Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1557360Z 
2025-01-07T17:55:43.1557500Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1557660Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl9] _
2025-01-07T17:55:43.1557660Z 
2025-01-07T17:55:43.1557860Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1558020Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1558370Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1558370Z 
2025-01-07T17:55:43.1558440Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1558530Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1558570Z         """
2025-01-07T17:55:43.1558640Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1558680Z     
2025-01-07T17:55:43.1558730Z         Parameters
2025-01-07T17:55:43.1558780Z         ----------
2025-01-07T17:55:43.1558890Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1558940Z             Simulation object.
2025-01-07T17:55:43.1558980Z     
2025-01-07T17:55:43.1559030Z         Returns
2025-01-07T17:55:43.1559070Z         -------
2025-01-07T17:55:43.1559170Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1559210Z         """
2025-01-07T17:55:43.1559310Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1559320Z 
2025-01-07T17:55:43.1559420Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1559510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1559680Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1559790Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1559960Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1560050Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1560200Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1560250Z     return cls(
2025-01-07T17:55:43.1560340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1560340Z 
2025-01-07T17:55:43.1560540Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1560660Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1560790Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1560940Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1561090Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1561170Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1561300Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1561380Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1561500Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1561590Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1561680Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1561680Z 
2025-01-07T17:55:43.1561730Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1561870Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1561960Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1562110Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1562150Z        0.00025518])
2025-01-07T17:55:43.1562280Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1562430Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1562540Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1562630Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1562790Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1562920Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1563110Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1563240Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1563380Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1563470Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1563530Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1563610Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1563680Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1563800Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1563940Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1564040Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1564160Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1564290Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1564430Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1564560Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1564670Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1564750Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1564800Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1564800Z 
2025-01-07T17:55:43.1564850Z     def __init__(
2025-01-07T17:55:43.1564890Z         self,
2025-01-07T17:55:43.1564950Z         last_interaction_type,
2025-01-07T17:55:43.1569290Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1569390Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1569460Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1569520Z         last_interaction_in_r,
2025-01-07T17:55:43.1569570Z         lines_df,
2025-01-07T17:55:43.1569620Z         packet_nus,
2025-01-07T17:55:43.1569670Z         packet_energies,
2025-01-07T17:55:43.1569720Z         r_inner,
2025-01-07T17:55:43.1569770Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1569920Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1569990Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1570040Z         spectrum_wavelength,
2025-01-07T17:55:43.1570090Z         t_inner,
2025-01-07T17:55:43.1570140Z         time_of_simulation,
2025-01-07T17:55:43.1570190Z         time_explosion,
2025-01-07T17:55:43.1570240Z         v_inner,
2025-01-07T17:55:43.1570280Z         v_outer,
2025-01-07T17:55:43.1570330Z         velocity
2025-01-07T17:55:43.1570370Z     ):
2025-01-07T17:55:43.1570410Z         """
2025-01-07T17:55:43.1570590Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1570630Z     
2025-01-07T17:55:43.1570680Z         Parameters
2025-01-07T17:55:43.1570730Z         ----------
2025-01-07T17:55:43.1570790Z         last_interaction_type : np.array
2025-01-07T17:55:43.1570910Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1571000Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1571070Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1571180Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1571240Z             absorption (interaction in)
2025-01-07T17:55:43.1571310Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1571420Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1571480Z             emission (interaction out)
2025-01-07T17:55:43.1571890Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1572020Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1572090Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1572220Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1572280Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1572400Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1572460Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1572580Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1572630Z             unit of Hz
2025-01-07T17:55:43.1572700Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1572800Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1572860Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1572940Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1573020Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1573110Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1573340Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1573440Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1573510Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1573610Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1573670Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1573760Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1573830Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1573910Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1573960Z         """
2025-01-07T17:55:43.1574090Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1574170Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1574230Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1574280Z             {
2025-01-07T17:55:43.1574580Z                 "nus": packet_nus,
2025-01-07T17:55:43.1574690Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1574750Z                 "energies": packet_energies,
2025-01-07T17:55:43.1574840Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1574960Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1575070Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1575180Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1575270Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1575310Z             }
2025-01-07T17:55:43.1575350Z         )
2025-01-07T17:55:43.1575400Z     
2025-01-07T17:55:43.1575450Z         # Save other properties
2025-01-07T17:55:43.1575520Z         self.lines_df = lines_df
2025-01-07T17:55:43.1575570Z         self.r_inner = r_inner
2025-01-07T17:55:43.1575680Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1575780Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1575880Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1575960Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1576030Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1576070Z         )
2025-01-07T17:55:43.1576160Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1576210Z         self.t_inner = t_inner
2025-01-07T17:55:43.1576290Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1576360Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1576410Z         self.v_inner = v_inner
2025-01-07T17:55:43.1576460Z         self.v_outer = v_outer
2025-01-07T17:55:43.1576570Z     
2025-01-07T17:55:43.1576650Z         # First check if both options are provided
2025-01-07T17:55:43.1576790Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1576850Z >           raise ValueError(
2025-01-07T17:55:43.1576960Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1577080Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1577130Z             )
2025-01-07T17:55:43.1577400Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1577400Z 
2025-01-07T17:55:43.1577540Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1577700Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl10] _
2025-01-07T17:55:43.1577700Z 
2025-01-07T17:55:43.1577910Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1578070Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1578300Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1578300Z 
2025-01-07T17:55:43.1578370Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1578450Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1578500Z         """
2025-01-07T17:55:43.1578550Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1578600Z     
2025-01-07T17:55:43.1578640Z         Parameters
2025-01-07T17:55:43.1578690Z         ----------
2025-01-07T17:55:43.1578800Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1578860Z             Simulation object.
2025-01-07T17:55:43.1578900Z     
2025-01-07T17:55:43.1578940Z         Returns
2025-01-07T17:55:43.1578990Z         -------
2025-01-07T17:55:43.1579090Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1579130Z         """
2025-01-07T17:55:43.1579240Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1579240Z 
2025-01-07T17:55:43.1579350Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1579440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1579560Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1579670Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1579830Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1579930Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1580080Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1580130Z     return cls(
2025-01-07T17:55:43.1580220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1580220Z 
2025-01-07T17:55:43.1580430Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1580540Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1580680Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1580810Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1580970Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1581050Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1581190Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1581260Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1581390Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1581530Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1581620Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1581630Z 
2025-01-07T17:55:43.1581680Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1581810Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1581890Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1582040Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1582090Z        0.00025518])
2025-01-07T17:55:43.1582210Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1582370Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1582460Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1582560Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1582720Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1582850Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1583140Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1583250Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1583390Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1583480Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1583550Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1583630Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1583690Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1583810Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1583950Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1584050Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1584170Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1584310Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1584400Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1584530Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1584630Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1584720Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1584760Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1584770Z 
2025-01-07T17:55:43.1584820Z     def __init__(
2025-01-07T17:55:43.1584860Z         self,
2025-01-07T17:55:43.1584920Z         last_interaction_type,
2025-01-07T17:55:43.1584980Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1585050Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1585110Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1585160Z         last_interaction_in_r,
2025-01-07T17:55:43.1585210Z         lines_df,
2025-01-07T17:55:43.1585250Z         packet_nus,
2025-01-07T17:55:43.1585310Z         packet_energies,
2025-01-07T17:55:43.1585350Z         r_inner,
2025-01-07T17:55:43.1585410Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1585550Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1585620Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1585680Z         spectrum_wavelength,
2025-01-07T17:55:43.1585720Z         t_inner,
2025-01-07T17:55:43.1585770Z         time_of_simulation,
2025-01-07T17:55:43.1585820Z         time_explosion,
2025-01-07T17:55:43.1585930Z         v_inner,
2025-01-07T17:55:43.1585980Z         v_outer,
2025-01-07T17:55:43.1586020Z         velocity
2025-01-07T17:55:43.1586070Z     ):
2025-01-07T17:55:43.1586110Z         """
2025-01-07T17:55:43.1586290Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1586330Z     
2025-01-07T17:55:43.1586380Z         Parameters
2025-01-07T17:55:43.1586430Z         ----------
2025-01-07T17:55:43.1586490Z         last_interaction_type : np.array
2025-01-07T17:55:43.1586610Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1586690Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1586760Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1586870Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1586930Z             absorption (interaction in)
2025-01-07T17:55:43.1587000Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1587120Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1587170Z             emission (interaction out)
2025-01-07T17:55:43.1587300Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1587410Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1587480Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1587600Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1587660Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1587780Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1587840Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1587970Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1588020Z             unit of Hz
2025-01-07T17:55:43.1588090Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1588190Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1588260Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1588340Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1588420Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1588520Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1588590Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1588690Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1588760Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1588860Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1588920Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1589020Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1589080Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1589170Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1589210Z         """
2025-01-07T17:55:43.1589350Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1589430Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1589500Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1589550Z             {
2025-01-07T17:55:43.1589600Z                 "nus": packet_nus,
2025-01-07T17:55:43.1589700Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1589760Z                 "energies": packet_energies,
2025-01-07T17:55:43.1589860Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1589970Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1590080Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1590190Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1590470Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1590530Z             }
2025-01-07T17:55:43.1590580Z         )
2025-01-07T17:55:43.1590620Z     
2025-01-07T17:55:43.1590690Z         # Save other properties
2025-01-07T17:55:43.1590740Z         self.lines_df = lines_df
2025-01-07T17:55:43.1590800Z         self.r_inner = r_inner
2025-01-07T17:55:43.1590910Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1591010Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1591120Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1591190Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1591270Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1591310Z         )
2025-01-07T17:55:43.1591390Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1591450Z         self.t_inner = t_inner
2025-01-07T17:55:43.1591530Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1591600Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1591660Z         self.v_inner = v_inner
2025-01-07T17:55:43.1591860Z         self.v_outer = v_outer
2025-01-07T17:55:43.1591900Z     
2025-01-07T17:55:43.1591980Z         # First check if both options are provided
2025-01-07T17:55:43.1592110Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1592170Z >           raise ValueError(
2025-01-07T17:55:43.1592270Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1592400Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1592440Z             )
2025-01-07T17:55:43.1592720Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1592720Z 
2025-01-07T17:55:43.1592860Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1593020Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl11] _
2025-01-07T17:55:43.1593030Z 
2025-01-07T17:55:43.1593230Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1593390Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1593570Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1593570Z 
2025-01-07T17:55:43.1593630Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1593720Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1593760Z         """
2025-01-07T17:55:43.1593820Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1593870Z     
2025-01-07T17:55:43.1593910Z         Parameters
2025-01-07T17:55:43.1593960Z         ----------
2025-01-07T17:55:43.1594070Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1594130Z             Simulation object.
2025-01-07T17:55:43.1594170Z     
2025-01-07T17:55:43.1594220Z         Returns
2025-01-07T17:55:43.1594260Z         -------
2025-01-07T17:55:43.1594360Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1594400Z         """
2025-01-07T17:55:43.1594510Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1594510Z 
2025-01-07T17:55:43.1594620Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1594700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1594830Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1594940Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1595100Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1595200Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1595410Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1595460Z     return cls(
2025-01-07T17:55:43.1595560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1595560Z 
2025-01-07T17:55:43.1595760Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1595870Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1596010Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1596140Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1596300Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1596370Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1596520Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1596590Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1596720Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1596860Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1596950Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1596950Z 
2025-01-07T17:55:43.1597000Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1597130Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1597210Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1597360Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1597410Z        0.00025518])
2025-01-07T17:55:43.1597530Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1597690Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1597790Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1597890Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1598040Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1598130Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1598310Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1598430Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1598580Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1598660Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1598730Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1598810Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1598870Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1598990Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1599130Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1599230Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1599350Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1599490Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1599590Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1599710Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1599810Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1599940Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1600000Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1600000Z 
2025-01-07T17:55:43.1600060Z     def __init__(
2025-01-07T17:55:43.1600100Z         self,
2025-01-07T17:55:43.1600160Z         last_interaction_type,
2025-01-07T17:55:43.1600220Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1600280Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1600340Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1600390Z         last_interaction_in_r,
2025-01-07T17:55:43.1600440Z         lines_df,
2025-01-07T17:55:43.1600480Z         packet_nus,
2025-01-07T17:55:43.1600540Z         packet_energies,
2025-01-07T17:55:43.1600580Z         r_inner,
2025-01-07T17:55:43.1600640Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1600780Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1600850Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1600900Z         spectrum_wavelength,
2025-01-07T17:55:43.1600950Z         t_inner,
2025-01-07T17:55:43.1601000Z         time_of_simulation,
2025-01-07T17:55:43.1601100Z         time_explosion,
2025-01-07T17:55:43.1601150Z         v_inner,
2025-01-07T17:55:43.1601190Z         v_outer,
2025-01-07T17:55:43.1601240Z         velocity
2025-01-07T17:55:43.1601280Z     ):
2025-01-07T17:55:43.1601320Z         """
2025-01-07T17:55:43.1601500Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1601540Z     
2025-01-07T17:55:43.1601580Z         Parameters
2025-01-07T17:55:43.1601630Z         ----------
2025-01-07T17:55:43.1601690Z         last_interaction_type : np.array
2025-01-07T17:55:43.1601810Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1602090Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1602170Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1602290Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1602360Z             absorption (interaction in)
2025-01-07T17:55:43.1602430Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1602540Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1602600Z             emission (interaction out)
2025-01-07T17:55:43.1602670Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1602780Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1602860Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1602970Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1603030Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1603160Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1603220Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1603350Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1603400Z             unit of Hz
2025-01-07T17:55:43.1603470Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1603560Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1603620Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1603700Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1603780Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1603870Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1603950Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1604050Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1604120Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1604220Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1604280Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1604490Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1604560Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1604650Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1604690Z         """
2025-01-07T17:55:43.1604830Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1604910Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1604980Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1605020Z             {
2025-01-07T17:55:43.1605080Z                 "nus": packet_nus,
2025-01-07T17:55:43.1605180Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1605240Z                 "energies": packet_energies,
2025-01-07T17:55:43.1605330Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1605450Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1605560Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1605670Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1605810Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1605850Z             }
2025-01-07T17:55:43.1605900Z         )
2025-01-07T17:55:43.1605940Z     
2025-01-07T17:55:43.1606000Z         # Save other properties
2025-01-07T17:55:43.1606050Z         self.lines_df = lines_df
2025-01-07T17:55:43.1606110Z         self.r_inner = r_inner
2025-01-07T17:55:43.1606220Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1606320Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1606420Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1606500Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1606570Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1606620Z         )
2025-01-07T17:55:43.1606710Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1606770Z         self.t_inner = t_inner
2025-01-07T17:55:43.1606850Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1606910Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1606970Z         self.v_inner = v_inner
2025-01-07T17:55:43.1607020Z         self.v_outer = v_outer
2025-01-07T17:55:43.1607070Z     
2025-01-07T17:55:43.1607140Z         # First check if both options are provided
2025-01-07T17:55:43.1607270Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1607330Z >           raise ValueError(
2025-01-07T17:55:43.1607430Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1607550Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1607600Z             )
2025-01-07T17:55:43.1607880Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1607880Z 
2025-01-07T17:55:43.1608010Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1608170Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl12] _
2025-01-07T17:55:43.1608180Z 
2025-01-07T17:55:43.1608380Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1608540Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1608720Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1608720Z 
2025-01-07T17:55:43.1608780Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1608870Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1608910Z         """
2025-01-07T17:55:43.1609080Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1609130Z     
2025-01-07T17:55:43.1609180Z         Parameters
2025-01-07T17:55:43.1609220Z         ----------
2025-01-07T17:55:43.1609340Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1609390Z             Simulation object.
2025-01-07T17:55:43.1609440Z     
2025-01-07T17:55:43.1609480Z         Returns
2025-01-07T17:55:43.1609520Z         -------
2025-01-07T17:55:43.1609620Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1609670Z         """
2025-01-07T17:55:43.1609770Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1609770Z 
2025-01-07T17:55:43.1609870Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1609970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1610080Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1610200Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1610370Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1610690Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1610840Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1610890Z     return cls(
2025-01-07T17:55:43.1610970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1610980Z 
2025-01-07T17:55:43.1611180Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1611290Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1611420Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1611560Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1611720Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1611800Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1611940Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1612020Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1612140Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1612240Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1612320Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1612330Z 
2025-01-07T17:55:43.1612380Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1612510Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1612590Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1612740Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1612790Z        0.00025518])
2025-01-07T17:55:43.1612910Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1613070Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1613170Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1613260Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1613420Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1613510Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1613690Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1613810Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1614010Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1614110Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1614170Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1614260Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1614320Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1614440Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1614580Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1614680Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1614800Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1614930Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1615030Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1615160Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1615260Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1615390Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1615450Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1615450Z 
2025-01-07T17:55:43.1615500Z     def __init__(
2025-01-07T17:55:43.1615540Z         self,
2025-01-07T17:55:43.1619700Z         last_interaction_type,
2025-01-07T17:55:43.1619810Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1619880Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1619940Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1619990Z         last_interaction_in_r,
2025-01-07T17:55:43.1620040Z         lines_df,
2025-01-07T17:55:43.1620090Z         packet_nus,
2025-01-07T17:55:43.1620140Z         packet_energies,
2025-01-07T17:55:43.1620190Z         r_inner,
2025-01-07T17:55:43.1620250Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1620400Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1620470Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1620530Z         spectrum_wavelength,
2025-01-07T17:55:43.1620570Z         t_inner,
2025-01-07T17:55:43.1620620Z         time_of_simulation,
2025-01-07T17:55:43.1620670Z         time_explosion,
2025-01-07T17:55:43.1620710Z         v_inner,
2025-01-07T17:55:43.1620760Z         v_outer,
2025-01-07T17:55:43.1620800Z         velocity
2025-01-07T17:55:43.1620840Z     ):
2025-01-07T17:55:43.1620890Z         """
2025-01-07T17:55:43.1621060Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1621110Z     
2025-01-07T17:55:43.1621150Z         Parameters
2025-01-07T17:55:43.1621200Z         ----------
2025-01-07T17:55:43.1621260Z         last_interaction_type : np.array
2025-01-07T17:55:43.1621380Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1621470Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1621540Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1621650Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1621710Z             absorption (interaction in)
2025-01-07T17:55:43.1621790Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1621890Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1621960Z             emission (interaction out)
2025-01-07T17:55:43.1622020Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1622140Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1622210Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1622330Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1622380Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1622720Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1622790Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1622920Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1623070Z             unit of Hz
2025-01-07T17:55:43.1623130Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1623230Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1623290Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1623380Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1623450Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1623550Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1623630Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1623730Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1623800Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1623910Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1624050Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1624140Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1624220Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1624300Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1624350Z         """
2025-01-07T17:55:43.1624480Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1624560Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1624620Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1624660Z             {
2025-01-07T17:55:43.1624720Z                 "nus": packet_nus,
2025-01-07T17:55:43.1624820Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1624880Z                 "energies": packet_energies,
2025-01-07T17:55:43.1624970Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1625090Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1625200Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1625310Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1625400Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1625440Z             }
2025-01-07T17:55:43.1625490Z         )
2025-01-07T17:55:43.1625530Z     
2025-01-07T17:55:43.1625580Z         # Save other properties
2025-01-07T17:55:43.1625640Z         self.lines_df = lines_df
2025-01-07T17:55:43.1625700Z         self.r_inner = r_inner
2025-01-07T17:55:43.1625810Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1625910Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1626010Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1626090Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1626160Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1626210Z         )
2025-01-07T17:55:43.1626290Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1626350Z         self.t_inner = t_inner
2025-01-07T17:55:43.1626430Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1626500Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1626560Z         self.v_inner = v_inner
2025-01-07T17:55:43.1626620Z         self.v_outer = v_outer
2025-01-07T17:55:43.1626660Z     
2025-01-07T17:55:43.1626730Z         # First check if both options are provided
2025-01-07T17:55:43.1626870Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1626920Z >           raise ValueError(
2025-01-07T17:55:43.1627080Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1627210Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1627260Z             )
2025-01-07T17:55:43.1627530Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1627540Z 
2025-01-07T17:55:43.1627670Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1627830Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl13] _
2025-01-07T17:55:43.1627830Z 
2025-01-07T17:55:43.1628040Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1628190Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1628370Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1628380Z 
2025-01-07T17:55:43.1628440Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1628520Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1628610Z         """
2025-01-07T17:55:43.1628670Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1628720Z     
2025-01-07T17:55:43.1628760Z         Parameters
2025-01-07T17:55:43.1628820Z         ----------
2025-01-07T17:55:43.1628920Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1628980Z             Simulation object.
2025-01-07T17:55:43.1629020Z     
2025-01-07T17:55:43.1629070Z         Returns
2025-01-07T17:55:43.1629110Z         -------
2025-01-07T17:55:43.1629210Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1629250Z         """
2025-01-07T17:55:43.1629350Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1629350Z 
2025-01-07T17:55:43.1629460Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1629550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1629680Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1629790Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1629950Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1630050Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1630200Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1630240Z     return cls(
2025-01-07T17:55:43.1630330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1630330Z 
2025-01-07T17:55:43.1630540Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1630650Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1630780Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1630920Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1631090Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1631160Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1631310Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1631380Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1631510Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1631590Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1631690Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1631690Z 
2025-01-07T17:55:43.1631740Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1632110Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1632210Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1632370Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1632410Z        0.00025518])
2025-01-07T17:55:43.1632540Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1632690Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1632790Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1632880Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1633040Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1633310Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1633570Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1633690Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1634220Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1634320Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1634380Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1634460Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1634530Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1634660Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1634790Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1634890Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1635010Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1635150Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1635250Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1635380Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1635480Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1635570Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1635610Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1635620Z 
2025-01-07T17:55:43.1635670Z     def __init__(
2025-01-07T17:55:43.1635710Z         self,
2025-01-07T17:55:43.1635770Z         last_interaction_type,
2025-01-07T17:55:43.1635830Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1635900Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1635960Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1636010Z         last_interaction_in_r,
2025-01-07T17:55:43.1636060Z         lines_df,
2025-01-07T17:55:43.1636110Z         packet_nus,
2025-01-07T17:55:43.1636160Z         packet_energies,
2025-01-07T17:55:43.1636210Z         r_inner,
2025-01-07T17:55:43.1636270Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1636410Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1636480Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1636530Z         spectrum_wavelength,
2025-01-07T17:55:43.1636580Z         t_inner,
2025-01-07T17:55:43.1636630Z         time_of_simulation,
2025-01-07T17:55:43.1636690Z         time_explosion,
2025-01-07T17:55:43.1636730Z         v_inner,
2025-01-07T17:55:43.1636770Z         v_outer,
2025-01-07T17:55:43.1636820Z         velocity
2025-01-07T17:55:43.1636860Z     ):
2025-01-07T17:55:43.1636900Z         """
2025-01-07T17:55:43.1637080Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1637130Z     
2025-01-07T17:55:43.1637240Z         Parameters
2025-01-07T17:55:43.1637300Z         ----------
2025-01-07T17:55:43.1637370Z         last_interaction_type : np.array
2025-01-07T17:55:43.1637490Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1637580Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1637650Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1637760Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1637820Z             absorption (interaction in)
2025-01-07T17:55:43.1637900Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1638010Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1638060Z             emission (interaction out)
2025-01-07T17:55:43.1638140Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1638250Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1638320Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1638440Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1638540Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1638670Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1638730Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1638860Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1638910Z             unit of Hz
2025-01-07T17:55:43.1638980Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1639080Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1639140Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1639220Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1639300Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1639400Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1639470Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1639570Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1639640Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1639750Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1639810Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1639910Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1639970Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1640060Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1640100Z         """
2025-01-07T17:55:43.1640240Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1640320Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1640390Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1640430Z             {
2025-01-07T17:55:43.1640490Z                 "nus": packet_nus,
2025-01-07T17:55:43.1640590Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1640650Z                 "energies": packet_energies,
2025-01-07T17:55:43.1640750Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1640860Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1640980Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1641080Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1641170Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1641210Z             }
2025-01-07T17:55:43.1641260Z         )
2025-01-07T17:55:43.1641300Z     
2025-01-07T17:55:43.1641360Z         # Save other properties
2025-01-07T17:55:43.1641410Z         self.lines_df = lines_df
2025-01-07T17:55:43.1641510Z         self.r_inner = r_inner
2025-01-07T17:55:43.1641630Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1641730Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1641840Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1641920Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1641990Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1642040Z         )
2025-01-07T17:55:43.1642120Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1642180Z         self.t_inner = t_inner
2025-01-07T17:55:43.1642260Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1642330Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1642380Z         self.v_inner = v_inner
2025-01-07T17:55:43.1642440Z         self.v_outer = v_outer
2025-01-07T17:55:43.1642480Z     
2025-01-07T17:55:43.1642550Z         # First check if both options are provided
2025-01-07T17:55:43.1642690Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1642750Z >           raise ValueError(
2025-01-07T17:55:43.1642900Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1643040Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1643080Z             )
2025-01-07T17:55:43.1643360Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1643370Z 
2025-01-07T17:55:43.1643500Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1643670Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl14] _
2025-01-07T17:55:43.1643670Z 
2025-01-07T17:55:43.1643870Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1644030Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1644210Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1644220Z 
2025-01-07T17:55:43.1644280Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1644370Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1644420Z         """
2025-01-07T17:55:43.1644480Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1644520Z     
2025-01-07T17:55:43.1644560Z         Parameters
2025-01-07T17:55:43.1644620Z         ----------
2025-01-07T17:55:43.1644720Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1644790Z             Simulation object.
2025-01-07T17:55:43.1644830Z     
2025-01-07T17:55:43.1644870Z         Returns
2025-01-07T17:55:43.1644920Z         -------
2025-01-07T17:55:43.1645020Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1645060Z         """
2025-01-07T17:55:43.1645170Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1645170Z 
2025-01-07T17:55:43.1645280Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1645370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1645490Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1645600Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1645770Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1645860Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1646020Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1646060Z     return cls(
2025-01-07T17:55:43.1646150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1646150Z 
2025-01-07T17:55:43.1646410Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1646520Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1646660Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1646800Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1646960Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1647030Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1647180Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1647250Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1647380Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1647460Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1647560Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1647560Z 
2025-01-07T17:55:43.1647610Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1647780Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1647870Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1648010Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1648070Z        0.00025518])
2025-01-07T17:55:43.1648190Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1648360Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1648450Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1648550Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1648710Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1648800Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1648990Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1649100Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1649250Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1649340Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1649400Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1649480Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1649540Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1649660Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1649800Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1649900Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1650020Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1650160Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1650250Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1650370Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1650470Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1650560Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1650610Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1650610Z 
2025-01-07T17:55:43.1650660Z     def __init__(
2025-01-07T17:55:43.1650700Z         self,
2025-01-07T17:55:43.1650760Z         last_interaction_type,
2025-01-07T17:55:43.1651000Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1651080Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1651140Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1651200Z         last_interaction_in_r,
2025-01-07T17:55:43.1651250Z         lines_df,
2025-01-07T17:55:43.1651300Z         packet_nus,
2025-01-07T17:55:43.1651350Z         packet_energies,
2025-01-07T17:55:43.1651390Z         r_inner,
2025-01-07T17:55:43.1651450Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1651590Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1651660Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1651710Z         spectrum_wavelength,
2025-01-07T17:55:43.1651760Z         t_inner,
2025-01-07T17:55:43.1651810Z         time_of_simulation,
2025-01-07T17:55:43.1651860Z         time_explosion,
2025-01-07T17:55:43.1651900Z         v_inner,
2025-01-07T17:55:43.1651950Z         v_outer,
2025-01-07T17:55:43.1651990Z         velocity
2025-01-07T17:55:43.1652040Z     ):
2025-01-07T17:55:43.1652080Z         """
2025-01-07T17:55:43.1652260Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1652430Z     
2025-01-07T17:55:43.1652480Z         Parameters
2025-01-07T17:55:43.1652530Z         ----------
2025-01-07T17:55:43.1652590Z         last_interaction_type : np.array
2025-01-07T17:55:43.1652710Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1652800Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1652870Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1652980Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1653040Z             absorption (interaction in)
2025-01-07T17:55:43.1653110Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1653220Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1653280Z             emission (interaction out)
2025-01-07T17:55:43.1653360Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1653470Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1653540Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1653660Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1653720Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1653850Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1653910Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1654040Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1654080Z             unit of Hz
2025-01-07T17:55:43.1654160Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1654250Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1654310Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1654390Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1654480Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1654570Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1654650Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1654740Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1654810Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1654920Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1654970Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1655060Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1655130Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1655220Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1655260Z         """
2025-01-07T17:55:43.1655450Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1655530Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1655600Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1655640Z             {
2025-01-07T17:55:43.1655700Z                 "nus": packet_nus,
2025-01-07T17:55:43.1655800Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1655870Z                 "energies": packet_energies,
2025-01-07T17:55:43.1655960Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1656070Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1656190Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1656290Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1656380Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1656430Z             }
2025-01-07T17:55:43.1656470Z         )
2025-01-07T17:55:43.1656510Z     
2025-01-07T17:55:43.1656570Z         # Save other properties
2025-01-07T17:55:43.1656670Z         self.lines_df = lines_df
2025-01-07T17:55:43.1656730Z         self.r_inner = r_inner
2025-01-07T17:55:43.1656830Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1656940Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1657040Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1657120Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1657190Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1657230Z         )
2025-01-07T17:55:43.1657320Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1657370Z         self.t_inner = t_inner
2025-01-07T17:55:43.1657450Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1657520Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1657570Z         self.v_inner = v_inner
2025-01-07T17:55:43.1657620Z         self.v_outer = v_outer
2025-01-07T17:55:43.1657670Z     
2025-01-07T17:55:43.1657740Z         # First check if both options are provided
2025-01-07T17:55:43.1657880Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1657940Z >           raise ValueError(
2025-01-07T17:55:43.1658040Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1658170Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1658210Z             )
2025-01-07T17:55:43.1658490Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1658490Z 
2025-01-07T17:55:43.1658630Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1658790Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl15] _
2025-01-07T17:55:43.1658800Z 
2025-01-07T17:55:43.1659000Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x119857c80>
2025-01-07T17:55:43.1659160Z simulation_simple = <tardis.simulation.base.Simulation object at 0x11b95f8c0>
2025-01-07T17:55:43.1659340Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:43.1659350Z 
2025-01-07T17:55:43.1659410Z     @pytest.fixture(scope="class")
2025-01-07T17:55:43.1659490Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:43.1659530Z         """
2025-01-07T17:55:43.1659600Z         Create a SDECPlotter object.
2025-01-07T17:55:43.1659640Z     
2025-01-07T17:55:43.1659680Z         Parameters
2025-01-07T17:55:43.1659730Z         ----------
2025-01-07T17:55:43.1659840Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:43.1659890Z             Simulation object.
2025-01-07T17:55:43.1659930Z     
2025-01-07T17:55:43.1660020Z         Returns
2025-01-07T17:55:43.1660070Z         -------
2025-01-07T17:55:43.1660170Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:43.1660220Z         """
2025-01-07T17:55:43.1660320Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:43.1660320Z 
2025-01-07T17:55:43.1660430Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:43.1660520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1660640Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:43.1660750Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:43.1660910Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:43.1661010Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:43.1661160Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:43.1661220Z     return cls(
2025-01-07T17:55:43.1661300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:43.1661350Z 
2025-01-07T17:55:43.1661560Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x11b5505c0>
2025-01-07T17:55:43.1661670Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:43.1661800Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1661940Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:43.1662090Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1662170Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:43.1662300Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:43.1662380Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:43.1662510Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:43.1662600Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:43.1662690Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:43.1662690Z 
2025-01-07T17:55:43.1662740Z [29224 rows x 12 columns]
2025-01-07T17:55:43.1662870Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:43.1662960Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:43.1663260Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:43.1663300Z        0.00025518])
2025-01-07T17:55:43.1663430Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:43.1663580Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:43.1663680Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:43.1663780Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:43.1663940Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:43.1664030Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:43.1664210Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:43.1664330Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:43.1664480Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:43.1664580Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:43.1664640Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:43.1664720Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:43.1664780Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:43.1664970Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1665120Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1665220Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:43.1665330Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:43.1665470Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:43.1665560Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:43.1665690Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:43.1665790Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:43.1665870Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:43.1665930Z            2.000e+09] cm / s>
2025-01-07T17:55:43.1665930Z 
2025-01-07T17:55:43.1665980Z     def __init__(
2025-01-07T17:55:43.1670770Z         self,
2025-01-07T17:55:43.1671000Z         last_interaction_type,
2025-01-07T17:55:43.1671060Z         last_line_interaction_in_id,
2025-01-07T17:55:43.1671120Z         last_line_interaction_out_id,
2025-01-07T17:55:43.1671180Z         last_line_interaction_in_nu,
2025-01-07T17:55:43.1671230Z         last_interaction_in_r,
2025-01-07T17:55:43.1671270Z         lines_df,
2025-01-07T17:55:43.1671320Z         packet_nus,
2025-01-07T17:55:43.1671370Z         packet_energies,
2025-01-07T17:55:43.1671420Z         r_inner,
2025-01-07T17:55:43.1671470Z         spectrum_delta_frequency,
2025-01-07T17:55:43.1671620Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:43.1671680Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:43.1671740Z         spectrum_wavelength,
2025-01-07T17:55:43.1671780Z         t_inner,
2025-01-07T17:55:43.1671840Z         time_of_simulation,
2025-01-07T17:55:43.1671890Z         time_explosion,
2025-01-07T17:55:43.1671930Z         v_inner,
2025-01-07T17:55:43.1671980Z         v_outer,
2025-01-07T17:55:43.1672020Z         velocity
2025-01-07T17:55:43.1672070Z     ):
2025-01-07T17:55:43.1672110Z         """
2025-01-07T17:55:43.1672280Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:43.1672330Z     
2025-01-07T17:55:43.1672370Z         Parameters
2025-01-07T17:55:43.1672420Z         ----------
2025-01-07T17:55:43.1672480Z         last_interaction_type : np.array
2025-01-07T17:55:43.1672600Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:43.1672690Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:43.1672760Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:43.1672870Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1672930Z             absorption (interaction in)
2025-01-07T17:55:43.1673010Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:43.1673120Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:43.1673180Z             emission (interaction out)
2025-01-07T17:55:43.1673250Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:43.1673370Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:43.1673430Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:43.1673550Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:43.1673600Z         lines_df : pd.DataFrame
2025-01-07T17:55:43.1673720Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:43.1673790Z         packet_nus : astropy.Quantity
2025-01-07T17:55:43.1673910Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:43.1673960Z             unit of Hz
2025-01-07T17:55:43.1674120Z         packet_energies : astropy.Quantity
2025-01-07T17:55:43.1674230Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:43.1674290Z         r_inner : astropy.Quantity
2025-01-07T17:55:43.1674370Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:43.1674450Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:43.1674580Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:43.1674660Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:43.1674750Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:43.1674820Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:43.1674920Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:43.1674980Z         t_inner : astropy.Quantity
2025-01-07T17:55:43.1675070Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:43.1675140Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:43.1675230Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:43.1675350Z         """
2025-01-07T17:55:43.1675480Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:43.1675560Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:43.1675620Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:43.1675670Z             {
2025-01-07T17:55:43.1675720Z                 "nus": packet_nus,
2025-01-07T17:55:43.1675820Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:43.1675890Z                 "energies": packet_energies,
2025-01-07T17:55:43.1675980Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:43.1676100Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:43.1676200Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:43.1676320Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:43.1676410Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:43.1676460Z             }
2025-01-07T17:55:43.1676500Z         )
2025-01-07T17:55:43.1676540Z     
2025-01-07T17:55:43.1676590Z         # Save other properties
2025-01-07T17:55:43.1676660Z         self.lines_df = lines_df
2025-01-07T17:55:43.1676710Z         self.r_inner = r_inner
2025-01-07T17:55:43.1676820Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:43.1676920Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:43.1677020Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:43.1677100Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:43.1677170Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:43.1677210Z         )
2025-01-07T17:55:43.1677300Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:43.1677360Z         self.t_inner = t_inner
2025-01-07T17:55:43.1677440Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:43.1677510Z         self.time_explosion = time_explosion
2025-01-07T17:55:43.1677560Z         self.v_inner = v_inner
2025-01-07T17:55:43.1677620Z         self.v_outer = v_outer
2025-01-07T17:55:43.1677660Z     
2025-01-07T17:55:43.1677740Z         # First check if both options are provided
2025-01-07T17:55:43.1677870Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:43.1677930Z >           raise ValueError(
2025-01-07T17:55:43.1678030Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:43.1678160Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:43.1678200Z             )
2025-01-07T17:55:43.1678510Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1678520Z 
2025-01-07T17:55:43.1678660Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:43.1678750Z =============================== warnings summary ===============================
2025-01-07T17:55:43.1678840Z tardis/io/configuration/config_validator.py:6
2025-01-07T17:55:43.1678910Z tardis/io/configuration/config_validator.py:6
2025-01-07T17:55:43.1679150Z   /Users/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-01-07T17:55:43.1679200Z   
2025-01-07T17:55:43.1680080Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-01-07T17:55:43.1680090Z 
2025-01-07T17:55:43.1680270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-01-07T17:55:43.1680550Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-01-07T17:55:43.1680650Z   
2025-01-07T17:55:43.1680760Z   Jupyter is migrating its paths to use standard platformdirs
2025-01-07T17:55:43.1680880Z   given by the platformdirs library.  To remove this warning and
2025-01-07T17:55:43.1681010Z   see the appropriate new directories, set the environment variable
2025-01-07T17:55:43.1681120Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-01-07T17:55:43.1681230Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-01-07T17:55:43.1681240Z 
2025-01-07T17:55:43.1686120Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-01-07T17:55:43.1686340Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-07T17:55:43.1686510Z   /Users/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-01-07T17:55:43.1686560Z   
2025-01-07T17:55:43.1686600Z   
2025-01-07T17:55:43.1686760Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-07T17:55:43.1686960Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-07T17:55:43.1686970Z 
2025-01-07T17:55:43.1687120Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-01-07T17:55:43.1687290Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-01-07T17:55:43.1687470Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-01-07T17:55:43.1687610Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-01-07T17:55:43.1687850Z   /Users/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-01-07T17:55:43.1687900Z   
2025-01-07T17:55:43.1687980Z   The current CMFGEN model parser is deprecated
2025-01-07T17:55:43.1687980Z 
2025-01-07T17:55:43.1688060Z tardis/io/tests/test_model_reader.py: 1 warning
2025-01-07T17:55:43.1688190Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-01-07T17:55:43.1688440Z   /Users/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-01-07T17:55:43.1688480Z   
2025-01-07T17:55:43.1688560Z   The current CMFGEN model parser is deprecated
2025-01-07T17:55:43.1688560Z 
2025-01-07T17:55:43.1688720Z tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances
2025-01-07T17:55:43.1689010Z   /Users/runner/work/tardis/tardis/tardis/transport/montecarlo/montecarlo_main_loop.py:123: NumbaTypeSafetyWarning:
2025-01-07T17:55:43.1689050Z   
2025-01-07T17:55:43.1689390Z   [1m[1m[1munsafe cast from uint64 to int64. Precision may be lost.[0m[0m[0m
2025-01-07T17:55:43.1689390Z 
2025-01-07T17:55:43.1689470Z tardis/model/tests/test_base.py: 6 warnings
2025-01-07T17:55:43.1689750Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-07T17:55:43.1689890Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-07T17:55:43.1690110Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-01-07T17:55:43.1690150Z   
2025-01-07T17:55:43.1690230Z   v_inner_boundary < 0, assuming default value
2025-01-07T17:55:43.1690230Z 
2025-01-07T17:55:43.1690300Z tardis/model/tests/test_base.py: 6 warnings
2025-01-07T17:55:43.1690390Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-07T17:55:43.1690520Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-07T17:55:43.1690730Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-01-07T17:55:43.1690770Z   
2025-01-07T17:55:43.1690840Z   v_outer_boundary < 0, assuming default value
2025-01-07T17:55:43.1690840Z 
2025-01-07T17:55:43.1691200Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-01-07T17:55:43.1691450Z   /Users/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-01-07T17:55:43.1691560Z   
2025-01-07T17:55:43.1691780Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-01-07T17:55:43.1692130Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-01-07T17:55:43.1692170Z   
2025-01-07T17:55:43.1692580Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-01-07T17:55:43.1692590Z 
2025-01-07T17:55:43.1692690Z tardis/plasma/tests/test_complete_plasmas.py: 20 warnings
2025-01-07T17:55:43.1692920Z   /Users/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-07T17:55:43.1692960Z   
2025-01-07T17:55:43.1693030Z   Property "atomic_mass" not found
2025-01-07T17:55:43.1693030Z 
2025-01-07T17:55:43.1693370Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues_norm_factor]
2025-01-07T17:55:43.1693660Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues_norm_factor]
2025-01-07T17:55:43.1693890Z   /Users/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-07T17:55:43.1693930Z   
2025-01-07T17:55:43.1694000Z   Property "j_blues_norm_factor" not found
2025-01-07T17:55:43.1694000Z 
2025-01-07T17:55:43.1694320Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blue_estimator]
2025-01-07T17:55:43.1694610Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blue_estimator]
2025-01-07T17:55:43.1694830Z   /Users/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-07T17:55:43.1694880Z   
2025-01-07T17:55:43.1694940Z   Property "j_blue_estimator" not found
2025-01-07T17:55:43.1694950Z 
2025-01-07T17:55:43.1695230Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-volume]
2025-01-07T17:55:43.1695480Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-volume]
2025-01-07T17:55:43.1695700Z   /Users/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-07T17:55:43.1695740Z   
2025-01-07T17:55:43.1695800Z   Property "volume" not found
2025-01-07T17:55:43.1695800Z 
2025-01-07T17:55:43.1696150Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-r_inner]
2025-01-07T17:55:43.1696420Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-r_inner]
2025-01-07T17:55:43.1696640Z   /Users/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-07T17:55:43.1696690Z   
2025-01-07T17:55:43.1696740Z   Property "r_inner" not found
2025-01-07T17:55:43.1696750Z 
2025-01-07T17:55:43.1696910Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-01-07T17:55:43.1697070Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-01-07T17:55:43.1697230Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-01-07T17:55:43.1697410Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-01-07T17:55:43.1697460Z   
2025-01-07T17:55:43.1697610Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-01-07T17:55:43.1697610Z 
2025-01-07T17:55:43.1697780Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-07T17:55:43.1697970Z   /Users/runner/work/tardis/tardis/tardis/spectrum/base.py:70: UserWarning:
2025-01-07T17:55:43.1698020Z   
2025-01-07T17:55:43.1698280Z   SpectrumSolver.spectrum_virtual_packets is zero. Please run the montecarlo simulation with no_of_virtual_packets > 0
2025-01-07T17:55:43.1698280Z 
2025-01-07T17:55:43.1698440Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-07T17:55:43.1698600Z   /Users/runner/work/tardis/tardis/tardis/spectrum/base.py:111: UserWarning:
2025-01-07T17:55:43.1698640Z   
2025-01-07T17:55:43.1698900Z   SpectrumSolver.integrator: The FormalIntegrator is not yet available.Please run the montecarlo simulation at least once.
2025-01-07T17:55:43.1698910Z 
2025-01-07T17:55:43.1699070Z tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_vpacket_volley
2025-01-07T17:55:43.1699160Z   <string>:3: NumbaPendingDeprecationWarning:
2025-01-07T17:55:43.1699200Z   
2025-01-07T17:55:43.1699980Z   [1m[1mCode using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors
2025-01-07T17:55:43.1700040Z   Exception origin:
2025-01-07T17:55:43.1700240Z     File "/Users/runner/micromamba/envs/tardis/lib/python3.12/inspect.py", line 3180, in _bind
2025-01-07T17:55:43.1700310Z       raise TypeError(msg) from None
2025-01-07T17:55:43.1700370Z   [0m[0m
2025-01-07T17:55:43.1700370Z 
2025-01-07T17:55:43.1700650Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:43.1700920Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:43.1701190Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:43.1701470Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:43.1701730Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:43.1702000Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:43.1702270Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-07T17:55:43.1702320Z   
2025-01-07T17:55:43.1702460Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-01-07T17:55:43.1702600Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-07T17:55:43.1702940Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-07T17:55:43.1702950Z 
2025-01-07T17:55:43.1703320Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:43.1703600Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:43.1703870Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-07T17:55:43.1703920Z   
2025-01-07T17:55:43.1704060Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-01-07T17:55:43.1704190Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-07T17:55:43.1704380Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-07T17:55:43.1704380Z 
2025-01-07T17:55:43.1704650Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:43.1704930Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-07T17:55:43.1705110Z   
2025-01-07T17:55:43.1705250Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-01-07T17:55:43.1705380Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-07T17:55:43.1705570Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-07T17:55:43.1705570Z 
2025-01-07T17:55:43.1705900Z tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu]
2025-01-07T17:55:43.1706160Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/qgridnext/grid.py:830: DeprecationWarning:
2025-01-07T17:55:43.1706210Z   
2025-01-07T17:55:43.1706420Z   QgridWidget._show_toolbar_changed is deprecated in traitlets 4.1: use @observe and @unobserve instead.
2025-01-07T17:55:43.1706420Z 
2025-01-07T17:55:43.1706620Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-07T17:55:43.1706790Z   /Users/runner/work/tardis/tardis/tardis/io/util.py:289: PerformanceWarning:
2025-01-07T17:55:43.1706840Z   
2025-01-07T17:55:43.1706880Z   
2025-01-07T17:55:43.1707030Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-07T17:55:43.1707230Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-07T17:55:43.1707240Z 
2025-01-07T17:55:43.1707430Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-07T17:55:43.1707590Z   /Users/runner/work/tardis/tardis/tardis/io/util.py:292: PerformanceWarning:
2025-01-07T17:55:43.1707640Z   
2025-01-07T17:55:43.1707680Z   
2025-01-07T17:55:43.1707830Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-07T17:55:43.1707970Z   map directly to c-types [inferred_type->mixed,key->values] [items->None]
2025-01-07T17:55:43.1707980Z 
2025-01-07T17:55:43.1708170Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-07T17:55:43.1708360Z   /Users/runner/work/tardis/tardis/tardis/spectrum/formal_integral.py:398: UserWarning:
2025-01-07T17:55:43.1708410Z   
2025-01-07T17:55:43.1708550Z   The number of interpolate_shells was not specified. The value was set to 80.
2025-01-07T17:55:43.1708560Z 
2025-01-07T17:55:43.1708700Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-01-07T17:55:43.1708700Z 
2025-01-07T17:55:43.1708830Z ---------- coverage: platform darwin, python 3.12.4-final-0 ----------
2025-01-07T17:55:43.1708920Z Coverage HTML written to dir coverage_html_report
2025-01-07T17:55:43.1708990Z Coverage XML written to file coverage.xml
2025-01-07T17:55:43.1708990Z 
2025-01-07T17:55:43.1709140Z =========================== short test summary info ============================
2025-01-07T17:55:43.1709690Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_species_list] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1710230Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_keep_colour] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1710780Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_species_mapped] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1711370Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1712020Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_colors] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1712620Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-new_bin_edges] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1713210Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1713800Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_colors] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1714400Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-new_bin_edges] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1714980Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1715580Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_colors] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1716180Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-new_bin_edges] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1716770Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1717400Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_colors] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1717990Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-new_bin_edges] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1718590Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1719180Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_colors] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1719770Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-new_bin_edges] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1720410Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1721000Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1721590Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-new_bin_edges] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1722180Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1722770Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_colors] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1723360Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-new_bin_edges] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1723950Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1724540Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1725130Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-new_bin_edges] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1725740Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1726310Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1726870Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl2] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1727430Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl3] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1727990Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1728590Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1729150Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl6] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1729710Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl7] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1730250Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl0] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1731050Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl1] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1731680Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl2] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1732260Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl3] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1732810Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl4] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1733360Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl5] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1733900Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl6] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1735120Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl7] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1735740Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1736310Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1736870Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply2] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1737440Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply3] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1738290Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1738860Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1739420Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply6] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1739990Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply7] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1740550Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_full_species_list] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1741110Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_species_list] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1741650Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_keep_colour] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1742260Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1742870Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1743780Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1744440Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1745050Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1745650Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1746260Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1746970Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1747570Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1748180Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1748780Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1749380Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1749990Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1750600Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1751210Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1751810Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1753630Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1754490Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1755090Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1755660Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1756250Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1756950Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1757510Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1758090Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1758660Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1759230Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1759800Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1760370Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1760950Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1761520Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1762090Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1762780Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1763350Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl0] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1763900Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl1] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1764450Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl2] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1765000Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl3] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1765640Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1766200Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl5] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1766850Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl6] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1767480Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl7] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1768080Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl8] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1768660Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl9] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1769230Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl10] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1769810Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl11] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1770380Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl12] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1771470Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl13] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1772130Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl14] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1772720Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl15] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:43.1772950Z = 1336 passed, 329 skipped, 2 deselected, 19 xfailed, 8 xpassed, 90 warnings, 102 errors in 697.38s (0:11:37) =
2025-01-07T17:55:44.6022970Z ##[error]Process completed with exit code 1.
2025-01-07T17:55:44.6171900Z Post job cleanup.
2025-01-07T17:55:44.6212050Z Post job cleanup.
2025-01-07T17:55:44.9946900Z Will use pre-installed micromamba at /Users/runner/micromamba-bin/micromamba
2025-01-07T17:55:44.9950780Z Removing micromamba run shell ...
2025-01-07T17:55:44.9953210Z ##[group]Deinitialize micromamba for bash
2025-01-07T17:55:44.9966700Z [command]/Users/runner/micromamba-bin/micromamba shell deinit -s bash -r /Users/runner/micromamba --log-level warning --rc-file /Users/runner/work/_temp/setup-micromamba/.condarc
2025-01-07T17:55:45.0903130Z Resetting RC file "/Users/runner/.bash_profile"
2025-01-07T17:55:45.0903570Z Deleting config for root prefix 
2025-01-07T17:55:45.0903820Z Clearing mamba executable environment variable
2025-01-07T17:55:45.0924120Z Removing the following in your "/Users/runner/.bash_profile" file
2025-01-07T17:55:45.0924500Z # >>> mamba initialize >>>
2025-01-07T17:55:45.0924670Z ...
2025-01-07T17:55:45.0924820Z # <<< mamba initialize <<<
2025-01-07T17:55:45.0968720Z Removing environment tardis from auto-activate bash ...
2025-01-07T17:55:45.1068590Z Post job cleanup.
2025-01-07T17:55:45.1120120Z Post job cleanup.
2025-01-07T17:55:45.2482970Z [command]/opt/homebrew/bin/git version
2025-01-07T17:55:45.2707310Z git version 2.47.1
2025-01-07T17:55:45.2737190Z Copying '/Users/runner/.gitconfig' to '/Users/runner/work/_temp/14f10f19-033a-4f68-9e55-37367dff680e/.gitconfig'
2025-01-07T17:55:45.2744060Z Temporarily overriding HOME='/Users/runner/work/_temp/14f10f19-033a-4f68-9e55-37367dff680e' before making global git config changes
2025-01-07T17:55:45.2744770Z Adding repository directory to the temporary git global config as a safe directory
2025-01-07T17:55:45.2748200Z [command]/opt/homebrew/bin/git config --global --add safe.directory /Users/runner/work/tardis/tardis/tardis-regression-data
2025-01-07T17:55:45.2839160Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-07T17:55:45.2903110Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-07T17:55:45.4200420Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-07T17:55:45.4245660Z http.https://github.com/.extraheader
2025-01-07T17:55:45.4257060Z [command]/opt/homebrew/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-01-07T17:55:45.4319180Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-07T17:55:45.5066960Z Post job cleanup.
2025-01-07T17:55:45.6907570Z [command]/opt/homebrew/bin/git version
2025-01-07T17:55:45.6967610Z git version 2.47.1
2025-01-07T17:55:45.7021260Z Copying '/Users/runner/.gitconfig' to '/Users/runner/work/_temp/b5f81c99-5ded-45b3-9374-026c9ac8c3c0/.gitconfig'
2025-01-07T17:55:45.7033220Z Temporarily overriding HOME='/Users/runner/work/_temp/b5f81c99-5ded-45b3-9374-026c9ac8c3c0' before making global git config changes
2025-01-07T17:55:45.7035660Z Adding repository directory to the temporary git global config as a safe directory
2025-01-07T17:55:45.7038100Z [command]/opt/homebrew/bin/git config --global --add safe.directory /Users/runner/work/tardis/tardis
2025-01-07T17:55:45.7164680Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-07T17:55:45.7225200Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-07T17:55:45.7891190Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-07T17:55:45.7933690Z http.https://github.com/.extraheader
2025-01-07T17:55:45.7942520Z [command]/opt/homebrew/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-01-07T17:55:45.7992440Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-07T17:55:45.8657240Z Cleaning up orphan processes
