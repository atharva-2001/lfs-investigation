2025-01-07T17:42:13.1732139Z Requested labels: ubuntu-latest
2025-01-07T17:42:13.1732452Z Job defined at: tardis-sn/tardis/.github/workflows/tests.yml@refs/pull/2928/merge
2025-01-07T17:42:13.1732566Z Waiting for a runner to pick up this job...
2025-01-07T17:42:13.3683007Z Job is waiting for a hosted runner to come online.
2025-01-07T17:42:18.8092905Z Job is about to start running on the hosted runner: GitHub Actions 23 (hosted)
2025-01-07T17:42:20.8785260Z Current runner version: '2.321.0'
2025-01-07T17:42:20.8815964Z ##[group]Operating System
2025-01-07T17:42:20.8816744Z Ubuntu
2025-01-07T17:42:20.8817235Z 24.04.1
2025-01-07T17:42:20.8817814Z LTS
2025-01-07T17:42:20.8818307Z ##[endgroup]
2025-01-07T17:42:20.8818841Z ##[group]Runner Image
2025-01-07T17:42:20.8819435Z Image: ubuntu-24.04
2025-01-07T17:42:20.8819956Z Version: 20250105.1.0
2025-01-07T17:42:20.8820981Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250105.1/images/ubuntu/Ubuntu2404-Readme.md
2025-01-07T17:42:20.8822771Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250105.1
2025-01-07T17:42:20.8823671Z ##[endgroup]
2025-01-07T17:42:20.8824189Z ##[group]Runner Image Provisioner
2025-01-07T17:42:20.8824858Z 2.0.404.1
2025-01-07T17:42:20.8825300Z ##[endgroup]
2025-01-07T17:42:20.8827453Z ##[group]GITHUB_TOKEN Permissions
2025-01-07T17:42:20.8829352Z Actions: read
2025-01-07T17:42:20.8830196Z Attestations: read
2025-01-07T17:42:20.8830804Z Checks: read
2025-01-07T17:42:20.8831274Z Contents: read
2025-01-07T17:42:20.8831842Z Deployments: read
2025-01-07T17:42:20.8832549Z Discussions: read
2025-01-07T17:42:20.8833048Z Issues: read
2025-01-07T17:42:20.8833598Z Metadata: read
2025-01-07T17:42:20.8834077Z Packages: read
2025-01-07T17:42:20.8834551Z Pages: read
2025-01-07T17:42:20.8835089Z PullRequests: read
2025-01-07T17:42:20.8835595Z RepositoryProjects: read
2025-01-07T17:42:20.8836130Z SecurityEvents: read
2025-01-07T17:42:20.8836723Z Statuses: read
2025-01-07T17:42:20.8837193Z ##[endgroup]
2025-01-07T17:42:20.8839909Z Secret source: None
2025-01-07T17:42:20.8840712Z Prepare workflow directory
2025-01-07T17:42:20.9463420Z Prepare all required actions
2025-01-07T17:42:20.9499722Z Getting action download info
2025-01-07T17:42:21.1522588Z Download action repository 'actions/checkout@v4' (SHA:11bd71901bbe5b1630ceea73d27597364c9af683)
2025-01-07T17:42:21.2475141Z Download action repository 'actions/upload-artifact@v4' (SHA:6f51ac03b9356f520e9adb1b1b7802705f340c2b)
2025-01-07T17:42:21.4005023Z Complete job name: not continuum ubuntu-latest 
2025-01-07T17:42:21.4642838Z ##[group]Run actions/checkout@v4
2025-01-07T17:42:21.4643687Z with:
2025-01-07T17:42:21.4644095Z   repository: tardis-sn/tardis
2025-01-07T17:42:21.4644762Z   token: ***
2025-01-07T17:42:21.4645150Z   ssh-strict: true
2025-01-07T17:42:21.4645540Z   ssh-user: git
2025-01-07T17:42:21.4645930Z   persist-credentials: true
2025-01-07T17:42:21.4646364Z   clean: true
2025-01-07T17:42:21.4646756Z   sparse-checkout-cone-mode: true
2025-01-07T17:42:21.4647232Z   fetch-depth: 1
2025-01-07T17:42:21.4647620Z   fetch-tags: false
2025-01-07T17:42:21.4648018Z   show-progress: true
2025-01-07T17:42:21.4648437Z   lfs: false
2025-01-07T17:42:21.4648791Z   submodules: false
2025-01-07T17:42:21.4649197Z   set-safe-directory: true
2025-01-07T17:42:21.4649821Z env:
2025-01-07T17:42:21.4650179Z   CACHE_NUMBER: 0
2025-01-07T17:42:21.4651312Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-07T17:42:21.4652722Z   CODECOV_TOKEN: 
2025-01-07T17:42:21.4653578Z ##[endgroup]
2025-01-07T17:42:21.6899147Z Syncing repository: tardis-sn/tardis
2025-01-07T17:42:21.6900819Z ##[group]Getting Git version info
2025-01-07T17:42:21.6901481Z Working directory is '/home/runner/work/tardis/tardis'
2025-01-07T17:42:21.6902703Z [command]/usr/bin/git version
2025-01-07T17:42:21.6952821Z git version 2.47.1
2025-01-07T17:42:21.6979669Z ##[endgroup]
2025-01-07T17:42:21.6993141Z Temporarily overriding HOME='/home/runner/work/_temp/8f278fa2-89b8-4116-8282-e7fad6277370' before making global git config changes
2025-01-07T17:42:21.6994493Z Adding repository directory to the temporary git global config as a safe directory
2025-01-07T17:42:21.6997864Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis
2025-01-07T17:42:21.7031399Z Deleting the contents of '/home/runner/work/tardis/tardis'
2025-01-07T17:42:21.7035583Z ##[group]Initializing the repository
2025-01-07T17:42:21.7039241Z [command]/usr/bin/git init /home/runner/work/tardis/tardis
2025-01-07T17:42:21.7141540Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-01-07T17:42:21.7142789Z hint: is subject to change. To configure the initial branch name to use in all
2025-01-07T17:42:21.7143662Z hint: of your new repositories, which will suppress this warning, call:
2025-01-07T17:42:21.7144312Z hint:
2025-01-07T17:42:21.7144773Z hint: 	git config --global init.defaultBranch <name>
2025-01-07T17:42:21.7145327Z hint:
2025-01-07T17:42:21.7145866Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-01-07T17:42:21.7146752Z hint: 'development'. The just-created branch can be renamed via this command:
2025-01-07T17:42:21.7147436Z hint:
2025-01-07T17:42:21.7147809Z hint: 	git branch -m <name>
2025-01-07T17:42:21.7155790Z Initialized empty Git repository in /home/runner/work/tardis/tardis/.git/
2025-01-07T17:42:21.7166337Z [command]/usr/bin/git remote add origin https://github.com/tardis-sn/tardis
2025-01-07T17:42:21.7198746Z ##[endgroup]
2025-01-07T17:42:21.7199455Z ##[group]Disabling automatic garbage collection
2025-01-07T17:42:21.7202979Z [command]/usr/bin/git config --local gc.auto 0
2025-01-07T17:42:21.7232491Z ##[endgroup]
2025-01-07T17:42:21.7233160Z ##[group]Setting up auth
2025-01-07T17:42:21.7239381Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-07T17:42:21.7270099Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-07T17:42:21.7649931Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-07T17:42:21.7680908Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-07T17:42:21.7911574Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-01-07T17:42:21.7950196Z ##[endgroup]
2025-01-07T17:42:21.7950930Z ##[group]Fetching the repository
2025-01-07T17:42:21.7958667Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +df2ea10beb4a250a324ae68f8e7052fda1105ff6:refs/remotes/pull/2928/merge
2025-01-07T17:42:23.3334104Z From https://github.com/tardis-sn/tardis
2025-01-07T17:42:23.3336014Z  * [new ref]         df2ea10beb4a250a324ae68f8e7052fda1105ff6 -> pull/2928/merge
2025-01-07T17:42:23.3365360Z ##[endgroup]
2025-01-07T17:42:23.3366715Z ##[group]Determining the checkout info
2025-01-07T17:42:23.3368197Z ##[endgroup]
2025-01-07T17:42:23.3373197Z [command]/usr/bin/git sparse-checkout disable
2025-01-07T17:42:23.3486985Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-01-07T17:42:23.3522771Z ##[group]Checking out the ref
2025-01-07T17:42:23.3524412Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/2928/merge
2025-01-07T17:42:23.5498194Z Note: switching to 'refs/remotes/pull/2928/merge'.
2025-01-07T17:42:23.5499028Z 
2025-01-07T17:42:23.5499532Z You are in 'detached HEAD' state. You can look around, make experimental
2025-01-07T17:42:23.5500948Z changes and commit them, and you can discard any commits you make in this
2025-01-07T17:42:23.5502410Z state without impacting any branches by switching back to a branch.
2025-01-07T17:42:23.5503169Z 
2025-01-07T17:42:23.5503663Z If you want to create a new branch to retain commits you create, you may
2025-01-07T17:42:23.5504778Z do so (now or later) by using -c with the switch command. Example:
2025-01-07T17:42:23.5505444Z 
2025-01-07T17:42:23.5505728Z   git switch -c <new-branch-name>
2025-01-07T17:42:23.5506240Z 
2025-01-07T17:42:23.5506520Z Or undo this operation with:
2025-01-07T17:42:23.5506988Z 
2025-01-07T17:42:23.5507555Z   git switch -
2025-01-07T17:42:23.5507912Z 
2025-01-07T17:42:23.5604088Z Turn off this advice by setting config variable advice.detachedHead to false
2025-01-07T17:42:23.5605898Z 
2025-01-07T17:42:23.5607893Z HEAD is now at df2ea10 Merge 24fb361aee078861ca18f6b74265dcf689c88b0f into 7e37d5fe0adb8b767cd033924165b5060f22f170
2025-01-07T17:42:23.5613559Z ##[endgroup]
2025-01-07T17:42:23.5616420Z [command]/usr/bin/git log -1 --format=%H
2025-01-07T17:42:23.5618011Z df2ea10beb4a250a324ae68f8e7052fda1105ff6
2025-01-07T17:42:23.5964152Z Prepare all required actions
2025-01-07T17:42:23.5965428Z Getting action download info
2025-01-07T17:42:23.7533541Z Download action repository 'actions/cache@v4' (SHA:1bd1e32a3bdc45362d1e726936510720a7c30a57)
2025-01-07T17:42:23.8895903Z ##[group]Run ./.github/actions/setup_lfs
2025-01-07T17:42:23.8896393Z with:
2025-01-07T17:42:23.8896834Z   regression-data-repo: tardis-sn/tardis-regression-data
2025-01-07T17:42:23.8897319Z env:
2025-01-07T17:42:23.8897695Z   CACHE_NUMBER: 0
2025-01-07T17:42:23.8898520Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-07T17:42:23.8899366Z   CODECOV_TOKEN: 
2025-01-07T17:42:23.8899703Z ##[endgroup]
2025-01-07T17:42:23.9031868Z ##[group]Run actions/checkout@v4
2025-01-07T17:42:23.9032617Z with:
2025-01-07T17:42:23.9032999Z   repository: tardis-sn/tardis-regression-data
2025-01-07T17:42:23.9033459Z   path: tardis-regression-data
2025-01-07T17:42:23.9034079Z   token: ***
2025-01-07T17:42:23.9034428Z   ssh-strict: true
2025-01-07T17:42:23.9034773Z   ssh-user: git
2025-01-07T17:42:23.9035129Z   persist-credentials: true
2025-01-07T17:42:23.9035495Z   clean: true
2025-01-07T17:42:23.9035846Z   sparse-checkout-cone-mode: true
2025-01-07T17:42:23.9036246Z   fetch-depth: 1
2025-01-07T17:42:23.9036577Z   fetch-tags: false
2025-01-07T17:42:23.9036921Z   show-progress: true
2025-01-07T17:42:23.9037267Z   lfs: false
2025-01-07T17:42:23.9037597Z   submodules: false
2025-01-07T17:42:23.9037939Z   set-safe-directory: true
2025-01-07T17:42:23.9038301Z env:
2025-01-07T17:42:23.9038603Z   CACHE_NUMBER: 0
2025-01-07T17:42:23.9039407Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-07T17:42:23.9040258Z   CODECOV_TOKEN: 
2025-01-07T17:42:23.9040589Z ##[endgroup]
2025-01-07T17:42:23.9948394Z Syncing repository: tardis-sn/tardis-regression-data
2025-01-07T17:42:23.9954829Z ##[group]Getting Git version info
2025-01-07T17:42:23.9955745Z Working directory is '/home/runner/work/tardis/tardis/tardis-regression-data'
2025-01-07T17:42:23.9995803Z [command]/usr/bin/git version
2025-01-07T17:42:24.0037326Z git version 2.47.1
2025-01-07T17:42:24.0061796Z ##[endgroup]
2025-01-07T17:42:24.0073915Z Temporarily overriding HOME='/home/runner/work/_temp/a7f9b726-b0cc-4abd-9d32-f269d4cc25d9' before making global git config changes
2025-01-07T17:42:24.0074983Z Adding repository directory to the temporary git global config as a safe directory
2025-01-07T17:42:24.0078800Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis/tardis-regression-data
2025-01-07T17:42:24.0108107Z ##[group]Initializing the repository
2025-01-07T17:42:24.0113450Z [command]/usr/bin/git init /home/runner/work/tardis/tardis/tardis-regression-data
2025-01-07T17:42:24.0156759Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-01-07T17:42:24.0158034Z hint: is subject to change. To configure the initial branch name to use in all
2025-01-07T17:42:24.0159209Z hint: of your new repositories, which will suppress this warning, call:
2025-01-07T17:42:24.0159765Z hint:
2025-01-07T17:42:24.0160198Z hint: 	git config --global init.defaultBranch <name>
2025-01-07T17:42:24.0160670Z hint:
2025-01-07T17:42:24.0161146Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-01-07T17:42:24.0161832Z hint: 'development'. The just-created branch can be renamed via this command:
2025-01-07T17:42:24.0162813Z hint:
2025-01-07T17:42:24.0163179Z hint: 	git branch -m <name>
2025-01-07T17:42:24.0163866Z Initialized empty Git repository in /home/runner/work/tardis/tardis/tardis-regression-data/.git/
2025-01-07T17:42:24.0168182Z [command]/usr/bin/git remote add origin https://github.com/tardis-sn/tardis-regression-data
2025-01-07T17:42:24.0198889Z ##[endgroup]
2025-01-07T17:42:24.0199538Z ##[group]Disabling automatic garbage collection
2025-01-07T17:42:24.0203518Z [command]/usr/bin/git config --local gc.auto 0
2025-01-07T17:42:24.0230409Z ##[endgroup]
2025-01-07T17:42:24.0231026Z ##[group]Setting up auth
2025-01-07T17:42:24.0236312Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-07T17:42:24.0267895Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-07T17:42:24.0494629Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-07T17:42:24.0525863Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-07T17:42:24.0770783Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-01-07T17:42:24.0812198Z ##[endgroup]
2025-01-07T17:42:24.0813388Z ##[group]Determining the default branch
2025-01-07T17:42:24.0816700Z Retrieving the default branch name
2025-01-07T17:42:24.3996058Z Default branch 'main'
2025-01-07T17:42:24.3999112Z ##[endgroup]
2025-01-07T17:42:24.4000203Z ##[group]Fetching the repository
2025-01-07T17:42:24.4005521Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +refs/heads/main:refs/remotes/origin/main
2025-01-07T17:42:25.1730897Z From https://github.com/tardis-sn/tardis-regression-data
2025-01-07T17:42:25.1731492Z  * [new branch]      main       -> origin/main
2025-01-07T17:42:25.1756042Z ##[endgroup]
2025-01-07T17:42:25.1756706Z ##[group]Determining the checkout info
2025-01-07T17:42:25.1759587Z ##[endgroup]
2025-01-07T17:42:25.1764164Z [command]/usr/bin/git sparse-checkout disable
2025-01-07T17:42:25.1798532Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-01-07T17:42:25.1828351Z ##[group]Checking out the ref
2025-01-07T17:42:25.1828960Z [command]/usr/bin/git checkout --progress --force -B main refs/remotes/origin/main
2025-01-07T17:42:25.3047646Z Switched to a new branch 'main'
2025-01-07T17:42:25.3049789Z branch 'main' set up to track 'origin/main'.
2025-01-07T17:42:25.3304505Z ##[endgroup]
2025-01-07T17:42:25.3341303Z [command]/usr/bin/git log -1 --format=%H
2025-01-07T17:42:25.3363707Z 666ab8501c2b2aea30d05b8822e7ddbfca078d23
2025-01-07T17:42:25.3496286Z ##[group]Run git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
2025-01-07T17:42:25.3496824Z [36;1mgit lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id[0m
2025-01-07T17:42:25.3529126Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-07T17:42:25.3529458Z env:
2025-01-07T17:42:25.3529628Z   CACHE_NUMBER: 0
2025-01-07T17:42:25.3530262Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-07T17:42:25.3530931Z   CODECOV_TOKEN: 
2025-01-07T17:42:25.3531113Z ##[endgroup]
2025-01-07T17:42:25.4969832Z ##[group]Run actions/cache/restore@v4
2025-01-07T17:42:25.4970088Z with:
2025-01-07T17:42:25.4970273Z   path: tardis-regression-data/.git/lfs
2025-01-07T17:42:25.4970685Z   key: Linux-lfs-21f9fa4b6817cc69b9fae3598144724da7828e276a73bd17f47a2a49d9af090a-v1
2025-01-07T17:42:25.4971097Z   enableCrossOsArchive: false
2025-01-07T17:42:25.4971324Z   fail-on-cache-miss: false
2025-01-07T17:42:25.4971823Z   lookup-only: false
2025-01-07T17:42:25.4972215Z env:
2025-01-07T17:42:25.4972382Z   CACHE_NUMBER: 0
2025-01-07T17:42:25.4972995Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-07T17:42:25.4973631Z   CODECOV_TOKEN: 
2025-01-07T17:42:25.4973805Z ##[endgroup]
2025-01-07T17:42:27.1736975Z Received 12582912 of 1708418946 (0.7%), 12.0 MBs/sec
2025-01-07T17:42:28.1738610Z Received 180355072 of 1708418946 (10.6%), 86.0 MBs/sec
2025-01-07T17:42:29.1737187Z Received 373293056 of 1708418946 (21.9%), 118.6 MBs/sec
2025-01-07T17:42:30.1742635Z Received 553648128 of 1708418946 (32.4%), 131.9 MBs/sec
2025-01-07T17:42:31.1759679Z Received 700448768 of 1708418946 (41.0%), 133.5 MBs/sec
2025-01-07T17:42:32.1761429Z Received 872415232 of 1708418946 (51.1%), 138.6 MBs/sec
2025-01-07T17:42:33.1793314Z Received 1027604480 of 1708418946 (60.1%), 139.9 MBs/sec
2025-01-07T17:42:34.1769656Z Received 1203765248 of 1708418946 (70.5%), 143.4 MBs/sec
2025-01-07T17:42:35.1770823Z Received 1371537408 of 1708418946 (80.3%), 145.3 MBs/sec
2025-01-07T17:42:36.1769937Z Received 1535115264 of 1708418946 (89.9%), 146.3 MBs/sec
2025-01-07T17:42:37.1814797Z Received 1686110208 of 1708418946 (98.7%), 146.1 MBs/sec
2025-01-07T17:42:37.2657837Z Cache Size: ~1629 MB (1708418946 B)
2025-01-07T17:42:37.2696704Z [command]/usr/bin/tar -xf /home/runner/work/_temp/932c959e-95d7-431f-ab12-9d4b1db98228/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-01-07T17:42:38.1828038Z Received 1708418946 of 1708418946 (100.0%), 135.7 MBs/sec
2025-01-07T17:42:43.2266974Z Cache restored successfully
2025-01-07T17:42:43.5332632Z Cache restored from key: Linux-lfs-21f9fa4b6817cc69b9fae3598144724da7828e276a73bd17f47a2a49d9af090a-v1
2025-01-07T17:42:43.5495940Z ##[group]Run git lfs checkout
2025-01-07T17:42:43.5496208Z [36;1mgit lfs checkout[0m
2025-01-07T17:42:43.5522760Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-07T17:42:43.5523096Z env:
2025-01-07T17:42:43.5523265Z   CACHE_NUMBER: 0
2025-01-07T17:42:43.5523893Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-07T17:42:43.5524538Z   CODECOV_TOKEN: 
2025-01-07T17:42:43.5524717Z ##[endgroup]
2025-01-07T17:42:57.1786610Z Checking out LFS objects: 100% (204/204), 3.5 GB | 291 MB/s, done.
2025-01-07T17:42:59.1006494Z Prepare all required actions
2025-01-07T17:42:59.1006825Z Getting action download info
2025-01-07T17:42:59.2466742Z Download action repository 'mamba-org/setup-micromamba@v1' (SHA:4b9113af4fba0e9e1124b252dd6497a419e7396d)
2025-01-07T17:43:00.0370934Z ##[group]Run ./.github/actions/setup_env
2025-01-07T17:43:00.0371209Z with:
2025-01-07T17:43:00.0371391Z   os-label: linux-64
2025-01-07T17:43:00.0371580Z env:
2025-01-07T17:43:00.0371733Z   CACHE_NUMBER: 0
2025-01-07T17:43:00.0372504Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-07T17:43:00.0373169Z   CODECOV_TOKEN: 
2025-01-07T17:43:00.0373350Z ##[endgroup]
2025-01-07T17:43:00.0393270Z ##[group]Run file_hash=$(cat conda-linux-64.lock | shasum -a 256 | cut -d' ' -f1)
2025-01-07T17:43:00.0393777Z [36;1mfile_hash=$(cat conda-linux-64.lock | shasum -a 256 | cut -d' ' -f1)[0m
2025-01-07T17:43:00.0394230Z [36;1mecho "file_hash=$file_hash" >> "${GITHUB_OUTPUT}"[0m
2025-01-07T17:43:00.0419736Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-07T17:43:00.0420053Z env:
2025-01-07T17:43:00.0420217Z   CACHE_NUMBER: 0
2025-01-07T17:43:00.0420841Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-07T17:43:00.0421483Z   CODECOV_TOKEN: 
2025-01-07T17:43:00.0421673Z ##[endgroup]
2025-01-07T17:43:00.0734785Z ##[group]Run mamba-org/setup-micromamba@v1
2025-01-07T17:43:00.0735236Z with:
2025-01-07T17:43:00.0735429Z   environment-file: conda-linux-64.lock
2025-01-07T17:43:00.0735854Z   cache-environment-key: d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee
2025-01-07T17:43:00.0736431Z   cache-downloads-key: d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee
2025-01-07T17:43:00.0736838Z   environment-name: tardis
2025-01-07T17:43:00.0737062Z   cache-environment: true
2025-01-07T17:43:00.0737280Z   cache-downloads: true
2025-01-07T17:43:00.0737473Z env:
2025-01-07T17:43:00.0737631Z   CACHE_NUMBER: 0
2025-01-07T17:43:00.0738238Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-07T17:43:00.0738876Z   CODECOV_TOKEN: 
2025-01-07T17:43:00.0739051Z ##[endgroup]
2025-01-07T17:43:00.2053995Z Will download micromamba to /home/runner/micromamba-bin/micromamba
2025-01-07T17:43:00.2063708Z ##[group]Install micromamba
2025-01-07T17:43:00.8839758Z micromamba installed to /home/runner/micromamba-bin/micromamba
2025-01-07T17:43:00.8840362Z ##[endgroup]
2025-01-07T17:43:00.8841687Z Adding conda-forge to condarc channels ...
2025-01-07T17:43:00.8851486Z ##[group]Initialize micromamba for bash.
2025-01-07T17:43:00.8867861Z [command]/home/runner/micromamba-bin/micromamba shell init -s bash -r /home/runner/micromamba --log-level warning --rc-file /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-07T17:43:00.8976592Z Modifying RC file "/home/runner/.bashrc"
2025-01-07T17:43:00.8977488Z Generating config for root prefix [1m"/home/runner/micromamba"[0m
2025-01-07T17:43:00.8978062Z Setting mamba executable to: [1m"/home/runner/micromamba-bin/micromamba"[0m
2025-01-07T17:43:00.8978611Z Adding (or replacing) the following in your "/home/runner/.bashrc" file
2025-01-07T17:43:00.8978971Z 
2025-01-07T17:43:00.8979063Z # >>> mamba initialize >>>
2025-01-07T17:43:00.8979343Z # !! Contents within this block are managed by 'mamba init' !!
2025-01-07T17:43:00.8979736Z export MAMBA_EXE='/home/runner/micromamba-bin/micromamba';
2025-01-07T17:43:00.8980076Z export MAMBA_ROOT_PREFIX='/home/runner/micromamba';
2025-01-07T17:43:00.8980530Z __mamba_setup="$("$MAMBA_EXE" shell hook --shell bash --root-prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
2025-01-07T17:43:00.8980961Z if [ $? -eq 0 ]; then
2025-01-07T17:43:00.8981159Z     eval "$__mamba_setup"
2025-01-07T17:43:00.8981348Z else
2025-01-07T17:43:00.8981891Z     alias micromamba="$MAMBA_EXE"  # Fallback on help from mamba activate
2025-01-07T17:43:00.8982418Z fi
2025-01-07T17:43:00.8982580Z unset __mamba_setup
2025-01-07T17:43:00.8982773Z # <<< mamba initialize <<<
2025-01-07T17:43:00.8982908Z 
2025-01-07T17:43:00.8995338Z Moving mamba initialize block to .bash_profile
2025-01-07T17:43:00.9010527Z ##[endgroup]
2025-01-07T17:43:00.9011793Z ##[group]Restoring downloads from `/home/runner/micromamba/pkgs` ...
2025-01-07T17:43:02.4066928Z Received 12582912 of 356800233 (3.5%), 12.0 MBs/sec
2025-01-07T17:43:03.4078107Z Received 180355072 of 356800233 (50.5%), 85.9 MBs/sec
2025-01-07T17:43:04.4087760Z Received 352605929 of 356800233 (98.8%), 112.0 MBs/sec
2025-01-07T17:43:04.4901892Z Cache Size: ~340 MB (356800233 B)
2025-01-07T17:43:04.4985503Z [command]/usr/bin/tar -xf /home/runner/work/_temp/3bc82784-fd8c-4696-bd37-b1f57347c091/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-01-07T17:43:04.9593586Z Cache restored successfully
2025-01-07T17:43:05.0330927Z Restored cache with key `d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee-linux-64`
2025-01-07T17:43:05.0332368Z ##[endgroup]
2025-01-07T17:43:05.0343234Z ##[group]Restoring environment `tardis` from `/home/runner/micromamba/envs/tardis` ...
2025-01-07T17:43:05.4092904Z Received 356800233 of 356800233 (100.0%), 85.0 MBs/sec
2025-01-07T17:43:06.3545488Z Received 8388608 of 444592193 (1.9%), 8.0 MBs/sec
2025-01-07T17:43:07.3547891Z Received 188743680 of 444592193 (42.5%), 90.0 MBs/sec
2025-01-07T17:43:08.3546705Z Received 381681664 of 444592193 (85.8%), 121.3 MBs/sec
2025-01-07T17:43:08.7101740Z Cache Size: ~424 MB (444592193 B)
2025-01-07T17:43:08.7165923Z [command]/usr/bin/tar -xf /home/runner/work/_temp/5acba815-47d7-48d9-b67f-091ed93fa101/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-01-07T17:43:09.3558582Z Received 444592193 of 444592193 (100.0%), 106.0 MBs/sec
2025-01-07T17:43:13.6939949Z Cache restored successfully
2025-01-07T17:43:13.7854748Z Restored cache with key `d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee-linux-64-tardis-args-4f53cda-root-dcc80ee-bin-[object Promise]-file-d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee`
2025-01-07T17:43:13.7856405Z ##[endgroup]
2025-01-07T17:43:13.7856647Z Adding environment tardis to auto-activate bash ...
2025-01-07T17:43:13.7866473Z Generating micromamba run shell.
2025-01-07T17:43:13.7876727Z ##[endgroup]
2025-01-07T17:43:13.7882350Z Set environment variables.
2025-01-07T17:43:13.7886039Z ##[group]micromamba info
2025-01-07T17:43:13.7889526Z [command]/home/runner/micromamba-bin/micromamba info -r /home/runner/micromamba -n tardis
2025-01-07T17:43:13.8112323Z 
2025-01-07T17:43:13.8112689Z        libmamba version : 1.5.10
2025-01-07T17:43:13.8113118Z      micromamba version : 1.5.10
2025-01-07T17:43:13.8113712Z            curl version : libcurl/8.10.1 OpenSSL/3.3.2 zlib/1.3.1 zstd/1.5.6 libssh2/1.11.0 nghttp2/1.58.0
2025-01-07T17:43:13.8114279Z      libarchive version : libarchive 3.7.4 zlib/1.2.13 bz2lib/1.0.8 libzstd/1.5.6
2025-01-07T17:43:13.8114711Z        envs directories : /home/runner/micromamba/envs
2025-01-07T17:43:13.8115052Z           package cache : /home/runner/micromamba/pkgs
2025-01-07T17:43:13.8115349Z                           /home/runner/.mamba/pkgs
2025-01-07T17:43:13.8115622Z             environment : tardis
2025-01-07T17:43:13.8115910Z            env location : /home/runner/micromamba/envs/tardis
2025-01-07T17:43:13.8116220Z       user config files : /home/runner/.mambarc
2025-01-07T17:43:13.8116612Z  populated config files : /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-07T17:43:13.8117004Z        virtual packages : __unix=0=0
2025-01-07T17:43:13.8117258Z                           __linux=6.8.0=0
2025-01-07T17:43:13.8117502Z                           __glibc=2.39=0
2025-01-07T17:43:13.8117746Z                           __archspec=1=x86_64_v3
2025-01-07T17:43:13.8118399Z                channels : https://conda.anaconda.org/conda-forge/linux-64
2025-01-07T17:43:13.8118790Z                           https://conda.anaconda.org/conda-forge/noarch
2025-01-07T17:43:13.8119108Z        base environment : /home/runner/micromamba
2025-01-07T17:43:13.8119379Z                platform : linux-64
2025-01-07T17:43:13.8127938Z ##[endgroup]
2025-01-07T17:43:13.8128566Z ##[group]micromamba list
2025-01-07T17:43:13.8129889Z [command]/home/runner/micromamba-bin/micromamba list -r /home/runner/micromamba -n tardis
2025-01-07T17:43:14.1978418Z List of packages in environment: "/home/runner/micromamba/envs/tardis"
2025-01-07T17:43:14.1979185Z 
2025-01-07T17:43:14.1979500Z   Name                           Version              Build                    Channel    
2025-01-07T17:43:14.1980966Z ────────────────────────────────────────────────────────────────────────────────────────────
2025-01-07T17:43:14.1981769Z   _libgcc_mutex                  0.1                  conda_forge              conda-forge
2025-01-07T17:43:14.1982813Z   _openmp_mutex                  4.5                  2_gnu                    conda-forge
2025-01-07T17:43:14.1983633Z   alabaster                      0.7.16               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.1984427Z   anyio                          4.4.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.1985225Z   argon2-cffi                    23.1.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.1986114Z   argon2-cffi-bindings           21.2.0               py312h98912ed_4          conda-forge
2025-01-07T17:43:14.1987160Z   arrow                          1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.1987744Z   astropy                        6.1.1                py312h085067d_0          conda-forge
2025-01-07T17:43:14.1988422Z   astropy-iers-data              0.2024.6.17.0.31.35  pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.1989173Z   astropy-sphinx-theme           1.1                  pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.1989833Z   asttokens                      2.4.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.1990442Z   async-lru                      2.0.4                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.1990999Z   atk-1.0                        2.38.0               h04ea711_2               conda-forge
2025-01-07T17:43:14.1991562Z   attrs                          23.2.0               pyh71513ae_0             conda-forge
2025-01-07T17:43:14.1992361Z   babel                          2.14.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.1993010Z   beautifulsoup4                 4.12.3               pyha770c72_0             conda-forge
2025-01-07T17:43:14.1993594Z   bleach                         6.1.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.1994100Z   blosc                          1.21.5               hc2324a3_1               conda-forge
2025-01-07T17:43:14.1994717Z   brotli                         1.1.0                hd590300_1               conda-forge
2025-01-07T17:43:14.1995461Z   brotli-bin                     1.1.0                hd590300_1               conda-forge
2025-01-07T17:43:14.1996193Z   brotli-python                  1.1.0                py312h30efb56_1          conda-forge
2025-01-07T17:43:14.1997025Z   bzip2                          1.0.8                hd590300_5               conda-forge
2025-01-07T17:43:14.1997686Z   c-ares                         1.28.1               hd590300_0               conda-forge
2025-01-07T17:43:14.1998436Z   c-blosc2                       2.14.4               hb4ffafa_1               conda-forge
2025-01-07T17:43:14.1999273Z   ca-certificates                2024.6.2             hbcca054_0               conda-forge
2025-01-07T17:43:14.2000046Z   cached-property                1.5.2                hd8ed1ab_1               conda-forge
2025-01-07T17:43:14.2001100Z   cached_property                1.5.2                pyha770c72_1             conda-forge
2025-01-07T17:43:14.2001877Z   cairo                          1.18.0               h3faef2a_0               conda-forge
2025-01-07T17:43:14.2002804Z   certifi                        2024.6.2             pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2003534Z   cffi                           1.16.0               py312hf06ca03_0          conda-forge
2025-01-07T17:43:14.2004235Z   charset-normalizer             3.3.2                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2005034Z   click                          8.1.7                unix_pyh707e725_0        conda-forge
2025-01-07T17:43:14.2005769Z   codespell                      2.3.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2006444Z   colorama                       0.4.6                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2007197Z   comm                           0.2.2                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2078728Z   commonmark                     0.9.1                py_0                     conda-forge
2025-01-07T17:43:14.2079356Z   contourpy                      1.2.1                py312h8572e83_0          conda-forge
2025-01-07T17:43:14.2079949Z   coverage                       7.5.3                py312h9a8786e_0          conda-forge
2025-01-07T17:43:14.2080596Z   cycler                         0.12.1               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2081170Z   dataclasses                    0.8                  pyhc8e2a94_3             conda-forge
2025-01-07T17:43:14.2082126Z   debugpy                        1.8.1                py312h30efb56_0          conda-forge
2025-01-07T17:43:14.2082506Z   decorator                      5.1.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2082899Z   defusedxml                     0.7.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2083261Z   docutils                       0.20.1               py312h7900ff3_3          conda-forge
2025-01-07T17:43:14.2083611Z   dot2tex                        2.11.3               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2083967Z   entrypoints                    0.4                  pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2084344Z   exceptiongroup                 1.2.0                pyhd8ed1ab_2             conda-forge
2025-01-07T17:43:14.2084720Z   executing                      2.0.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2085057Z   expat                          2.6.2                h59595ed_0               conda-forge
2025-01-07T17:43:14.2085456Z   font-ttf-dejavu-sans-mono      2.37                 hab24e00_0               conda-forge
2025-01-07T17:43:14.2085909Z   font-ttf-inconsolata           3.000                h77eed37_0               conda-forge
2025-01-07T17:43:14.2086343Z   font-ttf-source-code-pro       2.038                h77eed37_0               conda-forge
2025-01-07T17:43:14.2086764Z   font-ttf-ubuntu                0.83                 h77eed37_2               conda-forge
2025-01-07T17:43:14.2087152Z   fontconfig                     2.14.2               h14ed4e7_0               conda-forge
2025-01-07T17:43:14.2087539Z   fonts-conda-ecosystem          1                    0                        conda-forge
2025-01-07T17:43:14.2087932Z   fonts-conda-forge              1                    0                        conda-forge
2025-01-07T17:43:14.2088300Z   fonttools                      4.53.0               py312h9a8786e_0          conda-forge
2025-01-07T17:43:14.2088640Z   fqdn                           1.5.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2088967Z   freetype                       2.12.1               h267a509_2               conda-forge
2025-01-07T17:43:14.2089299Z   fribidi                        1.0.10               h36c2ea0_0               conda-forge
2025-01-07T17:43:14.2089641Z   future                         1.0.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2090145Z   gdk-pixbuf                     2.42.12              hb9ae30d_0               conda-forge
2025-01-07T17:43:14.2090499Z   giflib                         5.2.2                hd590300_0               conda-forge
2025-01-07T17:43:14.2090824Z   git-lfs                        3.5.1                ha770c72_0               conda-forge
2025-01-07T17:43:14.2091146Z   gmp                            6.3.0                h59595ed_1               conda-forge
2025-01-07T17:43:14.2091460Z   gmpy2                          2.1.5                py312h1d5cde6_1          conda-forge
2025-01-07T17:43:14.2091808Z   graphite2                      1.3.13               h59595ed_1003            conda-forge
2025-01-07T17:43:14.2092341Z   graphviz                       11.0.0               hc68bbd7_0               conda-forge
2025-01-07T17:43:14.2092675Z   gtk2                           2.24.33              h280cfa0_4               conda-forge
2025-01-07T17:43:14.2092993Z   gts                            0.7.6                h977cf35_4               conda-forge
2025-01-07T17:43:14.2093298Z   h11                            0.14.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2093605Z   h2                             4.1.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2093918Z   h5py                           3.11.0               nompi_py312hb7ab980_102  conda-forge
2025-01-07T17:43:14.2094254Z   harfbuzz                       8.5.0                hfac3d4d_0               conda-forge
2025-01-07T17:43:14.2094709Z   hdf5                           1.14.3               nompi_hdf9ad27_105       conda-forge
2025-01-07T17:43:14.2095028Z   hpack                          4.0.0                pyh9f0ad1d_0             conda-forge
2025-01-07T17:43:14.2095360Z   httpcore                       1.0.5                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2095694Z   httpx                          0.27.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2096055Z   hyperframe                     6.0.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2096383Z   icu                            73.2                 h59595ed_0               conda-forge
2025-01-07T17:43:14.2096693Z   idna                           3.7                  pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2097029Z   imagesize                      1.4.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2097409Z   importlib-metadata             7.1.0                pyha770c72_0             conda-forge
2025-01-07T17:43:14.2097818Z   importlib_metadata             7.1.0                hd8ed1ab_0               conda-forge
2025-01-07T17:43:14.2098217Z   importlib_resources            6.4.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2098664Z   iniconfig                      2.0.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2099011Z   ipykernel                      6.29.4               pyh3099207_0             conda-forge
2025-01-07T17:43:14.2099349Z   ipython                        8.25.0               pyh707e725_0             conda-forge
2025-01-07T17:43:14.2099705Z   ipython_genutils               0.2.0                pyhd8ed1ab_1             conda-forge
2025-01-07T17:43:14.2100081Z   ipywidgets                     7.8.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2100438Z   isoduration                    20.11.0              pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2100779Z   jedi                           0.19.1               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2101107Z   jinja2                         3.1.4                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2101445Z   json5                          0.9.25               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2101793Z   jsonpointer                    3.0.0                py312h7900ff3_0          conda-forge
2025-01-07T17:43:14.2102439Z   jsonschema                     4.22.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2102868Z   jsonschema-specifications      2023.12.1            pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2103353Z   jsonschema-with-format-nongpl  4.22.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2103786Z   jupyter-lsp                    2.2.5                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2104154Z   jupyter_client                 8.6.2                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2104526Z   jupyter_core                   5.7.2                py312h7900ff3_0          conda-forge
2025-01-07T17:43:14.2104889Z   jupyter_events                 0.10.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2105264Z   jupyter_server                 2.14.1               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2105686Z   jupyter_server_terminals       0.5.3                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2106092Z   jupyterlab                     4.2.2                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2106475Z   jupyterlab_pygments            0.3.0                pyhd8ed1ab_1             conda-forge
2025-01-07T17:43:14.2106878Z   jupyterlab_server              2.27.2               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2107280Z   jupyterlab_widgets             1.1.7                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2107649Z   keyutils                       1.6.1                h166bdaf_0               conda-forge
2025-01-07T17:43:14.2108118Z   kiwisolver                     1.4.5                py312h8572e83_1          conda-forge
2025-01-07T17:43:14.2108450Z   krb5                           1.21.2               h659d440_0               conda-forge
2025-01-07T17:43:14.2108790Z   latexcodec                     2.0.1                pyh9f0ad1d_0             conda-forge
2025-01-07T17:43:14.2109219Z   lcms2                          2.16                 hb7c19ff_0               conda-forge
2025-01-07T17:43:14.2110019Z   ld_impl_linux-64               2.40                 hf3520f5_7               conda-forge
2025-01-07T17:43:14.2110618Z   lerc                           4.0.0                h27087fc_0               conda-forge
2025-01-07T17:43:14.2111154Z   libaec                         1.1.3                h59595ed_0               conda-forge
2025-01-07T17:43:14.2111499Z   libblas                        3.9.0                22_linux64_openblas      conda-forge
2025-01-07T17:43:14.2111879Z   libbrotlicommon                1.1.0                hd590300_1               conda-forge
2025-01-07T17:43:14.2112417Z   libbrotlidec                   1.1.0                hd590300_1               conda-forge
2025-01-07T17:43:14.2112778Z   libbrotlienc                   1.1.0                hd590300_1               conda-forge
2025-01-07T17:43:14.2113142Z   libcblas                       3.9.0                22_linux64_openblas      conda-forge
2025-01-07T17:43:14.2113492Z   libcurl                        8.8.0                hca28451_0               conda-forge
2025-01-07T17:43:14.2113836Z   libdeflate                     1.20                 hd590300_0               conda-forge
2025-01-07T17:43:14.2114195Z   libedit                        3.1.20191231         he28a2e2_2               conda-forge
2025-01-07T17:43:14.2114535Z   libev                          4.33                 hd590300_2               conda-forge
2025-01-07T17:43:14.2114880Z   libexpat                       2.6.2                h59595ed_0               conda-forge
2025-01-07T17:43:14.2115288Z   libffi                         3.4.2                h7f98852_5               conda-forge
2025-01-07T17:43:14.2115657Z   libgcc-ng                      13.2.0               h77fa898_10              conda-forge
2025-01-07T17:43:14.2115991Z   libgd                          2.3.3                h119a65a_9               conda-forge
2025-01-07T17:43:14.2116483Z   libgfortran-ng                 13.2.0               h69a702a_10              conda-forge
2025-01-07T17:43:14.2116858Z   libgfortran5                   13.2.0               h3d2ce59_10              conda-forge
2025-01-07T17:43:14.2117219Z   libglib                        2.80.2               h8a4344b_1               conda-forge
2025-01-07T17:43:14.2117555Z   libgomp                        13.2.0               h77fa898_10              conda-forge
2025-01-07T17:43:14.2117900Z   libiconv                       1.17                 hd590300_2               conda-forge
2025-01-07T17:43:14.2118266Z   libjpeg-turbo                  3.0.0                hd590300_1               conda-forge
2025-01-07T17:43:14.2118642Z   liblapack                      3.9.0                22_linux64_openblas      conda-forge
2025-01-07T17:43:14.2119011Z   libllvm14                      14.0.6               hcd5def8_4               conda-forge
2025-01-07T17:43:14.2119380Z   libnghttp2                     1.58.0               h47da74e_1               conda-forge
2025-01-07T17:43:14.2119739Z   libnsl                         2.0.1                hd590300_0               conda-forge
2025-01-07T17:43:14.2120108Z   libopenblas                    0.3.27               pthreads_h413a1c8_0      conda-forge
2025-01-07T17:43:14.2120471Z   libpng                         1.6.43               h2797004_0               conda-forge
2025-01-07T17:43:14.2120818Z   librsvg                        2.58.1               hadf69e7_0               conda-forge
2025-01-07T17:43:14.2121167Z   libsodium                      1.0.18               h36c2ea0_1               conda-forge
2025-01-07T17:43:14.2121645Z   libsqlite                      3.46.0               hde9e2c9_0               conda-forge
2025-01-07T17:43:14.2122199Z   libssh2                        1.11.0               h0841786_0               conda-forge
2025-01-07T17:43:14.2122564Z   libstdcxx-ng                   13.2.0               hc0a3c3a_10              conda-forge
2025-01-07T17:43:14.2122923Z   libtiff                        4.6.0                h1dd3fc0_3               conda-forge
2025-01-07T17:43:14.2123259Z   libuuid                        2.38.1               h0b41bf4_0               conda-forge
2025-01-07T17:43:14.2123594Z   libwebp                        1.4.0                h2c329e2_0               conda-forge
2025-01-07T17:43:14.2123940Z   libwebp-base                   1.4.0                hd590300_0               conda-forge
2025-01-07T17:43:14.2124285Z   libxcb                         1.15                 h0b41bf4_0               conda-forge
2025-01-07T17:43:14.2124629Z   libxcrypt                      4.4.36               hd590300_1               conda-forge
2025-01-07T17:43:14.2124972Z   libxml2                        2.12.7               hc051c1a_1               conda-forge
2025-01-07T17:43:14.2125312Z   libxslt                        1.1.39               h76b75d6_0               conda-forge
2025-01-07T17:43:14.2125652Z   libzlib                        1.3.1                h4ab18f5_1               conda-forge
2025-01-07T17:43:14.2126004Z   llvmlite                       0.42.0               py312hb06c811_1          conda-forge
2025-01-07T17:43:14.2126338Z   lxml                           5.2.2                py312hb90d8a5_0          conda-forge
2025-01-07T17:43:14.2126657Z   lz4-c                          1.9.4                hcb278e6_0               conda-forge
2025-01-07T17:43:14.2126966Z   lzo                            2.10                 hd590300_1001            conda-forge
2025-01-07T17:43:14.2127304Z   markupsafe                     2.1.5                py312h98912ed_0          conda-forge
2025-01-07T17:43:14.2127684Z   matplotlib-base                3.8.4                py312h20ab3a6_2          conda-forge
2025-01-07T17:43:14.2128084Z   matplotlib-inline              0.1.7                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2128470Z   mistune                        3.0.2                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2128942Z   mpc                            1.3.1                hfe3b2da_0               conda-forge
2025-01-07T17:43:14.2129264Z   mpfr                           4.2.1                h9458935_1               conda-forge
2025-01-07T17:43:14.2129593Z   mpmath                         1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2129937Z   munkres                        1.1.4                pyh9f0ad1d_0             conda-forge
2025-01-07T17:43:14.2130305Z   mypy_extensions                1.0.0                pyha770c72_0             conda-forge
2025-01-07T17:43:14.2130679Z   nbclassic                      1.1.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2131033Z   nbclient                       0.10.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2131391Z   nbconvert                      7.16.4               hd8ed1ab_1               conda-forge
2025-01-07T17:43:14.2131763Z   nbconvert-core                 7.16.4               pyhd8ed1ab_1             conda-forge
2025-01-07T17:43:14.2132371Z   nbconvert-pandoc               7.16.4               hd8ed1ab_1               conda-forge
2025-01-07T17:43:14.2132762Z   nbformat                       5.10.4               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2133119Z   nbsphinx                       0.9.4                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2133461Z   ncurses                        6.5                  h59595ed_0               conda-forge
2025-01-07T17:43:14.2133816Z   nest-asyncio                   1.6.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2134301Z   networkx                       3.3                  pyhd8ed1ab_1             conda-forge
2025-01-07T17:43:14.2134634Z   nomkl                          1.0                  h5ca1d4c_0               conda-forge
2025-01-07T17:43:14.2134970Z   notebook                       7.2.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2135342Z   notebook-shim                  0.2.4                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2135699Z   numba                          0.59.1               py312hacefee8_0          conda-forge
2025-01-07T17:43:14.2136051Z   numexpr                        2.10.0               py312hf412c99_100        conda-forge
2025-01-07T17:43:14.2136387Z   numpy                          1.26.4               py312heda63a1_0          conda-forge
2025-01-07T17:43:14.2136733Z   numpydoc                       1.7.0                pyhd8ed1ab_1             conda-forge
2025-01-07T17:43:14.2137089Z   openjpeg                       2.5.2                h488ebb8_0               conda-forge
2025-01-07T17:43:14.2137428Z   openssl                        3.3.1                h4ab18f5_0               conda-forge
2025-01-07T17:43:14.2137776Z   overrides                      7.7.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2138134Z   packaging                      24.1                 pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2138485Z   pandas                         2.2.2                py312h1d6d2e6_1          conda-forge
2025-01-07T17:43:14.2138822Z   pandoc                         3.2                  ha770c72_0               conda-forge
2025-01-07T17:43:14.2139176Z   pandocfilters                  1.5.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2139540Z   pango                          1.54.0               h84a9a3c_0               conda-forge
2025-01-07T17:43:14.2139873Z   parso                          0.8.4                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2140225Z   pathspec                       0.12.1               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2140559Z   pbr                            6.0.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2140881Z   pcre2                          10.44                h0f59acf_0               conda-forge
2025-01-07T17:43:14.2141346Z   pexpect                        4.9.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2141715Z   pickleshare                    0.7.5                py_1003                  conda-forge
2025-01-07T17:43:14.2142228Z   pillow                         10.3.0               py312hdcec9eb_0          conda-forge
2025-01-07T17:43:14.2142561Z   pip                            24.0                 pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2142877Z   pixman                         0.43.2               h59595ed_0               conda-forge
2025-01-07T17:43:14.2143261Z   pkgutil-resolve-name           1.3.10               pyhd8ed1ab_1             conda-forge
2025-01-07T17:43:14.2143659Z   platformdirs                   4.2.2                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2144009Z   plotly                         5.22.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2144337Z   pluggy                         1.5.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2144712Z   prometheus_client              0.20.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2145107Z   prompt-toolkit                 3.0.47               pyha770c72_0             conda-forge
2025-01-07T17:43:14.2145465Z   psutil                         5.9.8                py312h98912ed_0          conda-forge
2025-01-07T17:43:14.2145829Z   pthread-stubs                  0.4                  h36c2ea0_1001            conda-forge
2025-01-07T17:43:14.2146200Z   ptyprocess                     0.7.0                pyhd3deb0d_0             conda-forge
2025-01-07T17:43:14.2146682Z   pure_eval                      0.2.2                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2147035Z   py-cpuinfo                     9.0.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2147389Z   pybtex                         0.24.0               pyhd8ed1ab_2             conda-forge
2025-01-07T17:43:14.2147765Z   pybtex-docutils                1.0.3                py312h7900ff3_1          conda-forge
2025-01-07T17:43:14.2148141Z   pycparser                      2.22                 pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2148492Z   pyerfa                         2.0.1.4              py312h085067d_1          conda-forge
2025-01-07T17:43:14.2148840Z   pygments                       2.18.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2149199Z   pygraphviz                     1.13                 py312h4a1d8a7_1          conda-forge
2025-01-07T17:43:14.2149558Z   pyparsing                      3.1.2                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2149919Z   pysocks                        1.7.1                pyha2e5f31_6             conda-forge
2025-01-07T17:43:14.2150271Z   pytables                       3.9.2                py312h96d95ec_2          conda-forge
2025-01-07T17:43:14.2150618Z   pytest                         8.2.2                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2150976Z   pytest-cov                     5.0.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2151372Z   pytest-doctestplus             1.2.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2151765Z   pytest-html                    4.1.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2152464Z   pytest-metadata                3.1.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2152841Z   python                         3.12.4               h194c7f8_0_cpython       conda-forge
2025-01-07T17:43:14.2153215Z   python-dateutil                2.9.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2153648Z   python-fastjsonschema          2.20.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2154086Z   python-json-logger             2.0.7                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2154606Z   python-tzdata                  2024.1               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2154985Z   python_abi                     3.12                 4_cp312                  conda-forge
2025-01-07T17:43:14.2155326Z   pytz                           2024.1               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2155662Z   pyyaml                         6.0.1                py312h98912ed_1          conda-forge
2025-01-07T17:43:14.2155995Z   pyzmq                          26.0.3               py312h8fd38d8_0          conda-forge
2025-01-07T17:43:14.2156330Z   qgrid                          1.3.1                pyhd8ed1ab_4             conda-forge
2025-01-07T17:43:14.2156707Z   radioactivedecay               0.5.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2157078Z   readline                       8.2                  h8228510_1               conda-forge
2025-01-07T17:43:14.2157432Z   recommonmark                   0.7.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2157810Z   referencing                    0.35.1               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2158165Z   requests                       2.32.3               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2158546Z   rfc3339-validator              0.1.4                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2158956Z   rfc3986-validator              0.1.1                pyh9f0ad1d_0             conda-forge
2025-01-07T17:43:14.2159325Z   rpds-py                        0.18.1               py312h4413252_0          conda-forge
2025-01-07T17:43:14.2159772Z   ruff                           0.4.9                py312h5715c7c_0          conda-forge
2025-01-07T17:43:14.2160098Z   scipy                          1.13.1               py312hc2bc53b_0          conda-forge
2025-01-07T17:43:14.2160444Z   send2trash                     1.8.3                pyh0d859eb_0             conda-forge
2025-01-07T17:43:14.2160810Z   setuptools                     70.0.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2161182Z   setuptools-scm                 8.1.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2161567Z   setuptools_scm                 8.1.0                hd8ed1ab_0               conda-forge
2025-01-07T17:43:14.2161907Z   six                            1.16.0               pyh6c4a22f_0             conda-forge
2025-01-07T17:43:14.2162413Z   snakeviz                       2.2.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2162755Z   snappy                         1.2.0                hdb0a2a9_1               conda-forge
2025-01-07T17:43:14.2163100Z   sniffio                        1.3.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2163468Z   snowballstemmer                2.2.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2163844Z   soupsieve                      2.5                  pyhd8ed1ab_1             conda-forge
2025-01-07T17:43:14.2164193Z   sphinx                         7.3.7                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2164557Z   sphinx-astropy                 1.9.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2164963Z   sphinx-automodapi              0.17.0               pyh717bed2_1             conda-forge
2025-01-07T17:43:14.2165365Z   sphinx-gallery                 0.16.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2165767Z   sphinx-jsonschema              1.19.1               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2166190Z   sphinx_bootstrap_theme         0.8.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2166594Z   sphinx_rtd_theme               2.0.0                pyha770c72_0             conda-forge
2025-01-07T17:43:14.2167002Z   sphinxcontrib-apidoc           0.3.0                py_1                     conda-forge
2025-01-07T17:43:14.2167574Z   sphinxcontrib-applehelp        1.0.8                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2168023Z   sphinxcontrib-bibtex           2.6.2                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2168455Z   sphinxcontrib-devhelp          1.0.6                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2168899Z   sphinxcontrib-htmlhelp         2.0.5                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2169339Z   sphinxcontrib-jquery           4.1                  pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2169770Z   sphinxcontrib-jsmath           1.0.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2170200Z   sphinxcontrib-qthelp           1.0.7                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2170676Z   sphinxcontrib-serializinghtml  1.1.10               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2171112Z   stack_data                     0.6.2                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2171461Z   sympy                          1.12.1               pypyh2585a3b_103         conda-forge
2025-01-07T17:43:14.2171802Z   tabulate                       0.9.0                pyhd8ed1ab_1             conda-forge
2025-01-07T17:43:14.2172301Z   tenacity                       8.4.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2172661Z   terminado                      0.18.1               pyh0d859eb_0             conda-forge
2025-01-07T17:43:14.2173017Z   tinycss2                       1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2173489Z   tk                             8.6.13               noxft_h4845f30_101       conda-forge
2025-01-07T17:43:14.2173808Z   toml                           0.10.2               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2174139Z   tomli                          2.0.1                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2174481Z   tornado                        6.4.1                py312h9a8786e_0          conda-forge
2025-01-07T17:43:14.2174816Z   tqdm                           4.66.4               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2175155Z   traitlets                      5.14.3               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2175511Z   typed-ast                      1.5.5                py312h98912ed_1          conda-forge
2025-01-07T17:43:14.2175922Z   types-python-dateutil          2.9.0.20240316       pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2176353Z   typing-extensions              4.12.2               hd8ed1ab_0               conda-forge
2025-01-07T17:43:14.2176765Z   typing_extensions              4.12.2               pyha770c72_0             conda-forge
2025-01-07T17:43:14.2177145Z   typing_utils                   0.1.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2177502Z   tzdata                         2024a                h0c530f3_0               conda-forge
2025-01-07T17:43:14.2177869Z   uri-template                   1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2178228Z   urllib3                        2.2.2                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2178570Z   wcwidth                        0.2.13               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2178926Z   webcolors                      24.6.0               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2179295Z   webencodings                   0.5.1                pyhd8ed1ab_2             conda-forge
2025-01-07T17:43:14.2179689Z   websocket-client               1.8.0                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2180055Z   wheel                          0.43.0               pyhd8ed1ab_1             conda-forge
2025-01-07T17:43:14.2180434Z   widgetsnbextension             3.6.6                pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2180826Z   xorg-kbproto                   1.0.7                h7f98852_1002            conda-forge
2025-01-07T17:43:14.2181306Z   xorg-libice                    1.1.1                hd590300_0               conda-forge
2025-01-07T17:43:14.2181664Z   xorg-libsm                     1.2.4                h7391055_0               conda-forge
2025-01-07T17:43:14.2182168Z   xorg-libx11                    1.8.9                h8ee46fc_0               conda-forge
2025-01-07T17:43:14.2182529Z   xorg-libxau                    1.0.11               hd590300_0               conda-forge
2025-01-07T17:43:14.2182899Z   xorg-libxdmcp                  1.1.3                h7f98852_0               conda-forge
2025-01-07T17:43:14.2183279Z   xorg-libxext                   1.3.4                h0b41bf4_2               conda-forge
2025-01-07T17:43:14.2183659Z   xorg-libxrender                0.9.11               hd590300_0               conda-forge
2025-01-07T17:43:14.2184053Z   xorg-renderproto               0.11.1               h7f98852_1002            conda-forge
2025-01-07T17:43:14.2184451Z   xorg-xextproto                 7.3.0                h0b41bf4_1003            conda-forge
2025-01-07T17:43:14.2184823Z   xorg-xproto                    7.0.31               h7f98852_1007            conda-forge
2025-01-07T17:43:14.2185157Z   xz                             5.2.6                h166bdaf_0               conda-forge
2025-01-07T17:43:14.2185465Z   yaml                           0.2.5                h7f98852_2               conda-forge
2025-01-07T17:43:14.2185787Z   zeromq                         4.3.5                h75354e8_4               conda-forge
2025-01-07T17:43:14.2186240Z   zipp                           3.19.2               pyhd8ed1ab_0             conda-forge
2025-01-07T17:43:14.2186563Z   zlib                           1.3.1                h4ab18f5_1               conda-forge
2025-01-07T17:43:14.2186887Z   zlib-ng                        2.0.7                h0b41bf4_0               conda-forge
2025-01-07T17:43:14.2187209Z   zstd                           1.5.6                ha6fb4c9_0               conda-forge
2025-01-07T17:43:14.2187722Z ##[endgroup]
2025-01-07T17:43:14.2218696Z ##[group]Run pip install -e . --user
2025-01-07T17:43:14.2219015Z [36;1mpip install -e . --user[0m
2025-01-07T17:43:14.2247824Z shell: /usr/bin/bash -l {0}
2025-01-07T17:43:14.2248063Z env:
2025-01-07T17:43:14.2248240Z   CACHE_NUMBER: 0
2025-01-07T17:43:14.2248862Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-07T17:43:14.2249523Z   CODECOV_TOKEN: 
2025-01-07T17:43:14.2249756Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-01-07T17:43:14.2250063Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-01-07T17:43:14.2250409Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-07T17:43:14.2250718Z ##[endgroup]
2025-01-07T17:43:14.9746784Z Obtaining file:///home/runner/work/tardis/tardis
2025-01-07T17:43:14.9773457Z   Installing build dependencies: started
2025-01-07T17:43:17.7475016Z   Installing build dependencies: finished with status 'done'
2025-01-07T17:43:17.7479407Z   Checking if build backend supports build_editable: started
2025-01-07T17:43:17.8635667Z   Checking if build backend supports build_editable: finished with status 'done'
2025-01-07T17:43:17.8642347Z   Getting requirements to build editable: started
2025-01-07T17:43:18.3061887Z   Getting requirements to build editable: finished with status 'done'
2025-01-07T17:43:18.3069793Z   Preparing editable metadata (pyproject.toml): started
2025-01-07T17:43:18.7492558Z   Preparing editable metadata (pyproject.toml): finished with status 'done'
2025-01-07T17:43:18.8070926Z Requirement already satisfied: astropy in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from tardis==0.0.0) (6.1.1)
2025-01-07T17:43:18.8443081Z Requirement already satisfied: numpy>=1.23 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (1.26.4)
2025-01-07T17:43:18.8451850Z Requirement already satisfied: pyerfa>=2.0.1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (2.0.1.4)
2025-01-07T17:43:18.8461854Z Requirement already satisfied: astropy-iers-data>=0.2024.5.27.0.30.8 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (0.2024.6.17.0.31.35)
2025-01-07T17:43:18.8470090Z Requirement already satisfied: PyYAML>=3.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (6.0.1)
2025-01-07T17:43:18.8479577Z Requirement already satisfied: packaging>=19.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (24.1)
2025-01-07T17:43:18.8566256Z Building wheels for collected packages: tardis
2025-01-07T17:43:18.8574755Z   Building editable for tardis (pyproject.toml): started
2025-01-07T17:43:19.5898341Z   Building editable for tardis (pyproject.toml): finished with status 'done'
2025-01-07T17:43:19.5903987Z   Created wheel for tardis: filename=tardis-0.0.0-0.editable-py3-none-any.whl size=8877 sha256=5eb8ba4c379c9ae4c9261886d5e59742214e57c1c8b6562ca2be6174dea201b8
2025-01-07T17:43:19.5905604Z   Stored in directory: /tmp/pip-ephem-wheel-cache-eol6d4qh/wheels/6a/c7/ae/89fa6dc2565455898176888ef0e2e475e4e90eb0124afcb995
2025-01-07T17:43:19.5931368Z Successfully built tardis
2025-01-07T17:43:20.3612497Z Installing collected packages: tardis
2025-01-07T17:43:20.3710627Z Successfully installed tardis-0.0.0
2025-01-07T17:43:20.5910754Z ##[group]Run pip install qgridnext
2025-01-07T17:43:20.5911086Z [36;1mpip install qgridnext[0m
2025-01-07T17:43:20.5937267Z shell: /usr/bin/bash -l {0}
2025-01-07T17:43:20.5937508Z env:
2025-01-07T17:43:20.5937685Z   CACHE_NUMBER: 0
2025-01-07T17:43:20.5938313Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-07T17:43:20.5938972Z   CODECOV_TOKEN: 
2025-01-07T17:43:20.5939196Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-01-07T17:43:20.5939501Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-01-07T17:43:20.5939852Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-07T17:43:20.5940148Z ##[endgroup]
2025-01-07T17:43:21.2738045Z Collecting qgridnext
2025-01-07T17:43:21.3095565Z   Downloading qgridnext-2.0.4-py3-none-any.whl.metadata (9.9 kB)
2025-01-07T17:43:21.3185457Z Requirement already satisfied: pandas>=0.20.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (2.2.2)
2025-01-07T17:43:21.3194701Z Requirement already satisfied: ipywidgets>=7.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (7.8.0)
2025-01-07T17:43:21.3204616Z Requirement already satisfied: numpy in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (1.26.4)
2025-01-07T17:43:21.3215214Z Requirement already satisfied: traitlets in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (5.14.3)
2025-01-07T17:43:21.3299257Z Requirement already satisfied: comm>=0.1.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-01-07T17:43:21.3308366Z Requirement already satisfied: ipython-genutils~=0.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.0)
2025-01-07T17:43:21.3321780Z Requirement already satisfied: widgetsnbextension~=3.6.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (3.6.6)
2025-01-07T17:43:21.3340190Z Requirement already satisfied: ipython>=4.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (8.25.0)
2025-01-07T17:43:21.3357626Z Requirement already satisfied: jupyterlab-widgets<3,>=1.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (1.1.7)
2025-01-07T17:43:21.3797154Z Requirement already satisfied: python-dateutil>=2.8.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2.9.0)
2025-01-07T17:43:21.3810984Z Requirement already satisfied: pytz>=2020.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-01-07T17:43:21.3819537Z Requirement already satisfied: tzdata>=2022.7 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-01-07T17:43:21.4128669Z Requirement already satisfied: decorator in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (5.1.1)
2025-01-07T17:43:21.4145272Z Requirement already satisfied: jedi>=0.16 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.19.1)
2025-01-07T17:43:21.4154406Z Requirement already satisfied: matplotlib-inline in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.1.7)
2025-01-07T17:43:21.4165882Z Requirement already satisfied: prompt-toolkit<3.1.0,>=3.0.41 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (3.0.47)
2025-01-07T17:43:21.4175469Z Requirement already satisfied: pygments>=2.4.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.18.0)
2025-01-07T17:43:21.4186038Z Requirement already satisfied: stack-data in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.6.2)
2025-01-07T17:43:21.4205742Z Requirement already satisfied: pexpect>4.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (4.9.0)
2025-01-07T17:43:21.4253527Z Requirement already satisfied: six>=1.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from python-dateutil>=2.8.2->pandas>=0.20.0->qgridnext) (1.16.0)
2025-01-07T17:43:21.4311814Z Requirement already satisfied: notebook>=4.4.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.2.1)
2025-01-07T17:43:21.4501848Z Requirement already satisfied: parso<0.9.0,>=0.8.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jedi>=0.16->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.8.4)
2025-01-07T17:43:21.4645521Z Requirement already satisfied: jupyter-server<3,>=2.4.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.1)
2025-01-07T17:43:21.4659395Z Requirement already satisfied: jupyterlab-server<3,>=2.27.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.27.2)
2025-01-07T17:43:21.4675142Z Requirement already satisfied: jupyterlab<4.3,>=4.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-01-07T17:43:21.4686159Z Requirement already satisfied: notebook-shim<0.3,>=0.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.2.4)
2025-01-07T17:43:21.4695096Z Requirement already satisfied: tornado>=6.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.4.1)
2025-01-07T17:43:21.4725233Z Requirement already satisfied: ptyprocess>=0.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pexpect>4.3->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.7.0)
2025-01-07T17:43:21.4754560Z Requirement already satisfied: wcwidth in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from prompt-toolkit<3.1.0,>=3.0.41->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.13)
2025-01-07T17:43:21.4891350Z Requirement already satisfied: executing>=1.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.0.1)
2025-01-07T17:43:21.4901492Z Requirement already satisfied: asttokens>=2.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.4.1)
2025-01-07T17:43:21.4910093Z Requirement already satisfied: pure-eval in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-01-07T17:43:21.5248717Z Requirement already satisfied: anyio>=3.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.4.0)
2025-01-07T17:43:21.5258501Z Requirement already satisfied: argon2-cffi>=21.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.1.0)
2025-01-07T17:43:21.5266853Z Requirement already satisfied: jinja2>=3.0.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.1.4)
2025-01-07T17:43:21.5278179Z Requirement already satisfied: jupyter-client>=7.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (8.6.2)
2025-01-07T17:43:21.5289544Z Requirement already satisfied: jupyter-core!=5.0.*,>=4.12 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.7.2)
2025-01-07T17:43:21.5300393Z Requirement already satisfied: jupyter-events>=0.9.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-01-07T17:43:21.5311095Z Requirement already satisfied: jupyter-server-terminals>=0.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.3)
2025-01-07T17:43:21.5324658Z Requirement already satisfied: nbconvert>=6.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.16.4)
2025-01-07T17:43:21.5334649Z Requirement already satisfied: nbformat>=5.3.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.10.4)
2025-01-07T17:43:21.5343430Z Requirement already satisfied: overrides>=5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.7.0)
2025-01-07T17:43:21.5352807Z Requirement already satisfied: packaging>=22.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.1)
2025-01-07T17:43:21.5361017Z Requirement already satisfied: prometheus-client>=0.9 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.20.0)
2025-01-07T17:43:21.5374913Z Requirement already satisfied: pyzmq>=24 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (26.0.3)
2025-01-07T17:43:21.5388984Z Requirement already satisfied: send2trash>=1.8.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.3)
2025-01-07T17:43:21.5406531Z Requirement already satisfied: terminado>=0.8.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-01-07T17:43:21.5434260Z Requirement already satisfied: websocket-client>=1.7 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.0)
2025-01-07T17:43:21.5781307Z Requirement already satisfied: async-lru>=1.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.4)
2025-01-07T17:43:21.5792980Z Requirement already satisfied: httpx>=0.25.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.27.0)
2025-01-07T17:43:21.5805012Z Requirement already satisfied: ipykernel>=6.5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.29.4)
2025-01-07T17:43:21.5819076Z Requirement already satisfied: jupyter-lsp>=2.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.5)
2025-01-07T17:43:21.5844978Z Requirement already satisfied: setuptools>=40.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (70.0.0)
2025-01-07T17:43:21.6028281Z Requirement already satisfied: babel>=2.10 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.0)
2025-01-07T17:43:21.6054668Z Requirement already satisfied: json5>=0.9.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.9.25)
2025-01-07T17:43:21.6065201Z Requirement already satisfied: jsonschema>=4.18.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.22.0)
2025-01-07T17:43:21.6083073Z Requirement already satisfied: requests>=2.31 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.32.3)
2025-01-07T17:43:21.6428052Z Requirement already satisfied: idna>=2.8 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.7)
2025-01-07T17:43:21.6436970Z Requirement already satisfied: sniffio>=1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.1)
2025-01-07T17:43:21.6526936Z Requirement already satisfied: argon2-cffi-bindings in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (21.2.0)
2025-01-07T17:43:21.6695476Z Requirement already satisfied: certifi in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2024.6.2)
2025-01-07T17:43:21.6709999Z Requirement already satisfied: httpcore==1.* in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.0.5)
2025-01-07T17:43:21.6787203Z Requirement already satisfied: h11<0.15,>=0.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpcore==1.*->httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.14.0)
2025-01-07T17:43:21.6967777Z Requirement already satisfied: debugpy>=1.6.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.1)
2025-01-07T17:43:21.6988588Z Requirement already satisfied: nest-asyncio in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.6.0)
2025-01-07T17:43:21.7002586Z Requirement already satisfied: psutil in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.9.8)
2025-01-07T17:43:21.7063834Z Requirement already satisfied: MarkupSafe>=2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jinja2>=3.0.3->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.1.5)
2025-01-07T17:43:21.7251879Z Requirement already satisfied: attrs>=22.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.2.0)
2025-01-07T17:43:21.7261758Z Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2023.12.1)
2025-01-07T17:43:21.7270253Z Requirement already satisfied: referencing>=0.28.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.35.1)
2025-01-07T17:43:21.7279210Z Requirement already satisfied: rpds-py>=0.7.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-01-07T17:43:21.7536613Z Requirement already satisfied: platformdirs>=2.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-core!=5.0.*,>=4.12->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-01-07T17:43:21.7682780Z Requirement already satisfied: python-json-logger>=2.0.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.7)
2025-01-07T17:43:21.7690738Z Requirement already satisfied: pyyaml>=5.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.0.1)
2025-01-07T17:43:21.7700847Z Requirement already satisfied: rfc3339-validator in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.4)
2025-01-07T17:43:21.7709260Z Requirement already satisfied: rfc3986-validator>=0.1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.1)
2025-01-07T17:43:21.8125646Z Requirement already satisfied: beautifulsoup4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.12.3)
2025-01-07T17:43:21.8144337Z Requirement already satisfied: bleach!=5.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.1.0)
2025-01-07T17:43:21.8157786Z Requirement already satisfied: defusedxml in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.7.1)
2025-01-07T17:43:21.8171854Z Requirement already satisfied: jupyterlab-pygments in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.3.0)
2025-01-07T17:43:21.8183327Z Requirement already satisfied: mistune<4,>=2.0.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.2)
2025-01-07T17:43:21.8195623Z Requirement already satisfied: nbclient>=0.5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-01-07T17:43:21.8211101Z Requirement already satisfied: pandocfilters>=1.4.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.0)
2025-01-07T17:43:21.8220609Z Requirement already satisfied: tinycss2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-07T17:43:21.8333092Z Requirement already satisfied: fastjsonschema>=2.15 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbformat>=5.3.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.20.0)
2025-01-07T17:43:21.8632142Z Requirement already satisfied: charset-normalizer<4,>=2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.3.2)
2025-01-07T17:43:21.8645567Z Requirement already satisfied: urllib3<3,>=1.21.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.2)
2025-01-07T17:43:21.9400960Z Requirement already satisfied: webencodings in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from bleach!=5.0.0->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.1)
2025-01-07T17:43:21.9958484Z Requirement already satisfied: fqdn in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.1)
2025-01-07T17:43:21.9976076Z Requirement already satisfied: isoduration in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (20.11.0)
2025-01-07T17:43:21.9989419Z Requirement already satisfied: jsonpointer>1.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.0)
2025-01-07T17:43:22.0005948Z Requirement already satisfied: uri-template in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-07T17:43:22.0019461Z Requirement already satisfied: webcolors>=1.11 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.6.0)
2025-01-07T17:43:22.1007409Z Requirement already satisfied: cffi>=1.0.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.16.0)
2025-01-07T17:43:22.1101313Z Requirement already satisfied: soupsieve>1.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from beautifulsoup4->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.5)
2025-01-07T17:43:22.1611256Z Requirement already satisfied: pycparser in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.22)
2025-01-07T17:43:22.2094560Z Requirement already satisfied: arrow>=0.15.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-07T17:43:22.2404358Z Requirement already satisfied: types-python-dateutil>=2.8.10 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from arrow>=0.15.0->isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.9.0.20240316)
2025-01-07T17:43:22.2714450Z Downloading qgridnext-2.0.4-py3-none-any.whl (1.3 MB)
2025-01-07T17:43:22.3208586Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.3/1.3 MB 26.6 MB/s eta 0:00:00
2025-01-07T17:43:23.1057900Z Installing collected packages: qgridnext
2025-01-07T17:43:23.1979572Z Successfully installed qgridnext-2.0.4
2025-01-07T17:43:23.4008078Z ##[group]Run pytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-01-07T17:43:23.4010386Z [36;1mpytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-01-07T17:43:23.4046707Z shell: /usr/bin/bash -l {0}
2025-01-07T17:43:23.4046961Z env:
2025-01-07T17:43:23.4047136Z   CACHE_NUMBER: 0
2025-01-07T17:43:23.4047774Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-07T17:43:23.4048475Z   CODECOV_TOKEN: 
2025-01-07T17:43:23.4048696Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-01-07T17:43:23.4049006Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-01-07T17:43:23.4049396Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-07T17:43:23.4049705Z ##[endgroup]
2025-01-07T17:43:31.7618597Z ============================= test session starts ==============================
2025-01-07T17:43:31.7619437Z platform linux -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-01-07T17:43:31.7620166Z rootdir: /home/runner/work/tardis/tardis
2025-01-07T17:43:31.7620729Z configfile: pyproject.toml
2025-01-07T17:43:31.7621432Z plugins: anyio-4.4.0, doctestplus-1.2.1, cov-5.0.0, html-4.1.1, metadata-3.1.1
2025-01-07T17:43:31.7622536Z collected 1796 items / 2 deselected / 1794 selected
2025-01-07T17:43:31.7622861Z 
2025-01-07T17:43:36.5627070Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-01-07T17:43:39.2926426Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-01-07T17:43:40.9757168Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-01-07T17:43:42.6825401Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-01-07T17:43:42.6930075Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-01-07T17:43:43.9352863Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-01-07T17:43:44.2673650Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-01-07T17:43:44.2689305Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-01-07T17:43:47.9649813Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-01-07T17:43:47.9774221Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-01-07T17:43:48.0040643Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-01-07T17:44:23.8004156Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-01-07T17:44:23.8151407Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-01-07T17:44:23.8256839Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-01-07T17:44:23.8556369Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-01-07T17:44:23.8762577Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-01-07T17:44:24.1766606Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-01-07T17:44:24.4711104Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-01-07T17:44:24.5049444Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-01-07T17:44:24.6944060Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-01-07T17:44:24.7012733Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-01-07T17:45:20.7155031Z tardis/model/tests/test_base.py ........................................ [ 10%]
2025-01-07T17:45:21.6696532Z ............                                                             [ 10%]
2025-01-07T17:45:24.6503936Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-01-07T17:45:24.6971465Z tardis/model/tests/test_density.py ..                                    [ 11%]
2025-01-07T17:45:25.9421138Z tardis/opacities/tests/test_opacity_solver.py .....                      [ 11%]
2025-01-07T17:45:27.2402521Z tardis/opacities/tests/test_opacity_state_numba.py .....                 [ 11%]
2025-01-07T17:45:28.8021431Z tardis/opacities/tests/test_tau_sobolev.py ..                            [ 12%]
2025-01-07T17:45:31.7523797Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-01-07T17:46:17.2765374Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-01-07T17:46:28.2131823Z tardis/plasma/equilibrium/tests/test_rate_matrix.py .                    [ 12%]
2025-01-07T17:46:29.8346714Z tardis/plasma/tests/test_complete_plasmas.py .....................s..... [ 13%]
2025-01-07T17:46:32.7106121Z s....ssssss............s............ss.....s....ssssss............s..... [ 18%]
2025-01-07T17:46:34.4097602Z .......ss.....s....ssssss............s............ss.....s....ssssss.... [ 22%]
2025-01-07T17:46:37.2604590Z ........s............ss.....s........ss............s............ss.....s [ 26%]
2025-01-07T17:46:40.1175969Z ........ss............s............ss.....s....ssssss............s...... [ 30%]
2025-01-07T17:46:40.8492254Z ......ss.....s....ssssss............s............ss.....s.ss.ssssss..... [ 34%]
2025-01-07T17:46:43.9927795Z .......s............ss.....s....ssssss............s............ss.....s. [ 38%]
2025-01-07T17:46:46.8358895Z ...ssssss............s............ss.....s....ssssss............s....... [ 42%]
2025-01-07T17:46:49.8970420Z .....ss.....s....ssssss............s............s...........ssssss...... [ 46%]
2025-01-07T17:46:51.6835362Z ......s............s...........ssssss............s............s......... [ 50%]
2025-01-07T17:46:54.8373459Z ..ssssss............s............ss.....s....ssssss............s........ [ 54%]
2025-01-07T17:46:57.9705882Z ....ss.....s....ssssss..........................s.....s....ssss......... [ 58%]
2025-01-07T17:46:58.3003831Z ...................s.....s....ssss.......                                [ 60%]
2025-01-07T17:46:58.4106878Z tardis/plasma/tests/test_hdf_plasma.py ................................. [ 62%]
2025-01-07T17:46:58.4227105Z ......                                                                   [ 62%]
2025-01-07T17:46:58.5557017Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-01-07T17:49:14.0387006Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-01-07T17:49:14.0412604Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-01-07T17:49:36.7999479Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-01-07T17:49:49.8551102Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-01-07T17:49:50.5861909Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-01-07T17:49:59.0893568Z tardis/simulation/tests/test_simulation.py .............                 [ 65%]
2025-01-07T17:49:59.1091846Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-01-07T17:49:59.5698472Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-01-07T17:49:59.5772644Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-01-07T17:50:01.6739517Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-01-07T17:50:01.6932727Z ..........                                                               [ 69%]
2025-01-07T17:50:01.8638656Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-01-07T17:50:01.8965676Z .........                                                                [ 72%]
2025-01-07T17:50:20.3609609Z tardis/spectrum/tests/test_spectrum_solver.py ....                       [ 72%]
2025-01-07T17:51:21.3979606Z tardis/tests/test_tardis_full.py ....                                    [ 72%]
2025-01-07T17:52:44.7115045Z tardis/tests/test_tardis_full_formal_integral.py ................        [ 73%]
2025-01-07T17:52:44.7861096Z tardis/tests/test_util.py .............................................  [ 75%]
2025-01-07T17:52:47.8755176Z tardis/transport/montecarlo/tests/test_base.py x.....................    [ 77%]
2025-01-07T17:52:54.9134106Z tardis/transport/montecarlo/tests/test_interaction.py .......            [ 77%]
2025-01-07T17:52:55.1265747Z tardis/transport/montecarlo/tests/test_macro_atom.py ....                [ 77%]
2025-01-07T17:52:55.1439254Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-01-07T17:52:55.1855002Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-01-07T17:53:03.9229525Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py x..       [ 81%]
2025-01-07T17:53:03.9298781Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-01-07T17:53:10.0445314Z tardis/transport/montecarlo/tests/test_numba_interface.py .....x.        [ 82%]
2025-01-07T17:53:10.5199520Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-01-07T17:53:11.5298491Z tardis/transport/montecarlo/tests/test_packet.py .................xXXXXX [ 84%]
2025-01-07T17:53:11.6646620Z XX.........                                                              [ 84%]
2025-01-07T17:53:11.6927123Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-01-07T17:53:11.9941103Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-01-07T17:53:12.4122929Z .....                                                                    [ 85%]
2025-01-07T17:53:46.6443158Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py ......         [ 85%]
2025-01-07T17:53:46.6727664Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-01-07T17:53:46.6759388Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-01-07T17:53:49.0810515Z tardis/transport/montecarlo/tests/test_vpacket.py ..x.                   [ 86%]
2025-01-07T17:53:49.0981309Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-01-07T17:53:52.4949852Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py . [ 86%]
2025-01-07T17:53:52.4951588Z                                                                          [ 86%]
2025-01-07T17:53:53.2023066Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-01-07T17:53:54.5517893Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-01-07T17:53:56.7448990Z ......                                                                   [ 88%]
2025-01-07T17:54:03.0308897Z tardis/visualization/tools/tests/test_liv_plot.py EEEEEEEEEEEEEEEEEEEEEE [ 90%]
2025-01-07T17:54:05.4449419Z EEEEEEEEEEEEEEEEEEEEEEEEEEEEE                                            [ 91%]
2025-01-07T17:54:08.3060151Z tardis/visualization/tools/tests/test_rpacket_plot.py .................. [ 92%]
2025-01-07T17:54:15.3500951Z ....                                                                     [ 92%]
2025-01-07T17:54:21.7566091Z tardis/visualization/tools/tests/test_sdec_plot.py EEEEEEEEEEEEEEEEEEEEE [ 94%]
2025-01-07T17:54:25.0056902Z EEEEEEEEEEEEEEEEEEEEEEEEEEEEEE                                           [ 95%]
2025-01-07T17:54:25.4323099Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-01-07T17:54:25.5042715Z ....                                                                     [ 96%]
2025-01-07T17:54:26.5565500Z tardis/visualization/widgets/tests/test_line_info.py ................... [ 97%]
2025-01-07T17:54:27.1826692Z ..................                                                       [ 98%]
2025-01-07T17:55:30.9663650Z tardis/visualization/widgets/tests/test_shell_info.py .................. [ 99%]
2025-01-07T17:55:37.3117522Z ......                                                                   [100%]
2025-01-07T17:55:37.3118018Z 
2025-01-07T17:55:37.3118194Z ==================================== ERRORS ====================================
2025-01-07T17:55:37.3119026Z ___ ERROR at setup of TestLIVPlotter.test_parse_species_list[_species_list] ____
2025-01-07T17:55:37.3119471Z 
2025-01-07T17:55:37.3119828Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3120531Z 
2025-01-07T17:55:37.3120728Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3121290Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3121783Z         """
2025-01-07T17:55:37.3122558Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3123209Z     
2025-01-07T17:55:37.3123553Z         Parameters:
2025-01-07T17:55:37.3123955Z         -----------
2025-01-07T17:55:37.3124425Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3124873Z     
2025-01-07T17:55:37.3125078Z         Returns:
2025-01-07T17:55:37.3125354Z         --------
2025-01-07T17:55:37.3125699Z         An LIVPlotter instance.
2025-01-07T17:55:37.3126059Z         """
2025-01-07T17:55:37.3126437Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3126809Z 
2025-01-07T17:55:37.3127051Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3127614Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3128229Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3128875Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3129334Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3129917Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3130633Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3131245Z     return cls(
2025-01-07T17:55:37.3131602Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3132134Z 
2025-01-07T17:55:37.3132621Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3133444Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3133860Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3134792Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3135621Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3136114Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3136741Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3137371Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3137946Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3138577Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3139122Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3139476Z 
2025-01-07T17:55:37.3139614Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3140129Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3140777Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3141478Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3142275Z        0.00025518])
2025-01-07T17:55:37.3142743Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3143741Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3144466Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3145051Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3145766Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3146468Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3147222Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3148121Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3148792Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3149272Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3149737Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3150218Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3150857Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3151839Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3152817Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3153613Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3154479Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3155331Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3156095Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3156936Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3157630Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3158235Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3158607Z 
2025-01-07T17:55:37.3158834Z     def __init__(
2025-01-07T17:55:37.3159283Z         self,
2025-01-07T17:55:37.3159798Z         last_interaction_type,
2025-01-07T17:55:37.3160304Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3160960Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3161500Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3162232Z         last_interaction_in_r,
2025-01-07T17:55:37.3162749Z         lines_df,
2025-01-07T17:55:37.3163178Z         packet_nus,
2025-01-07T17:55:37.3163906Z         packet_energies,
2025-01-07T17:55:37.3164380Z         r_inner,
2025-01-07T17:55:37.3164963Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3165652Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3166487Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3167047Z         spectrum_wavelength,
2025-01-07T17:55:37.3167511Z         t_inner,
2025-01-07T17:55:37.3168044Z         time_of_simulation,
2025-01-07T17:55:37.3168577Z         time_explosion,
2025-01-07T17:55:37.3169072Z         v_inner,
2025-01-07T17:55:37.3169464Z         v_outer,
2025-01-07T17:55:37.3169965Z         velocity
2025-01-07T17:55:37.3170400Z     ):
2025-01-07T17:55:37.3170827Z         """
2025-01-07T17:55:37.3171554Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3172518Z     
2025-01-07T17:55:37.3173033Z         Parameters
2025-01-07T17:55:37.3173475Z         ----------
2025-01-07T17:55:37.3174006Z         last_interaction_type : np.array
2025-01-07T17:55:37.3174677Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3175486Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3176139Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3176859Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3177720Z             absorption (interaction in)
2025-01-07T17:55:37.3178352Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3179097Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3179786Z             emission (interaction out)
2025-01-07T17:55:37.3180326Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3181104Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3181790Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3182692Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3183386Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3184169Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3184888Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3185629Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3186311Z             unit of Hz
2025-01-07T17:55:37.3186942Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3187605Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3188330Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3188903Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3189536Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3190285Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3190943Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3191698Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3192509Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3193286Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3193925Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3194559Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3195238Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3195928Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3196580Z         """
2025-01-07T17:55:37.3197234Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3198009Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3198581Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3199186Z             {
2025-01-07T17:55:37.3199636Z                 "nus": packet_nus,
2025-01-07T17:55:37.3200302Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3201119Z                 "energies": packet_energies,
2025-01-07T17:55:37.3201827Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3202741Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3203568Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3204357Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3205103Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3205675Z             }
2025-01-07T17:55:37.3206126Z         )
2025-01-07T17:55:37.3206566Z     
2025-01-07T17:55:37.3206973Z         # Save other properties
2025-01-07T17:55:37.3207553Z         self.lines_df = lines_df
2025-01-07T17:55:37.3208059Z         self.r_inner = r_inner
2025-01-07T17:55:37.3208765Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3209585Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3210590Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3211290Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3212112Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3212701Z         )
2025-01-07T17:55:37.3213273Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3213742Z         self.t_inner = t_inner
2025-01-07T17:55:37.3214093Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3214488Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3214902Z         self.v_inner = v_inner
2025-01-07T17:55:37.3215267Z         self.v_outer = v_outer
2025-01-07T17:55:37.3215787Z     
2025-01-07T17:55:37.3216247Z         # First check if both options are provided
2025-01-07T17:55:37.3217100Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3217817Z >           raise ValueError(
2025-01-07T17:55:37.3218460Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3219293Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3219964Z             )
2025-01-07T17:55:37.3221006Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3221787Z 
2025-01-07T17:55:37.3222439Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3223308Z ---------------------------- Captured stdout setup -----------------------------
2025-01-07T17:55:37.3224433Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-07T17:55:37.3225949Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-07T17:55:37.3227282Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3228169Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-07T17:55:37.3228978Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3229664Z 	
2025-01-07T17:55:37.3230217Z 	Starting iteration 1 of 3 ([1mbase.py[0m:444)
2025-01-07T17:55:37.3230985Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3231554Z 	
2025-01-07T17:55:37.3232208Z 	Luminosity emitted   = 8.174e+42 erg / s
2025-01-07T17:55:37.3232814Z 	Luminosity absorbed  = 2.612e+42 erg / s
2025-01-07T17:55:37.3233503Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-07T17:55:37.3234156Z  ([1mbase.py[0m:657)
2025-01-07T17:55:37.3234698Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3235158Z 	
2025-01-07T17:55:37.3235545Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-07T17:55:37.3236135Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3236590Z 	
2025-01-07T17:55:37.3237099Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-07T17:55:37.3237551Z 	0         9.97e+03 K     1e+04 K   0.4   0.456
2025-01-07T17:55:37.3237964Z 	5         9.89e+03 K  1.02e+04 K 0.211     0.2
2025-01-07T17:55:37.3238375Z 	10        9.82e+03 K  1.01e+04 K 0.143   0.126
2025-01-07T17:55:37.3238799Z 	15        9.75e+03 K  9.96e+03 K 0.105  0.0921
2025-01-07T17:55:37.3239270Z  ([1mbase.py[0m:650)
2025-01-07T17:55:37.3239761Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3240215Z 	
2025-01-07T17:55:37.3240490Z 	Current t_inner = 9974.969 K
2025-01-07T17:55:37.3240923Z 	Expected t_inner for next iteration = 10712.281 K
2025-01-07T17:55:37.3241437Z  ([1mbase.py[0m:652)
2025-01-07T17:55:37.3241915Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3242668Z 	
2025-01-07T17:55:37.3243075Z 	Starting iteration 2 of 3 ([1mbase.py[0m:444)
2025-01-07T17:55:37.3243671Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3244133Z 	
2025-01-07T17:55:37.3244422Z 	Luminosity emitted   = 1.078e+43 erg / s
2025-01-07T17:55:37.3244860Z 	Luminosity absorbed  = 3.553e+42 erg / s
2025-01-07T17:55:37.3245295Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-07T17:55:37.3245759Z  ([1mbase.py[0m:657)
2025-01-07T17:55:37.3246231Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3246683Z 	
2025-01-07T17:55:37.3247253Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-07T17:55:37.3247871Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3248324Z 	
2025-01-07T17:55:37.3248634Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-07T17:55:37.3249083Z 	0            1e+04 K  1.04e+04 K  0.456   0.493
2025-01-07T17:55:37.3249499Z 	5         1.02e+04 K  1.05e+04 K    0.2   0.204
2025-01-07T17:55:37.3249918Z 	10        1.01e+04 K  1.04e+04 K  0.126   0.127
2025-01-07T17:55:37.3250330Z 	15        9.96e+03 K  1.03e+04 K 0.0921  0.0914
2025-01-07T17:55:37.3250781Z  ([1mbase.py[0m:650)
2025-01-07T17:55:37.3251269Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3251718Z 	
2025-01-07T17:55:37.3252165Z 	Current t_inner = 10712.281 K
2025-01-07T17:55:37.3252605Z 	Expected t_inner for next iteration = 10710.562 K
2025-01-07T17:55:37.3253126Z  ([1mbase.py[0m:652)
2025-01-07T17:55:37.3253603Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3254071Z 	
2025-01-07T17:55:37.3254368Z 	Simulation finished in 2 iterations 
2025-01-07T17:55:37.3254783Z 	Simulation took 2.76 s
2025-01-07T17:55:37.3255171Z  ([1mbase.py[0m:542)
2025-01-07T17:55:37.3255663Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3256118Z 	
2025-01-07T17:55:37.3256516Z 	Starting iteration 3 of 3 ([1mbase.py[0m:444)
2025-01-07T17:55:37.3257115Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-07T17:55:37.3257567Z 	
2025-01-07T17:55:37.3257856Z 	Luminosity emitted   = 1.104e+43 erg / s
2025-01-07T17:55:37.3258291Z 	Luminosity absorbed  = 3.299e+42 erg / s
2025-01-07T17:55:37.3258731Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-07T17:55:37.3259192Z  ([1mbase.py[0m:657)
2025-01-07T17:55:37.3259646Z ---------------------------- Captured stderr setup -----------------------------
2025-01-07T17:55:37.3260076Z 
2025-01-07T17:55:37.3260324Z Iterations:                                                                                46/? [08:42<00:00,  7.36s/it]
2025-01-07T17:55:37.3260737Z 
2025-01-07T17:55:37.3261166Z Packets:                                                                                   103999/? [00:07<00:00, 110291.24it/s]    [A
2025-01-07T17:55:37.3261571Z 
2025-01-07T17:55:37.3262184Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]              [A
2025-01-07T17:55:37.3262823Z Iterations:                                                                                47/? [08:43<00:00,  5.64s/it]
2025-01-07T17:55:37.3263229Z 
2025-01-07T17:55:37.3264295Z Packets:   ████████████████████████████████████████████████████████████████████████████████4000/4000 [00:00<00:00, 100123.03it/s][A
2025-01-07T17:55:37.3264796Z 
2025-01-07T17:55:37.3265219Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]               [A
2025-01-07T17:55:37.3265877Z Iterations:                                                                                48/? [08:45<00:00,  4.30s/it]
2025-01-07T17:55:37.3266280Z 
2025-01-07T17:55:37.3266867Z Packets:   ████████████████████████████████████████████████████████████████████████████████4000/4000 [00:00<00:00, 68270.00it/s][A
2025-01-07T17:55:37.3267607Z ------------------------------ Captured log setup ------------------------------
2025-01-07T17:55:37.3268969Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-07T17:55:37.3270416Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-07T17:55:37.3271129Z INFO     tardis.simulation.base:base.py:444 
2025-01-07T17:55:37.3271589Z 	Starting iteration 1 of 3
2025-01-07T17:55:37.3272139Z INFO     tardis.simulation.base:base.py:657 
2025-01-07T17:55:37.3272617Z 	Luminosity emitted   = 8.174e+42 erg / s
2025-01-07T17:55:37.3273290Z 	Luminosity absorbed  = 2.612e+42 erg / s
2025-01-07T17:55:37.3273755Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-07T17:55:37.3274044Z 
2025-01-07T17:55:37.3274223Z INFO     tardis.simulation.base:base.py:649 
2025-01-07T17:55:37.3274670Z 	Plasma stratification:
2025-01-07T17:55:37.3275057Z INFO     tardis.simulation.base:base.py:650 
2025-01-07T17:55:37.3275547Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-07T17:55:37.3275998Z 	0         9.97e+03 K     1e+04 K   0.4   0.456
2025-01-07T17:55:37.3276410Z 	5         9.89e+03 K  1.02e+04 K 0.211     0.2
2025-01-07T17:55:37.3276929Z 	10        9.82e+03 K  1.01e+04 K 0.143   0.126
2025-01-07T17:55:37.3277359Z 	15        9.75e+03 K  9.96e+03 K 0.105  0.0921
2025-01-07T17:55:37.3277638Z 
2025-01-07T17:55:37.3277812Z INFO     tardis.simulation.base:base.py:652 
2025-01-07T17:55:37.3278261Z 	Current t_inner = 9974.969 K
2025-01-07T17:55:37.3278696Z 	Expected t_inner for next iteration = 10712.281 K
2025-01-07T17:55:37.3279045Z 
2025-01-07T17:55:37.3279222Z INFO     tardis.simulation.base:base.py:444 
2025-01-07T17:55:37.3279672Z 	Starting iteration 2 of 3
2025-01-07T17:55:37.3280070Z INFO     tardis.simulation.base:base.py:657 
2025-01-07T17:55:37.3280531Z 	Luminosity emitted   = 1.078e+43 erg / s
2025-01-07T17:55:37.3280969Z 	Luminosity absorbed  = 3.553e+42 erg / s
2025-01-07T17:55:37.3281414Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-07T17:55:37.3281712Z 
2025-01-07T17:55:37.3281883Z INFO     tardis.simulation.base:base.py:649 
2025-01-07T17:55:37.3282475Z 	Plasma stratification:
2025-01-07T17:55:37.3282868Z INFO     tardis.simulation.base:base.py:650 
2025-01-07T17:55:37.3283363Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-07T17:55:37.3283823Z 	0            1e+04 K  1.04e+04 K  0.456   0.493
2025-01-07T17:55:37.3284242Z 	5         1.02e+04 K  1.05e+04 K    0.2   0.204
2025-01-07T17:55:37.3284660Z 	10        1.01e+04 K  1.04e+04 K  0.126   0.127
2025-01-07T17:55:37.3285075Z 	15        9.96e+03 K  1.03e+04 K 0.0921  0.0914
2025-01-07T17:55:37.3285373Z 
2025-01-07T17:55:37.3285549Z INFO     tardis.simulation.base:base.py:652 
2025-01-07T17:55:37.3286002Z 	Current t_inner = 10712.281 K
2025-01-07T17:55:37.3286433Z 	Expected t_inner for next iteration = 10710.562 K
2025-01-07T17:55:37.3286773Z 
2025-01-07T17:55:37.3286952Z INFO     tardis.simulation.base:base.py:542 
2025-01-07T17:55:37.3287415Z 	Simulation finished in 2 iterations 
2025-01-07T17:55:37.3287830Z 	Simulation took 2.76 s
2025-01-07T17:55:37.3288048Z 
2025-01-07T17:55:37.3288218Z INFO     tardis.simulation.base:base.py:444 
2025-01-07T17:55:37.3288670Z 	Starting iteration 3 of 3
2025-01-07T17:55:37.3289247Z INFO     tardis.simulation.base:base.py:657 
2025-01-07T17:55:37.3289710Z 	Luminosity emitted   = 1.104e+43 erg / s
2025-01-07T17:55:37.3290153Z 	Luminosity absorbed  = 3.299e+42 erg / s
2025-01-07T17:55:37.3290592Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-07T17:55:37.3291216Z ____ ERROR at setup of TestLIVPlotter.test_parse_species_list[_keep_colour] ____
2025-01-07T17:55:37.3291728Z 
2025-01-07T17:55:37.3292472Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3293025Z 
2025-01-07T17:55:37.3293174Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3293602Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3293991Z         """
2025-01-07T17:55:37.3294398Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3294915Z     
2025-01-07T17:55:37.3295186Z         Parameters:
2025-01-07T17:55:37.3295493Z         -----------
2025-01-07T17:55:37.3295869Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3296327Z     
2025-01-07T17:55:37.3296588Z         Returns:
2025-01-07T17:55:37.3296886Z         --------
2025-01-07T17:55:37.3297197Z         An LIVPlotter instance.
2025-01-07T17:55:37.3297555Z         """
2025-01-07T17:55:37.3297933Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3298307Z 
2025-01-07T17:55:37.3298790Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3299378Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3299993Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3300658Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3301425Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3302327Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3303046Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3303682Z     return cls(
2025-01-07T17:55:37.3304045Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3304395Z 
2025-01-07T17:55:37.3304884Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3305781Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3306465Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3307222Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3308026Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3308697Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3309320Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3309957Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3310546Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3311171Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3311704Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3312188Z 
2025-01-07T17:55:37.3312315Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3312828Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3313441Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3314103Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3314720Z        0.00025518])
2025-01-07T17:55:37.3315169Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3315930Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3316819Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3317398Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3318114Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3318803Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3319542Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3320446Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3321691Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3322321Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3322776Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3323254Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3323804Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3324531Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3325193Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3325825Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3326707Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3327377Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3328024Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3328683Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3329243Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3329699Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3329933Z 
2025-01-07T17:55:37.3330065Z     def __init__(
2025-01-07T17:55:37.3330378Z         self,
2025-01-07T17:55:37.3330682Z         last_interaction_type,
2025-01-07T17:55:37.3331072Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3331490Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3331906Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3332454Z         last_interaction_in_r,
2025-01-07T17:55:37.3332817Z         lines_df,
2025-01-07T17:55:37.3333120Z         packet_nus,
2025-01-07T17:55:37.3333433Z         packet_energies,
2025-01-07T17:55:37.3333764Z         r_inner,
2025-01-07T17:55:37.3334082Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3334646Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3335272Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3335704Z         spectrum_wavelength,
2025-01-07T17:55:37.3336055Z         t_inner,
2025-01-07T17:55:37.3336358Z         time_of_simulation,
2025-01-07T17:55:37.3336712Z         time_explosion,
2025-01-07T17:55:37.3337039Z         v_inner,
2025-01-07T17:55:37.3337327Z         v_outer,
2025-01-07T17:55:37.3337611Z         velocity
2025-01-07T17:55:37.3337894Z     ):
2025-01-07T17:55:37.3338153Z         """
2025-01-07T17:55:37.3338709Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3339384Z     
2025-01-07T17:55:37.3339655Z         Parameters
2025-01-07T17:55:37.3339959Z         ----------
2025-01-07T17:55:37.3340290Z         last_interaction_type : np.array
2025-01-07T17:55:37.3340851Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3341449Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3342079Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3342631Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3343180Z             absorption (interaction in)
2025-01-07T17:55:37.3343631Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3344365Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3344905Z             emission (interaction out)
2025-01-07T17:55:37.3345345Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3345902Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3346469Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3347014Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3347558Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3348074Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3348659Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3349213Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3349765Z             unit of Hz
2025-01-07T17:55:37.3350124Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3350642Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3351149Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3351593Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3352241Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3352790Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3353493Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3354029Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3354549Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3355080Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3355604Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3356067Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3356576Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3357059Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3357510Z         """
2025-01-07T17:55:37.3357964Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3358585Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3359053Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3359452Z             {
2025-01-07T17:55:37.3359755Z                 "nus": packet_nus,
2025-01-07T17:55:37.3360210Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3360716Z                 "energies": packet_energies,
2025-01-07T17:55:37.3361208Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3361807Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3362595Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3363236Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3363832Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3364284Z             }
2025-01-07T17:55:37.3364557Z         )
2025-01-07T17:55:37.3364818Z     
2025-01-07T17:55:37.3365103Z         # Save other properties
2025-01-07T17:55:37.3365478Z         self.lines_df = lines_df
2025-01-07T17:55:37.3365859Z         self.r_inner = r_inner
2025-01-07T17:55:37.3366336Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3366953Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3367554Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3368110Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3368637Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3369056Z         )
2025-01-07T17:55:37.3369404Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3369880Z         self.t_inner = t_inner
2025-01-07T17:55:37.3370473Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3370958Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3371386Z         self.v_inner = v_inner
2025-01-07T17:55:37.3371751Z         self.v_outer = v_outer
2025-01-07T17:55:37.3372267Z     
2025-01-07T17:55:37.3372584Z         # First check if both options are provided
2025-01-07T17:55:37.3373193Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3373771Z >           raise ValueError(
2025-01-07T17:55:37.3374257Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3374918Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3375461Z             )
2025-01-07T17:55:37.3376242Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3377004Z 
2025-01-07T17:55:37.3377313Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3377999Z __ ERROR at setup of TestLIVPlotter.test_parse_species_list[_species_mapped] ___
2025-01-07T17:55:37.3378295Z 
2025-01-07T17:55:37.3378514Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3378946Z 
2025-01-07T17:55:37.3379301Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3379734Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3380122Z         """
2025-01-07T17:55:37.3380529Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3381043Z     
2025-01-07T17:55:37.3381309Z         Parameters:
2025-01-07T17:55:37.3381618Z         -----------
2025-01-07T17:55:37.3382138Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3382471Z     
2025-01-07T17:55:37.3382630Z         Returns:
2025-01-07T17:55:37.3382809Z         --------
2025-01-07T17:55:37.3382996Z         An LIVPlotter instance.
2025-01-07T17:55:37.3383241Z         """
2025-01-07T17:55:37.3383636Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3384024Z 
2025-01-07T17:55:37.3384258Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3384824Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3385446Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3386133Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3386790Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3387228Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3387637Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3387989Z     return cls(
2025-01-07T17:55:37.3388202Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3388403Z 
2025-01-07T17:55:37.3388683Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3389191Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3389588Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3390042Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3390505Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3390923Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3391289Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3391653Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3392193Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3392563Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3393063Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3393263Z 
2025-01-07T17:55:37.3393345Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3393642Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3394006Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3414865Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3415292Z        0.00025518])
2025-01-07T17:55:37.3415582Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3416034Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3416440Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3416777Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3417207Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3417613Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3418041Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3418719Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3419127Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3419417Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3419692Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3419981Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3420305Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3420805Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3421442Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3422162Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3422818Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3423435Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3424068Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3424461Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3424789Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3425059Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3425206Z 
2025-01-07T17:55:37.3425277Z     def __init__(
2025-01-07T17:55:37.3425460Z         self,
2025-01-07T17:55:37.3425647Z         last_interaction_type,
2025-01-07T17:55:37.3425883Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3426141Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3426388Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3426627Z         last_interaction_in_r,
2025-01-07T17:55:37.3426838Z         lines_df,
2025-01-07T17:55:37.3427028Z         packet_nus,
2025-01-07T17:55:37.3427227Z         packet_energies,
2025-01-07T17:55:37.3427430Z         r_inner,
2025-01-07T17:55:37.3427629Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3428127Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3428778Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3429236Z         spectrum_wavelength,
2025-01-07T17:55:37.3429603Z         t_inner,
2025-01-07T17:55:37.3429916Z         time_of_simulation,
2025-01-07T17:55:37.3430291Z         time_explosion,
2025-01-07T17:55:37.3430627Z         v_inner,
2025-01-07T17:55:37.3430923Z         v_outer,
2025-01-07T17:55:37.3431216Z         velocity
2025-01-07T17:55:37.3431503Z     ):
2025-01-07T17:55:37.3432142Z         """
2025-01-07T17:55:37.3432724Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3433396Z     
2025-01-07T17:55:37.3433664Z         Parameters
2025-01-07T17:55:37.3433977Z         ----------
2025-01-07T17:55:37.3434313Z         last_interaction_type : np.array
2025-01-07T17:55:37.3434866Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3435480Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3435989Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3436547Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3437095Z             absorption (interaction in)
2025-01-07T17:55:37.3437543Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3438094Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3438634Z             emission (interaction out)
2025-01-07T17:55:37.3439075Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3439626Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3440196Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3440741Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3441292Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3442909Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3443567Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3444145Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3444705Z             unit of Hz
2025-01-07T17:55:37.3445082Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3447532Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3448053Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3448504Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3449022Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3450508Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3451056Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3451591Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3452275Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3452820Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3453336Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3453798Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3455255Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3455750Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3456196Z         """
2025-01-07T17:55:37.3456650Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3457282Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3457744Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3458150Z             {
2025-01-07T17:55:37.3459365Z                 "nus": packet_nus,
2025-01-07T17:55:37.3459825Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3460334Z                 "energies": packet_energies,
2025-01-07T17:55:37.3460815Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3461414Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3462189Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3463713Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3464295Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3464744Z             }
2025-01-07T17:55:37.3465021Z         )
2025-01-07T17:55:37.3465480Z     
2025-01-07T17:55:37.3465764Z         # Save other properties
2025-01-07T17:55:37.3467071Z         self.lines_df = lines_df
2025-01-07T17:55:37.3467461Z         self.r_inner = r_inner
2025-01-07T17:55:37.3467935Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3468595Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3469204Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3469760Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3470252Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3471560Z         )
2025-01-07T17:55:37.3471910Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3472568Z         self.t_inner = t_inner
2025-01-07T17:55:37.3472984Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3473464Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3473891Z         self.v_inner = v_inner
2025-01-07T17:55:37.3474234Z         self.v_outer = v_outer
2025-01-07T17:55:37.3474574Z     
2025-01-07T17:55:37.3474893Z         # First check if both options are provided
2025-01-07T17:55:37.3475492Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3476079Z >           raise ValueError(
2025-01-07T17:55:37.3476721Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3477387Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3477831Z             )
2025-01-07T17:55:37.3478304Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3478842Z 
2025-01-07T17:55:37.3480056Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3480955Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] _
2025-01-07T17:55:37.3481563Z 
2025-01-07T17:55:37.3482098Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3482470Z 
2025-01-07T17:55:37.3482563Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3482813Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3483104Z         """
2025-01-07T17:55:37.3483532Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3484038Z     
2025-01-07T17:55:37.3484309Z         Parameters:
2025-01-07T17:55:37.3484619Z         -----------
2025-01-07T17:55:37.3484993Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3485439Z     
2025-01-07T17:55:37.3485697Z         Returns:
2025-01-07T17:55:37.3485992Z         --------
2025-01-07T17:55:37.3486296Z         An LIVPlotter instance.
2025-01-07T17:55:37.3486514Z         """
2025-01-07T17:55:37.3486745Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3486968Z 
2025-01-07T17:55:37.3487115Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3488540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3489164Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3489831Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3490609Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3491064Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3491746Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3492510Z     return cls(
2025-01-07T17:55:37.3492873Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3493212Z 
2025-01-07T17:55:37.3493705Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3494472Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3495038Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3497465Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3497945Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3498348Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3498711Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3499078Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3499419Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3499876Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3501320Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3501541Z 
2025-01-07T17:55:37.3501632Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3502102Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3502479Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3502877Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3503230Z        0.00025518])
2025-01-07T17:55:37.3503640Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3504077Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3504558Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3505262Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3505848Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3506247Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3506675Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3507174Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3507563Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3507844Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3508122Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3508402Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3508730Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3509459Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3510088Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3510462Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3510878Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3511255Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3511626Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3512109Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3512441Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3512705Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3512847Z 
2025-01-07T17:55:37.3512918Z     def __init__(
2025-01-07T17:55:37.3513096Z         self,
2025-01-07T17:55:37.3513279Z         last_interaction_type,
2025-01-07T17:55:37.3513522Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3513853Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3514382Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3514786Z         last_interaction_in_r,
2025-01-07T17:55:37.3515150Z         lines_df,
2025-01-07T17:55:37.3515331Z         packet_nus,
2025-01-07T17:55:37.3515519Z         packet_energies,
2025-01-07T17:55:37.3515716Z         r_inner,
2025-01-07T17:55:37.3515911Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3516247Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3516618Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3516873Z         spectrum_wavelength,
2025-01-07T17:55:37.3517083Z         t_inner,
2025-01-07T17:55:37.3517265Z         time_of_simulation,
2025-01-07T17:55:37.3517475Z         time_explosion,
2025-01-07T17:55:37.3517666Z         v_inner,
2025-01-07T17:55:37.3517839Z         v_outer,
2025-01-07T17:55:37.3518018Z         velocity
2025-01-07T17:55:37.3518192Z     ):
2025-01-07T17:55:37.3518424Z         """
2025-01-07T17:55:37.3519097Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3519601Z     
2025-01-07T17:55:37.3519764Z         Parameters
2025-01-07T17:55:37.3519950Z         ----------
2025-01-07T17:55:37.3520150Z         last_interaction_type : np.array
2025-01-07T17:55:37.3520474Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3520826Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3521274Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3521603Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3521917Z             absorption (interaction in)
2025-01-07T17:55:37.3522443Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3522776Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3523365Z             emission (interaction out)
2025-01-07T17:55:37.3523804Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3524213Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3524549Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3524869Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3525188Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3525499Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3525842Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3526166Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3526481Z             unit of Hz
2025-01-07T17:55:37.3526693Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3527000Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3527304Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3527774Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3528293Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3528725Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3529051Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3529362Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3529665Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3529978Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3530289Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3530569Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3530868Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3531155Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3531417Z         """
2025-01-07T17:55:37.3531689Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3532315Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3532906Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3533294Z             {
2025-01-07T17:55:37.3533633Z                 "nus": packet_nus,
2025-01-07T17:55:37.3533911Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3534212Z                 "energies": packet_energies,
2025-01-07T17:55:37.3534502Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3534849Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3535227Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3535593Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3535929Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3536189Z             }
2025-01-07T17:55:37.3536355Z         )
2025-01-07T17:55:37.3536516Z     
2025-01-07T17:55:37.3536689Z         # Save other properties
2025-01-07T17:55:37.3537173Z         self.lines_df = lines_df
2025-01-07T17:55:37.3537559Z         self.r_inner = r_inner
2025-01-07T17:55:37.3537977Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3538339Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3538703Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3539025Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3539447Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3539693Z         )
2025-01-07T17:55:37.3539902Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3540177Z         self.t_inner = t_inner
2025-01-07T17:55:37.3540424Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3540709Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3540959Z         self.v_inner = v_inner
2025-01-07T17:55:37.3541185Z         self.v_outer = v_outer
2025-01-07T17:55:37.3541597Z     
2025-01-07T17:55:37.3541916Z         # First check if both options are provided
2025-01-07T17:55:37.3542603Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3542945Z >           raise ValueError(
2025-01-07T17:55:37.3543327Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3543715Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3544030Z             )
2025-01-07T17:55:37.3544481Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3544918Z 
2025-01-07T17:55:37.3545111Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3545638Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_colors] _
2025-01-07T17:55:37.3545991Z 
2025-01-07T17:55:37.3546444Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3546990Z 
2025-01-07T17:55:37.3547148Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3547406Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3547636Z         """
2025-01-07T17:55:37.3547878Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3548176Z     
2025-01-07T17:55:37.3548334Z         Parameters:
2025-01-07T17:55:37.3548517Z         -----------
2025-01-07T17:55:37.3548743Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3549009Z     
2025-01-07T17:55:37.3549172Z         Returns:
2025-01-07T17:55:37.3549349Z         --------
2025-01-07T17:55:37.3549538Z         An LIVPlotter instance.
2025-01-07T17:55:37.3549751Z         """
2025-01-07T17:55:37.3549978Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3550195Z 
2025-01-07T17:55:37.3550342Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3550717Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3551538Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3552251Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3552705Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3553138Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3553558Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3553905Z     return cls(
2025-01-07T17:55:37.3554119Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3554319Z 
2025-01-07T17:55:37.3554598Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3555225Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3555917Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3556518Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3556981Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3557366Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3557727Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3558230Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3558577Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3558939Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3559256Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3559451Z 
2025-01-07T17:55:37.3559543Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3559920Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3560532Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3561090Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3561445Z        0.00025518])
2025-01-07T17:55:37.3561710Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3562351Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3562762Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3563098Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3563515Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3563923Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3564565Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3565362Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3565757Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3566041Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3566311Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3566592Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3566910Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3567327Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3567711Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3568068Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3568501Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3569066Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3569855Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3570238Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3570562Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3570823Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3570965Z 
2025-01-07T17:55:37.3571038Z     def __init__(
2025-01-07T17:55:37.3571216Z         self,
2025-01-07T17:55:37.3571400Z         last_interaction_type,
2025-01-07T17:55:37.3571631Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3571878Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3572240Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3572478Z         last_interaction_in_r,
2025-01-07T17:55:37.3572689Z         lines_df,
2025-01-07T17:55:37.3572868Z         packet_nus,
2025-01-07T17:55:37.3573057Z         packet_energies,
2025-01-07T17:55:37.3573285Z         r_inner,
2025-01-07T17:55:37.3573627Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3574191Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3574649Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3574911Z         spectrum_wavelength,
2025-01-07T17:55:37.3575120Z         t_inner,
2025-01-07T17:55:37.3575303Z         time_of_simulation,
2025-01-07T17:55:37.3575646Z         time_explosion,
2025-01-07T17:55:37.3575842Z         v_inner,
2025-01-07T17:55:37.3576024Z         v_outer,
2025-01-07T17:55:37.3576195Z         velocity
2025-01-07T17:55:37.3576363Z     ):
2025-01-07T17:55:37.3576520Z         """
2025-01-07T17:55:37.3576843Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3577227Z     
2025-01-07T17:55:37.3577410Z         Parameters
2025-01-07T17:55:37.3577743Z         ----------
2025-01-07T17:55:37.3578077Z         last_interaction_type : np.array
2025-01-07T17:55:37.3578623Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3579038Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3579334Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3579657Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3579982Z             absorption (interaction in)
2025-01-07T17:55:37.3580256Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3580575Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3580881Z             emission (interaction out)
2025-01-07T17:55:37.3581135Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3581457Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3581785Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3582474Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3583026Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3583539Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3584113Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3584664Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3585212Z             unit of Hz
2025-01-07T17:55:37.3585506Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3585812Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3586110Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3586510Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3587015Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3587546Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3588078Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3588603Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3589303Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3589697Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3590008Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3590407Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3590921Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3591412Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3591856Z         """
2025-01-07T17:55:37.3592447Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3593069Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3593546Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3593788Z             {
2025-01-07T17:55:37.3593967Z                 "nus": packet_nus,
2025-01-07T17:55:37.3594238Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3594592Z                 "energies": packet_energies,
2025-01-07T17:55:37.3595086Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3595685Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3596345Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3597176Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3597782Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3598068Z             }
2025-01-07T17:55:37.3598235Z         )
2025-01-07T17:55:37.3598397Z     
2025-01-07T17:55:37.3598569Z         # Save other properties
2025-01-07T17:55:37.3598798Z         self.lines_df = lines_df
2025-01-07T17:55:37.3599027Z         self.r_inner = r_inner
2025-01-07T17:55:37.3599308Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3599676Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3600033Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3600355Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3600644Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3600885Z         )
2025-01-07T17:55:37.3601093Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3601371Z         self.t_inner = t_inner
2025-01-07T17:55:37.3601624Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3601913Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3602397Z         self.v_inner = v_inner
2025-01-07T17:55:37.3602610Z         self.v_outer = v_outer
2025-01-07T17:55:37.3602843Z     
2025-01-07T17:55:37.3603173Z         # First check if both options are provided
2025-01-07T17:55:37.3603776Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3604219Z >           raise ValueError(
2025-01-07T17:55:37.3604507Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3604890Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3605201Z             )
2025-01-07T17:55:37.3605655Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3606127Z 
2025-01-07T17:55:37.3606303Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3607167Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-new_bin_edges] _
2025-01-07T17:55:37.3607718Z 
2025-01-07T17:55:37.3607943Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3608247Z 
2025-01-07T17:55:37.3608340Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3608588Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3608820Z         """
2025-01-07T17:55:37.3609201Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3609503Z     
2025-01-07T17:55:37.3609662Z         Parameters:
2025-01-07T17:55:37.3609847Z         -----------
2025-01-07T17:55:37.3610072Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3610339Z     
2025-01-07T17:55:37.3610498Z         Returns:
2025-01-07T17:55:37.3610674Z         --------
2025-01-07T17:55:37.3610866Z         An LIVPlotter instance.
2025-01-07T17:55:37.3611078Z         """
2025-01-07T17:55:37.3611307Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3611531Z 
2025-01-07T17:55:37.3611669Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3612124Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3612479Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3612862Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3613314Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3613750Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3614164Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3614516Z     return cls(
2025-01-07T17:55:37.3614845Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3615051Z 
2025-01-07T17:55:37.3615334Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3615848Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3616246Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3616686Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3617147Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3617538Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3617904Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3618272Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3618612Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3618975Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3619292Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3619493Z 
2025-01-07T17:55:37.3619569Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3619864Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3620228Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3620608Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3620964Z        0.00025518])
2025-01-07T17:55:37.3621237Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3621676Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3622188Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3622524Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3622938Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3623337Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3623756Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3624261Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3624652Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3625389Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3625848Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3626337Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3626882Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3627600Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3628254Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3628871Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3629525Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3629916Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3630290Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3630675Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3631010Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3631278Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3631416Z 
2025-01-07T17:55:37.3631491Z     def __init__(
2025-01-07T17:55:37.3631671Z         self,
2025-01-07T17:55:37.3631858Z         last_interaction_type,
2025-01-07T17:55:37.3632450Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3632707Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3632953Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3633192Z         last_interaction_in_r,
2025-01-07T17:55:37.3633403Z         lines_df,
2025-01-07T17:55:37.3633584Z         packet_nus,
2025-01-07T17:55:37.3633776Z         packet_energies,
2025-01-07T17:55:37.3633977Z         r_inner,
2025-01-07T17:55:37.3634170Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3634507Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3634874Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3635124Z         spectrum_wavelength,
2025-01-07T17:55:37.3635366Z         t_inner,
2025-01-07T17:55:37.3635685Z         time_of_simulation,
2025-01-07T17:55:37.3636038Z         time_explosion,
2025-01-07T17:55:37.3636361Z         v_inner,
2025-01-07T17:55:37.3636650Z         v_outer,
2025-01-07T17:55:37.3636946Z         velocity
2025-01-07T17:55:37.3637233Z     ):
2025-01-07T17:55:37.3637492Z         """
2025-01-07T17:55:37.3638048Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3638728Z     
2025-01-07T17:55:37.3638898Z         Parameters
2025-01-07T17:55:37.3638970Z         ----------
2025-01-07T17:55:37.3639066Z         last_interaction_type : np.array
2025-01-07T17:55:37.3639217Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3639337Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3639439Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3639588Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3639675Z             absorption (interaction in)
2025-01-07T17:55:37.3639778Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3639918Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3640014Z             emission (interaction out)
2025-01-07T17:55:37.3640107Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3640265Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3640362Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3640513Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3640601Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3640757Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3640983Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3641155Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3641228Z             unit of Hz
2025-01-07T17:55:37.3641321Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3641456Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3641544Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3641658Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3641768Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3641900Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3642232Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3642361Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3642464Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3642601Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3642694Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3642816Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3642916Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3643027Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3643097Z         """
2025-01-07T17:55:37.3643394Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3643508Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3643600Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3643675Z             {
2025-01-07T17:55:37.3643756Z                 "nus": packet_nus,
2025-01-07T17:55:37.3643879Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3643974Z                 "energies": packet_energies,
2025-01-07T17:55:37.3644090Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3644240Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3644389Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3644535Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3644646Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3644718Z             }
2025-01-07T17:55:37.3644786Z         )
2025-01-07T17:55:37.3644856Z     
2025-01-07T17:55:37.3644938Z         # Save other properties
2025-01-07T17:55:37.3645025Z         self.lines_df = lines_df
2025-01-07T17:55:37.3645103Z         self.r_inner = r_inner
2025-01-07T17:55:37.3645248Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3645388Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3645518Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3645630Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3645729Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3645800Z         )
2025-01-07T17:55:37.3645915Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3645997Z         self.t_inner = t_inner
2025-01-07T17:55:37.3646105Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3646207Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3646284Z         self.v_inner = v_inner
2025-01-07T17:55:37.3646364Z         self.v_outer = v_outer
2025-01-07T17:55:37.3646429Z     
2025-01-07T17:55:37.3646534Z         # First check if both options are provided
2025-01-07T17:55:37.3646706Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3646790Z >           raise ValueError(
2025-01-07T17:55:37.3646931Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3647094Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3647299Z             )
2025-01-07T17:55:37.3647650Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3647657Z 
2025-01-07T17:55:37.3647840Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3648106Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] _
2025-01-07T17:55:37.3648110Z 
2025-01-07T17:55:37.3648330Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3648334Z 
2025-01-07T17:55:37.3648426Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3648523Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3648608Z         """
2025-01-07T17:55:37.3648757Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3648825Z     
2025-01-07T17:55:37.3648898Z         Parameters:
2025-01-07T17:55:37.3648975Z         -----------
2025-01-07T17:55:37.3649089Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3649158Z     
2025-01-07T17:55:37.3649227Z         Returns:
2025-01-07T17:55:37.3649301Z         --------
2025-01-07T17:55:37.3649383Z         An LIVPlotter instance.
2025-01-07T17:55:37.3649454Z         """
2025-01-07T17:55:37.3649663Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3649668Z 
2025-01-07T17:55:37.3649813Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3649925Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3650081Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3650234Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3650446Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3650583Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3650782Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3650856Z     return cls(
2025-01-07T17:55:37.3650961Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3650965Z 
2025-01-07T17:55:37.3651249Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3651387Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3651567Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3651746Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3652061Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3652170Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3652353Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3652458Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3652623Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3652739Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3652851Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3652856Z 
2025-01-07T17:55:37.3652936Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3653104Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3653210Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3653408Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3653474Z        0.00025518])
2025-01-07T17:55:37.3653632Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3653823Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3654067Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3654193Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3654400Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3654507Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3654742Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3654933Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3655045Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3655139Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3675588Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3675727Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3675929Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3676115Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3676250Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3676569Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3676750Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3676871Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3677047Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3677181Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3677294Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3677376Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3677386Z 
2025-01-07T17:55:37.3677458Z     def __init__(
2025-01-07T17:55:37.3677531Z         self,
2025-01-07T17:55:37.3677616Z         last_interaction_type,
2025-01-07T17:55:37.3677709Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3677796Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3677886Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3677972Z         last_interaction_in_r,
2025-01-07T17:55:37.3678050Z         lines_df,
2025-01-07T17:55:37.3678123Z         packet_nus,
2025-01-07T17:55:37.3678205Z         packet_energies,
2025-01-07T17:55:37.3678274Z         r_inner,
2025-01-07T17:55:37.3678363Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3678557Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3678654Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3678743Z         spectrum_wavelength,
2025-01-07T17:55:37.3678814Z         t_inner,
2025-01-07T17:55:37.3678902Z         time_of_simulation,
2025-01-07T17:55:37.3678979Z         time_explosion,
2025-01-07T17:55:37.3679053Z         v_inner,
2025-01-07T17:55:37.3679122Z         v_outer,
2025-01-07T17:55:37.3679196Z         velocity
2025-01-07T17:55:37.3679264Z     ):
2025-01-07T17:55:37.3679339Z         """
2025-01-07T17:55:37.3679578Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3679651Z     
2025-01-07T17:55:37.3679725Z         Parameters
2025-01-07T17:55:37.3679806Z         ----------
2025-01-07T17:55:37.3679901Z         last_interaction_type : np.array
2025-01-07T17:55:37.3680063Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3680190Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3680290Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3680445Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3680677Z             absorption (interaction in)
2025-01-07T17:55:37.3680784Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3680925Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3681018Z             emission (interaction out)
2025-01-07T17:55:37.3681113Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3681273Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3681367Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3681526Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3681611Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3681776Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3681875Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3682266Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3682350Z             unit of Hz
2025-01-07T17:55:37.3682454Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3682591Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3682680Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3682798Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3682906Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3683162Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3683276Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3683411Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3683511Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3683657Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3683745Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3683867Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3683973Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3684090Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3684160Z         """
2025-01-07T17:55:37.3684338Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3684445Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3684538Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3684607Z             {
2025-01-07T17:55:37.3684687Z                 "nus": packet_nus,
2025-01-07T17:55:37.3684814Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3684901Z                 "energies": packet_energies,
2025-01-07T17:55:37.3685020Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3685168Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3685309Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3685453Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3685565Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3685630Z             }
2025-01-07T17:55:37.3685694Z         )
2025-01-07T17:55:37.3685764Z     
2025-01-07T17:55:37.3685844Z         # Save other properties
2025-01-07T17:55:37.3685933Z         self.lines_df = lines_df
2025-01-07T17:55:37.3686013Z         self.r_inner = r_inner
2025-01-07T17:55:37.3686156Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3686289Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3686424Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3686540Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3686639Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3686708Z         )
2025-01-07T17:55:37.3686828Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3687027Z         self.t_inner = t_inner
2025-01-07T17:55:37.3687137Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3687231Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3687308Z         self.v_inner = v_inner
2025-01-07T17:55:37.3687386Z         self.v_outer = v_outer
2025-01-07T17:55:37.3687450Z     
2025-01-07T17:55:37.3687560Z         # First check if both options are provided
2025-01-07T17:55:37.3687735Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3687817Z >           raise ValueError(
2025-01-07T17:55:37.3687954Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3688128Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3688201Z             )
2025-01-07T17:55:37.3688567Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3688576Z 
2025-01-07T17:55:37.3688759Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3689031Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_colors] _
2025-01-07T17:55:37.3689036Z 
2025-01-07T17:55:37.3689337Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3689342Z 
2025-01-07T17:55:37.3689434Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3689532Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3689600Z         """
2025-01-07T17:55:37.3689757Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3689830Z     
2025-01-07T17:55:37.3689905Z         Parameters:
2025-01-07T17:55:37.3689987Z         -----------
2025-01-07T17:55:37.3690108Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3690183Z     
2025-01-07T17:55:37.3690252Z         Returns:
2025-01-07T17:55:37.3690334Z         --------
2025-01-07T17:55:37.3690419Z         An LIVPlotter instance.
2025-01-07T17:55:37.3690496Z         """
2025-01-07T17:55:37.3690638Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3690643Z 
2025-01-07T17:55:37.3690792Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3690905Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3691071Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3691217Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3691434Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3691566Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3691763Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3691841Z     return cls(
2025-01-07T17:55:37.3692072Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3692077Z 
2025-01-07T17:55:37.3692368Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3692510Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3692696Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3692873Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3693084Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3693192Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3693375Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3693475Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3693642Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3693884Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3694001Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3694005Z 
2025-01-07T17:55:37.3694089Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3694261Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3694378Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3694577Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3694645Z        0.00025518])
2025-01-07T17:55:37.3694808Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3695005Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3695130Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3695265Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3695477Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3695582Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3695926Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3696114Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3696238Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3696323Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3696441Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3696529Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3696686Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3696866Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3696991Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3697142Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3697307Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3697432Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3697594Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3697725Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3697836Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3697915Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3697920Z 
2025-01-07T17:55:37.3697995Z     def __init__(
2025-01-07T17:55:37.3698064Z         self,
2025-01-07T17:55:37.3698154Z         last_interaction_type,
2025-01-07T17:55:37.3698244Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3698330Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3698411Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3698493Z         last_interaction_in_r,
2025-01-07T17:55:37.3698564Z         lines_df,
2025-01-07T17:55:37.3698641Z         packet_nus,
2025-01-07T17:55:37.3698723Z         packet_energies,
2025-01-07T17:55:37.3698797Z         r_inner,
2025-01-07T17:55:37.3698881Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3699067Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3699162Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3699249Z         spectrum_wavelength,
2025-01-07T17:55:37.3699321Z         t_inner,
2025-01-07T17:55:37.3699404Z         time_of_simulation,
2025-01-07T17:55:37.3699483Z         time_explosion,
2025-01-07T17:55:37.3699552Z         v_inner,
2025-01-07T17:55:37.3699623Z         v_outer,
2025-01-07T17:55:37.3699778Z         velocity
2025-01-07T17:55:37.3699846Z     ):
2025-01-07T17:55:37.3699910Z         """
2025-01-07T17:55:37.3700148Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3700215Z     
2025-01-07T17:55:37.3700292Z         Parameters
2025-01-07T17:55:37.3700364Z         ----------
2025-01-07T17:55:37.3700467Z         last_interaction_type : np.array
2025-01-07T17:55:37.3700615Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3700738Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3700838Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3700989Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3701078Z             absorption (interaction in)
2025-01-07T17:55:37.3701181Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3701322Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3701415Z             emission (interaction out)
2025-01-07T17:55:37.3701510Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3701655Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3701752Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3702129Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3702227Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3702393Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3702487Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3702649Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3702725Z             unit of Hz
2025-01-07T17:55:37.3702821Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3702962Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3703056Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3703168Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3703280Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3703399Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3703506Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3703631Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3703729Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3703864Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3703953Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3704075Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3704176Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3704286Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3704359Z         """
2025-01-07T17:55:37.3704547Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3704652Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3704747Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3704814Z             {
2025-01-07T17:55:37.3704895Z                 "nus": packet_nus,
2025-01-07T17:55:37.3705027Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3705120Z                 "energies": packet_energies,
2025-01-07T17:55:37.3705236Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3705386Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3705524Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3705666Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3705783Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3705966Z             }
2025-01-07T17:55:37.3706037Z         )
2025-01-07T17:55:37.3706103Z     
2025-01-07T17:55:37.3706191Z         # Save other properties
2025-01-07T17:55:37.3706272Z         self.lines_df = lines_df
2025-01-07T17:55:37.3706356Z         self.r_inner = r_inner
2025-01-07T17:55:37.3706495Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3706635Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3706766Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3706875Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3706968Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3707037Z         )
2025-01-07T17:55:37.3707151Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3707234Z         self.t_inner = t_inner
2025-01-07T17:55:37.3707343Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3707450Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3707532Z         self.v_inner = v_inner
2025-01-07T17:55:37.3707609Z         self.v_outer = v_outer
2025-01-07T17:55:37.3707680Z     
2025-01-07T17:55:37.3707780Z         # First check if both options are provided
2025-01-07T17:55:37.3707964Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3708139Z >           raise ValueError(
2025-01-07T17:55:37.3708284Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3708447Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3708518Z             )
2025-01-07T17:55:37.3708874Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3708880Z 
2025-01-07T17:55:37.3709059Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3709339Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-new_bin_edges] _
2025-01-07T17:55:37.3709344Z 
2025-01-07T17:55:37.3709559Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3709564Z 
2025-01-07T17:55:37.3709651Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3709737Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3709809Z         """
2025-01-07T17:55:37.3709958Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3710029Z     
2025-01-07T17:55:37.3710103Z         Parameters:
2025-01-07T17:55:37.3710180Z         -----------
2025-01-07T17:55:37.3710295Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3710366Z     
2025-01-07T17:55:37.3710435Z         Returns:
2025-01-07T17:55:37.3710509Z         --------
2025-01-07T17:55:37.3710597Z         An LIVPlotter instance.
2025-01-07T17:55:37.3710664Z         """
2025-01-07T17:55:37.3710803Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3710811Z 
2025-01-07T17:55:37.3710948Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3711059Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3711216Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3711366Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3711576Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3711711Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3711909Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3712096Z     return cls(
2025-01-07T17:55:37.3712206Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3712210Z 
2025-01-07T17:55:37.3712488Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3712750Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3712929Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3713107Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3713309Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3713415Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3713596Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3713692Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3713855Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3713963Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3714077Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3714085Z 
2025-01-07T17:55:37.3714163Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3714329Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3714433Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3714762Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3714834Z        0.00025518])
2025-01-07T17:55:37.3714994Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3715186Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3715313Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3715447Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3715651Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3715765Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3715998Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3716195Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3716311Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3716403Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3716512Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3716606Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3716759Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3716937Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3717063Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3717215Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3717383Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3717512Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3717680Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3717805Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3717919Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3717996Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3718000Z 
2025-01-07T17:55:37.3718077Z     def __init__(
2025-01-07T17:55:37.3718146Z         self,
2025-01-07T17:55:37.3718235Z         last_interaction_type,
2025-01-07T17:55:37.3718324Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3718417Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3718589Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3718678Z         last_interaction_in_r,
2025-01-07T17:55:37.3718749Z         lines_df,
2025-01-07T17:55:37.3718831Z         packet_nus,
2025-01-07T17:55:37.3718911Z         packet_energies,
2025-01-07T17:55:37.3718992Z         r_inner,
2025-01-07T17:55:37.3719082Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3719267Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3719370Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3719452Z         spectrum_wavelength,
2025-01-07T17:55:37.3719528Z         t_inner,
2025-01-07T17:55:37.3719608Z         time_of_simulation,
2025-01-07T17:55:37.3719690Z         time_explosion,
2025-01-07T17:55:37.3719759Z         v_inner,
2025-01-07T17:55:37.3719832Z         v_outer,
2025-01-07T17:55:37.3719901Z         velocity
2025-01-07T17:55:37.3719973Z     ):
2025-01-07T17:55:37.3720042Z         """
2025-01-07T17:55:37.3720271Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3720341Z     
2025-01-07T17:55:37.3720421Z         Parameters
2025-01-07T17:55:37.3720491Z         ----------
2025-01-07T17:55:37.3720589Z         last_interaction_type : np.array
2025-01-07T17:55:37.3720744Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3720938Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3721044Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3721189Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3721283Z             absorption (interaction in)
2025-01-07T17:55:37.3721381Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3721527Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3721613Z             emission (interaction out)
2025-01-07T17:55:37.3721712Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3721864Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3722151Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3722315Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3722406Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3722573Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3722663Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3722829Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3722900Z             unit of Hz
2025-01-07T17:55:37.3722999Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3723126Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3723215Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3723327Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3723441Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3723568Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3723682Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3723805Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3723908Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3724052Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3724137Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3724265Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3724360Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3724476Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3724543Z         """
2025-01-07T17:55:37.3724721Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3724825Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3725047Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3725115Z             {
2025-01-07T17:55:37.3725200Z                 "nus": packet_nus,
2025-01-07T17:55:37.3725326Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3725424Z                 "energies": packet_energies,
2025-01-07T17:55:37.3725554Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3725703Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3725851Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3725991Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3726108Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3726176Z             }
2025-01-07T17:55:37.3726247Z         )
2025-01-07T17:55:37.3726313Z     
2025-01-07T17:55:37.3726401Z         # Save other properties
2025-01-07T17:55:37.3726486Z         self.lines_df = lines_df
2025-01-07T17:55:37.3726573Z         self.r_inner = r_inner
2025-01-07T17:55:37.3726711Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3726855Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3726986Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3727224Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3727330Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3727396Z         )
2025-01-07T17:55:37.3727518Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3727597Z         self.t_inner = t_inner
2025-01-07T17:55:37.3727711Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3727805Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3727886Z         self.v_inner = v_inner
2025-01-07T17:55:37.3727962Z         self.v_outer = v_outer
2025-01-07T17:55:37.3728037Z     
2025-01-07T17:55:37.3728138Z         # First check if both options are provided
2025-01-07T17:55:37.3728312Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3728393Z >           raise ValueError(
2025-01-07T17:55:37.3728538Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3728709Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3728777Z             )
2025-01-07T17:55:37.3729140Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3729145Z 
2025-01-07T17:55:37.3729316Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3729581Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] _
2025-01-07T17:55:37.3729585Z 
2025-01-07T17:55:37.3729798Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3729807Z 
2025-01-07T17:55:37.3729899Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3729989Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3730062Z         """
2025-01-07T17:55:37.3730218Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3730283Z     
2025-01-07T17:55:37.3730365Z         Parameters:
2025-01-07T17:55:37.3730436Z         -----------
2025-01-07T17:55:37.3730554Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3730620Z     
2025-01-07T17:55:37.3730694Z         Returns:
2025-01-07T17:55:37.3730765Z         --------
2025-01-07T17:55:37.3730853Z         An LIVPlotter instance.
2025-01-07T17:55:37.3730920Z         """
2025-01-07T17:55:37.3731057Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3731061Z 
2025-01-07T17:55:37.3731197Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3731404Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3731562Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3731713Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3732048Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3732185Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3732389Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3732462Z     return cls(
2025-01-07T17:55:37.3732572Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3732577Z 
2025-01-07T17:55:37.3732855Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3732998Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3733173Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3733356Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3733564Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3733665Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3733962Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3734062Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3734229Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3734337Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3734450Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3734455Z 
2025-01-07T17:55:37.3734532Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3734700Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3734811Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3735011Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3735086Z        0.00025518])
2025-01-07T17:55:37.3735246Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3735447Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3735568Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3735699Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3735901Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3736011Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3736244Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3736436Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3736555Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3736640Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3736753Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3736848Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3737008Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3737182Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3737309Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3737456Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3737627Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3737865Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3738029Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3738161Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3738274Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3738355Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3738359Z 
2025-01-07T17:55:37.3738430Z     def __init__(
2025-01-07T17:55:37.3738505Z         self,
2025-01-07T17:55:37.3738589Z         last_interaction_type,
2025-01-07T17:55:37.3738685Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3738771Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3738861Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3738942Z         last_interaction_in_r,
2025-01-07T17:55:37.3739019Z         lines_df,
2025-01-07T17:55:37.3739095Z         packet_nus,
2025-01-07T17:55:37.3739187Z         packet_energies,
2025-01-07T17:55:37.3739257Z         r_inner,
2025-01-07T17:55:37.3739349Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3739535Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3739633Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3739722Z         spectrum_wavelength,
2025-01-07T17:55:37.3739870Z         t_inner,
2025-01-07T17:55:37.3739959Z         time_of_simulation,
2025-01-07T17:55:37.3740036Z         time_explosion,
2025-01-07T17:55:37.3740112Z         v_inner,
2025-01-07T17:55:37.3740180Z         v_outer,
2025-01-07T17:55:37.3740252Z         velocity
2025-01-07T17:55:37.3740319Z     ):
2025-01-07T17:55:37.3740390Z         """
2025-01-07T17:55:37.3740618Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3740691Z     
2025-01-07T17:55:37.3740765Z         Parameters
2025-01-07T17:55:37.3740842Z         ----------
2025-01-07T17:55:37.3740939Z         last_interaction_type : np.array
2025-01-07T17:55:37.3741096Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3741219Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3741317Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3741473Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3741561Z             absorption (interaction in)
2025-01-07T17:55:37.3741666Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3741806Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3741897Z             emission (interaction out)
2025-01-07T17:55:37.3742103Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3742261Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3742355Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3742514Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3742598Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3742760Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3742857Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3743021Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3743097Z             unit of Hz
2025-01-07T17:55:37.3743194Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3743329Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3743415Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3743531Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3743642Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3743771Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3743879Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3744133Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3744236Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3744381Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3744472Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3744599Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3744703Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3744814Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3744891Z         """
2025-01-07T17:55:37.3745071Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3745182Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3745277Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3745351Z             {
2025-01-07T17:55:37.3745431Z                 "nus": packet_nus,
2025-01-07T17:55:37.3745570Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3745662Z                 "energies": packet_energies,
2025-01-07T17:55:37.3745788Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3745944Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3746202Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3746350Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3746463Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3746536Z             }
2025-01-07T17:55:37.3746603Z         )
2025-01-07T17:55:37.3746674Z     
2025-01-07T17:55:37.3746759Z         # Save other properties
2025-01-07T17:55:37.3746846Z         self.lines_df = lines_df
2025-01-07T17:55:37.3746925Z         self.r_inner = r_inner
2025-01-07T17:55:37.3747075Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3747217Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3747356Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3747473Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3747571Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3747645Z         )
2025-01-07T17:55:37.3747767Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3747853Z         self.t_inner = t_inner
2025-01-07T17:55:37.3747967Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3748073Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3748152Z         self.v_inner = v_inner
2025-01-07T17:55:37.3748238Z         self.v_outer = v_outer
2025-01-07T17:55:37.3748305Z     
2025-01-07T17:55:37.3748417Z         # First check if both options are provided
2025-01-07T17:55:37.3748592Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3748685Z >           raise ValueError(
2025-01-07T17:55:37.3748827Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3748998Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3749077Z             )
2025-01-07T17:55:37.3749438Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3749443Z 
2025-01-07T17:55:37.3749627Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3749901Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_colors] _
2025-01-07T17:55:37.3749906Z 
2025-01-07T17:55:37.3750129Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3750133Z 
2025-01-07T17:55:37.3750224Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3750428Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3750498Z         """
2025-01-07T17:55:37.3750653Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3750727Z     
2025-01-07T17:55:37.3750802Z         Parameters:
2025-01-07T17:55:37.3750879Z         -----------
2025-01-07T17:55:37.3750997Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3751072Z     
2025-01-07T17:55:37.3751144Z         Returns:
2025-01-07T17:55:37.3751219Z         --------
2025-01-07T17:55:37.3751302Z         An LIVPlotter instance.
2025-01-07T17:55:37.3751374Z         """
2025-01-07T17:55:37.3751504Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3751509Z 
2025-01-07T17:55:37.3751649Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3751758Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3752064Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3752220Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3752444Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3752585Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3752784Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3752975Z     return cls(
2025-01-07T17:55:37.3753087Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3753091Z 
2025-01-07T17:55:37.3753377Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3753517Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3753702Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3753879Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3754091Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3754199Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3754381Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3754483Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3754651Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3754770Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3754883Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3754887Z 
2025-01-07T17:55:37.3754970Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3755137Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3755252Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3755450Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3755523Z        0.00025518])
2025-01-07T17:55:37.3755683Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3755880Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3756011Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3756141Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3756356Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3756464Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3756701Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3756885Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3757118Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3757215Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3757324Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3757420Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3757573Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3757757Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3757882Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3758037Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3758203Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3758329Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3758489Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3758626Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3758744Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3758818Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3758823Z 
2025-01-07T17:55:37.3758900Z     def __init__(
2025-01-07T17:55:37.3759044Z         self,
2025-01-07T17:55:37.3759141Z         last_interaction_type,
2025-01-07T17:55:37.3759229Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3759320Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3759403Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3759492Z         last_interaction_in_r,
2025-01-07T17:55:37.3759560Z         lines_df,
2025-01-07T17:55:37.3759635Z         packet_nus,
2025-01-07T17:55:37.3759711Z         packet_energies,
2025-01-07T17:55:37.3759784Z         r_inner,
2025-01-07T17:55:37.3759868Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3760054Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3760154Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3760236Z         spectrum_wavelength,
2025-01-07T17:55:37.3760310Z         t_inner,
2025-01-07T17:55:37.3760389Z         time_of_simulation,
2025-01-07T17:55:37.3760468Z         time_explosion,
2025-01-07T17:55:37.3760541Z         v_inner,
2025-01-07T17:55:37.3760618Z         v_outer,
2025-01-07T17:55:37.3760688Z         velocity
2025-01-07T17:55:37.3760760Z     ):
2025-01-07T17:55:37.3760828Z         """
2025-01-07T17:55:37.3761061Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3761127Z     
2025-01-07T17:55:37.3761205Z         Parameters
2025-01-07T17:55:37.3761274Z         ----------
2025-01-07T17:55:37.3761367Z         last_interaction_type : np.array
2025-01-07T17:55:37.3761517Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3761643Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3761747Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3761892Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3762180Z             absorption (interaction in)
2025-01-07T17:55:37.3762286Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3762438Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3762526Z             emission (interaction out)
2025-01-07T17:55:37.3762625Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3762774Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3762876Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3763019Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3763107Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3763393Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3763487Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3763650Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3763721Z             unit of Hz
2025-01-07T17:55:37.3763824Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3763955Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3764044Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3764155Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3764268Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3764389Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3764499Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3764618Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3764722Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3764862Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3764953Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3765077Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3765172Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3765395Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3765466Z         """
2025-01-07T17:55:37.3765646Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3765751Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3765848Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3765915Z             {
2025-01-07T17:55:37.3765998Z                 "nus": packet_nus,
2025-01-07T17:55:37.3766131Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3766225Z                 "energies": packet_energies,
2025-01-07T17:55:37.3766346Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3766501Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3766646Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3766785Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3766908Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3766976Z             }
2025-01-07T17:55:37.3767048Z         )
2025-01-07T17:55:37.3767115Z     
2025-01-07T17:55:37.3767202Z         # Save other properties
2025-01-07T17:55:37.3767285Z         self.lines_df = lines_df
2025-01-07T17:55:37.3767370Z         self.r_inner = r_inner
2025-01-07T17:55:37.3767510Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3767649Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3767779Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3767895Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3767997Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3768065Z         )
2025-01-07T17:55:37.3768186Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3768264Z         self.t_inner = t_inner
2025-01-07T17:55:37.3768382Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3768508Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3768592Z         self.v_inner = v_inner
2025-01-07T17:55:37.3768668Z         self.v_outer = v_outer
2025-01-07T17:55:37.3768740Z     
2025-01-07T17:55:37.3768841Z         # First check if both options are provided
2025-01-07T17:55:37.3769015Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3769094Z >           raise ValueError(
2025-01-07T17:55:37.3769235Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3769482Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3769557Z             )
2025-01-07T17:55:37.3769913Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3769919Z 
2025-01-07T17:55:37.3770095Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3770378Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-new_bin_edges] _
2025-01-07T17:55:37.3770382Z 
2025-01-07T17:55:37.3770598Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3770602Z 
2025-01-07T17:55:37.3770694Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3770784Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3770857Z         """
2025-01-07T17:55:37.3771004Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3771079Z     
2025-01-07T17:55:37.3771156Z         Parameters:
2025-01-07T17:55:37.3771227Z         -----------
2025-01-07T17:55:37.3771348Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3771414Z     
2025-01-07T17:55:37.3771488Z         Returns:
2025-01-07T17:55:37.3771558Z         --------
2025-01-07T17:55:37.3771645Z         An LIVPlotter instance.
2025-01-07T17:55:37.3771790Z         """
2025-01-07T17:55:37.3772045Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3772050Z 
2025-01-07T17:55:37.3772191Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3772304Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3772462Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3772612Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3772831Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3772969Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3773169Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3773240Z     return cls(
2025-01-07T17:55:37.3773350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3773355Z 
2025-01-07T17:55:37.3773635Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3773777Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3773954Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3774131Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3774329Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3774435Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3774626Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3774721Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3774888Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3775002Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3775116Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3775121Z 
2025-01-07T17:55:37.3775198Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3775367Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3775473Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3775666Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3775739Z        0.00025518])
2025-01-07T17:55:37.3775894Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3776267Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3776388Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3776521Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3776723Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3776832Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3777058Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3777252Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3777363Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3777453Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3777569Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3777657Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3777817Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3777991Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3778245Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3778402Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3778573Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3778690Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3778856Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3778987Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3779100Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3779178Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3779183Z 
2025-01-07T17:55:37.3779254Z     def __init__(
2025-01-07T17:55:37.3779327Z         self,
2025-01-07T17:55:37.3779412Z         last_interaction_type,
2025-01-07T17:55:37.3779502Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3779591Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3779681Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3779761Z         last_interaction_in_r,
2025-01-07T17:55:37.3779836Z         lines_df,
2025-01-07T17:55:37.3779908Z         packet_nus,
2025-01-07T17:55:37.3779992Z         packet_energies,
2025-01-07T17:55:37.3780065Z         r_inner,
2025-01-07T17:55:37.3780153Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3780332Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3780432Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3780523Z         spectrum_wavelength,
2025-01-07T17:55:37.3780593Z         t_inner,
2025-01-07T17:55:37.3780677Z         time_of_simulation,
2025-01-07T17:55:37.3780752Z         time_explosion,
2025-01-07T17:55:37.3780825Z         v_inner,
2025-01-07T17:55:37.3780894Z         v_outer,
2025-01-07T17:55:37.3780968Z         velocity
2025-01-07T17:55:37.3781035Z     ):
2025-01-07T17:55:37.3781110Z         """
2025-01-07T17:55:37.3781337Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3781411Z     
2025-01-07T17:55:37.3781483Z         Parameters
2025-01-07T17:55:37.3781559Z         ----------
2025-01-07T17:55:37.3781650Z         last_interaction_type : np.array
2025-01-07T17:55:37.3781802Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3781917Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3782206Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3782487Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3782576Z             absorption (interaction in)
2025-01-07T17:55:37.3782682Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3782822Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3782914Z             emission (interaction out)
2025-01-07T17:55:37.3783011Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3783169Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3783260Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3783413Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3783495Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3783657Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3783745Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3783908Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3783988Z             unit of Hz
2025-01-07T17:55:37.3784083Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3784218Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3784302Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3784526Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3784638Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3784769Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3784875Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3784999Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3785096Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3785238Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3785327Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3785451Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3785551Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3785662Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3785736Z         """
2025-01-07T17:55:37.3785909Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3786023Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3786114Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3786186Z             {
2025-01-07T17:55:37.3786264Z                 "nus": packet_nus,
2025-01-07T17:55:37.3786393Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3786483Z                 "energies": packet_energies,
2025-01-07T17:55:37.3786606Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3786754Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3786904Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3787047Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3787158Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3787231Z             }
2025-01-07T17:55:37.3787299Z         )
2025-01-07T17:55:37.3787370Z     
2025-01-07T17:55:37.3787456Z         # Save other properties
2025-01-07T17:55:37.3787545Z         self.lines_df = lines_df
2025-01-07T17:55:37.3787624Z         self.r_inner = r_inner
2025-01-07T17:55:37.3787766Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3787900Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3788036Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3788145Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3788254Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3788415Z         )
2025-01-07T17:55:37.3788532Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3788617Z         self.t_inner = t_inner
2025-01-07T17:55:37.3788730Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3788834Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3788910Z         self.v_inner = v_inner
2025-01-07T17:55:37.3788995Z         self.v_outer = v_outer
2025-01-07T17:55:37.3789061Z     
2025-01-07T17:55:37.3789168Z         # First check if both options are provided
2025-01-07T17:55:37.3789339Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3789423Z >           raise ValueError(
2025-01-07T17:55:37.3789562Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3789729Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3789796Z             )
2025-01-07T17:55:37.3790158Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3790163Z 
2025-01-07T17:55:37.3790341Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3790602Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] _
2025-01-07T17:55:37.3790683Z 
2025-01-07T17:55:37.3790906Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3790911Z 
2025-01-07T17:55:37.3790997Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3791092Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3791159Z         """
2025-01-07T17:55:37.3791314Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3791380Z     
2025-01-07T17:55:37.3791458Z         Parameters:
2025-01-07T17:55:37.3791535Z         -----------
2025-01-07T17:55:37.3791649Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3791725Z     
2025-01-07T17:55:37.3791794Z         Returns:
2025-01-07T17:55:37.3791869Z         --------
2025-01-07T17:55:37.3792057Z         An LIVPlotter instance.
2025-01-07T17:55:37.3792134Z         """
2025-01-07T17:55:37.3792267Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3792271Z 
2025-01-07T17:55:37.3792417Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3792525Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3792688Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3792835Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3793053Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3793191Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3793386Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3793465Z     return cls(
2025-01-07T17:55:37.3793571Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3793575Z 
2025-01-07T17:55:37.3793858Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3793998Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3794176Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3794351Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3794557Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3794656Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3794844Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3794945Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3795224Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3795339Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3795450Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3795454Z 
2025-01-07T17:55:37.3795541Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3795703Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3795814Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3796008Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3796082Z        0.00025518])
2025-01-07T17:55:37.3796242Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3796436Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3796566Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3796694Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3796903Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3797005Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3797362Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3797557Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3797675Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3797760Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3797874Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3797968Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3798121Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3798305Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3798427Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3798580Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3798747Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3798868Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3799026Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3799155Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3799268Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3799341Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3799345Z 
2025-01-07T17:55:37.3799423Z     def __init__(
2025-01-07T17:55:37.3799495Z         self,
2025-01-07T17:55:37.3799582Z         last_interaction_type,
2025-01-07T17:55:37.3799668Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3799758Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3799842Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3799927Z         last_interaction_in_r,
2025-01-07T17:55:37.3800002Z         lines_df,
2025-01-07T17:55:37.3800081Z         packet_nus,
2025-01-07T17:55:37.3800166Z         packet_energies,
2025-01-07T17:55:37.3800242Z         r_inner,
2025-01-07T17:55:37.3800325Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3800508Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3800607Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3800689Z         spectrum_wavelength,
2025-01-07T17:55:37.3800763Z         t_inner,
2025-01-07T17:55:37.3800842Z         time_of_simulation,
2025-01-07T17:55:37.3801013Z         time_explosion,
2025-01-07T17:55:37.3801083Z         v_inner,
2025-01-07T17:55:37.3801156Z         v_outer,
2025-01-07T17:55:37.3801225Z         velocity
2025-01-07T17:55:37.3801297Z     ):
2025-01-07T17:55:37.3801364Z         """
2025-01-07T17:55:37.3801594Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3801659Z     
2025-01-07T17:55:37.3801739Z         Parameters
2025-01-07T17:55:37.3801810Z         ----------
2025-01-07T17:55:37.3801908Z         last_interaction_type : np.array
2025-01-07T17:55:37.3802254Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3802380Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3802478Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3802627Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3802719Z             absorption (interaction in)
2025-01-07T17:55:37.3802817Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3802969Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3803055Z             emission (interaction out)
2025-01-07T17:55:37.3803152Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3803298Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3803512Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3803668Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3803757Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3803913Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3804006Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3804170Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3804243Z             unit of Hz
2025-01-07T17:55:37.3804343Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3804474Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3804563Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3804676Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3804788Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3804916Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3805026Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3805146Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3805249Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3805385Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3805493Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3805617Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3805712Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3805829Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3805898Z         """
2025-01-07T17:55:37.3806076Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3806180Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3806275Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3806342Z             {
2025-01-07T17:55:37.3806430Z                 "nus": packet_nus,
2025-01-07T17:55:37.3806558Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3806653Z                 "energies": packet_energies,
2025-01-07T17:55:37.3806771Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3806918Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3807062Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3807201Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3807435Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3807503Z             }
2025-01-07T17:55:37.3807576Z         )
2025-01-07T17:55:37.3807644Z     
2025-01-07T17:55:37.3807732Z         # Save other properties
2025-01-07T17:55:37.3807814Z         self.lines_df = lines_df
2025-01-07T17:55:37.3807898Z         self.r_inner = r_inner
2025-01-07T17:55:37.3808041Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3808180Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3808312Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3808428Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3808523Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3808595Z         )
2025-01-07T17:55:37.3808717Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3808795Z         self.t_inner = t_inner
2025-01-07T17:55:37.3808915Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3809008Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3809090Z         self.v_inner = v_inner
2025-01-07T17:55:37.3809166Z         self.v_outer = v_outer
2025-01-07T17:55:37.3809237Z     
2025-01-07T17:55:37.3809336Z         # First check if both options are provided
2025-01-07T17:55:37.3809590Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3809672Z >           raise ValueError(
2025-01-07T17:55:37.3809815Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3809983Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3810055Z             )
2025-01-07T17:55:37.3810409Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3810419Z 
2025-01-07T17:55:37.3810594Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3810863Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_colors] _
2025-01-07T17:55:37.3810868Z 
2025-01-07T17:55:37.3811080Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3811084Z 
2025-01-07T17:55:37.3811178Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3811267Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3811340Z         """
2025-01-07T17:55:37.3811486Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3811557Z     
2025-01-07T17:55:37.3811632Z         Parameters:
2025-01-07T17:55:37.3811707Z         -----------
2025-01-07T17:55:37.3811827Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3811892Z     
2025-01-07T17:55:37.3812137Z         Returns:
2025-01-07T17:55:37.3812210Z         --------
2025-01-07T17:55:37.3812302Z         An LIVPlotter instance.
2025-01-07T17:55:37.3812369Z         """
2025-01-07T17:55:37.3812507Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3812511Z 
2025-01-07T17:55:37.3812649Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3812760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3812921Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3813070Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3813285Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3813421Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3813624Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3813696Z     return cls(
2025-01-07T17:55:37.3813807Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3813928Z 
2025-01-07T17:55:37.3814214Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3814357Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3814535Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3814720Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3814920Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3815026Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3815212Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3815308Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3815475Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3815586Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3815706Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3815711Z 
2025-01-07T17:55:37.3815788Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3815956Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3816165Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3816363Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3816440Z        0.00025518])
2025-01-07T17:55:37.3816599Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3816800Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3816924Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3817054Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3817260Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3817368Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3817599Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3817793Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3817907Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3817999Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3818111Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3818207Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3818363Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3818536Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3818666Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3818813Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3818983Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3819104Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3819267Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3819394Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3819508Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3819586Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3819590Z 
2025-01-07T17:55:37.3819662Z     def __init__(
2025-01-07T17:55:37.3819735Z         self,
2025-01-07T17:55:37.3819818Z         last_interaction_type,
2025-01-07T17:55:37.3819909Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3820080Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3820170Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3820249Z         last_interaction_in_r,
2025-01-07T17:55:37.3820323Z         lines_df,
2025-01-07T17:55:37.3820396Z         packet_nus,
2025-01-07T17:55:37.3820477Z         packet_energies,
2025-01-07T17:55:37.3820547Z         r_inner,
2025-01-07T17:55:37.3820639Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3820818Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3820917Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3821006Z         spectrum_wavelength,
2025-01-07T17:55:37.3821076Z         t_inner,
2025-01-07T17:55:37.3821164Z         time_of_simulation,
2025-01-07T17:55:37.3821239Z         time_explosion,
2025-01-07T17:55:37.3821314Z         v_inner,
2025-01-07T17:55:37.3821384Z         v_outer,
2025-01-07T17:55:37.3821459Z         velocity
2025-01-07T17:55:37.3821533Z     ):
2025-01-07T17:55:37.3821605Z         """
2025-01-07T17:55:37.3821833Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3821903Z     
2025-01-07T17:55:37.3822084Z         Parameters
2025-01-07T17:55:37.3822162Z         ----------
2025-01-07T17:55:37.3822254Z         last_interaction_type : np.array
2025-01-07T17:55:37.3822536Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3822659Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3822764Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3822908Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3823004Z             absorption (interaction in)
2025-01-07T17:55:37.3823107Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3823246Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3823337Z             emission (interaction out)
2025-01-07T17:55:37.3823436Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3823589Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3823683Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3823837Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3823923Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3824084Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3824174Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3824342Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3824418Z             unit of Hz
2025-01-07T17:55:37.3824512Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3824644Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3824728Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3824847Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3824959Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3825087Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3825194Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3825322Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3825423Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3825565Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3825648Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3825775Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3825875Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3825989Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3826061Z         """
2025-01-07T17:55:37.3826234Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3826470Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3826561Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3826636Z             {
2025-01-07T17:55:37.3826715Z                 "nus": packet_nus,
2025-01-07T17:55:37.3826846Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3826939Z                 "energies": packet_energies,
2025-01-07T17:55:37.3827063Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3827211Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3827356Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3827497Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3827608Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3827679Z             }
2025-01-07T17:55:37.3827749Z         )
2025-01-07T17:55:37.3827820Z     
2025-01-07T17:55:37.3827902Z         # Save other properties
2025-01-07T17:55:37.3827989Z         self.lines_df = lines_df
2025-01-07T17:55:37.3828069Z         self.r_inner = r_inner
2025-01-07T17:55:37.3828214Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3828346Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3828560Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3828672Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3828774Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3828841Z         )
2025-01-07T17:55:37.3828967Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3829055Z         self.t_inner = t_inner
2025-01-07T17:55:37.3829162Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3829263Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3829345Z         self.v_inner = v_inner
2025-01-07T17:55:37.3829427Z         self.v_outer = v_outer
2025-01-07T17:55:37.3829493Z     
2025-01-07T17:55:37.3829597Z         # First check if both options are provided
2025-01-07T17:55:37.3829768Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3829852Z >           raise ValueError(
2025-01-07T17:55:37.3829991Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3830161Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3830228Z             )
2025-01-07T17:55:37.3830590Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3830596Z 
2025-01-07T17:55:37.3830772Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3831042Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-new_bin_edges] _
2025-01-07T17:55:37.3831050Z 
2025-01-07T17:55:37.3831271Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3831276Z 
2025-01-07T17:55:37.3831362Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3831455Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3831523Z         """
2025-01-07T17:55:37.3831680Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3831747Z     
2025-01-07T17:55:37.3831825Z         Parameters:
2025-01-07T17:55:37.3831896Z         -----------
2025-01-07T17:55:37.3832117Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3832190Z     
2025-01-07T17:55:37.3832259Z         Returns:
2025-01-07T17:55:37.3832332Z         --------
2025-01-07T17:55:37.3832415Z         An LIVPlotter instance.
2025-01-07T17:55:37.3832487Z         """
2025-01-07T17:55:37.3832618Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3832738Z 
2025-01-07T17:55:37.3832882Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3832990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3833156Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3833302Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3833519Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3833652Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3833853Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3833928Z     return cls(
2025-01-07T17:55:37.3834032Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3834036Z 
2025-01-07T17:55:37.3834317Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3834457Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3834633Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3834809Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3835014Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3835221Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3835412Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3835515Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3835676Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3835791Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3835900Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3835908Z 
2025-01-07T17:55:37.3835988Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3836154Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3836265Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3836457Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3836534Z        0.00025518])
2025-01-07T17:55:37.3836691Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3836889Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3837015Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3837142Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3837348Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3837450Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3837691Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3837877Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3837995Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3838084Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3838197Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3838297Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3838450Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3838629Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3838751Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3838904Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3839175Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3839297Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3839454Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3839588Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3839698Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3839778Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3839782Z 
2025-01-07T17:55:37.3839861Z     def __init__(
2025-01-07T17:55:37.3839929Z         self,
2025-01-07T17:55:37.3840020Z         last_interaction_type,
2025-01-07T17:55:37.3840106Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3840197Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3840281Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3840366Z         last_interaction_in_r,
2025-01-07T17:55:37.3840438Z         lines_df,
2025-01-07T17:55:37.3840516Z         packet_nus,
2025-01-07T17:55:37.3840596Z         packet_energies,
2025-01-07T17:55:37.3840669Z         r_inner,
2025-01-07T17:55:37.3840753Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3840937Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3841111Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3841201Z         spectrum_wavelength,
2025-01-07T17:55:37.3841276Z         t_inner,
2025-01-07T17:55:37.3841358Z         time_of_simulation,
2025-01-07T17:55:37.3849566Z         time_explosion,
2025-01-07T17:55:37.3849646Z         v_inner,
2025-01-07T17:55:37.3849724Z         v_outer,
2025-01-07T17:55:37.3849801Z         velocity
2025-01-07T17:55:37.3849868Z     ):
2025-01-07T17:55:37.3849940Z         """
2025-01-07T17:55:37.3850188Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3850269Z     
2025-01-07T17:55:37.3850343Z         Parameters
2025-01-07T17:55:37.3850422Z         ----------
2025-01-07T17:55:37.3850519Z         last_interaction_type : np.array
2025-01-07T17:55:37.3850684Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3850807Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3850914Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3851063Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3851157Z             absorption (interaction in)
2025-01-07T17:55:37.3851258Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3851405Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3851499Z             emission (interaction out)
2025-01-07T17:55:37.3851595Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3851749Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3851846Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3852160Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3852247Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3852414Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3852512Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3852680Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3852753Z             unit of Hz
2025-01-07T17:55:37.3852855Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3852994Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3853085Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3853208Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3853317Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3853449Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3853758Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3853893Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3853994Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3854138Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3854228Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3854357Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3854454Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3854574Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3854642Z         """
2025-01-07T17:55:37.3854825Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3854936Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3855028Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3855104Z             {
2025-01-07T17:55:37.3855183Z                 "nus": packet_nus,
2025-01-07T17:55:37.3855318Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3855407Z                 "energies": packet_energies,
2025-01-07T17:55:37.3855537Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3855799Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3855955Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3856093Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3856218Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3856285Z             }
2025-01-07T17:55:37.3856358Z         )
2025-01-07T17:55:37.3856431Z     
2025-01-07T17:55:37.3856515Z         # Save other properties
2025-01-07T17:55:37.3856604Z         self.lines_df = lines_df
2025-01-07T17:55:37.3856687Z         self.r_inner = r_inner
2025-01-07T17:55:37.3856837Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3856974Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3857111Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3857223Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3857331Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3857400Z         )
2025-01-07T17:55:37.3857523Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3857601Z         self.t_inner = t_inner
2025-01-07T17:55:37.3857716Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3857810Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3857891Z         self.v_inner = v_inner
2025-01-07T17:55:37.3857972Z         self.v_outer = v_outer
2025-01-07T17:55:37.3858039Z     
2025-01-07T17:55:37.3858146Z         # First check if both options are provided
2025-01-07T17:55:37.3858324Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3858410Z >           raise ValueError(
2025-01-07T17:55:37.3858550Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3858718Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3858787Z             )
2025-01-07T17:55:37.3859152Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3859158Z 
2025-01-07T17:55:37.3859338Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3859605Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] _
2025-01-07T17:55:37.3859610Z 
2025-01-07T17:55:37.3859833Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3859923Z 
2025-01-07T17:55:37.3860014Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3860108Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3860175Z         """
2025-01-07T17:55:37.3860332Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3860398Z     
2025-01-07T17:55:37.3860479Z         Parameters:
2025-01-07T17:55:37.3860555Z         -----------
2025-01-07T17:55:37.3860682Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3860747Z     
2025-01-07T17:55:37.3860821Z         Returns:
2025-01-07T17:55:37.3860891Z         --------
2025-01-07T17:55:37.3860978Z         An LIVPlotter instance.
2025-01-07T17:55:37.3861044Z         """
2025-01-07T17:55:37.3861188Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3861192Z 
2025-01-07T17:55:37.3861333Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3861442Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3861612Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3861760Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3862091Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3862225Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3862542Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3862617Z     return cls(
2025-01-07T17:55:37.3862730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3862734Z 
2025-01-07T17:55:37.3863018Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3863159Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3863340Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3863516Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3863726Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3863830Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3864021Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3864117Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3864288Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3864405Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3864523Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3864528Z 
2025-01-07T17:55:37.3864612Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3864777Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3864895Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3865089Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3865163Z        0.00025518])
2025-01-07T17:55:37.3865324Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3865530Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3865654Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3865792Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3866003Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3866109Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3866355Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3866655Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3866773Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3866859Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3866976Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3867066Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3867228Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3867401Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3867528Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3867683Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3867846Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3867969Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3868131Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3868263Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3868373Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3868559Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3868565Z 
2025-01-07T17:55:37.3868640Z     def __init__(
2025-01-07T17:55:37.3868712Z         self,
2025-01-07T17:55:37.3868797Z         last_interaction_type,
2025-01-07T17:55:37.3868890Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3868981Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3869065Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3869151Z         last_interaction_in_r,
2025-01-07T17:55:37.3869220Z         lines_df,
2025-01-07T17:55:37.3869299Z         packet_nus,
2025-01-07T17:55:37.3869377Z         packet_energies,
2025-01-07T17:55:37.3869455Z         r_inner,
2025-01-07T17:55:37.3869538Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3869727Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3869824Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3869911Z         spectrum_wavelength,
2025-01-07T17:55:37.3869980Z         t_inner,
2025-01-07T17:55:37.3870064Z         time_of_simulation,
2025-01-07T17:55:37.3870139Z         time_explosion,
2025-01-07T17:55:37.3870212Z         v_inner,
2025-01-07T17:55:37.3870279Z         v_outer,
2025-01-07T17:55:37.3870351Z         velocity
2025-01-07T17:55:37.3870416Z     ):
2025-01-07T17:55:37.3870488Z         """
2025-01-07T17:55:37.3870717Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3870787Z     
2025-01-07T17:55:37.3870858Z         Parameters
2025-01-07T17:55:37.3870933Z         ----------
2025-01-07T17:55:37.3871032Z         last_interaction_type : np.array
2025-01-07T17:55:37.3871190Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3871314Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3871410Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3871559Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3871650Z             absorption (interaction in)
2025-01-07T17:55:37.3871752Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3871893Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3872091Z             emission (interaction out)
2025-01-07T17:55:37.3872186Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3872339Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3872433Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3872584Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3872788Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3872948Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3873038Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3873198Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3873274Z             unit of Hz
2025-01-07T17:55:37.3873372Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3873504Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3873589Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3873704Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3873811Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3873940Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3874044Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3874169Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3874275Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3874410Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3874498Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3874618Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3874824Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3874937Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3875009Z         """
2025-01-07T17:55:37.3875183Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3875294Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3875388Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3875458Z             {
2025-01-07T17:55:37.3875535Z                 "nus": packet_nus,
2025-01-07T17:55:37.3875663Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3875759Z                 "energies": packet_energies,
2025-01-07T17:55:37.3875874Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3876025Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3876164Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3876310Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3876420Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3876498Z             }
2025-01-07T17:55:37.3876563Z         )
2025-01-07T17:55:37.3876633Z     
2025-01-07T17:55:37.3876717Z         # Save other properties
2025-01-07T17:55:37.3876802Z         self.lines_df = lines_df
2025-01-07T17:55:37.3876879Z         self.r_inner = r_inner
2025-01-07T17:55:37.3877022Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3877155Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3877294Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3877405Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3877499Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3877570Z         )
2025-01-07T17:55:37.3877687Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3877770Z         self.t_inner = t_inner
2025-01-07T17:55:37.3877879Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3877975Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3878051Z         self.v_inner = v_inner
2025-01-07T17:55:37.3878134Z         self.v_outer = v_outer
2025-01-07T17:55:37.3878200Z     
2025-01-07T17:55:37.3878304Z         # First check if both options are provided
2025-01-07T17:55:37.3878472Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3878555Z >           raise ValueError(
2025-01-07T17:55:37.3878803Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3878966Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3879036Z             )
2025-01-07T17:55:37.3879388Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3879392Z 
2025-01-07T17:55:37.3879566Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3879833Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_colors] _
2025-01-07T17:55:37.3879837Z 
2025-01-07T17:55:37.3880057Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3880061Z 
2025-01-07T17:55:37.3880147Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3880240Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3880310Z         """
2025-01-07T17:55:37.3880461Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3880530Z     
2025-01-07T17:55:37.3880604Z         Parameters:
2025-01-07T17:55:37.3880678Z         -----------
2025-01-07T17:55:37.3880796Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3880864Z     
2025-01-07T17:55:37.3880932Z         Returns:
2025-01-07T17:55:37.3881081Z         --------
2025-01-07T17:55:37.3881165Z         An LIVPlotter instance.
2025-01-07T17:55:37.3881235Z         """
2025-01-07T17:55:37.3881363Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3881367Z 
2025-01-07T17:55:37.3881506Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3881613Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3881778Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3882041Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3882341Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3882482Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3882680Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3882757Z     return cls(
2025-01-07T17:55:37.3882865Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3882870Z 
2025-01-07T17:55:37.3883159Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3883305Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3883488Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3883666Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3883866Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3883973Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3884157Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3884259Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3884426Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3884541Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3884651Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3884655Z 
2025-01-07T17:55:37.3884737Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3884901Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3885016Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3885213Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3885405Z        0.00025518])
2025-01-07T17:55:37.3885566Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3885757Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3885883Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3886013Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3886219Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3886320Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3886565Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3886757Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3886869Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3886963Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3887071Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3887164Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3887315Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3887596Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3887723Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3887877Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3888042Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3888162Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3888323Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3888453Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3888564Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3888636Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3888640Z 
2025-01-07T17:55:37.3888714Z     def __init__(
2025-01-07T17:55:37.3888780Z         self,
2025-01-07T17:55:37.3888874Z         last_interaction_type,
2025-01-07T17:55:37.3888958Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3889047Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3889129Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3889214Z         last_interaction_in_r,
2025-01-07T17:55:37.3889282Z         lines_df,
2025-01-07T17:55:37.3889359Z         packet_nus,
2025-01-07T17:55:37.3889436Z         packet_energies,
2025-01-07T17:55:37.3889512Z         r_inner,
2025-01-07T17:55:37.3889601Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3889782Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3889885Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3889965Z         spectrum_wavelength,
2025-01-07T17:55:37.3890038Z         t_inner,
2025-01-07T17:55:37.3890116Z         time_of_simulation,
2025-01-07T17:55:37.3890195Z         time_explosion,
2025-01-07T17:55:37.3890262Z         v_inner,
2025-01-07T17:55:37.3890334Z         v_outer,
2025-01-07T17:55:37.3890405Z         velocity
2025-01-07T17:55:37.3890475Z     ):
2025-01-07T17:55:37.3890541Z         """
2025-01-07T17:55:37.3890779Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3890845Z     
2025-01-07T17:55:37.3890922Z         Parameters
2025-01-07T17:55:37.3890991Z         ----------
2025-01-07T17:55:37.3891087Z         last_interaction_type : np.array
2025-01-07T17:55:37.3891235Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3891358Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3891563Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3891710Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3891800Z             absorption (interaction in)
2025-01-07T17:55:37.3891902Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3892160Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3892256Z             emission (interaction out)
2025-01-07T17:55:37.3892352Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3892498Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3892598Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3892742Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3892826Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3892982Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3893078Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3893236Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3893312Z             unit of Hz
2025-01-07T17:55:37.3893405Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3893537Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3893739Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3893856Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3893967Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3894091Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3894199Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3894320Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3894423Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3894557Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3894648Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3894766Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3894863Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3894973Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3895090Z         """
2025-01-07T17:55:37.3895403Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3895511Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3895607Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3895674Z             {
2025-01-07T17:55:37.3895754Z                 "nus": packet_nus,
2025-01-07T17:55:37.3895876Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3895981Z                 "energies": packet_energies,
2025-01-07T17:55:37.3896194Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3896368Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3896508Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3896649Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3896760Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3896862Z             }
2025-01-07T17:55:37.3896998Z         )
2025-01-07T17:55:37.3897082Z     
2025-01-07T17:55:37.3897171Z         # Save other properties
2025-01-07T17:55:37.3897252Z         self.lines_df = lines_df
2025-01-07T17:55:37.3897334Z         self.r_inner = r_inner
2025-01-07T17:55:37.3897475Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3897612Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3897838Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3897958Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3898190Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3898261Z         )
2025-01-07T17:55:37.3898376Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3898457Z         self.t_inner = t_inner
2025-01-07T17:55:37.3898655Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3898780Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3898864Z         self.v_inner = v_inner
2025-01-07T17:55:37.3898939Z         self.v_outer = v_outer
2025-01-07T17:55:37.3899009Z     
2025-01-07T17:55:37.3899108Z         # First check if both options are provided
2025-01-07T17:55:37.3899284Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3899414Z >           raise ValueError(
2025-01-07T17:55:37.3899608Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3899773Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3899848Z             )
2025-01-07T17:55:37.3900263Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3900271Z 
2025-01-07T17:55:37.3900481Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3900865Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-new_bin_edges] _
2025-01-07T17:55:37.3900871Z 
2025-01-07T17:55:37.3901210Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3901217Z 
2025-01-07T17:55:37.3901373Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3901466Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3901537Z         """
2025-01-07T17:55:37.3901686Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3901756Z     
2025-01-07T17:55:37.3901881Z         Parameters:
2025-01-07T17:55:37.3902151Z         -----------
2025-01-07T17:55:37.3902282Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3902355Z     
2025-01-07T17:55:37.3902424Z         Returns:
2025-01-07T17:55:37.3902498Z         --------
2025-01-07T17:55:37.3902579Z         An LIVPlotter instance.
2025-01-07T17:55:37.3902650Z         """
2025-01-07T17:55:37.3902793Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3902798Z 
2025-01-07T17:55:37.3902941Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3903054Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3903213Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3903366Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3903583Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3903729Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3903930Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3904007Z     return cls(
2025-01-07T17:55:37.3904112Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3904122Z 
2025-01-07T17:55:37.3904405Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3904548Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3904722Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3904899Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3905096Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3905202Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3905382Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3905623Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3905784Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3905900Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3906019Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3906024Z 
2025-01-07T17:55:37.3906101Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3906269Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3906374Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3906578Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3906646Z        0.00025518])
2025-01-07T17:55:37.3906808Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3907006Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3907132Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3907265Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3907576Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3907688Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3907922Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3908111Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3908224Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3908313Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3908420Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3908517Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3908669Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3908846Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3908973Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3909122Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3909291Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3909409Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3909569Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3909695Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3909807Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3909884Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3909888Z 
2025-01-07T17:55:37.3909962Z     def __init__(
2025-01-07T17:55:37.3910031Z         self,
2025-01-07T17:55:37.3910120Z         last_interaction_type,
2025-01-07T17:55:37.3910210Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3910294Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3910384Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3910463Z         last_interaction_in_r,
2025-01-07T17:55:37.3910535Z         lines_df,
2025-01-07T17:55:37.3910607Z         packet_nus,
2025-01-07T17:55:37.3910690Z         packet_energies,
2025-01-07T17:55:37.3910758Z         r_inner,
2025-01-07T17:55:37.3910846Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3911022Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3911123Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3911206Z         spectrum_wavelength,
2025-01-07T17:55:37.3911387Z         t_inner,
2025-01-07T17:55:37.3911465Z         time_of_simulation,
2025-01-07T17:55:37.3911548Z         time_explosion,
2025-01-07T17:55:37.3911615Z         v_inner,
2025-01-07T17:55:37.3911687Z         v_outer,
2025-01-07T17:55:37.3911759Z         velocity
2025-01-07T17:55:37.3911825Z     ):
2025-01-07T17:55:37.3911896Z         """
2025-01-07T17:55:37.3912297Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3912370Z     
2025-01-07T17:55:37.3912444Z         Parameters
2025-01-07T17:55:37.3912519Z         ----------
2025-01-07T17:55:37.3912610Z         last_interaction_type : np.array
2025-01-07T17:55:37.3912763Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3912879Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3912981Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3913124Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3913221Z             absorption (interaction in)
2025-01-07T17:55:37.3913318Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3913459Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3913551Z             emission (interaction out)
2025-01-07T17:55:37.3913644Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3913913Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3914010Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3914162Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3914242Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3914403Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3914490Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3914655Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3914730Z             unit of Hz
2025-01-07T17:55:37.3914829Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3914958Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3915046Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3915158Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3915267Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3915396Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3915499Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3915624Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3915722Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3915861Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3915948Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3916072Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3916168Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3916283Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3916349Z         """
2025-01-07T17:55:37.3916525Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3916632Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3916725Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3916796Z             {
2025-01-07T17:55:37.3916873Z                 "nus": packet_nus,
2025-01-07T17:55:37.3917001Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3917089Z                 "energies": packet_energies,
2025-01-07T17:55:37.3917211Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3917356Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3917499Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3917754Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3917870Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3917936Z             }
2025-01-07T17:55:37.3918006Z         )
2025-01-07T17:55:37.3918071Z     
2025-01-07T17:55:37.3918155Z         # Save other properties
2025-01-07T17:55:37.3918244Z         self.lines_df = lines_df
2025-01-07T17:55:37.3918321Z         self.r_inner = r_inner
2025-01-07T17:55:37.3918467Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3918601Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3918738Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3918843Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3918942Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3919008Z         )
2025-01-07T17:55:37.3919134Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3919213Z         self.t_inner = t_inner
2025-01-07T17:55:37.3919329Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3919421Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3919506Z         self.v_inner = v_inner
2025-01-07T17:55:37.3919586Z         self.v_outer = v_outer
2025-01-07T17:55:37.3919728Z     
2025-01-07T17:55:37.3919838Z         # First check if both options are provided
2025-01-07T17:55:37.3920008Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3920088Z >           raise ValueError(
2025-01-07T17:55:37.3920223Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3920388Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3920453Z             )
2025-01-07T17:55:37.3920809Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3920818Z 
2025-01-07T17:55:37.3920986Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3921251Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] _
2025-01-07T17:55:37.3921256Z 
2025-01-07T17:55:37.3921475Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3921480Z 
2025-01-07T17:55:37.3921568Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3921661Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3921727Z         """
2025-01-07T17:55:37.3921879Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3922086Z     
2025-01-07T17:55:37.3922211Z         Parameters:
2025-01-07T17:55:37.3922296Z         -----------
2025-01-07T17:55:37.3922418Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3922482Z     
2025-01-07T17:55:37.3922561Z         Returns:
2025-01-07T17:55:37.3922629Z         --------
2025-01-07T17:55:37.3922715Z         An LIVPlotter instance.
2025-01-07T17:55:37.3922781Z         """
2025-01-07T17:55:37.3922916Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3922921Z 
2025-01-07T17:55:37.3923061Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3923170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3923336Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3923481Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3923696Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3923825Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3924024Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3924096Z     return cls(
2025-01-07T17:55:37.3924330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3924334Z 
2025-01-07T17:55:37.3924614Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3924752Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3924934Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3925109Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3925314Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3925413Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3925599Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3925692Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3925855Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3925970Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3926083Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3926088Z 
2025-01-07T17:55:37.3926168Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3926463Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3926576Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3926769Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3926841Z        0.00025518])
2025-01-07T17:55:37.3926996Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3927192Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3927312Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3927446Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3927652Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3927752Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3927988Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3928175Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3928290Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3928373Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3928483Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3928572Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3928726Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3928899Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3929027Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3929180Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3929346Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3929466Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3929621Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3929751Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3929856Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3929933Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3929938Z 
2025-01-07T17:55:37.3930007Z     def __init__(
2025-01-07T17:55:37.3930079Z         self,
2025-01-07T17:55:37.3930249Z         last_interaction_type,
2025-01-07T17:55:37.3930338Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3930428Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3930509Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3930595Z         last_interaction_in_r,
2025-01-07T17:55:37.3930663Z         lines_df,
2025-01-07T17:55:37.3930739Z         packet_nus,
2025-01-07T17:55:37.3930819Z         packet_energies,
2025-01-07T17:55:37.3930892Z         r_inner,
2025-01-07T17:55:37.3930975Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3931156Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3931249Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3931334Z         spectrum_wavelength,
2025-01-07T17:55:37.3931403Z         t_inner,
2025-01-07T17:55:37.3931484Z         time_of_simulation,
2025-01-07T17:55:37.3931558Z         time_explosion,
2025-01-07T17:55:37.3931631Z         v_inner,
2025-01-07T17:55:37.3931703Z         v_outer,
2025-01-07T17:55:37.3931775Z         velocity
2025-01-07T17:55:37.3931840Z     ):
2025-01-07T17:55:37.3931912Z         """
2025-01-07T17:55:37.3932251Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3932318Z     
2025-01-07T17:55:37.3932393Z         Parameters
2025-01-07T17:55:37.3932461Z         ----------
2025-01-07T17:55:37.3932691Z         last_interaction_type : np.array
2025-01-07T17:55:37.3932847Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3932967Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3933061Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3933212Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3933301Z             absorption (interaction in)
2025-01-07T17:55:37.3933401Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3933543Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3933632Z             emission (interaction out)
2025-01-07T17:55:37.3933729Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3933878Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3933974Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3934121Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3934205Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3934360Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3934452Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3934607Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3934682Z             unit of Hz
2025-01-07T17:55:37.3934774Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3934906Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3934991Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3935107Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3935219Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3935341Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3935457Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3935584Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3935689Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3935826Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3935918Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3936042Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3936145Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3936255Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3936446Z         """
2025-01-07T17:55:37.3936633Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3936745Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3936843Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3936911Z             {
2025-01-07T17:55:37.3936995Z                 "nus": packet_nus,
2025-01-07T17:55:37.3937121Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3937216Z                 "energies": packet_energies,
2025-01-07T17:55:37.3937334Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3937488Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3937629Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3937770Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3937879Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3937957Z             }
2025-01-07T17:55:37.3938023Z         )
2025-01-07T17:55:37.3938094Z     
2025-01-07T17:55:37.3938177Z         # Save other properties
2025-01-07T17:55:37.3938264Z         self.lines_df = lines_df
2025-01-07T17:55:37.3938348Z         self.r_inner = r_inner
2025-01-07T17:55:37.3938574Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3938716Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3938847Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3938960Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3939055Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3939126Z         )
2025-01-07T17:55:37.3939242Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3939323Z         self.t_inner = t_inner
2025-01-07T17:55:37.3939429Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3939530Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3939606Z         self.v_inner = v_inner
2025-01-07T17:55:37.3939687Z         self.v_outer = v_outer
2025-01-07T17:55:37.3939755Z     
2025-01-07T17:55:37.3939855Z         # First check if both options are provided
2025-01-07T17:55:37.3940033Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3940111Z >           raise ValueError(
2025-01-07T17:55:37.3940253Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3940414Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3940487Z             )
2025-01-07T17:55:37.3940838Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3940843Z 
2025-01-07T17:55:37.3941022Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3941294Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] _
2025-01-07T17:55:37.3941303Z 
2025-01-07T17:55:37.3941517Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3941521Z 
2025-01-07T17:55:37.3941613Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3941705Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3941777Z         """
2025-01-07T17:55:37.3942025Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3942098Z     
2025-01-07T17:55:37.3942170Z         Parameters:
2025-01-07T17:55:37.3942245Z         -----------
2025-01-07T17:55:37.3942357Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3942427Z     
2025-01-07T17:55:37.3942496Z         Returns:
2025-01-07T17:55:37.3942570Z         --------
2025-01-07T17:55:37.3942651Z         An LIVPlotter instance.
2025-01-07T17:55:37.3942723Z         """
2025-01-07T17:55:37.3942978Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3942987Z 
2025-01-07T17:55:37.3943124Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3943236Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3943393Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3943544Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3943756Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3943892Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3944093Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3944167Z     return cls(
2025-01-07T17:55:37.3944271Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3944276Z 
2025-01-07T17:55:37.3944559Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3944703Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3944874Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3945054Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3945360Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3945471Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3945650Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3945750Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3945913Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3946028Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3946145Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3946150Z 
2025-01-07T17:55:37.3946225Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3946391Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3946493Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3946695Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3946763Z        0.00025518])
2025-01-07T17:55:37.3946926Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3947119Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3947243Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3947370Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3947576Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3947686Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3947913Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3948104Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3948218Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3948309Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3948418Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3948513Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3948665Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3948844Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3948967Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3949230Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3949398Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3949516Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3949680Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3949805Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3949918Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3949989Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3949993Z 
2025-01-07T17:55:37.3950068Z     def __init__(
2025-01-07T17:55:37.3950135Z         self,
2025-01-07T17:55:37.3950221Z         last_interaction_type,
2025-01-07T17:55:37.3950306Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3950399Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3950491Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3950570Z         last_interaction_in_r,
2025-01-07T17:55:37.3950643Z         lines_df,
2025-01-07T17:55:37.3950718Z         packet_nus,
2025-01-07T17:55:37.3950798Z         packet_energies,
2025-01-07T17:55:37.3950867Z         r_inner,
2025-01-07T17:55:37.3950955Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3951213Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3951316Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3951397Z         spectrum_wavelength,
2025-01-07T17:55:37.3951471Z         t_inner,
2025-01-07T17:55:37.3951548Z         time_of_simulation,
2025-01-07T17:55:37.3951628Z         time_explosion,
2025-01-07T17:55:37.3951695Z         v_inner,
2025-01-07T17:55:37.3951770Z         v_outer,
2025-01-07T17:55:37.3951838Z         velocity
2025-01-07T17:55:37.3951908Z     ):
2025-01-07T17:55:37.3952074Z         """
2025-01-07T17:55:37.3952310Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3952379Z     
2025-01-07T17:55:37.3952450Z         Parameters
2025-01-07T17:55:37.3952523Z         ----------
2025-01-07T17:55:37.3952614Z         last_interaction_type : np.array
2025-01-07T17:55:37.3952769Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3952885Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3952985Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3953129Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3953219Z             absorption (interaction in)
2025-01-07T17:55:37.3953315Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3953458Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3953544Z             emission (interaction out)
2025-01-07T17:55:37.3953642Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3953798Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3953892Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3954043Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3954127Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3954293Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3954381Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3954542Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3954613Z             unit of Hz
2025-01-07T17:55:37.3954711Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3954837Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3954929Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3955038Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3955272Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3955401Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3955504Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3955630Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3955727Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3955868Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3955951Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3956075Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3956169Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3956282Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3956352Z         """
2025-01-07T17:55:37.3956536Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3956639Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3956738Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3956808Z             {
2025-01-07T17:55:37.3956889Z                 "nus": packet_nus,
2025-01-07T17:55:37.3957015Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3957103Z                 "energies": packet_energies,
2025-01-07T17:55:37.3957330Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3957480Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3957626Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3957766Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3957880Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3957945Z             }
2025-01-07T17:55:37.3958015Z         )
2025-01-07T17:55:37.3958080Z     
2025-01-07T17:55:37.3958170Z         # Save other properties
2025-01-07T17:55:37.3958250Z         self.lines_df = lines_df
2025-01-07T17:55:37.3958332Z         self.r_inner = r_inner
2025-01-07T17:55:37.3958479Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3958614Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3958753Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3958860Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3958959Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3959024Z         )
2025-01-07T17:55:37.3959146Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3959223Z         self.t_inner = t_inner
2025-01-07T17:55:37.3959338Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3959431Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3959514Z         self.v_inner = v_inner
2025-01-07T17:55:37.3959588Z         self.v_outer = v_outer
2025-01-07T17:55:37.3959665Z     
2025-01-07T17:55:37.3959765Z         # First check if both options are provided
2025-01-07T17:55:37.3959941Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3960023Z >           raise ValueError(
2025-01-07T17:55:37.3960160Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3960329Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3960395Z             )
2025-01-07T17:55:37.3960753Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3960759Z 
2025-01-07T17:55:37.3960929Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3961205Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-new_bin_edges] _
2025-01-07T17:55:37.3961210Z 
2025-01-07T17:55:37.3961517Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3961521Z 
2025-01-07T17:55:37.3961616Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3961708Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3961775Z         """
2025-01-07T17:55:37.3962053Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3962175Z     
2025-01-07T17:55:37.3962256Z         Parameters:
2025-01-07T17:55:37.3962326Z         -----------
2025-01-07T17:55:37.3962450Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3962516Z     
2025-01-07T17:55:37.3962588Z         Returns:
2025-01-07T17:55:37.3962657Z         --------
2025-01-07T17:55:37.3962744Z         An LIVPlotter instance.
2025-01-07T17:55:37.3962811Z         """
2025-01-07T17:55:37.3962949Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3962954Z 
2025-01-07T17:55:37.3963099Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3963210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3963375Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3963519Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3963865Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3964003Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3964205Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3964275Z     return cls(
2025-01-07T17:55:37.3964385Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3964390Z 
2025-01-07T17:55:37.3964664Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3964806Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3964988Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3965158Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3965360Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3965462Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3965652Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3965746Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3965913Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3966024Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3966138Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3966143Z 
2025-01-07T17:55:37.3966223Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3966389Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3966498Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3966696Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3966768Z        0.00025518])
2025-01-07T17:55:37.3966926Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3967119Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3967241Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3967371Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3967573Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3967678Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3967914Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3968215Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3968331Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3968415Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3968563Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3968654Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3968810Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3968981Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3969105Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3969255Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3969417Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3969540Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3969697Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3969827Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3970026Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3970109Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3970113Z 
2025-01-07T17:55:37.3970181Z     def __init__(
2025-01-07T17:55:37.3970253Z         self,
2025-01-07T17:55:37.3970335Z         last_interaction_type,
2025-01-07T17:55:37.3970425Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3970511Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3970598Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3970684Z         last_interaction_in_r,
2025-01-07T17:55:37.3970753Z         lines_df,
2025-01-07T17:55:37.3970831Z         packet_nus,
2025-01-07T17:55:37.3970906Z         packet_energies,
2025-01-07T17:55:37.3970979Z         r_inner,
2025-01-07T17:55:37.3971063Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3971247Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3971342Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3971431Z         spectrum_wavelength,
2025-01-07T17:55:37.3971499Z         t_inner,
2025-01-07T17:55:37.3971581Z         time_of_simulation,
2025-01-07T17:55:37.3971657Z         time_explosion,
2025-01-07T17:55:37.3971729Z         v_inner,
2025-01-07T17:55:37.3971796Z         v_outer,
2025-01-07T17:55:37.3971868Z         velocity
2025-01-07T17:55:37.3972037Z     ):
2025-01-07T17:55:37.3972111Z         """
2025-01-07T17:55:37.3972337Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3972407Z     
2025-01-07T17:55:37.3972482Z         Parameters
2025-01-07T17:55:37.3972555Z         ----------
2025-01-07T17:55:37.3972650Z         last_interaction_type : np.array
2025-01-07T17:55:37.3972797Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3972915Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3973008Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3973158Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3973245Z             absorption (interaction in)
2025-01-07T17:55:37.3973346Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3973483Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3973571Z             emission (interaction out)
2025-01-07T17:55:37.3973663Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3973815Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3973916Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3974200Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3974286Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3974444Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3974536Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3974697Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3974771Z             unit of Hz
2025-01-07T17:55:37.3974864Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3974997Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3975079Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3975194Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3975300Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3975430Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3975545Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3975668Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3975771Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3975907Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3975994Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3976218Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3976324Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3976434Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3976505Z         """
2025-01-07T17:55:37.3976678Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3976785Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3976873Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3976942Z             {
2025-01-07T17:55:37.3977022Z                 "nus": packet_nus,
2025-01-07T17:55:37.3977152Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3977244Z                 "energies": packet_energies,
2025-01-07T17:55:37.3977360Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3977511Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3977653Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3977796Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3977906Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3977977Z             }
2025-01-07T17:55:37.3978042Z         )
2025-01-07T17:55:37.3978113Z     
2025-01-07T17:55:37.3978194Z         # Save other properties
2025-01-07T17:55:37.3978278Z         self.lines_df = lines_df
2025-01-07T17:55:37.3978356Z         self.r_inner = r_inner
2025-01-07T17:55:37.3978501Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3978637Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3978765Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3978876Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3978971Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3979045Z         )
2025-01-07T17:55:37.3979159Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3979241Z         self.t_inner = t_inner
2025-01-07T17:55:37.3979351Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3979448Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3979524Z         self.v_inner = v_inner
2025-01-07T17:55:37.3979603Z         self.v_outer = v_outer
2025-01-07T17:55:37.3979668Z     
2025-01-07T17:55:37.3979774Z         # First check if both options are provided
2025-01-07T17:55:37.3979946Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3980112Z >           raise ValueError(
2025-01-07T17:55:37.3980255Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.3980417Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.3980488Z             )
2025-01-07T17:55:37.3980843Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.3980847Z 
2025-01-07T17:55:37.3981024Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.3981280Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] _
2025-01-07T17:55:37.3981285Z 
2025-01-07T17:55:37.3981502Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.3981506Z 
2025-01-07T17:55:37.3981596Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.3981688Z     def plotter(simulation_simple):
2025-01-07T17:55:37.3981759Z         """
2025-01-07T17:55:37.3981908Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.3982076Z     
2025-01-07T17:55:37.3982151Z         Parameters:
2025-01-07T17:55:37.3982225Z         -----------
2025-01-07T17:55:37.3982449Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.3982521Z     
2025-01-07T17:55:37.3982590Z         Returns:
2025-01-07T17:55:37.3982664Z         --------
2025-01-07T17:55:37.3982745Z         An LIVPlotter instance.
2025-01-07T17:55:37.3982816Z         """
2025-01-07T17:55:37.3982945Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.3982950Z 
2025-01-07T17:55:37.3983089Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.3983200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3983355Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.3983511Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.3983724Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.3983861Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.3984060Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.3984135Z     return cls(
2025-01-07T17:55:37.3984239Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.3984242Z 
2025-01-07T17:55:37.3984523Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.3984664Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.3984837Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3985016Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.3985215Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3985317Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.3985495Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.3985597Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.3985755Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.3985869Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.3985980Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.3985990Z 
2025-01-07T17:55:37.3986065Z [29224 rows x 12 columns]
2025-01-07T17:55:37.3986233Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.3986336Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.3986653Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.3986721Z        0.00025518])
2025-01-07T17:55:37.3986879Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.3987071Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.3987199Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.3987324Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.3987529Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.3987628Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.3987862Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.3988049Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.3988163Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.3988254Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.3988360Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.3988453Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.3988702Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3988879Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3988999Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.3989151Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.3989320Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.3989436Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.3989600Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.3989726Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.3989837Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.3989909Z            2.000e+09] cm / s>
2025-01-07T17:55:37.3989914Z 
2025-01-07T17:55:37.3989990Z     def __init__(
2025-01-07T17:55:37.3990056Z         self,
2025-01-07T17:55:37.3990141Z         last_interaction_type,
2025-01-07T17:55:37.3990226Z         last_line_interaction_in_id,
2025-01-07T17:55:37.3990316Z         last_line_interaction_out_id,
2025-01-07T17:55:37.3990397Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.3990481Z         last_interaction_in_r,
2025-01-07T17:55:37.3990556Z         lines_df,
2025-01-07T17:55:37.3990627Z         packet_nus,
2025-01-07T17:55:37.3990711Z         packet_energies,
2025-01-07T17:55:37.3990778Z         r_inner,
2025-01-07T17:55:37.3990866Z         spectrum_delta_frequency,
2025-01-07T17:55:37.3991048Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.3991151Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.3991232Z         spectrum_wavelength,
2025-01-07T17:55:37.3991305Z         t_inner,
2025-01-07T17:55:37.3991381Z         time_of_simulation,
2025-01-07T17:55:37.3991467Z         time_explosion,
2025-01-07T17:55:37.3991535Z         v_inner,
2025-01-07T17:55:37.3991607Z         v_outer,
2025-01-07T17:55:37.3991676Z         velocity
2025-01-07T17:55:37.3991746Z     ):
2025-01-07T17:55:37.3991813Z         """
2025-01-07T17:55:37.3992139Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.3992209Z     
2025-01-07T17:55:37.3992278Z         Parameters
2025-01-07T17:55:37.3992354Z         ----------
2025-01-07T17:55:37.3992445Z         last_interaction_type : np.array
2025-01-07T17:55:37.3992597Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.3992826Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.3992927Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.3993068Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3993159Z             absorption (interaction in)
2025-01-07T17:55:37.3993259Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.3993403Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.3993488Z             emission (interaction out)
2025-01-07T17:55:37.3993586Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.3993729Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.3993826Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.3993976Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.3994057Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.3994220Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.3994307Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.3994467Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.3994536Z             unit of Hz
2025-01-07T17:55:37.3994636Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.3994889Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.3994980Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.3995089Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.3995203Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.3995327Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.3995439Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.3995567Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.3995666Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.3995805Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.3995886Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.3996010Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.3996104Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.3996220Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.3996286Z         """
2025-01-07T17:55:37.3996463Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.3996565Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.3996660Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.3996725Z             {
2025-01-07T17:55:37.3996806Z                 "nus": packet_nus,
2025-01-07T17:55:37.3996936Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.3997024Z                 "energies": packet_energies,
2025-01-07T17:55:37.3997147Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.3997295Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.3997439Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.3997582Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.3997699Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.3997764Z             }
2025-01-07T17:55:37.3997835Z         )
2025-01-07T17:55:37.3997899Z     
2025-01-07T17:55:37.3997986Z         # Save other properties
2025-01-07T17:55:37.3998066Z         self.lines_df = lines_df
2025-01-07T17:55:37.3998149Z         self.r_inner = r_inner
2025-01-07T17:55:37.3998293Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.3998423Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.3998644Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.3998751Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.3998850Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.3998916Z         )
2025-01-07T17:55:37.3999033Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.3999110Z         self.t_inner = t_inner
2025-01-07T17:55:37.3999227Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.3999321Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.3999401Z         self.v_inner = v_inner
2025-01-07T17:55:37.3999477Z         self.v_outer = v_outer
2025-01-07T17:55:37.3999546Z     
2025-01-07T17:55:37.3999647Z         # First check if both options are provided
2025-01-07T17:55:37.3999818Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.3999900Z >           raise ValueError(
2025-01-07T17:55:37.4000033Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4000202Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4000267Z             )
2025-01-07T17:55:37.4000621Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4000626Z 
2025-01-07T17:55:37.4000873Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4001149Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_colors] _
2025-01-07T17:55:37.4001154Z 
2025-01-07T17:55:37.4001368Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4001378Z 
2025-01-07T17:55:37.4001463Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4001557Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4001623Z         """
2025-01-07T17:55:37.4001772Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4001840Z     
2025-01-07T17:55:37.4001917Z         Parameters:
2025-01-07T17:55:37.4002149Z         -----------
2025-01-07T17:55:37.4002286Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4002351Z     
2025-01-07T17:55:37.4002424Z         Returns:
2025-01-07T17:55:37.4002494Z         --------
2025-01-07T17:55:37.4002586Z         An LIVPlotter instance.
2025-01-07T17:55:37.4002652Z         """
2025-01-07T17:55:37.4002787Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4002791Z 
2025-01-07T17:55:37.4002925Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4003037Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4003204Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4003350Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4003570Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4003706Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4003905Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4003976Z     return cls(
2025-01-07T17:55:37.4004088Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4004095Z 
2025-01-07T17:55:37.4004373Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4004512Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4004686Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4004860Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4005065Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4005162Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4005476Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4005569Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4005735Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4005847Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4005965Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4005969Z 
2025-01-07T17:55:37.4006046Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4006214Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4006321Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4006515Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4006587Z        0.00025518])
2025-01-07T17:55:37.4006746Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4006940Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4007060Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4007190Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4007501Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4007612Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4007844Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4008025Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4008143Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4008227Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4008343Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4008432Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4008586Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4008754Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4008882Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4009031Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4009200Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4009321Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4009478Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4009607Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4009717Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4009793Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4009797Z 
2025-01-07T17:55:37.4009866Z     def __init__(
2025-01-07T17:55:37.4009937Z         self,
2025-01-07T17:55:37.4010019Z         last_interaction_type,
2025-01-07T17:55:37.4010113Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4010202Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4010289Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4010369Z         last_interaction_in_r,
2025-01-07T17:55:37.4010443Z         lines_df,
2025-01-07T17:55:37.4010522Z         packet_nus,
2025-01-07T17:55:37.4010599Z         packet_energies,
2025-01-07T17:55:37.4010672Z         r_inner,
2025-01-07T17:55:37.4010754Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4010938Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4011031Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4011202Z         spectrum_wavelength,
2025-01-07T17:55:37.4011271Z         t_inner,
2025-01-07T17:55:37.4011352Z         time_of_simulation,
2025-01-07T17:55:37.4011428Z         time_explosion,
2025-01-07T17:55:37.4011500Z         v_inner,
2025-01-07T17:55:37.4011566Z         v_outer,
2025-01-07T17:55:37.4011638Z         velocity
2025-01-07T17:55:37.4011703Z     ):
2025-01-07T17:55:37.4011778Z         """
2025-01-07T17:55:37.4012111Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4012181Z     
2025-01-07T17:55:37.4012253Z         Parameters
2025-01-07T17:55:37.4012327Z         ----------
2025-01-07T17:55:37.4012421Z         last_interaction_type : np.array
2025-01-07T17:55:37.4012565Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4012683Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4012777Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4012928Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4013014Z             absorption (interaction in)
2025-01-07T17:55:37.4013115Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4013254Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4013455Z             emission (interaction out)
2025-01-07T17:55:37.4013551Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4013704Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4013799Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4013948Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4014033Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4014192Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4014284Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4014448Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4014523Z             unit of Hz
2025-01-07T17:55:37.4040811Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4041076Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4041216Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4041396Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4041563Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4041756Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4042095Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4042310Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4042426Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4042583Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4042672Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4042819Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4042924Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4043051Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4043120Z         """
2025-01-07T17:55:37.4043320Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4043430Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4043532Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4043600Z             {
2025-01-07T17:55:37.4043685Z                 "nus": packet_nus,
2025-01-07T17:55:37.4043817Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4043916Z                 "energies": packet_energies,
2025-01-07T17:55:37.4044042Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4044189Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4044526Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4044666Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4044787Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4044853Z             }
2025-01-07T17:55:37.4044925Z         )
2025-01-07T17:55:37.4044997Z     
2025-01-07T17:55:37.4045090Z         # Save other properties
2025-01-07T17:55:37.4045172Z         self.lines_df = lines_df
2025-01-07T17:55:37.4045256Z         self.r_inner = r_inner
2025-01-07T17:55:37.4045399Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4045543Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4045680Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4045792Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4045896Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4045968Z         )
2025-01-07T17:55:37.4046089Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4046167Z         self.t_inner = t_inner
2025-01-07T17:55:37.4046283Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4046379Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4046579Z         self.v_inner = v_inner
2025-01-07T17:55:37.4046661Z         self.v_outer = v_outer
2025-01-07T17:55:37.4046737Z     
2025-01-07T17:55:37.4046839Z         # First check if both options are provided
2025-01-07T17:55:37.4047020Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4047100Z >           raise ValueError(
2025-01-07T17:55:37.4047246Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4047411Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4047486Z             )
2025-01-07T17:55:37.4047857Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4047864Z 
2025-01-07T17:55:37.4048046Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4048327Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-new_bin_edges] _
2025-01-07T17:55:37.4048332Z 
2025-01-07T17:55:37.4048551Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4048556Z 
2025-01-07T17:55:37.4048652Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4048746Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4048816Z         """
2025-01-07T17:55:37.4048975Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4049042Z     
2025-01-07T17:55:37.4049123Z         Parameters:
2025-01-07T17:55:37.4049197Z         -----------
2025-01-07T17:55:37.4049326Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4049394Z     
2025-01-07T17:55:37.4049468Z         Returns:
2025-01-07T17:55:37.4049542Z         --------
2025-01-07T17:55:37.4049633Z         An LIVPlotter instance.
2025-01-07T17:55:37.4049701Z         """
2025-01-07T17:55:37.4049841Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4049846Z 
2025-01-07T17:55:37.4049993Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4050110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4050287Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4050439Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4050675Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4050812Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4051020Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4051184Z     return cls(
2025-01-07T17:55:37.4051297Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4051302Z 
2025-01-07T17:55:37.4051583Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4051731Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4051911Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4052300Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4052510Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4052614Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4052803Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4052904Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4053079Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4053196Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4053314Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4053319Z 
2025-01-07T17:55:37.4053539Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4053724Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4053839Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4054036Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4054113Z        0.00025518])
2025-01-07T17:55:37.4054268Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4054467Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4054592Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4054732Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4054937Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4055051Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4055286Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4055482Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4055601Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4055686Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4055803Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4055894Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4056056Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4056229Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4056355Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4056508Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4056689Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4056813Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4056976Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4057106Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4057214Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4057293Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4057409Z 
2025-01-07T17:55:37.4057483Z     def __init__(
2025-01-07T17:55:37.4057559Z         self,
2025-01-07T17:55:37.4057643Z         last_interaction_type,
2025-01-07T17:55:37.4057734Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4057821Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4057908Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4057991Z         last_interaction_in_r,
2025-01-07T17:55:37.4058065Z         lines_df,
2025-01-07T17:55:37.4058139Z         packet_nus,
2025-01-07T17:55:37.4058222Z         packet_energies,
2025-01-07T17:55:37.4058296Z         r_inner,
2025-01-07T17:55:37.4058381Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4058570Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4058667Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4058755Z         spectrum_wavelength,
2025-01-07T17:55:37.4058824Z         t_inner,
2025-01-07T17:55:37.4058909Z         time_of_simulation,
2025-01-07T17:55:37.4058992Z         time_explosion,
2025-01-07T17:55:37.4059067Z         v_inner,
2025-01-07T17:55:37.4059134Z         v_outer,
2025-01-07T17:55:37.4059209Z         velocity
2025-01-07T17:55:37.4059277Z     ):
2025-01-07T17:55:37.4059350Z         """
2025-01-07T17:55:37.4059581Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4059759Z     
2025-01-07T17:55:37.4059836Z         Parameters
2025-01-07T17:55:37.4059913Z         ----------
2025-01-07T17:55:37.4060008Z         last_interaction_type : np.array
2025-01-07T17:55:37.4060166Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4060290Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4060388Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4060541Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4060628Z             absorption (interaction in)
2025-01-07T17:55:37.4060737Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4060877Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4060970Z             emission (interaction out)
2025-01-07T17:55:37.4061065Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4061225Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4061320Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4061476Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4061565Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4061726Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4061820Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4062150Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4062233Z             unit of Hz
2025-01-07T17:55:37.4062336Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4062471Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4062561Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4062677Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4062784Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4062920Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4063027Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4063158Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4063263Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4063400Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4063489Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4063609Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4063713Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4063949Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4064026Z         """
2025-01-07T17:55:37.4064203Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4064314Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4064405Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4064483Z             {
2025-01-07T17:55:37.4064563Z                 "nus": packet_nus,
2025-01-07T17:55:37.4064697Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4064790Z                 "energies": packet_energies,
2025-01-07T17:55:37.4064917Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4065071Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4065213Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4065354Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4065469Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4065540Z             }
2025-01-07T17:55:37.4065607Z         )
2025-01-07T17:55:37.4065678Z     
2025-01-07T17:55:37.4065765Z         # Save other properties
2025-01-07T17:55:37.4065854Z         self.lines_df = lines_df
2025-01-07T17:55:37.4066043Z         self.r_inner = r_inner
2025-01-07T17:55:37.4066194Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4066326Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4066462Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4066574Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4066670Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4066741Z         )
2025-01-07T17:55:37.4066858Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4066946Z         self.t_inner = t_inner
2025-01-07T17:55:37.4067053Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4067154Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4067231Z         self.v_inner = v_inner
2025-01-07T17:55:37.4067315Z         self.v_outer = v_outer
2025-01-07T17:55:37.4067381Z     
2025-01-07T17:55:37.4067492Z         # First check if both options are provided
2025-01-07T17:55:37.4067665Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4067752Z >           raise ValueError(
2025-01-07T17:55:37.4067890Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4068059Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4068132Z             )
2025-01-07T17:55:37.4068485Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4068495Z 
2025-01-07T17:55:37.4068702Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4068965Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] _
2025-01-07T17:55:37.4068969Z 
2025-01-07T17:55:37.4069192Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4069200Z 
2025-01-07T17:55:37.4069287Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4069382Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4069455Z         """
2025-01-07T17:55:37.4069601Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4069673Z     
2025-01-07T17:55:37.4069747Z         Parameters:
2025-01-07T17:55:37.4069824Z         -----------
2025-01-07T17:55:37.4069939Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4070011Z     
2025-01-07T17:55:37.4070081Z         Returns:
2025-01-07T17:55:37.4070160Z         --------
2025-01-07T17:55:37.4070331Z         An LIVPlotter instance.
2025-01-07T17:55:37.4070405Z         """
2025-01-07T17:55:37.4070535Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4070539Z 
2025-01-07T17:55:37.4070682Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4070792Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4070956Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4071106Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4071318Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4071457Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4071652Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4071728Z     return cls(
2025-01-07T17:55:37.4071836Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4071843Z 
2025-01-07T17:55:37.4072334Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4072477Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4072659Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4072948Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4073158Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4073265Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4073454Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4073556Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4073723Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4073845Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4073957Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4073962Z 
2025-01-07T17:55:37.4074047Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4074213Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4074329Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4074530Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4074599Z        0.00025518])
2025-01-07T17:55:37.4074760Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4074956Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4075084Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4075212Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4075423Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4075526Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4075767Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4075962Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4076082Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4076175Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4076285Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4076383Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4076536Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4076714Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4076976Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4077128Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4077290Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4077420Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4077581Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4077707Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4077823Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4077896Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4077901Z 
2025-01-07T17:55:37.4077976Z     def __init__(
2025-01-07T17:55:37.4078044Z         self,
2025-01-07T17:55:37.4078133Z         last_interaction_type,
2025-01-07T17:55:37.4078223Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4078313Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4078396Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4078484Z         last_interaction_in_r,
2025-01-07T17:55:37.4078554Z         lines_df,
2025-01-07T17:55:37.4078632Z         packet_nus,
2025-01-07T17:55:37.4078710Z         packet_energies,
2025-01-07T17:55:37.4078889Z         r_inner,
2025-01-07T17:55:37.4078984Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4079165Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4079266Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4079347Z         spectrum_wavelength,
2025-01-07T17:55:37.4079420Z         t_inner,
2025-01-07T17:55:37.4079499Z         time_of_simulation,
2025-01-07T17:55:37.4079580Z         time_explosion,
2025-01-07T17:55:37.4079650Z         v_inner,
2025-01-07T17:55:37.4079722Z         v_outer,
2025-01-07T17:55:37.4079791Z         velocity
2025-01-07T17:55:37.4079872Z     ):
2025-01-07T17:55:37.4079939Z         """
2025-01-07T17:55:37.4080171Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4080238Z     
2025-01-07T17:55:37.4080316Z         Parameters
2025-01-07T17:55:37.4080389Z         ----------
2025-01-07T17:55:37.4080489Z         last_interaction_type : np.array
2025-01-07T17:55:37.4080642Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4080766Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4080869Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4081019Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4081112Z             absorption (interaction in)
2025-01-07T17:55:37.4081211Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4081354Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4081444Z             emission (interaction out)
2025-01-07T17:55:37.4081544Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4081693Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4081791Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4082103Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4082202Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4082369Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4082460Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4082640Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4082717Z             unit of Hz
2025-01-07T17:55:37.4082820Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4082955Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4083045Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4083279Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4083393Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4083515Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4083626Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4083756Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4083857Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4083996Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4084079Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4084204Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4084300Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4084412Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4084479Z         """
2025-01-07T17:55:37.4084655Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4084762Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4084855Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4084921Z             {
2025-01-07T17:55:37.4085003Z                 "nus": packet_nus,
2025-01-07T17:55:37.4085126Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4085326Z                 "energies": packet_energies,
2025-01-07T17:55:37.4085449Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4085597Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4085739Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4085875Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4085988Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4086054Z             }
2025-01-07T17:55:37.4086126Z         )
2025-01-07T17:55:37.4086189Z     
2025-01-07T17:55:37.4086275Z         # Save other properties
2025-01-07T17:55:37.4086356Z         self.lines_df = lines_df
2025-01-07T17:55:37.4086436Z         self.r_inner = r_inner
2025-01-07T17:55:37.4086578Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4086717Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4086845Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4086957Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4087055Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4087121Z         )
2025-01-07T17:55:37.4087238Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4087315Z         self.t_inner = t_inner
2025-01-07T17:55:37.4087427Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4087521Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4087606Z         self.v_inner = v_inner
2025-01-07T17:55:37.4087681Z         self.v_outer = v_outer
2025-01-07T17:55:37.4087748Z     
2025-01-07T17:55:37.4087848Z         # First check if both options are provided
2025-01-07T17:55:37.4088022Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4088102Z >           raise ValueError(
2025-01-07T17:55:37.4088241Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4088405Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4088470Z             )
2025-01-07T17:55:37.4088828Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4088833Z 
2025-01-07T17:55:37.4089005Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4089273Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] _
2025-01-07T17:55:37.4089363Z 
2025-01-07T17:55:37.4089578Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4089583Z 
2025-01-07T17:55:37.4089673Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4089759Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4089830Z         """
2025-01-07T17:55:37.4089984Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4090049Z     
2025-01-07T17:55:37.4090124Z         Parameters:
2025-01-07T17:55:37.4090193Z         -----------
2025-01-07T17:55:37.4090311Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4090376Z     
2025-01-07T17:55:37.4090446Z         Returns:
2025-01-07T17:55:37.4090513Z         --------
2025-01-07T17:55:37.4090596Z         An LIVPlotter instance.
2025-01-07T17:55:37.4090662Z         """
2025-01-07T17:55:37.4090792Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4090800Z 
2025-01-07T17:55:37.4090931Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4091042Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4091196Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4091426Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4091641Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4091774Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4092143Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4092218Z     return cls(
2025-01-07T17:55:37.4092327Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4092332Z 
2025-01-07T17:55:37.4092608Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4092754Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4092926Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4093107Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4093317Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4093419Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4093603Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4093698Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4093865Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4093979Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4094092Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4094099Z 
2025-01-07T17:55:37.4094175Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4094343Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4094451Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4094647Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4094721Z        0.00025518])
2025-01-07T17:55:37.4094874Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4095070Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4095191Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4095321Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4095528Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4095762Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4095995Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4096184Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4096301Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4096390Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4096504Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4096596Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4096757Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4096939Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4097064Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4097213Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4097386Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4097503Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4097663Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4097900Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4098013Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4098093Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4098098Z 
2025-01-07T17:55:37.4098168Z     def __init__(
2025-01-07T17:55:37.4098238Z         self,
2025-01-07T17:55:37.4098323Z         last_interaction_type,
2025-01-07T17:55:37.4098413Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4098499Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4098584Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4098668Z         last_interaction_in_r,
2025-01-07T17:55:37.4098742Z         lines_df,
2025-01-07T17:55:37.4098814Z         packet_nus,
2025-01-07T17:55:37.4098895Z         packet_energies,
2025-01-07T17:55:37.4098963Z         r_inner,
2025-01-07T17:55:37.4099050Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4099234Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4099329Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4099412Z         spectrum_wavelength,
2025-01-07T17:55:37.4099480Z         t_inner,
2025-01-07T17:55:37.4099560Z         time_of_simulation,
2025-01-07T17:55:37.4099635Z         time_explosion,
2025-01-07T17:55:37.4099707Z         v_inner,
2025-01-07T17:55:37.4099772Z         v_outer,
2025-01-07T17:55:37.4099842Z         velocity
2025-01-07T17:55:37.4099907Z     ):
2025-01-07T17:55:37.4099976Z         """
2025-01-07T17:55:37.4100201Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4100273Z     
2025-01-07T17:55:37.4100345Z         Parameters
2025-01-07T17:55:37.4100420Z         ----------
2025-01-07T17:55:37.4100511Z         last_interaction_type : np.array
2025-01-07T17:55:37.4100666Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4100784Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4100884Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4101032Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4101120Z             absorption (interaction in)
2025-01-07T17:55:37.4101222Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4101362Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4101450Z             emission (interaction out)
2025-01-07T17:55:37.4101543Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4101696Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4101891Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4102204Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4102289Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4102452Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4102551Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4102709Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4102784Z             unit of Hz
2025-01-07T17:55:37.4102880Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4103011Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4103092Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4103208Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4103315Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4103443Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4103547Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4103671Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4103768Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4104022Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4104112Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4104233Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4104329Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4104440Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4104511Z         """
2025-01-07T17:55:37.4104687Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4104795Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4104885Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4104958Z             {
2025-01-07T17:55:37.4105035Z                 "nus": packet_nus,
2025-01-07T17:55:37.4105161Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4105254Z                 "energies": packet_energies,
2025-01-07T17:55:37.4105374Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4105525Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4105665Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4105804Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4105915Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4105982Z             }
2025-01-07T17:55:37.4106047Z         )
2025-01-07T17:55:37.4106115Z     
2025-01-07T17:55:37.4106196Z         # Save other properties
2025-01-07T17:55:37.4106280Z         self.lines_df = lines_df
2025-01-07T17:55:37.4106360Z         self.r_inner = r_inner
2025-01-07T17:55:37.4106502Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4106630Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4106772Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4106880Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4106980Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4107047Z         )
2025-01-07T17:55:37.4107162Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4107243Z         self.t_inner = t_inner
2025-01-07T17:55:37.4107351Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4107447Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4107523Z         self.v_inner = v_inner
2025-01-07T17:55:37.4107601Z         self.v_outer = v_outer
2025-01-07T17:55:37.4107669Z     
2025-01-07T17:55:37.4107889Z         # First check if both options are provided
2025-01-07T17:55:37.4108057Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4108138Z >           raise ValueError(
2025-01-07T17:55:37.4108275Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4108439Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4108507Z             )
2025-01-07T17:55:37.4108860Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4108865Z 
2025-01-07T17:55:37.4109034Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4109303Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-new_bin_edges] _
2025-01-07T17:55:37.4109307Z 
2025-01-07T17:55:37.4109521Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4109529Z 
2025-01-07T17:55:37.4109613Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4109705Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4109770Z         """
2025-01-07T17:55:37.4109919Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4109989Z     
2025-01-07T17:55:37.4110063Z         Parameters:
2025-01-07T17:55:37.4110214Z         -----------
2025-01-07T17:55:37.4110331Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4110398Z     
2025-01-07T17:55:37.4110465Z         Returns:
2025-01-07T17:55:37.4110535Z         --------
2025-01-07T17:55:37.4110614Z         An LIVPlotter instance.
2025-01-07T17:55:37.4110682Z         """
2025-01-07T17:55:37.4110812Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4110817Z 
2025-01-07T17:55:37.4110956Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4111061Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4111223Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4111363Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4111575Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4111712Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4111909Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4112172Z     return cls(
2025-01-07T17:55:37.4112291Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4112296Z 
2025-01-07T17:55:37.4112582Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4112718Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4112894Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4113074Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4113276Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4113377Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4113564Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4113666Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4113825Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4113939Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4114047Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4114052Z 
2025-01-07T17:55:37.4114130Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4114293Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4114519Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4114713Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4114783Z        0.00025518])
2025-01-07T17:55:37.4114934Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4115128Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4115249Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4115373Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4115576Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4115676Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4115910Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4116098Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4116211Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4116299Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4116404Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4116599Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4116756Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4116938Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4117058Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4117206Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4117369Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4117492Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4117648Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4117776Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4117898Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4117974Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4117978Z 
2025-01-07T17:55:37.4118050Z     def __init__(
2025-01-07T17:55:37.4118119Z         self,
2025-01-07T17:55:37.4118203Z         last_interaction_type,
2025-01-07T17:55:37.4118287Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4118372Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4118456Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4118538Z         last_interaction_in_r,
2025-01-07T17:55:37.4118607Z         lines_df,
2025-01-07T17:55:37.4118682Z         packet_nus,
2025-01-07T17:55:37.4118763Z         packet_energies,
2025-01-07T17:55:37.4118835Z         r_inner,
2025-01-07T17:55:37.4118919Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4119098Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4119195Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4119275Z         spectrum_wavelength,
2025-01-07T17:55:37.4119353Z         t_inner,
2025-01-07T17:55:37.4119431Z         time_of_simulation,
2025-01-07T17:55:37.4119509Z         time_explosion,
2025-01-07T17:55:37.4119577Z         v_inner,
2025-01-07T17:55:37.4119646Z         v_outer,
2025-01-07T17:55:37.4119713Z         velocity
2025-01-07T17:55:37.4119782Z     ):
2025-01-07T17:55:37.4119848Z         """
2025-01-07T17:55:37.4120075Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4120138Z     
2025-01-07T17:55:37.4120211Z         Parameters
2025-01-07T17:55:37.4120281Z         ----------
2025-01-07T17:55:37.4120475Z         last_interaction_type : np.array
2025-01-07T17:55:37.4120623Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4120739Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4120839Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4120982Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4121077Z             absorption (interaction in)
2025-01-07T17:55:37.4121173Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4121315Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4121400Z             emission (interaction out)
2025-01-07T17:55:37.4121497Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4121645Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4121738Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4121883Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4122156Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4122322Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4122414Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4122574Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4122786Z             unit of Hz
2025-01-07T17:55:37.4122890Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4123018Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4123106Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4123216Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4123327Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4123453Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4123562Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4123685Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4123786Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4123921Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4124008Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4124130Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4124230Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4124346Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4124420Z         """
2025-01-07T17:55:37.4124603Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4124709Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4124809Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4124877Z             {
2025-01-07T17:55:37.4124960Z                 "nus": packet_nus,
2025-01-07T17:55:37.4125085Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4125184Z                 "energies": packet_energies,
2025-01-07T17:55:37.4125302Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4125458Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4125611Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4125749Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4125866Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4125933Z             }
2025-01-07T17:55:37.4126005Z         )
2025-01-07T17:55:37.4126071Z     
2025-01-07T17:55:37.4126159Z         # Save other properties
2025-01-07T17:55:37.4126241Z         self.lines_df = lines_df
2025-01-07T17:55:37.4126325Z         self.r_inner = r_inner
2025-01-07T17:55:37.4126467Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4126729Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4126862Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4126974Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4127075Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4127142Z         )
2025-01-07T17:55:37.4127266Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4127346Z         self.t_inner = t_inner
2025-01-07T17:55:37.4127460Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4127555Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4127635Z         self.v_inner = v_inner
2025-01-07T17:55:37.4127711Z         self.v_outer = v_outer
2025-01-07T17:55:37.4127782Z     
2025-01-07T17:55:37.4127883Z         # First check if both options are provided
2025-01-07T17:55:37.4128060Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4128144Z >           raise ValueError(
2025-01-07T17:55:37.4128292Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4128458Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4128530Z             )
2025-01-07T17:55:37.4128962Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4128968Z 
2025-01-07T17:55:37.4129143Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4129378Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _
2025-01-07T17:55:37.4129382Z 
2025-01-07T17:55:37.4129596Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4129600Z 
2025-01-07T17:55:37.4129695Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4129784Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4129860Z         """
2025-01-07T17:55:37.4130009Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4130080Z     
2025-01-07T17:55:37.4130159Z         Parameters:
2025-01-07T17:55:37.4130229Z         -----------
2025-01-07T17:55:37.4130349Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4130415Z     
2025-01-07T17:55:37.4130493Z         Returns:
2025-01-07T17:55:37.4130565Z         --------
2025-01-07T17:55:37.4130653Z         An LIVPlotter instance.
2025-01-07T17:55:37.4130723Z         """
2025-01-07T17:55:37.4130858Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4130863Z 
2025-01-07T17:55:37.4130999Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4131111Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4131271Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4131419Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4131636Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4131774Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4132142Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4132224Z     return cls(
2025-01-07T17:55:37.4132341Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4132346Z 
2025-01-07T17:55:37.4132627Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4132767Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4132943Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4133123Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4133320Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4133548Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4133736Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4133832Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4134005Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4134117Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4134234Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4134239Z 
2025-01-07T17:55:37.4134317Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4134486Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4134592Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4134792Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4134864Z        0.00025518])
2025-01-07T17:55:37.4135026Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4135226Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4135452Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4135588Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4135791Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4135901Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4136136Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4136328Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4136441Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4136537Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4136649Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4136747Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4136905Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4137081Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4137208Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4137355Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4137525Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4137643Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4137808Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4137938Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4138055Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4138133Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4138137Z 
2025-01-07T17:55:37.4138208Z     def __init__(
2025-01-07T17:55:37.4138281Z         self,
2025-01-07T17:55:37.4138367Z         last_interaction_type,
2025-01-07T17:55:37.4138457Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4138543Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4138633Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4138713Z         last_interaction_in_r,
2025-01-07T17:55:37.4138787Z         lines_df,
2025-01-07T17:55:37.4138859Z         packet_nus,
2025-01-07T17:55:37.4138942Z         packet_energies,
2025-01-07T17:55:37.4139012Z         r_inner,
2025-01-07T17:55:37.4139101Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4139282Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4139472Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4139559Z         spectrum_wavelength,
2025-01-07T17:55:37.4139628Z         t_inner,
2025-01-07T17:55:37.4139710Z         time_of_simulation,
2025-01-07T17:55:37.4139788Z         time_explosion,
2025-01-07T17:55:37.4139860Z         v_inner,
2025-01-07T17:55:37.4139932Z         v_outer,
2025-01-07T17:55:37.4140005Z         velocity
2025-01-07T17:55:37.4140072Z     ):
2025-01-07T17:55:37.4140144Z         """
2025-01-07T17:55:37.4140372Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4140443Z     
2025-01-07T17:55:37.4140515Z         Parameters
2025-01-07T17:55:37.4140591Z         ----------
2025-01-07T17:55:37.4140684Z         last_interaction_type : np.array
2025-01-07T17:55:37.4140840Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4140955Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4141063Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4141214Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4141303Z             absorption (interaction in)
2025-01-07T17:55:37.4141406Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4141626Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4141720Z             emission (interaction out)
2025-01-07T17:55:37.4141815Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4142075Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4142171Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4142324Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4142407Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4142574Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4142671Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4142835Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4142914Z             unit of Hz
2025-01-07T17:55:37.4143009Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4143148Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4143233Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4143349Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4143456Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4143585Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4143689Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4143817Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4143913Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4144053Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4144141Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4144268Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4144367Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4144476Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4144552Z         """
2025-01-07T17:55:37.4144727Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4144835Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4144930Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4145003Z             {
2025-01-07T17:55:37.4145081Z                 "nus": packet_nus,
2025-01-07T17:55:37.4145211Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4145302Z                 "energies": packet_energies,
2025-01-07T17:55:37.4145425Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4145692Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4145837Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4145981Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4146100Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4146172Z             }
2025-01-07T17:55:37.4146239Z         )
2025-01-07T17:55:37.4146309Z     
2025-01-07T17:55:37.4146392Z         # Save other properties
2025-01-07T17:55:37.4146479Z         self.lines_df = lines_df
2025-01-07T17:55:37.4146558Z         self.r_inner = r_inner
2025-01-07T17:55:37.4146703Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4146836Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4146980Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4147092Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4147194Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4147261Z         )
2025-01-07T17:55:37.4147382Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4147464Z         self.t_inner = t_inner
2025-01-07T17:55:37.4147573Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4147797Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4147878Z         self.v_inner = v_inner
2025-01-07T17:55:37.4147960Z         self.v_outer = v_outer
2025-01-07T17:55:37.4148025Z     
2025-01-07T17:55:37.4148132Z         # First check if both options are provided
2025-01-07T17:55:37.4148302Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4148386Z >           raise ValueError(
2025-01-07T17:55:37.4148521Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4148688Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4148759Z             )
2025-01-07T17:55:37.4149117Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4149121Z 
2025-01-07T17:55:37.4149296Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4149527Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _
2025-01-07T17:55:37.4149531Z 
2025-01-07T17:55:37.4149750Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4149754Z 
2025-01-07T17:55:37.4149841Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4149938Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4150006Z         """
2025-01-07T17:55:37.4150160Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4150225Z     
2025-01-07T17:55:37.4150307Z         Parameters:
2025-01-07T17:55:37.4150377Z         -----------
2025-01-07T17:55:37.4150497Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4150572Z     
2025-01-07T17:55:37.4150642Z         Returns:
2025-01-07T17:55:37.4150715Z         --------
2025-01-07T17:55:37.4150798Z         An LIVPlotter instance.
2025-01-07T17:55:37.4150871Z         """
2025-01-07T17:55:37.4151004Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4151008Z 
2025-01-07T17:55:37.4151146Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4151255Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4151418Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4151563Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4151779Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4151909Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4152333Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4152409Z     return cls(
2025-01-07T17:55:37.4152516Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4152520Z 
2025-01-07T17:55:37.4152809Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4152944Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4153123Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4153301Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4153506Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4153607Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4153798Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4153903Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4154066Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4154183Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4154397Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4154401Z 
2025-01-07T17:55:37.4154486Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4154650Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4154760Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4154953Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4155027Z        0.00025518])
2025-01-07T17:55:37.4155182Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4155386Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4155511Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4155637Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4155847Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4155952Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4156191Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4156377Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4156494Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4156580Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4156694Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4156790Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4156941Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4157121Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4157242Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4157397Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4157562Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4157685Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4157843Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4157973Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4158083Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4158249Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4158253Z 
2025-01-07T17:55:37.4158329Z     def __init__(
2025-01-07T17:55:37.4158398Z         self,
2025-01-07T17:55:37.4158488Z         last_interaction_type,
2025-01-07T17:55:37.4158573Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4158664Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4158749Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4158834Z         last_interaction_in_r,
2025-01-07T17:55:37.4158904Z         lines_df,
2025-01-07T17:55:37.4158982Z         packet_nus,
2025-01-07T17:55:37.4159060Z         packet_energies,
2025-01-07T17:55:37.4159134Z         r_inner,
2025-01-07T17:55:37.4159218Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4159400Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4159495Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4159583Z         spectrum_wavelength,
2025-01-07T17:55:37.4159659Z         t_inner,
2025-01-07T17:55:37.4159737Z         time_of_simulation,
2025-01-07T17:55:37.4159818Z         time_explosion,
2025-01-07T17:55:37.4159886Z         v_inner,
2025-01-07T17:55:37.4159959Z         v_outer,
2025-01-07T17:55:37.4160029Z         velocity
2025-01-07T17:55:37.4160100Z     ):
2025-01-07T17:55:37.4160167Z         """
2025-01-07T17:55:37.4160475Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4160546Z     
2025-01-07T17:55:37.4160623Z         Parameters
2025-01-07T17:55:37.4160694Z         ----------
2025-01-07T17:55:37.4160792Z         last_interaction_type : np.array
2025-01-07T17:55:37.4160943Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4161062Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4161158Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4161306Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4161402Z             absorption (interaction in)
2025-01-07T17:55:37.4161500Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4161644Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4161731Z             emission (interaction out)
2025-01-07T17:55:37.4161829Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4162131Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4162247Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4162394Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4162482Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4162640Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4162734Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4162895Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4162977Z             unit of Hz
2025-01-07T17:55:37.4163076Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4163203Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4163294Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4163407Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4163523Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4163650Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4163761Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4163884Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4163994Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4164131Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4164224Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4164345Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4164569Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4164685Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4164754Z         """
2025-01-07T17:55:37.4164937Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4165042Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4165143Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4165213Z             {
2025-01-07T17:55:37.4165298Z                 "nus": packet_nus,
2025-01-07T17:55:37.4165424Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4165525Z                 "energies": packet_energies,
2025-01-07T17:55:37.4165646Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4165802Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4165945Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4166094Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4166212Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4166280Z             }
2025-01-07T17:55:37.4166353Z         )
2025-01-07T17:55:37.4166418Z     
2025-01-07T17:55:37.4166510Z         # Save other properties
2025-01-07T17:55:37.4166698Z         self.lines_df = lines_df
2025-01-07T17:55:37.4166787Z         self.r_inner = r_inner
2025-01-07T17:55:37.4166929Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4167070Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4167202Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4167316Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4167413Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4167485Z         )
2025-01-07T17:55:37.4167607Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4167693Z         self.t_inner = t_inner
2025-01-07T17:55:37.4167807Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4167901Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4167983Z         self.v_inner = v_inner
2025-01-07T17:55:37.4168060Z         self.v_outer = v_outer
2025-01-07T17:55:37.4168134Z     
2025-01-07T17:55:37.4168236Z         # First check if both options are provided
2025-01-07T17:55:37.4168413Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4168493Z >           raise ValueError(
2025-01-07T17:55:37.4168667Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4168832Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4168905Z             )
2025-01-07T17:55:37.4169259Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4169272Z 
2025-01-07T17:55:37.4169445Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4169680Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl2] _
2025-01-07T17:55:37.4169684Z 
2025-01-07T17:55:37.4169904Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4169908Z 
2025-01-07T17:55:37.4170002Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4170092Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4170165Z         """
2025-01-07T17:55:37.4170316Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4170388Z     
2025-01-07T17:55:37.4170462Z         Parameters:
2025-01-07T17:55:37.4170540Z         -----------
2025-01-07T17:55:37.4170655Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4170726Z     
2025-01-07T17:55:37.4170905Z         Returns:
2025-01-07T17:55:37.4170975Z         --------
2025-01-07T17:55:37.4171064Z         An LIVPlotter instance.
2025-01-07T17:55:37.4171131Z         """
2025-01-07T17:55:37.4171269Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4171274Z 
2025-01-07T17:55:37.4171409Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4171525Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4171683Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4171831Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4172218Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4172359Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4172563Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4172634Z     return cls(
2025-01-07T17:55:37.4172749Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4172753Z 
2025-01-07T17:55:37.4173036Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4173176Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4173468Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4173654Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4173859Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4173965Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4174149Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4174249Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4174417Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4174533Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4174649Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4174653Z 
2025-01-07T17:55:37.4174729Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4174902Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4175008Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4175212Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4175280Z        0.00025518])
2025-01-07T17:55:37.4175441Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4175640Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4175761Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4175899Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4176102Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4176211Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4176444Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4176634Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4176748Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4176840Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4176950Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4177050Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4177210Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4177384Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4177628Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4177776Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4177950Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4178071Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4178236Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4178363Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4178474Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4178553Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4178557Z 
2025-01-07T17:55:37.4178629Z     def __init__(
2025-01-07T17:55:37.4178703Z         self,
2025-01-07T17:55:37.4178791Z         last_interaction_type,
2025-01-07T17:55:37.4178885Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4178972Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4179060Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4179140Z         last_interaction_in_r,
2025-01-07T17:55:37.4179215Z         lines_df,
2025-01-07T17:55:37.4179287Z         packet_nus,
2025-01-07T17:55:37.4179448Z         packet_energies,
2025-01-07T17:55:37.4179520Z         r_inner,
2025-01-07T17:55:37.4179612Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4179791Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4179893Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4179974Z         spectrum_wavelength,
2025-01-07T17:55:37.4180049Z         t_inner,
2025-01-07T17:55:37.4180131Z         time_of_simulation,
2025-01-07T17:55:37.4180208Z         time_explosion,
2025-01-07T17:55:37.4180282Z         v_inner,
2025-01-07T17:55:37.4180353Z         v_outer,
2025-01-07T17:55:37.4180426Z         velocity
2025-01-07T17:55:37.4180493Z     ):
2025-01-07T17:55:37.4180566Z         """
2025-01-07T17:55:37.4180790Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4180860Z     
2025-01-07T17:55:37.4180932Z         Parameters
2025-01-07T17:55:37.4181008Z         ----------
2025-01-07T17:55:37.4181104Z         last_interaction_type : np.array
2025-01-07T17:55:37.4181261Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4181379Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4181480Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4181627Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4181720Z             absorption (interaction in)
2025-01-07T17:55:37.4181823Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4182082Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4182177Z             emission (interaction out)
2025-01-07T17:55:37.4182272Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4182424Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4182517Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4182672Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4182755Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4182920Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4183009Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4183175Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4183250Z             unit of Hz
2025-01-07T17:55:37.4183350Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4183484Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4183707Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4183824Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4183931Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4184059Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4184170Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4184295Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4184393Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4184533Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4184616Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4184742Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4184837Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4184956Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4185032Z         """
2025-01-07T17:55:37.4185203Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4185309Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4185400Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4185473Z             {
2025-01-07T17:55:37.4185552Z                 "nus": packet_nus,
2025-01-07T17:55:37.4185791Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4185885Z                 "energies": packet_energies,
2025-01-07T17:55:37.4186007Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4186153Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4186300Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4186443Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4186560Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4186637Z             }
2025-01-07T17:55:37.4186706Z         )
2025-01-07T17:55:37.4186776Z     
2025-01-07T17:55:37.4186860Z         # Save other properties
2025-01-07T17:55:37.4186948Z         self.lines_df = lines_df
2025-01-07T17:55:37.4187028Z         self.r_inner = r_inner
2025-01-07T17:55:37.4187181Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4187314Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4187450Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4187559Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4187659Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4187726Z         )
2025-01-07T17:55:37.4187847Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4187926Z         self.t_inner = t_inner
2025-01-07T17:55:37.4188042Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4188143Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4188222Z         self.v_inner = v_inner
2025-01-07T17:55:37.4188305Z         self.v_outer = v_outer
2025-01-07T17:55:37.4188371Z     
2025-01-07T17:55:37.4188477Z         # First check if both options are provided
2025-01-07T17:55:37.4188652Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4188737Z >           raise ValueError(
2025-01-07T17:55:37.4188875Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4189045Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4189113Z             )
2025-01-07T17:55:37.4189470Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4189474Z 
2025-01-07T17:55:37.4189653Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4189968Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl3] _
2025-01-07T17:55:37.4189973Z 
2025-01-07T17:55:37.4190194Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4190198Z 
2025-01-07T17:55:37.4190285Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4190383Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4190451Z         """
2025-01-07T17:55:37.4190602Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4190669Z     
2025-01-07T17:55:37.4190748Z         Parameters:
2025-01-07T17:55:37.4190819Z         -----------
2025-01-07T17:55:37.4190937Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4191004Z     
2025-01-07T17:55:37.4191082Z         Returns:
2025-01-07T17:55:37.4191157Z         --------
2025-01-07T17:55:37.4191241Z         An LIVPlotter instance.
2025-01-07T17:55:37.4191313Z         """
2025-01-07T17:55:37.4191450Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4191454Z 
2025-01-07T17:55:37.4191595Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4191702Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4191865Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4192232Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4192453Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4192587Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4192790Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4192866Z     return cls(
2025-01-07T17:55:37.4192975Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4192979Z 
2025-01-07T17:55:37.4193263Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4193402Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4193582Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4193758Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4193963Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4194064Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4194253Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4194350Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4194515Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4194630Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4194745Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4194749Z 
2025-01-07T17:55:37.4194831Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4194995Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4195104Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4195300Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4195374Z        0.00025518])
2025-01-07T17:55:37.4195529Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4195729Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4195859Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4195986Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4196196Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4196434Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4196670Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4196858Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4196977Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4197063Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4197175Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4197265Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4197424Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4197603Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4197724Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4197881Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4198048Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4198171Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4198403Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4198538Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4198646Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4198726Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4198731Z 
2025-01-07T17:55:37.4198807Z     def __init__(
2025-01-07T17:55:37.4198876Z         self,
2025-01-07T17:55:37.4198965Z         last_interaction_type,
2025-01-07T17:55:37.4199049Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4199142Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4199230Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4199315Z         last_interaction_in_r,
2025-01-07T17:55:37.4199384Z         lines_df,
2025-01-07T17:55:37.4199461Z         packet_nus,
2025-01-07T17:55:37.4199542Z         packet_energies,
2025-01-07T17:55:37.4199616Z         r_inner,
2025-01-07T17:55:37.4199700Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4199893Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4199990Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4200077Z         spectrum_wavelength,
2025-01-07T17:55:37.4200147Z         t_inner,
2025-01-07T17:55:37.4200232Z         time_of_simulation,
2025-01-07T17:55:37.4200312Z         time_explosion,
2025-01-07T17:55:37.4200382Z         v_inner,
2025-01-07T17:55:37.4200456Z         v_outer,
2025-01-07T17:55:37.4200525Z         velocity
2025-01-07T17:55:37.4200596Z     ):
2025-01-07T17:55:37.4200663Z         """
2025-01-07T17:55:37.4200897Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4200964Z     
2025-01-07T17:55:37.4201043Z         Parameters
2025-01-07T17:55:37.4201114Z         ----------
2025-01-07T17:55:37.4201211Z         last_interaction_type : np.array
2025-01-07T17:55:37.4201362Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4201487Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4201585Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4201735Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4201824Z             absorption (interaction in)
2025-01-07T17:55:37.4202043Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4202251Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4202339Z             emission (interaction out)
2025-01-07T17:55:37.4202438Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4202710Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4202808Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4202955Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4203048Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4203211Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4203306Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4203464Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4203540Z             unit of Hz
2025-01-07T17:55:37.4203636Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4203771Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4203862Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4203972Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4204086Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4204212Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4204326Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4204446Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4204549Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4204791Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4204883Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4205004Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4205103Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4205218Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4205291Z         """
2025-01-07T17:55:37.4205474Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4205579Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4205679Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4205751Z             {
2025-01-07T17:55:37.4205834Z                 "nus": packet_nus,
2025-01-07T17:55:37.4205958Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4206053Z                 "energies": packet_energies,
2025-01-07T17:55:37.4206171Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4206324Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4206469Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4206613Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4206731Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4206800Z             }
2025-01-07T17:55:37.4216634Z         )
2025-01-07T17:55:37.4216852Z     
2025-01-07T17:55:37.4217088Z         # Save other properties
2025-01-07T17:55:37.4217312Z         self.lines_df = lines_df
2025-01-07T17:55:37.4217497Z         self.r_inner = r_inner
2025-01-07T17:55:37.4217749Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4217972Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4218188Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4218367Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4218520Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4218635Z         )
2025-01-07T17:55:37.4218823Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4218960Z         self.t_inner = t_inner
2025-01-07T17:55:37.4219130Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4219289Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4219420Z         self.v_inner = v_inner
2025-01-07T17:55:37.4219545Z         self.v_outer = v_outer
2025-01-07T17:55:37.4219869Z     
2025-01-07T17:55:37.4220035Z         # First check if both options are provided
2025-01-07T17:55:37.4220304Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4220431Z >           raise ValueError(
2025-01-07T17:55:37.4220658Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4220935Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4221050Z             )
2025-01-07T17:55:37.4221694Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4221703Z 
2025-01-07T17:55:37.4222199Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4222590Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _
2025-01-07T17:55:37.4222597Z 
2025-01-07T17:55:37.4222982Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4222997Z 
2025-01-07T17:55:37.4223168Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4223322Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4223445Z         """
2025-01-07T17:55:37.4223701Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4223849Z     
2025-01-07T17:55:37.4224134Z         Parameters:
2025-01-07T17:55:37.4224264Z         -----------
2025-01-07T17:55:37.4224445Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4224553Z     
2025-01-07T17:55:37.4224664Z         Returns:
2025-01-07T17:55:37.4224784Z         --------
2025-01-07T17:55:37.4224913Z         An LIVPlotter instance.
2025-01-07T17:55:37.4225028Z         """
2025-01-07T17:55:37.4225238Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4225245Z 
2025-01-07T17:55:37.4225464Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4225649Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4225903Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4226142Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4226479Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4226700Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4227015Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4227147Z     return cls(
2025-01-07T17:55:37.4227315Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4227327Z 
2025-01-07T17:55:37.4227782Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4228009Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4228295Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4228590Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4228904Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4229072Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4229365Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4229531Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4229802Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4229984Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4230160Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4230166Z 
2025-01-07T17:55:37.4230291Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4230565Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4230913Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4231239Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4231351Z        0.00025518])
2025-01-07T17:55:37.4231617Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4232076Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4232286Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4232506Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4232849Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4233029Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4233422Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4233738Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4233913Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4234053Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4234381Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4234543Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4234792Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4235078Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4235283Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4235523Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4235795Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4235998Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4236267Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4236476Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4236659Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4236780Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4236786Z 
2025-01-07T17:55:37.4236904Z     def __init__(
2025-01-07T17:55:37.4237011Z         self,
2025-01-07T17:55:37.4257813Z         last_interaction_type,
2025-01-07T17:55:37.4257908Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4257999Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4258085Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4258165Z         last_interaction_in_r,
2025-01-07T17:55:37.4258236Z         lines_df,
2025-01-07T17:55:37.4258316Z         packet_nus,
2025-01-07T17:55:37.4258395Z         packet_energies,
2025-01-07T17:55:37.4258460Z         r_inner,
2025-01-07T17:55:37.4258545Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4258744Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4258844Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4258928Z         spectrum_wavelength,
2025-01-07T17:55:37.4258999Z         t_inner,
2025-01-07T17:55:37.4259075Z         time_of_simulation,
2025-01-07T17:55:37.4259149Z         time_explosion,
2025-01-07T17:55:37.4259214Z         v_inner,
2025-01-07T17:55:37.4259281Z         v_outer,
2025-01-07T17:55:37.4259348Z         velocity
2025-01-07T17:55:37.4259412Z     ):
2025-01-07T17:55:37.4259478Z         """
2025-01-07T17:55:37.4259712Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4259777Z     
2025-01-07T17:55:37.4259846Z         Parameters
2025-01-07T17:55:37.4260097Z         ----------
2025-01-07T17:55:37.4260193Z         last_interaction_type : np.array
2025-01-07T17:55:37.4260350Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4260467Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4260564Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4260715Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4260804Z             absorption (interaction in)
2025-01-07T17:55:37.4260901Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4261045Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4261131Z             emission (interaction out)
2025-01-07T17:55:37.4261224Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4261375Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4261466Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4261619Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4261701Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4261869Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4262205Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4262499Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4262572Z             unit of Hz
2025-01-07T17:55:37.4262668Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4262798Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4262883Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4262994Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4263098Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4263230Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4263335Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4263466Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4263564Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4263702Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4263784Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4263909Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4264002Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4264114Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4264179Z         """
2025-01-07T17:55:37.4264357Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4264462Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4264551Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4264619Z             {
2025-01-07T17:55:37.4264695Z                 "nus": packet_nus,
2025-01-07T17:55:37.4264825Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4264912Z                 "energies": packet_energies,
2025-01-07T17:55:37.4265032Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4265178Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4265322Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4265455Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4265565Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4265628Z             }
2025-01-07T17:55:37.4265694Z         )
2025-01-07T17:55:37.4265758Z     
2025-01-07T17:55:37.4265840Z         # Save other properties
2025-01-07T17:55:37.4265922Z         self.lines_df = lines_df
2025-01-07T17:55:37.4265997Z         self.r_inner = r_inner
2025-01-07T17:55:37.4266141Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4266417Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4266548Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4266654Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4266752Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4266820Z         )
2025-01-07T17:55:37.4266936Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4267015Z         self.t_inner = t_inner
2025-01-07T17:55:37.4267128Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4267219Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4267296Z         self.v_inner = v_inner
2025-01-07T17:55:37.4267371Z         self.v_outer = v_outer
2025-01-07T17:55:37.4267433Z     
2025-01-07T17:55:37.4267535Z         # First check if both options are provided
2025-01-07T17:55:37.4267722Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4267810Z >           raise ValueError(
2025-01-07T17:55:37.4267949Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4268115Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4268180Z             )
2025-01-07T17:55:37.4268629Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4268636Z 
2025-01-07T17:55:37.4268817Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4269058Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _
2025-01-07T17:55:37.4269062Z 
2025-01-07T17:55:37.4269287Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4269291Z 
2025-01-07T17:55:37.4269379Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4269477Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4269544Z         """
2025-01-07T17:55:37.4269699Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4269763Z     
2025-01-07T17:55:37.4269842Z         Parameters:
2025-01-07T17:55:37.4269916Z         -----------
2025-01-07T17:55:37.4270037Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4270105Z     
2025-01-07T17:55:37.4270181Z         Returns:
2025-01-07T17:55:37.4270249Z         --------
2025-01-07T17:55:37.4270338Z         An LIVPlotter instance.
2025-01-07T17:55:37.4270404Z         """
2025-01-07T17:55:37.4270542Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4270546Z 
2025-01-07T17:55:37.4270693Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4270803Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4270969Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4271121Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4271340Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4271471Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4271673Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4271748Z     return cls(
2025-01-07T17:55:37.4271860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4271865Z 
2025-01-07T17:55:37.4272317Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4272462Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4272642Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4272818Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4273144Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4273244Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4273430Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4273523Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4273700Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4273819Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4273928Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4273933Z 
2025-01-07T17:55:37.4274014Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4274178Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4274290Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4274484Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4274562Z        0.00025518])
2025-01-07T17:55:37.4274717Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4274945Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4275176Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4275313Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4275524Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4275628Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4275867Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4276055Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4276175Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4276261Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4276374Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4276461Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4276624Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4276798Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4276926Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4277080Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4277250Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4277371Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4277531Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4277666Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4277772Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4277849Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4277854Z 
2025-01-07T17:55:37.4277925Z     def __init__(
2025-01-07T17:55:37.4278003Z         self,
2025-01-07T17:55:37.4278086Z         last_interaction_type,
2025-01-07T17:55:37.4278177Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4278269Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4278352Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4278434Z         last_interaction_in_r,
2025-01-07T17:55:37.4278503Z         lines_df,
2025-01-07T17:55:37.4278580Z         packet_nus,
2025-01-07T17:55:37.4278658Z         packet_energies,
2025-01-07T17:55:37.4278730Z         r_inner,
2025-01-07T17:55:37.4278812Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4279081Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4279178Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4279264Z         spectrum_wavelength,
2025-01-07T17:55:37.4279332Z         t_inner,
2025-01-07T17:55:37.4279417Z         time_of_simulation,
2025-01-07T17:55:37.4279491Z         time_explosion,
2025-01-07T17:55:37.4279567Z         v_inner,
2025-01-07T17:55:37.4279634Z         v_outer,
2025-01-07T17:55:37.4279707Z         velocity
2025-01-07T17:55:37.4279777Z     ):
2025-01-07T17:55:37.4279843Z         """
2025-01-07T17:55:37.4280072Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4280137Z     
2025-01-07T17:55:37.4280211Z         Parameters
2025-01-07T17:55:37.4280284Z         ----------
2025-01-07T17:55:37.4280385Z         last_interaction_type : np.array
2025-01-07T17:55:37.4280537Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4280663Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4280761Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4280910Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4280998Z             absorption (interaction in)
2025-01-07T17:55:37.4281100Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4281342Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4281436Z             emission (interaction out)
2025-01-07T17:55:37.4281535Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4281680Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4281776Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4282086Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4282187Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4282347Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4282439Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4282597Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4282673Z             unit of Hz
2025-01-07T17:55:37.4282767Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4282901Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4282984Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4283098Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4283210Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4283333Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4283443Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4283561Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4283659Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4283796Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4283884Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4284003Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4284104Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4284218Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4284290Z         """
2025-01-07T17:55:37.4284462Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4284570Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4284662Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4284730Z             {
2025-01-07T17:55:37.4284811Z                 "nus": packet_nus,
2025-01-07T17:55:37.4284934Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4285029Z                 "energies": packet_energies,
2025-01-07T17:55:37.4285268Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4285418Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4285557Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4285696Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4285807Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4285877Z             }
2025-01-07T17:55:37.4285943Z         )
2025-01-07T17:55:37.4286012Z     
2025-01-07T17:55:37.4286097Z         # Save other properties
2025-01-07T17:55:37.4286178Z         self.lines_df = lines_df
2025-01-07T17:55:37.4286259Z         self.r_inner = r_inner
2025-01-07T17:55:37.4286395Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4286532Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4286663Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4286779Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4286873Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4286944Z         )
2025-01-07T17:55:37.4287058Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4287141Z         self.t_inner = t_inner
2025-01-07T17:55:37.4287360Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4287463Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4287539Z         self.v_inner = v_inner
2025-01-07T17:55:37.4287622Z         self.v_outer = v_outer
2025-01-07T17:55:37.4287692Z     
2025-01-07T17:55:37.4287793Z         # First check if both options are provided
2025-01-07T17:55:37.4287967Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4288045Z >           raise ValueError(
2025-01-07T17:55:37.4288187Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4288353Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4288424Z             )
2025-01-07T17:55:37.4288772Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4288777Z 
2025-01-07T17:55:37.4288955Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4289181Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl6] _
2025-01-07T17:55:37.4289194Z 
2025-01-07T17:55:37.4289407Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4289411Z 
2025-01-07T17:55:37.4289503Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4289589Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4289659Z         """
2025-01-07T17:55:37.4289807Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4289880Z     
2025-01-07T17:55:37.4289953Z         Parameters:
2025-01-07T17:55:37.4290028Z         -----------
2025-01-07T17:55:37.4290142Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4290212Z     
2025-01-07T17:55:37.4290280Z         Returns:
2025-01-07T17:55:37.4290353Z         --------
2025-01-07T17:55:37.4290435Z         An LIVPlotter instance.
2025-01-07T17:55:37.4290509Z         """
2025-01-07T17:55:37.4290640Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4290650Z 
2025-01-07T17:55:37.4290788Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4290901Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4291059Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4291208Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4291420Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4291661Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4291863Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4292102Z     return cls(
2025-01-07T17:55:37.4292265Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4292270Z 
2025-01-07T17:55:37.4292565Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4292713Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4292978Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4293157Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4293357Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4293466Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4293649Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4293747Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4293907Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4294023Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4294263Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4294269Z 
2025-01-07T17:55:37.4294350Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4294520Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4294628Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4294823Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4294890Z        0.00025518])
2025-01-07T17:55:37.4295048Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4295249Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4295379Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4295506Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4295717Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4295826Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4296058Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4296250Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4296363Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4296453Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4296561Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4296659Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4296816Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4296993Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4297116Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4297267Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4297436Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4297553Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4297718Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4297845Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4298074Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4298147Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4298152Z 
2025-01-07T17:55:37.4298226Z     def __init__(
2025-01-07T17:55:37.4298293Z         self,
2025-01-07T17:55:37.4298381Z         last_interaction_type,
2025-01-07T17:55:37.4298464Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4298557Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4298645Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4298725Z         last_interaction_in_r,
2025-01-07T17:55:37.4298797Z         lines_df,
2025-01-07T17:55:37.4298876Z         packet_nus,
2025-01-07T17:55:37.4298960Z         packet_energies,
2025-01-07T17:55:37.4299027Z         r_inner,
2025-01-07T17:55:37.4299115Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4299294Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4299396Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4299481Z         spectrum_wavelength,
2025-01-07T17:55:37.4299554Z         t_inner,
2025-01-07T17:55:37.4299630Z         time_of_simulation,
2025-01-07T17:55:37.4299710Z         time_explosion,
2025-01-07T17:55:37.4299778Z         v_inner,
2025-01-07T17:55:37.4299850Z         v_outer,
2025-01-07T17:55:37.4299917Z         velocity
2025-01-07T17:55:37.4299991Z     ):
2025-01-07T17:55:37.4300062Z         """
2025-01-07T17:55:37.4300370Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4300442Z     
2025-01-07T17:55:37.4300513Z         Parameters
2025-01-07T17:55:37.4300587Z         ----------
2025-01-07T17:55:37.4300678Z         last_interaction_type : np.array
2025-01-07T17:55:37.4300832Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4300949Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4301049Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4301191Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4301288Z             absorption (interaction in)
2025-01-07T17:55:37.4301385Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4301529Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4301614Z             emission (interaction out)
2025-01-07T17:55:37.4301716Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4301870Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4302148Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4302328Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4302412Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4302577Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4302665Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4302829Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4302905Z             unit of Hz
2025-01-07T17:55:37.4303003Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4303137Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4303226Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4303336Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4303447Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4303578Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4303685Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4303812Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4303909Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4304049Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4304132Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4304386Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4304480Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4304599Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4304665Z         """
2025-01-07T17:55:37.4304843Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4304947Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4305042Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4305113Z             {
2025-01-07T17:55:37.4305191Z                 "nus": packet_nus,
2025-01-07T17:55:37.4305321Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4305410Z                 "energies": packet_energies,
2025-01-07T17:55:37.4305533Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4305676Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4305826Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4305962Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4306080Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4306146Z             }
2025-01-07T17:55:37.4306215Z         )
2025-01-07T17:55:37.4306281Z     
2025-01-07T17:55:37.4306481Z         # Save other properties
2025-01-07T17:55:37.4306571Z         self.lines_df = lines_df
2025-01-07T17:55:37.4306649Z         self.r_inner = r_inner
2025-01-07T17:55:37.4306793Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4306929Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4307065Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4307171Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4307272Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4307349Z         )
2025-01-07T17:55:37.4307468Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4307544Z         self.t_inner = t_inner
2025-01-07T17:55:37.4307657Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4307750Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4307830Z         self.v_inner = v_inner
2025-01-07T17:55:37.4307907Z         self.v_outer = v_outer
2025-01-07T17:55:37.4307977Z     
2025-01-07T17:55:37.4308084Z         # First check if both options are provided
2025-01-07T17:55:37.4308254Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4308339Z >           raise ValueError(
2025-01-07T17:55:37.4308474Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4308639Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4308706Z             )
2025-01-07T17:55:37.4309068Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4309078Z 
2025-01-07T17:55:37.4309249Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4309479Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl7] _
2025-01-07T17:55:37.4309484Z 
2025-01-07T17:55:37.4309706Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4309711Z 
2025-01-07T17:55:37.4309799Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4309891Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4309957Z         """
2025-01-07T17:55:37.4310110Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4310174Z     
2025-01-07T17:55:37.4310252Z         Parameters:
2025-01-07T17:55:37.4310322Z         -----------
2025-01-07T17:55:37.4310441Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4310593Z     
2025-01-07T17:55:37.4310667Z         Returns:
2025-01-07T17:55:37.4310736Z         --------
2025-01-07T17:55:37.4310824Z         An LIVPlotter instance.
2025-01-07T17:55:37.4310889Z         """
2025-01-07T17:55:37.4311025Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4311030Z 
2025-01-07T17:55:37.4311175Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4311283Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4311448Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4311591Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4311807Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4312080Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4312312Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4312392Z     return cls(
2025-01-07T17:55:37.4312510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4312513Z 
2025-01-07T17:55:37.4312793Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4312939Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4313256Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4313436Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4313642Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4313749Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4313937Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4314033Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4314204Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4314319Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4314436Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4314440Z 
2025-01-07T17:55:37.4314522Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4314690Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4314804Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4314997Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4315069Z        0.00025518])
2025-01-07T17:55:37.4315227Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4315421Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4315547Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4315682Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4315886Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4315997Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4316238Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4316425Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4316542Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4316631Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4316742Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4316831Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4316989Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4317287Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4317412Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4317564Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4317731Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4317853Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4318009Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4318139Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4318246Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4318324Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4318329Z 
2025-01-07T17:55:37.4318398Z     def __init__(
2025-01-07T17:55:37.4318475Z         self,
2025-01-07T17:55:37.4318559Z         last_interaction_type,
2025-01-07T17:55:37.4318653Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4318738Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4318828Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4318914Z         last_interaction_in_r,
2025-01-07T17:55:37.4318983Z         lines_df,
2025-01-07T17:55:37.4319137Z         packet_nus,
2025-01-07T17:55:37.4319219Z         packet_energies,
2025-01-07T17:55:37.4319291Z         r_inner,
2025-01-07T17:55:37.4319373Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4319557Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4319653Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4319740Z         spectrum_wavelength,
2025-01-07T17:55:37.4319808Z         t_inner,
2025-01-07T17:55:37.4319890Z         time_of_simulation,
2025-01-07T17:55:37.4319967Z         time_explosion,
2025-01-07T17:55:37.4320043Z         v_inner,
2025-01-07T17:55:37.4320110Z         v_outer,
2025-01-07T17:55:37.4320182Z         velocity
2025-01-07T17:55:37.4320248Z     ):
2025-01-07T17:55:37.4320319Z         """
2025-01-07T17:55:37.4320548Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4320612Z     
2025-01-07T17:55:37.4320688Z         Parameters
2025-01-07T17:55:37.4320763Z         ----------
2025-01-07T17:55:37.4320860Z         last_interaction_type : np.array
2025-01-07T17:55:37.4321010Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4321133Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4321229Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4321383Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4321471Z             absorption (interaction in)
2025-01-07T17:55:37.4321573Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4321718Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4321809Z             emission (interaction out)
2025-01-07T17:55:37.4321902Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4322229Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4322335Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4322484Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4322570Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4322729Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4322825Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4322985Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4323061Z             unit of Hz
2025-01-07T17:55:37.4323155Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4323409Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4323493Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4323609Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4323717Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4323847Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4323959Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4324079Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4324179Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4324313Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4324400Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4324517Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4324616Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4324727Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4324802Z         """
2025-01-07T17:55:37.4324978Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4325084Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4325175Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4325246Z             {
2025-01-07T17:55:37.4325434Z                 "nus": packet_nus,
2025-01-07T17:55:37.4325563Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4325657Z                 "energies": packet_energies,
2025-01-07T17:55:37.4325772Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4325925Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4326068Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4326210Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4326326Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4326396Z             }
2025-01-07T17:55:37.4326461Z         )
2025-01-07T17:55:37.4326530Z     
2025-01-07T17:55:37.4326612Z         # Save other properties
2025-01-07T17:55:37.4326700Z         self.lines_df = lines_df
2025-01-07T17:55:37.4326783Z         self.r_inner = r_inner
2025-01-07T17:55:37.4326925Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4327062Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4327193Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4327305Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4327401Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4327470Z         )
2025-01-07T17:55:37.4327584Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4327671Z         self.t_inner = t_inner
2025-01-07T17:55:37.4327784Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4327881Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4327957Z         self.v_inner = v_inner
2025-01-07T17:55:37.4328037Z         self.v_outer = v_outer
2025-01-07T17:55:37.4328102Z     
2025-01-07T17:55:37.4328206Z         # First check if both options are provided
2025-01-07T17:55:37.4328385Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4328464Z >           raise ValueError(
2025-01-07T17:55:37.4328607Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4328768Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4328838Z             )
2025-01-07T17:55:37.4329185Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4329190Z 
2025-01-07T17:55:37.4329455Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4329654Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl0] __
2025-01-07T17:55:37.4329659Z 
2025-01-07T17:55:37.4329881Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4329884Z 
2025-01-07T17:55:37.4329976Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4330069Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4330141Z         """
2025-01-07T17:55:37.4330290Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4330359Z     
2025-01-07T17:55:37.4330431Z         Parameters:
2025-01-07T17:55:37.4330505Z         -----------
2025-01-07T17:55:37.4330619Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4330689Z     
2025-01-07T17:55:37.4330756Z         Returns:
2025-01-07T17:55:37.4330829Z         --------
2025-01-07T17:55:37.4330910Z         An LIVPlotter instance.
2025-01-07T17:55:37.4330984Z         """
2025-01-07T17:55:37.4331116Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4331121Z 
2025-01-07T17:55:37.4331262Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4331374Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4331609Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4331762Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4332169Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4332316Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4332516Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4332592Z     return cls(
2025-01-07T17:55:37.4332696Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4332701Z 
2025-01-07T17:55:37.4332988Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4333130Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4333304Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4333485Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4333687Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4333792Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4333972Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4334070Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4334233Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4334348Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4334462Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4334472Z 
2025-01-07T17:55:37.4334548Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4334715Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4334820Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4335019Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4335088Z        0.00025518])
2025-01-07T17:55:37.4335250Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4335440Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4335563Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4335689Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4335893Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4336126Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4336360Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4336555Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4336666Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4336755Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4336862Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4336956Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4337106Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4337290Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4337410Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4337565Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4337734Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4337849Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4338132Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4338262Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4338373Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4338446Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4338450Z 
2025-01-07T17:55:37.4338524Z     def __init__(
2025-01-07T17:55:37.4338590Z         self,
2025-01-07T17:55:37.4338677Z         last_interaction_type,
2025-01-07T17:55:37.4338763Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4338857Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4338938Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4339021Z         last_interaction_in_r,
2025-01-07T17:55:37.4339093Z         lines_df,
2025-01-07T17:55:37.4339165Z         packet_nus,
2025-01-07T17:55:37.4339246Z         packet_energies,
2025-01-07T17:55:37.4339313Z         r_inner,
2025-01-07T17:55:37.4339405Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4339583Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4339685Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4339766Z         spectrum_wavelength,
2025-01-07T17:55:37.4339846Z         t_inner,
2025-01-07T17:55:37.4339922Z         time_of_simulation,
2025-01-07T17:55:37.4340003Z         time_explosion,
2025-01-07T17:55:37.4340071Z         v_inner,
2025-01-07T17:55:37.4340142Z         v_outer,
2025-01-07T17:55:37.4340209Z         velocity
2025-01-07T17:55:37.4340279Z     ):
2025-01-07T17:55:37.4340348Z         """
2025-01-07T17:55:37.4340581Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4340654Z     
2025-01-07T17:55:37.4340726Z         Parameters
2025-01-07T17:55:37.4340799Z         ----------
2025-01-07T17:55:37.4340892Z         last_interaction_type : np.array
2025-01-07T17:55:37.4341052Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4341165Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4341266Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4341410Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4341501Z             absorption (interaction in)
2025-01-07T17:55:37.4341597Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4341739Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4341825Z             emission (interaction out)
2025-01-07T17:55:37.4342119Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4342268Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4342365Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4342516Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4342597Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4342764Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4342854Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4343017Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4343086Z             unit of Hz
2025-01-07T17:55:37.4343184Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4343312Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4343401Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4343511Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4343623Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4343744Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4343853Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4343979Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4344210Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4344353Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4344435Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4344559Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4344652Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4344769Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4344835Z         """
2025-01-07T17:55:37.4345011Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4345116Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4345210Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4345276Z             {
2025-01-07T17:55:37.4345359Z                 "nus": packet_nus,
2025-01-07T17:55:37.4345487Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4345575Z                 "energies": packet_energies,
2025-01-07T17:55:37.4345702Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4345851Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4345994Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4346131Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4346248Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4346315Z             }
2025-01-07T17:55:37.4346385Z         )
2025-01-07T17:55:37.4346454Z     
2025-01-07T17:55:37.4346542Z         # Save other properties
2025-01-07T17:55:37.4346622Z         self.lines_df = lines_df
2025-01-07T17:55:37.4346706Z         self.r_inner = r_inner
2025-01-07T17:55:37.4346850Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4346985Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4347129Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4347235Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4347331Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4347397Z         )
2025-01-07T17:55:37.4347516Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4347597Z         self.t_inner = t_inner
2025-01-07T17:55:37.4347711Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4347803Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4347886Z         self.v_inner = v_inner
2025-01-07T17:55:37.4348078Z         self.v_outer = v_outer
2025-01-07T17:55:37.4348148Z     
2025-01-07T17:55:37.4348247Z         # First check if both options are provided
2025-01-07T17:55:37.4348421Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4348502Z >           raise ValueError(
2025-01-07T17:55:37.4348644Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4348809Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4348874Z             )
2025-01-07T17:55:37.4349229Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4349233Z 
2025-01-07T17:55:37.4349404Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4349612Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl1] __
2025-01-07T17:55:37.4349621Z 
2025-01-07T17:55:37.4349832Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4349842Z 
2025-01-07T17:55:37.4349928Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4350020Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4350085Z         """
2025-01-07T17:55:37.4350237Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4350380Z     
2025-01-07T17:55:37.4350460Z         Parameters:
2025-01-07T17:55:37.4350529Z         -----------
2025-01-07T17:55:37.4350650Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4350715Z     
2025-01-07T17:55:37.4350787Z         Returns:
2025-01-07T17:55:37.4350858Z         --------
2025-01-07T17:55:37.4350943Z         An LIVPlotter instance.
2025-01-07T17:55:37.4351009Z         """
2025-01-07T17:55:37.4351141Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4351145Z 
2025-01-07T17:55:37.4351280Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4351398Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4351560Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4351703Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4352026Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4352159Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4352357Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4352427Z     return cls(
2025-01-07T17:55:37.4352535Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4352538Z 
2025-01-07T17:55:37.4352813Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4352953Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4353137Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4353312Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4353516Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4353619Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4353804Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4353898Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4354062Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4354172Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4354288Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4354293Z 
2025-01-07T17:55:37.4354368Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4354654Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4354761Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4354952Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4355025Z        0.00025518])
2025-01-07T17:55:37.4355181Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4355377Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4355497Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4355628Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4355831Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4355939Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4356179Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4356363Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4356477Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4356562Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4356780Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4356870Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4357027Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4357200Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4357323Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4357476Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4357646Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4357770Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4357929Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4358060Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4358169Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4358247Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4358252Z 
2025-01-07T17:55:37.4358320Z     def __init__(
2025-01-07T17:55:37.4358392Z         self,
2025-01-07T17:55:37.4358474Z         last_interaction_type,
2025-01-07T17:55:37.4358563Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4358647Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4358735Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4358813Z         last_interaction_in_r,
2025-01-07T17:55:37.4358888Z         lines_df,
2025-01-07T17:55:37.4358968Z         packet_nus,
2025-01-07T17:55:37.4359044Z         packet_energies,
2025-01-07T17:55:37.4359119Z         r_inner,
2025-01-07T17:55:37.4359203Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4359387Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4359482Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4359570Z         spectrum_wavelength,
2025-01-07T17:55:37.4359638Z         t_inner,
2025-01-07T17:55:37.4359721Z         time_of_simulation,
2025-01-07T17:55:37.4359796Z         time_explosion,
2025-01-07T17:55:37.4359870Z         v_inner,
2025-01-07T17:55:37.4359936Z         v_outer,
2025-01-07T17:55:37.4360009Z         velocity
2025-01-07T17:55:37.4360074Z     ):
2025-01-07T17:55:37.4360146Z         """
2025-01-07T17:55:37.4360372Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4360444Z     
2025-01-07T17:55:37.4360514Z         Parameters
2025-01-07T17:55:37.4360693Z         ----------
2025-01-07T17:55:37.4360789Z         last_interaction_type : np.array
2025-01-07T17:55:37.4360936Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4361055Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4361150Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4361303Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4361390Z             absorption (interaction in)
2025-01-07T17:55:37.4361493Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4361632Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4361723Z             emission (interaction out)
2025-01-07T17:55:37.4361816Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4362129Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4362267Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4362426Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4362512Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4362668Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4362761Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4363044Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4363123Z             unit of Hz
2025-01-07T17:55:37.4363216Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4363351Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4363435Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4363551Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4363656Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4363785Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4363895Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4364023Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4364122Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4364260Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4364347Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4364468Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4364566Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4364677Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4364750Z         """
2025-01-07T17:55:37.4364926Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4365033Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4365124Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4365195Z             {
2025-01-07T17:55:37.4365275Z                 "nus": packet_nus,
2025-01-07T17:55:37.4365406Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4365498Z                 "energies": packet_energies,
2025-01-07T17:55:37.4365615Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4365765Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4365909Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4366052Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4366164Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4366235Z             }
2025-01-07T17:55:37.4366301Z         )
2025-01-07T17:55:37.4366370Z     
2025-01-07T17:55:37.4366453Z         # Save other properties
2025-01-07T17:55:37.4366539Z         self.lines_df = lines_df
2025-01-07T17:55:37.4366618Z         self.r_inner = r_inner
2025-01-07T17:55:37.4366879Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4367015Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4367152Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4367262Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4367358Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4367429Z         )
2025-01-07T17:55:37.4367541Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4367626Z         self.t_inner = t_inner
2025-01-07T17:55:37.4367732Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4367830Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4367907Z         self.v_inner = v_inner
2025-01-07T17:55:37.4367986Z         self.v_outer = v_outer
2025-01-07T17:55:37.4368051Z     
2025-01-07T17:55:37.4368158Z         # First check if both options are provided
2025-01-07T17:55:37.4368329Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4368415Z >           raise ValueError(
2025-01-07T17:55:37.4368559Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4368721Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4368792Z             )
2025-01-07T17:55:37.4369224Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4369231Z 
2025-01-07T17:55:37.4369410Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4369610Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl2] __
2025-01-07T17:55:37.4369614Z 
2025-01-07T17:55:37.4369833Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4369836Z 
2025-01-07T17:55:37.4369927Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4370021Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4370092Z         """
2025-01-07T17:55:37.4370240Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4370311Z     
2025-01-07T17:55:37.4370383Z         Parameters:
2025-01-07T17:55:37.4370457Z         -----------
2025-01-07T17:55:37.4370572Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4370642Z     
2025-01-07T17:55:37.4370710Z         Returns:
2025-01-07T17:55:37.4370782Z         --------
2025-01-07T17:55:37.4370867Z         An LIVPlotter instance.
2025-01-07T17:55:37.4370936Z         """
2025-01-07T17:55:37.4371065Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4371069Z 
2025-01-07T17:55:37.4371211Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4371317Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4371478Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4371629Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4371842Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4372143Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4372357Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4372434Z     return cls(
2025-01-07T17:55:37.4372538Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4372542Z 
2025-01-07T17:55:37.4372821Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4372956Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4373134Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4373310Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4373628Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4373735Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4373917Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4374022Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4374183Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4374297Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4374405Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4374410Z 
2025-01-07T17:55:37.4374491Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4374652Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4374761Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4374994Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4375060Z        0.00025518])
2025-01-07T17:55:37.4375217Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4375410Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4375641Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4375772Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4375976Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4376103Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4376476Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4376784Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4376902Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4376991Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4377099Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4377193Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4377345Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4377521Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4377641Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4377792Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4377955Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4378078Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4378243Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4378369Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4378483Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4378556Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4378561Z 
2025-01-07T17:55:37.4378638Z     def __init__(
2025-01-07T17:55:37.4378705Z         self,
2025-01-07T17:55:37.4378792Z         last_interaction_type,
2025-01-07T17:55:37.4378878Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4378969Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4379051Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4379139Z         last_interaction_in_r,
2025-01-07T17:55:37.4379208Z         lines_df,
2025-01-07T17:55:37.4379286Z         packet_nus,
2025-01-07T17:55:37.4379368Z         packet_energies,
2025-01-07T17:55:37.4379441Z         r_inner,
2025-01-07T17:55:37.4379529Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4379805Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4379904Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4379985Z         spectrum_wavelength,
2025-01-07T17:55:37.4380057Z         t_inner,
2025-01-07T17:55:37.4380134Z         time_of_simulation,
2025-01-07T17:55:37.4380218Z         time_explosion,
2025-01-07T17:55:37.4380286Z         v_inner,
2025-01-07T17:55:37.4380358Z         v_outer,
2025-01-07T17:55:37.4380426Z         velocity
2025-01-07T17:55:37.4380497Z     ):
2025-01-07T17:55:37.4380563Z         """
2025-01-07T17:55:37.4380806Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4380871Z     
2025-01-07T17:55:37.4380954Z         Parameters
2025-01-07T17:55:37.4381026Z         ----------
2025-01-07T17:55:37.4381126Z         last_interaction_type : np.array
2025-01-07T17:55:37.4381281Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4381402Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4381504Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4381650Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4381744Z             absorption (interaction in)
2025-01-07T17:55:37.4382044Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4382206Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4382299Z             emission (interaction out)
2025-01-07T17:55:37.4382400Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4382552Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4382655Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4382803Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4382896Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4383062Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4383150Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4383318Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4383390Z             unit of Hz
2025-01-07T17:55:37.4383491Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4383621Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4383711Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4383821Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4383932Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4384056Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4384164Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4384285Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4384386Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4384529Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4384612Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4384736Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4384830Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4384948Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4385016Z         """
2025-01-07T17:55:37.4385195Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4385298Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4385393Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4385462Z             {
2025-01-07T17:55:37.4385546Z                 "nus": packet_nus,
2025-01-07T17:55:37.4385671Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4385766Z                 "energies": packet_energies,
2025-01-07T17:55:37.4386032Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4386178Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4386324Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4386462Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4386581Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4386647Z             }
2025-01-07T17:55:37.4386719Z         )
2025-01-07T17:55:37.4386786Z     
2025-01-07T17:55:37.4386874Z         # Save other properties
2025-01-07T17:55:37.4386957Z         self.lines_df = lines_df
2025-01-07T17:55:37.4387041Z         self.r_inner = r_inner
2025-01-07T17:55:37.4387179Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4387317Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4387454Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4387564Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4387667Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4387733Z         )
2025-01-07T17:55:37.4387855Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4387933Z         self.t_inner = t_inner
2025-01-07T17:55:37.4388157Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4388254Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4388336Z         self.v_inner = v_inner
2025-01-07T17:55:37.4388412Z         self.v_outer = v_outer
2025-01-07T17:55:37.4388484Z     
2025-01-07T17:55:37.4388585Z         # First check if both options are provided
2025-01-07T17:55:37.4388760Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4388839Z >           raise ValueError(
2025-01-07T17:55:37.4388979Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4389151Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4389218Z             )
2025-01-07T17:55:37.4389572Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4389577Z 
2025-01-07T17:55:37.4389752Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4389960Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl3] __
2025-01-07T17:55:37.4389965Z 
2025-01-07T17:55:37.4390177Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4390181Z 
2025-01-07T17:55:37.4390273Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4390362Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4390436Z         """
2025-01-07T17:55:37.4390590Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4390659Z     
2025-01-07T17:55:37.4390741Z         Parameters:
2025-01-07T17:55:37.4390814Z         -----------
2025-01-07T17:55:37.4390933Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4390998Z     
2025-01-07T17:55:37.4391072Z         Returns:
2025-01-07T17:55:37.4391140Z         --------
2025-01-07T17:55:37.4391229Z         An LIVPlotter instance.
2025-01-07T17:55:37.4391298Z         """
2025-01-07T17:55:37.4391433Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4391438Z 
2025-01-07T17:55:37.4391572Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4391683Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4391843Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4392099Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4392322Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4392572Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4392778Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4392850Z     return cls(
2025-01-07T17:55:37.4392958Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4392962Z 
2025-01-07T17:55:37.4393244Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4393386Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4393564Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4393738Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4393939Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4394041Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4394231Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4394327Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4394491Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4394704Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4394819Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4394824Z 
2025-01-07T17:55:37.4394900Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4395065Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4395173Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4395366Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4395442Z        0.00025518])
2025-01-07T17:55:37.4395596Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4395798Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4395918Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4396049Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4396253Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4396357Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4396587Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4396779Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4396896Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4396984Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4397099Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4397187Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4397348Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4397517Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4397651Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4397796Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4397965Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4398081Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4398247Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4398379Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4398576Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4398653Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4398658Z 
2025-01-07T17:55:37.4398728Z     def __init__(
2025-01-07T17:55:37.4398803Z         self,
2025-01-07T17:55:37.4398886Z         last_interaction_type,
2025-01-07T17:55:37.4398976Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4399065Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4399156Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4399234Z         last_interaction_in_r,
2025-01-07T17:55:37.4399310Z         lines_df,
2025-01-07T17:55:37.4399381Z         packet_nus,
2025-01-07T17:55:37.4399465Z         packet_energies,
2025-01-07T17:55:37.4399534Z         r_inner,
2025-01-07T17:55:37.4399625Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4399807Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4399902Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4399997Z         spectrum_wavelength,
2025-01-07T17:55:37.4400065Z         t_inner,
2025-01-07T17:55:37.4400148Z         time_of_simulation,
2025-01-07T17:55:37.4400224Z         time_explosion,
2025-01-07T17:55:37.4400297Z         v_inner,
2025-01-07T17:55:37.4400364Z         v_outer,
2025-01-07T17:55:37.4400436Z         velocity
2025-01-07T17:55:37.4400503Z     ):
2025-01-07T17:55:37.4400674Z         """
2025-01-07T17:55:37.4400903Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4400973Z     
2025-01-07T17:55:37.4401045Z         Parameters
2025-01-07T17:55:37.4401120Z         ----------
2025-01-07T17:55:37.4401212Z         last_interaction_type : np.array
2025-01-07T17:55:37.4401370Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4401492Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4401588Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4401743Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4401830Z             absorption (interaction in)
2025-01-07T17:55:37.4402100Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4402280Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4402373Z             emission (interaction out)
2025-01-07T17:55:37.4402474Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4402633Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4402725Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4402882Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4402964Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4403135Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4403228Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4403394Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4403475Z             unit of Hz
2025-01-07T17:55:37.4403569Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4403702Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4403785Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4403902Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4404009Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4404145Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4404250Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4404383Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4404481Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4404623Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4404709Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4404981Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4405080Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4405189Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4405262Z         """
2025-01-07T17:55:37.4405436Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4405546Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4405637Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4405710Z             {
2025-01-07T17:55:37.4405788Z                 "nus": packet_nus,
2025-01-07T17:55:37.4405918Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4406006Z                 "energies": packet_energies,
2025-01-07T17:55:37.4406130Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4406283Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4406427Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4406573Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4406683Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4406757Z             }
2025-01-07T17:55:37.4406825Z         )
2025-01-07T17:55:37.4407021Z     
2025-01-07T17:55:37.4407108Z         # Save other properties
2025-01-07T17:55:37.4407194Z         self.lines_df = lines_df
2025-01-07T17:55:37.4407272Z         self.r_inner = r_inner
2025-01-07T17:55:37.4407417Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4407552Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4407687Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4407799Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4407895Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4407971Z         )
2025-01-07T17:55:37.4408085Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4408169Z         self.t_inner = t_inner
2025-01-07T17:55:37.4408281Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4408380Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4408458Z         self.v_inner = v_inner
2025-01-07T17:55:37.4408545Z         self.v_outer = v_outer
2025-01-07T17:55:37.4408613Z     
2025-01-07T17:55:37.4408721Z         # First check if both options are provided
2025-01-07T17:55:37.4408892Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4408977Z >           raise ValueError(
2025-01-07T17:55:37.4409115Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4409280Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4409352Z             )
2025-01-07T17:55:37.4409712Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4409717Z 
2025-01-07T17:55:37.4409894Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4410096Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl4] __
2025-01-07T17:55:37.4410102Z 
2025-01-07T17:55:37.4410319Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4410323Z 
2025-01-07T17:55:37.4410410Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4418719Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4418804Z         """
2025-01-07T17:55:37.4418983Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4419051Z     
2025-01-07T17:55:37.4419134Z         Parameters:
2025-01-07T17:55:37.4419215Z         -----------
2025-01-07T17:55:37.4419340Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4419591Z     
2025-01-07T17:55:37.4419662Z         Returns:
2025-01-07T17:55:37.4419740Z         --------
2025-01-07T17:55:37.4419825Z         An LIVPlotter instance.
2025-01-07T17:55:37.4419897Z         """
2025-01-07T17:55:37.4420046Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4420053Z 
2025-01-07T17:55:37.4420214Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4420333Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4420506Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4420662Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4420895Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4421037Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4421243Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4421328Z     return cls(
2025-01-07T17:55:37.4421440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4421444Z 
2025-01-07T17:55:37.4421734Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4422143Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4422352Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4422541Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4422752Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4422856Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4423046Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4423149Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4423317Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4423437Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4423549Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4423553Z 
2025-01-07T17:55:37.4423642Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4423810Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4423924Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4424124Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4424200Z        0.00025518])
2025-01-07T17:55:37.4424363Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4424556Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4424686Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4424816Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4425028Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4425133Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4425377Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4425567Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4425684Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4425770Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4425887Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4425982Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4426138Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4426436Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4426559Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4426715Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4426882Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4427007Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4427167Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4427306Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4427423Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4427497Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4427502Z 
2025-01-07T17:55:37.4427583Z     def __init__(
2025-01-07T17:55:37.4427650Z         self,
2025-01-07T17:55:37.4427742Z         last_interaction_type,
2025-01-07T17:55:37.4427829Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4427922Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4428006Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4428091Z         last_interaction_in_r,
2025-01-07T17:55:37.4428253Z         lines_df,
2025-01-07T17:55:37.4428336Z         packet_nus,
2025-01-07T17:55:37.4428414Z         packet_energies,
2025-01-07T17:55:37.4428488Z         r_inner,
2025-01-07T17:55:37.4428572Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4428758Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4428853Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4428945Z         spectrum_wavelength,
2025-01-07T17:55:37.4429020Z         t_inner,
2025-01-07T17:55:37.4429101Z         time_of_simulation,
2025-01-07T17:55:37.4429181Z         time_explosion,
2025-01-07T17:55:37.4429254Z         v_inner,
2025-01-07T17:55:37.4429327Z         v_outer,
2025-01-07T17:55:37.4429395Z         velocity
2025-01-07T17:55:37.4429468Z     ):
2025-01-07T17:55:37.4429535Z         """
2025-01-07T17:55:37.4429774Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4429839Z     
2025-01-07T17:55:37.4429919Z         Parameters
2025-01-07T17:55:37.4429994Z         ----------
2025-01-07T17:55:37.4430095Z         last_interaction_type : np.array
2025-01-07T17:55:37.4430249Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4430372Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4430469Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4430622Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4430717Z             absorption (interaction in)
2025-01-07T17:55:37.4430815Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4430966Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4431051Z             emission (interaction out)
2025-01-07T17:55:37.4431150Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4431297Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4431399Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4431548Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4431637Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4431797Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4431894Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4432172Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4432254Z             unit of Hz
2025-01-07T17:55:37.4432355Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4432603Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4432693Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4432801Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4432912Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4433036Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4433150Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4433273Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4433378Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4433512Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4433600Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4433719Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4433820Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4433933Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4434006Z         """
2025-01-07T17:55:37.4434186Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4434290Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4434386Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4434454Z             {
2025-01-07T17:55:37.4434646Z                 "nus": packet_nus,
2025-01-07T17:55:37.4434776Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4434871Z                 "energies": packet_energies,
2025-01-07T17:55:37.4434988Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4435142Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4435283Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4435426Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4435546Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4435613Z             }
2025-01-07T17:55:37.4435685Z         )
2025-01-07T17:55:37.4435750Z     
2025-01-07T17:55:37.4435839Z         # Save other properties
2025-01-07T17:55:37.4435921Z         self.lines_df = lines_df
2025-01-07T17:55:37.4436005Z         self.r_inner = r_inner
2025-01-07T17:55:37.4436149Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4436288Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4436420Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4436533Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4436628Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4436704Z         )
2025-01-07T17:55:37.4436819Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4436903Z         self.t_inner = t_inner
2025-01-07T17:55:37.4437022Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4437115Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4437199Z         self.v_inner = v_inner
2025-01-07T17:55:37.4437276Z         self.v_outer = v_outer
2025-01-07T17:55:37.4437347Z     
2025-01-07T17:55:37.4437452Z         # First check if both options are provided
2025-01-07T17:55:37.4437633Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4437715Z >           raise ValueError(
2025-01-07T17:55:37.4437857Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4438018Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4438091Z             )
2025-01-07T17:55:37.4438443Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4438454Z 
2025-01-07T17:55:37.4438718Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4438918Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl5] __
2025-01-07T17:55:37.4438929Z 
2025-01-07T17:55:37.4439145Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4439149Z 
2025-01-07T17:55:37.4439245Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4439333Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4439404Z         """
2025-01-07T17:55:37.4439555Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4439625Z     
2025-01-07T17:55:37.4439698Z         Parameters:
2025-01-07T17:55:37.4439773Z         -----------
2025-01-07T17:55:37.4439890Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4439959Z     
2025-01-07T17:55:37.4440027Z         Returns:
2025-01-07T17:55:37.4440102Z         --------
2025-01-07T17:55:37.4440183Z         An LIVPlotter instance.
2025-01-07T17:55:37.4440258Z         """
2025-01-07T17:55:37.4440396Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4440400Z 
2025-01-07T17:55:37.4440537Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4440650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4440909Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4441063Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4441278Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4441412Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4441609Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4441684Z     return cls(
2025-01-07T17:55:37.4441789Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4441802Z 
2025-01-07T17:55:37.4442279Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4442432Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4442608Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4442792Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4442990Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4443096Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4443276Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4443379Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4443541Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4443658Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4443777Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4443782Z 
2025-01-07T17:55:37.4443859Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4444028Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4444132Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4444332Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4444400Z        0.00025518])
2025-01-07T17:55:37.4444558Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4444749Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4444873Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4444998Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4445339Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4445445Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4445679Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4445878Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4445990Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4446081Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4446190Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4446285Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4446435Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4446611Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4446736Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4446888Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4447054Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4447168Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4447436Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4447565Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4447678Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4447751Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4447754Z 
2025-01-07T17:55:37.4447828Z     def __init__(
2025-01-07T17:55:37.4447895Z         self,
2025-01-07T17:55:37.4447982Z         last_interaction_type,
2025-01-07T17:55:37.4448071Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4448160Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4448250Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4448328Z         last_interaction_in_r,
2025-01-07T17:55:37.4448401Z         lines_df,
2025-01-07T17:55:37.4448474Z         packet_nus,
2025-01-07T17:55:37.4448556Z         packet_energies,
2025-01-07T17:55:37.4448627Z         r_inner,
2025-01-07T17:55:37.4448716Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4448894Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4448993Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4449073Z         spectrum_wavelength,
2025-01-07T17:55:37.4449147Z         t_inner,
2025-01-07T17:55:37.4449224Z         time_of_simulation,
2025-01-07T17:55:37.4449306Z         time_explosion,
2025-01-07T17:55:37.4449373Z         v_inner,
2025-01-07T17:55:37.4449446Z         v_outer,
2025-01-07T17:55:37.4449512Z         velocity
2025-01-07T17:55:37.4449582Z     ):
2025-01-07T17:55:37.4449657Z         """
2025-01-07T17:55:37.4449882Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4449951Z     
2025-01-07T17:55:37.4450023Z         Parameters
2025-01-07T17:55:37.4450098Z         ----------
2025-01-07T17:55:37.4450189Z         last_interaction_type : np.array
2025-01-07T17:55:37.4450349Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4450466Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4450571Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4450715Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4450809Z             absorption (interaction in)
2025-01-07T17:55:37.4450905Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4451049Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4451133Z             emission (interaction out)
2025-01-07T17:55:37.4451319Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4451473Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4451563Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4451712Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4451797Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4452109Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4452223Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4452390Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4452462Z             unit of Hz
2025-01-07T17:55:37.4452562Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4452689Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4452780Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4452887Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4453003Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4453131Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4453234Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4453360Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4453572Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4453717Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4453799Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4453923Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4454017Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4454130Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4454200Z         """
2025-01-07T17:55:37.4454380Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4454492Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4454580Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4454652Z             {
2025-01-07T17:55:37.4454728Z                 "nus": packet_nus,
2025-01-07T17:55:37.4454854Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4454946Z                 "energies": packet_energies,
2025-01-07T17:55:37.4455068Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4455215Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4455361Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4455498Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4455613Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4455679Z             }
2025-01-07T17:55:37.4455748Z         )
2025-01-07T17:55:37.4455816Z     
2025-01-07T17:55:37.4455905Z         # Save other properties
2025-01-07T17:55:37.4455991Z         self.lines_df = lines_df
2025-01-07T17:55:37.4456069Z         self.r_inner = r_inner
2025-01-07T17:55:37.4456209Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4456345Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4456482Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4456590Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4456688Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4456754Z         )
2025-01-07T17:55:37.4456873Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4456950Z         self.t_inner = t_inner
2025-01-07T17:55:37.4457064Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4457157Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4457236Z         self.v_inner = v_inner
2025-01-07T17:55:37.4457441Z         self.v_outer = v_outer
2025-01-07T17:55:37.4457513Z     
2025-01-07T17:55:37.4457618Z         # First check if both options are provided
2025-01-07T17:55:37.4457787Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4457870Z >           raise ValueError(
2025-01-07T17:55:37.4458008Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4458176Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4458242Z             )
2025-01-07T17:55:37.4458596Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4458601Z 
2025-01-07T17:55:37.4458778Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4458986Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl6] __
2025-01-07T17:55:37.4458993Z 
2025-01-07T17:55:37.4459208Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4459212Z 
2025-01-07T17:55:37.4459297Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4459390Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4459456Z         """
2025-01-07T17:55:37.4459759Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4459827Z     
2025-01-07T17:55:37.4459905Z         Parameters:
2025-01-07T17:55:37.4459977Z         -----------
2025-01-07T17:55:37.4460105Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4460169Z     
2025-01-07T17:55:37.4460242Z         Returns:
2025-01-07T17:55:37.4460310Z         --------
2025-01-07T17:55:37.4460397Z         An LIVPlotter instance.
2025-01-07T17:55:37.4460463Z         """
2025-01-07T17:55:37.4460595Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4460600Z 
2025-01-07T17:55:37.4460735Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4460852Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4461009Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4461160Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4461381Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4461519Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4461725Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4461795Z     return cls(
2025-01-07T17:55:37.4461905Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4461909Z 
2025-01-07T17:55:37.4462301Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4462443Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4462620Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4462797Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4462996Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4463103Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4463288Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4463383Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4463552Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4463662Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4463776Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4463780Z 
2025-01-07T17:55:37.4463855Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4464160Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4464269Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4464466Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4464534Z        0.00025518])
2025-01-07T17:55:37.4464696Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4464895Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4465016Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4465147Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4465352Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4465459Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4465694Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4465884Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4465997Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4466086Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4466307Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4466401Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4466560Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4466730Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4466854Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4466999Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4467166Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4467287Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4467451Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4467578Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4467694Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4467780Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4467785Z 
2025-01-07T17:55:37.4467854Z     def __init__(
2025-01-07T17:55:37.4467930Z         self,
2025-01-07T17:55:37.4468011Z         last_interaction_type,
2025-01-07T17:55:37.4468101Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4468185Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4468272Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4468350Z         last_interaction_in_r,
2025-01-07T17:55:37.4468428Z         lines_df,
2025-01-07T17:55:37.4468501Z         packet_nus,
2025-01-07T17:55:37.4468583Z         packet_energies,
2025-01-07T17:55:37.4468650Z         r_inner,
2025-01-07T17:55:37.4468738Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4468915Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4469019Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4469105Z         spectrum_wavelength,
2025-01-07T17:55:37.4469172Z         t_inner,
2025-01-07T17:55:37.4469258Z         time_of_simulation,
2025-01-07T17:55:37.4469332Z         time_explosion,
2025-01-07T17:55:37.4469404Z         v_inner,
2025-01-07T17:55:37.4469472Z         v_outer,
2025-01-07T17:55:37.4469545Z         velocity
2025-01-07T17:55:37.4469610Z     ):
2025-01-07T17:55:37.4469681Z         """
2025-01-07T17:55:37.4469909Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4469978Z     
2025-01-07T17:55:37.4470140Z         Parameters
2025-01-07T17:55:37.4470214Z         ----------
2025-01-07T17:55:37.4470306Z         last_interaction_type : np.array
2025-01-07T17:55:37.4470459Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4470574Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4470676Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4470827Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4470914Z             absorption (interaction in)
2025-01-07T17:55:37.4471016Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4471157Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4471247Z             emission (interaction out)
2025-01-07T17:55:37.4471340Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4471494Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4471592Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4471745Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4471826Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4472090Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4472181Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4472456Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4472534Z             unit of Hz
2025-01-07T17:55:37.4472627Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4472759Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4472841Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4472958Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4473065Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4473194Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4473303Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4473427Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4473522Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4473664Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4473750Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4473872Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4473971Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4474079Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4474149Z         """
2025-01-07T17:55:37.4474320Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4474428Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4474517Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4474589Z             {
2025-01-07T17:55:37.4474669Z                 "nus": packet_nus,
2025-01-07T17:55:37.4474832Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4474923Z                 "energies": packet_energies,
2025-01-07T17:55:37.4475044Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4475194Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4475339Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4475481Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4475590Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4475659Z             }
2025-01-07T17:55:37.4475724Z         )
2025-01-07T17:55:37.4475794Z     
2025-01-07T17:55:37.4475875Z         # Save other properties
2025-01-07T17:55:37.4475960Z         self.lines_df = lines_df
2025-01-07T17:55:37.4476038Z         self.r_inner = r_inner
2025-01-07T17:55:37.4476331Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4476462Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4476596Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4476703Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4476806Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4476872Z         )
2025-01-07T17:55:37.4476991Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4477073Z         self.t_inner = t_inner
2025-01-07T17:55:37.4477183Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4477281Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4477366Z         self.v_inner = v_inner
2025-01-07T17:55:37.4477447Z         self.v_outer = v_outer
2025-01-07T17:55:37.4477511Z     
2025-01-07T17:55:37.4477616Z         # First check if both options are provided
2025-01-07T17:55:37.4477789Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4477871Z >           raise ValueError(
2025-01-07T17:55:37.4478008Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4478176Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4478242Z             )
2025-01-07T17:55:37.4478674Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4478680Z 
2025-01-07T17:55:37.4478859Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4479057Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl7] __
2025-01-07T17:55:37.4479061Z 
2025-01-07T17:55:37.4479278Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4479282Z 
2025-01-07T17:55:37.4479366Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4479464Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4479529Z         """
2025-01-07T17:55:37.4479682Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4479750Z     
2025-01-07T17:55:37.4479827Z         Parameters:
2025-01-07T17:55:37.4479897Z         -----------
2025-01-07T17:55:37.4480019Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4480088Z     
2025-01-07T17:55:37.4480156Z         Returns:
2025-01-07T17:55:37.4480229Z         --------
2025-01-07T17:55:37.4480309Z         An LIVPlotter instance.
2025-01-07T17:55:37.4480380Z         """
2025-01-07T17:55:37.4480507Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4480512Z 
2025-01-07T17:55:37.4480650Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4480754Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4480914Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4481061Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4481278Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4481409Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4481613Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4481688Z     return cls(
2025-01-07T17:55:37.4481793Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4481796Z 
2025-01-07T17:55:37.4482253Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4482393Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4482568Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4482739Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4483065Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4483165Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4483349Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4483450Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4483610Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4483725Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4483832Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4483837Z 
2025-01-07T17:55:37.4483917Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4484080Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4484194Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4484387Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4484459Z        0.00025518])
2025-01-07T17:55:37.4484612Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4484807Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4485040Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4485169Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4485377Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4485478Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4485711Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4485896Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4486015Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4486099Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4486211Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4486304Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4486459Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4486637Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4486757Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4486908Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4487069Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4487191Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4487353Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4487481Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4487589Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4487666Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4487671Z 
2025-01-07T17:55:37.4487746Z     def __init__(
2025-01-07T17:55:37.4487814Z         self,
2025-01-07T17:55:37.4487901Z         last_interaction_type,
2025-01-07T17:55:37.4487986Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4488077Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4488159Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4488241Z         last_interaction_in_r,
2025-01-07T17:55:37.4488309Z         lines_df,
2025-01-07T17:55:37.4488386Z         packet_nus,
2025-01-07T17:55:37.4488463Z         packet_energies,
2025-01-07T17:55:37.4488537Z         r_inner,
2025-01-07T17:55:37.4488728Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4488912Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4489007Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4489092Z         spectrum_wavelength,
2025-01-07T17:55:37.4489164Z         t_inner,
2025-01-07T17:55:37.4489242Z         time_of_simulation,
2025-01-07T17:55:37.4489325Z         time_explosion,
2025-01-07T17:55:37.4489391Z         v_inner,
2025-01-07T17:55:37.4489463Z         v_outer,
2025-01-07T17:55:37.4489530Z         velocity
2025-01-07T17:55:37.4489600Z     ):
2025-01-07T17:55:37.4489667Z         """
2025-01-07T17:55:37.4489895Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4489960Z     
2025-01-07T17:55:37.4490036Z         Parameters
2025-01-07T17:55:37.4490105Z         ----------
2025-01-07T17:55:37.4490202Z         last_interaction_type : np.array
2025-01-07T17:55:37.4490354Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4490479Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4490576Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4490725Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4490821Z             absorption (interaction in)
2025-01-07T17:55:37.4491116Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4491262Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4491346Z             emission (interaction out)
2025-01-07T17:55:37.4491443Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4491591Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4491686Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4491835Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4492082Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4492291Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4492386Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4492546Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4492623Z             unit of Hz
2025-01-07T17:55:37.4492721Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4492851Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4492938Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4493046Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4493156Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4493280Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4493387Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4493506Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4493614Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4493749Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4493834Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4493952Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4494050Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4494169Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4494236Z         """
2025-01-07T17:55:37.4494412Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4494514Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4494607Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4494674Z             {
2025-01-07T17:55:37.4494758Z                 "nus": packet_nus,
2025-01-07T17:55:37.4494883Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4494975Z                 "energies": packet_energies,
2025-01-07T17:55:37.4495218Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4495370Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4495509Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4495654Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4495772Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4495838Z             }
2025-01-07T17:55:37.4495908Z         )
2025-01-07T17:55:37.4495972Z     
2025-01-07T17:55:37.4496058Z         # Save other properties
2025-01-07T17:55:37.4496142Z         self.lines_df = lines_df
2025-01-07T17:55:37.4496224Z         self.r_inner = r_inner
2025-01-07T17:55:37.4496362Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4496497Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4496631Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4496746Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4496839Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4496912Z         )
2025-01-07T17:55:37.4497025Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4497107Z         self.t_inner = t_inner
2025-01-07T17:55:37.4497328Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4497424Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4497504Z         self.v_inner = v_inner
2025-01-07T17:55:37.4497580Z         self.v_outer = v_outer
2025-01-07T17:55:37.4497649Z     
2025-01-07T17:55:37.4497747Z         # First check if both options are provided
2025-01-07T17:55:37.4497923Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4498001Z >           raise ValueError(
2025-01-07T17:55:37.4498142Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4498306Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4498376Z             )
2025-01-07T17:55:37.4498723Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4498733Z 
2025-01-07T17:55:37.4498907Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4499133Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _
2025-01-07T17:55:37.4499138Z 
2025-01-07T17:55:37.4499352Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4499355Z 
2025-01-07T17:55:37.4499445Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4499533Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4499607Z         """
2025-01-07T17:55:37.4499755Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4499827Z     
2025-01-07T17:55:37.4499901Z         Parameters:
2025-01-07T17:55:37.4499975Z         -----------
2025-01-07T17:55:37.4500093Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4500167Z     
2025-01-07T17:55:37.4500240Z         Returns:
2025-01-07T17:55:37.4500309Z         --------
2025-01-07T17:55:37.4500399Z         An LIVPlotter instance.
2025-01-07T17:55:37.4500467Z         """
2025-01-07T17:55:37.4500607Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4500611Z 
2025-01-07T17:55:37.4500749Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4500867Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4501026Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4501174Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4501386Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4501609Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4501812Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4501882Z     return cls(
2025-01-07T17:55:37.4502097Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4502106Z 
2025-01-07T17:55:37.4502387Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4502528Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4502699Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4502874Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4503070Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4503172Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4503356Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4503458Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4503624Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4503844Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4503961Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4503966Z 
2025-01-07T17:55:37.4504042Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4504211Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4504315Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4504515Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4504582Z        0.00025518])
2025-01-07T17:55:37.4504744Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4504939Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4505058Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4505190Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4505393Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4505501Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4505731Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4505921Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4506030Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4506119Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4506229Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4506322Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4506480Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4506650Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4506777Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4506923Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4507091Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4507208Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4507370Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4507495Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4507724Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4507802Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4507806Z 
2025-01-07T17:55:37.4507879Z     def __init__(
2025-01-07T17:55:37.4507951Z         self,
2025-01-07T17:55:37.4508036Z         last_interaction_type,
2025-01-07T17:55:37.4508125Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4508214Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4508302Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4508380Z         last_interaction_in_r,
2025-01-07T17:55:37.4508454Z         lines_df,
2025-01-07T17:55:37.4508525Z         packet_nus,
2025-01-07T17:55:37.4508607Z         packet_energies,
2025-01-07T17:55:37.4508675Z         r_inner,
2025-01-07T17:55:37.4508764Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4508943Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4509042Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4509127Z         spectrum_wavelength,
2025-01-07T17:55:37.4509203Z         t_inner,
2025-01-07T17:55:37.4509285Z         time_of_simulation,
2025-01-07T17:55:37.4509362Z         time_explosion,
2025-01-07T17:55:37.4509434Z         v_inner,
2025-01-07T17:55:37.4509501Z         v_outer,
2025-01-07T17:55:37.4509573Z         velocity
2025-01-07T17:55:37.4509638Z     ):
2025-01-07T17:55:37.4509817Z         """
2025-01-07T17:55:37.4510050Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4510121Z     
2025-01-07T17:55:37.4510191Z         Parameters
2025-01-07T17:55:37.4510267Z         ----------
2025-01-07T17:55:37.4510357Z         last_interaction_type : np.array
2025-01-07T17:55:37.4510511Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4510625Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4510723Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4510872Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4510963Z             absorption (interaction in)
2025-01-07T17:55:37.4511066Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4511204Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4511297Z             emission (interaction out)
2025-01-07T17:55:37.4511391Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4511549Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4511641Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4511797Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4511880Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4512151Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4512315Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4512571Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4512645Z             unit of Hz
2025-01-07T17:55:37.4512747Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4512882Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4512969Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4513088Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4513196Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4513325Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4513429Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4513556Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4513655Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4513794Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4513875Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4514135Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4514230Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4514346Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4514417Z         """
2025-01-07T17:55:37.4514598Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4514707Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4514798Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4514869Z             {
2025-01-07T17:55:37.4514946Z                 "nus": packet_nus,
2025-01-07T17:55:37.4515075Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4515164Z                 "energies": packet_energies,
2025-01-07T17:55:37.4515285Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4515436Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4515593Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4515730Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4515847Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4515918Z             }
2025-01-07T17:55:37.4515984Z         )
2025-01-07T17:55:37.4516218Z     
2025-01-07T17:55:37.4516306Z         # Save other properties
2025-01-07T17:55:37.4516393Z         self.lines_df = lines_df
2025-01-07T17:55:37.4516472Z         self.r_inner = r_inner
2025-01-07T17:55:37.4516620Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4516754Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4516887Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4516996Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4517097Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4517169Z         )
2025-01-07T17:55:37.4517289Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4517365Z         self.t_inner = t_inner
2025-01-07T17:55:37.4517480Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4517579Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4517660Z         self.v_inner = v_inner
2025-01-07T17:55:37.4517740Z         self.v_outer = v_outer
2025-01-07T17:55:37.4517804Z     
2025-01-07T17:55:37.4517910Z         # First check if both options are provided
2025-01-07T17:55:37.4518085Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4518168Z >           raise ValueError(
2025-01-07T17:55:37.4518307Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4518472Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4518539Z             )
2025-01-07T17:55:37.4518900Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4518905Z 
2025-01-07T17:55:37.4519084Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4519313Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _
2025-01-07T17:55:37.4519317Z 
2025-01-07T17:55:37.4519538Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4519542Z 
2025-01-07T17:55:37.4519627Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4519721Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4519787Z         """
2025-01-07T17:55:37.4519939Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4520005Z     
2025-01-07T17:55:37.4520083Z         Parameters:
2025-01-07T17:55:37.4520154Z         -----------
2025-01-07T17:55:37.4520272Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4520421Z     
2025-01-07T17:55:37.4520495Z         Returns:
2025-01-07T17:55:37.4520569Z         --------
2025-01-07T17:55:37.4520650Z         An LIVPlotter instance.
2025-01-07T17:55:37.4520721Z         """
2025-01-07T17:55:37.4520853Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4520857Z 
2025-01-07T17:55:37.4521002Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4521110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4521275Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4521421Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4521640Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4521773Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4522177Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4522268Z     return cls(
2025-01-07T17:55:37.4522377Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4522382Z 
2025-01-07T17:55:37.4522667Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4522922Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4523107Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4523282Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4523486Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4523585Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4523769Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4523862Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4524038Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4524157Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4524268Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4524272Z 
2025-01-07T17:55:37.4524356Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4524518Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4524629Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4524823Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4524896Z        0.00025518])
2025-01-07T17:55:37.4525052Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4525248Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4525378Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4525505Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4525713Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4525817Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4526059Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4526244Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4526360Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4526446Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4526560Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4526649Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4526803Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4527096Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4527218Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4527371Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4527537Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4527658Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4527818Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4527948Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4528055Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4528133Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4528141Z 
2025-01-07T17:55:37.4528214Z     def __init__(
2025-01-07T17:55:37.4528280Z         self,
2025-01-07T17:55:37.4528367Z         last_interaction_type,
2025-01-07T17:55:37.4528452Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4528544Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4528625Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4528708Z         last_interaction_in_r,
2025-01-07T17:55:37.4528852Z         lines_df,
2025-01-07T17:55:37.4528932Z         packet_nus,
2025-01-07T17:55:37.4529009Z         packet_energies,
2025-01-07T17:55:37.4529081Z         r_inner,
2025-01-07T17:55:37.4529165Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4529350Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4529445Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4529530Z         spectrum_wavelength,
2025-01-07T17:55:37.4529600Z         t_inner,
2025-01-07T17:55:37.4529682Z         time_of_simulation,
2025-01-07T17:55:37.4529766Z         time_explosion,
2025-01-07T17:55:37.4529834Z         v_inner,
2025-01-07T17:55:37.4529905Z         v_outer,
2025-01-07T17:55:37.4529972Z         velocity
2025-01-07T17:55:37.4530042Z     ):
2025-01-07T17:55:37.4530107Z         """
2025-01-07T17:55:37.4530338Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4530402Z     
2025-01-07T17:55:37.4530481Z         Parameters
2025-01-07T17:55:37.4530551Z         ----------
2025-01-07T17:55:37.4530647Z         last_interaction_type : np.array
2025-01-07T17:55:37.4530796Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4530916Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4531014Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4531164Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4531249Z             absorption (interaction in)
2025-01-07T17:55:37.4531356Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4531501Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4531585Z             emission (interaction out)
2025-01-07T17:55:37.4531683Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4531831Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4532067Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4532259Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4532347Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4532510Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4532603Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4532761Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4532837Z             unit of Hz
2025-01-07T17:55:37.4532930Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4533184Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4533272Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4533382Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4533496Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4533623Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4533734Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4533855Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4533956Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4534090Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4534176Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4534295Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4534393Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4534504Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4534576Z         """
2025-01-07T17:55:37.4534752Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4534854Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4534948Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4535162Z             {
2025-01-07T17:55:37.4535248Z                 "nus": packet_nus,
2025-01-07T17:55:37.4535373Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4535466Z                 "energies": packet_energies,
2025-01-07T17:55:37.4535580Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4535732Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4535873Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4536014Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4536133Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4536198Z             }
2025-01-07T17:55:37.4536269Z         )
2025-01-07T17:55:37.4536334Z     
2025-01-07T17:55:37.4536422Z         # Save other properties
2025-01-07T17:55:37.4536503Z         self.lines_df = lines_df
2025-01-07T17:55:37.4536589Z         self.r_inner = r_inner
2025-01-07T17:55:37.4536728Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4536865Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4536992Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4537104Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4537198Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4537268Z         )
2025-01-07T17:55:37.4537381Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4537463Z         self.t_inner = t_inner
2025-01-07T17:55:37.4537573Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4537670Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4537754Z         self.v_inner = v_inner
2025-01-07T17:55:37.4537831Z         self.v_outer = v_outer
2025-01-07T17:55:37.4537900Z     
2025-01-07T17:55:37.4538002Z         # First check if both options are provided
2025-01-07T17:55:37.4538179Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4538258Z >           raise ValueError(
2025-01-07T17:55:37.4538398Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4538560Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4538630Z             )
2025-01-07T17:55:37.4538980Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4539069Z 
2025-01-07T17:55:37.4539247Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4539482Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply2] _
2025-01-07T17:55:37.4539486Z 
2025-01-07T17:55:37.4539700Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4539704Z 
2025-01-07T17:55:37.4539798Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4539885Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4539955Z         """
2025-01-07T17:55:37.4540105Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4540175Z     
2025-01-07T17:55:37.4540248Z         Parameters:
2025-01-07T17:55:37.4540323Z         -----------
2025-01-07T17:55:37.4540437Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4540509Z     
2025-01-07T17:55:37.4540575Z         Returns:
2025-01-07T17:55:37.4540651Z         --------
2025-01-07T17:55:37.4540740Z         An LIVPlotter instance.
2025-01-07T17:55:37.4540805Z         """
2025-01-07T17:55:37.4540939Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4540944Z 
2025-01-07T17:55:37.4541079Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4541190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4541427Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4541580Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4541790Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4542031Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4542232Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4542311Z     return cls(
2025-01-07T17:55:37.4542429Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4542437Z 
2025-01-07T17:55:37.4542718Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4542859Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4543034Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4543214Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4543410Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4543513Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4543691Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4543790Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4543957Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4544071Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4544191Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4544194Z 
2025-01-07T17:55:37.4544268Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4544435Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4544543Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4544742Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4544809Z        0.00025518])
2025-01-07T17:55:37.4544968Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4545164Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4545292Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4545423Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4545742Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4545846Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4546076Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4546267Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4546379Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4546472Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4546577Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4546670Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4546820Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4546996Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4547125Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4547270Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4547442Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4547664Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4547827Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4547952Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4548062Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4548134Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4548138Z 
2025-01-07T17:55:37.4548211Z     def __init__(
2025-01-07T17:55:37.4548284Z         self,
2025-01-07T17:55:37.4548366Z         last_interaction_type,
2025-01-07T17:55:37.4548457Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4548544Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4548632Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4548710Z         last_interaction_in_r,
2025-01-07T17:55:37.4548783Z         lines_df,
2025-01-07T17:55:37.4548854Z         packet_nus,
2025-01-07T17:55:37.4548935Z         packet_energies,
2025-01-07T17:55:37.4549003Z         r_inner,
2025-01-07T17:55:37.4549094Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4549269Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4549369Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4549449Z         spectrum_wavelength,
2025-01-07T17:55:37.4549521Z         t_inner,
2025-01-07T17:55:37.4549598Z         time_of_simulation,
2025-01-07T17:55:37.4549678Z         time_explosion,
2025-01-07T17:55:37.4549751Z         v_inner,
2025-01-07T17:55:37.4549817Z         v_outer,
2025-01-07T17:55:37.4549889Z         velocity
2025-01-07T17:55:37.4549957Z     ):
2025-01-07T17:55:37.4550028Z         """
2025-01-07T17:55:37.4550252Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4550323Z     
2025-01-07T17:55:37.4550394Z         Parameters
2025-01-07T17:55:37.4550469Z         ----------
2025-01-07T17:55:37.4550560Z         last_interaction_type : np.array
2025-01-07T17:55:37.4550718Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4550831Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4550932Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4551077Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4551169Z             absorption (interaction in)
2025-01-07T17:55:37.4551267Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4551412Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4551501Z             emission (interaction out)
2025-01-07T17:55:37.4551681Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4551834Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4552023Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4552177Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4552262Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4552425Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4552513Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4552678Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4552751Z             unit of Hz
2025-01-07T17:55:37.4552850Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4552975Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4553062Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4553182Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4553290Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4553418Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4553525Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4553759Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4553859Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4553997Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4554078Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4554203Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4554298Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4554414Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4554481Z         """
2025-01-07T17:55:37.4554658Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4554769Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4554858Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4554929Z             {
2025-01-07T17:55:37.4555009Z                 "nus": packet_nus,
2025-01-07T17:55:37.4555135Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4555226Z                 "energies": packet_energies,
2025-01-07T17:55:37.4555350Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4555497Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4555644Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4555780Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4555895Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4555967Z             }
2025-01-07T17:55:37.4556036Z         )
2025-01-07T17:55:37.4556106Z     
2025-01-07T17:55:37.4556185Z         # Save other properties
2025-01-07T17:55:37.4556270Z         self.lines_df = lines_df
2025-01-07T17:55:37.4556347Z         self.r_inner = r_inner
2025-01-07T17:55:37.4556489Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4556625Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4556761Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4556868Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4556966Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4557032Z         )
2025-01-07T17:55:37.4557151Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4557228Z         self.t_inner = t_inner
2025-01-07T17:55:37.4557341Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4557433Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4557650Z         self.v_inner = v_inner
2025-01-07T17:55:37.4557731Z         self.v_outer = v_outer
2025-01-07T17:55:37.4557796Z     
2025-01-07T17:55:37.4557900Z         # First check if both options are provided
2025-01-07T17:55:37.4558069Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4558152Z >           raise ValueError(
2025-01-07T17:55:37.4558290Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4558455Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4558521Z             )
2025-01-07T17:55:37.4558877Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4558882Z 
2025-01-07T17:55:37.4559054Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4559286Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply3] _
2025-01-07T17:55:37.4559294Z 
2025-01-07T17:55:37.4559511Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4559515Z 
2025-01-07T17:55:37.4559600Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4559693Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4559760Z         """
2025-01-07T17:55:37.4559986Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4560054Z     
2025-01-07T17:55:37.4560131Z         Parameters:
2025-01-07T17:55:37.4560201Z         -----------
2025-01-07T17:55:37.4560319Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4560384Z     
2025-01-07T17:55:37.4560457Z         Returns:
2025-01-07T17:55:37.4560524Z         --------
2025-01-07T17:55:37.4560611Z         An LIVPlotter instance.
2025-01-07T17:55:37.4560683Z         """
2025-01-07T17:55:37.4560813Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4560820Z 
2025-01-07T17:55:37.4560961Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4561069Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4561234Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4561380Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4561601Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4561735Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4562065Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4562180Z     return cls(
2025-01-07T17:55:37.4562293Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4562297Z 
2025-01-07T17:55:37.4562579Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4562720Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4562898Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4563070Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4563275Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4563378Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4563562Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4563658Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4563821Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4563937Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4564044Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4564166Z 
2025-01-07T17:55:37.4564250Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4564412Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4564520Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4564710Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4564787Z        0.00025518])
2025-01-07T17:55:37.4564940Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4565135Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4565254Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4565385Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4565596Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4565699Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4565938Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4566121Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4566239Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4566431Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4566547Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4566640Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4566799Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4566969Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4567093Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4567245Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4567413Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4567536Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4567694Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4567826Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4567932Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4568011Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4568016Z 
2025-01-07T17:55:37.4568086Z     def __init__(
2025-01-07T17:55:37.4568159Z         self,
2025-01-07T17:55:37.4568246Z         last_interaction_type,
2025-01-07T17:55:37.4568332Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4568421Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4568503Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4568587Z         last_interaction_in_r,
2025-01-07T17:55:37.4568659Z         lines_df,
2025-01-07T17:55:37.4568736Z         packet_nus,
2025-01-07T17:55:37.4568812Z         packet_energies,
2025-01-07T17:55:37.4568885Z         r_inner,
2025-01-07T17:55:37.4568968Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4569152Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4569247Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4569334Z         spectrum_wavelength,
2025-01-07T17:55:37.4569402Z         t_inner,
2025-01-07T17:55:37.4569483Z         time_of_simulation,
2025-01-07T17:55:37.4569560Z         time_explosion,
2025-01-07T17:55:37.4569632Z         v_inner,
2025-01-07T17:55:37.4569699Z         v_outer,
2025-01-07T17:55:37.4569771Z         velocity
2025-01-07T17:55:37.4569841Z     ):
2025-01-07T17:55:37.4569909Z         """
2025-01-07T17:55:37.4570138Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4570290Z     
2025-01-07T17:55:37.4570368Z         Parameters
2025-01-07T17:55:37.4570438Z         ----------
2025-01-07T17:55:37.4570534Z         last_interaction_type : np.array
2025-01-07T17:55:37.4570682Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4570800Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4570898Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4571047Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4571134Z             absorption (interaction in)
2025-01-07T17:55:37.4571237Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4571376Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4571467Z             emission (interaction out)
2025-01-07T17:55:37.4571564Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4571714Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4571816Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4572114Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4572220Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4572379Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4572591Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4572754Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4572829Z             unit of Hz
2025-01-07T17:55:37.4572924Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4573056Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4573139Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4573251Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4573363Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4573485Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4573599Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4573718Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4573816Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4573950Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4574040Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4574162Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4574260Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4574367Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4574438Z         """
2025-01-07T17:55:37.4574612Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4574718Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4574842Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4574912Z             {
2025-01-07T17:55:37.4574998Z                 "nus": packet_nus,
2025-01-07T17:55:37.4575123Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4575218Z                 "energies": packet_energies,
2025-01-07T17:55:37.4575335Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4575487Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4575627Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4575769Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4575879Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4575950Z             }
2025-01-07T17:55:37.4576016Z         )
2025-01-07T17:55:37.4576085Z     
2025-01-07T17:55:37.4576172Z         # Save other properties
2025-01-07T17:55:37.4576252Z         self.lines_df = lines_df
2025-01-07T17:55:37.4576453Z         self.r_inner = r_inner
2025-01-07T17:55:37.4576589Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4576725Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4576854Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4576967Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4577065Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4577135Z         )
2025-01-07T17:55:37.4577249Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4577331Z         self.t_inner = t_inner
2025-01-07T17:55:37.4577438Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4577533Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4577610Z         self.v_inner = v_inner
2025-01-07T17:55:37.4577691Z         self.v_outer = v_outer
2025-01-07T17:55:37.4577760Z     
2025-01-07T17:55:37.4577861Z         # First check if both options are provided
2025-01-07T17:55:37.4578043Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4578119Z >           raise ValueError(
2025-01-07T17:55:37.4578260Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4578419Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4578569Z             )
2025-01-07T17:55:37.4578922Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4578927Z 
2025-01-07T17:55:37.4579102Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4579326Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _
2025-01-07T17:55:37.4579334Z 
2025-01-07T17:55:37.4579550Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4579557Z 
2025-01-07T17:55:37.4579649Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4579736Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4579807Z         """
2025-01-07T17:55:37.4579954Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4580024Z     
2025-01-07T17:55:37.4580095Z         Parameters:
2025-01-07T17:55:37.4580169Z         -----------
2025-01-07T17:55:37.4580284Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4580355Z     
2025-01-07T17:55:37.4580423Z         Returns:
2025-01-07T17:55:37.4580496Z         --------
2025-01-07T17:55:37.4580578Z         An LIVPlotter instance.
2025-01-07T17:55:37.4580651Z         """
2025-01-07T17:55:37.4580785Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4580789Z 
2025-01-07T17:55:37.4580923Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4581033Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4581193Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4581342Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4581552Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4581687Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4581886Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4582078Z     return cls(
2025-01-07T17:55:37.4582186Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4582196Z 
2025-01-07T17:55:37.4582474Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4582614Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4582788Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4583099Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4583295Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4583397Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4588172Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4588331Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4588521Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4588642Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4588765Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4588770Z 
2025-01-07T17:55:37.4588853Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4589035Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4589156Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4589369Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4589446Z        0.00025518])
2025-01-07T17:55:37.4589615Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4589984Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4590114Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4590256Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4590466Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4590580Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4590826Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4591017Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4591146Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4591235Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4591357Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4591450Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4591630Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4591811Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4592196Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4592467Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4592646Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4592773Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4592940Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4593075Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4593187Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4593269Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4593278Z 
2025-01-07T17:55:37.4593351Z     def __init__(
2025-01-07T17:55:37.4593428Z         self,
2025-01-07T17:55:37.4593514Z         last_interaction_type,
2025-01-07T17:55:37.4593609Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4593701Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4593791Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4593872Z         last_interaction_in_r,
2025-01-07T17:55:37.4593950Z         lines_df,
2025-01-07T17:55:37.4594031Z         packet_nus,
2025-01-07T17:55:37.4594111Z         packet_energies,
2025-01-07T17:55:37.4594318Z         r_inner,
2025-01-07T17:55:37.4594406Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4594597Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4594696Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4594783Z         spectrum_wavelength,
2025-01-07T17:55:37.4594854Z         t_inner,
2025-01-07T17:55:37.4594944Z         time_of_simulation,
2025-01-07T17:55:37.4595021Z         time_explosion,
2025-01-07T17:55:37.4595097Z         v_inner,
2025-01-07T17:55:37.4595165Z         v_outer,
2025-01-07T17:55:37.4595239Z         velocity
2025-01-07T17:55:37.4595308Z     ):
2025-01-07T17:55:37.4595381Z         """
2025-01-07T17:55:37.4595615Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4595689Z     
2025-01-07T17:55:37.4595762Z         Parameters
2025-01-07T17:55:37.4595843Z         ----------
2025-01-07T17:55:37.4595945Z         last_interaction_type : np.array
2025-01-07T17:55:37.4596105Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4596234Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4596335Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4596495Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4596700Z             absorption (interaction in)
2025-01-07T17:55:37.4596810Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4596953Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4597048Z             emission (interaction out)
2025-01-07T17:55:37.4597144Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4597305Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4597431Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4597698Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4597854Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4598109Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4598267Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4598540Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4598667Z             unit of Hz
2025-01-07T17:55:37.4598833Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4599044Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4599136Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4599257Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4599369Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4599505Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4599620Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4599744Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4599855Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4599993Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4600083Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4600208Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4600315Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4600429Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4600506Z         """
2025-01-07T17:55:37.4600686Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4600796Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4600889Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4600964Z             {
2025-01-07T17:55:37.4601046Z                 "nus": packet_nus,
2025-01-07T17:55:37.4601180Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4601384Z                 "energies": packet_energies,
2025-01-07T17:55:37.4601507Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4601661Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4601808Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4602147Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4602297Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4602378Z             }
2025-01-07T17:55:37.4602447Z         )
2025-01-07T17:55:37.4602521Z     
2025-01-07T17:55:37.4602609Z         # Save other properties
2025-01-07T17:55:37.4602698Z         self.lines_df = lines_df
2025-01-07T17:55:37.4602780Z         self.r_inner = r_inner
2025-01-07T17:55:37.4602929Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4603074Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4603210Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4603327Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4603425Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4603499Z         )
2025-01-07T17:55:37.4603617Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4603852Z         self.t_inner = t_inner
2025-01-07T17:55:37.4603968Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4604072Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4604155Z         self.v_inner = v_inner
2025-01-07T17:55:37.4604239Z         self.v_outer = v_outer
2025-01-07T17:55:37.4604309Z     
2025-01-07T17:55:37.4604418Z         # First check if both options are provided
2025-01-07T17:55:37.4604598Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4604689Z >           raise ValueError(
2025-01-07T17:55:37.4604843Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4605010Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4605085Z             )
2025-01-07T17:55:37.4605454Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4605459Z 
2025-01-07T17:55:37.4605643Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4605873Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _
2025-01-07T17:55:37.4605877Z 
2025-01-07T17:55:37.4606100Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4606105Z 
2025-01-07T17:55:37.4606201Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4606291Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4606369Z         """
2025-01-07T17:55:37.4606526Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4606599Z     
2025-01-07T17:55:37.4606676Z         Parameters:
2025-01-07T17:55:37.4606756Z         -----------
2025-01-07T17:55:37.4606874Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4606948Z     
2025-01-07T17:55:37.4607018Z         Returns:
2025-01-07T17:55:37.4607099Z         --------
2025-01-07T17:55:37.4607185Z         An LIVPlotter instance.
2025-01-07T17:55:37.4607262Z         """
2025-01-07T17:55:37.4607400Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4607405Z 
2025-01-07T17:55:37.4607554Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4607667Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4607844Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4607996Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4608351Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4608494Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4608694Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4608773Z     return cls(
2025-01-07T17:55:37.4608885Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4608889Z 
2025-01-07T17:55:37.4609178Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4609320Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4609502Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4609681Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4609888Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4609995Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4610184Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4610286Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4610451Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4610656Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4610770Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4610775Z 
2025-01-07T17:55:37.4610858Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4611022Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4611134Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4611327Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4611405Z        0.00025518])
2025-01-07T17:55:37.4611566Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4611760Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4611887Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4612206Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4612422Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4612525Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4612767Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4612956Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4613074Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4613164Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4613279Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4613375Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4613528Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4613710Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4613834Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4613989Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4614154Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4614280Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4614440Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4614571Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4614812Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4614887Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4614892Z 
2025-01-07T17:55:37.4614968Z     def __init__(
2025-01-07T17:55:37.4615037Z         self,
2025-01-07T17:55:37.4615125Z         last_interaction_type,
2025-01-07T17:55:37.4615215Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4615309Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4615393Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4615479Z         last_interaction_in_r,
2025-01-07T17:55:37.4615551Z         lines_df,
2025-01-07T17:55:37.4615630Z         packet_nus,
2025-01-07T17:55:37.4615709Z         packet_energies,
2025-01-07T17:55:37.4615784Z         r_inner,
2025-01-07T17:55:37.4615867Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4616051Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4616158Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4616242Z         spectrum_wavelength,
2025-01-07T17:55:37.4616318Z         t_inner,
2025-01-07T17:55:37.4616397Z         time_of_simulation,
2025-01-07T17:55:37.4616477Z         time_explosion,
2025-01-07T17:55:37.4616547Z         v_inner,
2025-01-07T17:55:37.4616619Z         v_outer,
2025-01-07T17:55:37.4616800Z         velocity
2025-01-07T17:55:37.4616876Z     ):
2025-01-07T17:55:37.4616945Z         """
2025-01-07T17:55:37.4617176Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4617242Z     
2025-01-07T17:55:37.4617319Z         Parameters
2025-01-07T17:55:37.4617391Z         ----------
2025-01-07T17:55:37.4617490Z         last_interaction_type : np.array
2025-01-07T17:55:37.4617642Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4617765Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4617868Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4618023Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4618117Z             absorption (interaction in)
2025-01-07T17:55:37.4618215Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4618362Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4618453Z             emission (interaction out)
2025-01-07T17:55:37.4618556Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4618706Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4618806Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4618956Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4619045Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4619200Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4619301Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4619467Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4619539Z             unit of Hz
2025-01-07T17:55:37.4619641Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4619769Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4619861Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4619972Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4620085Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4620207Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4620319Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4620439Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4620541Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4620677Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4620851Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4620977Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4621072Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4621190Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4621257Z         """
2025-01-07T17:55:37.4621438Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4621541Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4621638Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4621705Z             {
2025-01-07T17:55:37.4621789Z                 "nus": packet_nus,
2025-01-07T17:55:37.4621917Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4622124Z                 "energies": packet_energies,
2025-01-07T17:55:37.4622243Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4622395Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4622544Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4622685Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4622802Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4622981Z             }
2025-01-07T17:55:37.4623060Z         )
2025-01-07T17:55:37.4623126Z     
2025-01-07T17:55:37.4623218Z         # Save other properties
2025-01-07T17:55:37.4623301Z         self.lines_df = lines_df
2025-01-07T17:55:37.4623385Z         self.r_inner = r_inner
2025-01-07T17:55:37.4623525Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4623664Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4623795Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4623907Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4624006Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4624080Z         )
2025-01-07T17:55:37.4624203Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4624281Z         self.t_inner = t_inner
2025-01-07T17:55:37.4624393Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4624493Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4624575Z         self.v_inner = v_inner
2025-01-07T17:55:37.4624652Z         self.v_outer = v_outer
2025-01-07T17:55:37.4624724Z     
2025-01-07T17:55:37.4624825Z         # First check if both options are provided
2025-01-07T17:55:37.4625005Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4625086Z >           raise ValueError(
2025-01-07T17:55:37.4625230Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4625391Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4625468Z             )
2025-01-07T17:55:37.4625822Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4625832Z 
2025-01-07T17:55:37.4626005Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4626240Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply6] _
2025-01-07T17:55:37.4626244Z 
2025-01-07T17:55:37.4626461Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4626467Z 
2025-01-07T17:55:37.4626561Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4626651Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4626724Z         """
2025-01-07T17:55:37.4626874Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4626946Z     
2025-01-07T17:55:37.4627021Z         Parameters:
2025-01-07T17:55:37.4627097Z         -----------
2025-01-07T17:55:37.4627339Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4627404Z     
2025-01-07T17:55:37.4627478Z         Returns:
2025-01-07T17:55:37.4627549Z         --------
2025-01-07T17:55:37.4627635Z         An LIVPlotter instance.
2025-01-07T17:55:37.4627702Z         """
2025-01-07T17:55:37.4627837Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4627845Z 
2025-01-07T17:55:37.4627982Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4628094Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4628255Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4628403Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4628617Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4628754Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4628959Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4629032Z     return cls(
2025-01-07T17:55:37.4629141Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4629145Z 
2025-01-07T17:55:37.4629423Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4629644Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4629825Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4630006Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4630208Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4630313Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4630500Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4630600Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4630766Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4630879Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4630993Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4631000Z 
2025-01-07T17:55:37.4631078Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4631251Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4631357Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4631554Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4631622Z        0.00025518])
2025-01-07T17:55:37.4631781Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4632158Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4632340Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4632473Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4632681Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4632788Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4633024Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4633220Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4633338Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4633429Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4633539Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4633637Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4633938Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4634118Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4634243Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4634404Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4634576Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4634694Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4634859Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4634989Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4635101Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4635177Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4635186Z 
2025-01-07T17:55:37.4635261Z     def __init__(
2025-01-07T17:55:37.4635329Z         self,
2025-01-07T17:55:37.4635418Z         last_interaction_type,
2025-01-07T17:55:37.4635505Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4635596Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4635681Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4635877Z         last_interaction_in_r,
2025-01-07T17:55:37.4635955Z         lines_df,
2025-01-07T17:55:37.4636029Z         packet_nus,
2025-01-07T17:55:37.4636112Z         packet_energies,
2025-01-07T17:55:37.4636181Z         r_inner,
2025-01-07T17:55:37.4636270Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4636450Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4636551Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4636633Z         spectrum_wavelength,
2025-01-07T17:55:37.4636708Z         t_inner,
2025-01-07T17:55:37.4636791Z         time_of_simulation,
2025-01-07T17:55:37.4636872Z         time_explosion,
2025-01-07T17:55:37.4636941Z         v_inner,
2025-01-07T17:55:37.4637016Z         v_outer,
2025-01-07T17:55:37.4637085Z         velocity
2025-01-07T17:55:37.4637160Z     ):
2025-01-07T17:55:37.4637229Z         """
2025-01-07T17:55:37.4637470Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4637537Z     
2025-01-07T17:55:37.4637616Z         Parameters
2025-01-07T17:55:37.4637692Z         ----------
2025-01-07T17:55:37.4637786Z         last_interaction_type : np.array
2025-01-07T17:55:37.4637942Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4638060Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4638163Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4638308Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4638403Z             absorption (interaction in)
2025-01-07T17:55:37.4638505Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4638652Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4638739Z             emission (interaction out)
2025-01-07T17:55:37.4638838Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4638991Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4639089Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4639243Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4639326Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4639491Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4639580Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4639746Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4639819Z             unit of Hz
2025-01-07T17:55:37.4640008Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4640137Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4640228Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4640338Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4640451Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4640580Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4640691Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4640818Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4640916Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4641058Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4641143Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4641270Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4641370Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4641491Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4641558Z         """
2025-01-07T17:55:37.4641736Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4641841Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4642257Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4642338Z             {
2025-01-07T17:55:37.4642427Z                 "nus": packet_nus,
2025-01-07T17:55:37.4642564Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4642657Z                 "energies": packet_energies,
2025-01-07T17:55:37.4642784Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4642935Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4643082Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4643225Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4643345Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4643414Z             }
2025-01-07T17:55:37.4643486Z         )
2025-01-07T17:55:37.4643552Z     
2025-01-07T17:55:37.4643641Z         # Save other properties
2025-01-07T17:55:37.4643728Z         self.lines_df = lines_df
2025-01-07T17:55:37.4643812Z         self.r_inner = r_inner
2025-01-07T17:55:37.4643955Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4644098Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4644236Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4644345Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4644444Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4644511Z         )
2025-01-07T17:55:37.4644633Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4644715Z         self.t_inner = t_inner
2025-01-07T17:55:37.4644829Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4644925Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4645007Z         self.v_inner = v_inner
2025-01-07T17:55:37.4645084Z         self.v_outer = v_outer
2025-01-07T17:55:37.4645156Z     
2025-01-07T17:55:37.4645262Z         # First check if both options are provided
2025-01-07T17:55:37.4645443Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4645529Z >           raise ValueError(
2025-01-07T17:55:37.4645670Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4645836Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4645905Z             )
2025-01-07T17:55:37.4646269Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4646388Z 
2025-01-07T17:55:37.4646566Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4646803Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply7] _
2025-01-07T17:55:37.4646807Z 
2025-01-07T17:55:37.4647027Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4dd678530>
2025-01-07T17:55:37.4647040Z 
2025-01-07T17:55:37.4647130Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4647224Z     def plotter(simulation_simple):
2025-01-07T17:55:37.4647292Z         """
2025-01-07T17:55:37.4647446Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-07T17:55:37.4647512Z     
2025-01-07T17:55:37.4647591Z         Parameters:
2025-01-07T17:55:37.4647662Z         -----------
2025-01-07T17:55:37.4647782Z         simulation_simple: A TARDIS simulation object.
2025-01-07T17:55:37.4647848Z     
2025-01-07T17:55:37.4647922Z         Returns:
2025-01-07T17:55:37.4647996Z         --------
2025-01-07T17:55:37.4648084Z         An LIVPlotter instance.
2025-01-07T17:55:37.4648152Z         """
2025-01-07T17:55:37.4648290Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4648297Z 
2025-01-07T17:55:37.4648432Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-07T17:55:37.4648623Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4648790Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-07T17:55:37.4648938Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4649161Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4649295Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4649497Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4649570Z     return cls(
2025-01-07T17:55:37.4649685Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4649693Z 
2025-01-07T17:55:37.4649970Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe4ff26c890>
2025-01-07T17:55:37.4650115Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4650299Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4650477Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4650681Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4650782Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4650966Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4651063Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4651232Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4651346Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4651462Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4651467Z 
2025-01-07T17:55:37.4651544Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4651716Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4651831Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4652226Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4652305Z        0.00025518])
2025-01-07T17:55:37.4652466Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4652668Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4652789Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4653047Z spectrum_delta_frequency = <Quantity 5.84595293e+11 Hz>
2025-01-07T17:55:37.4653252Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.50480824e+14, 1.51065420e+14, ...,
2025-01-07T17:55:37.4653360Z            5.99467997e+15, 5.99526456e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4653597Z spectrum_luminosity_density_lambda = <Quantity [0., 0., 0., ..., 0., 0., 0.] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4653791Z spectrum_wavelength = <Quantity [20000.        , 19922.30301823, 19845.20738242, ...,
2025-01-07T17:55:37.4653912Z              500.14629279,   500.09751902,   500.04875475] Angstrom>
2025-01-07T17:55:37.4653999Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4654116Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4654206Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4654368Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4654542Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4654673Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4654826Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4655001Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4655249Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4655414Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4655546Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4655653Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4655731Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4655735Z 
2025-01-07T17:55:37.4655809Z     def __init__(
2025-01-07T17:55:37.4655883Z         self,
2025-01-07T17:55:37.4655969Z         last_interaction_type,
2025-01-07T17:55:37.4656065Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4656151Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4656241Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4656321Z         last_interaction_in_r,
2025-01-07T17:55:37.4656399Z         lines_df,
2025-01-07T17:55:37.4656476Z         packet_nus,
2025-01-07T17:55:37.4656554Z         packet_energies,
2025-01-07T17:55:37.4656631Z         r_inner,
2025-01-07T17:55:37.4656715Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4656898Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4656995Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4657082Z         spectrum_wavelength,
2025-01-07T17:55:37.4657151Z         t_inner,
2025-01-07T17:55:37.4657235Z         time_of_simulation,
2025-01-07T17:55:37.4657312Z         time_explosion,
2025-01-07T17:55:37.4657385Z         v_inner,
2025-01-07T17:55:37.4657453Z         v_outer,
2025-01-07T17:55:37.4657531Z         velocity
2025-01-07T17:55:37.4657599Z     ):
2025-01-07T17:55:37.4657671Z         """
2025-01-07T17:55:37.4657902Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4657973Z     
2025-01-07T17:55:37.4658046Z         Parameters
2025-01-07T17:55:37.4658122Z         ----------
2025-01-07T17:55:37.4658224Z         last_interaction_type : np.array
2025-01-07T17:55:37.4658376Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4658496Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4658594Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4658745Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4658832Z             absorption (interaction in)
2025-01-07T17:55:37.4658935Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4659074Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4659254Z             emission (interaction out)
2025-01-07T17:55:37.4659350Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4659505Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4659598Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4659755Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4659843Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4659999Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4660093Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4660252Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4660330Z             unit of Hz
2025-01-07T17:55:37.4660425Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4660560Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4660649Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4660763Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4660872Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4661001Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4661106Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4661310Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4661415Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4661551Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4661639Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4661759Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4661861Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4662082Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4662155Z         """
2025-01-07T17:55:37.4662339Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4662451Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4662542Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4662616Z             {
2025-01-07T17:55:37.4662693Z                 "nus": packet_nus,
2025-01-07T17:55:37.4662825Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4662922Z                 "energies": packet_energies,
2025-01-07T17:55:37.4663040Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4663192Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4663333Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4663476Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4663587Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4663664Z             }
2025-01-07T17:55:37.4663731Z         )
2025-01-07T17:55:37.4663802Z     
2025-01-07T17:55:37.4663886Z         # Save other properties
2025-01-07T17:55:37.4663973Z         self.lines_df = lines_df
2025-01-07T17:55:37.4664052Z         self.r_inner = r_inner
2025-01-07T17:55:37.4664197Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4664342Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4664474Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4664586Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4664682Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4664755Z         )
2025-01-07T17:55:37.4664869Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4664953Z         self.t_inner = t_inner
2025-01-07T17:55:37.4665062Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4665161Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4665380Z         self.v_inner = v_inner
2025-01-07T17:55:37.4665462Z         self.v_outer = v_outer
2025-01-07T17:55:37.4665528Z     
2025-01-07T17:55:37.4665633Z         # First check if both options are provided
2025-01-07T17:55:37.4665809Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4665902Z >           raise ValueError(
2025-01-07T17:55:37.4666046Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4666206Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4666278Z             )
2025-01-07T17:55:37.4666632Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4666637Z 
2025-01-07T17:55:37.4666812Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4667018Z _ ERROR at setup of TestSDECPlotter.test_parse_species_list[_full_species_list] _
2025-01-07T17:55:37.4667027Z 
2025-01-07T17:55:37.4667302Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4667515Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4667874Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4667880Z 
2025-01-07T17:55:37.4667975Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4668085Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4668158Z         """
2025-01-07T17:55:37.4668245Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4668316Z     
2025-01-07T17:55:37.4668388Z         Parameters
2025-01-07T17:55:37.4668463Z         ----------
2025-01-07T17:55:37.4668605Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4668690Z             Simulation object.
2025-01-07T17:55:37.4668758Z     
2025-01-07T17:55:37.4668832Z         Returns
2025-01-07T17:55:37.4668903Z         -------
2025-01-07T17:55:37.4669040Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4669107Z         """
2025-01-07T17:55:37.4669249Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4669253Z 
2025-01-07T17:55:37.4669407Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4669516Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4669685Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4669831Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4670043Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4670177Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4670381Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4670455Z     return cls(
2025-01-07T17:55:37.4670568Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4670572Z 
2025-01-07T17:55:37.4670851Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4670993Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4671176Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4671351Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4671553Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4671654Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4671837Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4672032Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4672337Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4672451Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4672568Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4672572Z 
2025-01-07T17:55:37.4672657Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4672823Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4672935Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4673129Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4673203Z        0.00025518])
2025-01-07T17:55:37.4673358Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4673563Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4673689Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4673824Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4674032Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4674137Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4674494Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4674639Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4674860Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4674974Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4675063Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4675173Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4675276Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4675428Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4675602Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4675732Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4675884Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4676052Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4676169Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4676335Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4676465Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4676581Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4676658Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4676663Z 
2025-01-07T17:55:37.4676739Z     def __init__(
2025-01-07T17:55:37.4676807Z         self,
2025-01-07T17:55:37.4676897Z         last_interaction_type,
2025-01-07T17:55:37.4676989Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4677077Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4677169Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4677250Z         last_interaction_in_r,
2025-01-07T17:55:37.4677325Z         lines_df,
2025-01-07T17:55:37.4677398Z         packet_nus,
2025-01-07T17:55:37.4677479Z         packet_energies,
2025-01-07T17:55:37.4677552Z         r_inner,
2025-01-07T17:55:37.4677641Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4677817Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4677926Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4678008Z         spectrum_wavelength,
2025-01-07T17:55:37.4678170Z         t_inner,
2025-01-07T17:55:37.4678250Z         time_of_simulation,
2025-01-07T17:55:37.4678331Z         time_explosion,
2025-01-07T17:55:37.4678400Z         v_inner,
2025-01-07T17:55:37.4678474Z         v_outer,
2025-01-07T17:55:37.4678547Z         velocity
2025-01-07T17:55:37.4678614Z     ):
2025-01-07T17:55:37.4678685Z         """
2025-01-07T17:55:37.4678922Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4678992Z     
2025-01-07T17:55:37.4679064Z         Parameters
2025-01-07T17:55:37.4679140Z         ----------
2025-01-07T17:55:37.4679232Z         last_interaction_type : np.array
2025-01-07T17:55:37.4679388Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4679502Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4679604Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4679749Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4679847Z             absorption (interaction in)
2025-01-07T17:55:37.4679947Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4680093Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4680186Z             emission (interaction out)
2025-01-07T17:55:37.4680283Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4680535Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4680631Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4680786Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4680869Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4681031Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4681118Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4681281Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4681356Z             unit of Hz
2025-01-07T17:55:37.4681457Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4681584Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4681674Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4681788Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4681899Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4682200Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4682311Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4682439Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4682534Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4682676Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4682760Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4682883Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4682981Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4683097Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4683165Z         """
2025-01-07T17:55:37.4683345Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4683452Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4683548Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4683624Z             {
2025-01-07T17:55:37.4683705Z                 "nus": packet_nus,
2025-01-07T17:55:37.4683837Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4683927Z                 "energies": packet_energies,
2025-01-07T17:55:37.4684053Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4684205Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4684352Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4684618Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4684739Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4684809Z             }
2025-01-07T17:55:37.4684882Z         )
2025-01-07T17:55:37.4684954Z     
2025-01-07T17:55:37.4685038Z         # Save other properties
2025-01-07T17:55:37.4685129Z         self.lines_df = lines_df
2025-01-07T17:55:37.4685208Z         self.r_inner = r_inner
2025-01-07T17:55:37.4685353Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4685487Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4685623Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4685729Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4685830Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4685901Z         )
2025-01-07T17:55:37.4686025Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4686105Z         self.t_inner = t_inner
2025-01-07T17:55:37.4686219Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4686313Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4686396Z         self.v_inner = v_inner
2025-01-07T17:55:37.4686478Z         self.v_outer = v_outer
2025-01-07T17:55:37.4686656Z     
2025-01-07T17:55:37.4686767Z         # First check if both options are provided
2025-01-07T17:55:37.4686940Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4687026Z >           raise ValueError(
2025-01-07T17:55:37.4687163Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4687329Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4687396Z             )
2025-01-07T17:55:37.4687757Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4687766Z 
2025-01-07T17:55:37.4687940Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4688100Z ---------------------------- Captured stdout setup -----------------------------
2025-01-07T17:55:37.4688322Z log_level is defined both in Functional Argument & YAML Configuration {debug section}
2025-01-07T17:55:37.4688474Z log_level = CRITICAL will be used for Log Level Determination
2025-01-07T17:55:37.4688478Z 
2025-01-07T17:55:37.4688631Z ---------------------------- Captured stderr setup -----------------------------
2025-01-07T17:55:37.4688636Z 
2025-01-07T17:55:37.4688640Z 
2025-01-07T17:55:37.4689048Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]            [A
2025-01-07T17:55:37.4689053Z 
2025-01-07T17:55:37.4689272Z Packets:                                                                                   0/4000 [00:00<?, ?it/s][A
2025-01-07T17:55:37.4689425Z Iterations:                                                                                49/? [09:01<00:00,  7.88s/it]
2025-01-07T17:55:37.4689429Z 
2025-01-07T17:55:37.4689783Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉3999/4000 [00:00<00:00, 99925.06it/s][A
2025-01-07T17:55:37.4689788Z 
2025-01-07T17:55:37.4690033Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]              [A
2025-01-07T17:55:37.4690175Z Iterations:                                                                                50/? [09:02<00:00,  5.86s/it]
2025-01-07T17:55:37.4690180Z 
2025-01-07T17:55:37.4690499Z Packets:   ████████████████████████████████████████████████████████████████████████████████4000/4000 [00:00<00:00, 95157.48it/s][A
2025-01-07T17:55:37.4690503Z 
2025-01-07T17:55:37.4690729Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]              [A
2025-01-07T17:55:37.4690963Z Iterations:                                                                                51/? [09:03<00:00,  4.45s/it]
2025-01-07T17:55:37.4690967Z 
2025-01-07T17:55:37.4691283Z Packets:   ████████████████████████████████████████████████████████████████████████████████4000/4000 [00:00<00:00, 67532.97it/s][A
2025-01-07T17:55:37.4691496Z ___ ERROR at setup of TestSDECPlotter.test_parse_species_list[_species_list] ___
2025-01-07T17:55:37.4691500Z 
2025-01-07T17:55:37.4691783Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4692176Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4692420Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4692425Z 
2025-01-07T17:55:37.4692520Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4692645Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4692717Z         """
2025-01-07T17:55:37.4692806Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4692877Z     
2025-01-07T17:55:37.4692951Z         Parameters
2025-01-07T17:55:37.4693030Z         ----------
2025-01-07T17:55:37.4693174Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4693380Z             Simulation object.
2025-01-07T17:55:37.4693450Z     
2025-01-07T17:55:37.4693525Z         Returns
2025-01-07T17:55:37.4693596Z         -------
2025-01-07T17:55:37.4693736Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4693805Z         """
2025-01-07T17:55:37.4693946Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4693951Z 
2025-01-07T17:55:37.4694100Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4694211Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4694382Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4694531Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4694751Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4694886Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4695093Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4695166Z     return cls(
2025-01-07T17:55:37.4695277Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4695281Z 
2025-01-07T17:55:37.4695562Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4695703Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4695888Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4696064Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4696383Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4696486Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4696672Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4696772Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4696942Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4697055Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4697171Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4697176Z 
2025-01-07T17:55:37.4697259Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4697424Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4697536Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4697734Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4697808Z        0.00025518])
2025-01-07T17:55:37.4697963Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4698163Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4698285Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4698421Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4698628Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4698734Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4698984Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4699127Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4699322Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4699436Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4699530Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4699641Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4699821Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4699979Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4700155Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4700283Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4700431Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4700602Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4700724Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4700888Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4701018Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4701133Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4701209Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4701213Z 
2025-01-07T17:55:37.4701290Z     def __init__(
2025-01-07T17:55:37.4701363Z         self,
2025-01-07T17:55:37.4701448Z         last_interaction_type,
2025-01-07T17:55:37.4701544Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4701632Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4701721Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4701804Z         last_interaction_in_r,
2025-01-07T17:55:37.4701877Z         lines_df,
2025-01-07T17:55:37.4702063Z         packet_nus,
2025-01-07T17:55:37.4702290Z         packet_energies,
2025-01-07T17:55:37.4702361Z         r_inner,
2025-01-07T17:55:37.4702450Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4702633Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4702734Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4702820Z         spectrum_wavelength,
2025-01-07T17:55:37.4702895Z         t_inner,
2025-01-07T17:55:37.4702974Z         time_of_simulation,
2025-01-07T17:55:37.4703055Z         time_explosion,
2025-01-07T17:55:37.4703123Z         v_inner,
2025-01-07T17:55:37.4703198Z         v_outer,
2025-01-07T17:55:37.4703271Z         velocity
2025-01-07T17:55:37.4703338Z     ):
2025-01-07T17:55:37.4703410Z         """
2025-01-07T17:55:37.4703641Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4703712Z     
2025-01-07T17:55:37.4703789Z         Parameters
2025-01-07T17:55:37.4703865Z         ----------
2025-01-07T17:55:37.4703964Z         last_interaction_type : np.array
2025-01-07T17:55:37.4704123Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4704239Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4704342Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4704495Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4704590Z             absorption (interaction in)
2025-01-07T17:55:37.4704688Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4704841Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4704934Z             emission (interaction out)
2025-01-07T17:55:37.4705028Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4705188Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4705282Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4705443Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4705527Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4705691Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4705781Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4706061Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4706138Z             unit of Hz
2025-01-07T17:55:37.4706240Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4706370Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4706463Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4706577Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4706689Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4706820Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4706926Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4707057Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4707154Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4707298Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4707382Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4707511Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4707606Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4707721Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4707788Z         """
2025-01-07T17:55:37.4707971Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4708080Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4708173Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4708245Z             {
2025-01-07T17:55:37.4708324Z                 "nus": packet_nus,
2025-01-07T17:55:37.4708543Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4708633Z                 "energies": packet_energies,
2025-01-07T17:55:37.4708759Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4708906Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4709059Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4709200Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4709319Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4709386Z             }
2025-01-07T17:55:37.4709458Z         )
2025-01-07T17:55:37.4709531Z     
2025-01-07T17:55:37.4709614Z         # Save other properties
2025-01-07T17:55:37.4709702Z         self.lines_df = lines_df
2025-01-07T17:55:37.4709781Z         self.r_inner = r_inner
2025-01-07T17:55:37.4709925Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4710062Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4710198Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4710307Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4710407Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4710474Z         )
2025-01-07T17:55:37.4710603Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4710682Z         self.t_inner = t_inner
2025-01-07T17:55:37.4710797Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4710892Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4710976Z         self.v_inner = v_inner
2025-01-07T17:55:37.4711058Z         self.v_outer = v_outer
2025-01-07T17:55:37.4711124Z     
2025-01-07T17:55:37.4711233Z         # First check if both options are provided
2025-01-07T17:55:37.4711405Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4711493Z >           raise ValueError(
2025-01-07T17:55:37.4711631Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4711800Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4711868Z             )
2025-01-07T17:55:37.4712449Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4712456Z 
2025-01-07T17:55:37.4712632Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4712838Z ___ ERROR at setup of TestSDECPlotter.test_parse_species_list[_keep_colour] ____
2025-01-07T17:55:37.4712842Z 
2025-01-07T17:55:37.4713119Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4713331Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4713571Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4713575Z 
2025-01-07T17:55:37.4713663Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4713780Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4713848Z         """
2025-01-07T17:55:37.4713942Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4714011Z     
2025-01-07T17:55:37.4714090Z         Parameters
2025-01-07T17:55:37.4714162Z         ----------
2025-01-07T17:55:37.4714310Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4714395Z             Simulation object.
2025-01-07T17:55:37.4714462Z     
2025-01-07T17:55:37.4714535Z         Returns
2025-01-07T17:55:37.4714606Z         -------
2025-01-07T17:55:37.4714742Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4714810Z         """
2025-01-07T17:55:37.4714950Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4715065Z 
2025-01-07T17:55:37.4715213Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4715327Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4715488Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4715638Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4715855Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4715991Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4716192Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4716264Z     return cls(
2025-01-07T17:55:37.4716375Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4716379Z 
2025-01-07T17:55:37.4716652Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4716806Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4716980Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4717162Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4717366Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4717478Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4717669Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4717764Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4717937Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4718052Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4718173Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4718180Z 
2025-01-07T17:55:37.4718258Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4718427Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4718531Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4718731Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4718881Z        0.00025518])
2025-01-07T17:55:37.4719045Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4719244Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4719365Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4719496Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4719700Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4719809Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4720060Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4720206Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4720396Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4720518Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4720608Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4720717Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4720813Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4720967Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4721143Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4721264Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4721497Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4721662Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4721787Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4722121Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4722282Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4722397Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4722473Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4722477Z 
2025-01-07T17:55:37.4722552Z     def __init__(
2025-01-07T17:55:37.4722621Z         self,
2025-01-07T17:55:37.4722710Z         last_interaction_type,
2025-01-07T17:55:37.4722797Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4722888Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4722975Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4723065Z         last_interaction_in_r,
2025-01-07T17:55:37.4723137Z         lines_df,
2025-01-07T17:55:37.4723214Z         packet_nus,
2025-01-07T17:55:37.4723293Z         packet_energies,
2025-01-07T17:55:37.4723368Z         r_inner,
2025-01-07T17:55:37.4723452Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4723644Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4723745Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4723829Z         spectrum_wavelength,
2025-01-07T17:55:37.4723903Z         t_inner,
2025-01-07T17:55:37.4723982Z         time_of_simulation,
2025-01-07T17:55:37.4724063Z         time_explosion,
2025-01-07T17:55:37.4724132Z         v_inner,
2025-01-07T17:55:37.4724205Z         v_outer,
2025-01-07T17:55:37.4724274Z         velocity
2025-01-07T17:55:37.4724349Z     ):
2025-01-07T17:55:37.4724416Z         """
2025-01-07T17:55:37.4724652Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4724719Z     
2025-01-07T17:55:37.4724795Z         Parameters
2025-01-07T17:55:37.4724867Z         ----------
2025-01-07T17:55:37.4724964Z         last_interaction_type : np.array
2025-01-07T17:55:37.4725114Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4725358Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4725466Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4725615Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4725711Z             absorption (interaction in)
2025-01-07T17:55:37.4725811Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4725957Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4726044Z             emission (interaction out)
2025-01-07T17:55:37.4726148Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4726299Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4726399Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4726544Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4726632Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4726792Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4726888Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4727054Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4727126Z             unit of Hz
2025-01-07T17:55:37.4727226Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4727355Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4727445Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4727555Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4727820Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4727946Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4728056Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4728176Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4728283Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4728421Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4728512Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4728637Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4728732Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4728847Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4728915Z         """
2025-01-07T17:55:37.4729096Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4729199Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4729298Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4729368Z             {
2025-01-07T17:55:37.4729455Z                 "nus": packet_nus,
2025-01-07T17:55:37.4729581Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4729677Z                 "energies": packet_energies,
2025-01-07T17:55:37.4729797Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4729950Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4730097Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4730236Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4730353Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4730420Z             }
2025-01-07T17:55:37.4730491Z         )
2025-01-07T17:55:37.4730557Z     
2025-01-07T17:55:37.4730646Z         # Save other properties
2025-01-07T17:55:37.4730729Z         self.lines_df = lines_df
2025-01-07T17:55:37.4730817Z         self.r_inner = r_inner
2025-01-07T17:55:37.4730958Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4731099Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4731320Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4731439Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4731536Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4731610Z         )
2025-01-07T17:55:37.4731731Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4731809Z         self.t_inner = t_inner
2025-01-07T17:55:37.4732045Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4732193Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4732276Z         self.v_inner = v_inner
2025-01-07T17:55:37.4732359Z         self.v_outer = v_outer
2025-01-07T17:55:37.4732430Z     
2025-01-07T17:55:37.4732533Z         # First check if both options are provided
2025-01-07T17:55:37.4732714Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4732794Z >           raise ValueError(
2025-01-07T17:55:37.4732940Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4733105Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4733177Z             )
2025-01-07T17:55:37.4733533Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4733538Z 
2025-01-07T17:55:37.4733713Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4733996Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-01-07T17:55:37.4734122Z 
2025-01-07T17:55:37.4734394Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4734614Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4734843Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4734847Z 
2025-01-07T17:55:37.4734942Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4735058Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4735126Z         """
2025-01-07T17:55:37.4735217Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4735283Z     
2025-01-07T17:55:37.4735359Z         Parameters
2025-01-07T17:55:37.4735431Z         ----------
2025-01-07T17:55:37.4735576Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4735656Z             Simulation object.
2025-01-07T17:55:37.4735727Z     
2025-01-07T17:55:37.4735795Z         Returns
2025-01-07T17:55:37.4735874Z         -------
2025-01-07T17:55:37.4736004Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4736077Z         """
2025-01-07T17:55:37.4736210Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4736214Z 
2025-01-07T17:55:37.4736363Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4736477Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4736642Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4736796Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4737010Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4737148Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4737346Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4737424Z     return cls(
2025-01-07T17:55:37.4737535Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4737539Z 
2025-01-07T17:55:37.4737820Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4737956Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4738249Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4738433Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4738630Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4738734Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4738916Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4739017Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4739178Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4739300Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4739411Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4739416Z 
2025-01-07T17:55:37.4739497Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4739669Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4739775Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4739977Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4740047Z        0.00025518])
2025-01-07T17:55:37.4740206Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4740397Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4740523Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4740731Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4740941Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4741045Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4741293Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4741440Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4741630Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4741746Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4741833Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4742053Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4742147Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4742302Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4742475Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4742602Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4742750Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4742924Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4743048Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4743209Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4743339Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4743448Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4743526Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4743530Z 
2025-01-07T17:55:37.4743605Z     def __init__(
2025-01-07T17:55:37.4743678Z         self,
2025-01-07T17:55:37.4743762Z         last_interaction_type,
2025-01-07T17:55:37.4743857Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4743943Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4744036Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4744120Z         last_interaction_in_r,
2025-01-07T17:55:37.4744305Z         lines_df,
2025-01-07T17:55:37.4744389Z         packet_nus,
2025-01-07T17:55:37.4744466Z         packet_energies,
2025-01-07T17:55:37.4744540Z         r_inner,
2025-01-07T17:55:37.4744625Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4744809Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4744906Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4744992Z         spectrum_wavelength,
2025-01-07T17:55:37.4745061Z         t_inner,
2025-01-07T17:55:37.4745144Z         time_of_simulation,
2025-01-07T17:55:37.4745226Z         time_explosion,
2025-01-07T17:55:37.4745300Z         v_inner,
2025-01-07T17:55:37.4745370Z         v_outer,
2025-01-07T17:55:37.4745444Z         velocity
2025-01-07T17:55:37.4745510Z     ):
2025-01-07T17:55:37.4745583Z         """
2025-01-07T17:55:37.4745811Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4745881Z     
2025-01-07T17:55:37.4745963Z         Parameters
2025-01-07T17:55:37.4746037Z         ----------
2025-01-07T17:55:37.4746134Z         last_interaction_type : np.array
2025-01-07T17:55:37.4746287Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4746407Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4746506Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4746654Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4746743Z             absorption (interaction in)
2025-01-07T17:55:37.4746962Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4747104Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4747195Z             emission (interaction out)
2025-01-07T17:55:37.4747289Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4747447Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4747548Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4747697Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4747789Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4747947Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4748040Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4748200Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4748279Z             unit of Hz
2025-01-07T17:55:37.4748391Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4748539Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4748624Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4748739Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4748847Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4748978Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4749087Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4749209Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4749312Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4749448Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4749536Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4749653Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4749753Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4749871Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4749943Z         """
2025-01-07T17:55:37.4750116Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4750227Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4750318Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4750390Z             {
2025-01-07T17:55:37.4750568Z                 "nus": packet_nus,
2025-01-07T17:55:37.4750705Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4750799Z                 "energies": packet_energies,
2025-01-07T17:55:37.4750916Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4751067Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4751208Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4751351Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4751469Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4751541Z             }
2025-01-07T17:55:37.4751607Z         )
2025-01-07T17:55:37.4751679Z     
2025-01-07T17:55:37.4751763Z         # Save other properties
2025-01-07T17:55:37.4751850Z         self.lines_df = lines_df
2025-01-07T17:55:37.4752030Z         self.r_inner = r_inner
2025-01-07T17:55:37.4752179Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4752317Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4752446Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4752558Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4752653Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4752724Z         )
2025-01-07T17:55:37.4752840Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4752924Z         self.t_inner = t_inner
2025-01-07T17:55:37.4753147Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4753249Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4753327Z         self.v_inner = v_inner
2025-01-07T17:55:37.4753407Z         self.v_outer = v_outer
2025-01-07T17:55:37.4753474Z     
2025-01-07T17:55:37.4753580Z         # First check if both options are provided
2025-01-07T17:55:37.4753755Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4753840Z >           raise ValueError(
2025-01-07T17:55:37.4753983Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4754147Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4754220Z             )
2025-01-07T17:55:37.4754575Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4754584Z 
2025-01-07T17:55:37.4754765Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4755038Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-01-07T17:55:37.4755042Z 
2025-01-07T17:55:37.4755315Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4755537Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4755769Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4755774Z 
2025-01-07T17:55:37.4755864Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4755975Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4756048Z         """
2025-01-07T17:55:37.4756133Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4756205Z     
2025-01-07T17:55:37.4756277Z         Parameters
2025-01-07T17:55:37.4756353Z         ----------
2025-01-07T17:55:37.4756499Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4756584Z             Simulation object.
2025-01-07T17:55:37.4756650Z     
2025-01-07T17:55:37.4756724Z         Returns
2025-01-07T17:55:37.4756793Z         -------
2025-01-07T17:55:37.4756931Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4757003Z         """
2025-01-07T17:55:37.4757251Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4757256Z 
2025-01-07T17:55:37.4757411Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4757521Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4757686Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4757831Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4758065Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4758202Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4758406Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4758481Z     return cls(
2025-01-07T17:55:37.4758593Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4758597Z 
2025-01-07T17:55:37.4758889Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4763611Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4763846Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4764049Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4764258Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4764373Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4764743Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4764851Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4765025Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4765153Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4765271Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4765283Z 
2025-01-07T17:55:37.4765365Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4765544Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4765656Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4765859Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4765930Z        0.00025518])
2025-01-07T17:55:37.4766093Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4766298Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4766428Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4766566Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4766785Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4766904Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4767151Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4767305Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4767498Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4767621Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4767715Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4767834Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4767926Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4768098Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4768385Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4768522Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4768686Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4768859Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4768990Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4769154Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4769291Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4769407Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4769494Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4769498Z 
2025-01-07T17:55:37.4769571Z     def __init__(
2025-01-07T17:55:37.4769648Z         self,
2025-01-07T17:55:37.4769734Z         last_interaction_type,
2025-01-07T17:55:37.4769833Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4769928Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4770013Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4770104Z         last_interaction_in_r,
2025-01-07T17:55:37.4770176Z         lines_df,
2025-01-07T17:55:37.4770256Z         packet_nus,
2025-01-07T17:55:37.4770336Z         packet_energies,
2025-01-07T17:55:37.4770414Z         r_inner,
2025-01-07T17:55:37.4770500Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4770693Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4770872Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4770963Z         spectrum_wavelength,
2025-01-07T17:55:37.4771033Z         t_inner,
2025-01-07T17:55:37.4771119Z         time_of_simulation,
2025-01-07T17:55:37.4771196Z         time_explosion,
2025-01-07T17:55:37.4771271Z         v_inner,
2025-01-07T17:55:37.4771342Z         v_outer,
2025-01-07T17:55:37.4771421Z         velocity
2025-01-07T17:55:37.4771490Z     ):
2025-01-07T17:55:37.4771566Z         """
2025-01-07T17:55:37.4771805Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4771872Z     
2025-01-07T17:55:37.4772126Z         Parameters
2025-01-07T17:55:37.4772231Z         ----------
2025-01-07T17:55:37.4772336Z         last_interaction_type : np.array
2025-01-07T17:55:37.4772494Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4772621Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4772727Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4772885Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4772975Z             absorption (interaction in)
2025-01-07T17:55:37.4773083Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4773227Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4773325Z             emission (interaction out)
2025-01-07T17:55:37.4773428Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4773585Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4773687Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4773838Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4773929Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4774096Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4774197Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4774359Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4774440Z             unit of Hz
2025-01-07T17:55:37.4774537Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4774675Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4774916Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4775043Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4775159Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4775287Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4775405Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4775528Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4775633Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4775773Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4775867Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4775987Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4776088Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4776201Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4776278Z         """
2025-01-07T17:55:37.4776460Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4776573Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4776671Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4776741Z             {
2025-01-07T17:55:37.4776825Z                 "nus": packet_nus,
2025-01-07T17:55:37.4776952Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4777050Z                 "energies": packet_energies,
2025-01-07T17:55:37.4777169Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4777432Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4777577Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4777722Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4777836Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4777917Z             }
2025-01-07T17:55:37.4777987Z         )
2025-01-07T17:55:37.4778067Z     
2025-01-07T17:55:37.4778151Z         # Save other properties
2025-01-07T17:55:37.4778239Z         self.lines_df = lines_df
2025-01-07T17:55:37.4778326Z         self.r_inner = r_inner
2025-01-07T17:55:37.4778467Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4778611Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4778744Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4778857Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4778960Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4779036Z         )
2025-01-07T17:55:37.4779151Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4779240Z         self.t_inner = t_inner
2025-01-07T17:55:37.4779350Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4779454Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4779535Z         self.v_inner = v_inner
2025-01-07T17:55:37.4779619Z         self.v_outer = v_outer
2025-01-07T17:55:37.4779688Z     
2025-01-07T17:55:37.4779799Z         # First check if both options are provided
2025-01-07T17:55:37.4779982Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4780067Z >           raise ValueError(
2025-01-07T17:55:37.4780219Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4780385Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4780463Z             )
2025-01-07T17:55:37.4780820Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4780825Z 
2025-01-07T17:55:37.4781009Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4781390Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-01-07T17:55:37.4781402Z 
2025-01-07T17:55:37.4781679Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4781904Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4782250Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4782256Z 
2025-01-07T17:55:37.4782351Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4782467Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4782546Z         """
2025-01-07T17:55:37.4782638Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4782713Z     
2025-01-07T17:55:37.4782786Z         Parameters
2025-01-07T17:55:37.4782865Z         ----------
2025-01-07T17:55:37.4783011Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4783099Z             Simulation object.
2025-01-07T17:55:37.4783169Z     
2025-01-07T17:55:37.4783245Z         Returns
2025-01-07T17:55:37.4783321Z         -------
2025-01-07T17:55:37.4783454Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4783527Z         """
2025-01-07T17:55:37.4783662Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4783666Z 
2025-01-07T17:55:37.4783819Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4783931Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4784097Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4784359Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4784586Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4784718Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4784927Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4784998Z     return cls(
2025-01-07T17:55:37.4785112Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4785116Z 
2025-01-07T17:55:37.4785394Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4785534Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4785715Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4785892Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4786099Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4786200Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4786387Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4786488Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4786657Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4786771Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4786888Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4786892Z 
2025-01-07T17:55:37.4786975Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4787141Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4787253Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4787448Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4787521Z        0.00025518])
2025-01-07T17:55:37.4787678Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4787988Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4788115Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4788249Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4788457Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4788562Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4788811Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4788958Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4789156Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4789268Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4789360Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4789469Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4789568Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4789723Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4789902Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4790032Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4790181Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4790349Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4790548Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4790713Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4790838Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4790950Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4791030Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4791035Z 
2025-01-07T17:55:37.4791111Z     def __init__(
2025-01-07T17:55:37.4791180Z         self,
2025-01-07T17:55:37.4791270Z         last_interaction_type,
2025-01-07T17:55:37.4791364Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4791453Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4791542Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4791623Z         last_interaction_in_r,
2025-01-07T17:55:37.4791700Z         lines_df,
2025-01-07T17:55:37.4791775Z         packet_nus,
2025-01-07T17:55:37.4791864Z         packet_energies,
2025-01-07T17:55:37.4792033Z         r_inner,
2025-01-07T17:55:37.4792129Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4792311Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4792413Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4792500Z         spectrum_wavelength,
2025-01-07T17:55:37.4792577Z         t_inner,
2025-01-07T17:55:37.4792657Z         time_of_simulation,
2025-01-07T17:55:37.4792739Z         time_explosion,
2025-01-07T17:55:37.4792808Z         v_inner,
2025-01-07T17:55:37.4792882Z         v_outer,
2025-01-07T17:55:37.4792950Z         velocity
2025-01-07T17:55:37.4793023Z     ):
2025-01-07T17:55:37.4793097Z         """
2025-01-07T17:55:37.4793327Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4793398Z     
2025-01-07T17:55:37.4793470Z         Parameters
2025-01-07T17:55:37.4793547Z         ----------
2025-01-07T17:55:37.4793644Z         last_interaction_type : np.array
2025-01-07T17:55:37.4793806Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4793925Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4794029Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4794311Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4794410Z             absorption (interaction in)
2025-01-07T17:55:37.4794509Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4794653Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4794743Z             emission (interaction out)
2025-01-07T17:55:37.4794837Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4794992Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4795086Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4795238Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4795327Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4795489Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4795579Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4795743Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4795819Z             unit of Hz
2025-01-07T17:55:37.4795919Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4796051Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4796141Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4796259Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4796367Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4796495Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4796602Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4796839Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4796937Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4797079Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4797163Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4797295Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4797391Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4797507Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4797575Z         """
2025-01-07T17:55:37.4797752Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4797861Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4797952Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4798026Z             {
2025-01-07T17:55:37.4798105Z                 "nus": packet_nus,
2025-01-07T17:55:37.4798241Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4798336Z                 "energies": packet_energies,
2025-01-07T17:55:37.4798459Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4798606Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4798756Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4798892Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4799008Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4799076Z             }
2025-01-07T17:55:37.4799149Z         )
2025-01-07T17:55:37.4799215Z     
2025-01-07T17:55:37.4799303Z         # Save other properties
2025-01-07T17:55:37.4799390Z         self.lines_df = lines_df
2025-01-07T17:55:37.4799470Z         self.r_inner = r_inner
2025-01-07T17:55:37.4799613Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4799751Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4799890Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4799996Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4800097Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4800164Z         )
2025-01-07T17:55:37.4800370Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4800452Z         self.t_inner = t_inner
2025-01-07T17:55:37.4800567Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4800660Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4800743Z         self.v_inner = v_inner
2025-01-07T17:55:37.4800819Z         self.v_outer = v_outer
2025-01-07T17:55:37.4800890Z     
2025-01-07T17:55:37.4800997Z         # First check if both options are provided
2025-01-07T17:55:37.4801168Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4801257Z >           raise ValueError(
2025-01-07T17:55:37.4801392Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4801563Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4801631Z             )
2025-01-07T17:55:37.4802189Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4802196Z 
2025-01-07T17:55:37.4802378Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4802658Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-01-07T17:55:37.4802663Z 
2025-01-07T17:55:37.4802938Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4803152Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4803534Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4803538Z 
2025-01-07T17:55:37.4803627Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4803746Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4803813Z         """
2025-01-07T17:55:37.4803904Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4803974Z     
2025-01-07T17:55:37.4804052Z         Parameters
2025-01-07T17:55:37.4804123Z         ----------
2025-01-07T17:55:37.4804272Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4804350Z             Simulation object.
2025-01-07T17:55:37.4804421Z     
2025-01-07T17:55:37.4804495Z         Returns
2025-01-07T17:55:37.4804565Z         -------
2025-01-07T17:55:37.4804703Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4804772Z         """
2025-01-07T17:55:37.4804912Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4804921Z 
2025-01-07T17:55:37.4805066Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4805180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4805339Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4805489Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4805706Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4805843Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4806051Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4806124Z     return cls(
2025-01-07T17:55:37.4806232Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4806236Z 
2025-01-07T17:55:37.4806521Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4806663Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4806844Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4807027Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4807227Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4807442Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4807629Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4807729Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4807891Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4808007Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4808120Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4808129Z 
2025-01-07T17:55:37.4808214Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4808382Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4808487Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4808682Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4808754Z        0.00025518])
2025-01-07T17:55:37.4808914Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4809109Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4809237Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4809364Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4809575Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4809677Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4810001Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4810149Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4810338Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4810459Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4810546Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4810660Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4810752Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4810910Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4811079Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4811210Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4811368Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4811531Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4811655Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4811822Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4812095Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4812232Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4812313Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4812317Z 
2025-01-07T17:55:37.4812390Z     def __init__(
2025-01-07T17:55:37.4812464Z         self,
2025-01-07T17:55:37.4812548Z         last_interaction_type,
2025-01-07T17:55:37.4812640Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4812724Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4812816Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4812901Z         last_interaction_in_r,
2025-01-07T17:55:37.4812971Z         lines_df,
2025-01-07T17:55:37.4813049Z         packet_nus,
2025-01-07T17:55:37.4813127Z         packet_energies,
2025-01-07T17:55:37.4813204Z         r_inner,
2025-01-07T17:55:37.4813290Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4813597Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4813699Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4813787Z         spectrum_wavelength,
2025-01-07T17:55:37.4813856Z         t_inner,
2025-01-07T17:55:37.4813940Z         time_of_simulation,
2025-01-07T17:55:37.4814015Z         time_explosion,
2025-01-07T17:55:37.4814088Z         v_inner,
2025-01-07T17:55:37.4814157Z         v_outer,
2025-01-07T17:55:37.4814231Z         velocity
2025-01-07T17:55:37.4814299Z     ):
2025-01-07T17:55:37.4814370Z         """
2025-01-07T17:55:37.4814600Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4814671Z     
2025-01-07T17:55:37.4814747Z         Parameters
2025-01-07T17:55:37.4814819Z         ----------
2025-01-07T17:55:37.4814914Z         last_interaction_type : np.array
2025-01-07T17:55:37.4815062Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4815188Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4815285Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4815437Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4815524Z             absorption (interaction in)
2025-01-07T17:55:37.4815629Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4815771Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4815864Z             emission (interaction out)
2025-01-07T17:55:37.4815957Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4816225Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4816322Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4816469Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4816557Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4816718Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4816812Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4816970Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4817047Z             unit of Hz
2025-01-07T17:55:37.4817143Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4817276Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4817359Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4817475Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4817587Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4817715Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4817825Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4817945Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4818050Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4818191Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4818278Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4818399Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4818505Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4818616Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4818688Z         """
2025-01-07T17:55:37.4818861Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4818972Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4819068Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4819141Z             {
2025-01-07T17:55:37.4819224Z                 "nus": packet_nus,
2025-01-07T17:55:37.4819352Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4819446Z                 "energies": packet_energies,
2025-01-07T17:55:37.4819645Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4819801Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4819944Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4820086Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4820197Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4820268Z             }
2025-01-07T17:55:37.4820335Z         )
2025-01-07T17:55:37.4820405Z     
2025-01-07T17:55:37.4820492Z         # Save other properties
2025-01-07T17:55:37.4820578Z         self.lines_df = lines_df
2025-01-07T17:55:37.4820659Z         self.r_inner = r_inner
2025-01-07T17:55:37.4820800Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4820939Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4821071Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4821182Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4821279Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4821355Z         )
2025-01-07T17:55:37.4821467Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4821552Z         self.t_inner = t_inner
2025-01-07T17:55:37.4821660Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4821758Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4821836Z         self.v_inner = v_inner
2025-01-07T17:55:37.4822105Z         self.v_outer = v_outer
2025-01-07T17:55:37.4822172Z     
2025-01-07T17:55:37.4822280Z         # First check if both options are provided
2025-01-07T17:55:37.4822456Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4822535Z >           raise ValueError(
2025-01-07T17:55:37.4822683Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4822843Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4822916Z             )
2025-01-07T17:55:37.4823265Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4823270Z 
2025-01-07T17:55:37.4823455Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4823730Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-01-07T17:55:37.4823738Z 
2025-01-07T17:55:37.4824016Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4824234Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4824467Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4824472Z 
2025-01-07T17:55:37.4824566Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4824678Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4824750Z         """
2025-01-07T17:55:37.4824836Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4824906Z     
2025-01-07T17:55:37.4824979Z         Parameters
2025-01-07T17:55:37.4825055Z         ----------
2025-01-07T17:55:37.4825200Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4825284Z             Simulation object.
2025-01-07T17:55:37.4825351Z     
2025-01-07T17:55:37.4825423Z         Returns
2025-01-07T17:55:37.4825497Z         -------
2025-01-07T17:55:37.4825631Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4825702Z         """
2025-01-07T17:55:37.4825835Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4825839Z 
2025-01-07T17:55:37.4825987Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4826227Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4826396Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4826540Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4826760Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4826891Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4827097Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4827168Z     return cls(
2025-01-07T17:55:37.4827285Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4827289Z 
2025-01-07T17:55:37.4827567Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4827705Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4827886Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4828060Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4828268Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4828368Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4828554Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4828650Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4828820Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4829064Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4829175Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4829179Z 
2025-01-07T17:55:37.4829262Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4829426Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4829536Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4829731Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4829806Z        0.00025518])
2025-01-07T17:55:37.4829960Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4830158Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4830285Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4830417Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4830624Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4830729Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4830980Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4831126Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4831319Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4831432Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4831522Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4831630Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4831726Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4831883Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4832158Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4832287Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4832435Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4832715Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4832841Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4833004Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4833130Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4833244Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4833319Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4833329Z 
2025-01-07T17:55:37.4833404Z     def __init__(
2025-01-07T17:55:37.4833482Z         self,
2025-01-07T17:55:37.4833564Z         last_interaction_type,
2025-01-07T17:55:37.4833654Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4833739Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4833830Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4833911Z         last_interaction_in_r,
2025-01-07T17:55:37.4833989Z         lines_df,
2025-01-07T17:55:37.4834061Z         packet_nus,
2025-01-07T17:55:37.4834142Z         packet_energies,
2025-01-07T17:55:37.4834211Z         r_inner,
2025-01-07T17:55:37.4834301Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4834483Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4834585Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4834669Z         spectrum_wavelength,
2025-01-07T17:55:37.4834744Z         t_inner,
2025-01-07T17:55:37.4834828Z         time_of_simulation,
2025-01-07T17:55:37.4835013Z         time_explosion,
2025-01-07T17:55:37.4835086Z         v_inner,
2025-01-07T17:55:37.4835154Z         v_outer,
2025-01-07T17:55:37.4835227Z         velocity
2025-01-07T17:55:37.4835294Z     ):
2025-01-07T17:55:37.4835366Z         """
2025-01-07T17:55:37.4835597Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4835667Z     
2025-01-07T17:55:37.4835742Z         Parameters
2025-01-07T17:55:37.4835819Z         ----------
2025-01-07T17:55:37.4835913Z         last_interaction_type : np.array
2025-01-07T17:55:37.4836071Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4836187Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4836291Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4836439Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4836533Z             absorption (interaction in)
2025-01-07T17:55:37.4836644Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4836782Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4836874Z             emission (interaction out)
2025-01-07T17:55:37.4836970Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4837126Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4837223Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4837381Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4837464Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4837629Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4837717Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4837884Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4837956Z             unit of Hz
2025-01-07T17:55:37.4838057Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4838195Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4838279Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4838396Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4838505Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4838718Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4838827Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4838953Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4839053Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4839193Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4839277Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4839405Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4839501Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4839625Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4839696Z         """
2025-01-07T17:55:37.4839871Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4839979Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4840071Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4840143Z             {
2025-01-07T17:55:37.4840224Z                 "nus": packet_nus,
2025-01-07T17:55:37.4840356Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4840447Z                 "energies": packet_energies,
2025-01-07T17:55:37.4840570Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4840718Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4840867Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4841005Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4841203Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4841276Z             }
2025-01-07T17:55:37.4841343Z         )
2025-01-07T17:55:37.4841414Z     
2025-01-07T17:55:37.4841496Z         # Save other properties
2025-01-07T17:55:37.4841582Z         self.lines_df = lines_df
2025-01-07T17:55:37.4841665Z         self.r_inner = r_inner
2025-01-07T17:55:37.4841813Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4842100Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4842271Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4842381Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4842483Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4842550Z         )
2025-01-07T17:55:37.4842672Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4842752Z         self.t_inner = t_inner
2025-01-07T17:55:37.4842870Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4842968Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4843045Z         self.v_inner = v_inner
2025-01-07T17:55:37.4843126Z         self.v_outer = v_outer
2025-01-07T17:55:37.4843192Z     
2025-01-07T17:55:37.4843296Z         # First check if both options are provided
2025-01-07T17:55:37.4843469Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4843554Z >           raise ValueError(
2025-01-07T17:55:37.4843695Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4843861Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4843927Z             )
2025-01-07T17:55:37.4844285Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4844294Z 
2025-01-07T17:55:37.4844471Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4844746Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-01-07T17:55:37.4844750Z 
2025-01-07T17:55:37.4845025Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4845358Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4845599Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4845603Z 
2025-01-07T17:55:37.4845691Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4845806Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4845873Z         """
2025-01-07T17:55:37.4845963Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4846029Z     
2025-01-07T17:55:37.4846107Z         Parameters
2025-01-07T17:55:37.4846182Z         ----------
2025-01-07T17:55:37.4846327Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4846412Z             Simulation object.
2025-01-07T17:55:37.4846479Z     
2025-01-07T17:55:37.4846554Z         Returns
2025-01-07T17:55:37.4846623Z         -------
2025-01-07T17:55:37.4846760Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4846828Z         """
2025-01-07T17:55:37.4846969Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4846973Z 
2025-01-07T17:55:37.4847117Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4847230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4847389Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4847541Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4847758Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4847999Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4848204Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4848275Z     return cls(
2025-01-07T17:55:37.4848390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4848395Z 
2025-01-07T17:55:37.4848673Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4848820Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4848997Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4849181Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4849380Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4849487Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4849677Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4849773Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4849941Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4850053Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4850171Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4850176Z 
2025-01-07T17:55:37.4850253Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4850423Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4850529Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4850731Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4850804Z        0.00025518])
2025-01-07T17:55:37.4850960Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4851163Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4851287Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4851422Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4851722Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4851832Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4852252Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4852406Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4852600Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4852713Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4852812Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4852925Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4853024Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4853177Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4853354Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4853480Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4853632Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4853798Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4853924Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4854088Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4854213Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4854444Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4854519Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4854524Z 
2025-01-07T17:55:37.4854601Z     def __init__(
2025-01-07T17:55:37.4854671Z         self,
2025-01-07T17:55:37.4854758Z         last_interaction_type,
2025-01-07T17:55:37.4854848Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4854940Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4855024Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4855109Z         last_interaction_in_r,
2025-01-07T17:55:37.4855180Z         lines_df,
2025-01-07T17:55:37.4855259Z         packet_nus,
2025-01-07T17:55:37.4855337Z         packet_energies,
2025-01-07T17:55:37.4855413Z         r_inner,
2025-01-07T17:55:37.4855502Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4855680Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4855784Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4855865Z         spectrum_wavelength,
2025-01-07T17:55:37.4855939Z         t_inner,
2025-01-07T17:55:37.4856018Z         time_of_simulation,
2025-01-07T17:55:37.4856099Z         time_explosion,
2025-01-07T17:55:37.4856168Z         v_inner,
2025-01-07T17:55:37.4856241Z         v_outer,
2025-01-07T17:55:37.4856312Z         velocity
2025-01-07T17:55:37.4856386Z     ):
2025-01-07T17:55:37.4856454Z         """
2025-01-07T17:55:37.4856687Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4856753Z     
2025-01-07T17:55:37.4856830Z         Parameters
2025-01-07T17:55:37.4856902Z         ----------
2025-01-07T17:55:37.4856998Z         last_interaction_type : np.array
2025-01-07T17:55:37.4857149Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4857265Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4857371Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4857517Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4857609Z             absorption (interaction in)
2025-01-07T17:55:37.4857708Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4857855Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4858072Z             emission (interaction out)
2025-01-07T17:55:37.4858175Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4858327Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4858425Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4858573Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4858661Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4858825Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4858919Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4859084Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4859156Z             unit of Hz
2025-01-07T17:55:37.4859259Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4859388Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4859480Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4859591Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4859704Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4859827Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4859939Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4860063Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4860167Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4860307Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4860467Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4860593Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4860687Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4860806Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4860877Z         """
2025-01-07T17:55:37.4861058Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4861160Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4861256Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4861323Z             {
2025-01-07T17:55:37.4861406Z                 "nus": packet_nus,
2025-01-07T17:55:37.4861529Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4861623Z                 "energies": packet_energies,
2025-01-07T17:55:37.4861745Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4861892Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4862155Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4862298Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4862415Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4862486Z             }
2025-01-07T17:55:37.4862559Z         )
2025-01-07T17:55:37.4862625Z     
2025-01-07T17:55:37.4862712Z         # Save other properties
2025-01-07T17:55:37.4862793Z         self.lines_df = lines_df
2025-01-07T17:55:37.4862876Z         self.r_inner = r_inner
2025-01-07T17:55:37.4863017Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4863153Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4863282Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4863395Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4863498Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4863565Z         )
2025-01-07T17:55:37.4863685Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4863765Z         self.t_inner = t_inner
2025-01-07T17:55:37.4863878Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4864086Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4864172Z         self.v_inner = v_inner
2025-01-07T17:55:37.4864250Z         self.v_outer = v_outer
2025-01-07T17:55:37.4864319Z     
2025-01-07T17:55:37.4864421Z         # First check if both options are provided
2025-01-07T17:55:37.4864599Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4864678Z >           raise ValueError(
2025-01-07T17:55:37.4864820Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4864986Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4865057Z             )
2025-01-07T17:55:37.4865415Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4865420Z 
2025-01-07T17:55:37.4865591Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4865874Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-01-07T17:55:37.4865879Z 
2025-01-07T17:55:37.4866149Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4866370Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4866602Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4866610Z 
2025-01-07T17:55:37.4866697Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4866813Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4866987Z         """
2025-01-07T17:55:37.4867079Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4867145Z     
2025-01-07T17:55:37.4867221Z         Parameters
2025-01-07T17:55:37.4867291Z         ----------
2025-01-07T17:55:37.4867438Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4867518Z             Simulation object.
2025-01-07T17:55:37.4867592Z     
2025-01-07T17:55:37.4867661Z         Returns
2025-01-07T17:55:37.4867735Z         -------
2025-01-07T17:55:37.4867866Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4867937Z         """
2025-01-07T17:55:37.4868072Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4868076Z 
2025-01-07T17:55:37.4868224Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4868337Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4868495Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4868650Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4868863Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4869000Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4869289Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4869405Z     return cls(
2025-01-07T17:55:37.4869586Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4869592Z 
2025-01-07T17:55:37.4870072Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4870310Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4870531Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4870713Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4870918Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4871024Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4871206Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4871403Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4871568Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4871684Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4871794Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4871803Z 
2025-01-07T17:55:37.4871881Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4872204Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4872315Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4872525Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4872593Z        0.00025518])
2025-01-07T17:55:37.4872753Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4872944Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4873073Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4873202Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4873409Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4873516Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4873761Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4873912Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4874218Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4874336Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4874422Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4874536Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4874632Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4874791Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4874991Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4875119Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4875272Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4875436Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4875567Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4875727Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4875858Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4875969Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4876052Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4876056Z 
2025-01-07T17:55:37.4876126Z     def __init__(
2025-01-07T17:55:37.4876200Z         self,
2025-01-07T17:55:37.4876284Z         last_interaction_type,
2025-01-07T17:55:37.4876375Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4876465Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4876550Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4876635Z         last_interaction_in_r,
2025-01-07T17:55:37.4876705Z         lines_df,
2025-01-07T17:55:37.4876782Z         packet_nus,
2025-01-07T17:55:37.4876863Z         packet_energies,
2025-01-07T17:55:37.4876937Z         r_inner,
2025-01-07T17:55:37.4877020Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4877203Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4877297Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4877383Z         spectrum_wavelength,
2025-01-07T17:55:37.4877585Z         t_inner,
2025-01-07T17:55:37.4877674Z         time_of_simulation,
2025-01-07T17:55:37.4877750Z         time_explosion,
2025-01-07T17:55:37.4877826Z         v_inner,
2025-01-07T17:55:37.4877894Z         v_outer,
2025-01-07T17:55:37.4877968Z         velocity
2025-01-07T17:55:37.4878034Z     ):
2025-01-07T17:55:37.4878106Z         """
2025-01-07T17:55:37.4878336Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4878402Z     
2025-01-07T17:55:37.4878479Z         Parameters
2025-01-07T17:55:37.4878549Z         ----------
2025-01-07T17:55:37.4878650Z         last_interaction_type : np.array
2025-01-07T17:55:37.4878802Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4878923Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4879019Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4879170Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4879262Z             absorption (interaction in)
2025-01-07T17:55:37.4879365Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4879505Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4879597Z             emission (interaction out)
2025-01-07T17:55:37.4879697Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4879846Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4879943Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4880093Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4880262Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4880422Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4880519Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4880679Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4880759Z             unit of Hz
2025-01-07T17:55:37.4880857Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4880992Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4881076Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4881191Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4881304Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4881429Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4881541Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4881669Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4881773Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4881910Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4882191Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4882318Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4882423Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4882537Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4882612Z         """
2025-01-07T17:55:37.4882791Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4882903Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4882999Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4883067Z             {
2025-01-07T17:55:37.4883151Z                 "nus": packet_nus,
2025-01-07T17:55:37.4883276Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4883376Z                 "energies": packet_energies,
2025-01-07T17:55:37.4883494Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4883645Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4883908Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4884056Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4884168Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4884240Z             }
2025-01-07T17:55:37.4884307Z         )
2025-01-07T17:55:37.4884377Z     
2025-01-07T17:55:37.4884461Z         # Save other properties
2025-01-07T17:55:37.4884549Z         self.lines_df = lines_df
2025-01-07T17:55:37.4884632Z         self.r_inner = r_inner
2025-01-07T17:55:37.4884771Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4884914Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4885047Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4885158Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4885254Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4885328Z         )
2025-01-07T17:55:37.4885448Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4885532Z         self.t_inner = t_inner
2025-01-07T17:55:37.4885641Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4885742Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4885819Z         self.v_inner = v_inner
2025-01-07T17:55:37.4885901Z         self.v_outer = v_outer
2025-01-07T17:55:37.4885966Z     
2025-01-07T17:55:37.4886073Z         # First check if both options are provided
2025-01-07T17:55:37.4886252Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4886443Z >           raise ValueError(
2025-01-07T17:55:37.4886590Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4886752Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4886826Z             )
2025-01-07T17:55:37.4887185Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4887190Z 
2025-01-07T17:55:37.4887367Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4887641Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-01-07T17:55:37.4887651Z 
2025-01-07T17:55:37.4887921Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4888142Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4888375Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4888379Z 
2025-01-07T17:55:37.4888472Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4888584Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4888655Z         """
2025-01-07T17:55:37.4888742Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4888813Z     
2025-01-07T17:55:37.4888888Z         Parameters
2025-01-07T17:55:37.4888963Z         ----------
2025-01-07T17:55:37.4889106Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4889190Z             Simulation object.
2025-01-07T17:55:37.4889257Z     
2025-01-07T17:55:37.4889335Z         Returns
2025-01-07T17:55:37.4889411Z         -------
2025-01-07T17:55:37.4889542Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4889615Z         """
2025-01-07T17:55:37.4889749Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4889757Z 
2025-01-07T17:55:37.4889906Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4890014Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4890179Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4890328Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4890625Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4890764Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4890967Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4891051Z     return cls(
2025-01-07T17:55:37.4891157Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4891161Z 
2025-01-07T17:55:37.4891439Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4891581Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4891761Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4892070Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4892317Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4892424Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4892611Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4892712Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4892874Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4892991Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4893101Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4893221Z 
2025-01-07T17:55:37.4893306Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4893473Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4893583Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4893780Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4893858Z        0.00025518])
2025-01-07T17:55:37.4894016Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4894214Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4894339Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4894465Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4894673Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4894776Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4895026Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4895171Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4895361Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4895476Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4895571Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4895680Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4895777Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4895936Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4896105Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4896233Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4896388Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4896559Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4896679Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4896954Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4897085Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4897199Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4897278Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4897282Z 
2025-01-07T17:55:37.4897353Z     def __init__(
2025-01-07T17:55:37.4897425Z         self,
2025-01-07T17:55:37.4897507Z         last_interaction_type,
2025-01-07T17:55:37.4897597Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4897687Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4897779Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4897858Z         last_interaction_in_r,
2025-01-07T17:55:37.4897933Z         lines_df,
2025-01-07T17:55:37.4898005Z         packet_nus,
2025-01-07T17:55:37.4898086Z         packet_energies,
2025-01-07T17:55:37.4898159Z         r_inner,
2025-01-07T17:55:37.4898249Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4898430Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4898530Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4898616Z         spectrum_wavelength,
2025-01-07T17:55:37.4898686Z         t_inner,
2025-01-07T17:55:37.4898769Z         time_of_simulation,
2025-01-07T17:55:37.4898842Z         time_explosion,
2025-01-07T17:55:37.4898916Z         v_inner,
2025-01-07T17:55:37.4898985Z         v_outer,
2025-01-07T17:55:37.4899058Z         velocity
2025-01-07T17:55:37.4899125Z     ):
2025-01-07T17:55:37.4899197Z         """
2025-01-07T17:55:37.4899531Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4899602Z     
2025-01-07T17:55:37.4899674Z         Parameters
2025-01-07T17:55:37.4899751Z         ----------
2025-01-07T17:55:37.4899842Z         last_interaction_type : np.array
2025-01-07T17:55:37.4899995Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4900114Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4900215Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4900362Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4900455Z             absorption (interaction in)
2025-01-07T17:55:37.4900557Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4900699Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4900793Z             emission (interaction out)
2025-01-07T17:55:37.4900891Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4901049Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4901143Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4901297Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4901380Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4901549Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4901638Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4901804Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4901880Z             unit of Hz
2025-01-07T17:55:37.4902078Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4902217Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4902301Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4902414Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4902525Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4902658Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4902763Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4902891Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4903099Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4903245Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4903330Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4903458Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4903557Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4903669Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4903741Z         """
2025-01-07T17:55:37.4903915Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4904022Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4904114Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4904187Z             {
2025-01-07T17:55:37.4904264Z                 "nus": packet_nus,
2025-01-07T17:55:37.4904395Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4904484Z                 "energies": packet_energies,
2025-01-07T17:55:37.4904613Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4904760Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4904906Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4905049Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4905162Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4905233Z             }
2025-01-07T17:55:37.4905300Z         )
2025-01-07T17:55:37.4905370Z     
2025-01-07T17:55:37.4905561Z         # Save other properties
2025-01-07T17:55:37.4905648Z         self.lines_df = lines_df
2025-01-07T17:55:37.4905726Z         self.r_inner = r_inner
2025-01-07T17:55:37.4905871Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4906000Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4906138Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4906245Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4906345Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4906411Z         )
2025-01-07T17:55:37.4906532Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4906615Z         self.t_inner = t_inner
2025-01-07T17:55:37.4906724Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4906826Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4906904Z         self.v_inner = v_inner
2025-01-07T17:55:37.4906986Z         self.v_outer = v_outer
2025-01-07T17:55:37.4907056Z     
2025-01-07T17:55:37.4907163Z         # First check if both options are provided
2025-01-07T17:55:37.4907330Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4907414Z >           raise ValueError(
2025-01-07T17:55:37.4907551Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4907722Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4907789Z             )
2025-01-07T17:55:37.4908147Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4908152Z 
2025-01-07T17:55:37.4908327Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4908595Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-01-07T17:55:37.4908599Z 
2025-01-07T17:55:37.4908882Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4909095Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4909330Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4909334Z 
2025-01-07T17:55:37.4909501Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4909621Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4909688Z         """
2025-01-07T17:55:37.4909780Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4909850Z     
2025-01-07T17:55:37.4909923Z         Parameters
2025-01-07T17:55:37.4909998Z         ----------
2025-01-07T17:55:37.4910138Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4910222Z             Simulation object.
2025-01-07T17:55:37.4910288Z     
2025-01-07T17:55:37.4910361Z         Returns
2025-01-07T17:55:37.4910431Z         -------
2025-01-07T17:55:37.4910569Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4910638Z         """
2025-01-07T17:55:37.4910776Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4910780Z 
2025-01-07T17:55:37.4910923Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4911044Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4911203Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4911358Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4911576Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4911708Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4911912Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4912086Z     return cls(
2025-01-07T17:55:37.4912207Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4912325Z 
2025-01-07T17:55:37.4912607Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4912757Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4912941Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4913122Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4913329Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4913431Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4913621Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4913717Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4913885Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4914004Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4914119Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4914124Z 
2025-01-07T17:55:37.4914204Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4914377Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4914488Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4914689Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4914765Z        0.00025518])
2025-01-07T17:55:37.4914921Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4915121Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4915245Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4915382Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4915583Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4915693Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4916046Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4916200Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4916395Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4916508Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4916600Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4916711Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4916807Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4916962Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4917142Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4917267Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4917423Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4917588Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4917713Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4917877Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4918005Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4918117Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4918192Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4918197Z 
2025-01-07T17:55:37.4918367Z     def __init__(
2025-01-07T17:55:37.4918436Z         self,
2025-01-07T17:55:37.4918525Z         last_interaction_type,
2025-01-07T17:55:37.4918611Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4918703Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4918787Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4918872Z         last_interaction_in_r,
2025-01-07T17:55:37.4918945Z         lines_df,
2025-01-07T17:55:37.4919023Z         packet_nus,
2025-01-07T17:55:37.4919107Z         packet_energies,
2025-01-07T17:55:37.4919176Z         r_inner,
2025-01-07T17:55:37.4919266Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4919446Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4919549Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4919630Z         spectrum_wavelength,
2025-01-07T17:55:37.4919706Z         t_inner,
2025-01-07T17:55:37.4919785Z         time_of_simulation,
2025-01-07T17:55:37.4919866Z         time_explosion,
2025-01-07T17:55:37.4919941Z         v_inner,
2025-01-07T17:55:37.4920014Z         v_outer,
2025-01-07T17:55:37.4920084Z         velocity
2025-01-07T17:55:37.4920156Z     ):
2025-01-07T17:55:37.4920223Z         """
2025-01-07T17:55:37.4920455Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4920521Z     
2025-01-07T17:55:37.4920601Z         Parameters
2025-01-07T17:55:37.4920674Z         ----------
2025-01-07T17:55:37.4920771Z         last_interaction_type : np.array
2025-01-07T17:55:37.4920927Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4921044Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4921147Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4921295Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4921390Z             absorption (interaction in)
2025-01-07T17:55:37.4921490Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4921641Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4921728Z             emission (interaction out)
2025-01-07T17:55:37.4921827Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4922165Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4922394Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4922550Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4922639Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4922808Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4922898Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4923063Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4923136Z             unit of Hz
2025-01-07T17:55:37.4923236Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4923370Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4923460Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4923572Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4923684Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4923811Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4923924Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4924050Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4924148Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4924287Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4924371Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4924498Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4924594Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4924841Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4924910Z         """
2025-01-07T17:55:37.4925099Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4925203Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4925300Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4925368Z             {
2025-01-07T17:55:37.4925456Z                 "nus": packet_nus,
2025-01-07T17:55:37.4925584Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4925680Z                 "energies": packet_energies,
2025-01-07T17:55:37.4925803Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4925953Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4926105Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4926246Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4926370Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4926437Z             }
2025-01-07T17:55:37.4926508Z         )
2025-01-07T17:55:37.4926574Z     
2025-01-07T17:55:37.4926664Z         # Save other properties
2025-01-07T17:55:37.4926745Z         self.lines_df = lines_df
2025-01-07T17:55:37.4926829Z         self.r_inner = r_inner
2025-01-07T17:55:37.4926972Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4927116Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4927254Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4927363Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4927464Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4927530Z         )
2025-01-07T17:55:37.4927651Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4927730Z         self.t_inner = t_inner
2025-01-07T17:55:37.4927847Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4927941Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4928023Z         self.v_inner = v_inner
2025-01-07T17:55:37.4928101Z         self.v_outer = v_outer
2025-01-07T17:55:37.4928174Z     
2025-01-07T17:55:37.4928276Z         # First check if both options are provided
2025-01-07T17:55:37.4928534Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4928617Z >           raise ValueError(
2025-01-07T17:55:37.4928761Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4928929Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4928997Z             )
2025-01-07T17:55:37.4929354Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4929360Z 
2025-01-07T17:55:37.4929538Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4929816Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-01-07T17:55:37.4929820Z 
2025-01-07T17:55:37.4930091Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4930314Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4930554Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4930558Z 
2025-01-07T17:55:37.4930645Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4930761Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4930829Z         """
2025-01-07T17:55:37.4930919Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4930986Z     
2025-01-07T17:55:37.4931063Z         Parameters
2025-01-07T17:55:37.4931133Z         ----------
2025-01-07T17:55:37.4931362Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4931443Z             Simulation object.
2025-01-07T17:55:37.4931514Z     
2025-01-07T17:55:37.4931582Z         Returns
2025-01-07T17:55:37.4931658Z         -------
2025-01-07T17:55:37.4931792Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4931863Z         """
2025-01-07T17:55:37.4932171Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4932182Z 
2025-01-07T17:55:37.4932332Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4932446Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4932606Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4932756Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4932969Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4933109Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4937510Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4937612Z     return cls(
2025-01-07T17:55:37.4937742Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4937747Z 
2025-01-07T17:55:37.4938048Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4938211Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4938411Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4938598Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4938812Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4938921Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4939116Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4939212Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4939387Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4939502Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4939780Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4939786Z 
2025-01-07T17:55:37.4939876Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4940047Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4940168Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4940370Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4940447Z        0.00025518])
2025-01-07T17:55:37.4940607Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4940813Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4940938Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4941075Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4941289Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4941402Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4941657Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4941803Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4942158Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4942277Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4942490Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4942605Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4942705Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4942866Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4943047Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4943175Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4943332Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4943503Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4943622Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4943789Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4943919Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4944039Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4944116Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4944120Z 
2025-01-07T17:55:37.4944198Z     def __init__(
2025-01-07T17:55:37.4944268Z         self,
2025-01-07T17:55:37.4944359Z         last_interaction_type,
2025-01-07T17:55:37.4944454Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4944549Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4944639Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4944721Z         last_interaction_in_r,
2025-01-07T17:55:37.4944798Z         lines_df,
2025-01-07T17:55:37.4944871Z         packet_nus,
2025-01-07T17:55:37.4944955Z         packet_energies,
2025-01-07T17:55:37.4945025Z         r_inner,
2025-01-07T17:55:37.4945118Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4945303Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4945415Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4945497Z         spectrum_wavelength,
2025-01-07T17:55:37.4945572Z         t_inner,
2025-01-07T17:55:37.4945650Z         time_of_simulation,
2025-01-07T17:55:37.4945734Z         time_explosion,
2025-01-07T17:55:37.4945804Z         v_inner,
2025-01-07T17:55:37.4945882Z         v_outer,
2025-01-07T17:55:37.4945952Z         velocity
2025-01-07T17:55:37.4946136Z     ):
2025-01-07T17:55:37.4946209Z         """
2025-01-07T17:55:37.4946451Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4946527Z     
2025-01-07T17:55:37.4946600Z         Parameters
2025-01-07T17:55:37.4946679Z         ----------
2025-01-07T17:55:37.4946774Z         last_interaction_type : np.array
2025-01-07T17:55:37.4946932Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4947053Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4947162Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4947310Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4947405Z             absorption (interaction in)
2025-01-07T17:55:37.4947505Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4947655Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4947746Z             emission (interaction out)
2025-01-07T17:55:37.4947848Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4947997Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4948099Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4948251Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4948334Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4948512Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4948601Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4948849Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4948922Z             unit of Hz
2025-01-07T17:55:37.4949025Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4949156Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4949250Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4949362Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4949476Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4949609Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4949714Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4949844Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4949942Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4950082Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4950171Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4950298Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4950394Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4950510Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4950579Z         """
2025-01-07T17:55:37.4950769Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4950874Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4950976Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4951051Z             {
2025-01-07T17:55:37.4951130Z                 "nus": packet_nus,
2025-01-07T17:55:37.4951262Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4951353Z                 "energies": packet_energies,
2025-01-07T17:55:37.4951478Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4951624Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4951776Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4951914Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4952141Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4952210Z             }
2025-01-07T17:55:37.4952415Z         )
2025-01-07T17:55:37.4952486Z     
2025-01-07T17:55:37.4952575Z         # Save other properties
2025-01-07T17:55:37.4952658Z         self.lines_df = lines_df
2025-01-07T17:55:37.4952745Z         self.r_inner = r_inner
2025-01-07T17:55:37.4952893Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4953026Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4953162Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4953271Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4953375Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4953443Z         )
2025-01-07T17:55:37.4953565Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4953647Z         self.t_inner = t_inner
2025-01-07T17:55:37.4953764Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4953859Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4953948Z         self.v_inner = v_inner
2025-01-07T17:55:37.4954025Z         self.v_outer = v_outer
2025-01-07T17:55:37.4954101Z     
2025-01-07T17:55:37.4954204Z         # First check if both options are provided
2025-01-07T17:55:37.4954383Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4954468Z >           raise ValueError(
2025-01-07T17:55:37.4954609Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4954778Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4954959Z             )
2025-01-07T17:55:37.4955320Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4955325Z 
2025-01-07T17:55:37.4955496Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4955783Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-01-07T17:55:37.4955789Z 
2025-01-07T17:55:37.4956060Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4956281Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4956518Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4956522Z 
2025-01-07T17:55:37.4956612Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4956731Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4956804Z         """
2025-01-07T17:55:37.4956897Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4956964Z     
2025-01-07T17:55:37.4957045Z         Parameters
2025-01-07T17:55:37.4957117Z         ----------
2025-01-07T17:55:37.4957267Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4957347Z             Simulation object.
2025-01-07T17:55:37.4957423Z     
2025-01-07T17:55:37.4957493Z         Returns
2025-01-07T17:55:37.4957570Z         -------
2025-01-07T17:55:37.4957707Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4957779Z         """
2025-01-07T17:55:37.4957919Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4957923Z 
2025-01-07T17:55:37.4958070Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4958186Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4958347Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4958503Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4958714Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4958851Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4959137Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4959218Z     return cls(
2025-01-07T17:55:37.4959324Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4959328Z 
2025-01-07T17:55:37.4959607Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4959747Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4959920Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4960103Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4960308Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4960413Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4960595Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4960697Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4960860Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4960980Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4961091Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4961100Z 
2025-01-07T17:55:37.4961179Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4961347Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4961455Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4961731Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4961800Z        0.00025518])
2025-01-07T17:55:37.4962105Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4962341Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4962475Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4962606Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4962816Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4962925Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4963169Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4963321Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4963512Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4963631Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4963717Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4963833Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4963927Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4964088Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4964256Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4964384Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4964537Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4964700Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4964827Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4964986Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4965117Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4965225Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4965423Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4965428Z 
2025-01-07T17:55:37.4965502Z     def __init__(
2025-01-07T17:55:37.4965576Z         self,
2025-01-07T17:55:37.4965660Z         last_interaction_type,
2025-01-07T17:55:37.4965752Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4965841Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4965925Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4966009Z         last_interaction_in_r,
2025-01-07T17:55:37.4966079Z         lines_df,
2025-01-07T17:55:37.4966157Z         packet_nus,
2025-01-07T17:55:37.4966238Z         packet_energies,
2025-01-07T17:55:37.4966313Z         r_inner,
2025-01-07T17:55:37.4966396Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4966580Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4966674Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4966761Z         spectrum_wavelength,
2025-01-07T17:55:37.4966833Z         t_inner,
2025-01-07T17:55:37.4966919Z         time_of_simulation,
2025-01-07T17:55:37.4966994Z         time_explosion,
2025-01-07T17:55:37.4967068Z         v_inner,
2025-01-07T17:55:37.4967136Z         v_outer,
2025-01-07T17:55:37.4967210Z         velocity
2025-01-07T17:55:37.4967276Z     ):
2025-01-07T17:55:37.4967347Z         """
2025-01-07T17:55:37.4967583Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4967649Z     
2025-01-07T17:55:37.4967727Z         Parameters
2025-01-07T17:55:37.4967800Z         ----------
2025-01-07T17:55:37.4968011Z         last_interaction_type : np.array
2025-01-07T17:55:37.4968162Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4968287Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4968382Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4968540Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4968632Z             absorption (interaction in)
2025-01-07T17:55:37.4968734Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4968872Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4968963Z             emission (interaction out)
2025-01-07T17:55:37.4969057Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4969208Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4969306Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4969454Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4969547Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4969706Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4969801Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4969961Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4970042Z             unit of Hz
2025-01-07T17:55:37.4970136Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4970268Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4970351Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4970467Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4970574Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4970700Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4970809Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4970933Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4971035Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4971173Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4971261Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4971380Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4971560Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4971673Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4971745Z         """
2025-01-07T17:55:37.4972033Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4972199Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4972297Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4972365Z             {
2025-01-07T17:55:37.4972450Z                 "nus": packet_nus,
2025-01-07T17:55:37.4972577Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4972678Z                 "energies": packet_energies,
2025-01-07T17:55:37.4972795Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4972949Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4973096Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4973243Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4973355Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4973426Z             }
2025-01-07T17:55:37.4973494Z         )
2025-01-07T17:55:37.4973565Z     
2025-01-07T17:55:37.4973648Z         # Save other properties
2025-01-07T17:55:37.4973739Z         self.lines_df = lines_df
2025-01-07T17:55:37.4973823Z         self.r_inner = r_inner
2025-01-07T17:55:37.4973961Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4974220Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4974352Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4974465Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4974561Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4974632Z         )
2025-01-07T17:55:37.4974751Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4974836Z         self.t_inner = t_inner
2025-01-07T17:55:37.4974977Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4975077Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4975155Z         self.v_inner = v_inner
2025-01-07T17:55:37.4975237Z         self.v_outer = v_outer
2025-01-07T17:55:37.4975302Z     
2025-01-07T17:55:37.4975409Z         # First check if both options are provided
2025-01-07T17:55:37.4975588Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4975673Z >           raise ValueError(
2025-01-07T17:55:37.4975815Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4975977Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4976049Z             )
2025-01-07T17:55:37.4976407Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4976412Z 
2025-01-07T17:55:37.4976590Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4976865Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-01-07T17:55:37.4976869Z 
2025-01-07T17:55:37.4977145Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4977367Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4977604Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4977608Z 
2025-01-07T17:55:37.4977701Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4977816Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4977888Z         """
2025-01-07T17:55:37.4977975Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4978045Z     
2025-01-07T17:55:37.4978245Z         Parameters
2025-01-07T17:55:37.4978330Z         ----------
2025-01-07T17:55:37.4978480Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4978565Z             Simulation object.
2025-01-07T17:55:37.4978632Z     
2025-01-07T17:55:37.4978706Z         Returns
2025-01-07T17:55:37.4978781Z         -------
2025-01-07T17:55:37.4978912Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4978984Z         """
2025-01-07T17:55:37.4979117Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.4979124Z 
2025-01-07T17:55:37.4979271Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.4979382Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4979547Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.4979695Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.4979914Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.4980055Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.4980258Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.4980330Z     return cls(
2025-01-07T17:55:37.4980442Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.4980446Z 
2025-01-07T17:55:37.4980719Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.4980942Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.4981114Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4981295Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.4981501Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4981605Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.4981793Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.4981890Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.4982165Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.4982279Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.4982395Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.4982399Z 
2025-01-07T17:55:37.4982480Z [29224 rows x 12 columns]
2025-01-07T17:55:37.4982651Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.4982758Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.4982950Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.4983027Z        0.00025518])
2025-01-07T17:55:37.4983183Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.4983379Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.4983503Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.4983638Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.4983840Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.4983949Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.4984196Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.4984343Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.4984534Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.4984760Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.4984855Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.4984965Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.4985060Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.4985210Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4985382Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4985504Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.4985659Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.4985829Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.4985947Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.4986114Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.4986241Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.4986355Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.4986430Z            2.000e+09] cm / s>
2025-01-07T17:55:37.4986434Z 
2025-01-07T17:55:37.4986509Z     def __init__(
2025-01-07T17:55:37.4986578Z         self,
2025-01-07T17:55:37.4986666Z         last_interaction_type,
2025-01-07T17:55:37.4986753Z         last_line_interaction_in_id,
2025-01-07T17:55:37.4986847Z         last_line_interaction_out_id,
2025-01-07T17:55:37.4987062Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.4987148Z         last_interaction_in_r,
2025-01-07T17:55:37.4987223Z         lines_df,
2025-01-07T17:55:37.4987296Z         packet_nus,
2025-01-07T17:55:37.4987381Z         packet_energies,
2025-01-07T17:55:37.4987452Z         r_inner,
2025-01-07T17:55:37.4987541Z         spectrum_delta_frequency,
2025-01-07T17:55:37.4987720Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.4987820Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.4987902Z         spectrum_wavelength,
2025-01-07T17:55:37.4987976Z         t_inner,
2025-01-07T17:55:37.4988053Z         time_of_simulation,
2025-01-07T17:55:37.4988133Z         time_explosion,
2025-01-07T17:55:37.4988202Z         v_inner,
2025-01-07T17:55:37.4988274Z         v_outer,
2025-01-07T17:55:37.4988346Z         velocity
2025-01-07T17:55:37.4988416Z     ):
2025-01-07T17:55:37.4988484Z         """
2025-01-07T17:55:37.4988720Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.4988786Z     
2025-01-07T17:55:37.4988863Z         Parameters
2025-01-07T17:55:37.4988943Z         ----------
2025-01-07T17:55:37.4989040Z         last_interaction_type : np.array
2025-01-07T17:55:37.4989196Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.4989316Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.4989418Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.4989564Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4989656Z             absorption (interaction in)
2025-01-07T17:55:37.4989753Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.4989896Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.4989982Z             emission (interaction out)
2025-01-07T17:55:37.4990083Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.4990232Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.4990331Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.4990487Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.4990569Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.4990816Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.4990907Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.4991080Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.4991152Z             unit of Hz
2025-01-07T17:55:37.4991251Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.4991379Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.4991466Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.4991576Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.4991693Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.4991817Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.4992021Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.4992150Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.4992248Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.4992392Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.4992474Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.4992598Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.4992692Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.4992806Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.4992874Z         """
2025-01-07T17:55:37.4993053Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.4993155Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.4993363Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.4993431Z             {
2025-01-07T17:55:37.4993515Z                 "nus": packet_nus,
2025-01-07T17:55:37.4993646Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.4993735Z                 "energies": packet_energies,
2025-01-07T17:55:37.4993862Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.4994011Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.4994157Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.4994296Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.4994412Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.4994479Z             }
2025-01-07T17:55:37.4994550Z         )
2025-01-07T17:55:37.4994620Z     
2025-01-07T17:55:37.4994707Z         # Save other properties
2025-01-07T17:55:37.4994793Z         self.lines_df = lines_df
2025-01-07T17:55:37.4994877Z         self.r_inner = r_inner
2025-01-07T17:55:37.4995019Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.4995158Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.4995298Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.4995407Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.4995507Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.4995574Z         )
2025-01-07T17:55:37.4995695Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.4995773Z         self.t_inner = t_inner
2025-01-07T17:55:37.4995884Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.4995978Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.4996060Z         self.v_inner = v_inner
2025-01-07T17:55:37.4996138Z         self.v_outer = v_outer
2025-01-07T17:55:37.4996212Z     
2025-01-07T17:55:37.4996314Z         # First check if both options are provided
2025-01-07T17:55:37.4996491Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.4996575Z >           raise ValueError(
2025-01-07T17:55:37.4996715Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.4996994Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.4997064Z             )
2025-01-07T17:55:37.4997420Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.4997426Z 
2025-01-07T17:55:37.4997594Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.4997871Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-01-07T17:55:37.4997875Z 
2025-01-07T17:55:37.4998148Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.4998375Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.4998615Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.4998619Z 
2025-01-07T17:55:37.4998710Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.4998828Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.4998896Z         """
2025-01-07T17:55:37.4998985Z         Create a SDECPlotter object.
2025-01-07T17:55:37.4999050Z     
2025-01-07T17:55:37.4999127Z         Parameters
2025-01-07T17:55:37.4999197Z         ----------
2025-01-07T17:55:37.4999341Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.4999420Z             Simulation object.
2025-01-07T17:55:37.4999489Z     
2025-01-07T17:55:37.4999559Z         Returns
2025-01-07T17:55:37.4999633Z         -------
2025-01-07T17:55:37.4999864Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.4999936Z         """
2025-01-07T17:55:37.5000075Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5000080Z 
2025-01-07T17:55:37.5000223Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5000341Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5000503Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5000651Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5000865Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5001001Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5001198Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5001277Z     return cls(
2025-01-07T17:55:37.5001383Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5001397Z 
2025-01-07T17:55:37.5001668Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5001812Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5002153Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5002344Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5002544Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5002648Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5002831Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5002932Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5003097Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5003220Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5003335Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5003339Z 
2025-01-07T17:55:37.5003418Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5003586Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5003811Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5004011Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5004080Z        0.00025518])
2025-01-07T17:55:37.5004242Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5004432Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5004558Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5004694Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5004897Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5005004Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5005245Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5005395Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5005581Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5005698Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5005784Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5005897Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5005986Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5006142Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5006423Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5006548Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5006702Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5006871Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5006994Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5007149Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5007280Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5007387Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5007465Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5007470Z 
2025-01-07T17:55:37.5007548Z     def __init__(
2025-01-07T17:55:37.5007617Z         self,
2025-01-07T17:55:37.5007705Z         last_interaction_type,
2025-01-07T17:55:37.5007791Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5007882Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5007965Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5008051Z         last_interaction_in_r,
2025-01-07T17:55:37.5008125Z         lines_df,
2025-01-07T17:55:37.5008202Z         packet_nus,
2025-01-07T17:55:37.5008281Z         packet_energies,
2025-01-07T17:55:37.5008355Z         r_inner,
2025-01-07T17:55:37.5008439Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5008629Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5008724Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5008809Z         spectrum_wavelength,
2025-01-07T17:55:37.5008879Z         t_inner,
2025-01-07T17:55:37.5008965Z         time_of_simulation,
2025-01-07T17:55:37.5009041Z         time_explosion,
2025-01-07T17:55:37.5009122Z         v_inner,
2025-01-07T17:55:37.5009195Z         v_outer,
2025-01-07T17:55:37.5009265Z         velocity
2025-01-07T17:55:37.5009336Z     ):
2025-01-07T17:55:37.5009405Z         """
2025-01-07T17:55:37.5009635Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5009701Z     
2025-01-07T17:55:37.5009859Z         Parameters
2025-01-07T17:55:37.5009932Z         ----------
2025-01-07T17:55:37.5010028Z         last_interaction_type : np.array
2025-01-07T17:55:37.5010178Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5010298Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5010393Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5010540Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5010627Z             absorption (interaction in)
2025-01-07T17:55:37.5010732Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5010880Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5010967Z             emission (interaction out)
2025-01-07T17:55:37.5011066Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5011215Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5011316Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5011466Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5011554Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5011714Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5011809Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5012123Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5012214Z             unit of Hz
2025-01-07T17:55:37.5012311Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5012566Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5012655Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5012765Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5012879Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5013005Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5013118Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5013240Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5013342Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5013476Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5013563Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5013682Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5013782Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5013893Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5013969Z         """
2025-01-07T17:55:37.5014147Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5014251Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5014348Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5014415Z             {
2025-01-07T17:55:37.5014501Z                 "nus": packet_nus,
2025-01-07T17:55:37.5014628Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5014724Z                 "energies": packet_energies,
2025-01-07T17:55:37.5014840Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5014992Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5015133Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5015277Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5015392Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5015464Z             }
2025-01-07T17:55:37.5015537Z         )
2025-01-07T17:55:37.5015602Z     
2025-01-07T17:55:37.5015693Z         # Save other properties
2025-01-07T17:55:37.5015775Z         self.lines_df = lines_df
2025-01-07T17:55:37.5015858Z         self.r_inner = r_inner
2025-01-07T17:55:37.5016114Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5016256Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5016388Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5016500Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5016595Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5016665Z         )
2025-01-07T17:55:37.5016782Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5016864Z         self.t_inner = t_inner
2025-01-07T17:55:37.5016978Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5017076Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5017158Z         self.v_inner = v_inner
2025-01-07T17:55:37.5017235Z         self.v_outer = v_outer
2025-01-07T17:55:37.5017306Z     
2025-01-07T17:55:37.5017407Z         # First check if both options are provided
2025-01-07T17:55:37.5017585Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5017669Z >           raise ValueError(
2025-01-07T17:55:37.5017811Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5017972Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5018046Z             )
2025-01-07T17:55:37.5018398Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5018402Z 
2025-01-07T17:55:37.5018661Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5018944Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-01-07T17:55:37.5018948Z 
2025-01-07T17:55:37.5019217Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5019439Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5019669Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5019673Z 
2025-01-07T17:55:37.5019766Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5019876Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5019950Z         """
2025-01-07T17:55:37.5020037Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5020108Z     
2025-01-07T17:55:37.5020180Z         Parameters
2025-01-07T17:55:37.5020256Z         ----------
2025-01-07T17:55:37.5020407Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5020484Z             Simulation object.
2025-01-07T17:55:37.5020555Z     
2025-01-07T17:55:37.5020624Z         Returns
2025-01-07T17:55:37.5020697Z         -------
2025-01-07T17:55:37.5020826Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5020897Z         """
2025-01-07T17:55:37.5021034Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5021039Z 
2025-01-07T17:55:37.5021187Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5021296Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5021458Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5021603Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5021828Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5022075Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5022277Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5022353Z     return cls(
2025-01-07T17:55:37.5022457Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5022461Z 
2025-01-07T17:55:37.5022850Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5022991Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5023177Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5023350Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5023553Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5023651Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5023841Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5023944Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5024104Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5024221Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5024335Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5024339Z 
2025-01-07T17:55:37.5024420Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5024584Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5024694Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5024886Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5024960Z        0.00025518])
2025-01-07T17:55:37.5025120Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5025439Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5025566Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5025693Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5025902Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5026003Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5026255Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5026399Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5026589Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5026708Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5026794Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5026907Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5026995Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5027152Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5027323Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5027453Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5027603Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5027773Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5027891Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5028056Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5028188Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5028300Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5028378Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5028382Z 
2025-01-07T17:55:37.5028452Z     def __init__(
2025-01-07T17:55:37.5028526Z         self,
2025-01-07T17:55:37.5028612Z         last_interaction_type,
2025-01-07T17:55:37.5028783Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5028872Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5028959Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5029039Z         last_interaction_in_r,
2025-01-07T17:55:37.5029115Z         lines_df,
2025-01-07T17:55:37.5029187Z         packet_nus,
2025-01-07T17:55:37.5029270Z         packet_energies,
2025-01-07T17:55:37.5029340Z         r_inner,
2025-01-07T17:55:37.5029430Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5029612Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5029710Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5029800Z         spectrum_wavelength,
2025-01-07T17:55:37.5029869Z         t_inner,
2025-01-07T17:55:37.5029951Z         time_of_simulation,
2025-01-07T17:55:37.5030027Z         time_explosion,
2025-01-07T17:55:37.5030100Z         v_inner,
2025-01-07T17:55:37.5030173Z         v_outer,
2025-01-07T17:55:37.5030246Z         velocity
2025-01-07T17:55:37.5030316Z     ):
2025-01-07T17:55:37.5030391Z         """
2025-01-07T17:55:37.5030616Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5030687Z     
2025-01-07T17:55:37.5030762Z         Parameters
2025-01-07T17:55:37.5030838Z         ----------
2025-01-07T17:55:37.5030930Z         last_interaction_type : np.array
2025-01-07T17:55:37.5031086Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5031204Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5031307Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5031540Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5031627Z             absorption (interaction in)
2025-01-07T17:55:37.5031730Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5031869Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5032060Z             emission (interaction out)
2025-01-07T17:55:37.5032156Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5032312Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5032406Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5032559Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5032640Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5032808Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5032906Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5033072Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5033149Z             unit of Hz
2025-01-07T17:55:37.5033243Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5033376Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5033459Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5033578Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5033684Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5033813Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5033916Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5034040Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5034138Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5034280Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5034371Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5034491Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5034590Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5034701Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5034773Z         """
2025-01-07T17:55:37.5035057Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5035167Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5035258Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5035334Z             {
2025-01-07T17:55:37.5035412Z                 "nus": packet_nus,
2025-01-07T17:55:37.5035542Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5035633Z                 "energies": packet_energies,
2025-01-07T17:55:37.5035756Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5035912Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5036057Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5036201Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5036314Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5036388Z             }
2025-01-07T17:55:37.5036459Z         )
2025-01-07T17:55:37.5036530Z     
2025-01-07T17:55:37.5036613Z         # Save other properties
2025-01-07T17:55:37.5036703Z         self.lines_df = lines_df
2025-01-07T17:55:37.5036781Z         self.r_inner = r_inner
2025-01-07T17:55:37.5036925Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5037059Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5037194Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5037302Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5037515Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5037587Z         )
2025-01-07T17:55:37.5037703Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5037786Z         self.t_inner = t_inner
2025-01-07T17:55:37.5037895Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5037994Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5038077Z         self.v_inner = v_inner
2025-01-07T17:55:37.5038159Z         self.v_outer = v_outer
2025-01-07T17:55:37.5038226Z     
2025-01-07T17:55:37.5038331Z         # First check if both options are provided
2025-01-07T17:55:37.5038505Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5038589Z >           raise ValueError(
2025-01-07T17:55:37.5038728Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5038894Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5038966Z             )
2025-01-07T17:55:37.5039323Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5039327Z 
2025-01-07T17:55:37.5039505Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5039779Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-01-07T17:55:37.5039784Z 
2025-01-07T17:55:37.5040059Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5040272Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5040512Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5040517Z 
2025-01-07T17:55:37.5040608Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5040718Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5040797Z         """
2025-01-07T17:55:37.5040882Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5040952Z     
2025-01-07T17:55:37.5041026Z         Parameters
2025-01-07T17:55:37.5041102Z         ----------
2025-01-07T17:55:37.5041243Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5041325Z             Simulation object.
2025-01-07T17:55:37.5041471Z     
2025-01-07T17:55:37.5041549Z         Returns
2025-01-07T17:55:37.5041621Z         -------
2025-01-07T17:55:37.5041758Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5041826Z         """
2025-01-07T17:55:37.5042151Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5042159Z 
2025-01-07T17:55:37.5042315Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5042433Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5042595Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5042746Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5042985Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5043117Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5043326Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5043398Z     return cls(
2025-01-07T17:55:37.5043510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5043514Z 
2025-01-07T17:55:37.5043788Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5043934Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5044117Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5044296Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5044620Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5044720Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5044908Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5045009Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5045179Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5045293Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5045407Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5045411Z 
2025-01-07T17:55:37.5045488Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5045657Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5045767Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5045962Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5046041Z        0.00025518])
2025-01-07T17:55:37.5046195Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5046395Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5046518Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5046649Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5046855Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5046961Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5047209Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5047351Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5047546Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5047660Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5047749Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5047855Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5048094Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5048250Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5048423Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5048546Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5048699Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5048866Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5048990Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5049153Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5049279Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5049392Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5049470Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5049474Z 
2025-01-07T17:55:37.5049550Z     def __init__(
2025-01-07T17:55:37.5049619Z         self,
2025-01-07T17:55:37.5049708Z         last_interaction_type,
2025-01-07T17:55:37.5049793Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5049883Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5049969Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5050050Z         last_interaction_in_r,
2025-01-07T17:55:37.5050123Z         lines_df,
2025-01-07T17:55:37.5050196Z         packet_nus,
2025-01-07T17:55:37.5050277Z         packet_energies,
2025-01-07T17:55:37.5050427Z         r_inner,
2025-01-07T17:55:37.5050516Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5050695Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5050796Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5050877Z         spectrum_wavelength,
2025-01-07T17:55:37.5050951Z         t_inner,
2025-01-07T17:55:37.5051033Z         time_of_simulation,
2025-01-07T17:55:37.5051114Z         time_explosion,
2025-01-07T17:55:37.5051182Z         v_inner,
2025-01-07T17:55:37.5051256Z         v_outer,
2025-01-07T17:55:37.5051325Z         velocity
2025-01-07T17:55:37.5051401Z     ):
2025-01-07T17:55:37.5051468Z         """
2025-01-07T17:55:37.5051704Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5051779Z     
2025-01-07T17:55:37.5051851Z         Parameters
2025-01-07T17:55:37.5052051Z         ----------
2025-01-07T17:55:37.5052207Z         last_interaction_type : np.array
2025-01-07T17:55:37.5052379Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5052497Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5052599Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5052749Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5052849Z             absorption (interaction in)
2025-01-07T17:55:37.5052948Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5053091Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5053176Z             emission (interaction out)
2025-01-07T17:55:37.5053278Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5053430Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5053529Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5053680Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5053766Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5053930Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5054019Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5054185Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5054376Z             unit of Hz
2025-01-07T17:55:37.5054483Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5054613Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5054705Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5054815Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5054928Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5055057Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5055161Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5055291Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5055387Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5055528Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5055611Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5055733Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5055830Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5055948Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5056015Z         """
2025-01-07T17:55:37.5056195Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5056297Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5056392Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5056460Z             {
2025-01-07T17:55:37.5056543Z                 "nus": packet_nus,
2025-01-07T17:55:37.5056673Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5056873Z                 "energies": packet_energies,
2025-01-07T17:55:37.5056997Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5057146Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5057294Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5057432Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5057549Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5057617Z             }
2025-01-07T17:55:37.5057689Z         )
2025-01-07T17:55:37.5057755Z     
2025-01-07T17:55:37.5057842Z         # Save other properties
2025-01-07T17:55:37.5057925Z         self.lines_df = lines_df
2025-01-07T17:55:37.5058009Z         self.r_inner = r_inner
2025-01-07T17:55:37.5058153Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5058292Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5058429Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5058534Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5058634Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5058700Z         )
2025-01-07T17:55:37.5058824Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5058904Z         self.t_inner = t_inner
2025-01-07T17:55:37.5059018Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5059112Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5059194Z         self.v_inner = v_inner
2025-01-07T17:55:37.5059271Z         self.v_outer = v_outer
2025-01-07T17:55:37.5059342Z     
2025-01-07T17:55:37.5059445Z         # First check if both options are provided
2025-01-07T17:55:37.5059621Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5059709Z >           raise ValueError(
2025-01-07T17:55:37.5059853Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5060024Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5060091Z             )
2025-01-07T17:55:37.5060529Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5060535Z 
2025-01-07T17:55:37.5060712Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5060996Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-01-07T17:55:37.5061000Z 
2025-01-07T17:55:37.5061270Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5061489Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5061726Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5061734Z 
2025-01-07T17:55:37.5061824Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5062047Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5062117Z         """
2025-01-07T17:55:37.5062208Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5062274Z     
2025-01-07T17:55:37.5062354Z         Parameters
2025-01-07T17:55:37.5062426Z         ----------
2025-01-07T17:55:37.5062574Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5062652Z             Simulation object.
2025-01-07T17:55:37.5062722Z     
2025-01-07T17:55:37.5062792Z         Returns
2025-01-07T17:55:37.5062867Z         -------
2025-01-07T17:55:37.5063001Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5063069Z         """
2025-01-07T17:55:37.5063210Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5063214Z 
2025-01-07T17:55:37.5063471Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5063586Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5063751Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5063912Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5064134Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5064270Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5064471Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5064550Z     return cls(
2025-01-07T17:55:37.5064662Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5064666Z 
2025-01-07T17:55:37.5064940Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5065082Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5065265Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5065443Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5065640Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5065750Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5065931Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5066036Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5066205Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5066318Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5066434Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5066438Z 
2025-01-07T17:55:37.5066519Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5066690Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5066795Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5066993Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5067063Z        0.00025518])
2025-01-07T17:55:37.5067332Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5067527Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5067652Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5067784Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5067986Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5068094Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5068342Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5068490Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5068677Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5068798Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5068884Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5068996Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5069088Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5069248Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5069422Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5069545Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5069779Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5069943Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5070068Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5070230Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5070362Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5070469Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5070549Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5070554Z 
2025-01-07T17:55:37.5070634Z     def __init__(
2025-01-07T17:55:37.5070702Z         self,
2025-01-07T17:55:37.5070791Z         last_interaction_type,
2025-01-07T17:55:37.5070877Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5070967Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5071055Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5071141Z         last_interaction_in_r,
2025-01-07T17:55:37.5071211Z         lines_df,
2025-01-07T17:55:37.5071288Z         packet_nus,
2025-01-07T17:55:37.5071366Z         packet_energies,
2025-01-07T17:55:37.5071441Z         r_inner,
2025-01-07T17:55:37.5071525Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5071710Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5071806Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5071897Z         spectrum_wavelength,
2025-01-07T17:55:37.5072064Z         t_inner,
2025-01-07T17:55:37.5072150Z         time_of_simulation,
2025-01-07T17:55:37.5072232Z         time_explosion,
2025-01-07T17:55:37.5072301Z         v_inner,
2025-01-07T17:55:37.5072373Z         v_outer,
2025-01-07T17:55:37.5072442Z         velocity
2025-01-07T17:55:37.5072513Z     ):
2025-01-07T17:55:37.5072580Z         """
2025-01-07T17:55:37.5072818Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5072884Z     
2025-01-07T17:55:37.5072960Z         Parameters
2025-01-07T17:55:37.5073031Z         ----------
2025-01-07T17:55:37.5073127Z         last_interaction_type : np.array
2025-01-07T17:55:37.5073278Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5073529Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5073629Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5073782Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5073873Z             absorption (interaction in)
2025-01-07T17:55:37.5073975Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5074120Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5074206Z             emission (interaction out)
2025-01-07T17:55:37.5074302Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5074458Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5074556Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5074706Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5074795Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5074989Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5075085Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5075243Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5075321Z             unit of Hz
2025-01-07T17:55:37.5075422Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5075556Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5075648Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5075758Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5075983Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5076108Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5076219Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5076340Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5076441Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5076579Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5076668Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5076785Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5076886Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5077002Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5077069Z         """
2025-01-07T17:55:37.5077246Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5077348Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5077448Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5077516Z             {
2025-01-07T17:55:37.5077598Z                 "nus": packet_nus,
2025-01-07T17:55:37.5077722Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5077816Z                 "energies": packet_energies,
2025-01-07T17:55:37.5077935Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5078087Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5078229Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5078376Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5078492Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5078559Z             }
2025-01-07T17:55:37.5078631Z         )
2025-01-07T17:55:37.5078696Z     
2025-01-07T17:55:37.5078784Z         # Save other properties
2025-01-07T17:55:37.5078870Z         self.lines_df = lines_df
2025-01-07T17:55:37.5078953Z         self.r_inner = r_inner
2025-01-07T17:55:37.5079092Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5079231Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5079444Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5079557Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5079651Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5079724Z         )
2025-01-07T17:55:37.5079839Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5079926Z         self.t_inner = t_inner
2025-01-07T17:55:37.5080038Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5080133Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5080216Z         self.v_inner = v_inner
2025-01-07T17:55:37.5080294Z         self.v_outer = v_outer
2025-01-07T17:55:37.5080369Z     
2025-01-07T17:55:37.5080470Z         # First check if both options are provided
2025-01-07T17:55:37.5080648Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5080729Z >           raise ValueError(
2025-01-07T17:55:37.5080874Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5081036Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5081109Z             )
2025-01-07T17:55:37.5081460Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5081464Z 
2025-01-07T17:55:37.5081649Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5081884Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] _
2025-01-07T17:55:37.5081888Z 
2025-01-07T17:55:37.5082442Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5082671Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5082904Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5082909Z 
2025-01-07T17:55:37.5083007Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5083121Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5083193Z         """
2025-01-07T17:55:37.5083280Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5083351Z     
2025-01-07T17:55:37.5083430Z         Parameters
2025-01-07T17:55:37.5083502Z         ----------
2025-01-07T17:55:37.5083650Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5083730Z             Simulation object.
2025-01-07T17:55:37.5083801Z     
2025-01-07T17:55:37.5083871Z         Returns
2025-01-07T17:55:37.5083946Z         -------
2025-01-07T17:55:37.5084085Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5084157Z         """
2025-01-07T17:55:37.5084291Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5084296Z 
2025-01-07T17:55:37.5084445Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5084563Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5084731Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5084879Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5085097Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5085235Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5085437Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5085513Z     return cls(
2025-01-07T17:55:37.5085619Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5085626Z 
2025-01-07T17:55:37.5085904Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5086042Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5086222Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5086511Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5086721Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5086832Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5087015Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5087116Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5087282Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5087404Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5087516Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5087520Z 
2025-01-07T17:55:37.5087603Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5087769Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5087885Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5088085Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5088157Z        0.00025518])
2025-01-07T17:55:37.5088315Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5088507Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5088634Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5088923Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5089134Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5089238Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5089489Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5089635Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5089828Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5089947Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5090035Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5090148Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5090238Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5090397Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5090576Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5090704Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5090855Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5091027Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5091146Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5091313Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5091446Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5091555Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5091634Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5091638Z 
2025-01-07T17:55:37.5091710Z     def __init__(
2025-01-07T17:55:37.5091787Z         self,
2025-01-07T17:55:37.5091868Z         last_interaction_type,
2025-01-07T17:55:37.5092122Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5092235Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5092325Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5092406Z         last_interaction_in_r,
2025-01-07T17:55:37.5092482Z         lines_df,
2025-01-07T17:55:37.5092673Z         packet_nus,
2025-01-07T17:55:37.5092764Z         packet_energies,
2025-01-07T17:55:37.5092834Z         r_inner,
2025-01-07T17:55:37.5092924Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5093110Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5093205Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5093293Z         spectrum_wavelength,
2025-01-07T17:55:37.5093363Z         t_inner,
2025-01-07T17:55:37.5093446Z         time_of_simulation,
2025-01-07T17:55:37.5093521Z         time_explosion,
2025-01-07T17:55:37.5093598Z         v_inner,
2025-01-07T17:55:37.5093666Z         v_outer,
2025-01-07T17:55:37.5093739Z         velocity
2025-01-07T17:55:37.5093806Z     ):
2025-01-07T17:55:37.5093877Z         """
2025-01-07T17:55:37.5094108Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5094179Z     
2025-01-07T17:55:37.5094250Z         Parameters
2025-01-07T17:55:37.5094331Z         ----------
2025-01-07T17:55:37.5094425Z         last_interaction_type : np.array
2025-01-07T17:55:37.5094582Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5094705Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5094804Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5094954Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5095042Z             absorption (interaction in)
2025-01-07T17:55:37.5095147Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5095418Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5095509Z             emission (interaction out)
2025-01-07T17:55:37.5095604Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5095759Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5095855Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5096006Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5096089Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5096255Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5096352Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5096510Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5096586Z             unit of Hz
2025-01-07T17:55:37.5096681Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5096819Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5096903Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5097018Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5097126Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5097254Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5097362Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5097489Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5097585Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5097726Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5097813Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5097934Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5098033Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5098148Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5098223Z         """
2025-01-07T17:55:37.5098397Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5098507Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5098597Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5098670Z             {
2025-01-07T17:55:37.5098830Z                 "nus": packet_nus,
2025-01-07T17:55:37.5098962Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5099052Z                 "energies": packet_energies,
2025-01-07T17:55:37.5099175Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5099329Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5099473Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5099616Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5099733Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5099808Z             }
2025-01-07T17:55:37.5099875Z         )
2025-01-07T17:55:37.5099946Z     
2025-01-07T17:55:37.5100030Z         # Save other properties
2025-01-07T17:55:37.5100116Z         self.lines_df = lines_df
2025-01-07T17:55:37.5100194Z         self.r_inner = r_inner
2025-01-07T17:55:37.5100343Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5100478Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5100615Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5100727Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5100822Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5100896Z         )
2025-01-07T17:55:37.5101012Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5101099Z         self.t_inner = t_inner
2025-01-07T17:55:37.5101287Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5101386Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5101464Z         self.v_inner = v_inner
2025-01-07T17:55:37.5101546Z         self.v_outer = v_outer
2025-01-07T17:55:37.5101612Z     
2025-01-07T17:55:37.5101717Z         # First check if both options are provided
2025-01-07T17:55:37.5101892Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5102085Z >           raise ValueError(
2025-01-07T17:55:37.5102227Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5102394Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5102466Z             )
2025-01-07T17:55:37.5102819Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5102824Z 
2025-01-07T17:55:37.5103004Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5103235Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] _
2025-01-07T17:55:37.5103239Z 
2025-01-07T17:55:37.5103518Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5103736Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5103974Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5103978Z 
2025-01-07T17:55:37.5104072Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5104185Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5104259Z         """
2025-01-07T17:55:37.5104345Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5104418Z     
2025-01-07T17:55:37.5104490Z         Parameters
2025-01-07T17:55:37.5104566Z         ----------
2025-01-07T17:55:37.5104708Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5104794Z             Simulation object.
2025-01-07T17:55:37.5104860Z     
2025-01-07T17:55:37.5104932Z         Returns
2025-01-07T17:55:37.5105001Z         -------
2025-01-07T17:55:37.5105137Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5105204Z         """
2025-01-07T17:55:37.5105462Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5105467Z 
2025-01-07T17:55:37.5105623Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5105733Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5105903Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5110228Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5110499Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5110652Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5110869Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5110951Z     return cls(
2025-01-07T17:55:37.5111067Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5111073Z 
2025-01-07T17:55:37.5111365Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5111513Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5111704Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5111895Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5112251Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5112369Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5112557Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5112823Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5112996Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5113121Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5113238Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5113243Z 
2025-01-07T17:55:37.5113331Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5113502Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5113618Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5113827Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5113898Z        0.00025518])
2025-01-07T17:55:37.5114066Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5114263Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5114391Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5114521Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5114736Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5114844Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5115099Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5115256Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5115445Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5115566Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5115654Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5115774Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5115865Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5116028Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5116203Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5116470Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5116626Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5116798Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5116924Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5117084Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5117218Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5117335Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5117418Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5117423Z 
2025-01-07T17:55:37.5117494Z     def __init__(
2025-01-07T17:55:37.5117572Z         self,
2025-01-07T17:55:37.5117657Z         last_interaction_type,
2025-01-07T17:55:37.5117758Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5117848Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5117940Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5118026Z         last_interaction_in_r,
2025-01-07T17:55:37.5118103Z         lines_df,
2025-01-07T17:55:37.5118183Z         packet_nus,
2025-01-07T17:55:37.5118262Z         packet_energies,
2025-01-07T17:55:37.5118340Z         r_inner,
2025-01-07T17:55:37.5118425Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5118612Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5118713Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5118891Z         spectrum_wavelength,
2025-01-07T17:55:37.5118961Z         t_inner,
2025-01-07T17:55:37.5119046Z         time_of_simulation,
2025-01-07T17:55:37.5119124Z         time_explosion,
2025-01-07T17:55:37.5119200Z         v_inner,
2025-01-07T17:55:37.5119271Z         v_outer,
2025-01-07T17:55:37.5119347Z         velocity
2025-01-07T17:55:37.5119415Z     ):
2025-01-07T17:55:37.5119495Z         """
2025-01-07T17:55:37.5119727Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5119803Z     
2025-01-07T17:55:37.5119877Z         Parameters
2025-01-07T17:55:37.5119956Z         ----------
2025-01-07T17:55:37.5120054Z         last_interaction_type : np.array
2025-01-07T17:55:37.5120206Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5120332Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5120438Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5120597Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5120685Z             absorption (interaction in)
2025-01-07T17:55:37.5120790Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5120936Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5121035Z             emission (interaction out)
2025-01-07T17:55:37.5121131Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5121286Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5121380Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5121535Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5121626Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5121787Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5121885Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5122265Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5122348Z             unit of Hz
2025-01-07T17:55:37.5122446Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5122584Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5122671Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5122909Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5123026Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5123158Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5123264Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5123394Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5123497Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5123635Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5123726Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5123853Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5123956Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5124068Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5124142Z         """
2025-01-07T17:55:37.5124318Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5124427Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5124519Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5124598Z             {
2025-01-07T17:55:37.5124677Z                 "nus": packet_nus,
2025-01-07T17:55:37.5124810Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5124908Z                 "energies": packet_energies,
2025-01-07T17:55:37.5125030Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5125182Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5125457Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5125603Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5125717Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5125793Z             }
2025-01-07T17:55:37.5125861Z         )
2025-01-07T17:55:37.5125938Z     
2025-01-07T17:55:37.5126022Z         # Save other properties
2025-01-07T17:55:37.5126116Z         self.lines_df = lines_df
2025-01-07T17:55:37.5126197Z         self.r_inner = r_inner
2025-01-07T17:55:37.5126349Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5126492Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5126624Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5126739Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5126833Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5126911Z         )
2025-01-07T17:55:37.5127029Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5127114Z         self.t_inner = t_inner
2025-01-07T17:55:37.5127224Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5127329Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5127411Z         self.v_inner = v_inner
2025-01-07T17:55:37.5127494Z         self.v_outer = v_outer
2025-01-07T17:55:37.5127561Z     
2025-01-07T17:55:37.5127669Z         # First check if both options are provided
2025-01-07T17:55:37.5127845Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5127932Z >           raise ValueError(
2025-01-07T17:55:37.5128076Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5128241Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5128321Z             )
2025-01-07T17:55:37.5128676Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5128681Z 
2025-01-07T17:55:37.5128866Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5129180Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] _
2025-01-07T17:55:37.5129187Z 
2025-01-07T17:55:37.5129466Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5129682Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5129927Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5129932Z 
2025-01-07T17:55:37.5130028Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5130142Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5130216Z         """
2025-01-07T17:55:37.5130306Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5130379Z     
2025-01-07T17:55:37.5130452Z         Parameters
2025-01-07T17:55:37.5130531Z         ----------
2025-01-07T17:55:37.5130676Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5130762Z             Simulation object.
2025-01-07T17:55:37.5130829Z     
2025-01-07T17:55:37.5130907Z         Returns
2025-01-07T17:55:37.5130978Z         -------
2025-01-07T17:55:37.5131120Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5131187Z         """
2025-01-07T17:55:37.5131325Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5131329Z 
2025-01-07T17:55:37.5131478Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5131595Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5131767Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5132163Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5132394Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5132534Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5132739Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5132816Z     return cls(
2025-01-07T17:55:37.5132930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5132935Z 
2025-01-07T17:55:37.5133213Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5133363Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5133538Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5133720Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5133928Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5134030Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5134215Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5134310Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5134480Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5134594Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5134712Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5134716Z 
2025-01-07T17:55:37.5134793Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5134965Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5135077Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5135274Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5135352Z        0.00025518])
2025-01-07T17:55:37.5135508Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5135710Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5135950Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5136088Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5136296Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5136404Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5136647Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5136798Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5136993Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5137109Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5137202Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5137312Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5137407Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5137564Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5137739Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5137861Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5138014Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5138184Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5138304Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5138578Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5138707Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5138819Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5138892Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5138900Z 
2025-01-07T17:55:37.5138976Z     def __init__(
2025-01-07T17:55:37.5139045Z         self,
2025-01-07T17:55:37.5139133Z         last_interaction_type,
2025-01-07T17:55:37.5139219Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5139311Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5139396Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5139482Z         last_interaction_in_r,
2025-01-07T17:55:37.5139557Z         lines_df,
2025-01-07T17:55:37.5139630Z         packet_nus,
2025-01-07T17:55:37.5139713Z         packet_energies,
2025-01-07T17:55:37.5139786Z         r_inner,
2025-01-07T17:55:37.5139875Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5140056Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5140156Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5140239Z         spectrum_wavelength,
2025-01-07T17:55:37.5140313Z         t_inner,
2025-01-07T17:55:37.5140396Z         time_of_simulation,
2025-01-07T17:55:37.5140476Z         time_explosion,
2025-01-07T17:55:37.5140545Z         v_inner,
2025-01-07T17:55:37.5140620Z         v_outer,
2025-01-07T17:55:37.5140688Z         velocity
2025-01-07T17:55:37.5140760Z     ):
2025-01-07T17:55:37.5140828Z         """
2025-01-07T17:55:37.5141065Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5141133Z     
2025-01-07T17:55:37.5141211Z         Parameters
2025-01-07T17:55:37.5141287Z         ----------
2025-01-07T17:55:37.5141380Z         last_interaction_type : np.array
2025-01-07T17:55:37.5141539Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5141657Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5141760Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5141904Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5142213Z             absorption (interaction in)
2025-01-07T17:55:37.5142316Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5142463Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5142549Z             emission (interaction out)
2025-01-07T17:55:37.5142649Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5142804Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5142903Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5143056Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5143146Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5143312Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5143402Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5143567Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5143638Z             unit of Hz
2025-01-07T17:55:37.5143743Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5143873Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5143963Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5144073Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5144189Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5144312Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5144425Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5144552Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5144760Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5144902Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5144984Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5145110Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5145210Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5145326Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5145394Z         """
2025-01-07T17:55:37.5145573Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5145676Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5145774Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5145844Z             {
2025-01-07T17:55:37.5145929Z                 "nus": packet_nus,
2025-01-07T17:55:37.5146061Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5146156Z                 "energies": packet_energies,
2025-01-07T17:55:37.5146282Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5146429Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5146576Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5146718Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5146837Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5146905Z             }
2025-01-07T17:55:37.5146976Z         )
2025-01-07T17:55:37.5147042Z     
2025-01-07T17:55:37.5147132Z         # Save other properties
2025-01-07T17:55:37.5147215Z         self.lines_df = lines_df
2025-01-07T17:55:37.5147299Z         self.r_inner = r_inner
2025-01-07T17:55:37.5147440Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5147578Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5147719Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5147826Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5147929Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5147997Z         )
2025-01-07T17:55:37.5148118Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5148299Z         self.t_inner = t_inner
2025-01-07T17:55:37.5148416Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5148511Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5148595Z         self.v_inner = v_inner
2025-01-07T17:55:37.5148671Z         self.v_outer = v_outer
2025-01-07T17:55:37.5148742Z     
2025-01-07T17:55:37.5148843Z         # First check if both options are provided
2025-01-07T17:55:37.5149025Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5149110Z >           raise ValueError(
2025-01-07T17:55:37.5149253Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5149418Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5149484Z             )
2025-01-07T17:55:37.5149846Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5149852Z 
2025-01-07T17:55:37.5150025Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5150259Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] _
2025-01-07T17:55:37.5150264Z 
2025-01-07T17:55:37.5150532Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5150750Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5150986Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5151068Z 
2025-01-07T17:55:37.5151158Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5151275Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5151343Z         """
2025-01-07T17:55:37.5151433Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5151500Z     
2025-01-07T17:55:37.5151577Z         Parameters
2025-01-07T17:55:37.5151653Z         ----------
2025-01-07T17:55:37.5151801Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5151882Z             Simulation object.
2025-01-07T17:55:37.5152049Z     
2025-01-07T17:55:37.5152120Z         Returns
2025-01-07T17:55:37.5152194Z         -------
2025-01-07T17:55:37.5152324Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5152396Z         """
2025-01-07T17:55:37.5152534Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5152538Z 
2025-01-07T17:55:37.5152682Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5152796Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5152966Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5153111Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5153330Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5153466Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5153666Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5153742Z     return cls(
2025-01-07T17:55:37.5153849Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5153852Z 
2025-01-07T17:55:37.5154133Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5154270Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5154453Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5154628Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5154834Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5155051Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5155236Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5155337Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5155499Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5155615Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5155725Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5155729Z 
2025-01-07T17:55:37.5155814Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5155984Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5156094Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5156292Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5156360Z        0.00025518])
2025-01-07T17:55:37.5156527Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5156724Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5156847Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5156974Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5157182Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5157283Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5157639Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5157784Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5157976Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5158097Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5158183Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5158299Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5158388Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5158544Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5158714Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5158839Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5158988Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5159161Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5159279Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5159441Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5159575Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5159684Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5159762Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5159766Z 
2025-01-07T17:55:37.5159836Z     def __init__(
2025-01-07T17:55:37.5159910Z         self,
2025-01-07T17:55:37.5159993Z         last_interaction_type,
2025-01-07T17:55:37.5160085Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5160171Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5160264Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5160348Z         last_interaction_in_r,
2025-01-07T17:55:37.5160423Z         lines_df,
2025-01-07T17:55:37.5160496Z         packet_nus,
2025-01-07T17:55:37.5160579Z         packet_energies,
2025-01-07T17:55:37.5160654Z         r_inner,
2025-01-07T17:55:37.5160739Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5161005Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5161104Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5161191Z         spectrum_wavelength,
2025-01-07T17:55:37.5161261Z         t_inner,
2025-01-07T17:55:37.5161344Z         time_of_simulation,
2025-01-07T17:55:37.5161419Z         time_explosion,
2025-01-07T17:55:37.5161492Z         v_inner,
2025-01-07T17:55:37.5161561Z         v_outer,
2025-01-07T17:55:37.5161633Z         velocity
2025-01-07T17:55:37.5161700Z     ):
2025-01-07T17:55:37.5161772Z         """
2025-01-07T17:55:37.5162206Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5162288Z     
2025-01-07T17:55:37.5162361Z         Parameters
2025-01-07T17:55:37.5162439Z         ----------
2025-01-07T17:55:37.5162531Z         last_interaction_type : np.array
2025-01-07T17:55:37.5162690Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5162815Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5162914Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5163066Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5163153Z             absorption (interaction in)
2025-01-07T17:55:37.5163256Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5163397Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5163491Z             emission (interaction out)
2025-01-07T17:55:37.5163587Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5163744Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5163964Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5164121Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5164209Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5164371Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5164469Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5164632Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5164712Z             unit of Hz
2025-01-07T17:55:37.5164811Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5164944Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5165028Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5165146Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5165255Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5165390Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5165498Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5165625Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5165729Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5165867Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5165960Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5166080Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5166181Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5166291Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5166362Z         """
2025-01-07T17:55:37.5166537Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5166645Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5166736Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5166811Z             {
2025-01-07T17:55:37.5166889Z                 "nus": packet_nus,
2025-01-07T17:55:37.5167018Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5167109Z                 "energies": packet_energies,
2025-01-07T17:55:37.5167233Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5167506Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5167657Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5167804Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5167917Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5167988Z             }
2025-01-07T17:55:37.5168054Z         )
2025-01-07T17:55:37.5168126Z     
2025-01-07T17:55:37.5168208Z         # Save other properties
2025-01-07T17:55:37.5168295Z         self.lines_df = lines_df
2025-01-07T17:55:37.5168380Z         self.r_inner = r_inner
2025-01-07T17:55:37.5168526Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5168660Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5168795Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5168912Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5169009Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5169084Z         )
2025-01-07T17:55:37.5169200Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5169286Z         self.t_inner = t_inner
2025-01-07T17:55:37.5169395Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5169493Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5169571Z         self.v_inner = v_inner
2025-01-07T17:55:37.5169653Z         self.v_outer = v_outer
2025-01-07T17:55:37.5169719Z     
2025-01-07T17:55:37.5169907Z         # First check if both options are provided
2025-01-07T17:55:37.5170080Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5170168Z >           raise ValueError(
2025-01-07T17:55:37.5170306Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5170475Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5170547Z             )
2025-01-07T17:55:37.5170898Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5170903Z 
2025-01-07T17:55:37.5171085Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5171316Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] _
2025-01-07T17:55:37.5171320Z 
2025-01-07T17:55:37.5171598Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5171819Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5172234Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5172240Z 
2025-01-07T17:55:37.5172333Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5172450Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5172525Z         """
2025-01-07T17:55:37.5172612Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5172684Z     
2025-01-07T17:55:37.5172757Z         Parameters
2025-01-07T17:55:37.5172832Z         ----------
2025-01-07T17:55:37.5172977Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5173060Z             Simulation object.
2025-01-07T17:55:37.5173129Z     
2025-01-07T17:55:37.5173202Z         Returns
2025-01-07T17:55:37.5173272Z         -------
2025-01-07T17:55:37.5173406Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5173479Z         """
2025-01-07T17:55:37.5173619Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5173623Z 
2025-01-07T17:55:37.5173773Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5173881Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5174182Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5174332Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5174552Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5174686Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5174894Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5174998Z     return cls(
2025-01-07T17:55:37.5175109Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5175117Z 
2025-01-07T17:55:37.5175391Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5175533Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5175716Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5175893Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5176100Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5176200Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5176385Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5176481Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5176650Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5176763Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5177016Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5177022Z 
2025-01-07T17:55:37.5177105Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5177269Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5177383Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5177579Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5177653Z        0.00025518])
2025-01-07T17:55:37.5177808Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5178005Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5178126Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5178262Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5178473Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5178582Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5178830Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5178977Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5179168Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5179279Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5179370Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5179480Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5179575Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5179726Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5179905Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5180037Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5180186Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5180437Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5180561Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5180724Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5180849Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5180965Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5181040Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5181044Z 
2025-01-07T17:55:37.5181121Z     def __init__(
2025-01-07T17:55:37.5181189Z         self,
2025-01-07T17:55:37.5181283Z         last_interaction_type,
2025-01-07T17:55:37.5181373Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5181459Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5181547Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5181628Z         last_interaction_in_r,
2025-01-07T17:55:37.5181703Z         lines_df,
2025-01-07T17:55:37.5181774Z         packet_nus,
2025-01-07T17:55:37.5181860Z         packet_energies,
2025-01-07T17:55:37.5182039Z         r_inner,
2025-01-07T17:55:37.5182132Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5182311Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5182411Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5182494Z         spectrum_wavelength,
2025-01-07T17:55:37.5182569Z         t_inner,
2025-01-07T17:55:37.5182646Z         time_of_simulation,
2025-01-07T17:55:37.5182726Z         time_explosion,
2025-01-07T17:55:37.5182796Z         v_inner,
2025-01-07T17:55:37.5182988Z         v_outer,
2025-01-07T17:55:37.5183056Z         velocity
2025-01-07T17:55:37.5183129Z     ):
2025-01-07T17:55:37.5183202Z         """
2025-01-07T17:55:37.5183436Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5183508Z     
2025-01-07T17:55:37.5183583Z         Parameters
2025-01-07T17:55:37.5183659Z         ----------
2025-01-07T17:55:37.5183755Z         last_interaction_type : np.array
2025-01-07T17:55:37.5183913Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5184032Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5184136Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5184283Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5184376Z             absorption (interaction in)
2025-01-07T17:55:37.5184473Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5184621Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5184711Z             emission (interaction out)
2025-01-07T17:55:37.5184813Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5184966Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5185060Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5185218Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5185301Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5185472Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5185561Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5185725Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5185797Z             unit of Hz
2025-01-07T17:55:37.5185899Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5186028Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5186120Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5186230Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5186345Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5186476Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5186692Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5186824Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5186923Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5187066Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5187149Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5187275Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5187373Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5187487Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5187558Z         """
2025-01-07T17:55:37.5187743Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5187846Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5187942Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5188015Z             {
2025-01-07T17:55:37.5188094Z                 "nus": packet_nus,
2025-01-07T17:55:37.5188231Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5188323Z                 "energies": packet_energies,
2025-01-07T17:55:37.5188448Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5188597Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5188743Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5188891Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5189008Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5189154Z             }
2025-01-07T17:55:37.5189226Z         )
2025-01-07T17:55:37.5189292Z     
2025-01-07T17:55:37.5189379Z         # Save other properties
2025-01-07T17:55:37.5189467Z         self.lines_df = lines_df
2025-01-07T17:55:37.5189548Z         self.r_inner = r_inner
2025-01-07T17:55:37.5189697Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5189830Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5189968Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5190076Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5190178Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5190245Z         )
2025-01-07T17:55:37.5190365Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5190447Z         self.t_inner = t_inner
2025-01-07T17:55:37.5190563Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5190661Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5190746Z         self.v_inner = v_inner
2025-01-07T17:55:37.5190823Z         self.v_outer = v_outer
2025-01-07T17:55:37.5190893Z     
2025-01-07T17:55:37.5190998Z         # First check if both options are provided
2025-01-07T17:55:37.5191172Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5191258Z >           raise ValueError(
2025-01-07T17:55:37.5191396Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5191562Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5191629Z             )
2025-01-07T17:55:37.5192089Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5192094Z 
2025-01-07T17:55:37.5192268Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5192506Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] _
2025-01-07T17:55:37.5192510Z 
2025-01-07T17:55:37.5192780Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5192992Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5193340Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5193345Z 
2025-01-07T17:55:37.5193437Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5193555Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5193622Z         """
2025-01-07T17:55:37.5193712Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5193780Z     
2025-01-07T17:55:37.5193857Z         Parameters
2025-01-07T17:55:37.5193928Z         ----------
2025-01-07T17:55:37.5194074Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5194158Z             Simulation object.
2025-01-07T17:55:37.5194230Z     
2025-01-07T17:55:37.5194303Z         Returns
2025-01-07T17:55:37.5194373Z         -------
2025-01-07T17:55:37.5194508Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5194575Z         """
2025-01-07T17:55:37.5194712Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5194719Z 
2025-01-07T17:55:37.5194862Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5194981Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5195142Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5195295Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5195508Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5195644Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5195976Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5196056Z     return cls(
2025-01-07T17:55:37.5196166Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5196170Z 
2025-01-07T17:55:37.5196448Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5196594Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5196770Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5196947Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5197142Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5197250Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5197434Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5197539Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5197709Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5197822Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5197937Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5197944Z 
2025-01-07T17:55:37.5198021Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5198190Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5198294Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5198494Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5198563Z        0.00025518])
2025-01-07T17:55:37.5198727Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5198933Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5199057Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5199195Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5199415Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5199614Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5199862Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5200010Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5200197Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5200314Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5200399Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5200512Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5200610Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5200762Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5200935Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5201060Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5201214Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5201382Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5201506Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5201662Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5201794Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5201906Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5202276Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5202282Z 
2025-01-07T17:55:37.5202358Z     def __init__(
2025-01-07T17:55:37.5202426Z         self,
2025-01-07T17:55:37.5202513Z         last_interaction_type,
2025-01-07T17:55:37.5202599Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5202694Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5202777Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5202861Z         last_interaction_in_r,
2025-01-07T17:55:37.5202929Z         lines_df,
2025-01-07T17:55:37.5203006Z         packet_nus,
2025-01-07T17:55:37.5203084Z         packet_energies,
2025-01-07T17:55:37.5203157Z         r_inner,
2025-01-07T17:55:37.5203238Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5203426Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5203524Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5203614Z         spectrum_wavelength,
2025-01-07T17:55:37.5203687Z         t_inner,
2025-01-07T17:55:37.5203765Z         time_of_simulation,
2025-01-07T17:55:37.5203844Z         time_explosion,
2025-01-07T17:55:37.5203911Z         v_inner,
2025-01-07T17:55:37.5203982Z         v_outer,
2025-01-07T17:55:37.5204049Z         velocity
2025-01-07T17:55:37.5204121Z     ):
2025-01-07T17:55:37.5204186Z         """
2025-01-07T17:55:37.5204424Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5204490Z     
2025-01-07T17:55:37.5204567Z         Parameters
2025-01-07T17:55:37.5204636Z         ----------
2025-01-07T17:55:37.5204730Z         last_interaction_type : np.array
2025-01-07T17:55:37.5204880Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5205001Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5205097Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5205247Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5205342Z             absorption (interaction in)
2025-01-07T17:55:37.5205439Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5205582Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5205671Z             emission (interaction out)
2025-01-07T17:55:37.5205878Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5206030Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5206129Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5206276Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5206364Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5206520Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5206613Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5206774Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5206855Z             unit of Hz
2025-01-07T17:55:37.5206953Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5207079Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5207166Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5207276Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5207390Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5207513Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5207623Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5207741Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5207843Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5207974Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5208063Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5208278Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5208377Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5208490Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5208555Z         """
2025-01-07T17:55:37.5208731Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5208838Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5208932Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5208998Z             {
2025-01-07T17:55:37.5209079Z                 "nus": packet_nus,
2025-01-07T17:55:37.5209209Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5209307Z                 "energies": packet_energies,
2025-01-07T17:55:37.5209423Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5209574Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5209716Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5209858Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5209974Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5210040Z             }
2025-01-07T17:55:37.5210110Z         )
2025-01-07T17:55:37.5210175Z     
2025-01-07T17:55:37.5210264Z         # Save other properties
2025-01-07T17:55:37.5210345Z         self.lines_df = lines_df
2025-01-07T17:55:37.5210431Z         self.r_inner = r_inner
2025-01-07T17:55:37.5210569Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5210706Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5210838Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5210949Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5211045Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5211118Z         )
2025-01-07T17:55:37.5211232Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5211315Z         self.t_inner = t_inner
2025-01-07T17:55:37.5211428Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5211523Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5211604Z         self.v_inner = v_inner
2025-01-07T17:55:37.5211762Z         self.v_outer = v_outer
2025-01-07T17:55:37.5211837Z     
2025-01-07T17:55:37.5212071Z         # First check if both options are provided
2025-01-07T17:55:37.5212285Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5212368Z >           raise ValueError(
2025-01-07T17:55:37.5212509Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5212674Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5212749Z             )
2025-01-07T17:55:37.5213100Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5213114Z 
2025-01-07T17:55:37.5213286Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5213521Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] _
2025-01-07T17:55:37.5213526Z 
2025-01-07T17:55:37.5213796Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5214010Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5214237Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5214242Z 
2025-01-07T17:55:37.5214332Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5214445Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5214515Z         """
2025-01-07T17:55:37.5214607Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5214791Z     
2025-01-07T17:55:37.5214867Z         Parameters
2025-01-07T17:55:37.5214937Z         ----------
2025-01-07T17:55:37.5215085Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5215163Z             Simulation object.
2025-01-07T17:55:37.5215236Z     
2025-01-07T17:55:37.5215303Z         Returns
2025-01-07T17:55:37.5215379Z         -------
2025-01-07T17:55:37.5215509Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5215579Z         """
2025-01-07T17:55:37.5215712Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5215716Z 
2025-01-07T17:55:37.5215865Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5215973Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5216137Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5216286Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5216500Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5216637Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5216836Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5216910Z     return cls(
2025-01-07T17:55:37.5217021Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5217025Z 
2025-01-07T17:55:37.5217303Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5217442Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5217622Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5217798Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5217999Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5218109Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5218293Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5218392Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5218674Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5218795Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5218906Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5218911Z 
2025-01-07T17:55:37.5218993Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5219157Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5219266Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5219463Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5219537Z        0.00025518])
2025-01-07T17:55:37.5219705Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5219897Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5220024Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5220158Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5220369Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5220477Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5220726Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5220873Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5221067Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5221286Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5221373Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5221494Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5221583Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5221749Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5222025Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5222159Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5222310Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5222478Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5222598Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5222761Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5222892Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5223000Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5223079Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5223083Z 
2025-01-07T17:55:37.5223156Z     def __init__(
2025-01-07T17:55:37.5223229Z         self,
2025-01-07T17:55:37.5223313Z         last_interaction_type,
2025-01-07T17:55:37.5223404Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5223490Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5223580Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5223658Z         last_interaction_in_r,
2025-01-07T17:55:37.5223732Z         lines_df,
2025-01-07T17:55:37.5223804Z         packet_nus,
2025-01-07T17:55:37.5223886Z         packet_energies,
2025-01-07T17:55:37.5223959Z         r_inner,
2025-01-07T17:55:37.5224045Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5224242Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5224340Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5224427Z         spectrum_wavelength,
2025-01-07T17:55:37.5224496Z         t_inner,
2025-01-07T17:55:37.5224579Z         time_of_simulation,
2025-01-07T17:55:37.5224771Z         time_explosion,
2025-01-07T17:55:37.5224848Z         v_inner,
2025-01-07T17:55:37.5224917Z         v_outer,
2025-01-07T17:55:37.5224988Z         velocity
2025-01-07T17:55:37.5225054Z     ):
2025-01-07T17:55:37.5225129Z         """
2025-01-07T17:55:37.5225363Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5225434Z     
2025-01-07T17:55:37.5225505Z         Parameters
2025-01-07T17:55:37.5225580Z         ----------
2025-01-07T17:55:37.5225676Z         last_interaction_type : np.array
2025-01-07T17:55:37.5225830Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5225956Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5226054Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5226204Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5226291Z             absorption (interaction in)
2025-01-07T17:55:37.5226397Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5226538Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5226634Z             emission (interaction out)
2025-01-07T17:55:37.5226732Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5226885Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5226979Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5227135Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5227222Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5227491Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5227586Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5227749Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5227826Z             unit of Hz
2025-01-07T17:55:37.5227920Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5228058Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5228143Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5228258Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5228368Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5228496Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5228600Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5228727Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5228833Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5228968Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5229057Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5229177Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5229275Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5229389Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5229460Z         """
2025-01-07T17:55:37.5229636Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5229745Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5229835Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5229906Z             {
2025-01-07T17:55:37.5229985Z                 "nus": packet_nus,
2025-01-07T17:55:37.5230115Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5230209Z                 "energies": packet_energies,
2025-01-07T17:55:37.5230330Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5230483Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5230626Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5230852Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5230968Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5231039Z             }
2025-01-07T17:55:37.5231105Z         )
2025-01-07T17:55:37.5231174Z     
2025-01-07T17:55:37.5231257Z         # Save other properties
2025-01-07T17:55:37.5231344Z         self.lines_df = lines_df
2025-01-07T17:55:37.5231423Z         self.r_inner = r_inner
2025-01-07T17:55:37.5231567Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5231700Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5231839Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5232054Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5232152Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5232222Z         )
2025-01-07T17:55:37.5232335Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5232420Z         self.t_inner = t_inner
2025-01-07T17:55:37.5232531Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5232629Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5232706Z         self.v_inner = v_inner
2025-01-07T17:55:37.5232786Z         self.v_outer = v_outer
2025-01-07T17:55:37.5232851Z     
2025-01-07T17:55:37.5232954Z         # First check if both options are provided
2025-01-07T17:55:37.5233126Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5233209Z >           raise ValueError(
2025-01-07T17:55:37.5233354Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5233629Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5233705Z             )
2025-01-07T17:55:37.5234061Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5234066Z 
2025-01-07T17:55:37.5234248Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5234477Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] _
2025-01-07T17:55:37.5234482Z 
2025-01-07T17:55:37.5234758Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5234974Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5235208Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5235215Z 
2025-01-07T17:55:37.5235308Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5235421Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5235497Z         """
2025-01-07T17:55:37.5235583Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5235655Z     
2025-01-07T17:55:37.5235727Z         Parameters
2025-01-07T17:55:37.5235802Z         ----------
2025-01-07T17:55:37.5235950Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5236034Z             Simulation object.
2025-01-07T17:55:37.5236100Z     
2025-01-07T17:55:37.5236173Z         Returns
2025-01-07T17:55:37.5236242Z         -------
2025-01-07T17:55:37.5236377Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5236445Z         """
2025-01-07T17:55:37.5236583Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5236587Z 
2025-01-07T17:55:37.5236739Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5236852Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5237015Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5237161Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5237381Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5237625Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5237833Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5237905Z     return cls(
2025-01-07T17:55:37.5238016Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5238020Z 
2025-01-07T17:55:37.5238300Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5238440Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5238620Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5238798Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5238999Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5239099Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5239287Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5239382Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5239547Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5239659Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5239777Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5239780Z 
2025-01-07T17:55:37.5239862Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5240029Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5240241Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5240434Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5240507Z        0.00025518])
2025-01-07T17:55:37.5240663Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5240866Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5240985Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5241117Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5241323Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5241427Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5241672Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5241818Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5242193Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5242312Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5242408Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5242517Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5242616Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5242770Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5242947Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5243073Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5243222Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5243395Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5243515Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5243676Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5243959Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5244076Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5244151Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5244156Z 
2025-01-07T17:55:37.5244230Z     def __init__(
2025-01-07T17:55:37.5244298Z         self,
2025-01-07T17:55:37.5244386Z         last_interaction_type,
2025-01-07T17:55:37.5244479Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5244564Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5244653Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5244733Z         last_interaction_in_r,
2025-01-07T17:55:37.5244816Z         lines_df,
2025-01-07T17:55:37.5244888Z         packet_nus,
2025-01-07T17:55:37.5244973Z         packet_energies,
2025-01-07T17:55:37.5245041Z         r_inner,
2025-01-07T17:55:37.5245132Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5245310Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5245416Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5245497Z         spectrum_wavelength,
2025-01-07T17:55:37.5245571Z         t_inner,
2025-01-07T17:55:37.5245648Z         time_of_simulation,
2025-01-07T17:55:37.5245728Z         time_explosion,
2025-01-07T17:55:37.5245796Z         v_inner,
2025-01-07T17:55:37.5245868Z         v_outer,
2025-01-07T17:55:37.5245944Z         velocity
2025-01-07T17:55:37.5246009Z     ):
2025-01-07T17:55:37.5246080Z         """
2025-01-07T17:55:37.5246312Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5246495Z     
2025-01-07T17:55:37.5246566Z         Parameters
2025-01-07T17:55:37.5246641Z         ----------
2025-01-07T17:55:37.5246733Z         last_interaction_type : np.array
2025-01-07T17:55:37.5246889Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5247003Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5247107Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5247251Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5247344Z             absorption (interaction in)
2025-01-07T17:55:37.5247442Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5247590Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5247683Z             emission (interaction out)
2025-01-07T17:55:37.5247778Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5247932Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5248028Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5248184Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5248265Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5248425Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5248517Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5248682Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5248754Z             unit of Hz
2025-01-07T17:55:37.5248853Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5248980Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5249071Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5249188Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5249295Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5249423Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5249531Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5249656Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5249754Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5249895Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5250067Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5250195Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5250289Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5250403Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5250470Z         """
2025-01-07T17:55:37.5250646Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5250754Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5250844Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5250920Z             {
2025-01-07T17:55:37.5250998Z                 "nus": packet_nus,
2025-01-07T17:55:37.5251127Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5251217Z                 "energies": packet_energies,
2025-01-07T17:55:37.5251339Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5251487Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5251631Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5251770Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5251887Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5252106Z             }
2025-01-07T17:55:37.5252207Z         )
2025-01-07T17:55:37.5252278Z     
2025-01-07T17:55:37.5252366Z         # Save other properties
2025-01-07T17:55:37.5252455Z         self.lines_df = lines_df
2025-01-07T17:55:37.5252655Z         self.r_inner = r_inner
2025-01-07T17:55:37.5252806Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5252942Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5253077Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5253183Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5253288Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5253354Z         )
2025-01-07T17:55:37.5253474Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5253553Z         self.t_inner = t_inner
2025-01-07T17:55:37.5253668Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5253763Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5253844Z         self.v_inner = v_inner
2025-01-07T17:55:37.5253925Z         self.v_outer = v_outer
2025-01-07T17:55:37.5253991Z     
2025-01-07T17:55:37.5254098Z         # First check if both options are provided
2025-01-07T17:55:37.5254276Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5254360Z >           raise ValueError(
2025-01-07T17:55:37.5254496Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5254662Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5254732Z             )
2025-01-07T17:55:37.5255089Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5255093Z 
2025-01-07T17:55:37.5255266Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5255504Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] _
2025-01-07T17:55:37.5255508Z 
2025-01-07T17:55:37.5255786Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5256004Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5256240Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5256245Z 
2025-01-07T17:55:37.5256332Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5256452Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5256628Z         """
2025-01-07T17:55:37.5256723Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5256788Z     
2025-01-07T17:55:37.5256865Z         Parameters
2025-01-07T17:55:37.5256935Z         ----------
2025-01-07T17:55:37.5257082Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5257164Z             Simulation object.
2025-01-07T17:55:37.5257228Z     
2025-01-07T17:55:37.5257302Z         Returns
2025-01-07T17:55:37.5257372Z         -------
2025-01-07T17:55:37.5257508Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5257575Z         """
2025-01-07T17:55:37.5257719Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5257723Z 
2025-01-07T17:55:37.5257865Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5257979Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5258137Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5258293Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5258504Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5258644Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5258849Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5258920Z     return cls(
2025-01-07T17:55:37.5259030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5259035Z 
2025-01-07T17:55:37.5259393Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5259535Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5259711Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5259891Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5260094Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5260199Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5260383Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5260483Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5260652Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5260764Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5260881Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5260887Z 
2025-01-07T17:55:37.5260963Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5261129Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5261234Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5261435Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5261503Z        0.00025518])
2025-01-07T17:55:37.5261660Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5261856Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5262087Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5262221Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5262425Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5262536Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5262775Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5262926Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5263222Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5263344Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5263434Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5263546Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5263640Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5263791Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5263966Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5264091Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5264243Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5264404Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5264532Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5264690Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5264820Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5264930Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5265004Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5265009Z 
2025-01-07T17:55:37.5265083Z     def __init__(
2025-01-07T17:55:37.5265153Z         self,
2025-01-07T17:55:37.5265241Z         last_interaction_type,
2025-01-07T17:55:37.5265435Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5265528Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5265610Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5265695Z         last_interaction_in_r,
2025-01-07T17:55:37.5265764Z         lines_df,
2025-01-07T17:55:37.5265841Z         packet_nus,
2025-01-07T17:55:37.5265918Z         packet_energies,
2025-01-07T17:55:37.5265995Z         r_inner,
2025-01-07T17:55:37.5266079Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5266261Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5266361Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5266443Z         spectrum_wavelength,
2025-01-07T17:55:37.5266517Z         t_inner,
2025-01-07T17:55:37.5266595Z         time_of_simulation,
2025-01-07T17:55:37.5266675Z         time_explosion,
2025-01-07T17:55:37.5266746Z         v_inner,
2025-01-07T17:55:37.5266818Z         v_outer,
2025-01-07T17:55:37.5266891Z         velocity
2025-01-07T17:55:37.5266963Z     ):
2025-01-07T17:55:37.5267031Z         """
2025-01-07T17:55:37.5267263Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5267329Z     
2025-01-07T17:55:37.5267409Z         Parameters
2025-01-07T17:55:37.5267479Z         ----------
2025-01-07T17:55:37.5267580Z         last_interaction_type : np.array
2025-01-07T17:55:37.5267729Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5267850Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5267948Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5268097Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5268191Z             absorption (interaction in)
2025-01-07T17:55:37.5268289Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5268439Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5268529Z             emission (interaction out)
2025-01-07T17:55:37.5268627Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5268777Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5268876Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5269125Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5269216Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5269376Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5269469Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5269631Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5269702Z             unit of Hz
2025-01-07T17:55:37.5269805Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5269933Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5270021Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5270134Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5270245Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5270366Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5270477Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5270599Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5270702Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5270834Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5270920Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5271045Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5271140Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5271255Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5271323Z         """
2025-01-07T17:55:37.5271502Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5271684Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5271778Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5271845Z             {
2025-01-07T17:55:37.5272025Z                 "nus": packet_nus,
2025-01-07T17:55:37.5272153Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5272252Z                 "energies": packet_energies,
2025-01-07T17:55:37.5272370Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5272523Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5272667Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5272804Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5272921Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5272990Z             }
2025-01-07T17:55:37.5273062Z         )
2025-01-07T17:55:37.5273127Z     
2025-01-07T17:55:37.5273215Z         # Save other properties
2025-01-07T17:55:37.5273296Z         self.lines_df = lines_df
2025-01-07T17:55:37.5273377Z         self.r_inner = r_inner
2025-01-07T17:55:37.5273516Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5273661Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5273792Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5273902Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5273998Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5274068Z         )
2025-01-07T17:55:37.5274190Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5274267Z         self.t_inner = t_inner
2025-01-07T17:55:37.5274381Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5274473Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5274558Z         self.v_inner = v_inner
2025-01-07T17:55:37.5274633Z         self.v_outer = v_outer
2025-01-07T17:55:37.5274702Z     
2025-01-07T17:55:37.5274802Z         # First check if both options are provided
2025-01-07T17:55:37.5275009Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5275204Z >           raise ValueError(
2025-01-07T17:55:37.5275349Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5275509Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5275580Z             )
2025-01-07T17:55:37.5275930Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5275941Z 
2025-01-07T17:55:37.5276115Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5276353Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] _
2025-01-07T17:55:37.5276361Z 
2025-01-07T17:55:37.5276632Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5276849Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5277081Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5277085Z 
2025-01-07T17:55:37.5277178Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5277289Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5277360Z         """
2025-01-07T17:55:37.5277452Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5277518Z     
2025-01-07T17:55:37.5277594Z         Parameters
2025-01-07T17:55:37.5277665Z         ----------
2025-01-07T17:55:37.5277816Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5277894Z             Simulation object.
2025-01-07T17:55:37.5278073Z     
2025-01-07T17:55:37.5278141Z         Returns
2025-01-07T17:55:37.5278215Z         -------
2025-01-07T17:55:37.5278345Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5278416Z         """
2025-01-07T17:55:37.5283009Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5283028Z 
2025-01-07T17:55:37.5283238Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5283368Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5283551Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5283715Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5283950Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5284091Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5284305Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5284386Z     return cls(
2025-01-07T17:55:37.5284506Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5284510Z 
2025-01-07T17:55:37.5284799Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5284954Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5285135Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5285319Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5285522Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5285634Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5285824Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5285919Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5286102Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5286220Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5286340Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5286345Z 
2025-01-07T17:55:37.5286589Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5286773Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5286885Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5287092Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5287169Z        0.00025518])
2025-01-07T17:55:37.5287327Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5287532Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5287661Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5287800Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5288010Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5288126Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5288378Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5288536Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5288727Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5288853Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5288949Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5289062Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5289270Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5289430Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5289612Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5289738Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5289902Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5290071Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5290199Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5290367Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5290494Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5290612Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5290693Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5290697Z 
2025-01-07T17:55:37.5290776Z     def __init__(
2025-01-07T17:55:37.5290847Z         self,
2025-01-07T17:55:37.5290937Z         last_interaction_type,
2025-01-07T17:55:37.5291025Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5291119Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5291210Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5291298Z         last_interaction_in_r,
2025-01-07T17:55:37.5291369Z         lines_df,
2025-01-07T17:55:37.5291450Z         packet_nus,
2025-01-07T17:55:37.5291529Z         packet_energies,
2025-01-07T17:55:37.5291606Z         r_inner,
2025-01-07T17:55:37.5291696Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5291882Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5292172Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5292265Z         spectrum_wavelength,
2025-01-07T17:55:37.5292353Z         t_inner,
2025-01-07T17:55:37.5292435Z         time_of_simulation,
2025-01-07T17:55:37.5292519Z         time_explosion,
2025-01-07T17:55:37.5292590Z         v_inner,
2025-01-07T17:55:37.5292668Z         v_outer,
2025-01-07T17:55:37.5292737Z         velocity
2025-01-07T17:55:37.5292812Z     ):
2025-01-07T17:55:37.5292882Z         """
2025-01-07T17:55:37.5293246Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5293319Z     
2025-01-07T17:55:37.5293402Z         Parameters
2025-01-07T17:55:37.5293476Z         ----------
2025-01-07T17:55:37.5293578Z         last_interaction_type : np.array
2025-01-07T17:55:37.5293735Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5293861Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5293968Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5294118Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5294218Z             absorption (interaction in)
2025-01-07T17:55:37.5294318Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5294465Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5294553Z             emission (interaction out)
2025-01-07T17:55:37.5294653Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5294809Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5294912Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5295062Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5295153Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5295317Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5295408Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5295576Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5295779Z             unit of Hz
2025-01-07T17:55:37.5295882Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5296013Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5296105Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5296218Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5296337Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5296466Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5296581Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5296703Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5296809Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5296955Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5297040Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5297169Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5297268Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5297386Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5297455Z         """
2025-01-07T17:55:37.5297639Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5297743Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5297844Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5297914Z             {
2025-01-07T17:55:37.5298000Z                 "nus": packet_nus,
2025-01-07T17:55:37.5298124Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5298221Z                 "energies": packet_energies,
2025-01-07T17:55:37.5298343Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5298500Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5298650Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5298794Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5298911Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5298987Z             }
2025-01-07T17:55:37.5299061Z         )
2025-01-07T17:55:37.5299128Z     
2025-01-07T17:55:37.5299217Z         # Save other properties
2025-01-07T17:55:37.5299434Z         self.lines_df = lines_df
2025-01-07T17:55:37.5299525Z         self.r_inner = r_inner
2025-01-07T17:55:37.5299670Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5299814Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5299947Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5300065Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5300168Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5300239Z         )
2025-01-07T17:55:37.5300363Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5300447Z         self.t_inner = t_inner
2025-01-07T17:55:37.5300563Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5300658Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5300741Z         self.v_inner = v_inner
2025-01-07T17:55:37.5300818Z         self.v_outer = v_outer
2025-01-07T17:55:37.5300893Z     
2025-01-07T17:55:37.5300996Z         # First check if both options are provided
2025-01-07T17:55:37.5301174Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5301255Z >           raise ValueError(
2025-01-07T17:55:37.5301402Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5301565Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5301639Z             )
2025-01-07T17:55:37.5302107Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5302225Z 
2025-01-07T17:55:37.5302405Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5302654Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] _
2025-01-07T17:55:37.5302658Z 
2025-01-07T17:55:37.5302936Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5303160Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5303394Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5303403Z 
2025-01-07T17:55:37.5303493Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5303612Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5303682Z         """
2025-01-07T17:55:37.5303777Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5303846Z     
2025-01-07T17:55:37.5303928Z         Parameters
2025-01-07T17:55:37.5304001Z         ----------
2025-01-07T17:55:37.5304149Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5304232Z             Simulation object.
2025-01-07T17:55:37.5304303Z     
2025-01-07T17:55:37.5304372Z         Returns
2025-01-07T17:55:37.5304448Z         -------
2025-01-07T17:55:37.5304583Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5304657Z         """
2025-01-07T17:55:37.5304792Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5304796Z 
2025-01-07T17:55:37.5304946Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5305503Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5305670Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5305821Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5306042Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5306180Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5306380Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5306456Z     return cls(
2025-01-07T17:55:37.5306695Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5306700Z 
2025-01-07T17:55:37.5306983Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5307123Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5307302Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5307481Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5307689Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5307800Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5307985Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5308089Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5308254Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5308376Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5308486Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5308490Z 
2025-01-07T17:55:37.5308574Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5308740Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5308854Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5309055Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5309124Z        0.00025518])
2025-01-07T17:55:37.5309371Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5309567Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5309694Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5309825Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5310035Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5310140Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5310385Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5310527Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5310726Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5310846Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5310933Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5311050Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5311141Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5311298Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5311471Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5311601Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5311749Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5312083Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5312244Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5312408Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5312545Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5312652Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5312734Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5312739Z 
2025-01-07T17:55:37.5312811Z     def __init__(
2025-01-07T17:55:37.5313002Z         self,
2025-01-07T17:55:37.5313090Z         last_interaction_type,
2025-01-07T17:55:37.5313185Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5313272Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5313363Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5313442Z         last_interaction_in_r,
2025-01-07T17:55:37.5313518Z         lines_df,
2025-01-07T17:55:37.5313591Z         packet_nus,
2025-01-07T17:55:37.5313673Z         packet_energies,
2025-01-07T17:55:37.5313747Z         r_inner,
2025-01-07T17:55:37.5313833Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5314021Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5314118Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5314206Z         spectrum_wavelength,
2025-01-07T17:55:37.5314276Z         t_inner,
2025-01-07T17:55:37.5314360Z         time_of_simulation,
2025-01-07T17:55:37.5314435Z         time_explosion,
2025-01-07T17:55:37.5314512Z         v_inner,
2025-01-07T17:55:37.5314580Z         v_outer,
2025-01-07T17:55:37.5314654Z         velocity
2025-01-07T17:55:37.5314721Z     ):
2025-01-07T17:55:37.5314794Z         """
2025-01-07T17:55:37.5315023Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5315095Z     
2025-01-07T17:55:37.5315167Z         Parameters
2025-01-07T17:55:37.5315245Z         ----------
2025-01-07T17:55:37.5315346Z         last_interaction_type : np.array
2025-01-07T17:55:37.5315496Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5315727Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5315823Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5315974Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5316062Z             absorption (interaction in)
2025-01-07T17:55:37.5316165Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5316309Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5316400Z             emission (interaction out)
2025-01-07T17:55:37.5316495Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5316649Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5316742Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5316895Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5316983Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5317144Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5317244Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5317404Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5317481Z             unit of Hz
2025-01-07T17:55:37.5317578Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5317714Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5317799Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5317915Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5318023Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5318153Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5318260Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5318391Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5318496Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5318635Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5318723Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5318844Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5318945Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5319058Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5319213Z         """
2025-01-07T17:55:37.5319391Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5319502Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5319593Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5319666Z             {
2025-01-07T17:55:37.5319745Z                 "nus": packet_nus,
2025-01-07T17:55:37.5319876Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5319972Z                 "energies": packet_energies,
2025-01-07T17:55:37.5320089Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5320246Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5320388Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5320535Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5320650Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5320729Z             }
2025-01-07T17:55:37.5320796Z         )
2025-01-07T17:55:37.5320866Z     
2025-01-07T17:55:37.5320950Z         # Save other properties
2025-01-07T17:55:37.5321036Z         self.lines_df = lines_df
2025-01-07T17:55:37.5321115Z         self.r_inner = r_inner
2025-01-07T17:55:37.5321260Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5321395Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5321535Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5321749Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5321844Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5321916Z         )
2025-01-07T17:55:37.5322221Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5322308Z         self.t_inner = t_inner
2025-01-07T17:55:37.5322422Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5322523Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5322602Z         self.v_inner = v_inner
2025-01-07T17:55:37.5322683Z         self.v_outer = v_outer
2025-01-07T17:55:37.5322748Z     
2025-01-07T17:55:37.5322853Z         # First check if both options are provided
2025-01-07T17:55:37.5323027Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5323111Z >           raise ValueError(
2025-01-07T17:55:37.5323253Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5323419Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5323493Z             )
2025-01-07T17:55:37.5323843Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5323848Z 
2025-01-07T17:55:37.5324031Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5324267Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] _
2025-01-07T17:55:37.5324271Z 
2025-01-07T17:55:37.5324551Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5324768Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5325009Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5325014Z 
2025-01-07T17:55:37.5325108Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5325224Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5325297Z         """
2025-01-07T17:55:37.5325382Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5325453Z     
2025-01-07T17:55:37.5325525Z         Parameters
2025-01-07T17:55:37.5325602Z         ----------
2025-01-07T17:55:37.5325868Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5325963Z             Simulation object.
2025-01-07T17:55:37.5326032Z     
2025-01-07T17:55:37.5326106Z         Returns
2025-01-07T17:55:37.5326177Z         -------
2025-01-07T17:55:37.5326312Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5326378Z         """
2025-01-07T17:55:37.5326517Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5326521Z 
2025-01-07T17:55:37.5326666Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5326780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5326941Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5327092Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5327306Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5327443Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5327649Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5327722Z     return cls(
2025-01-07T17:55:37.5327832Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5327837Z 
2025-01-07T17:55:37.5328113Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5328257Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5328431Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5328721Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5328922Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5329026Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5329215Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5329315Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5329484Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5329593Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5329709Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5329713Z 
2025-01-07T17:55:37.5329791Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5329958Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5330068Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5330267Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5330336Z        0.00025518])
2025-01-07T17:55:37.5330496Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5330697Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5330819Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5330952Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5331155Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5331262Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5331506Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5331654Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5331841Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5332097Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5332222Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5332448Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5332547Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5332701Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5332878Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5333000Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5333153Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5333318Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5333452Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5333609Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5333741Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5333857Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5333933Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5333938Z 
2025-01-07T17:55:37.5334013Z     def __init__(
2025-01-07T17:55:37.5334084Z         self,
2025-01-07T17:55:37.5334171Z         last_interaction_type,
2025-01-07T17:55:37.5334258Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5334349Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5334433Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5334519Z         last_interaction_in_r,
2025-01-07T17:55:37.5334589Z         lines_df,
2025-01-07T17:55:37.5334781Z         packet_nus,
2025-01-07T17:55:37.5334859Z         packet_energies,
2025-01-07T17:55:37.5334937Z         r_inner,
2025-01-07T17:55:37.5335021Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5335206Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5335306Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5335393Z         spectrum_wavelength,
2025-01-07T17:55:37.5335470Z         t_inner,
2025-01-07T17:55:37.5335548Z         time_of_simulation,
2025-01-07T17:55:37.5335631Z         time_explosion,
2025-01-07T17:55:37.5335700Z         v_inner,
2025-01-07T17:55:37.5335772Z         v_outer,
2025-01-07T17:55:37.5335841Z         velocity
2025-01-07T17:55:37.5335912Z     ):
2025-01-07T17:55:37.5335978Z         """
2025-01-07T17:55:37.5336207Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5336274Z     
2025-01-07T17:55:37.5336350Z         Parameters
2025-01-07T17:55:37.5336426Z         ----------
2025-01-07T17:55:37.5336523Z         last_interaction_type : np.array
2025-01-07T17:55:37.5336673Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5336793Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5336895Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5337044Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5337137Z             absorption (interaction in)
2025-01-07T17:55:37.5337236Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5337378Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5337467Z             emission (interaction out)
2025-01-07T17:55:37.5337566Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5337717Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5337815Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5337968Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5338062Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5338222Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5338322Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5338566Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5338641Z             unit of Hz
2025-01-07T17:55:37.5338755Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5338883Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5338974Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5339084Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5339197Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5339319Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5339434Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5339555Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5339658Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5339795Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5339883Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5340011Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5340106Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5340221Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5340289Z         """
2025-01-07T17:55:37.5340468Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5340572Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5340669Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5340736Z             {
2025-01-07T17:55:37.5340820Z                 "nus": packet_nus,
2025-01-07T17:55:37.5341193Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5341288Z                 "energies": packet_energies,
2025-01-07T17:55:37.5341406Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5341561Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5341711Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5341851Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5342077Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5342146Z             }
2025-01-07T17:55:37.5342218Z         )
2025-01-07T17:55:37.5342283Z     
2025-01-07T17:55:37.5342374Z         # Save other properties
2025-01-07T17:55:37.5342455Z         self.lines_df = lines_df
2025-01-07T17:55:37.5342540Z         self.r_inner = r_inner
2025-01-07T17:55:37.5342684Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5342823Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5342955Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5343066Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5343167Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5343238Z         )
2025-01-07T17:55:37.5343359Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5343437Z         self.t_inner = t_inner
2025-01-07T17:55:37.5343551Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5343644Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5343727Z         self.v_inner = v_inner
2025-01-07T17:55:37.5343803Z         self.v_outer = v_outer
2025-01-07T17:55:37.5343874Z     
2025-01-07T17:55:37.5343975Z         # First check if both options are provided
2025-01-07T17:55:37.5344152Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5344236Z >           raise ValueError(
2025-01-07T17:55:37.5344379Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5344540Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5344612Z             )
2025-01-07T17:55:37.5345107Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5345113Z 
2025-01-07T17:55:37.5345290Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5345527Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] _
2025-01-07T17:55:37.5345531Z 
2025-01-07T17:55:37.5345800Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5346020Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5346258Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5346263Z 
2025-01-07T17:55:37.5346360Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5346475Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5346543Z         """
2025-01-07T17:55:37.5346637Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5346704Z     
2025-01-07T17:55:37.5346781Z         Parameters
2025-01-07T17:55:37.5346852Z         ----------
2025-01-07T17:55:37.5346999Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5347077Z             Simulation object.
2025-01-07T17:55:37.5347149Z     
2025-01-07T17:55:37.5347219Z         Returns
2025-01-07T17:55:37.5347295Z         -------
2025-01-07T17:55:37.5347425Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5347498Z         """
2025-01-07T17:55:37.5347629Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5347742Z 
2025-01-07T17:55:37.5347891Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5348007Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5348166Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5348318Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5348531Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5348670Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5348867Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5348944Z     return cls(
2025-01-07T17:55:37.5349051Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5349056Z 
2025-01-07T17:55:37.5349335Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5349477Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5349657Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5349839Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5350039Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5350144Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5350325Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5350426Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5350589Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5350704Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5350814Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5350822Z 
2025-01-07T17:55:37.5350903Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5351073Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5351178Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5351454Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5351526Z        0.00025518])
2025-01-07T17:55:37.5351688Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5351883Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5352116Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5352246Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5352452Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5352559Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5352804Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5352950Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5353141Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5353263Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5353348Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5353460Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5353550Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5353706Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5353878Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5354118Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5354267Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5354437Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5354563Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5354722Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5354855Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5354962Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5355041Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5355046Z 
2025-01-07T17:55:37.5355115Z     def __init__(
2025-01-07T17:55:37.5355188Z         self,
2025-01-07T17:55:37.5355272Z         last_interaction_type,
2025-01-07T17:55:37.5355363Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5355454Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5355542Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5355627Z         last_interaction_in_r,
2025-01-07T17:55:37.5355697Z         lines_df,
2025-01-07T17:55:37.5355774Z         packet_nus,
2025-01-07T17:55:37.5355851Z         packet_energies,
2025-01-07T17:55:37.5355925Z         r_inner,
2025-01-07T17:55:37.5356014Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5356200Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5356296Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5356385Z         spectrum_wavelength,
2025-01-07T17:55:37.5356455Z         t_inner,
2025-01-07T17:55:37.5356537Z         time_of_simulation,
2025-01-07T17:55:37.5356612Z         time_explosion,
2025-01-07T17:55:37.5356685Z         v_inner,
2025-01-07T17:55:37.5356756Z         v_outer,
2025-01-07T17:55:37.5356830Z         velocity
2025-01-07T17:55:37.5356900Z     ):
2025-01-07T17:55:37.5356975Z         """
2025-01-07T17:55:37.5357201Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5357272Z     
2025-01-07T17:55:37.5357352Z         Parameters
2025-01-07T17:55:37.5357423Z         ----------
2025-01-07T17:55:37.5357521Z         last_interaction_type : np.array
2025-01-07T17:55:37.5357781Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5357905Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5358002Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5358152Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5358240Z             absorption (interaction in)
2025-01-07T17:55:37.5358343Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5358483Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5358574Z             emission (interaction out)
2025-01-07T17:55:37.5358672Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5358828Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5358926Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5359073Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5359163Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5359320Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5359414Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5359574Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5359653Z             unit of Hz
2025-01-07T17:55:37.5359749Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5359888Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5359974Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5360167Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5360274Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5360403Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5360513Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5360635Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5360743Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5360879Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5360966Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5361086Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5361186Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5361295Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5361368Z         """
2025-01-07T17:55:37.5361542Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5361654Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5361745Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5361818Z             {
2025-01-07T17:55:37.5361905Z                 "nus": packet_nus,
2025-01-07T17:55:37.5362221Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5362324Z                 "energies": packet_energies,
2025-01-07T17:55:37.5362444Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5362599Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5362741Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5362883Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5362995Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5363068Z             }
2025-01-07T17:55:37.5363134Z         )
2025-01-07T17:55:37.5363209Z     
2025-01-07T17:55:37.5363292Z         # Save other properties
2025-01-07T17:55:37.5363381Z         self.lines_df = lines_df
2025-01-07T17:55:37.5363460Z         self.r_inner = r_inner
2025-01-07T17:55:37.5363607Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5363748Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5363999Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5364114Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5364211Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5364282Z         )
2025-01-07T17:55:37.5364399Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5364483Z         self.t_inner = t_inner
2025-01-07T17:55:37.5364592Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5364691Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5364773Z         self.v_inner = v_inner
2025-01-07T17:55:37.5364856Z         self.v_outer = v_outer
2025-01-07T17:55:37.5364922Z     
2025-01-07T17:55:37.5365029Z         # First check if both options are provided
2025-01-07T17:55:37.5365203Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5365283Z >           raise ValueError(
2025-01-07T17:55:37.5365432Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5365592Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5365665Z             )
2025-01-07T17:55:37.5366017Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5366022Z 
2025-01-07T17:55:37.5366199Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5366431Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] _
2025-01-07T17:55:37.5366541Z 
2025-01-07T17:55:37.5366819Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5367042Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5367274Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5367281Z 
2025-01-07T17:55:37.5367376Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5367487Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5367560Z         """
2025-01-07T17:55:37.5367646Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5367716Z     
2025-01-07T17:55:37.5367789Z         Parameters
2025-01-07T17:55:37.5367865Z         ----------
2025-01-07T17:55:37.5368011Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5368095Z             Simulation object.
2025-01-07T17:55:37.5368161Z     
2025-01-07T17:55:37.5368239Z         Returns
2025-01-07T17:55:37.5368309Z         -------
2025-01-07T17:55:37.5368447Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5368519Z         """
2025-01-07T17:55:37.5368651Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5368655Z 
2025-01-07T17:55:37.5368802Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5368913Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5369077Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5369225Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5369443Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5369574Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5369776Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5369851Z     return cls(
2025-01-07T17:55:37.5369961Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5369966Z 
2025-01-07T17:55:37.5370243Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5370382Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5370679Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5370858Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5371062Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5371162Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5371351Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5371447Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5371620Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5371734Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5371848Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5371852Z 
2025-01-07T17:55:37.5372067Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5372282Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5372395Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5372587Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5372661Z        0.00025518])
2025-01-07T17:55:37.5372815Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5373016Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5373137Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5373391Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5373600Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5373703Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5373956Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5374099Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5374291Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5374405Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5374498Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5374606Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5374699Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5374859Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5375066Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5375195Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5375345Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5375516Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5375635Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5375802Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5375929Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5376041Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5376114Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5376128Z 
2025-01-07T17:55:37.5376200Z     def __init__(
2025-01-07T17:55:37.5376273Z         self,
2025-01-07T17:55:37.5376356Z         last_interaction_type,
2025-01-07T17:55:37.5376446Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5376532Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5376620Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5376809Z         last_interaction_in_r,
2025-01-07T17:55:37.5376888Z         lines_df,
2025-01-07T17:55:37.5376962Z         packet_nus,
2025-01-07T17:55:37.5377043Z         packet_energies,
2025-01-07T17:55:37.5377111Z         r_inner,
2025-01-07T17:55:37.5377200Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5377376Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5377475Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5377557Z         spectrum_wavelength,
2025-01-07T17:55:37.5377632Z         t_inner,
2025-01-07T17:55:37.5377709Z         time_of_simulation,
2025-01-07T17:55:37.5377794Z         time_explosion,
2025-01-07T17:55:37.5377867Z         v_inner,
2025-01-07T17:55:37.5377936Z         v_outer,
2025-01-07T17:55:37.5378010Z         velocity
2025-01-07T17:55:37.5378077Z     ):
2025-01-07T17:55:37.5378148Z         """
2025-01-07T17:55:37.5378377Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5378450Z     
2025-01-07T17:55:37.5378523Z         Parameters
2025-01-07T17:55:37.5378599Z         ----------
2025-01-07T17:55:37.5378690Z         last_interaction_type : np.array
2025-01-07T17:55:37.5378842Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5378958Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5379062Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5379206Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5379297Z             absorption (interaction in)
2025-01-07T17:55:37.5379487Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5379631Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5379722Z             emission (interaction out)
2025-01-07T17:55:37.5379817Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5379973Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5380066Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5380220Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5380302Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5380466Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5380555Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5380721Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5380791Z             unit of Hz
2025-01-07T17:55:37.5380896Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5381032Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5381117Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5381231Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5381339Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5381469Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5381576Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5381703Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5381799Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5382043Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5382129Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5382257Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5382351Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5382469Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5382541Z         """
2025-01-07T17:55:37.5382713Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5382824Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5382913Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5383101Z             {
2025-01-07T17:55:37.5383183Z                 "nus": packet_nus,
2025-01-07T17:55:37.5383315Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5383404Z                 "energies": packet_energies,
2025-01-07T17:55:37.5383526Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5383672Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5383820Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5383962Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5384078Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5384151Z             }
2025-01-07T17:55:37.5384218Z         )
2025-01-07T17:55:37.5384288Z     
2025-01-07T17:55:37.5384371Z         # Save other properties
2025-01-07T17:55:37.5384458Z         self.lines_df = lines_df
2025-01-07T17:55:37.5384539Z         self.r_inner = r_inner
2025-01-07T17:55:37.5384684Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5384818Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5384954Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5385063Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5385162Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5385229Z         )
2025-01-07T17:55:37.5385347Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5385534Z         self.t_inner = t_inner
2025-01-07T17:55:37.5385648Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5385748Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5385827Z         self.v_inner = v_inner
2025-01-07T17:55:37.5385908Z         self.v_outer = v_outer
2025-01-07T17:55:37.5385976Z     
2025-01-07T17:55:37.5386085Z         # First check if both options are provided
2025-01-07T17:55:37.5386256Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5386341Z >           raise ValueError(
2025-01-07T17:55:37.5386477Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5386645Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5386712Z             )
2025-01-07T17:55:37.5387071Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5387079Z 
2025-01-07T17:55:37.5387257Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5387488Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] _
2025-01-07T17:55:37.5387493Z 
2025-01-07T17:55:37.5387771Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5387985Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5388222Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5388226Z 
2025-01-07T17:55:37.5388314Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5388431Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5388499Z         """
2025-01-07T17:55:37.5388591Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5388656Z     
2025-01-07T17:55:37.5388734Z         Parameters
2025-01-07T17:55:37.5388813Z         ----------
2025-01-07T17:55:37.5388958Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5389045Z             Simulation object.
2025-01-07T17:55:37.5389111Z     
2025-01-07T17:55:37.5389186Z         Returns
2025-01-07T17:55:37.5389259Z         -------
2025-01-07T17:55:37.5389400Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5389547Z         """
2025-01-07T17:55:37.5389687Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5389691Z 
2025-01-07T17:55:37.5389835Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5389952Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5390110Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5390266Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5390484Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5390620Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5390821Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5390898Z     return cls(
2025-01-07T17:55:37.5391007Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5391012Z 
2025-01-07T17:55:37.5391286Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5391427Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5391602Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5391785Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5392081Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5392187Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5392505Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5392602Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5392768Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5392882Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5392997Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5393002Z 
2025-01-07T17:55:37.5393078Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5393247Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5393353Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5393553Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5393626Z        0.00025518])
2025-01-07T17:55:37.5393781Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5393981Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5394102Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5394235Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5394443Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5394551Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5394794Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5394944Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5395131Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5395248Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5395340Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5395449Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5395544Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5395695Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5395977Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5396102Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5396255Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5396420Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5396544Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5396706Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5396837Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5396950Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5397023Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5397027Z 
2025-01-07T17:55:37.5397102Z     def __init__(
2025-01-07T17:55:37.5397170Z         self,
2025-01-07T17:55:37.5397261Z         last_interaction_type,
2025-01-07T17:55:37.5397349Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5397442Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5397525Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5397612Z         last_interaction_in_r,
2025-01-07T17:55:37.5397681Z         lines_df,
2025-01-07T17:55:37.5397758Z         packet_nus,
2025-01-07T17:55:37.5397835Z         packet_energies,
2025-01-07T17:55:37.5397909Z         r_inner,
2025-01-07T17:55:37.5397997Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5398173Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5398352Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5398434Z         spectrum_wavelength,
2025-01-07T17:55:37.5398508Z         t_inner,
2025-01-07T17:55:37.5398586Z         time_of_simulation,
2025-01-07T17:55:37.5398665Z         time_explosion,
2025-01-07T17:55:37.5398733Z         v_inner,
2025-01-07T17:55:37.5398806Z         v_outer,
2025-01-07T17:55:37.5398879Z         velocity
2025-01-07T17:55:37.5398951Z     ):
2025-01-07T17:55:37.5399018Z         """
2025-01-07T17:55:37.5399252Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5399318Z     
2025-01-07T17:55:37.5399394Z         Parameters
2025-01-07T17:55:37.5399466Z         ----------
2025-01-07T17:55:37.5399562Z         last_interaction_type : np.array
2025-01-07T17:55:37.5399716Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5399837Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5399943Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5400088Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5400182Z             absorption (interaction in)
2025-01-07T17:55:37.5400279Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5400430Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5400518Z             emission (interaction out)
2025-01-07T17:55:37.5400619Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5400768Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5400865Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5401016Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5401104Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5401269Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5401362Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5401529Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5401601Z             unit of Hz
2025-01-07T17:55:37.5401700Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5401828Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5402190Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5402327Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5402446Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5402575Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5402689Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5402813Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5402918Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5403059Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5403152Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5403278Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5403375Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5403491Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5403560Z         """
2025-01-07T17:55:37.5403747Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5403852Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5403948Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5404016Z             {
2025-01-07T17:55:37.5404101Z                 "nus": packet_nus,
2025-01-07T17:55:37.5404229Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5404326Z                 "energies": packet_energies,
2025-01-07T17:55:37.5404445Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5404710Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5404860Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5404998Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5405118Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5405189Z             }
2025-01-07T17:55:37.5405262Z         )
2025-01-07T17:55:37.5405328Z     
2025-01-07T17:55:37.5405417Z         # Save other properties
2025-01-07T17:55:37.5405501Z         self.lines_df = lines_df
2025-01-07T17:55:37.5405585Z         self.r_inner = r_inner
2025-01-07T17:55:37.5405725Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5405866Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5405999Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5406115Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5406222Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5406288Z         )
2025-01-07T17:55:37.5406410Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5406489Z         self.t_inner = t_inner
2025-01-07T17:55:37.5406602Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5406700Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5406783Z         self.v_inner = v_inner
2025-01-07T17:55:37.5406859Z         self.v_outer = v_outer
2025-01-07T17:55:37.5406929Z     
2025-01-07T17:55:37.5407030Z         # First check if both options are provided
2025-01-07T17:55:37.5407209Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5407291Z >           raise ValueError(
2025-01-07T17:55:37.5407435Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5407598Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5407674Z             )
2025-01-07T17:55:37.5408032Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5408038Z 
2025-01-07T17:55:37.5408211Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5408531Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] _
2025-01-07T17:55:37.5408536Z 
2025-01-07T17:55:37.5408811Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5409029Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5409264Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5409273Z 
2025-01-07T17:55:37.5409362Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5409479Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5409551Z         """
2025-01-07T17:55:37.5409643Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5409710Z     
2025-01-07T17:55:37.5409787Z         Parameters
2025-01-07T17:55:37.5409862Z         ----------
2025-01-07T17:55:37.5410012Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5410095Z             Simulation object.
2025-01-07T17:55:37.5410168Z     
2025-01-07T17:55:37.5410238Z         Returns
2025-01-07T17:55:37.5410313Z         -------
2025-01-07T17:55:37.5410445Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5410517Z         """
2025-01-07T17:55:37.5410651Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5410655Z 
2025-01-07T17:55:37.5410808Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5410925Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5411166Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5411318Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5411531Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5411669Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5411871Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5412089Z     return cls(
2025-01-07T17:55:37.5412232Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5412238Z 
2025-01-07T17:55:37.5412528Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5412674Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5412853Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5413035Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5413241Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5413347Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5413527Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5413632Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5413795Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5413913Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5414025Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5414034Z 
2025-01-07T17:55:37.5414112Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5414283Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5414392Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5414597Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5414666Z        0.00025518])
2025-01-07T17:55:37.5414828Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5415136Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5415268Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5415397Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5415608Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5415719Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5415962Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5416113Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5416305Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5416425Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5416512Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5416628Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5416722Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5416880Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5417051Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5417178Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5417335Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5417502Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5417754Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5417915Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5418045Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5418156Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5418234Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5418240Z 
2025-01-07T17:55:37.5418310Z     def __init__(
2025-01-07T17:55:37.5418384Z         self,
2025-01-07T17:55:37.5418468Z         last_interaction_type,
2025-01-07T17:55:37.5418565Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5418655Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5418741Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5418825Z         last_interaction_in_r,
2025-01-07T17:55:37.5418896Z         lines_df,
2025-01-07T17:55:37.5418973Z         packet_nus,
2025-01-07T17:55:37.5419055Z         packet_energies,
2025-01-07T17:55:37.5419128Z         r_inner,
2025-01-07T17:55:37.5419214Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5419395Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5419491Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5419578Z         spectrum_wavelength,
2025-01-07T17:55:37.5419652Z         t_inner,
2025-01-07T17:55:37.5419735Z         time_of_simulation,
2025-01-07T17:55:37.5419811Z         time_explosion,
2025-01-07T17:55:37.5419885Z         v_inner,
2025-01-07T17:55:37.5419954Z         v_outer,
2025-01-07T17:55:37.5420030Z         velocity
2025-01-07T17:55:37.5420097Z     ):
2025-01-07T17:55:37.5420170Z         """
2025-01-07T17:55:37.5420401Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5420469Z     
2025-01-07T17:55:37.5420546Z         Parameters
2025-01-07T17:55:37.5420617Z         ----------
2025-01-07T17:55:37.5420716Z         last_interaction_type : np.array
2025-01-07T17:55:37.5420867Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5420988Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5421088Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5421326Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5421416Z             absorption (interaction in)
2025-01-07T17:55:37.5421524Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5421664Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5421755Z             emission (interaction out)
2025-01-07T17:55:37.5421850Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5422108Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5422211Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5422365Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5422457Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5422613Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5422708Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5422875Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5422952Z             unit of Hz
2025-01-07T17:55:37.5423048Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5423185Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5423269Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5423383Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5423493Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5423621Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5423732Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5423970Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5424070Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5424207Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5424299Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5424424Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5424524Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5424636Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5424708Z         """
2025-01-07T17:55:37.5424884Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5424995Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5425091Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5425161Z             {
2025-01-07T17:55:37.5425243Z                 "nus": packet_nus,
2025-01-07T17:55:37.5425374Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5425470Z                 "energies": packet_energies,
2025-01-07T17:55:37.5425587Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5425743Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5425889Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5426035Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5426146Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5426220Z             }
2025-01-07T17:55:37.5426287Z         )
2025-01-07T17:55:37.5426357Z     
2025-01-07T17:55:37.5426440Z         # Save other properties
2025-01-07T17:55:37.5426531Z         self.lines_df = lines_df
2025-01-07T17:55:37.5426614Z         self.r_inner = r_inner
2025-01-07T17:55:37.5426755Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5426898Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5427030Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5427146Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5427245Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5427317Z         )
2025-01-07T17:55:37.5427547Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5427634Z         self.t_inner = t_inner
2025-01-07T17:55:37.5427743Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5427840Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5427919Z         self.v_inner = v_inner
2025-01-07T17:55:37.5428001Z         self.v_outer = v_outer
2025-01-07T17:55:37.5428067Z     
2025-01-07T17:55:37.5428177Z         # First check if both options are provided
2025-01-07T17:55:37.5428356Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5428439Z >           raise ValueError(
2025-01-07T17:55:37.5428582Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5428746Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5428818Z             )
2025-01-07T17:55:37.5429173Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5429178Z 
2025-01-07T17:55:37.5429358Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5429561Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl0] _
2025-01-07T17:55:37.5429565Z 
2025-01-07T17:55:37.5429845Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5430064Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5430390Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5430394Z 
2025-01-07T17:55:37.5430485Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5430596Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5430668Z         """
2025-01-07T17:55:37.5430754Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5430828Z     
2025-01-07T17:55:37.5430900Z         Parameters
2025-01-07T17:55:37.5430976Z         ----------
2025-01-07T17:55:37.5431117Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5431201Z             Simulation object.
2025-01-07T17:55:37.5431269Z     
2025-01-07T17:55:37.5431343Z         Returns
2025-01-07T17:55:37.5431414Z         -------
2025-01-07T17:55:37.5431550Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5431623Z         """
2025-01-07T17:55:37.5431755Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5431763Z 
2025-01-07T17:55:37.5431909Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5432115Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5432279Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5432428Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5432649Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5432785Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5432987Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5433059Z     return cls(
2025-01-07T17:55:37.5433169Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5433173Z 
2025-01-07T17:55:37.5433452Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5433595Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5433774Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5433947Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5434149Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5434361Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5434550Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5434649Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5434816Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5434930Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5435039Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5435048Z 
2025-01-07T17:55:37.5435131Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5435295Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5435404Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5435597Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5435673Z        0.00025518])
2025-01-07T17:55:37.5435828Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5436029Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5436155Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5436283Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5436496Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5436599Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5436956Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5437102Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5437292Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5437408Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5437498Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5437610Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5437706Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5437866Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5438037Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5438168Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5438322Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5438492Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5438614Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5438783Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5438910Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5439023Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5439102Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5439106Z 
2025-01-07T17:55:37.5439178Z     def __init__(
2025-01-07T17:55:37.5439251Z         self,
2025-01-07T17:55:37.5439336Z         last_interaction_type,
2025-01-07T17:55:37.5439427Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5439516Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5439607Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5439690Z         last_interaction_in_r,
2025-01-07T17:55:37.5439764Z         lines_df,
2025-01-07T17:55:37.5439838Z         packet_nus,
2025-01-07T17:55:37.5439921Z         packet_energies,
2025-01-07T17:55:37.5439991Z         r_inner,
2025-01-07T17:55:37.5440079Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5440356Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5440461Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5440543Z         spectrum_wavelength,
2025-01-07T17:55:37.5440619Z         t_inner,
2025-01-07T17:55:37.5440701Z         time_of_simulation,
2025-01-07T17:55:37.5440778Z         time_explosion,
2025-01-07T17:55:37.5440851Z         v_inner,
2025-01-07T17:55:37.5440920Z         v_outer,
2025-01-07T17:55:37.5440998Z         velocity
2025-01-07T17:55:37.5441065Z     ):
2025-01-07T17:55:37.5441137Z         """
2025-01-07T17:55:37.5441375Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5441447Z     
2025-01-07T17:55:37.5441520Z         Parameters
2025-01-07T17:55:37.5441596Z         ----------
2025-01-07T17:55:37.5441690Z         last_interaction_type : np.array
2025-01-07T17:55:37.5441845Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5442105Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5442236Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5442385Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5442479Z             absorption (interaction in)
2025-01-07T17:55:37.5442582Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5442726Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5442816Z             emission (interaction out)
2025-01-07T17:55:37.5442911Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5443183Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5443276Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5443428Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5443511Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5443677Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5443766Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5443932Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5444006Z             unit of Hz
2025-01-07T17:55:37.5444106Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5444238Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5444321Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5444433Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5444545Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5444672Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5444777Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5444903Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5445003Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5445143Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5445225Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5445352Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5445447Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5445564Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5445637Z         """
2025-01-07T17:55:37.5445810Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5445918Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5446013Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5446085Z             {
2025-01-07T17:55:37.5446162Z                 "nus": packet_nus,
2025-01-07T17:55:37.5446294Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5446385Z                 "energies": packet_energies,
2025-01-07T17:55:37.5446617Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5446767Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5446916Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5447056Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5447173Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5447246Z             }
2025-01-07T17:55:37.5447313Z         )
2025-01-07T17:55:37.5447385Z     
2025-01-07T17:55:37.5447472Z         # Save other properties
2025-01-07T17:55:37.5447560Z         self.lines_df = lines_df
2025-01-07T17:55:37.5447641Z         self.r_inner = r_inner
2025-01-07T17:55:37.5447788Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5447920Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5448058Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5448167Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5448270Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5448337Z         )
2025-01-07T17:55:37.5448457Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5448535Z         self.t_inner = t_inner
2025-01-07T17:55:37.5448652Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5448755Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5448832Z         self.v_inner = v_inner
2025-01-07T17:55:37.5448995Z         self.v_outer = v_outer
2025-01-07T17:55:37.5449062Z     
2025-01-07T17:55:37.5449167Z         # First check if both options are provided
2025-01-07T17:55:37.5449336Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5449422Z >           raise ValueError(
2025-01-07T17:55:37.5449565Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5449740Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5449807Z             )
2025-01-07T17:55:37.5450166Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5450171Z 
2025-01-07T17:55:37.5450353Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5450554Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl1] _
2025-01-07T17:55:37.5450559Z 
2025-01-07T17:55:37.5450841Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5451053Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5451291Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5451295Z 
2025-01-07T17:55:37.5451385Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5451500Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5451568Z         """
2025-01-07T17:55:37.5451661Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5451728Z     
2025-01-07T17:55:37.5451810Z         Parameters
2025-01-07T17:55:37.5456418Z         ----------
2025-01-07T17:55:37.5456599Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5456693Z             Simulation object.
2025-01-07T17:55:37.5456766Z     
2025-01-07T17:55:37.5456836Z         Returns
2025-01-07T17:55:37.5456911Z         -------
2025-01-07T17:55:37.5457060Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5457135Z         """
2025-01-07T17:55:37.5457274Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5457280Z 
2025-01-07T17:55:37.5457434Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5457710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5457893Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5458047Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5458272Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5458407Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5458620Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5458698Z     return cls(
2025-01-07T17:55:37.5458807Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5458816Z 
2025-01-07T17:55:37.5459101Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5459245Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5459428Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5459607Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5459811Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5459914Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5460103Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5460204Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5460372Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5460603Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5460715Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5460720Z 
2025-01-07T17:55:37.5460805Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5460976Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5461099Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5461302Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5461378Z        0.00025518])
2025-01-07T17:55:37.5461540Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5461744Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5461873Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5462167Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5462387Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5462492Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5462741Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5462895Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5463092Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5463207Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5463299Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5463416Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5463508Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5463672Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5463850Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5463982Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5464132Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5464414Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5464536Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5464705Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5464833Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5464947Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5465029Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5465034Z 
2025-01-07T17:55:37.5465104Z     def __init__(
2025-01-07T17:55:37.5465184Z         self,
2025-01-07T17:55:37.5465269Z         last_interaction_type,
2025-01-07T17:55:37.5465361Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5465448Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5465541Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5465622Z         last_interaction_in_r,
2025-01-07T17:55:37.5465704Z         lines_df,
2025-01-07T17:55:37.5465777Z         packet_nus,
2025-01-07T17:55:37.5465860Z         packet_energies,
2025-01-07T17:55:37.5465929Z         r_inner,
2025-01-07T17:55:37.5466020Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5466201Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5466304Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5466394Z         spectrum_wavelength,
2025-01-07T17:55:37.5466462Z         t_inner,
2025-01-07T17:55:37.5466549Z         time_of_simulation,
2025-01-07T17:55:37.5466623Z         time_explosion,
2025-01-07T17:55:37.5466807Z         v_inner,
2025-01-07T17:55:37.5466875Z         v_outer,
2025-01-07T17:55:37.5466949Z         velocity
2025-01-07T17:55:37.5467016Z     ):
2025-01-07T17:55:37.5467087Z         """
2025-01-07T17:55:37.5467315Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5467387Z     
2025-01-07T17:55:37.5467461Z         Parameters
2025-01-07T17:55:37.5467538Z         ----------
2025-01-07T17:55:37.5467630Z         last_interaction_type : np.array
2025-01-07T17:55:37.5467791Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5467908Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5468012Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5468167Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5468256Z             absorption (interaction in)
2025-01-07T17:55:37.5468360Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5468509Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5468601Z             emission (interaction out)
2025-01-07T17:55:37.5468694Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5468854Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5468951Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5469104Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5469189Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5469355Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5469442Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5469610Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5469688Z             unit of Hz
2025-01-07T17:55:37.5469783Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5469922Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5470006Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5470123Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5470231Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5470366Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5470574Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5470706Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5470803Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5470943Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5471025Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5471150Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5471251Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5471362Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5471437Z         """
2025-01-07T17:55:37.5471614Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5471726Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5471818Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5471890Z             {
2025-01-07T17:55:37.5472072Z                 "nus": packet_nus,
2025-01-07T17:55:37.5472207Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5472296Z                 "energies": packet_energies,
2025-01-07T17:55:37.5472418Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5472565Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5472714Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5472862Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5473090Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5473163Z             }
2025-01-07T17:55:37.5473230Z         )
2025-01-07T17:55:37.5473300Z     
2025-01-07T17:55:37.5473381Z         # Save other properties
2025-01-07T17:55:37.5473468Z         self.lines_df = lines_df
2025-01-07T17:55:37.5473546Z         self.r_inner = r_inner
2025-01-07T17:55:37.5473695Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5473830Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5473968Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5474074Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5474175Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5474241Z         )
2025-01-07T17:55:37.5474365Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5474447Z         self.t_inner = t_inner
2025-01-07T17:55:37.5474560Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5474661Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5474738Z         self.v_inner = v_inner
2025-01-07T17:55:37.5474821Z         self.v_outer = v_outer
2025-01-07T17:55:37.5474885Z     
2025-01-07T17:55:37.5475027Z         # First check if both options are provided
2025-01-07T17:55:37.5475209Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5475294Z >           raise ValueError(
2025-01-07T17:55:37.5475432Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5475604Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5475671Z             )
2025-01-07T17:55:37.5476034Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5476040Z 
2025-01-07T17:55:37.5476225Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5476428Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl2] _
2025-01-07T17:55:37.5476433Z 
2025-01-07T17:55:37.5476709Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5477028Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5477273Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5477277Z 
2025-01-07T17:55:37.5477363Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5477480Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5477546Z         """
2025-01-07T17:55:37.5477640Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5477703Z     
2025-01-07T17:55:37.5477778Z         Parameters
2025-01-07T17:55:37.5477849Z         ----------
2025-01-07T17:55:37.5477997Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5478084Z             Simulation object.
2025-01-07T17:55:37.5478148Z     
2025-01-07T17:55:37.5478217Z         Returns
2025-01-07T17:55:37.5478283Z         -------
2025-01-07T17:55:37.5478418Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5478484Z         """
2025-01-07T17:55:37.5478623Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5478628Z 
2025-01-07T17:55:37.5478769Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5478882Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5479041Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5479193Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5479406Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5479544Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5479824Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5479894Z     return cls(
2025-01-07T17:55:37.5480003Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5480007Z 
2025-01-07T17:55:37.5480280Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5480422Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5480596Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5480777Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5480975Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5481083Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5481268Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5481366Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5481537Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5481649Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5481766Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5481770Z 
2025-01-07T17:55:37.5481847Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5482197Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5482306Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5482506Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5482575Z        0.00025518])
2025-01-07T17:55:37.5482733Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5482936Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5483057Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5483189Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5483510Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5483621Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5483860Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5484009Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5484195Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5484310Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5484400Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5484512Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5484604Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5484759Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5484930Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5485052Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5485203Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5485366Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5485487Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5485647Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5485785Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5486006Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5486084Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5486089Z 
2025-01-07T17:55:37.5486163Z     def __init__(
2025-01-07T17:55:37.5486230Z         self,
2025-01-07T17:55:37.5486317Z         last_interaction_type,
2025-01-07T17:55:37.5486408Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5486499Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5486582Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5486666Z         last_interaction_in_r,
2025-01-07T17:55:37.5486735Z         lines_df,
2025-01-07T17:55:37.5486811Z         packet_nus,
2025-01-07T17:55:37.5486887Z         packet_energies,
2025-01-07T17:55:37.5486960Z         r_inner,
2025-01-07T17:55:37.5487045Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5487232Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5487333Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5487417Z         spectrum_wavelength,
2025-01-07T17:55:37.5487491Z         t_inner,
2025-01-07T17:55:37.5487571Z         time_of_simulation,
2025-01-07T17:55:37.5487650Z         time_explosion,
2025-01-07T17:55:37.5487717Z         v_inner,
2025-01-07T17:55:37.5487792Z         v_outer,
2025-01-07T17:55:37.5487859Z         velocity
2025-01-07T17:55:37.5487930Z     ):
2025-01-07T17:55:37.5488000Z         """
2025-01-07T17:55:37.5488240Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5488305Z     
2025-01-07T17:55:37.5488380Z         Parameters
2025-01-07T17:55:37.5488452Z         ----------
2025-01-07T17:55:37.5488547Z         last_interaction_type : np.array
2025-01-07T17:55:37.5488702Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5488824Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5488927Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5489076Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5489172Z             absorption (interaction in)
2025-01-07T17:55:37.5489270Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5489419Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5489589Z             emission (interaction out)
2025-01-07T17:55:37.5489690Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5489842Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5489940Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5490087Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5490175Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5490333Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5490427Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5490594Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5490665Z             unit of Hz
2025-01-07T17:55:37.5490764Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5490892Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5490980Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5491091Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5491203Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5491327Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5491439Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5491560Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5491661Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5491797Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5491888Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5492321Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5492424Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5492544Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5492612Z         """
2025-01-07T17:55:37.5492802Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5492908Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5493008Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5493074Z             {
2025-01-07T17:55:37.5493158Z                 "nus": packet_nus,
2025-01-07T17:55:37.5493285Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5493381Z                 "energies": packet_energies,
2025-01-07T17:55:37.5493503Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5493656Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5493809Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5493949Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5494065Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5494131Z             }
2025-01-07T17:55:37.5494201Z         )
2025-01-07T17:55:37.5494269Z     
2025-01-07T17:55:37.5494357Z         # Save other properties
2025-01-07T17:55:37.5494439Z         self.lines_df = lines_df
2025-01-07T17:55:37.5494526Z         self.r_inner = r_inner
2025-01-07T17:55:37.5494667Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5494803Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5494933Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5495046Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5495141Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5495220Z         )
2025-01-07T17:55:37.5495338Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5495416Z         self.t_inner = t_inner
2025-01-07T17:55:37.5495528Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5495620Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5495811Z         self.v_inner = v_inner
2025-01-07T17:55:37.5495890Z         self.v_outer = v_outer
2025-01-07T17:55:37.5495959Z     
2025-01-07T17:55:37.5496060Z         # First check if both options are provided
2025-01-07T17:55:37.5496238Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5496317Z >           raise ValueError(
2025-01-07T17:55:37.5496460Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5496624Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5496700Z             )
2025-01-07T17:55:37.5497062Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5497067Z 
2025-01-07T17:55:37.5497244Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5497458Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl3] _
2025-01-07T17:55:37.5497463Z 
2025-01-07T17:55:37.5497736Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5497950Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5498181Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5498185Z 
2025-01-07T17:55:37.5498279Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5498398Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5498464Z         """
2025-01-07T17:55:37.5498672Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5498742Z     
2025-01-07T17:55:37.5498815Z         Parameters
2025-01-07T17:55:37.5498890Z         ----------
2025-01-07T17:55:37.5499034Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5499116Z             Simulation object.
2025-01-07T17:55:37.5499180Z     
2025-01-07T17:55:37.5499256Z         Returns
2025-01-07T17:55:37.5499327Z         -------
2025-01-07T17:55:37.5499463Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5499534Z         """
2025-01-07T17:55:37.5499666Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5499670Z 
2025-01-07T17:55:37.5499816Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5499925Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5500088Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5500238Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5500454Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5500583Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5500786Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5500860Z     return cls(
2025-01-07T17:55:37.5500970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5500974Z 
2025-01-07T17:55:37.5501252Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5501389Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5501568Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5501746Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5502097Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5502208Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5502391Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5502487Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5502769Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5502890Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5503001Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5503005Z 
2025-01-07T17:55:37.5503086Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5503249Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5503358Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5503552Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5503629Z        0.00025518])
2025-01-07T17:55:37.5503784Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5503982Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5504112Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5504238Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5504445Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5504547Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5504799Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5504943Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5505135Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5505355Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5505446Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5505554Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5505650Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5505810Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5505980Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5506107Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5506253Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5506423Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5506541Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5506705Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5506833Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5506945Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5507023Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5507031Z 
2025-01-07T17:55:37.5507101Z     def __init__(
2025-01-07T17:55:37.5507173Z         self,
2025-01-07T17:55:37.5507255Z         last_interaction_type,
2025-01-07T17:55:37.5507348Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5507433Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5507518Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5507596Z         last_interaction_in_r,
2025-01-07T17:55:37.5507669Z         lines_df,
2025-01-07T17:55:37.5507741Z         packet_nus,
2025-01-07T17:55:37.5507824Z         packet_energies,
2025-01-07T17:55:37.5507895Z         r_inner,
2025-01-07T17:55:37.5507984Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5508162Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5508261Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5508344Z         spectrum_wavelength,
2025-01-07T17:55:37.5508417Z         t_inner,
2025-01-07T17:55:37.5508582Z         time_of_simulation,
2025-01-07T17:55:37.5508660Z         time_explosion,
2025-01-07T17:55:37.5508732Z         v_inner,
2025-01-07T17:55:37.5508798Z         v_outer,
2025-01-07T17:55:37.5508871Z         velocity
2025-01-07T17:55:37.5508935Z     ):
2025-01-07T17:55:37.5509006Z         """
2025-01-07T17:55:37.5509233Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5509302Z     
2025-01-07T17:55:37.5509372Z         Parameters
2025-01-07T17:55:37.5509445Z         ----------
2025-01-07T17:55:37.5509540Z         last_interaction_type : np.array
2025-01-07T17:55:37.5509698Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5509814Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5509920Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5510065Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5510162Z             absorption (interaction in)
2025-01-07T17:55:37.5510265Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5510404Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5510497Z             emission (interaction out)
2025-01-07T17:55:37.5510592Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5510748Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5510842Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5510992Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5511175Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5511341Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5511429Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5511595Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5511666Z             unit of Hz
2025-01-07T17:55:37.5511769Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5511903Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5512102Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5512219Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5512324Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5512450Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5512554Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5512678Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5512780Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5512921Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5513003Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5513125Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5513223Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5513340Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5513411Z         """
2025-01-07T17:55:37.5513587Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5513694Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5513785Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5513856Z             {
2025-01-07T17:55:37.5513933Z                 "nus": packet_nus,
2025-01-07T17:55:37.5514064Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5514156Z                 "energies": packet_energies,
2025-01-07T17:55:37.5514278Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5514424Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5514570Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5514824Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5514943Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5515013Z             }
2025-01-07T17:55:37.5515081Z         )
2025-01-07T17:55:37.5515149Z     
2025-01-07T17:55:37.5515230Z         # Save other properties
2025-01-07T17:55:37.5515316Z         self.lines_df = lines_df
2025-01-07T17:55:37.5515397Z         self.r_inner = r_inner
2025-01-07T17:55:37.5515540Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5515673Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5515812Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5515918Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5516017Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5516083Z         )
2025-01-07T17:55:37.5516202Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5516282Z         self.t_inner = t_inner
2025-01-07T17:55:37.5516394Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5516492Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5516569Z         self.v_inner = v_inner
2025-01-07T17:55:37.5516651Z         self.v_outer = v_outer
2025-01-07T17:55:37.5516717Z     
2025-01-07T17:55:37.5516820Z         # First check if both options are provided
2025-01-07T17:55:37.5516991Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5517073Z >           raise ValueError(
2025-01-07T17:55:37.5517341Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5517505Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5517570Z             )
2025-01-07T17:55:37.5517932Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5517937Z 
2025-01-07T17:55:37.5518113Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5518314Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl4] _
2025-01-07T17:55:37.5518318Z 
2025-01-07T17:55:37.5518592Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5518803Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5519039Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5519047Z 
2025-01-07T17:55:37.5519133Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5519246Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5519314Z         """
2025-01-07T17:55:37.5519405Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5519470Z     
2025-01-07T17:55:37.5519546Z         Parameters
2025-01-07T17:55:37.5519624Z         ----------
2025-01-07T17:55:37.5519764Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5519850Z             Simulation object.
2025-01-07T17:55:37.5519914Z     
2025-01-07T17:55:37.5519987Z         Returns
2025-01-07T17:55:37.5520055Z         -------
2025-01-07T17:55:37.5520191Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5520257Z         """
2025-01-07T17:55:37.5520393Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5520398Z 
2025-01-07T17:55:37.5520539Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5520653Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5520810Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5520960Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5521257Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5521391Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5521592Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5521665Z     return cls(
2025-01-07T17:55:37.5521779Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5521784Z 
2025-01-07T17:55:37.5522263Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5522408Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5522588Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5522768Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5522972Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5523071Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5523260Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5523355Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5523518Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5523629Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5523743Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5523747Z 
2025-01-07T17:55:37.5523823Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5524120Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5524224Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5524421Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5524492Z        0.00025518])
2025-01-07T17:55:37.5524648Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5524846Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5524966Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5525096Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5525297Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5525404Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5525646Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5525795Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5525990Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5526101Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5526195Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5526306Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5526398Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5526552Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5526725Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5526846Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5526999Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5527165Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5527288Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5527450Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5527684Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5527798Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5527872Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5527877Z 
2025-01-07T17:55:37.5527950Z     def __init__(
2025-01-07T17:55:37.5528019Z         self,
2025-01-07T17:55:37.5528106Z         last_interaction_type,
2025-01-07T17:55:37.5528190Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5528280Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5528363Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5528450Z         last_interaction_in_r,
2025-01-07T17:55:37.5528519Z         lines_df,
2025-01-07T17:55:37.5528596Z         packet_nus,
2025-01-07T17:55:37.5528673Z         packet_energies,
2025-01-07T17:55:37.5528746Z         r_inner,
2025-01-07T17:55:37.5528837Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5529016Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5529115Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5529195Z         spectrum_wavelength,
2025-01-07T17:55:37.5529270Z         t_inner,
2025-01-07T17:55:37.5529346Z         time_of_simulation,
2025-01-07T17:55:37.5529427Z         time_explosion,
2025-01-07T17:55:37.5529496Z         v_inner,
2025-01-07T17:55:37.5529570Z         v_outer,
2025-01-07T17:55:37.5529638Z         velocity
2025-01-07T17:55:37.5529709Z     ):
2025-01-07T17:55:37.5529774Z         """
2025-01-07T17:55:37.5530006Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5530153Z     
2025-01-07T17:55:37.5530230Z         Parameters
2025-01-07T17:55:37.5530299Z         ----------
2025-01-07T17:55:37.5530396Z         last_interaction_type : np.array
2025-01-07T17:55:37.5530552Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5530664Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5530768Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5530912Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5531000Z             absorption (interaction in)
2025-01-07T17:55:37.5531099Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5531245Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5531329Z             emission (interaction out)
2025-01-07T17:55:37.5531426Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5531572Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5531672Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5531819Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5531907Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5532242Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5532338Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5532507Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5532578Z             unit of Hz
2025-01-07T17:55:37.5532676Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5532800Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5532888Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5532996Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5533105Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5533233Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5533340Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5533461Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5533561Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5533819Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5533905Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5534031Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5534127Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5534238Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5534307Z         """
2025-01-07T17:55:37.5534482Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5534585Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5534678Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5534747Z             {
2025-01-07T17:55:37.5534831Z                 "nus": packet_nus,
2025-01-07T17:55:37.5534954Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5535048Z                 "energies": packet_energies,
2025-01-07T17:55:37.5535170Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5535317Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5535464Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5535602Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5535717Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5535784Z             }
2025-01-07T17:55:37.5535856Z         )
2025-01-07T17:55:37.5535920Z     
2025-01-07T17:55:37.5536007Z         # Save other properties
2025-01-07T17:55:37.5536086Z         self.lines_df = lines_df
2025-01-07T17:55:37.5536277Z         self.r_inner = r_inner
2025-01-07T17:55:37.5536417Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5536556Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5536686Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5536801Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5536900Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5536966Z         )
2025-01-07T17:55:37.5537085Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5537163Z         self.t_inner = t_inner
2025-01-07T17:55:37.5537276Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5537369Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5537449Z         self.v_inner = v_inner
2025-01-07T17:55:37.5537524Z         self.v_outer = v_outer
2025-01-07T17:55:37.5537593Z     
2025-01-07T17:55:37.5537696Z         # First check if both options are provided
2025-01-07T17:55:37.5537870Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5537949Z >           raise ValueError(
2025-01-07T17:55:37.5538092Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5538259Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5538325Z             )
2025-01-07T17:55:37.5538681Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5538686Z 
2025-01-07T17:55:37.5538859Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5539066Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl5] _
2025-01-07T17:55:37.5539070Z 
2025-01-07T17:55:37.5539341Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5539562Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5539797Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5539806Z 
2025-01-07T17:55:37.5539894Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5540107Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5540177Z         """
2025-01-07T17:55:37.5540274Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5540342Z     
2025-01-07T17:55:37.5540418Z         Parameters
2025-01-07T17:55:37.5540488Z         ----------
2025-01-07T17:55:37.5540635Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5540713Z             Simulation object.
2025-01-07T17:55:37.5540781Z     
2025-01-07T17:55:37.5540849Z         Returns
2025-01-07T17:55:37.5540922Z         -------
2025-01-07T17:55:37.5541050Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5541125Z         """
2025-01-07T17:55:37.5541258Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5541262Z 
2025-01-07T17:55:37.5541410Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5541521Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5541684Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5541833Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5542156Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5542295Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5542492Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5542566Z     return cls(
2025-01-07T17:55:37.5542670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5542786Z 
2025-01-07T17:55:37.5543069Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5543215Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5543390Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5543571Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5543771Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5543876Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5544055Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5544155Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5544315Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5544431Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5544543Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5544552Z 
2025-01-07T17:55:37.5544627Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5544797Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5544899Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5545103Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5545170Z        0.00025518])
2025-01-07T17:55:37.5545329Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5545520Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5545644Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5545770Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5545980Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5546087Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5546329Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5546581Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5546771Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5546889Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5546976Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5547088Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5547177Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5547333Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5547503Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5547634Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5547786Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5547948Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5548075Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5548233Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5548364Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5548470Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5548547Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5548552Z 
2025-01-07T17:55:37.5548620Z     def __init__(
2025-01-07T17:55:37.5548691Z         self,
2025-01-07T17:55:37.5548772Z         last_interaction_type,
2025-01-07T17:55:37.5548943Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5549032Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5549116Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5549200Z         last_interaction_in_r,
2025-01-07T17:55:37.5549268Z         lines_df,
2025-01-07T17:55:37.5549344Z         packet_nus,
2025-01-07T17:55:37.5549422Z         packet_energies,
2025-01-07T17:55:37.5549495Z         r_inner,
2025-01-07T17:55:37.5549579Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5549761Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5549856Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5549941Z         spectrum_wavelength,
2025-01-07T17:55:37.5550008Z         t_inner,
2025-01-07T17:55:37.5550090Z         time_of_simulation,
2025-01-07T17:55:37.5550165Z         time_explosion,
2025-01-07T17:55:37.5550238Z         v_inner,
2025-01-07T17:55:37.5550305Z         v_outer,
2025-01-07T17:55:37.5550381Z         velocity
2025-01-07T17:55:37.5550446Z     ):
2025-01-07T17:55:37.5550518Z         """
2025-01-07T17:55:37.5550747Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5550811Z     
2025-01-07T17:55:37.5550887Z         Parameters
2025-01-07T17:55:37.5550957Z         ----------
2025-01-07T17:55:37.5551058Z         last_interaction_type : np.array
2025-01-07T17:55:37.5551210Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5551333Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5551429Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5551578Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5551665Z             absorption (interaction in)
2025-01-07T17:55:37.5551768Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5551908Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5552201Z             emission (interaction out)
2025-01-07T17:55:37.5552354Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5552579Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5552734Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5553115Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5553218Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5553391Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5553484Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5553642Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5553717Z             unit of Hz
2025-01-07T17:55:37.5553812Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5553943Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5554032Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5554147Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5554258Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5554381Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5554493Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5554620Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5554720Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5554854Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5554941Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5555061Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5555161Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5555272Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5555345Z         """
2025-01-07T17:55:37.5555631Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5555738Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5555831Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5555898Z             {
2025-01-07T17:55:37.5555979Z                 "nus": packet_nus,
2025-01-07T17:55:37.5556108Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5556202Z                 "energies": packet_energies,
2025-01-07T17:55:37.5556320Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5556471Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5556612Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5556753Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5556862Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5556937Z             }
2025-01-07T17:55:37.5557002Z         )
2025-01-07T17:55:37.5557071Z     
2025-01-07T17:55:37.5557154Z         # Save other properties
2025-01-07T17:55:37.5557241Z         self.lines_df = lines_df
2025-01-07T17:55:37.5557324Z         self.r_inner = r_inner
2025-01-07T17:55:37.5557464Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5557604Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5557737Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5557851Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5557947Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5558017Z         )
2025-01-07T17:55:37.5558131Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5558213Z         self.t_inner = t_inner
2025-01-07T17:55:37.5558324Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5558425Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5558501Z         self.v_inner = v_inner
2025-01-07T17:55:37.5558584Z         self.v_outer = v_outer
2025-01-07T17:55:37.5558648Z     
2025-01-07T17:55:37.5558755Z         # First check if both options are provided
2025-01-07T17:55:37.5558933Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5559110Z >           raise ValueError(
2025-01-07T17:55:37.5559258Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5559420Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5559492Z             )
2025-01-07T17:55:37.5559844Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5559849Z 
2025-01-07T17:55:37.5560024Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5560232Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl6] _
2025-01-07T17:55:37.5560236Z 
2025-01-07T17:55:37.5560511Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5560728Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5560966Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5560970Z 
2025-01-07T17:55:37.5561062Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5561174Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5561246Z         """
2025-01-07T17:55:37.5561332Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5561401Z     
2025-01-07T17:55:37.5561472Z         Parameters
2025-01-07T17:55:37.5561547Z         ----------
2025-01-07T17:55:37.5561691Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5561774Z             Simulation object.
2025-01-07T17:55:37.5562059Z     
2025-01-07T17:55:37.5562185Z         Returns
2025-01-07T17:55:37.5562264Z         -------
2025-01-07T17:55:37.5562401Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5562472Z         """
2025-01-07T17:55:37.5562605Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5562609Z 
2025-01-07T17:55:37.5562760Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5562867Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5563030Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5563175Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5563387Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5563519Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5563717Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5563797Z     return cls(
2025-01-07T17:55:37.5563901Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5563905Z 
2025-01-07T17:55:37.5564184Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5564325Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5564503Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5564676Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5564880Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5564979Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5565165Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5565257Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5565426Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5565542Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5565652Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5565656Z 
2025-01-07T17:55:37.5565879Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5566050Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5566157Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5566349Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5566420Z        0.00025518])
2025-01-07T17:55:37.5566575Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5566771Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5566899Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5567026Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5567234Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5567339Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5567587Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5567729Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5567921Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5568032Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5568123Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5568231Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5568431Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5568588Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5568757Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5568883Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5569031Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5569200Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5569319Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5569482Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5569605Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5569715Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5569796Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5569800Z 
2025-01-07T17:55:37.5569869Z     def __init__(
2025-01-07T17:55:37.5569940Z         self,
2025-01-07T17:55:37.5570024Z         last_interaction_type,
2025-01-07T17:55:37.5570113Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5570199Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5570289Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5570367Z         last_interaction_in_r,
2025-01-07T17:55:37.5570441Z         lines_df,
2025-01-07T17:55:37.5570512Z         packet_nus,
2025-01-07T17:55:37.5570593Z         packet_energies,
2025-01-07T17:55:37.5570661Z         r_inner,
2025-01-07T17:55:37.5570750Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5570927Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5571028Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5571109Z         spectrum_wavelength,
2025-01-07T17:55:37.5571186Z         t_inner,
2025-01-07T17:55:37.5571267Z         time_of_simulation,
2025-01-07T17:55:37.5571341Z         time_explosion,
2025-01-07T17:55:37.5571413Z         v_inner,
2025-01-07T17:55:37.5571479Z         v_outer,
2025-01-07T17:55:37.5571551Z         velocity
2025-01-07T17:55:37.5571615Z     ):
2025-01-07T17:55:37.5571687Z         """
2025-01-07T17:55:37.5572172Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5572257Z     
2025-01-07T17:55:37.5572332Z         Parameters
2025-01-07T17:55:37.5572411Z         ----------
2025-01-07T17:55:37.5572507Z         last_interaction_type : np.array
2025-01-07T17:55:37.5572670Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5572791Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5572893Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5573040Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5573139Z             absorption (interaction in)
2025-01-07T17:55:37.5573244Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5573382Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5573471Z             emission (interaction out)
2025-01-07T17:55:37.5573571Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5573725Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5573816Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5573967Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5574048Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5574211Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5574300Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5574466Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5574651Z             unit of Hz
2025-01-07T17:55:37.5574745Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5574876Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5574964Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5575109Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5575221Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5575346Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5575451Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5575575Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5575672Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5575809Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5575890Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5576011Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5576117Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5576226Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5576297Z         """
2025-01-07T17:55:37.5576472Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5576582Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5576671Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5576742Z             {
2025-01-07T17:55:37.5576820Z                 "nus": packet_nus,
2025-01-07T17:55:37.5576949Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5577037Z                 "energies": packet_energies,
2025-01-07T17:55:37.5577159Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5577305Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5577451Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5577599Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5577710Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5577780Z             }
2025-01-07T17:55:37.5577846Z         )
2025-01-07T17:55:37.5577919Z     
2025-01-07T17:55:37.5578100Z         # Save other properties
2025-01-07T17:55:37.5578188Z         self.lines_df = lines_df
2025-01-07T17:55:37.5578265Z         self.r_inner = r_inner
2025-01-07T17:55:37.5578408Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5578541Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5578676Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5578781Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5578881Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5578947Z         )
2025-01-07T17:55:37.5579070Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5579151Z         self.t_inner = t_inner
2025-01-07T17:55:37.5579257Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5579356Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5579433Z         self.v_inner = v_inner
2025-01-07T17:55:37.5579512Z         self.v_outer = v_outer
2025-01-07T17:55:37.5579580Z     
2025-01-07T17:55:37.5579685Z         # First check if both options are provided
2025-01-07T17:55:37.5579855Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5579938Z >           raise ValueError(
2025-01-07T17:55:37.5580076Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5580240Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5580306Z             )
2025-01-07T17:55:37.5580668Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5580751Z 
2025-01-07T17:55:37.5580930Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5581129Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl7] _
2025-01-07T17:55:37.5581134Z 
2025-01-07T17:55:37.5581414Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5581624Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5581862Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5581867Z 
2025-01-07T17:55:37.5582059Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5582176Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5582244Z         """
2025-01-07T17:55:37.5582341Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5582415Z     
2025-01-07T17:55:37.5582487Z         Parameters
2025-01-07T17:55:37.5582562Z         ----------
2025-01-07T17:55:37.5582705Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5582787Z             Simulation object.
2025-01-07T17:55:37.5582852Z     
2025-01-07T17:55:37.5582924Z         Returns
2025-01-07T17:55:37.5582995Z         -------
2025-01-07T17:55:37.5583130Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5583198Z         """
2025-01-07T17:55:37.5583333Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5583338Z 
2025-01-07T17:55:37.5583480Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5583593Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5583748Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5583899Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5584125Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5584257Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5584456Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5584527Z     return cls(
2025-01-07T17:55:37.5584747Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5584753Z 
2025-01-07T17:55:37.5585031Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5585175Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5585350Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5585527Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5585727Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5585829Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5586016Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5586109Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5586275Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5586391Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5586503Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5586510Z 
2025-01-07T17:55:37.5586584Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5586752Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5586855Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5587050Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5587247Z        0.00025518])
2025-01-07T17:55:37.5587403Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5587599Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5587717Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5587851Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5588052Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5588157Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5588398Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5588548Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5588736Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5588852Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5588941Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5589051Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5589144Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5589297Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5589475Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5589598Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5589750Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5589913Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5590038Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5590202Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5590328Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5590440Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5590513Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5590517Z 
2025-01-07T17:55:37.5590591Z     def __init__(
2025-01-07T17:55:37.5590739Z         self,
2025-01-07T17:55:37.5590829Z         last_interaction_type,
2025-01-07T17:55:37.5590914Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5591005Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5591087Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5591171Z         last_interaction_in_r,
2025-01-07T17:55:37.5591239Z         lines_df,
2025-01-07T17:55:37.5591316Z         packet_nus,
2025-01-07T17:55:37.5591393Z         packet_energies,
2025-01-07T17:55:37.5591466Z         r_inner,
2025-01-07T17:55:37.5591555Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5591735Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5591834Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5591914Z         spectrum_wavelength,
2025-01-07T17:55:37.5592087Z         t_inner,
2025-01-07T17:55:37.5592165Z         time_of_simulation,
2025-01-07T17:55:37.5592244Z         time_explosion,
2025-01-07T17:55:37.5592316Z         v_inner,
2025-01-07T17:55:37.5592389Z         v_outer,
2025-01-07T17:55:37.5592459Z         velocity
2025-01-07T17:55:37.5592528Z     ):
2025-01-07T17:55:37.5592595Z         """
2025-01-07T17:55:37.5592825Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5592889Z     
2025-01-07T17:55:37.5592964Z         Parameters
2025-01-07T17:55:37.5593034Z         ----------
2025-01-07T17:55:37.5593130Z         last_interaction_type : np.array
2025-01-07T17:55:37.5593283Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5593511Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5593613Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5593758Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5593849Z             absorption (interaction in)
2025-01-07T17:55:37.5593946Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5594094Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5594177Z             emission (interaction out)
2025-01-07T17:55:37.5594276Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5594423Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5594518Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5594663Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5594749Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5594909Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5595000Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5595165Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5595236Z             unit of Hz
2025-01-07T17:55:37.5595335Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5595463Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5595551Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5595660Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5595772Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5595896Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5596007Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5596127Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5596227Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5596370Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5596450Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5596575Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5596668Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5596892Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5596961Z         """
2025-01-07T17:55:37.5597138Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5597239Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5597335Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5597404Z             {
2025-01-07T17:55:37.5597486Z                 "nus": packet_nus,
2025-01-07T17:55:37.5597609Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5597704Z                 "energies": packet_energies,
2025-01-07T17:55:37.5597828Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5597974Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5598118Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5598257Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5598376Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5598442Z             }
2025-01-07T17:55:37.5598514Z         )
2025-01-07T17:55:37.5598580Z     
2025-01-07T17:55:37.5598667Z         # Save other properties
2025-01-07T17:55:37.5598747Z         self.lines_df = lines_df
2025-01-07T17:55:37.5598829Z         self.r_inner = r_inner
2025-01-07T17:55:37.5598966Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5599104Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5599241Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5599427Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5599528Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5599595Z         )
2025-01-07T17:55:37.5599715Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5599791Z         self.t_inner = t_inner
2025-01-07T17:55:37.5599908Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5600002Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5600084Z         self.v_inner = v_inner
2025-01-07T17:55:37.5600159Z         self.v_outer = v_outer
2025-01-07T17:55:37.5600229Z     
2025-01-07T17:55:37.5600329Z         # First check if both options are provided
2025-01-07T17:55:37.5600503Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5600582Z >           raise ValueError(
2025-01-07T17:55:37.5600723Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5600894Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5600959Z             )
2025-01-07T17:55:37.5601314Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5601320Z 
2025-01-07T17:55:37.5601492Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5601700Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl8] _
2025-01-07T17:55:37.5601704Z 
2025-01-07T17:55:37.5602161Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5602392Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5602624Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5602634Z 
2025-01-07T17:55:37.5602721Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5602839Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5602907Z         """
2025-01-07T17:55:37.5602997Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5603061Z     
2025-01-07T17:55:37.5603136Z         Parameters
2025-01-07T17:55:37.5603205Z         ----------
2025-01-07T17:55:37.5603471Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5603557Z             Simulation object.
2025-01-07T17:55:37.5603626Z     
2025-01-07T17:55:37.5603694Z         Returns
2025-01-07T17:55:37.5603768Z         -------
2025-01-07T17:55:37.5603896Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5603967Z         """
2025-01-07T17:55:37.5604097Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5604106Z 
2025-01-07T17:55:37.5604251Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5604362Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5604525Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5604677Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5604888Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5605029Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5605225Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5605303Z     return cls(
2025-01-07T17:55:37.5605406Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5605410Z 
2025-01-07T17:55:37.5605685Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5605826Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5605999Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5606295Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5606496Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5606598Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5606781Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5606882Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5607045Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5607159Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5607267Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5607276Z 
2025-01-07T17:55:37.5607352Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5607522Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5607633Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5607832Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5607899Z        0.00025518])
2025-01-07T17:55:37.5608056Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5608249Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5608373Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5608499Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5608706Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5608811Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5609055Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5609205Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5609392Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5609507Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5609591Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5609783Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5609875Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5610033Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5610200Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5610326Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5610477Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5610639Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5610766Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5610921Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5611049Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5611157Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5611236Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5611241Z 
2025-01-07T17:55:37.5611310Z     def __init__(
2025-01-07T17:55:37.5611383Z         self,
2025-01-07T17:55:37.5611463Z         last_interaction_type,
2025-01-07T17:55:37.5611554Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5611644Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5611726Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5611809Z         last_interaction_in_r,
2025-01-07T17:55:37.5611878Z         lines_df,
2025-01-07T17:55:37.5612240Z         packet_nus,
2025-01-07T17:55:37.5612320Z         packet_energies,
2025-01-07T17:55:37.5612393Z         r_inner,
2025-01-07T17:55:37.5612479Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5612668Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5612762Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5612851Z         spectrum_wavelength,
2025-01-07T17:55:37.5612920Z         t_inner,
2025-01-07T17:55:37.5613002Z         time_of_simulation,
2025-01-07T17:55:37.5613076Z         time_explosion,
2025-01-07T17:55:37.5613149Z         v_inner,
2025-01-07T17:55:37.5613217Z         v_outer,
2025-01-07T17:55:37.5613289Z         velocity
2025-01-07T17:55:37.5613353Z     ):
2025-01-07T17:55:37.5613424Z         """
2025-01-07T17:55:37.5613659Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5613727Z     
2025-01-07T17:55:37.5613804Z         Parameters
2025-01-07T17:55:37.5613879Z         ----------
2025-01-07T17:55:37.5613978Z         last_interaction_type : np.array
2025-01-07T17:55:37.5614130Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5614254Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5614351Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5614504Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5614591Z             absorption (interaction in)
2025-01-07T17:55:37.5614694Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5614839Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5614928Z             emission (interaction out)
2025-01-07T17:55:37.5615028Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5615174Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5615274Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5615423Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5615513Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5615673Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5615766Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5616038Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5616117Z             unit of Hz
2025-01-07T17:55:37.5616213Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5616347Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5616430Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5616545Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5616656Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5616779Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5616893Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5617015Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5617118Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5617253Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5617339Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5617460Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5617560Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5617670Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5617740Z         """
2025-01-07T17:55:37.5617913Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5618025Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5618119Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5618186Z             {
2025-01-07T17:55:37.5618364Z                 "nus": packet_nus,
2025-01-07T17:55:37.5618486Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5618579Z                 "energies": packet_energies,
2025-01-07T17:55:37.5618696Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5618847Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5618992Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5619132Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5619241Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5619313Z             }
2025-01-07T17:55:37.5619378Z         )
2025-01-07T17:55:37.5619447Z     
2025-01-07T17:55:37.5619528Z         # Save other properties
2025-01-07T17:55:37.5619614Z         self.lines_df = lines_df
2025-01-07T17:55:37.5619697Z         self.r_inner = r_inner
2025-01-07T17:55:37.5619838Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5619976Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5620105Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5620216Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5620315Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5620385Z         )
2025-01-07T17:55:37.5620499Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5620581Z         self.t_inner = t_inner
2025-01-07T17:55:37.5620689Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5620787Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5620864Z         self.v_inner = v_inner
2025-01-07T17:55:37.5620945Z         self.v_outer = v_outer
2025-01-07T17:55:37.5621009Z     
2025-01-07T17:55:37.5621114Z         # First check if both options are provided
2025-01-07T17:55:37.5621295Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5621374Z >           raise ValueError(
2025-01-07T17:55:37.5621516Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5621677Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5621749Z             )
2025-01-07T17:55:37.5622344Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5622352Z 
2025-01-07T17:55:37.5622536Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5622740Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl9] _
2025-01-07T17:55:37.5622750Z 
2025-01-07T17:55:37.5623022Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5623237Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5623471Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5623476Z 
2025-01-07T17:55:37.5623567Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5623676Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5627918Z         """
2025-01-07T17:55:37.5628057Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5628127Z     
2025-01-07T17:55:37.5628213Z         Parameters
2025-01-07T17:55:37.5628288Z         ----------
2025-01-07T17:55:37.5628452Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5628537Z             Simulation object.
2025-01-07T17:55:37.5628613Z     
2025-01-07T17:55:37.5628684Z         Returns
2025-01-07T17:55:37.5628761Z         -------
2025-01-07T17:55:37.5628908Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5628985Z         """
2025-01-07T17:55:37.5629138Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5629290Z 
2025-01-07T17:55:37.5629448Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5629570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5629736Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5629900Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5630114Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5630260Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5630461Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5630540Z     return cls(
2025-01-07T17:55:37.5630649Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5630659Z 
2025-01-07T17:55:37.5630935Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5631089Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5631274Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5631463Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5631670Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5631780Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5632116Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5632225Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5632391Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5632513Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5632631Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5632639Z 
2025-01-07T17:55:37.5632722Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5632897Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5633006Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5633324Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5633398Z        0.00025518])
2025-01-07T17:55:37.5633564Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5633759Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5633890Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5634030Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5634235Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5634349Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5634593Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5634743Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5634937Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5635058Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5635148Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5635264Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5635357Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5635518Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5635695Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5635926Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5636083Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5636246Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5636377Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5636537Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5636670Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5636780Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5636862Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5636866Z 
2025-01-07T17:55:37.5636944Z     def __init__(
2025-01-07T17:55:37.5637017Z         self,
2025-01-07T17:55:37.5637108Z         last_interaction_type,
2025-01-07T17:55:37.5637197Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5637296Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5637380Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5637471Z         last_interaction_in_r,
2025-01-07T17:55:37.5637542Z         lines_df,
2025-01-07T17:55:37.5637623Z         packet_nus,
2025-01-07T17:55:37.5637702Z         packet_energies,
2025-01-07T17:55:37.5637778Z         r_inner,
2025-01-07T17:55:37.5637866Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5638053Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5638152Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5638242Z         spectrum_wavelength,
2025-01-07T17:55:37.5638312Z         t_inner,
2025-01-07T17:55:37.5638399Z         time_of_simulation,
2025-01-07T17:55:37.5638475Z         time_explosion,
2025-01-07T17:55:37.5638553Z         v_inner,
2025-01-07T17:55:37.5638627Z         v_outer,
2025-01-07T17:55:37.5638697Z         velocity
2025-01-07T17:55:37.5638770Z     ):
2025-01-07T17:55:37.5638841Z         """
2025-01-07T17:55:37.5639081Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5639151Z     
2025-01-07T17:55:37.5639230Z         Parameters
2025-01-07T17:55:37.5639303Z         ----------
2025-01-07T17:55:37.5639402Z         last_interaction_type : np.array
2025-01-07T17:55:37.5639660Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5639790Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5639891Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5640048Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5640138Z             absorption (interaction in)
2025-01-07T17:55:37.5640245Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5640393Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5640482Z             emission (interaction out)
2025-01-07T17:55:37.5640589Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5640740Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5640841Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5640992Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5641087Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5641248Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5641345Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5641507Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5641586Z             unit of Hz
2025-01-07T17:55:37.5641681Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5641817Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5641908Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5642301Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5642422Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5642552Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5642666Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5642790Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5642899Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5643036Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5643130Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5643253Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5643355Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5643467Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5643542Z         """
2025-01-07T17:55:37.5643725Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5643835Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5643937Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5644006Z             {
2025-01-07T17:55:37.5644095Z                 "nus": packet_nus,
2025-01-07T17:55:37.5644223Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5644322Z                 "energies": packet_energies,
2025-01-07T17:55:37.5644442Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5644601Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5644748Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5644892Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5645004Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5645080Z             }
2025-01-07T17:55:37.5645153Z         )
2025-01-07T17:55:37.5645224Z     
2025-01-07T17:55:37.5645317Z         # Save other properties
2025-01-07T17:55:37.5645398Z         self.lines_df = lines_df
2025-01-07T17:55:37.5645484Z         self.r_inner = r_inner
2025-01-07T17:55:37.5645624Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5645765Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5646012Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5646132Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5646232Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5646306Z         )
2025-01-07T17:55:37.5646422Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5646507Z         self.t_inner = t_inner
2025-01-07T17:55:37.5646615Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5646717Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5646806Z         self.v_inner = v_inner
2025-01-07T17:55:37.5646886Z         self.v_outer = v_outer
2025-01-07T17:55:37.5646959Z     
2025-01-07T17:55:37.5647063Z         # First check if both options are provided
2025-01-07T17:55:37.5647241Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5647321Z >           raise ValueError(
2025-01-07T17:55:37.5647467Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5647632Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5647705Z             )
2025-01-07T17:55:37.5648059Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5648065Z 
2025-01-07T17:55:37.5648246Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5648461Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl10] _
2025-01-07T17:55:37.5648559Z 
2025-01-07T17:55:37.5648838Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5649060Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5649295Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5649303Z 
2025-01-07T17:55:37.5649396Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5649508Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5649581Z         """
2025-01-07T17:55:37.5649669Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5649740Z     
2025-01-07T17:55:37.5649813Z         Parameters
2025-01-07T17:55:37.5649890Z         ----------
2025-01-07T17:55:37.5650032Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5650119Z             Simulation object.
2025-01-07T17:55:37.5650186Z     
2025-01-07T17:55:37.5650260Z         Returns
2025-01-07T17:55:37.5650335Z         -------
2025-01-07T17:55:37.5650471Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5650544Z         """
2025-01-07T17:55:37.5650678Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5650682Z 
2025-01-07T17:55:37.5650831Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5650945Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5651107Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5651253Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5651471Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5651604Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5651808Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5651879Z     return cls(
2025-01-07T17:55:37.5652171Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5652177Z 
2025-01-07T17:55:37.5652465Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5652607Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5652905Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5653088Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5653298Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5653400Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5653587Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5653684Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5653854Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5653976Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5654085Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5654090Z 
2025-01-07T17:55:37.5654176Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5654356Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5654468Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5654668Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5654741Z        0.00025518])
2025-01-07T17:55:37.5654902Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5655101Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5655228Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5655471Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5655679Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5655782Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5656034Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5656179Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5656372Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5656483Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5656577Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5656687Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5656783Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5656941Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5657114Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5657240Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5657393Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5657561Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5657681Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5657846Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5657972Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5658086Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5658161Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5658173Z 
2025-01-07T17:55:37.5658244Z     def __init__(
2025-01-07T17:55:37.5658317Z         self,
2025-01-07T17:55:37.5658401Z         last_interaction_type,
2025-01-07T17:55:37.5658492Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5658579Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5658671Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5658832Z         last_interaction_in_r,
2025-01-07T17:55:37.5658912Z         lines_df,
2025-01-07T17:55:37.5658986Z         packet_nus,
2025-01-07T17:55:37.5659071Z         packet_energies,
2025-01-07T17:55:37.5659140Z         r_inner,
2025-01-07T17:55:37.5659229Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5659408Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5659508Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5659594Z         spectrum_wavelength,
2025-01-07T17:55:37.5659669Z         t_inner,
2025-01-07T17:55:37.5659747Z         time_of_simulation,
2025-01-07T17:55:37.5659833Z         time_explosion,
2025-01-07T17:55:37.5659907Z         v_inner,
2025-01-07T17:55:37.5659977Z         v_outer,
2025-01-07T17:55:37.5660052Z         velocity
2025-01-07T17:55:37.5660118Z     ):
2025-01-07T17:55:37.5660189Z         """
2025-01-07T17:55:37.5660419Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5660495Z     
2025-01-07T17:55:37.5660567Z         Parameters
2025-01-07T17:55:37.5660646Z         ----------
2025-01-07T17:55:37.5660742Z         last_interaction_type : np.array
2025-01-07T17:55:37.5660899Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5661015Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5661116Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5661261Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5661355Z             absorption (interaction in)
2025-01-07T17:55:37.5661535Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5661682Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5661774Z             emission (interaction out)
2025-01-07T17:55:37.5661870Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5662147Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5662245Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5662397Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5662480Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5662643Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5662732Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5662899Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5662974Z             unit of Hz
2025-01-07T17:55:37.5663079Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5663214Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5663297Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5663414Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5663521Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5663657Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5663765Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5663892Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5663989Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5664132Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5664216Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5664340Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5664435Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5664556Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5664628Z         """
2025-01-07T17:55:37.5664799Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5664908Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5665000Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5665216Z             {
2025-01-07T17:55:37.5665300Z                 "nus": packet_nus,
2025-01-07T17:55:37.5665431Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5665521Z                 "energies": packet_energies,
2025-01-07T17:55:37.5665644Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5665791Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5665938Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5666079Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5666200Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5666272Z             }
2025-01-07T17:55:37.5666340Z         )
2025-01-07T17:55:37.5666410Z     
2025-01-07T17:55:37.5666493Z         # Save other properties
2025-01-07T17:55:37.5666583Z         self.lines_df = lines_df
2025-01-07T17:55:37.5666666Z         self.r_inner = r_inner
2025-01-07T17:55:37.5666810Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5666943Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5667078Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5667185Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5667286Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5667352Z         )
2025-01-07T17:55:37.5667472Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5667666Z         self.t_inner = t_inner
2025-01-07T17:55:37.5667781Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5667879Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5667957Z         self.v_inner = v_inner
2025-01-07T17:55:37.5668038Z         self.v_outer = v_outer
2025-01-07T17:55:37.5668103Z     
2025-01-07T17:55:37.5668212Z         # First check if both options are provided
2025-01-07T17:55:37.5668381Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5668466Z >           raise ValueError(
2025-01-07T17:55:37.5668606Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5668770Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5668837Z             )
2025-01-07T17:55:37.5669195Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5669204Z 
2025-01-07T17:55:37.5669379Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5669593Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl11] _
2025-01-07T17:55:37.5669597Z 
2025-01-07T17:55:37.5669877Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5670096Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5670335Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5670339Z 
2025-01-07T17:55:37.5670427Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5670554Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5670620Z         """
2025-01-07T17:55:37.5670711Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5670776Z     
2025-01-07T17:55:37.5670853Z         Parameters
2025-01-07T17:55:37.5670927Z         ----------
2025-01-07T17:55:37.5671072Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5671149Z             Simulation object.
2025-01-07T17:55:37.5671220Z     
2025-01-07T17:55:37.5671289Z         Returns
2025-01-07T17:55:37.5671364Z         -------
2025-01-07T17:55:37.5671497Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5671649Z         """
2025-01-07T17:55:37.5671785Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5671794Z 
2025-01-07T17:55:37.5672034Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5672150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5672309Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5672458Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5672669Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5672811Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5673010Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5673086Z     return cls(
2025-01-07T17:55:37.5673196Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5673200Z 
2025-01-07T17:55:37.5673482Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5673630Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5673807Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5673986Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5674185Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5674290Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5674589Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5674689Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5674852Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5674967Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5675113Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5675122Z 
2025-01-07T17:55:37.5675200Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5675371Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5675475Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5675674Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5675742Z        0.00025518])
2025-01-07T17:55:37.5675901Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5676097Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5676224Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5676350Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5676562Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5676669Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5676911Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5677059Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5677246Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5677364Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5677453Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5677565Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5677654Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5677810Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5678085Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5678216Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5678367Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5678529Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5678652Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5678812Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5678941Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5679056Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5679134Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5679138Z 
2025-01-07T17:55:37.5679210Z     def __init__(
2025-01-07T17:55:37.5679284Z         self,
2025-01-07T17:55:37.5679368Z         last_interaction_type,
2025-01-07T17:55:37.5679462Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5679552Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5679635Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5679720Z         last_interaction_in_r,
2025-01-07T17:55:37.5679790Z         lines_df,
2025-01-07T17:55:37.5679867Z         packet_nus,
2025-01-07T17:55:37.5679946Z         packet_energies,
2025-01-07T17:55:37.5680020Z         r_inner,
2025-01-07T17:55:37.5680105Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5680287Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5680461Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5680549Z         spectrum_wavelength,
2025-01-07T17:55:37.5680618Z         t_inner,
2025-01-07T17:55:37.5680702Z         time_of_simulation,
2025-01-07T17:55:37.5680777Z         time_explosion,
2025-01-07T17:55:37.5680850Z         v_inner,
2025-01-07T17:55:37.5680919Z         v_outer,
2025-01-07T17:55:37.5680997Z         velocity
2025-01-07T17:55:37.5681068Z     ):
2025-01-07T17:55:37.5681135Z         """
2025-01-07T17:55:37.5681364Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5681431Z     
2025-01-07T17:55:37.5681509Z         Parameters
2025-01-07T17:55:37.5681578Z         ----------
2025-01-07T17:55:37.5681675Z         last_interaction_type : np.array
2025-01-07T17:55:37.5681824Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5682082Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5682220Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5682370Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5682458Z             absorption (interaction in)
2025-01-07T17:55:37.5682559Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5682706Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5682797Z             emission (interaction out)
2025-01-07T17:55:37.5682896Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5683042Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5683139Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5683288Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5683375Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5683534Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5683630Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5683790Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5683867Z             unit of Hz
2025-01-07T17:55:37.5683962Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5684099Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5684301Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5684419Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5684531Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5684654Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5684764Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5684886Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5684989Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5685123Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5685215Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5685335Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5685433Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5685542Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5685614Z         """
2025-01-07T17:55:37.5685791Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5685900Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5685998Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5686065Z             {
2025-01-07T17:55:37.5686149Z                 "nus": packet_nus,
2025-01-07T17:55:37.5686271Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5686365Z                 "energies": packet_energies,
2025-01-07T17:55:37.5686483Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5686789Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5686929Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5687073Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5687188Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5687267Z             }
2025-01-07T17:55:37.5687335Z         )
2025-01-07T17:55:37.5687405Z     
2025-01-07T17:55:37.5687493Z         # Save other properties
2025-01-07T17:55:37.5687576Z         self.lines_df = lines_df
2025-01-07T17:55:37.5687659Z         self.r_inner = r_inner
2025-01-07T17:55:37.5687798Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5687935Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5688065Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5688179Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5688279Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5688353Z         )
2025-01-07T17:55:37.5688470Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5688552Z         self.t_inner = t_inner
2025-01-07T17:55:37.5688659Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5688762Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5688839Z         self.v_inner = v_inner
2025-01-07T17:55:37.5688922Z         self.v_outer = v_outer
2025-01-07T17:55:37.5688992Z     
2025-01-07T17:55:37.5689096Z         # First check if both options are provided
2025-01-07T17:55:37.5689272Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5689351Z >           raise ValueError(
2025-01-07T17:55:37.5689496Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5689657Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5689733Z             )
2025-01-07T17:55:37.5690085Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5690091Z 
2025-01-07T17:55:37.5690267Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5690556Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl12] _
2025-01-07T17:55:37.5690566Z 
2025-01-07T17:55:37.5690839Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5691057Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5691290Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5691295Z 
2025-01-07T17:55:37.5691387Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5691499Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5691575Z         """
2025-01-07T17:55:37.5691662Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5691735Z     
2025-01-07T17:55:37.5691807Z         Parameters
2025-01-07T17:55:37.5691882Z         ----------
2025-01-07T17:55:37.5692196Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5692284Z             Simulation object.
2025-01-07T17:55:37.5692359Z     
2025-01-07T17:55:37.5692428Z         Returns
2025-01-07T17:55:37.5692505Z         -------
2025-01-07T17:55:37.5692637Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5692708Z         """
2025-01-07T17:55:37.5692844Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5692848Z 
2025-01-07T17:55:37.5693000Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5693110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5693273Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5693541Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5693757Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5693888Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5694092Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5694168Z     return cls(
2025-01-07T17:55:37.5694273Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5694277Z 
2025-01-07T17:55:37.5694552Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5694690Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5694868Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5695041Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5695248Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5695348Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5695534Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5695637Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5695800Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5695917Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5696030Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5696034Z 
2025-01-07T17:55:37.5696117Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5696278Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5696388Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5696587Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5696662Z        0.00025518])
2025-01-07T17:55:37.5696819Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5697019Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5697250Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5697381Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5697589Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5697692Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5697940Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5698083Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5698279Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5698392Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5698486Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5698596Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5698689Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5698845Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5699016Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5699145Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5699293Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5699460Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5699661Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5699827Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5699953Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5700068Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5700148Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5700153Z 
2025-01-07T17:55:37.5700223Z     def __init__(
2025-01-07T17:55:37.5700297Z         self,
2025-01-07T17:55:37.5700382Z         last_interaction_type,
2025-01-07T17:55:37.5700472Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5700558Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5700644Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5700723Z         last_interaction_in_r,
2025-01-07T17:55:37.5700798Z         lines_df,
2025-01-07T17:55:37.5700872Z         packet_nus,
2025-01-07T17:55:37.5700958Z         packet_energies,
2025-01-07T17:55:37.5701027Z         r_inner,
2025-01-07T17:55:37.5701117Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5701295Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5701395Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5701481Z         spectrum_wavelength,
2025-01-07T17:55:37.5701554Z         t_inner,
2025-01-07T17:55:37.5701638Z         time_of_simulation,
2025-01-07T17:55:37.5701713Z         time_explosion,
2025-01-07T17:55:37.5701787Z         v_inner,
2025-01-07T17:55:37.5701856Z         v_outer,
2025-01-07T17:55:37.5702039Z         velocity
2025-01-07T17:55:37.5702108Z     ):
2025-01-07T17:55:37.5702182Z         """
2025-01-07T17:55:37.5702412Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5702482Z     
2025-01-07T17:55:37.5702553Z         Parameters
2025-01-07T17:55:37.5702629Z         ----------
2025-01-07T17:55:37.5702723Z         last_interaction_type : np.array
2025-01-07T17:55:37.5702876Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5702994Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5703096Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5703245Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5703446Z             absorption (interaction in)
2025-01-07T17:55:37.5703552Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5703696Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5703785Z             emission (interaction out)
2025-01-07T17:55:37.5703880Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5704035Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5704128Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5704280Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5704367Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5704533Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5704619Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5704782Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5704862Z             unit of Hz
2025-01-07T17:55:37.5704959Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5705091Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5705175Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5705288Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5705395Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5705521Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5705627Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5705860Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5705958Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5706100Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5706183Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5706310Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5706415Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5706526Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5706597Z         """
2025-01-07T17:55:37.5706769Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5706878Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5706968Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5707040Z             {
2025-01-07T17:55:37.5707118Z                 "nus": packet_nus,
2025-01-07T17:55:37.5707247Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5707341Z                 "energies": packet_energies,
2025-01-07T17:55:37.5707463Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5707611Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5707763Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5707908Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5708020Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5708092Z             }
2025-01-07T17:55:37.5708160Z         )
2025-01-07T17:55:37.5708229Z     
2025-01-07T17:55:37.5708311Z         # Save other properties
2025-01-07T17:55:37.5708398Z         self.lines_df = lines_df
2025-01-07T17:55:37.5708476Z         self.r_inner = r_inner
2025-01-07T17:55:37.5708620Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5708758Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5708895Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5709002Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5709103Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5709169Z         )
2025-01-07T17:55:37.5709369Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5709454Z         self.t_inner = t_inner
2025-01-07T17:55:37.5709563Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5709660Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5709737Z         self.v_inner = v_inner
2025-01-07T17:55:37.5709819Z         self.v_outer = v_outer
2025-01-07T17:55:37.5709885Z     
2025-01-07T17:55:37.5709992Z         # First check if both options are provided
2025-01-07T17:55:37.5710160Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5710247Z >           raise ValueError(
2025-01-07T17:55:37.5710384Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5710551Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5710619Z             )
2025-01-07T17:55:37.5710974Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5710979Z 
2025-01-07T17:55:37.5711153Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5711365Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl13] _
2025-01-07T17:55:37.5711369Z 
2025-01-07T17:55:37.5711647Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5711859Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5712195Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5712328Z 
2025-01-07T17:55:37.5712426Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5712543Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5712611Z         """
2025-01-07T17:55:37.5712702Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5712772Z     
2025-01-07T17:55:37.5712847Z         Parameters
2025-01-07T17:55:37.5712924Z         ----------
2025-01-07T17:55:37.5713066Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5713150Z             Simulation object.
2025-01-07T17:55:37.5713218Z     
2025-01-07T17:55:37.5713291Z         Returns
2025-01-07T17:55:37.5713361Z         -------
2025-01-07T17:55:37.5713493Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5713561Z         """
2025-01-07T17:55:37.5713700Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5713704Z 
2025-01-07T17:55:37.5713853Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5713965Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5714123Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5714276Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5714494Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5714625Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5714827Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5714901Z     return cls(
2025-01-07T17:55:37.5715012Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5715016Z 
2025-01-07T17:55:37.5715288Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5715430Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5715607Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5715786Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5715985Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5716192Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5716380Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5716476Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5716646Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5716755Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5716871Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5716875Z 
2025-01-07T17:55:37.5716957Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5717126Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5717236Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5717429Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5717501Z        0.00025518])
2025-01-07T17:55:37.5717660Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5717856Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5717979Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5718112Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5718317Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5718425Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5718748Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5718897Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5719087Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5719203Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5719296Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5719404Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5719499Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5719654Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5719828Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5719951Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5720107Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5720273Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5720398Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5720563Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5720689Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5720801Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5720877Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5720881Z 
2025-01-07T17:55:37.5720957Z     def __init__(
2025-01-07T17:55:37.5721026Z         self,
2025-01-07T17:55:37.5721112Z         last_interaction_type,
2025-01-07T17:55:37.5721198Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5721291Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5721380Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5721465Z         last_interaction_in_r,
2025-01-07T17:55:37.5721535Z         lines_df,
2025-01-07T17:55:37.5721613Z         packet_nus,
2025-01-07T17:55:37.5721695Z         packet_energies,
2025-01-07T17:55:37.5721764Z         r_inner,
2025-01-07T17:55:37.5721852Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5722354Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5722467Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5722549Z         spectrum_wavelength,
2025-01-07T17:55:37.5722625Z         t_inner,
2025-01-07T17:55:37.5722704Z         time_of_simulation,
2025-01-07T17:55:37.5722784Z         time_explosion,
2025-01-07T17:55:37.5722856Z         v_inner,
2025-01-07T17:55:37.5722930Z         v_outer,
2025-01-07T17:55:37.5722998Z         velocity
2025-01-07T17:55:37.5723071Z     ):
2025-01-07T17:55:37.5723138Z         """
2025-01-07T17:55:37.5723374Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5723445Z     
2025-01-07T17:55:37.5723525Z         Parameters
2025-01-07T17:55:37.5723597Z         ----------
2025-01-07T17:55:37.5723695Z         last_interaction_type : np.array
2025-01-07T17:55:37.5723853Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5723971Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5724075Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5724221Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5724314Z             absorption (interaction in)
2025-01-07T17:55:37.5724413Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5724563Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5724650Z             emission (interaction out)
2025-01-07T17:55:37.5724753Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5725025Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5725127Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5725278Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5725361Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5725530Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5725623Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5725787Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5725861Z             unit of Hz
2025-01-07T17:55:37.5725963Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5726090Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5726179Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5726288Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5726404Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5726527Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5726637Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5726763Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5726860Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5727003Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5727088Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5727216Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5727310Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5727425Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5727493Z         """
2025-01-07T17:55:37.5727670Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5727774Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5727873Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5727942Z             {
2025-01-07T17:55:37.5728025Z                 "nus": packet_nus,
2025-01-07T17:55:37.5728152Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5728247Z                 "energies": packet_energies,
2025-01-07T17:55:37.5728453Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5728607Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5728754Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5728893Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5729008Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5729076Z             }
2025-01-07T17:55:37.5729147Z         )
2025-01-07T17:55:37.5729212Z     
2025-01-07T17:55:37.5729300Z         # Save other properties
2025-01-07T17:55:37.5729386Z         self.lines_df = lines_df
2025-01-07T17:55:37.5729470Z         self.r_inner = r_inner
2025-01-07T17:55:37.5729611Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5729750Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5729884Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5729995Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5730096Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5730163Z         )
2025-01-07T17:55:37.5730286Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5730364Z         self.t_inner = t_inner
2025-01-07T17:55:37.5730477Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5730570Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5730655Z         self.v_inner = v_inner
2025-01-07T17:55:37.5730732Z         self.v_outer = v_outer
2025-01-07T17:55:37.5730883Z     
2025-01-07T17:55:37.5730987Z         # First check if both options are provided
2025-01-07T17:55:37.5731167Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5731247Z >           raise ValueError(
2025-01-07T17:55:37.5731391Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5731559Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5731628Z             )
2025-01-07T17:55:37.5732158Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5732166Z 
2025-01-07T17:55:37.5732352Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5732571Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl14] _
2025-01-07T17:55:37.5732575Z 
2025-01-07T17:55:37.5732852Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5733076Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5733316Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5733321Z 
2025-01-07T17:55:37.5733409Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5733531Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5733600Z         """
2025-01-07T17:55:37.5733692Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5733758Z     
2025-01-07T17:55:37.5733836Z         Parameters
2025-01-07T17:55:37.5733909Z         ----------
2025-01-07T17:55:37.5734056Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5734134Z             Simulation object.
2025-01-07T17:55:37.5734208Z     
2025-01-07T17:55:37.5734277Z         Returns
2025-01-07T17:55:37.5734352Z         -------
2025-01-07T17:55:37.5734484Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5734557Z         """
2025-01-07T17:55:37.5734694Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5734703Z 
2025-01-07T17:55:37.5734847Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5735097Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5735263Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5735414Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5735625Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5735761Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5735957Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5736034Z     return cls(
2025-01-07T17:55:37.5736140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5736149Z 
2025-01-07T17:55:37.5736430Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5736573Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5736749Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5736929Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5737130Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5737237Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5737420Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5737521Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5737684Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5737910Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5738027Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5738032Z 
2025-01-07T17:55:37.5738110Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5738280Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5738388Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5738589Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5738660Z        0.00025518])
2025-01-07T17:55:37.5738821Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5739016Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5739140Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5739266Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5739478Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5739584Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5739825Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5739979Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5740168Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5740286Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5740371Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5740489Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5740580Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5740739Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5740915Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5741042Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5741195Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5741440Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5741567Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5741729Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5741860Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5742070Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5742153Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5742157Z 
2025-01-07T17:55:37.5742228Z     def __init__(
2025-01-07T17:55:37.5742306Z         self,
2025-01-07T17:55:37.5742394Z         last_interaction_type,
2025-01-07T17:55:37.5742479Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5742572Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5742658Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5742743Z         last_interaction_in_r,
2025-01-07T17:55:37.5742813Z         lines_df,
2025-01-07T17:55:37.5742895Z         packet_nus,
2025-01-07T17:55:37.5742972Z         packet_energies,
2025-01-07T17:55:37.5743046Z         r_inner,
2025-01-07T17:55:37.5743133Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5743317Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5743412Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5743497Z         spectrum_wavelength,
2025-01-07T17:55:37.5743567Z         t_inner,
2025-01-07T17:55:37.5743651Z         time_of_simulation,
2025-01-07T17:55:37.5743727Z         time_explosion,
2025-01-07T17:55:37.5743917Z         v_inner,
2025-01-07T17:55:37.5743986Z         v_outer,
2025-01-07T17:55:37.5744060Z         velocity
2025-01-07T17:55:37.5744131Z     ):
2025-01-07T17:55:37.5744197Z         """
2025-01-07T17:55:37.5744429Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5744495Z     
2025-01-07T17:55:37.5744570Z         Parameters
2025-01-07T17:55:37.5744645Z         ----------
2025-01-07T17:55:37.5744744Z         last_interaction_type : np.array
2025-01-07T17:55:37.5744895Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5745013Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5745110Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5745258Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5745347Z             absorption (interaction in)
2025-01-07T17:55:37.5745450Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5745596Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5745689Z             emission (interaction out)
2025-01-07T17:55:37.5745786Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5745935Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5746035Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5746183Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5746271Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5746426Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5746520Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5746678Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5746755Z             unit of Hz
2025-01-07T17:55:37.5746850Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5746983Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5747071Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5747184Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5747298Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5747422Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5747642Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5747766Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5747867Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5748003Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5748091Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5748210Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5748310Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5748419Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5748495Z         """
2025-01-07T17:55:37.5748667Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5748777Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5748874Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5748942Z             {
2025-01-07T17:55:37.5749027Z                 "nus": packet_nus,
2025-01-07T17:55:37.5749154Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5749248Z                 "energies": packet_energies,
2025-01-07T17:55:37.5749365Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5749516Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5749660Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5749803Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5750014Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5750088Z             }
2025-01-07T17:55:37.5750155Z         )
2025-01-07T17:55:37.5750225Z     
2025-01-07T17:55:37.5750311Z         # Save other properties
2025-01-07T17:55:37.5750392Z         self.lines_df = lines_df
2025-01-07T17:55:37.5750477Z         self.r_inner = r_inner
2025-01-07T17:55:37.5750619Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5750759Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5750891Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5751002Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5751098Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5751171Z         )
2025-01-07T17:55:37.5751287Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5751372Z         self.t_inner = t_inner
2025-01-07T17:55:37.5751480Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5751584Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5751663Z         self.v_inner = v_inner
2025-01-07T17:55:37.5751744Z         self.v_outer = v_outer
2025-01-07T17:55:37.5751814Z     
2025-01-07T17:55:37.5751916Z         # First check if both options are provided
2025-01-07T17:55:37.5752192Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5752273Z >           raise ValueError(
2025-01-07T17:55:37.5752417Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5752578Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5752650Z             )
2025-01-07T17:55:37.5752999Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5753004Z 
2025-01-07T17:55:37.5753185Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5753396Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl15] _
2025-01-07T17:55:37.5753405Z 
2025-01-07T17:55:37.5753680Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fe50df474d0>
2025-01-07T17:55:37.5754011Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fe4b62e44d0>
2025-01-07T17:55:37.5754254Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-07T17:55:37.5754259Z 
2025-01-07T17:55:37.5754354Z     @pytest.fixture(scope="class")
2025-01-07T17:55:37.5754466Z     def plotter(self, simulation_simple, request):
2025-01-07T17:55:37.5754537Z         """
2025-01-07T17:55:37.5754623Z         Create a SDECPlotter object.
2025-01-07T17:55:37.5754693Z     
2025-01-07T17:55:37.5754765Z         Parameters
2025-01-07T17:55:37.5754842Z         ----------
2025-01-07T17:55:37.5754983Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-07T17:55:37.5755073Z             Simulation object.
2025-01-07T17:55:37.5755144Z     
2025-01-07T17:55:37.5755212Z         Returns
2025-01-07T17:55:37.5755287Z         -------
2025-01-07T17:55:37.5755419Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-07T17:55:37.5755493Z         """
2025-01-07T17:55:37.5755630Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-07T17:55:37.5755634Z 
2025-01-07T17:55:37.5755781Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-07T17:55:37.5755890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5756050Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-07T17:55:37.5756195Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-07T17:55:37.5756412Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-07T17:55:37.5756544Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-07T17:55:37.5756855Z tardis/visualization/tools/visualization_data.py:217: in from_simulation
2025-01-07T17:55:37.5756931Z     return cls(
2025-01-07T17:55:37.5757037Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-07T17:55:37.5757041Z 
2025-01-07T17:55:37.5757322Z self = <tardis.visualization.tools.visualization_data.VisualizationData object at 0x7fe507ac9640>
2025-01-07T17:55:37.5757459Z last_interaction_type = array([-1,  2, -1, ..., -1,  2, -1])
2025-01-07T17:55:37.5757640Z last_line_interaction_in_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5757813Z last_line_interaction_out_id = array([  -1, 7272,   -1, ...,   -1, 3710,   -1])
2025-01-07T17:55:37.5758015Z last_line_interaction_in_nu = array([0.00000000e+00, 1.20806914e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5758114Z        0.00000000e+00, 2.38249268e+15, 0.00000000e+00])
2025-01-07T17:55:37.5758302Z last_interaction_in_r = array([0.00000000e+00, 1.28110123e+15, 0.00000000e+00, ...,
2025-01-07T17:55:37.5758406Z        0.00000000e+00, 2.08597516e+15, 0.00000000e+00])
2025-01-07T17:55:37.5758566Z lines_df =          atomic_number  ion_number  ...          A_ul  wavelength_cm
2025-01-07T17:55:37.5758685Z line_id                             ...          ...4910e+04   9.978048e-03
2025-01-07T17:55:37.5758799Z 104462              20           0  ...  1.767092e+00   9.999000e-03
2025-01-07T17:55:37.5758804Z 
2025-01-07T17:55:37.5758888Z [29224 rows x 12 columns]
2025-01-07T17:55:37.5759052Z packet_nus = <Quantity [6.47991491e+14, 1.21882338e+15, 5.01857375e+14, ...,
2025-01-07T17:55:37.5759163Z            9.22395611e+14, 2.60025062e+15, 9.24881428e+14] Hz>
2025-01-07T17:55:37.5759355Z packet_energies = array([0.00025855, 0.0002514 , 0.00025544, ..., 0.0002547 , 0.00024439,
2025-01-07T17:55:37.5759430Z        0.00025518])
2025-01-07T17:55:37.5759586Z r_inner = <Quantity [1.235520e+15, 1.286064e+15, 1.336608e+15, 1.387152e+15,
2025-01-07T17:55:37.5759786Z            1.437696e+15, 1.488240e+15, 1.538784e+15...8e+15, 1.892592e+15, 1.943136e+15, 1.993680e+15,
2025-01-07T17:55:37.5759915Z            2.044224e+15, 2.094768e+15, 2.145312e+15, 2.195856e+15] cm>
2025-01-07T17:55:37.5760040Z spectrum_delta_frequency = <Quantity 2.92297647e+12 Hz>
2025-01-07T17:55:37.5760250Z spectrum_frequency_bins = <Quantity [1.49896229e+14, 1.52819205e+14, 1.55742182e+14, ...,
2025-01-07T17:55:37.5760449Z            5.99000321e+15, 5.99292618e+15, 5.99584916e+15] Hz>
2025-01-07T17:55:37.5760700Z spectrum_luminosity_density_lambda = <Quantity [0.00000000e+00, 9.85524844e+36, 2.97509482e+37, ...,
2025-01-07T17:55:37.5760845Z            0.00000000e+00, 0.00000000e+00, 0.00000000e+00] erg s^{-1} \AA^{-1}>
2025-01-07T17:55:37.5761040Z spectrum_wavelength = <Quantity [20000.        , 19617.45953899, 19249.27815207, ...,
2025-01-07T17:55:37.5761155Z              500.73232102,   500.48797578,   500.24386889] Angstrom>
2025-01-07T17:55:37.5761247Z t_inner = <Quantity 10710.56176289 K>
2025-01-07T17:55:37.5761364Z time_of_simulation = <Quantity 6.98602199e-44 s>
2025-01-07T17:55:37.5761455Z time_explosion = <Quantity 1123200. s>
2025-01-07T17:55:37.5761611Z v_inner = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5761779Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.595e+09, 1.640e+09, 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5761910Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09] cm / s>
2025-01-07T17:55:37.5762250Z v_outer = <Quantity [1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09, 1.325e+09,
2025-01-07T17:55:37.5762426Z            1.370e+09, 1.415e+09, 1.460e+09, 1.505e+0..., 1.640e+09, 1.685e+09, 1.730e+09, 1.775e+09,
2025-01-07T17:55:37.5762545Z            1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09, 2.000e+09] cm / s>
2025-01-07T17:55:37.5762708Z velocity = <Quantity [1.100e+09, 1.145e+09, 1.190e+09, 1.235e+09, 1.280e+09,
2025-01-07T17:55:37.5762834Z            1.325e+09, 1.370e+09, 1.415e+09, 1.460e+0..., 1.685e+09, 1.730e+09,
2025-01-07T17:55:37.5763071Z            1.775e+09, 1.820e+09, 1.865e+09, 1.910e+09, 1.955e+09,
2025-01-07T17:55:37.5763149Z            2.000e+09] cm / s>
2025-01-07T17:55:37.5763154Z 
2025-01-07T17:55:37.5763224Z     def __init__(
2025-01-07T17:55:37.5763297Z         self,
2025-01-07T17:55:37.5763379Z         last_interaction_type,
2025-01-07T17:55:37.5763470Z         last_line_interaction_in_id,
2025-01-07T17:55:37.5763562Z         last_line_interaction_out_id,
2025-01-07T17:55:37.5763655Z         last_line_interaction_in_nu,
2025-01-07T17:55:37.5763736Z         last_interaction_in_r,
2025-01-07T17:55:37.5763810Z         lines_df,
2025-01-07T17:55:37.5763883Z         packet_nus,
2025-01-07T17:55:37.5763968Z         packet_energies,
2025-01-07T17:55:37.5764039Z         r_inner,
2025-01-07T17:55:37.5764129Z         spectrum_delta_frequency,
2025-01-07T17:55:37.5764310Z         spectrum_frequency_bins,  # stores _frequency (bin edges) not frequency
2025-01-07T17:55:37.5764412Z         spectrum_luminosity_density_lambda,
2025-01-07T17:55:37.5764504Z         spectrum_wavelength,
2025-01-07T17:55:37.5764574Z         t_inner,
2025-01-07T17:55:37.5764661Z         time_of_simulation,
2025-01-07T17:55:37.5764736Z         time_explosion,
2025-01-07T17:55:37.5764810Z         v_inner,
2025-01-07T17:55:37.5764878Z         v_outer,
2025-01-07T17:55:37.5764951Z         velocity
2025-01-07T17:55:37.5765017Z     ):
2025-01-07T17:55:37.5765093Z         """
2025-01-07T17:55:37.5765321Z         Initialize the SimulationPacketData with required properties of simulation model.
2025-01-07T17:55:37.5765391Z     
2025-01-07T17:55:37.5765462Z         Parameters
2025-01-07T17:55:37.5765538Z         ----------
2025-01-07T17:55:37.5765631Z         last_interaction_type : np.array
2025-01-07T17:55:37.5765786Z             Interaction type (no-interaction: -1, e-scattering: 1 and
2025-01-07T17:55:37.5765901Z             line interaction: 2) values of emitted packets
2025-01-07T17:55:37.5766002Z         last_line_interaction_in_id : np.array
2025-01-07T17:55:37.5766162Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5766252Z             absorption (interaction in)
2025-01-07T17:55:37.5766355Z         last_line_interaction_out_id : np.array
2025-01-07T17:55:37.5766500Z             IDs of atomic lines with which emitted packet had their last
2025-01-07T17:55:37.5766591Z             emission (interaction out)
2025-01-07T17:55:37.5766795Z         last_line_interaction_in_nu : np.array
2025-01-07T17:55:37.5766954Z             Frequency values of the last absorption of emitted packets
2025-01-07T17:55:37.5767052Z         last_line_interaction_in_r : np.array
2025-01-07T17:55:37.5767206Z             Radius of the last interaction experienced by emitted packets
2025-01-07T17:55:37.5767290Z         lines_df : pd.DataFrame
2025-01-07T17:55:37.5767455Z             Data about the atomic lines present in simulation model's plasma
2025-01-07T17:55:37.5767543Z         packet_nus : astropy.Quantity
2025-01-07T17:55:37.5767711Z             Frequency values of the last emission of emitted packets, having
2025-01-07T17:55:37.5767787Z             unit of Hz
2025-01-07T17:55:37.5767882Z         packet_energies : astropy.Quantity
2025-01-07T17:55:37.5768017Z             Energy values of emitted packets, having unit of erg
2025-01-07T17:55:37.5768102Z         r_inner : astropy.Quantity
2025-01-07T17:55:37.5768220Z             Radius of innermost shell, having unit of cm
2025-01-07T17:55:37.5768329Z         spectrum_delta_frequency : astropy.Quantity
2025-01-07T17:55:37.5768454Z             Frequency bin width of spectrum, having unit of Hz
2025-01-07T17:55:37.5768560Z         spectrum_frequency_bins : astropy.Quantity
2025-01-07T17:55:37.5768685Z             Frequency bin edges of spectrum, having unit of Hz
2025-01-07T17:55:37.5768783Z         spectrum_wavelength : astropy.Quantity
2025-01-07T17:55:37.5768923Z             Wavelength values of spectrum, having unit of Angstrom
2025-01-07T17:55:37.5769010Z         t_inner : astropy.Quantity
2025-01-07T17:55:37.5769216Z             Temperature of innermost shell, having unit of K
2025-01-07T17:55:37.5769315Z         time_of_simulation : astropy.Quantity
2025-01-07T17:55:37.5769427Z             Time of simulation, having unit of s (second)
2025-01-07T17:55:37.5769499Z         """
2025-01-07T17:55:37.5769673Z         # Save packets properties in a dataframe for easier data manipulation
2025-01-07T17:55:37.5769784Z         packet_nus = u.Quantity(packet_nus, u.Hz)
2025-01-07T17:55:37.5769874Z         self.packets_df = pd.DataFrame(
2025-01-07T17:55:37.5769946Z             {
2025-01-07T17:55:37.5770025Z                 "nus": packet_nus,
2025-01-07T17:55:37.5770153Z                 "lambdas": packet_nus.to("angstrom", u.spectral()),
2025-01-07T17:55:37.5770242Z                 "energies": packet_energies,
2025-01-07T17:55:37.5770363Z                 "last_interaction_type": last_interaction_type,
2025-01-07T17:55:37.5770512Z                 "last_line_interaction_out_id": last_line_interaction_out_id,
2025-01-07T17:55:37.5770664Z                 "last_line_interaction_in_id": last_line_interaction_in_id,
2025-01-07T17:55:37.5770806Z                 "last_line_interaction_in_nu": last_line_interaction_in_nu,
2025-01-07T17:55:37.5770917Z                 "last_interaction_in_r": last_interaction_in_r,
2025-01-07T17:55:37.5770989Z             }
2025-01-07T17:55:37.5771056Z         )
2025-01-07T17:55:37.5771132Z     
2025-01-07T17:55:37.5771216Z         # Save other properties
2025-01-07T17:55:37.5771302Z         self.lines_df = lines_df
2025-01-07T17:55:37.5771381Z         self.r_inner = r_inner
2025-01-07T17:55:37.5771525Z         self.spectrum_delta_frequency = spectrum_delta_frequency
2025-01-07T17:55:37.5771661Z         self.spectrum_frequency_bins = spectrum_frequency_bins
2025-01-07T17:55:37.5771801Z         self.spectrum_frequency = spectrum_frequency_bins[:-1]
2025-01-07T17:55:37.5771909Z         self.spectrum_luminosity_density_lambda = (
2025-01-07T17:55:37.5772175Z             spectrum_luminosity_density_lambda
2025-01-07T17:55:37.5772249Z         )
2025-01-07T17:55:37.5772373Z         self.spectrum_wavelength = spectrum_wavelength
2025-01-07T17:55:37.5772457Z         self.t_inner = t_inner
2025-01-07T17:55:37.5772567Z         self.time_of_simulation = time_of_simulation
2025-01-07T17:55:37.5772664Z         self.time_explosion = time_explosion
2025-01-07T17:55:37.5772859Z         self.v_inner = v_inner
2025-01-07T17:55:37.5772945Z         self.v_outer = v_outer
2025-01-07T17:55:37.5773011Z     
2025-01-07T17:55:37.5773117Z         # First check if both options are provided
2025-01-07T17:55:37.5773290Z         if velocity is not None and (v_inner is not None or v_outer is not None):
2025-01-07T17:55:37.5773374Z >           raise ValueError(
2025-01-07T17:55:37.5773514Z                 "Cannot specify both velocity and (v_inner, v_outer). "
2025-01-07T17:55:37.5773680Z                 "Please provide either velocity OR the (v_inner, v_outer) pair."
2025-01-07T17:55:37.5773747Z             )
2025-01-07T17:55:37.5774107Z E           ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5774112Z 
2025-01-07T17:55:37.5774287Z tardis/visualization/tools/visualization_data.py:106: ValueError
2025-01-07T17:55:37.5774400Z =============================== warnings summary ===============================
2025-01-07T17:55:37.5774518Z tardis/io/configuration/config_validator.py:6
2025-01-07T17:55:37.5774630Z tardis/io/configuration/config_validator.py:6
2025-01-07T17:55:37.5774946Z   /home/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-01-07T17:55:37.5775045Z   
2025-01-07T17:55:37.5776203Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-01-07T17:55:37.5776320Z 
2025-01-07T17:55:37.5776564Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-01-07T17:55:37.5776923Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-01-07T17:55:37.5776998Z   
2025-01-07T17:55:37.5777151Z   Jupyter is migrating its paths to use standard platformdirs
2025-01-07T17:55:37.5777306Z   given by the platformdirs library.  To remove this warning and
2025-01-07T17:55:37.5777471Z   see the appropriate new directories, set the environment variable
2025-01-07T17:55:37.5777618Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-01-07T17:55:37.5777771Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-01-07T17:55:37.5777775Z 
2025-01-07T17:55:37.5782201Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-01-07T17:55:37.5782519Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-07T17:55:37.5782741Z   /home/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-01-07T17:55:37.5782816Z   
2025-01-07T17:55:37.5782881Z   
2025-01-07T17:55:37.5783097Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-07T17:55:37.5783361Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-07T17:55:37.5783368Z 
2025-01-07T17:55:37.5783572Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-01-07T17:55:37.5783800Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-01-07T17:55:37.5784042Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-01-07T17:55:37.5784227Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-01-07T17:55:37.5784545Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-01-07T17:55:37.5784619Z   
2025-01-07T17:55:37.5784729Z   The current CMFGEN model parser is deprecated
2025-01-07T17:55:37.5784733Z 
2025-01-07T17:55:37.5784852Z tardis/io/tests/test_model_reader.py: 1 warning
2025-01-07T17:55:37.5785034Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-01-07T17:55:37.5785529Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-01-07T17:55:37.5785601Z   
2025-01-07T17:55:37.5785721Z   The current CMFGEN model parser is deprecated
2025-01-07T17:55:37.5785725Z 
2025-01-07T17:55:37.5785934Z tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances
2025-01-07T17:55:37.5786311Z   /home/runner/work/tardis/tardis/tardis/transport/montecarlo/montecarlo_main_loop.py:123: NumbaTypeSafetyWarning:
2025-01-07T17:55:37.5786383Z   
2025-01-07T17:55:37.5786802Z   [1m[1m[1munsafe cast from uint64 to int64. Precision may be lost.[0m[0m[0m
2025-01-07T17:55:37.5786810Z 
2025-01-07T17:55:37.5786918Z tardis/model/tests/test_base.py: 6 warnings
2025-01-07T17:55:37.5787036Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-07T17:55:37.5787216Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-07T17:55:37.5787491Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-01-07T17:55:37.5787565Z   
2025-01-07T17:55:37.5787670Z   v_inner_boundary < 0, assuming default value
2025-01-07T17:55:37.5787674Z 
2025-01-07T17:55:37.5787778Z tardis/model/tests/test_base.py: 6 warnings
2025-01-07T17:55:37.5787894Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-07T17:55:37.5788075Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-07T17:55:37.5788350Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-01-07T17:55:37.5788416Z   
2025-01-07T17:55:37.5788523Z   v_outer_boundary < 0, assuming default value
2025-01-07T17:55:37.5788666Z 
2025-01-07T17:55:37.5789133Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-01-07T17:55:37.5789441Z   /home/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-01-07T17:55:37.5789506Z   
2025-01-07T17:55:37.5789792Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-01-07T17:55:37.5790247Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-01-07T17:55:37.5790318Z   
2025-01-07T17:55:37.5790843Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-01-07T17:55:37.5790851Z 
2025-01-07T17:55:37.5790997Z tardis/plasma/tests/test_complete_plasmas.py: 20 warnings
2025-01-07T17:55:37.5791285Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-07T17:55:37.5791350Z   
2025-01-07T17:55:37.5791443Z   Property "atomic_mass" not found
2025-01-07T17:55:37.5791448Z 
2025-01-07T17:55:37.5791886Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues_norm_factor]
2025-01-07T17:55:37.5792377Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues_norm_factor]
2025-01-07T17:55:37.5792664Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-07T17:55:37.5792728Z   
2025-01-07T17:55:37.5792830Z   Property "j_blues_norm_factor" not found
2025-01-07T17:55:37.5792835Z 
2025-01-07T17:55:37.5793247Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blue_estimator]
2025-01-07T17:55:37.5793627Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blue_estimator]
2025-01-07T17:55:37.5793901Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-07T17:55:37.5793971Z   
2025-01-07T17:55:37.5794173Z   Property "j_blue_estimator" not found
2025-01-07T17:55:37.5794183Z 
2025-01-07T17:55:37.5794575Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-volume]
2025-01-07T17:55:37.5794921Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-volume]
2025-01-07T17:55:37.5795193Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-07T17:55:37.5795263Z   
2025-01-07T17:55:37.5795350Z   Property "volume" not found
2025-01-07T17:55:37.5795358Z 
2025-01-07T17:55:37.5795755Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-r_inner]
2025-01-07T17:55:37.5796088Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-r_inner]
2025-01-07T17:55:37.5796371Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-07T17:55:37.5796441Z   
2025-01-07T17:55:37.5796525Z   Property "r_inner" not found
2025-01-07T17:55:37.5796529Z 
2025-01-07T17:55:37.5796745Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-01-07T17:55:37.5796949Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-01-07T17:55:37.5797155Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-01-07T17:55:37.5797390Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-01-07T17:55:37.5797569Z   
2025-01-07T17:55:37.5797758Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-01-07T17:55:37.5797763Z 
2025-01-07T17:55:37.5797975Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-07T17:55:37.5798177Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:70: UserWarning:
2025-01-07T17:55:37.5798244Z   
2025-01-07T17:55:37.5798576Z   SpectrumSolver.spectrum_virtual_packets is zero. Please run the montecarlo simulation with no_of_virtual_packets > 0
2025-01-07T17:55:37.5798580Z 
2025-01-07T17:55:37.5798788Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-07T17:55:37.5798988Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:111: UserWarning:
2025-01-07T17:55:37.5799052Z   
2025-01-07T17:55:37.5799408Z   SpectrumSolver.integrator: The FormalIntegrator is not yet available.Please run the montecarlo simulation at least once.
2025-01-07T17:55:37.5799417Z 
2025-01-07T17:55:37.5799630Z tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_vpacket_volley
2025-01-07T17:55:37.5799748Z   <string>:3: NumbaPendingDeprecationWarning:
2025-01-07T17:55:37.5799813Z   
2025-01-07T17:55:37.5800882Z   [1m[1mCode using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors
2025-01-07T17:55:37.5800964Z   Exception origin:
2025-01-07T17:55:37.5801218Z     File "/home/runner/micromamba/envs/tardis/lib/python3.12/inspect.py", line 3180, in _bind
2025-01-07T17:55:37.5801311Z       raise TypeError(msg) from None
2025-01-07T17:55:37.5801401Z   [0m[0m
2025-01-07T17:55:37.5801405Z 
2025-01-07T17:55:37.5801766Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:37.5802316Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:37.5802677Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:37.5803148Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:37.5803494Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:37.5803838Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:37.5804191Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-07T17:55:37.5804261Z   
2025-01-07T17:55:37.5804451Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-01-07T17:55:37.5804632Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-07T17:55:37.5804874Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-07T17:55:37.5804884Z 
2025-01-07T17:55:37.5805232Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:37.5805583Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:37.5805933Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-07T17:55:37.5806003Z   
2025-01-07T17:55:37.5806180Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-01-07T17:55:37.5806354Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-07T17:55:37.5806586Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-07T17:55:37.5806694Z 
2025-01-07T17:55:37.5807052Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-07T17:55:37.5807404Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-07T17:55:37.5807468Z   
2025-01-07T17:55:37.5807649Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-01-07T17:55:37.5807815Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-07T17:55:37.5808052Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-07T17:55:37.5808056Z 
2025-01-07T17:55:37.5808483Z tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu]
2025-01-07T17:55:37.5808815Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/qgridnext/grid.py:825: DeprecationWarning:
2025-01-07T17:55:37.5808884Z   
2025-01-07T17:55:37.5809165Z   QgridWidget._grid_options_changed is deprecated in traitlets 4.1: use @observe and @unobserve instead.
2025-01-07T17:55:37.5809170Z 
2025-01-07T17:55:37.5809433Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-07T17:55:37.5809643Z   /home/runner/work/tardis/tardis/tardis/io/util.py:289: PerformanceWarning:
2025-01-07T17:55:37.5809711Z   
2025-01-07T17:55:37.5809776Z   
2025-01-07T17:55:37.5809994Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-07T17:55:37.5810254Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-07T17:55:37.5810258Z 
2025-01-07T17:55:37.5810519Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-07T17:55:37.5810720Z   /home/runner/work/tardis/tardis/tardis/io/util.py:292: PerformanceWarning:
2025-01-07T17:55:37.5810789Z   
2025-01-07T17:55:37.5810864Z   
2025-01-07T17:55:37.5811063Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-07T17:55:37.5811243Z   map directly to c-types [inferred_type->mixed,key->values] [items->None]
2025-01-07T17:55:37.5811248Z 
2025-01-07T17:55:37.5811497Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-07T17:55:37.5811823Z   /home/runner/work/tardis/tardis/tardis/spectrum/formal_integral.py:398: UserWarning:
2025-01-07T17:55:37.5811892Z   
2025-01-07T17:55:37.5812258Z   The number of interpolate_shells was not specified. The value was set to 80.
2025-01-07T17:55:37.5812264Z 
2025-01-07T17:55:37.5812459Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-01-07T17:55:37.5812463Z 
2025-01-07T17:55:37.5812628Z ---------- coverage: platform linux, python 3.12.4-final-0 -----------
2025-01-07T17:55:37.5812752Z Coverage HTML written to dir coverage_html_report
2025-01-07T17:55:37.5812851Z Coverage XML written to file coverage.xml
2025-01-07T17:55:37.5812859Z 
2025-01-07T17:55:37.5812987Z =========================== short test summary info ============================
2025-01-07T17:55:37.5813708Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_species_list] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5814416Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_keep_colour] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5815130Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_species_mapped] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5815913Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5816826Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_colors] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5817612Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-new_bin_edges] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5818384Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5819166Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_colors] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5819949Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-new_bin_edges] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5820720Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5821500Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_colors] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5822485Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-new_bin_edges] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5823264Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5824054Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_colors] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5824840Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-new_bin_edges] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5829845Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5830705Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_colors] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5831704Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-new_bin_edges] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5832630Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5833428Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5834214Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-new_bin_edges] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5834987Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5835764Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_colors] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5836539Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-new_bin_edges] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5837307Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5838214Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5838998Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-new_bin_edges] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5839734Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5840484Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5841205Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl2] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5842061Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl3] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5842990Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5843723Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5844469Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl6] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5845194Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl7] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5845907Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl0] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5846623Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl1] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5847323Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl2] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5848028Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl3] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5848840Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl4] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5849572Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl5] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5850284Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl6] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5850998Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl7] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5851734Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5852645Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5853382Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply2] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5854237Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply3] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5854976Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5855701Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5856436Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply6] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5857173Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply7] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5857891Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_full_species_list] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5858598Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_species_list] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5859306Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_keep_colour] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5860208Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5860999Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5861785Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5862682Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5863474Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5864257Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5865165Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5865958Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5866736Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5867519Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5868317Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5869106Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5869896Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5870681Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5871583Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5872472Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5873217Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5873968Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5874707Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5875465Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5876321Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5877065Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5877798Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5878535Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5879293Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5880026Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5880774Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5881520Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5882551Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5883313Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5884052Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5884798Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5885513Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl0] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5886218Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl1] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5886927Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl2] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5887746Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl3] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5888454Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5889165Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl5] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5889879Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl6] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5890887Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl7] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5892198Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl8] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5892920Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl9] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5893648Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl10] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5894508Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl11] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5895233Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl12] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5895949Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl13] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5896673Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl14] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5897384Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl15] - ValueError: Cannot specify both velocity and (v_inner, v_outer). Please provide either velocity OR the (v_inner, v_outer) pair.
2025-01-07T17:55:37.5897668Z = 1336 passed, 329 skipped, 2 deselected, 19 xfailed, 8 xpassed, 90 warnings, 102 errors in 727.16s (0:12:07) =
2025-01-07T17:55:39.3296291Z ##[error]Process completed with exit code 1.
2025-01-07T17:55:39.3367989Z Post job cleanup.
2025-01-07T17:55:39.3403651Z Post job cleanup.
2025-01-07T17:55:39.4737142Z Will use pre-installed micromamba at /home/runner/micromamba-bin/micromamba
2025-01-07T17:55:39.4744289Z Removing micromamba run shell ...
2025-01-07T17:55:39.4748344Z ##[group]Deinitialize micromamba for bash
2025-01-07T17:55:39.4767201Z [command]/home/runner/micromamba-bin/micromamba shell deinit -s bash -r /home/runner/micromamba --log-level warning --rc-file /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-07T17:55:39.4870737Z Resetting RC file "/home/runner/.bashrc"
2025-01-07T17:55:39.4871237Z Deleting config for root prefix 
2025-01-07T17:55:39.4871641Z Clearing mamba executable environment variable
2025-01-07T17:55:39.4874545Z Removing the following in your "/home/runner/.bashrc" file
2025-01-07T17:55:39.4875100Z # >>> mamba initialize >>>
2025-01-07T17:55:39.4875368Z ...
2025-01-07T17:55:39.4875536Z # <<< mamba initialize <<<
2025-01-07T17:55:39.4904661Z Removing mamba initialize block from .bash_profile
2025-01-07T17:55:39.4920245Z ##[endgroup]
2025-01-07T17:55:39.4924729Z Removing environment tardis from auto-activate bash ...
2025-01-07T17:55:39.5053224Z Post job cleanup.
2025-01-07T17:55:39.5090177Z Post job cleanup.
2025-01-07T17:55:39.6065409Z [command]/usr/bin/git version
2025-01-07T17:55:39.6101181Z git version 2.47.1
2025-01-07T17:55:39.6150051Z Temporarily overriding HOME='/home/runner/work/_temp/56a3f173-2b09-4b6f-badb-905f7cf86617' before making global git config changes
2025-01-07T17:55:39.6151384Z Adding repository directory to the temporary git global config as a safe directory
2025-01-07T17:55:39.6156438Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis/tardis-regression-data
2025-01-07T17:55:39.6190258Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-07T17:55:39.6222709Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-07T17:55:39.6458423Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-07T17:55:39.6481419Z http.https://github.com/.extraheader
2025-01-07T17:55:39.6495053Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-01-07T17:55:39.6528334Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-07T17:55:39.6876379Z Post job cleanup.
2025-01-07T17:55:39.7825657Z [command]/usr/bin/git version
2025-01-07T17:55:39.7863648Z git version 2.47.1
2025-01-07T17:55:39.7913155Z Temporarily overriding HOME='/home/runner/work/_temp/9f149dfe-8f46-4234-b7d7-d0722a098d53' before making global git config changes
2025-01-07T17:55:39.7914504Z Adding repository directory to the temporary git global config as a safe directory
2025-01-07T17:55:39.7919168Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis
2025-01-07T17:55:39.7954744Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-07T17:55:39.7986946Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-07T17:55:39.8221637Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-07T17:55:39.8241664Z http.https://github.com/.extraheader
2025-01-07T17:55:39.8254357Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-01-07T17:55:39.8286466Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-07T17:55:39.8614472Z Cleaning up orphan processes
